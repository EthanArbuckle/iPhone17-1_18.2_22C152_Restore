uint64_t sub_2562281D4()
{
  return MEMORY[0x270FA2498](sub_2562281F0, 0, 0);
}

uint64_t sub_2562281F0()
{
  sub_256228280();
  swift_allocError();
  unsigned char *v1 = 1;
  swift_willThrow();
  v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_256228280()
{
  unint64_t result = qword_269F53B88;
  if (!qword_269F53B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53B88);
  }
  return result;
}

uint64_t SpeakerIdSamplingReporter.deinit()
{
  return v0;
}

uint64_t SpeakerIdSamplingReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_2562282F0()
{
  unint64_t result = qword_269F53B90;
  if (!qword_269F53B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53B90);
  }
  return result;
}

uint64_t sub_256228344(uint64_t a1)
{
  v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t sub_25622844C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t type metadata accessor for SpeakerIdSamplingReporter()
{
  return self;
}

uint64_t method lookup function for SpeakerIdSamplingReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingReporter);
}

uint64_t dispatch thunk of SpeakerIdSamplingReporter.report(_:)(uint64_t a1)
{
  v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

void type metadata accessor for SISchemaProgramCode(uint64_t a1)
{
}

void type metadata accessor for ODDSiriSchemaODDExperimentDigestType(uint64_t a1)
{
}

void type metadata accessor for SISchemaIERouting(uint64_t a1)
{
}

void type metadata accessor for EXPSchemaEXPTreatmentAllocationStatus(uint64_t a1)
{
}

void type metadata accessor for SISchemaResponseCategory(uint64_t a1)
{
}

void type metadata accessor for ORCHSchemaORCHSiriNlMode(uint64_t a1)
{
}

void type metadata accessor for ORCHSchemaORCHSiriAsrMode(uint64_t a1)
{
}

void type metadata accessor for SISchemaAssistantViewMode(uint64_t a1)
{
}

void type metadata accessor for SISchemaDataSharingOptInState(uint64_t a1)
{
}

void type metadata accessor for ODDSiriSchemaODDDeviceCohortType(uint64_t a1)
{
}

void type metadata accessor for ODDSiriSchemaODDDataAvailabilityState(uint64_t a1)
{
}

void type metadata accessor for ODDSiriSchemaODDDeviceSegmentType(uint64_t a1)
{
}

void type metadata accessor for SISchemaTriggerPhrase(uint64_t a1)
{
}

void type metadata accessor for ORCHSchemaORCHRequestCancellationReason(uint64_t a1)
{
}

void type metadata accessor for ASRSchemaASRDatapackTask(uint64_t a1)
{
}

void type metadata accessor for MHSchemaMHAssistantDaemonAudioSource(uint64_t a1)
{
}

void type metadata accessor for MHSchemaMHASRAudioCodec(uint64_t a1)
{
}

void type metadata accessor for ORCHSchemaORCHMotionActivity(uint64_t a1)
{
}

void type metadata accessor for SISchemaInvocationSource(uint64_t a1)
{
}

void sub_2562287FC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

BOOL sub_256228844(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_256228858(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_256228860(void *a1@<X8>)
{
  *a1 = *v1;
}

_DWORD *sub_25622886C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_25622887C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_256228888@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t SpeakerIdManifestReporter.deinit()
{
  return v0;
}

uint64_t SpeakerIdManifestReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2562288C0(uint64_t a1)
{
  v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t SpeakerIdManifestSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(void *)(v4 + 16) = a2;
  return v4;
}

uint64_t SpeakerIdManifestSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(void *)(v2 + 16) = a2;
  return v2;
}

uint64_t sub_256228AD4(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_256228AF8, 0, 0);
}

uint64_t sub_256228AF8()
{
  v32 = v0;
  v0[6] = OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger;
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdManifestSELFReporter: Reporter invoked", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2562E3410();
  os_log_type_t v5 = sub_2562E37F0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[5];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    v0[3] = *(void *)(v7 + 16);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v4, v5, "#SpeakerIdManifestSELFReporter: result %ld", v8, 0xCu);
    MEMORY[0x25A2A5190](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  v9 = sub_2562E3410();
  os_log_type_t v10 = sub_2562E37F0();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[5];
  if (v11)
  {
    v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53C58);
    uint64_t v16 = MEMORY[0x25A2A4430](v12, v15);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    v0[2] = sub_256229738(v16, v18, &v31);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v9, v10, "#SpeakerIdManifestSELFReporter: result.selection %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v14, -1, -1);
    MEMORY[0x25A2A5190](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = *(void *)(v0[5] + 16);
  v0[7] = v19;
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    while (1)
    {
      v0[8] = v20;
      uint64_t v21 = v0[4];
      v22 = *(void **)(v0[5] + 8 * v20 + 32);
      v0[9] = v22;
      uint64_t v23 = v0[6];
      if (v22) {
        break;
      }
      v24 = sub_2562E3410();
      os_log_type_t v25 = sub_2562E37E0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_256226000, v24, v25, "#SpeakerIdManifestSELFReporter: SpeakerId Sampling Manifest Event is nil", v26, 2u);
        MEMORY[0x25A2A5190](v26, -1, -1);
      }

      uint64_t v20 = v0[8] + 1;
      if (v20 == v0[7])
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    id v29 = v22;
    v30 = (void *)swift_task_alloc();
    v0[10] = v30;
    void *v30 = v0;
    v30[1] = sub_256228F64;
    return sub_256249DE0((uint64_t)v29, v21 + v23);
  }
  else
  {
LABEL_16:
    v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_256228F64()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_256229244;
  }
  else
  {
    os_log_type_t v2 = sub_256229080;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256229080()
{
  uint64_t v1 = (void *)v0[9];

  uint64_t v2 = v0[8] + 1;
  if (v2 == v0[7])
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    while (1)
    {
      v0[8] = v2;
      uint64_t v5 = v0[4];
      BOOL v6 = *(void **)(v0[5] + 8 * v2 + 32);
      v0[9] = v6;
      uint64_t v7 = v0[6];
      if (v6) {
        break;
      }
      v8 = sub_2562E3410();
      os_log_type_t v9 = sub_2562E37E0();
      if (os_log_type_enabled(v8, v9))
      {
        os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v10 = 0;
        _os_log_impl(&dword_256226000, v8, v9, "#SpeakerIdManifestSELFReporter: SpeakerId Sampling Manifest Event is nil", v10, 2u);
        MEMORY[0x25A2A5190](v10, -1, -1);
      }

      uint64_t v2 = v0[8] + 1;
      if (v2 == v0[7]) {
        goto LABEL_2;
      }
    }
    id v11 = v6;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[10] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_256228F64;
    return sub_256249DE0((uint64_t)v11, v5 + v7);
  }
}

uint64_t sub_256229244()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdManifestSELFReporter: Unable to report SpeakerId Sampling Manifest Events", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = *(void **)(v0 + 72);

  swift_willThrow();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_256229338()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t SpeakerIdManifestSELFReporter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SpeakerIdManifestSELFReporter.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2562294C0(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_2562294D0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_25622950C(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t sub_25622951C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_256229550(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_2562E38F0();
  *a1 = v5;
  return result;
}

void *sub_2562295B0(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_2562E3B10();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_256229654(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25622967C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_256229738(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_2562E38F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_256229738(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_256229AC4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_256229CD0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_256229CD0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

unint64_t sub_256229810()
{
  unint64_t result = qword_269F53C60;
  if (!qword_269F53C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53C60);
  }
  return result;
}

uint64_t type metadata accessor for SpeakerIdManifestReporter()
{
  return self;
}

uint64_t method lookup function for SpeakerIdManifestReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdManifestReporter);
}

uint64_t dispatch thunk of SpeakerIdManifestReporter.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t sub_2562299A4()
{
  return type metadata accessor for SpeakerIdManifestSELFReporter();
}

uint64_t type metadata accessor for SpeakerIdManifestSELFReporter()
{
  uint64_t result = qword_269F53C78;
  if (!qword_269F53C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2562299F8()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SpeakerIdManifestSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdManifestSELFReporter);
}

uint64_t dispatch thunk of SpeakerIdManifestSELFReporter.__allocating_init(logger:reportingService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_256229AC4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2562E3900();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_256229D2C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2562E3A40();
  if (!v8)
  {
    sub_2562E3AB0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2562E3B10();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_256229CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_256229D2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_256229DC4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_256229F3C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_256229F3C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_256229DC4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2562C00F0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2562E3A10();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2562E3AB0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2562E3650();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2562E3B10();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2562E3AB0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_256229F3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53C88);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

Swift::Bool __swiftcall inStoreDemoMode()()
{
  uint64_t v0 = (__CFString *)sub_2562E3550();
  uint64_t v1 = (__CFString *)sub_2562E3550();
  uint64_t v2 = (Boolean *)swift_slowAlloc();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, v2);
  LODWORD(v2) = *v2;

  if (v2) {
    BOOL v4 = AppBooleanValue == 0;
  }
  else {
    BOOL v4 = 1;
  }
  return !v4;
}

uint64_t (*static SiriUserDefinedFunctions.regexLike.getter())()
{
  return sub_25622A138;
}

uint64_t sub_25622A158(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53C90);
  MEMORY[0x270FA5388]();
  unint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53C98);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388]();
  int64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  sub_256229CD0(a1 + 32, (uint64_t)v14);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return 2;
  }
  if (v9 < 2) {
    goto LABEL_10;
  }
  uint64_t v11 = v13[2];
  uint64_t v10 = v13[3];
  sub_256229CD0(a1 + 64, (uint64_t)v14);
  if (swift_dynamicCast())
  {
    sub_2562E3160();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    v14[0] = v11;
    v14[1] = v10;
    sub_25622A438();
    sub_25622A48C();
    char v12 = sub_2562E34F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    return v12 & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 2;
  }
}

uint64_t sub_25622A3D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25622A438()
{
  unint64_t result = qword_269F53CA0;
  if (!qword_269F53CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53CA0);
  }
  return result;
}

unint64_t sub_25622A48C()
{
  unint64_t result = qword_269F53CA8;
  if (!qword_269F53CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F53C98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53CA8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25622A530()
{
  return MEMORY[0x270FA2498](sub_25622A54C, 0, 0);
}

uint64_t sub_25622A54C()
{
  return sub_2562E3AC0();
}

uint64_t RequestWithNoAssetReporter.deinit()
{
  return v0;
}

uint64_t RequestWithNoAssetReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_25622A5E8()
{
  unint64_t result = qword_269F53CB8;
  if (!qword_269F53CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53CB8);
  }
  return result;
}

uint64_t sub_25622A63C(uint64_t a1)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t type metadata accessor for RequestWithNoAssetReporter()
{
  return self;
}

uint64_t method lookup function for RequestWithNoAssetReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RequestWithNoAssetReporter);
}

uint64_t dispatch thunk of RequestWithNoAssetReporter.report(_:)(uint64_t a1)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

ValueMetadata *type metadata accessor for BootToAssetDataRecord()
{
  return &type metadata for BootToAssetDataRecord;
}

uint64_t sub_25622A894()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_25622A934()
{
  return type metadata accessor for BootToAssetDataProvider();
}

uint64_t type metadata accessor for BootToAssetDataProvider()
{
  uint64_t result = qword_269F53CD8;
  if (!qword_269F53CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25622A988()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_25622AA1C()
{
  unint64_t result = qword_269F53CE8;
  if (!qword_269F53CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53CE8);
  }
  return result;
}

uint64_t sub_25622AA70()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_25622AA94, 0, 0);
}

uint64_t sub_25622AA94()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: ODDAssetAvailabilityFromBoodDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t RequestWithNoAssetResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestWithNoAssetResults.eventStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*RequestWithNoAssetResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t RequestWithNoAssetResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestWithNoAssetResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*RequestWithNoAssetResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t RequestWithNoAssetResults.combinedRequestNoAssetData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestWithNoAssetResults.combinedRequestNoAssetData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*RequestWithNoAssetResults.combinedRequestNoAssetData.modify())()
{
  return nullsub_1;
}

uint64_t sub_25622AC74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25622AC7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedRequestNoAssetData.requestWithNoAssetData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedRequestNoAssetData.requestWithNoAssetData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*CombinedRequestNoAssetData.requestWithNoAssetData.modify())()
{
  return nullsub_1;
}

uint64_t CombinedRequestNoAssetData.eventMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CombinedRequestNoAssetData(0) + 20);

  return sub_25622AD3C(v3, a1);
}

uint64_t type metadata accessor for CombinedRequestNoAssetData(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F53D70);
}

uint64_t sub_25622AD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CombinedRequestNoAssetData.eventMetadata.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CombinedRequestNoAssetData(0) + 20);

  return sub_25622ADE4(a1, v3);
}

uint64_t sub_25622ADE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*CombinedRequestNoAssetData.eventMetadata.modify())()
{
  return nullsub_1;
}

uint64_t RequestWithNoAssetsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:userDefaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_2562E3020();
  uint64_t v11 = v10 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  sub_25622F514(a2, v10 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v10 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_bookmarkService) = a3;
  uint64_t v13 = v10 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_oddId;
  uint64_t v14 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  *(void *)(v10 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_defaults) = a5;
  return v10;
}

uint64_t RequestWithNoAssetsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:userDefaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2562E3020();
  uint64_t v11 = v5 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  sub_25622F514(a2, v5 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v5 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_bookmarkService) = a3;
  uint64_t v13 = v5 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_oddId;
  uint64_t v14 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  *(void *)(v5 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_defaults) = a5;
  return v5;
}

uint64_t sub_25622B0E8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return MEMORY[0x270FA2498](sub_25622B130, 0, 0);
}

uint64_t sub_25622B130()
{
  v64 = v0;
  uint64_t v1 = v0[6] + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_logger;
  swift_retain_n();
  uint64_t v61 = v1;
  os_log_type_t v2 = sub_2562E3410();
  os_log_type_t v3 = sub_2562E37F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v63 = v5;
    sub_2562E2FD0();
    sub_25622F318((unint64_t *)&qword_269F53D50, MEMORY[0x270FA95C8]);
    uint64_t v6 = sub_2562E3C80();
    v0[4] = sub_256229738(v6, v7, &v63);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_256226000, v2, v3, "SQL calculator invoked: RequestWithNoAssetsCalculator %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v5, -1, -1);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = v0[6] + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_sqlFileURL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v9 = swift_task_alloc();
  sub_25622F360(v8, v9, &qword_269F53D10);
  uint64_t v10 = sub_2562E2E30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v9, 1, v10);
  sub_25622F3C4(v9, &qword_269F53D10);
  swift_task_dealloc();
  if (v13 == 1)
  {
    uint64_t v14 = sub_2562E3410();
    os_log_type_t v15 = sub_2562E3810();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_256226000, v14, v15, "No URL provided for the sql file", v16, 2u);
      MEMORY[0x25A2A5190](v16, -1, -1);
    }

    sub_25622CE3C();
    swift_allocError();
    *unint64_t v17 = 9;
    swift_willThrow();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v18 = swift_task_alloc();
    sub_25622F360(v8, v18, &qword_269F53D10);
    uint64_t result = v12(v18, 1, v10);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    sub_2562E35A0();
    swift_task_alloc();
    sub_2562E3590();
    sub_2562E3530();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v18, v10);
    swift_task_dealloc();
    uint64_t v21 = (void *)sub_2562E3110();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D40);
    sub_2562E3300();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2562E4C80;
    id v22 = v21;
    uint64_t v23 = sub_2562E3310();
    uint64_t v25 = v24;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    *(void *)(v26 + 24) = v25;
    sub_2562E32F0();
    sub_2562E32F0();
    id v27 = objc_allocWithZone((Class)sub_2562E3260());
    v60 = v22;
    v59 = (void *)sub_2562E3230();
    uint64_t v28 = sub_2562E3250();
    swift_bridgeObjectRelease();
    id v29 = (void *)sub_2562E3290();
    if (v29)
    {
      v30 = v29;
      id v31 = v29;
      id v32 = v30;
      uint64_t v33 = sub_2562E3410();
      os_log_type_t v34 = sub_2562E3800();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = (void *)swift_slowAlloc();
        *(_DWORD *)v35 = 138412290;
        id v37 = v30;
        uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
        v0[3] = v38;
        sub_2562E38F0();
        void *v36 = v38;

        _os_log_impl(&dword_256226000, v33, v34, "%@", v35, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v36, -1, -1);
        MEMORY[0x25A2A5190](v35, -1, -1);
      }
      else
      {
      }
    }
    v39 = sub_25628BDB4(v28, v61);
    swift_bridgeObjectRetain();
    v40 = sub_2562E3410();
    os_log_type_t v41 = sub_2562E37F0();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v42 = 134217984;
      v0[2] = v39[2];
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v40, v41, "RequestWithNoAssetsCalculator query yielded %ld results", v42, 0xCu);
      MEMORY[0x25A2A5190](v42, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v43 = sub_2562E2F80();
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = swift_task_alloc();
    sub_2562E30F0();
    uint64_t v58 = sub_2562E30B0();
    uint64_t v62 = v43;
    v57 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v57(v45, v43);
    swift_task_dealloc();
    uint64_t v46 = swift_task_alloc();
    sub_2562E30A0();
    if (qword_269F53B18 != -1) {
      swift_once();
    }
    uint64_t v47 = v0[7];
    uint64_t v55 = v0[6];
    v48 = (uint64_t *)v0[5];
    v49 = (void *)qword_269F5E468;
    swift_bridgeObjectRetain();
    id v50 = v49;
    uint64_t v51 = sub_25622D048(v39, v50);

    swift_bridgeObjectRelease();
    uint64_t v52 = swift_task_alloc();
    sub_2562E2E90();
    v53 = (void *)swift_task_alloc();
    v53[2] = v55;
    v53[3] = v52;
    v53[4] = v46;
    v53[5] = v47;
    uint64_t v56 = sub_25622D434(v51, (void (*)(char *, uint64_t))sub_25622D428);
    v57(v52, v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();

    swift_release();
    v57(v46, v62);
    uint64_t v54 = MEMORY[0x263F8EE78];
    uint64_t *v48 = v58;
    v48[1] = v54;
    v48[2] = v56;
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_25622BC98@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1();
  uint64_t v5 = v4;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DD0);
  a2[3] = result;
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_25622BCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = sub_25622A158(a1);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DC8);
  *(void *)(a2 + 24) = result;
  *(unsigned char *)a2 = v3;
  return result;
}

uint64_t sub_25622BD24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t **a6@<X8>)
{
  v94 = a5;
  v96 = a4;
  v97 = a2;
  uint64_t v9 = sub_2562E2F80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  ((void (*)(void))MEMORY[0x270FA5388])();
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  int v13 = (char *)&v86 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  ((void (*)(void))MEMORY[0x270FA5388])();
  os_log_type_t v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25622F360(a1, (uint64_t)v15, &qword_269F53DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    sub_25622F3C4((uint64_t)v15, &qword_269F53DB0);
    uint64_t v16 = type metadata accessor for CombinedRequestNoAssetData(0);
    return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a6, 1, 1, v16);
  }
  uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))((char *)&v86 - v12, v15, v9);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = (char *)&v86 - v12;
  v95 = a3;
  sub_2562E2E90();
  sub_2562E2F40();
  double v21 = v20;
  double v22 = trunc(v20);
  if (v21 > -1.0 && v21 < 1.84467441e19 && v21 == v22)
  {
    v30 = v13;
    uint64_t v90 = v10;
    v88 = a6;
    sub_25622F318(&qword_269F53DB8, MEMORY[0x270FA9220]);
    uint64_t v89 = v9;
    if (sub_2562E3520())
    {
      id v31 = *(void **)((char *)v95 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_defaults);
      id v32 = (void *)sub_2562E3550();
      unsigned int v33 = objc_msgSend(v31, sel_BOOLForKey_, v32);

      if (!v33)
      {
        swift_retain_n();
        v75 = sub_2562E3410();
        int v76 = sub_2562E37E0();
        if (os_log_type_enabled(v75, (os_log_type_t)v76))
        {
          v77 = v13;
          v78 = (uint8_t *)swift_slowAlloc();
          v93 = &v86;
          v79 = v78;
          *(_DWORD *)v78 = 67109120;
          v80 = (void *)sub_2562E3550();
          unsigned int v81 = objc_msgSend(v31, sel_BOOLForKey_, v80);
          swift_release();

          unsigned int v98 = v81;
          sub_2562E38F0();
          swift_release();
          _os_log_impl(&dword_256226000, v75, (os_log_type_t)v76, "Skipping asset request metrics execution for current date; AssetMetricsWorker.includeCurrentDateForAggregation: %{BOOL}d",
            v79,
            8u);
          MEMORY[0x25A2A5190](v79, -1, -1);
        }
        else
        {

          swift_release_n();
          v77 = v13;
        }
        uint64_t v83 = v89;
        v84 = *(void (**)(void, void))(v90 + 8);
        v84(v19, v89);
        v84(v77, v83);
        uint64_t v85 = type metadata accessor for CombinedRequestNoAssetData(0);
        return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v88, 1, 1, v85);
      }
    }
    v93 = &v86;
    uint64_t v34 = v97[2];
    v91 = v19;
    if (v34)
    {
      v35 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
      v36 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v38 = *v35;
        if (*v35)
        {
          uint64_t v39 = *(v35 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v36 = sub_25626B9CC(0, v36[2] + 1, 1, v36);
          }
          unint64_t v41 = v36[2];
          unint64_t v40 = v36[3];
          if (v41 >= v40 >> 1) {
            v36 = sub_25626B9CC((void *)(v40 > 1), v41 + 1, 1, v36);
          }
          v36[2] = v41 + 1;
          id v37 = &v36[2 * v41];
          v37[4] = v39;
          v37[5] = v38;
        }
        v35 += 34;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = (void *)MEMORY[0x263F8EE78];
    }
    v87 = (uint64_t *)v21;
    if (v36[2]) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&qword_269F53D68);
    uint64_t v49 = *(void *)(*(void *)(v48 - 8) + 64);
    MEMORY[0x270FA5388](v48 - 8);
    sub_2562E2F90();
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_2562E2FD0();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = *(unsigned int (**)(void, void, void))(v51 + 48);
    uint64_t v92 = (uint64_t)&v86 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v52(v92, 1, v50) == 1)
    {
      v53 = sub_2562E3410();
      os_log_type_t v54 = sub_2562E37F0();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v55 = 0;
        _os_log_impl(&dword_256226000, v53, v54, "Request with no asset Calculator: Found no device aggregation Id", v55, 2u);
        MEMORY[0x25A2A5190](v55, -1, -1);
      }
    }
    v96 = v30;
    id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
    id v57 = objc_msgSend(v56, sel_setStartTimestampInSecondsSince1970_, v87);
    if (v56) {
      id v57 = objc_msgSend(v56, sel_setNumberOfSeconds_, 86400);
    }
    MEMORY[0x270FA5388](v57);
    uint64_t v58 = (char *)&v86 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v58, (uint64_t)v95 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_oddId, v50);
    v59 = *(uint64_t (**)(void, void, void, void))(v51 + 56);
    uint64_t v60 = v59(v58, 0, 1, v50);
    v95 = &v86;
    MEMORY[0x270FA5388](v60);
    uint64_t v61 = sub_25622F360(v92, (uint64_t)v58, (uint64_t *)&qword_269F53D68);
    v87 = &v86;
    MEMORY[0x270FA5388](v61);
    v59(v58, 1, 1, v50);
    uint64_t result = sub_2562E2F40();
    if ((~*(void *)&v62 & 0x7FF0000000000000) != 0)
    {
      uint64_t v63 = v96;
      uint64_t result = (uint64_t)v91;
      if (v62 > -1.0)
      {
        v94 = &v86;
        if (v62 < 1.84467441e19)
        {
          uint64_t v86 = (uint64_t)&v86;
          unint64_t v64 = (unint64_t)v62;
          uint64_t v65 = v89;
          v66 = *(void (**)(void, void))(v90 + 8);
          v66(v91, v89);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v66)(v63, v65);
          if (is_mul_ok(v64, 0x3E8uLL))
          {
            uint64_t v67 = 1000 * v64;
            uint64_t v68 = type metadata accessor for CombinedRequestNoAssetData(0);
            v69 = v88;
            uint64_t v70 = (uint64_t)v88 + *(int *)(v68 + 20);
            sub_25622F514((uint64_t)v58, v70, (uint64_t *)&qword_269F53D68);
            v71 = (int *)type metadata accessor for EventMetadata(0);
            sub_25622F514((uint64_t)v58, v70 + v71[5], (uint64_t *)&qword_269F53D68);
            sub_25622F514((uint64_t)v58, v70 + v71[6], (uint64_t *)&qword_269F53D68);
            uint64_t v72 = v70 + v71[7];
            *(void *)uint64_t v72 = v67;
            *(unsigned char *)(v72 + 8) = 0;
            *(void *)(v70 + v71[8]) = v56;
            uint64_t v73 = v70 + v71[9];
            *(void *)uint64_t v73 = 0;
            *(unsigned char *)(v73 + 8) = 1;
            uint64_t v74 = v70 + v71[10];
            *(void *)uint64_t v74 = 0;
            *(unsigned char *)(v74 + 8) = 1;
            *v69 = v97;
            swift_bridgeObjectRetain();
            sub_25622F3C4(v92, (uint64_t *)&qword_269F53D68);
            return (*(uint64_t (**)(uint64_t **, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v69, 0, 1, v68);
          }
          goto LABEL_50;
        }
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v25 = sub_2562E2F40();
  uint64_t v26 = a6;
  if (v27 <= 0.0)
  {
    v96 = v13;
    v97 = &v86;
    MEMORY[0x270FA5388](v25);
    v42 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = v9;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v42, v19, v9);
    uint64_t v43 = sub_2562E3410();
    os_log_type_t v44 = sub_2562E3800();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      v93 = &v86;
      uint64_t v46 = v45;
      v91 = v19;
      *(_DWORD *)uint64_t v45 = 134217984;
      sub_2562E2F40();
      uint64_t v99 = v47;
      uint64_t v19 = v91;
      sub_2562E38F0();
      uint64_t v28 = *(void (**)(void, void))(v10 + 8);
      v28(v42, v9);
      _os_log_impl(&dword_256226000, v43, v44, "Request with no asset event contains date before 1970 %f", v46, 0xCu);
      MEMORY[0x25A2A5190](v46, -1, -1);
    }
    else
    {

      uint64_t v28 = *(void (**)(void, void))(v10 + 8);
      v28(v42, v9);
    }
    int v13 = v96;
    v28(v19, v9);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void))(v10 + 8);
    uint64_t v29 = v9;
    v28(v19, v9);
  }
  v28(v13, v29);
  uint64_t v82 = type metadata accessor for CombinedRequestNoAssetData(0);
  return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v26, 1, 1, v82);
}

uint64_t RequestWithNoAssetsCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_oddId;
  uint64_t v6 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t RequestWithNoAssetsCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_oddId;
  uint64_t v6 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_25622CB38(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25622844C;
  v5[5] = a1;
  v5[6] = v4;
  v5[7] = *v4;
  return MEMORY[0x270FA2498](sub_25622B130, 0, 0);
}

uint64_t sub_25622CC10(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_25622CC48(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25622CC70(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_2562E3AB0();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_2562E3740();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_25622CD0C(uint64_t a1)
{
  return sub_25622CD48(a1, MEMORY[0x270FB2A58]);
}

uint64_t sub_25622CD18(uint64_t a1)
{
  return sub_25622CD48(a1, (void (*)(void))type metadata accessor for DeviceExperimentMetrics);
}

uint64_t sub_25622CD30(uint64_t a1)
{
  return sub_25622CD48(a1, (void (*)(void))type metadata accessor for DeviceUsageMetrics);
}

uint64_t sub_25622CD48(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_2562E3AB0();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      uint64_t v4 = sub_2562E3740();
      *(void *)(v4 + 16) = a1;
    }
    else
    {
      uint64_t v4 = MEMORY[0x263F8EE78];
    }
    ((uint64_t (*)(void))a2)(0);
    return v4;
  }
  return result;
}

unint64_t sub_25622CE3C()
{
  unint64_t result = qword_269F53D38;
  if (!qword_269F53D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53D38);
  }
  return result;
}

uint64_t sub_25622CE90()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25622CEC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 16))();
  uint64_t v5 = v4;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DD0);
  a1[3] = result;
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_25622CF18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_25622CF28(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  type metadata accessor for ExperimentDigest(0);
  return a1;
}

void sub_25622CF90(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_2562E38F0();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_25622D048(void *a1, void *a2)
{
  id v34 = a2;
  uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  uint64_t v38 = (void *)MEMORY[0x263F8EE80];
  uint64_t v3 = a1[2];
  if (!v3) {
    return (uint64_t)v2;
  }
  memcpy(v37, a1 + 4, 0x110uLL);
  uint64_t v5 = (char *)(a1 + 38);
  uint64_t v6 = v3 - 1;
  long long v33 = xmmword_2562E4C90;
  while (1)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    v36 = &v32;
    uint64_t v35 = *(void *)(v7 - 8);
    MEMORY[0x270FA5388]();
    uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_25622F420((uint64_t)v37);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v34, sel_dateFromString_, v10);

    if (v11)
    {
      sub_2562E2F60();

      uint64_t v12 = sub_2562E2F80();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 0, 1, v12);
    }
    else
    {
      uint64_t v13 = sub_2562E2F80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
    }
    unint64_t v15 = sub_2562562B0((uint64_t)v9);
    uint64_t v16 = v2[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (v2[3] < v18)
    {
      sub_256286E5C(v18, 1);
      uint64_t v2 = v38;
      unint64_t v20 = sub_2562562B0((uint64_t)v9);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_23;
      }
      unint64_t v15 = v20;
    }
    if (v19)
    {
      sub_25622F3C4((uint64_t)v9, &qword_269F53DB0);
      uint64_t v2 = v38;
      uint64_t v22 = v38[7];
      uint64_t v23 = *(void **)(v22 + 8 * v15);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v22 + 8 * v15) = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v23 = sub_25626BB5C(0, v23[2] + 1, 1, v23);
        *(void *)(v22 + 8 * v15) = v23;
      }
      unint64_t v26 = v23[2];
      unint64_t v25 = v23[3];
      if (v26 >= v25 >> 1)
      {
        uint64_t v23 = sub_25626BB5C((void *)(v25 > 1), v26 + 1, 1, v23);
        *(void *)(v22 + 8 * v15) = v23;
      }
      v23[2] = v26 + 1;
      memcpy(&v23[34 * v26 + 4], v37, 0x110uLL);
      if (!v6) {
        return (uint64_t)v2;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DC0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v33;
      memcpy((void *)(v27 + 32), v37, 0x110uLL);
      v2[(v15 >> 6) + 8] |= 1 << v15;
      sub_25622F514((uint64_t)v9, v2[6] + *(void *)(v35 + 72) * v15, &qword_269F53DB0);
      *(void *)(v2[7] + 8 * v15) = v27;
      uint64_t v28 = v2[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_22;
      }
      v2[2] = v30;
      if (!v6) {
        return (uint64_t)v2;
      }
    }
    memcpy(v37, v5, 0x110uLL);
    v5 += 272;
    --v6;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:

  uint64_t result = sub_2562E3CD0();
  __break(1u);
  return result;
}

uint64_t sub_25622D428@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  return sub_25622BD24(a1, a2, *(uint64_t **)(v3 + 16), *(char **)(v3 + 24), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_25622D434(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DA0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CombinedRequestNoAssetData(0);
  uint64_t v6 = *(void *)(v42 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v42);
  uint64_t v36 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (uint64_t)&v33 - v9;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v38 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DA8);
  uint64_t v33 = (uint64_t)&v33;
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v6;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  unint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  unint64_t v37 = MEMORY[0x263F8EE78];
  uint64_t v19 = v44;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v20 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v18 << 6))
  {
    uint64_t v22 = *(void *)(v19 + 48);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    sub_25622F360(v22 + *(void *)(*(void *)(v23 - 8) + 72) * i, (uint64_t)v16, &qword_269F53DB0);
    uint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * i);
    *(void *)&v16[*(int *)(v41 + 48)] = v24;
    swift_bridgeObjectRetain();
    v43(v16, v24);
    sub_25622F3C4((uint64_t)v16, &qword_269F53DA8);
    if ((*v40)(v5, 1, v42) == 1)
    {
      uint64_t result = sub_25622F3C4((uint64_t)v5, &qword_269F53DA0);
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v28 = v34;
      sub_25622F2B4((uint64_t)v5, v34);
      sub_25622F2B4(v28, v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v37 = sub_25626BC80(0, *(void *)(v37 + 16) + 1, 1, v37);
      }
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1) {
        unint64_t v37 = sub_25626BC80(v29 > 1, v30 + 1, 1, v37);
      }
      uint64_t v31 = v36;
      unint64_t v32 = v37;
      *(void *)(v37 + 16) = v30 + 1;
      uint64_t result = sub_25622F2B4(v31, v32+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30);
      if (v13) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v25 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v25);
    ++v18;
    if (!v26)
    {
      int64_t v18 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v18);
      if (!v26)
      {
        int64_t v18 = v25 + 2;
        if (v25 + 2 >= v39) {
          goto LABEL_29;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v18);
        if (!v26)
        {
          int64_t v18 = v25 + 3;
          if (v25 + 3 >= v39) {
            goto LABEL_29;
          }
          unint64_t v26 = *(void *)(v38 + 8 * v18);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v13 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v39)
  {
LABEL_29:
    swift_release();
    return v37;
  }
  unint64_t v26 = *(void *)(v38 + 8 * v27);
  if (v26)
  {
    int64_t v18 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v18 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v18);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_25622D89C()
{
  unint64_t result = qword_269F53D58;
  if (!qword_269F53D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53D58);
  }
  return result;
}

uint64_t destroy for RequestWithNoAssetResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework25RequestWithNoAssetResultsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RequestWithNoAssetResults(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RequestWithNoAssetResults(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestWithNoAssetResults(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestWithNoAssetResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestWithNoAssetResults()
{
  return &type metadata for RequestWithNoAssetResults;
}

uint64_t *initializeBufferWithCopyOfBuffer for CombinedRequestNoAssetData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_2562E2FD0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    unint64_t v13 = (int *)type metadata accessor for EventMetadata(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    uint64_t v19 = &v7[v18];
    unint64_t v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = v13[8];
    unint64_t v26 = *(void **)&v8[v25];
    *(void *)&v7[v25] = v26;
    uint64_t v27 = v13[9];
    uint64_t v28 = &v7[v27];
    unint64_t v29 = &v8[v27];
    v28[8] = v29[8];
    *(void *)uint64_t v28 = *(void *)v29;
    uint64_t v30 = v13[10];
    uint64_t v31 = &v7[v30];
    unint64_t v32 = &v8[v30];
    v31[8] = v32[8];
    *(void *)uint64_t v31 = *(void *)v32;
    id v33 = v26;
  }
  return v5;
}

void destroy for CombinedRequestNoAssetData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2562E2FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = *(void **)(v4 + v8[8]);
}

void *initializeWithCopy for CombinedRequestNoAssetData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2562E2FD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v12 = v11[5];
  unint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = v11[8];
  uint64_t v24 = *(void **)&v6[v23];
  *(void *)&v5[v23] = v24;
  uint64_t v25 = v11[9];
  unint64_t v26 = &v5[v25];
  uint64_t v27 = &v6[v25];
  v26[8] = v27[8];
  *(void *)unint64_t v26 = *(void *)v27;
  uint64_t v28 = v11[10];
  unint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  v29[8] = v30[8];
  *(void *)unint64_t v29 = *(void *)v30;
  id v31 = v24;
  return a1;
}

void *assignWithCopy for CombinedRequestNoAssetData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v45 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2562E2FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  unint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)unint64_t v29 = v31;
  uint64_t v32 = v15[8];
  id v33 = *(void **)&v7[v32];
  uint64_t v34 = *(void **)&v8[v32];
  *(void *)&v7[v32] = v34;
  id v35 = v34;

  uint64_t v36 = v15[9];
  unint64_t v37 = &v7[v36];
  uint64_t v38 = &v8[v36];
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)unint64_t v37 = v39;
  uint64_t v40 = v15[10];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  uint64_t v43 = *(void *)v42;
  v41[8] = v42[8];
  *(void *)uint64_t v41 = v43;
  return v45;
}

void *initializeWithTake for CombinedRequestNoAssetData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2562E2FD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  *(void *)&v5[v11[8]] = *(void *)&v6[v11[8]];
  uint64_t v23 = v11[9];
  uint64_t v24 = &v5[v23];
  int v25 = &v6[v23];
  v24[8] = v25[8];
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = v11[10];
  uint64_t v27 = &v5[v26];
  uint64_t v28 = &v6[v26];
  v27[8] = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  return a1;
}

void *assignWithTake for CombinedRequestNoAssetData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v40 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2562E2FD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  unint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  *(void *)unint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = v15[8];
  uint64_t v32 = *(void **)&v7[v31];
  *(void *)&v7[v31] = *(void *)&v8[v31];

  uint64_t v33 = v15[9];
  uint64_t v34 = &v7[v33];
  id v35 = &v8[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = v15[10];
  unint64_t v37 = &v7[v36];
  uint64_t v38 = &v8[v36];
  v37[8] = v38[8];
  *(void *)unint64_t v37 = *(void *)v38;
  return v40;
}

uint64_t getEnumTagSinglePayload for CombinedRequestNoAssetData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25622ED60);
}

uint64_t sub_25622ED60(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for EventMetadata(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CombinedRequestNoAssetData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25622EE24);
}

void *sub_25622EE24(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventMetadata(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25622EECC()
{
  uint64_t result = type metadata accessor for EventMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25622EF68()
{
  return type metadata accessor for RequestWithNoAssetsCalculator(0);
}

uint64_t type metadata accessor for RequestWithNoAssetsCalculator(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F53D80);
}

uint64_t sub_25622EF90(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25622EFC8()
{
  sub_2562E3430();
  if (v0 <= 0x3F)
  {
    sub_25622F25C();
    if (v1 <= 0x3F)
    {
      sub_2562E3060();
      if (v2 <= 0x3F)
      {
        sub_2562E2FD0();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for RequestWithNoAssetsCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RequestWithNoAssetsCalculator);
}

uint64_t dispatch thunk of RequestWithNoAssetsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:userDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of RequestWithNoAssetsCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

void sub_25622F25C()
{
  if (!qword_269F53D98)
  {
    sub_2562E2E30();
    unint64_t v0 = sub_2562E38C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F53D98);
    }
  }
}

uint64_t sub_25622F2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CombinedRequestNoAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25622F318(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25622F360(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25622F3C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25622F420(uint64_t a1)
{
  return a1;
}

uint64_t sub_25622F514(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id SpeakerIdSelectionResult.speakerIdSelectionEvents.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void SpeakerIdSelectionResult.speakerIdSelectionEvents.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*SpeakerIdSelectionResult.speakerIdSelectionEvents.modify())()
{
  return nullsub_1;
}

uint64_t SpeakerIdSelectionResult.speakerIdDonationEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerIdSelectionResult.speakerIdDonationEvents.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SpeakerIdSelectionResult.speakerIdDonationEvents.modify())()
{
  return nullsub_1;
}

uint64_t SpeakerIdSelectionResult.speakerIdDonationData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerIdSelectionResult.speakerIdDonationData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SpeakerIdSelectionResult.speakerIdDonationData.modify())()
{
  return nullsub_1;
}

uint64_t SpeakerIdSelectionCalculator.__allocating_init(defaults:logger:samplingUtils:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_2562E3020();
  *(void *)(v8 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_defaults) = a1;
  uint64_t v9 = v8 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger;
  uint64_t v10 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  uint64_t v11 = (void *)(v8 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_samplingUtils);
  *uint64_t v11 = a3;
  v11[1] = a4;
  return v8;
}

uint64_t SpeakerIdSelectionCalculator.init(defaults:logger:samplingUtils:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2562E3020();
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_defaults) = a1;
  uint64_t v9 = v4 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger;
  uint64_t v10 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  uint64_t v11 = (void *)(v4 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_samplingUtils);
  *uint64_t v11 = a3;
  v11[1] = a4;
  return v4;
}

uint64_t sub_25622F814(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_25622F834, 0, 0);
}

uint64_t sub_25622F834()
{
  id v57 = v0;
  uint64_t v1 = (void *)(v0[6] + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_samplingUtils);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 64))(*v1, v2);
  if (!v5)
  {
    int v13 = sub_2562E3410();
    os_log_type_t v14 = sub_2562E3800();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      uint64_t v16 = "#SpeakerIdSelectionCalculator: Unable to retrieve the siri language.";
LABEL_12:
      _os_log_impl(&dword_256226000, v13, v14, v16, v15, 2u);
      MEMORY[0x25A2A5190](v15, -1, -1);
    }
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_2562E3410();
  os_log_type_t v9 = sub_2562E37F0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v53 = v6;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v55 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    v0[4] = sub_256229738(v53, v7, &v55);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v8, v9, "#SpeakerIdSelectionCalculator: SpeakerIdSelectionCalculator locale: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v11, -1, -1);
    int v12 = v10;
    uint64_t v6 = v53;
    MEMORY[0x25A2A5190](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v7, v3, v2);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    int v13 = sub_2562E3410();
    os_log_type_t v14 = sub_2562E3800();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      uint64_t v16 = "#SpeakerIdSelectionCalculator:  Unable to retrieve the current voice profile enrollment.";
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  uint64_t v55 = v17;
  uint64_t v56 = v18;
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  uint64_t v21 = v55;
  uint64_t v22 = v56;
  if ((*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 8))(v6, v7, v3, v2)) {
    goto LABEL_9;
  }
  uint64_t v49 = v19;
  uint64_t v54 = v6;
  uint64_t v52 = v3;
  uint64_t v50 = v0;
  uint64_t v29 = v0[6];
  uint64_t v30 = sub_2562E2F80();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v51 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  uint64_t v32 = v21;
  uint64_t v33 = swift_task_alloc();
  type metadata accessor for SamplingUtils();
  uint64_t v34 = *(void **)(v29 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_defaults);
  static SamplingUtils.getDeviceSelectionDate(forKey:defaults:)(v34, v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v30) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v51, v33, v30);
    swift_task_dealloc();
    uint64_t v38 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v38, v51, v30);
    uint64_t v39 = sub_2562E3410();
    os_log_type_t v40 = sub_2562E37F0();
    unint64_t v0 = v50;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = v30;
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v55 = v43;
      sub_2562313F4();
      uint64_t v44 = sub_2562E3C80();
      v50[3] = sub_256229738(v44, v45, &v55);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      uint64_t v47 = v42;
      v46(v38, v42);
      _os_log_impl(&dword_256226000, v39, v40, "#SpeakerIdSelectionCalculator: Device already selected for Sampling on date: %s", v41, 0xCu);
      swift_arrayDestroy();
      unint64_t v0 = v50;
      MEMORY[0x25A2A5190](v43, -1, -1);
      MEMORY[0x25A2A5190](v41, -1, -1);

      v46(v51, v47);
      swift_task_dealloc();
    }
    else
    {
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v48(v38, v30);

      swift_task_dealloc();
      v48(v51, v30);
    }
    swift_task_dealloc();
    goto LABEL_14;
  }
  id v35 = v34;
  sub_25622F3C4(v33, &qword_269F53DB0);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v0 = v50;
  if (((*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 24))(v54, v7, v52, v2) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    id v23 = 0;
    id v24 = (id)MEMORY[0x263F8EE78];
    uint64_t v25 = MEMORY[0x263F8EE78];
    goto LABEL_15;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 32))(v54, v7, v52, v2);
  swift_bridgeObjectRelease();
  id v23 = sub_256230050(1);
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v2 + 40))(v32, v22, v35, v52, v2);
  swift_bridgeObjectRelease();
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v49, v20, v52, v2);
  uint64_t v37 = sub_256230DA0(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_256230F94(v37, v49, v20);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  id v24 = sub_2562302CC(v25);
LABEL_15:
  int v26 = (void *)v0[5];
  void *v26 = v23;
  v26[1] = v24;
  v26[2] = v25;
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

id sub_256230050(char a1)
{
  uint64_t v3 = sub_2562E3430();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E800]), sel_init);
  if (!v7)
  {
    uint64_t v15 = sub_2562E3410();
    os_log_type_t v16 = sub_2562E3800();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_256226000, v15, v16, "#SpeakerIdSelectionCalculator: Failed to generate selection event", v17, 2u);
      MEMORY[0x25A2A5190](v17, -1, -1);
    }

    return 0;
  }
  uint64_t v8 = v7;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E810]), sel_init);
  if (result)
  {
    uint64_t v10 = result;
    objc_msgSend(result, sel_setIsDeviceSelected_, a1 & 1);
    objc_msgSend(v8, sel_setSpeakerIdModelDeviceSelected_, v10);

    sub_256231B4C(0, (unint64_t *)&unk_269F53E40);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger, v3);
    id v11 = sub_2562365E0((uint64_t)v6);
    objc_msgSend(v8, sel_setEventMetadata_, v11);

    int v12 = sub_2562E3410();
    os_log_type_t v13 = sub_2562E37F0();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v14 = 0;
      _os_log_impl(&dword_256226000, v12, v13, "#SpeakerIdSelectionCalculator: Created ODSAMPLESiriSchemaODSAMPLEClientEvent for the device selection", v14, 2u);
      MEMORY[0x25A2A5190](v14, -1, -1);
    }

    return v8;
  }
  __break(1u);
  return result;
}

id sub_2562302CC(uint64_t a1)
{
  uint64_t v56 = sub_2562E3430();
  uint64_t v3 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for SpeakerIdSamplingData(0);
  uint64_t v5 = MEMORY[0x270FA5388](v53);
  id v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v54 = (uint64_t)v48 - v9;
  MEMORY[0x270FA5388](v8);
  int v12 = (char *)v48 - v11;
  uint64_t v60 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v52 = v1 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger;
    uint64_t v14 = a1;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v49 = *(void *)(v10 + 72);
    v48[0] = v1;
    v48[1] = v14;
    swift_bridgeObjectRetain();
    os_log_type_t v16 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
    uint64_t v50 = v12;
    while (1)
    {
      sub_256231958(v15, (uint64_t)v12);
      id v17 = [objc_allocWithZone(MEMORY[0x263F6E800]) v16[123]];
      if (!v17) {
        break;
      }
      uint64_t v18 = v17;
      uint64_t v58 = v13;
      sub_256231B4C(0, (unint64_t *)&qword_269F53E38);
      uint64_t v19 = v54;
      sub_256231958((uint64_t)v12, v54);
      uint64_t v20 = (uint64_t)v55;
      (*v51)(v55, v52, v56);
      id v21 = sub_256236778(v19, v20);
      objc_msgSend(v18, sel_setSpeakerIdModelSampleReported_, v21);

      sub_256231958((uint64_t)v12, (uint64_t)v7);
      id result = [objc_allocWithZone(MEMORY[0x263F6E808]) v16[123]];
      if (!result)
      {
        __break(1u);
        return result;
      }
      id v23 = result;
      uint64_t v24 = sub_2562E2FD0();
      id v57 = v48;
      uint64_t v25 = *(void *)(v24 - 8);
      MEMORY[0x270FA5388](v24);
      uint64_t v27 = (char *)v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v28 = (uint64_t)v7;
      uint64_t v29 = (uint64_t)&v7[*(int *)(v53 + 120)];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      MEMORY[0x270FA5388](v30 - 8);
      uint64_t v32 = (char *)v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_256231A18(v29, (uint64_t)v32);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v32, 1, v24) == 1)
      {
        sub_2562319BC(v28);
        sub_25622F3C4((uint64_t)v32, &qword_269F53D68);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v32, v24);
        id v33 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        id v34 = v23;
        id v35 = (void *)sub_2562E2FB0();
        id v36 = objc_msgSend(v33, sel_initWithNSUUID_, v35);

        objc_msgSend(v34, sel_setOdsampleId_, v36);
        sub_2562319BC(v28);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      }
      id v7 = (char *)v28;
      objc_msgSend(v18, sel_setEventMetadata_, v23);

      id v37 = v18;
      MEMORY[0x25A2A4400]();
      int v12 = v50;
      os_log_type_t v16 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
      if (*(void *)(v60 + 16) >= *(void *)(v60 + 24) >> 1) {
        sub_2562E3730();
      }
      sub_2562E3750();
      sub_2562E3720();

      sub_2562319BC((uint64_t)v12);
      v15 += v49;
      uint64_t v13 = v58 - 1;
      if (v58 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_2562E3410();
    os_log_type_t v39 = sub_2562E3800();
    if (os_log_type_enabled(v38, v39))
    {
      os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v40 = 0;
      _os_log_impl(&dword_256226000, v38, v39, "Failed to generate event", v40, 2u);
      MEMORY[0x25A2A5190](v40, -1, -1);
    }

    sub_2562319BC((uint64_t)v12);
    return (id)MEMORY[0x263F8EE78];
  }
  else
  {
LABEL_15:
    uint64_t v41 = sub_2562E3410();
    os_log_type_t v42 = sub_2562E37F0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_256226000, v41, v42, "#SpeakerIdSelectionCalculator: Created ODSAMPLESiriSchemaODSAMPLEClientEvent for the donationID", v43, 2u);
      MEMORY[0x25A2A5190](v43, -1, -1);
    }

    uint64_t v44 = v60;
    swift_bridgeObjectRetain();
    unint64_t v45 = sub_2562E3410();
    os_log_type_t v46 = sub_2562E37F0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 134217984;
      uint64_t v59 = *(void *)(v44 + 16);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v45, v46, "#SpeakerIdSelectionCalculator: donationID event count %ld", v47, 0xCu);
      MEMORY[0x25A2A5190](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    return (id)v60;
  }
}

uint64_t SpeakerIdSelectionCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t SpeakerIdSelectionCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_256230B7C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25622844C;
  v5[5] = a1;
  v5[6] = v4;
  return MEMORY[0x270FA2498](sub_25622F834, 0, 0);
}

uint64_t sub_256230C2C(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  uint64_t v1 = sub_2562E34B0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_256230CA8(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_2562E2F80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_2562313F4();
  uint64_t v7 = sub_2562E3C80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t sub_256230DA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v2 = v13 + 40;
    unint64_t v3 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      MEMORY[0x270FA5388](v4 - 8);
      uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_bridgeObjectRetain();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_2562E2FD0();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      if (result == 1) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v3 = sub_25626BCB4(0, *(void *)(v3 + 16) + 1, 1, v3);
      }
      unint64_t v11 = *(void *)(v3 + 16);
      unint64_t v10 = *(void *)(v3 + 24);
      if (v11 >= v10 >> 1) {
        unint64_t v3 = sub_25626BCB4(v10 > 1, v11 + 1, 1, v3);
      }
      v2 += 16;
      *(void *)(v3 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v11, v6, v7);
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_256230F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v5 = type metadata accessor for SpeakerIdSamplingData(0);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v32[1] = v3;
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_2562B74C4(0, v8, 0);
    uint64_t v37 = sub_2562E2FD0();
    uint64_t v10 = *(void *)(v37 - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v36 = *(void *)(v10 + 72);
    uint64_t v12 = type metadata accessor for SpeakerIdSamplingDataBuilderImpl(0);
    id v34 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v35 = v12;
    id v33 = (uint64_t (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v38 = v7;
    uint64_t v13 = v37;
    do
    {
      int64_t v45 = v8;
      swift_allocObject();
      uint64_t v14 = sub_256236464();
      uint64_t v15 = (void *)(v14 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_enrollmentId);
      uint64_t v16 = v41;
      *uint64_t v15 = v40;
      v15[1] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v14 + 16) = 1;
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      uint64_t v43 = v32;
      uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
      MEMORY[0x270FA5388](v17 - 8);
      unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v20 = *v34;
      uint64_t v44 = v11;
      v20((char *)v32 - v19, v11, v13);
      os_log_type_t v42 = *v33;
      uint64_t v21 = v42((char *)v32 - v19, 0, 1, v13);
      MEMORY[0x270FA5388](v21);
      sub_256231A18((uint64_t)v32 - v19, (uint64_t)v32 - v19);
      uint64_t v22 = v14 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_audioId;
      swift_beginAccess();
      sub_256231A80((uint64_t)v32 - v19, v22);
      swift_endAccess();
      uint64_t v23 = sub_25622F3C4((uint64_t)v32 - v19, &qword_269F53D68);
      MEMORY[0x270FA5388](v23);
      sub_2562E2FC0();
      uint64_t v24 = v42((char *)v32 - v19, 0, 1, v13);
      MEMORY[0x270FA5388](v24);
      sub_256231A18((uint64_t)v32 - v19, (uint64_t)v32 - v19);
      uint64_t v25 = v14 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_sampleId;
      swift_beginAccess();
      uint64_t v26 = v25;
      uint64_t v27 = (uint64_t)v38;
      sub_256231A80((uint64_t)v32 - v19, v26);
      swift_endAccess();
      sub_25622F3C4((uint64_t)v32 - v19, &qword_269F53D68);
      sub_256233F38(v27);
      swift_release();
      uint64_t v9 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2562B74C4(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v46;
      }
      unint64_t v29 = *(void *)(v9 + 16);
      unint64_t v28 = *(void *)(v9 + 24);
      uint64_t v30 = v44;
      if (v29 >= v28 >> 1)
      {
        sub_2562B74C4(v28 > 1, v29 + 1, 1);
        uint64_t v9 = v46;
      }
      *(void *)(v9 + 16) = v29 + 1;
      sub_256231AE8(v27, v9+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v29);
      uint64_t v11 = v30 + v36;
      int64_t v8 = v45 - 1;
    }
    while (v45 != 1);
  }
  return v9;
}

unint64_t sub_2562313F4()
{
  unint64_t result = qword_269F53E00;
  if (!qword_269F53E00)
  {
    sub_2562E2F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53E00);
  }
  return result;
}

unint64_t sub_256231444()
{
  unint64_t result = qword_269F53E08;
  if (!qword_269F53E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53E08);
  }
  return result;
}

unint64_t sub_25623149C()
{
  unint64_t result = qword_269F53E10;
  if (!qword_269F53E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53E10);
  }
  return result;
}

uint64_t destroy for SpeakerIdSelectionResult(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework24SpeakerIdSelectionResultVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SpeakerIdSelectionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SpeakerIdSelectionResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeakerIdSelectionResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeakerIdSelectionResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakerIdSelectionResult()
{
  return &type metadata for SpeakerIdSelectionResult;
}

uint64_t sub_2562316E4()
{
  return type metadata accessor for SpeakerIdSelectionCalculator();
}

uint64_t type metadata accessor for SpeakerIdSelectionCalculator()
{
  uint64_t result = qword_269F53E20;
  if (!qword_269F53E20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256231738()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E3060();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSelectionCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSelectionCalculator);
}

uint64_t dispatch thunk of SpeakerIdSelectionCalculator.__allocating_init(defaults:logger:samplingUtils:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SpeakerIdSelectionCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  int64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 120) + **(int **)(*(void *)v2 + 120));
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_256231958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakerIdSamplingData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562319BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SpeakerIdSamplingData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256231A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256231A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_256231AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakerIdSamplingData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256231B4C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_256231B88()
{
  return MEMORY[0x270FA2498](sub_256231BA4, 0, 0);
}

uint64_t sub_256231BA4()
{
  return sub_2562E3AC0();
}

uint64_t SiriSegmentCohortReporter.deinit()
{
  return v0;
}

uint64_t SiriSegmentCohortReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_256231C40()
{
  unint64_t result = qword_269F53E50;
  if (!qword_269F53E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53E50);
  }
  return result;
}

uint64_t sub_256231C94(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t type metadata accessor for SiriSegmentCohortReporter()
{
  return self;
}

uint64_t method lookup function for SiriSegmentCohortReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriSegmentCohortReporter);
}

uint64_t dispatch thunk of SiriSegmentCohortReporter.report(_:)(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t BootToAssetSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v8 = sub_256233674(a1, v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v8;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t BootToAssetSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_2562335B0(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_256232090(uint64_t a1)
{
  *(void *)(v2 + 24) = v1;
  uint64_t v4 = sub_2562E3430();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = *(void *)(v4 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CombinedBootToAssetData(0);
  *(void *)(v2 + 56) = v5;
  *(void *)(v2 + 64) = *(void *)(v5 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = swift_task_alloc();
  *(_OWORD *)(v2 + 88) = *(_OWORD *)a1;
  *(void *)(v2 + 104) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_2562321D0, 0, 0);
}

uint64_t sub_2562321D0()
{
  *(void *)(v0 + 112) = OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_logger;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 16) = *(void *)(v3 + 16);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v1, v2, "BootToAssetSelfReporter reporting results for %ld days", v4, 0xCu);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v0 + 120) = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = sub_256231B4C(0, &qword_269F53E78);
    uint64_t v11 = OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_reportingService;
    *(void *)(v0 + 128) = v10;
    *(void *)(v0 + 136) = v11;
    LODWORD(v11) = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 192) = v11;
    *(void *)(v0 + 144) = *(void *)(v7 + 72);
    *(void *)(v0 + 152) = 0;
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 32);
    uint64_t v16 = v5 + ((v11 + 32) & ~(unint64_t)v11);
    uint64_t v17 = v9 + *(void *)(v0 + 112);
    swift_bridgeObjectRetain();
    sub_256233774(v16, v12);
    sub_256233774(v12, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v14, v17, v15);
    uint64_t v18 = sub_256232BB8(v13, v14);
    *(void *)(v0 + 160) = v18;
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
    *(void *)(v0 + 168) = v19;
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = *(void *)(v0 + 112);
      uint64_t v22 = *(void *)(v0 + 24);
      uint64_t v23 = (void *)(v22 + *(void *)(v0 + 136));
      objc_msgSend(v19, sel_setAssetAvailabilityFromBootDigestReported_, v18);
      id v24 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v20, sel_setEventMetadata_, v24);

      uint64_t v25 = v23[3];
      uint64_t v26 = v23[4];
      __swift_project_boxed_opaque_existential_1(v23, v25);
      uint64_t v35 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 8) + **(int **)(v26 + 8));
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_25623263C;
      return v35(v20, v22 + v21, v25, v26);
    }
    swift_bridgeObjectRelease();
    unint64_t v29 = sub_2562E3410();
    os_log_type_t v30 = sub_2562E3800();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_256226000, v29, v30, "Failed to generate event for reporting asset availability from boot", v31, 2u);
      MEMORY[0x25A2A5190](v31, -1, -1);
      uint64_t v32 = v18;
    }
    else
    {
      uint64_t v32 = v29;
      unint64_t v29 = v18;
    }
    uint64_t v33 = *(void *)(v0 + 80);

    sub_2562337D8(v33);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_25623263C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_256232A90;
  }
  else
  {
    os_log_type_t v2 = sub_256232758;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256232758()
{
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 80);

  sub_2562337D8(v4);
  if (v2 + 1 == v3)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152) + 1;
  *(void *)(v0 + 152) = v6;
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 24) + *(void *)(v0 + 112);
  sub_256233774(*(void *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))+ v5 * v6, v7);
  sub_256233774(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  uint64_t v13 = sub_256232BB8(v8, v9);
  *(void *)(v0 + 160) = v13;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  *(void *)(v0 + 168) = v14;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    id v24 = sub_2562E3410();
    os_log_type_t v25 = sub_2562E3800();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_256226000, v24, v25, "Failed to generate event for reporting asset availability from boot", v26, 2u);
      MEMORY[0x25A2A5190](v26, -1, -1);
      uint64_t v27 = v13;
    }
    else
    {
      uint64_t v27 = v24;
      id v24 = v13;
    }
    uint64_t v28 = *(void *)(v0 + 80);

    sub_2562337D8(v28);
    goto LABEL_11;
  }
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 24);
  uint64_t v18 = (void *)(v17 + *(void *)(v0 + 136));
  objc_msgSend(v14, sel_setAssetAvailabilityFromBootDigestReported_, v13);
  id v19 = EventMetadata.transformToODDClientEventMetadata()();
  objc_msgSend(v15, sel_setEventMetadata_, v19);

  uint64_t v20 = v18[3];
  uint64_t v21 = v18[4];
  __swift_project_boxed_opaque_existential_1(v18, v20);
  os_log_type_t v30 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 8) + **(int **)(v21 + 8));
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v22;
  void *v22 = v0;
  v22[1] = sub_25623263C;
  return v30(v15, v17 + v16, v20, v21);
}

uint64_t sub_256232A90()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Failed to report A2B event", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v5 = (void *)v0[20];
  uint64_t v4 = (void *)v0[21];
  uint64_t v6 = v0[10];

  swift_willThrow();
  sub_2562337D8(v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

id sub_256232BB8(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v45 = a1;
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = *(void *)(*(void *)a1 + 16);
    uint64_t v7 = MEMORY[0x263F8EE78];
    id v47 = result;
    if (v6)
    {
      uint64_t v61 = MEMORY[0x263F8EE78];
      id v8 = result;
      swift_bridgeObjectRetain();
      sub_2562E3A70();
      uint64_t v9 = v6 - 1;
      for (uint64_t i = 32; ; i += 192)
      {
        long long v11 = *(_OWORD *)(v5 + i);
        long long v12 = *(_OWORD *)(v5 + i + 16);
        long long v13 = *(_OWORD *)(v5 + i + 48);
        long long v51 = *(_OWORD *)(v5 + i + 32);
        long long v52 = v13;
        long long v49 = v11;
        long long v50 = v12;
        long long v14 = *(_OWORD *)(v5 + i + 64);
        long long v15 = *(_OWORD *)(v5 + i + 80);
        long long v16 = *(_OWORD *)(v5 + i + 112);
        long long v55 = *(_OWORD *)(v5 + i + 96);
        long long v56 = v16;
        long long v53 = v14;
        long long v54 = v15;
        long long v17 = *(_OWORD *)(v5 + i + 128);
        long long v18 = *(_OWORD *)(v5 + i + 144);
        long long v19 = *(_OWORD *)(v5 + i + 176);
        long long v59 = *(_OWORD *)(v5 + i + 160);
        long long v60 = v19;
        long long v57 = v17;
        long long v58 = v18;
        id v20 = objc_allocWithZone(MEMORY[0x263F6E630]);
        sub_256233990((uint64_t)&v49);
        id result = objc_msgSend(v20, sel_init);
        if (!result) {
          break;
        }
        uint64_t v21 = result;
        sub_256231B4C(0, &qword_269F53E98);
        v48[8] = v57;
        v48[9] = v58;
        v48[10] = v59;
        v48[11] = v60;
        v48[4] = v53;
        v48[5] = v54;
        v48[6] = v55;
        v48[7] = v56;
        v48[0] = v49;
        v48[1] = v50;
        void v48[2] = v51;
        v48[3] = v52;
        sub_256233990((uint64_t)&v49);
        id v22 = v21;
        id v23 = sub_2562333A4(v48);
        objc_msgSend(v22, sel_setDimensions_, v23);

        id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E648]), sel_init);
        if (!result) {
          goto LABEL_51;
        }
        double v24 = *(double *)&v51;
        char v25 = BYTE8(v51);
        id v26 = result;
        sub_256233A48((uint64_t)&v49);
        uint64_t v27 = v26;
        if ((v25 & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
          uint64_t v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = xmmword_2562E4F80;
          *(void *)(v28 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithDouble_, v24);
          *(void *)&v48[0] = v28;
          sub_2562E3720();
          sub_256231B4C(0, (unint64_t *)&qword_269F53EB0);
          uint64_t v27 = (void *)sub_2562E36F0();
          swift_bridgeObjectRelease();
          objc_msgSend(v26, sel_setBootToAssetDeliveryInMs_, v27);
        }
        objc_msgSend(v22, sel_setTuples_, v26);

        sub_2562E3A50();
        sub_2562E3A80();
        sub_2562E3A90();
        sub_2562E3A60();
        if (!v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v4 = v47;
          uint64_t v7 = MEMORY[0x263F8EE78];
          goto LABEL_12;
        }
        --v9;
      }
      goto LABEL_50;
    }
    id v29 = result;
LABEL_12:
    sub_256231B4C(0, &qword_269F53EA0);
    os_log_type_t v30 = (void *)sub_2562E36F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setDigests_, v30);

    *(void *)&long long v49 = v7;
    uint64_t v31 = *(void *)(v5 + 16);
    if (v31)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v32 = (void *)(v5 + 216);
      do
      {
        if (*v32) {
          BOOL v33 = *(v32 - 4) == 0;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          id v34 = objc_allocWithZone(MEMORY[0x263F6E730]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v35 = objc_msgSend(v34, sel_init);
          if (v35)
          {
            id v36 = v35;
            uint64_t v37 = (void *)sub_2562E3550();
            swift_bridgeObjectRelease();
            objc_msgSend(v36, sel_setDeviceType_, v37);

            uint64_t v38 = (void *)sub_2562E3550();
            swift_bridgeObjectRelease();
            id v39 = v38;
            if ([v39 isEqualToString:@"PROGRAMCODE_UNKNOWN"])
            {
              uint64_t v40 = 0;
            }
            else if ([v39 isEqualToString:@"PROGRAMCODE_IOS"])
            {
              uint64_t v40 = 1;
            }
            else if ([v39 isEqualToString:@"PROGRAMCODE_MACOS"])
            {
              uint64_t v40 = 2;
            }
            else if ([v39 isEqualToString:@"PROGRAMCODE_TVOS"])
            {
              uint64_t v40 = 3;
            }
            else if ([v39 isEqualToString:@"PROGRAMCODE_WATCHOS"])
            {
              uint64_t v40 = 4;
            }
            else if ([v39 isEqualToString:@"PROGRAMCODE_VISIONOS"])
            {
              uint64_t v40 = 5;
            }
            else
            {
              uint64_t v40 = 0;
            }

            objc_msgSend(v36, sel_setProgramCode_, v40);
            MEMORY[0x25A2A4400]();
            if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_2562E3730();
            }
            sub_2562E3750();
            sub_2562E3720();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        v32 += 24;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      unint64_t v41 = v49;
      uint64_t v4 = v47;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v41 = MEMORY[0x263F8EE78];
    }
    id result = (id)swift_bridgeObjectRelease();
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      os_log_type_t v42 = (void *)sub_2562E3AD0();
      id result = (id)swift_bridgeObjectRelease();
      if (!v42) {
        goto LABEL_45;
      }
    }
    else
    {
      os_log_type_t v42 = *(void **)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v42) {
        goto LABEL_45;
      }
    }
    if ((v41 & 0xC000000000000001) != 0)
    {
      id v43 = (id)MEMORY[0x25A2A4740](0, v41);
    }
    else
    {
      if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      id v43 = *(id *)(v41 + 32);
    }
    os_log_type_t v42 = v43;
LABEL_45:
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setFixedDimensions_, v42);

    uint64_t v44 = sub_2562E3430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(a2, v44);
    sub_2562337D8(v45);
    return v4;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_256233204()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_reportingService;

  return __swift_destroy_boxed_opaque_existential_0(v3);
}

uint64_t BootToAssetSELFReporter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_reportingService);
  return v0;
}

uint64_t BootToAssetSELFReporter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_reportingService);

  return swift_deallocClassInstance();
}

id sub_2562333A4(long long *a1)
{
  long long v1 = a1[9];
  long long v21 = a1[8];
  long long v22 = v1;
  long long v2 = a1[11];
  long long v23 = a1[10];
  long long v24 = v2;
  long long v3 = a1[5];
  v18[1] = a1[4];
  v18[2] = v3;
  long long v4 = a1[7];
  long long v19 = a1[6];
  long long v20 = v4;
  long long v5 = a1[1];
  long long v15 = *a1;
  long long v16 = v5;
  long long v6 = a1[3];
  long long v17 = a1[2];
  v18[0] = v6;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init, v15, (void)v16);
  if (result)
  {
    id v8 = result;
    sub_25622F514((uint64_t)&v15, (uint64_t)v25, &qword_269F53DD0);
    sub_25622F514((uint64_t)v25, (uint64_t)&v29, &qword_269F53DD0);
    uint64_t v9 = v30;
    if (v30)
    {
      id v10 = v8;
      sub_256233CD8((uint64_t)v25);
      uint64_t v9 = (void *)sub_2562E3550();
      sub_256233D04((uint64_t)v25);
    }
    else
    {
      id v11 = v8;
    }
    objc_msgSend(v8, sel_setAssetSetId_, v9);

    if (*((void *)&v16 + 1))
    {
      swift_bridgeObjectRetain();
      long long v12 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v12 = 0;
    }
    objc_msgSend(v8, sel_setAssetSetName_, v12);

    if (*((void *)&v19 + 1))
    {
      swift_bridgeObjectRetain();
      long long v13 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v13 = 0;
    }
    objc_msgSend(v8, sel_setPreviousSystemBuild_, v13);

    sub_25622F514((uint64_t)v18, (uint64_t)v26, &qword_269F53EB8);
    sub_25622F514((uint64_t)v26, (uint64_t)&v27, &qword_269F53EB8);
    if ((v28 & 1) == 0) {
      objc_msgSend(v8, sel_setBuildInstallationTimestampInSecondsSince1970_, v27);
    }
    id v14 = sub_256233B00(&v15);
    sub_256233A48((uint64_t)&v15);
    objc_msgSend(v8, sel_setAssistantDimensions_, v14);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2562335B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v11 = a3 + OBJC_IVAR____TtC16MetricsFramework23BootToAssetSELFReporter_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

uint64_t sub_256233674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BootToAssetSELFReporter();
  uint64_t v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_2562335B0(a1, (uint64_t)v11, v12, a4, a5);
}

uint64_t sub_256233774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CombinedBootToAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562337D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CombinedBootToAssetData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_256233878()
{
  return type metadata accessor for BootToAssetSELFReporter();
}

uint64_t type metadata accessor for BootToAssetSELFReporter()
{
  uint64_t result = qword_269F53E88;
  if (!qword_269F53E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2562338CC()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BootToAssetSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BootToAssetSELFReporter);
}

uint64_t dispatch thunk of BootToAssetSELFReporter.__allocating_init(logger:reportingService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_256233990(uint64_t a1)
{
  return a1;
}

uint64_t sub_256233A48(uint64_t a1)
{
  return a1;
}

id sub_256233B00(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E680]), sel_init);
  if (result)
  {
    long long v3 = result;
    sub_25622F514((uint64_t)(a1 + 20), (uint64_t)v13, &qword_269F53DD0);
    sub_25622F514((uint64_t)v13, (uint64_t)&v14, &qword_269F53DD0);
    uint64_t v4 = v15;
    if (v15)
    {
      id v5 = v3;
      sub_256233CD8((uint64_t)v13);
      uint64_t v4 = (void *)sub_2562E3550();
      sub_256233D04((uint64_t)v13);
    }
    else
    {
      id v6 = v3;
    }
    objc_msgSend(v3, sel_setSystemBuild_, v4);

    if (a1[15])
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      id v8 = v7;
      if ([v8 isEqualToString:@"UNKNOWN"])
      {
        uint64_t v9 = 0;
      }
      else if ([v8 isEqualToString:@"OPTED_IN"])
      {
        uint64_t v9 = 1;
      }
      else if ([v8 isEqualToString:@"OPTED_OUT"])
      {
        uint64_t v9 = 2;
      }
      else if ([v8 isEqualToString:@"DISMISSED"])
      {
        uint64_t v9 = 3;
      }
      else
      {
        uint64_t v9 = 0;
      }

      objc_msgSend(v3, sel_setDataSharingOptInStatus_, v9);
    }
    uint64_t v10 = a1[17];
    id v11 = v3;
    if (v10)
    {
      uint64_t v12 = a1[16];
      swift_bridgeObjectRetain();
      id v11 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v12, v10);
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setSiriInputLocale_, v11);
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_256233CD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_256233D04(uint64_t a1)
{
  return a1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_256233D94@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, int a13, char a14, int a15, char a16, int a17, int a18, int a19, char a20,int a21,char a22,int a23,char a24,uint64_t a25,char a26,long long a27,uint64_t a28,uint64_t a29,__int16 a30,uint64_t a31,uint64_t a32,int a33,char a34,uint64_t a35,int a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *(unsigned char *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3 & 1;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 80) = a11;
  *(void *)(a9 + 88) = a12;
  *(_DWORD *)(a9 + 96) = a13;
  *(unsigned char *)(a9 + 100) = a14 & 1;
  *(_DWORD *)(a9 + 104) = a15;
  *(unsigned char *)(a9 + 108) = a16 & 1;
  *(unsigned char *)(a9 + 109) = a17;
  *(_WORD *)(a9 + 110) = *(_WORD *)((char *)&a17 + 1);
  *(_DWORD *)(a9 + 112) = a19;
  *(unsigned char *)(a9 + 116) = a20 & 1;
  *(_DWORD *)(a9 + 120) = a21;
  *(unsigned char *)(a9 + 124) = a22 & 1;
  *(_DWORD *)(a9 + 128) = a23;
  *(unsigned char *)(a9 + 132) = a24 & 1;
  *(void *)(a9 + 136) = a25;
  *(unsigned char *)(a9 + 144) = a26 & 1;
  *(void *)(a9 + 168) = a28;
  *(void *)(a9 + 176) = a29;
  *(_WORD *)(a9 + 184) = a30;
  *(void *)(a9 + 192) = a31;
  *(void *)(a9 + 200) = a32;
  *(_DWORD *)(a9 + 208) = a33;
  *(unsigned char *)(a9 + 212) = a34 & 1;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 152) = a27;
  id v43 = (int *)type metadata accessor for SpeakerIdSamplingData(0);
  sub_2562363FC(a35, a9 + v43[26]);
  uint64_t v44 = a9 + v43[27];
  *(_DWORD *)uint64_t v44 = a36;
  *(unsigned char *)(v44 + 4) = a37 & 1;
  uint64_t v45 = (void *)(a9 + v43[28]);
  *uint64_t v45 = a38;
  v45[1] = a39;
  *(void *)(a9 + v43[29]) = a40;
  sub_2562363FC(a41, a9 + v43[30]);
  uint64_t v46 = a9 + v43[31];

  return sub_2562363FC(a42, v46);
}

uint64_t sub_256233F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v62 = *(void *)(v1 + 24);
  int v61 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v59 = *(void *)(v1 + 56);
  uint64_t v60 = v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v56 = v3;
  uint64_t v57 = v4;
  uint64_t v58 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v53 = *(void *)(v1 + 88);
  uint64_t v54 = v5;
  uint64_t v52 = *(void *)(v1 + 96);
  long long v51 = *(void **)(v1 + 104);
  uint64_t v35 = *(unsigned int *)(v1 + 112);
  int v30 = *(unsigned __int8 *)(v1 + 116);
  uint64_t v37 = *(unsigned int *)(v1 + 120);
  int v32 = *(unsigned __int8 *)(v1 + 124);
  int v50 = *(unsigned __int16 *)(v1 + 125);
  int v49 = *(unsigned __int8 *)(v1 + 127);
  uint64_t v34 = *(unsigned int *)(v1 + 128);
  int v29 = *(unsigned __int8 *)(v1 + 132);
  uint64_t v36 = *(unsigned int *)(v1 + 136);
  int v31 = *(unsigned __int8 *)(v1 + 140);
  uint64_t v38 = *(unsigned int *)(v1 + 144);
  int v33 = *(unsigned __int8 *)(v1 + 148);
  uint64_t v45 = *(void *)(v1 + 152);
  int v43 = *(unsigned __int8 *)(v1 + 160);
  uint64_t v42 = *(void *)(v1 + 168);
  uint64_t v48 = *(void *)(v1 + 176);
  uint64_t v41 = *(void *)(v1 + 184);
  uint64_t v47 = *(void *)(v1 + 192);
  int v40 = *(unsigned __int16 *)(v1 + 200);
  uint64_t v39 = *(void *)(v1 + 208);
  uint64_t v44 = *(void *)(v1 + 216);
  uint64_t v28 = *(unsigned int *)(v1 + 224);
  int v27 = *(unsigned __int8 *)(v1 + 228);
  int v46 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_audioId;
  swift_beginAccess();
  uint64_t v10 = sub_256231A18(v9, (uint64_t)&v25 - v8);
  uint64_t v11 = *(unsigned int *)(v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_triggerPhrase);
  unsigned __int8 v12 = *(unsigned char *)(v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_triggerPhrase + 4);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_enrollmentId);
  uint64_t v26 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_enrollmentId + 8);
  uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_location);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_sampleId;
  swift_beginAccess();
  uint64_t v16 = sub_256231A18(v15, (uint64_t)&v25 - v8);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = v1 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_requestId;
  swift_beginAccess();
  sub_256231A18(v17, (uint64_t)&v25 - v8);
  unsigned __int8 v63 = v12;
  *(void *)&long long v24 = v42;
  BYTE2(v23) = v49;
  LOWORD(v23) = v50;
  *((void *)&v24 + 1) = v48;
  long long v18 = v51;
  *((void *)&v22 + 1) = v53;
  *(void *)&long long v22 = v54;
  sub_256233D94(v46, v62, v61, v60, v56, v59, v57, v58, v55, v22, v52, (uint64_t)v51, v35, (v35 | ((unint64_t)v30 << 32)) >> 32, v37, (v37 | ((unint64_t)v32 << 32)) >> 32, v23, SHIDWORD(v23), v34,
    (v34 | ((unint64_t)v29 << 32)) >> 32,
    v36,
    (v36 | ((unint64_t)v31 << 32)) >> 32,
    v38,
    (v38 | ((unint64_t)v33 << 32)) >> 32,
    v45,
    v43,
    v24,
    v41,
    v47,
    v40,
    v39,
    v44,
    v28,
    (v28 | ((unint64_t)v27 << 32)) >> 32,
    (uint64_t)&v25 - v8,
    v11,
    (v11 | ((unint64_t)v12 << 32)) >> 32,
    v13,
    v26,
    (uint64_t)v14,
    (uint64_t)&v25 - v8,
    (uint64_t)&v25 - v8);
  id v19 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerIdSamplingDataBuilderImpl.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_audioId);
  swift_bridgeObjectRelease();

  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_sampleId);
  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_requestId);
  return v0;
}

uint64_t sub_2562344DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SpeakerIdSamplingDataBuilderImpl.__deallocating_deinit()
{
  SpeakerIdSamplingDataBuilderImpl.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_256234594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2562345A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 16))(a1, a2 & 1);
}

uint64_t sub_2562345C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_2562345D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_2562345E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_2562345FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_256234610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_256234624(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 64))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_25623464C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 72))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_256234674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_256234688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_25623469C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_2562346B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 104))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2562346D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 112))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_256234700(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 120))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_256234728(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 128))(a1, a2 & 1);
}

uint64_t sub_256234740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t sub_256234754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t sub_256234768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t sub_25623477C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_256234790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t sub_2562347A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 176))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_2562347CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t sub_2562347E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 192))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_256234808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t sub_25623481C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t sub_256234830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t sub_256234844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t sub_256234858(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

void *initializeBufferWithCopyOfBuffer for SpeakerIdSamplingData(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    int v43 = (void *)a2[11];
    *(void *)(a1 + 88) = v43;
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 116) = *((unsigned char *)a2 + 116);
    *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
    *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
    *(unsigned char *)(a1 + 124) = *((unsigned char *)a2 + 124);
    *(unsigned char *)(a1 + 132) = *((unsigned char *)a2 + 132);
    *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = a2[17];
    uint64_t v11 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v11;
    uint64_t v12 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v12;
    *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
    *(unsigned char *)(a1 + 185) = *((unsigned char *)a2 + 185);
    uint64_t v13 = a2[24];
    uint64_t v14 = a2[25];
    LODWORD(v10) = *((_DWORD *)a2 + 52);
    *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
    *(_DWORD *)(a1 + 208) = v10;
    uint64_t v15 = a3[26];
    __dst = (void *)(a1 + v15);
    uint64_t v41 = (char *)a2 + v15;
    *(void *)(a1 + 192) = v13;
    *(void *)(a1 + 200) = v14;
    uint64_t v16 = sub_2562E2FD0();
    uint64_t v17 = *(void *)(v16 - 8);
    long long v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v41, 1, v16))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(__dst, v41, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(__dst, v41, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v22 = a3[27];
    uint64_t v23 = a3[28];
    long long v24 = (char *)v4 + v22;
    uint64_t v25 = (uint64_t)a2 + v22;
    *(_DWORD *)long long v24 = *(_DWORD *)v25;
    v24[4] = *(unsigned char *)(v25 + 4);
    uint64_t v26 = (void *)((char *)v4 + v23);
    int v27 = (uint64_t *)((char *)a2 + v23);
    uint64_t v28 = v27[1];
    void *v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[29];
    uint64_t v30 = a3[30];
    int v31 = *(void **)((char *)a2 + v29);
    *(void *)((char *)v4 + v29) = v31;
    int v32 = (char *)v4 + v30;
    int v33 = (char *)a2 + v30;
    swift_bridgeObjectRetain();
    id v34 = v31;
    if (v18(v33, 1, v16))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v32, v33, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v32, 0, 1, v16);
    }
    uint64_t v36 = a3[31];
    uint64_t v37 = (char *)v4 + v36;
    uint64_t v38 = (char *)a2 + v36;
    if (v18(v38, 1, v16))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v37, v38, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v37, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for SpeakerIdSamplingData(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[26];
  uint64_t v5 = sub_2562E2FD0();
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  uint64_t v7 = a1 + a2[30];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v5);
  }
  uint64_t v8 = a1 + a2[31];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v5);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v5);
  }
  return result;
}

uint64_t initializeWithCopy for SpeakerIdSamplingData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  int v40 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v40;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  uint64_t v11 = *(void *)(a2 + 192);
  uint64_t v12 = *(void *)(a2 + 200);
  LODWORD(v8) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v8;
  uint64_t v13 = a3[26];
  __dst = (void *)(a1 + v13);
  uint64_t v14 = (const void *)(a2 + v13);
  *(void *)(a1 + 192) = v11;
  *(void *)(a1 + 200) = v12;
  uint64_t v15 = sub_2562E2FD0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(__dst, v14, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v20 = a3[27];
  uint64_t v21 = a3[28];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  long long v24 = (void *)(a1 + v21);
  uint64_t v25 = (void *)(a2 + v21);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[29];
  uint64_t v28 = a3[30];
  uint64_t v29 = *(void **)(a2 + v27);
  *(void *)(a1 + v27) = v29;
  uint64_t v30 = (void *)(a1 + v28);
  int v31 = (const void *)(a2 + v28);
  swift_bridgeObjectRetain();
  id v32 = v29;
  if (v17(v31, 1, v15))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v30, v31, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
  }
  uint64_t v34 = a3[31];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  if (v17(v36, 1, v15))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v35, v36, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v35, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for SpeakerIdSamplingData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 88);
  uint64_t v8 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v8;
  id v9 = v8;

  int v10 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v10;
  int v11 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  *(unsigned char *)(a1 + 111) = *(unsigned char *)(a2 + 111);
  int v12 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v12;
  int v13 = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = v13;
  int v14 = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = v14;
  uint64_t v15 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v15;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v16 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v16;
  uint64_t v17 = a3[26];
  id v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_2562E2FD0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = a3[27];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(unsigned char *)(v27 + 4) = *((unsigned char *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[28];
  int v31 = (void *)(a1 + v30);
  id v32 = (void *)(a2 + v30);
  *int v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[29];
  uint64_t v34 = *(void **)(a1 + v33);
  uint64_t v35 = *(void **)(a2 + v33);
  *(void *)(a1 + v33) = v35;
  id v36 = v35;

  uint64_t v37 = a3[30];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  int v40 = v22((void *)(a1 + v37), 1, v20);
  int v41 = v22(v39, 1, v20);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v38, v39, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v38, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v38, v20);
LABEL_12:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v38, v39, v20);
LABEL_13:
  uint64_t v43 = a3[31];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  int v46 = v22((void *)(a1 + v43), 1, v20);
  int v47 = v22(v45, 1, v20);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v44, v45, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v44, v20);
    goto LABEL_18;
  }
  if (v47)
  {
LABEL_18:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v44, v45, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v44, 0, 1, v20);
  return a1;
}

uint64_t initializeWithTake for SpeakerIdSamplingData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  int v6 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  uint64_t v7 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v7;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  long long v8 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  uint64_t v9 = a3[26];
  int v10 = (void *)(a1 + v9);
  int v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 192) = v8;
  uint64_t v12 = sub_2562E2FD0();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[27];
  uint64_t v17 = a3[28];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v20 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (v14((const void *)(a2 + v20), 1, v12))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v21, v22, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  uint64_t v24 = a3[31];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  if (v14(v26, 1, v12))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v25, v26, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithTake for SpeakerIdSamplingData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  int v10 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  uint64_t v14 = a3[26];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_2562E2FD0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = a3[27];
  uint64_t v24 = a3[28];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = (void *)(a1 + v24);
  uint64_t v28 = (uint64_t *)(a2 + v24);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[29];
  id v32 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);

  uint64_t v33 = a3[30];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  int v36 = v19((void *)(a1 + v33), 1, v17);
  int v37 = v19(v35, 1, v17);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v34, v35, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v34, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v34, v17);
LABEL_12:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v34, v35, v17);
LABEL_13:
  uint64_t v39 = a3[31];
  int v40 = (void *)(a1 + v39);
  int v41 = (void *)(a2 + v39);
  int v42 = v19((void *)(a1 + v39), 1, v17);
  int v43 = v19(v41, 1, v17);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v40, v41, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v40, v17);
    goto LABEL_18;
  }
  if (v43)
  {
LABEL_18:
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v40, v41, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v40, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeakerIdSamplingData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256235FD4);
}

uint64_t sub_256235FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 104);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SpeakerIdSamplingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2562360A8);
}

uint64_t sub_2562360A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 104);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SpeakerIdSamplingData(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F53EE8);
}

void sub_256236174()
{
  sub_25623626C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25623626C()
{
  if (!qword_269F53EF8)
  {
    sub_2562E2FD0();
    unint64_t v0 = sub_2562E38C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F53EF8);
    }
  }
}

uint64_t sub_2562362C4()
{
  return type metadata accessor for SpeakerIdSamplingDataBuilderImpl(0);
}

uint64_t type metadata accessor for SpeakerIdSamplingDataBuilderImpl(uint64_t a1)
{
  return sub_25622EF90(a1, qword_269F53F08);
}

void sub_2562362EC()
{
  sub_25623626C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SpeakerIdSamplingDataBuilderImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingDataBuilderImpl);
}

uint64_t sub_2562363FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256236464()
{
  *(unsigned char *)(v0 + 16) = 2;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 100) = 0u;
  *(unsigned char *)(v0 + 116) = 1;
  *(_DWORD *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 124) = 1;
  *(_WORD *)(v0 + 125) = 514;
  *(unsigned char *)(v0 + 127) = 2;
  *(_DWORD *)(v0 + 128) = 0;
  *(unsigned char *)(v0 + 132) = 1;
  *(_DWORD *)(v0 + 136) = 0;
  *(unsigned char *)(v0 + 140) = 1;
  *(_DWORD *)(v0 + 144) = 0;
  *(unsigned char *)(v0 + 148) = 1;
  *(void *)(v0 + 152) = 0;
  *(unsigned char *)(v0 + 160) = 1;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_WORD *)(v0 + 200) = 514;
  *(_DWORD *)(v0 + 224) = 0;
  *(void *)(v0 + 208) = 0;
  *(void *)(v0 + 216) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_audioId;
  *(unsigned char *)(v0 + 228) = 1;
  uint64_t v2 = sub_2562E2FD0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_triggerPhrase;
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_enrollmentId);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_location) = 0;
  v3(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_sampleId, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_requestId, 1, 1, v2);
  return v0;
}

uint64_t sub_2562365D8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

id sub_2562365E0(uint64_t a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_2562E2FD0();
    uint64_t v5 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v8 = v3;
    sub_2562E2FC0();
    id v9 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
    uint64_t v10 = (void *)sub_2562E2FB0();
    id v11 = objc_msgSend(v9, sel_initWithNSUUID_, v10);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v8, sel_setOdsampleId_, v11);

    uint64_t v12 = sub_2562E3430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_256236778(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = *(unsigned char *)a1 & 1;
  id v6 = result;
  objc_msgSend(v6, sel_setIsEnrollmentSample_, v5);
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setDeviceType_, v7);
  }
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSystemBuild_, v8);
  }
  if (*(void *)(a1 + 88)) {
    objc_msgSend(v6, sel_setSiriInputLocale_);
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    objc_msgSend(v6, sel_setStartDatestampInDaysSince1970_, *(void *)(a1 + 8));
  }
  if (*(void *)(a1 + 64))
  {
    swift_bridgeObjectRetain();
    id v9 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAudioInterfaceVendorId_, v9);
  }
  if (*(void *)(a1 + 80))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setFirstPartyAudioInterfaceProductId_, v10);
  }
  if ((*(unsigned char *)(a1 + 100) & 1) == 0) {
    objc_msgSend(v6, sel_setInvocationSource_, *(unsigned int *)(a1 + 96));
  }
  if ((*(unsigned char *)(a1 + 108) & 1) == 0) {
    objc_msgSend(v6, sel_setMotionActivity_, *(unsigned int *)(a1 + 104));
  }
  int v11 = *(unsigned __int8 *)(a1 + 109);
  if (v11 != 2) {
    objc_msgSend(v6, sel_setIsWakeFromSleep_, v11 & 1);
  }
  int v12 = *(unsigned __int8 *)(a1 + 110);
  if (v12 != 2) {
    objc_msgSend(v6, sel_setIsMediaPlaying_, v12 & 1);
  }
  int v13 = *(unsigned __int8 *)(a1 + 111);
  if (v13 == 2)
  {
    if (*(unsigned char *)(a1 + 116)) {
      goto LABEL_24;
    }
  }
  else
  {
    objc_msgSend(v6, sel_setIsDeviceHandHeld_, v13 & 1);
    if (*(unsigned char *)(a1 + 116))
    {
LABEL_24:
      if (*(unsigned char *)(a1 + 124)) {
        goto LABEL_25;
      }
      goto LABEL_35;
    }
  }
  objc_msgSend(v6, sel_setAudioCodec_, *(unsigned int *)(a1 + 112));
  if (*(unsigned char *)(a1 + 124))
  {
LABEL_25:
    if (*(unsigned char *)(a1 + 132)) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
LABEL_35:
  objc_msgSend(v6, sel_setAudioSource_, *(unsigned int *)(a1 + 120));
  if (*(unsigned char *)(a1 + 132))
  {
LABEL_26:
    if (*(unsigned char *)(a1 + 144)) {
      goto LABEL_27;
    }
LABEL_37:
    objc_msgSend(v6, sel_setAudioSkippedNumSamples_, *(void *)(a1 + 136));
    if (*(unsigned char *)(a1 + 212)) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_36:
  objc_msgSend(v6, sel_setAsrTask_, *(unsigned int *)(a1 + 128));
  if ((*(unsigned char *)(a1 + 144) & 1) == 0) {
    goto LABEL_37;
  }
LABEL_27:
  if ((*(unsigned char *)(a1 + 212) & 1) == 0) {
LABEL_28:
  }
    objc_msgSend(v6, sel_setOrchCancelledReason_, *(unsigned int *)(a1 + 208));
LABEL_29:
  uint64_t v30 = a2;
  uint64_t v14 = (int *)type metadata accessor for SpeakerIdSamplingData(0);
  uint64_t v15 = (unsigned int *)(a1 + v14[27]);
  if ((v15[1] & 1) == 0) {
    objc_msgSend(v6, sel_setTriggerPhrase_, *v15);
  }
  uint64_t v16 = sub_2562E2FD0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1 + v14[26];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256231A18(v20, (uint64_t)v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v23, 1, v16) == 1)
  {
    sub_2562344DC((uint64_t)v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v23, v16);
    id v24 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
    uint64_t v25 = (void *)sub_2562E2FB0();
    id v26 = objc_msgSend(v24, sel_initWithNSUUID_, v25);

    objc_msgSend(v6, sel_setAudioId_, v26);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v27 = v30;
  if (*(void *)(a1 + v14[29])) {
    objc_msgSend(v6, sel_setLocation_);
  }

  uint64_t v28 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  sub_2562319BC(a1);
  return v6;
}

id sub_256236CD4()
{
  id result = objc_msgSend(self, sel_sharedPreferences);
  qword_269F5E450 = (uint64_t)result;
  return result;
}

uint64_t SpeakerIdSamplingSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_2562391FC(a1, (uint64_t)v9, v4, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t SpeakerIdSamplingSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_2562391FC(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_256236F14(uint64_t a1)
{
  *(void *)(v2 + 32) = v1;
  uint64_t v4 = sub_2562E3430();
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = *(void *)(v4 - 8);
  *(void *)(v2 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SpeakerIdSamplingData(0);
  *(void *)(v2 + 64) = v5;
  *(void *)(v2 + 72) = *(void *)(v5 - 8);
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  *(void *)(v2 + 112) = swift_task_alloc();
  *(_OWORD *)(v2 + 120) = *(_OWORD *)a1;
  *(void *)(v2 + 136) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_256237078, 0, 0);
}

id sub_256237078()
{
  uint64_t v64 = v0;
  *(void *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_logger;
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingSELFReporter: Reporter invoked", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2562E3410();
  os_log_type_t v5 = sub_2562E37F0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 136);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    *(void *)(v0 + 24) = *(void *)(v7 + 16);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v4, v5, "#SpeakerIdSamplingSELFReporter: result %ld", v8, 0xCu);
    MEMORY[0x25A2A5190](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v9 = sub_2562E3410();
  os_log_type_t v10 = sub_2562E37F0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 64);
    int v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v63 = v13;
    *(_DWORD *)int v12 = 136315138;
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = MEMORY[0x25A2A4430](v14, v11);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = sub_256229738(v15, v17, &v63);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v9, v10, "#SpeakerIdSamplingSELFReporter: result.SpeakerIdSamplingData %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v13, -1, -1);
    MEMORY[0x25A2A5190](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = *(void *)(v0 + 136);
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v0 + 152) = v19;
  if (v19)
  {
    uint64_t v20 = *(void *)(v0 + 72);
    *(void *)(v0 + 160) = OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_reportingService;
    int v21 = *(_DWORD *)(v20 + 80);
    *(_DWORD *)(v0 + 280) = v21;
    *(void *)(v0 + 168) = *(void *)(v20 + 72);
    *(void *)(v0 + 176) = 0;
    uint64_t v22 = *(void *)(v0 + 112);
    uint64_t v23 = v18 + ((v21 + 32) & ~(unint64_t)v21);
    swift_bridgeObjectRetain();
    sub_256231958(v23, v22);
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E800]), sel_init);
    *(void *)(v0 + 184) = v24;
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)(v0 + 104);
      uint64_t v27 = *(void *)(v0 + 112);
      uint64_t v28 = *(void *)(v0 + 96);
      uint64_t v30 = *(void *)(v0 + 48);
      uint64_t v29 = *(void *)(v0 + 56);
      uint64_t v31 = *(void *)(v0 + 40);
      uint64_t v32 = *(void *)(v0 + 32) + *(void *)(v0 + 144);
      sub_2562392C0();
      sub_256231958(v27, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v32, v31);
      id v33 = sub_256236778(v26, v29);
      objc_msgSend(v25, sel_setSpeakerIdModelSampleReported_, v33);

      sub_256231958(v27, v28);
      id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E808]), sel_init);
      if (result)
      {
        uint64_t v35 = result;
        uint64_t v36 = *(void *)(v0 + 96);
        uint64_t v37 = *(void *)(v0 + 64);
        uint64_t v38 = sub_2562E2FD0();
        *(void *)(v0 + 192) = v38;
        uint64_t v39 = *(void *)(v38 - 8);
        uint64_t v40 = v39;
        *(void *)(v0 + 200) = v39;
        *(void *)(v0 + 208) = *(void *)(v39 + 64);
        uint64_t v41 = swift_task_alloc();
        uint64_t v42 = v36 + *(int *)(v37 + 120);
        *(void *)(v0 + 216) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68)
                                                      - 8)
                                          + 64);
        uint64_t v43 = swift_task_alloc();
        sub_256231A18(v42, v43);
        uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
        *(void *)(v0 + 224) = v44;
        *(void *)(v0 + 232) = (v40 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        int v45 = v44(v43, 1, v38);
        uint64_t v46 = *(void *)(v0 + 96);
        if (v45 == 1)
        {
          sub_2562319BC(*(void *)(v0 + 96));
          sub_2562344DC(v43);
          swift_task_dealloc();
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v41, v43, v38);
          swift_task_dealloc();
          id v52 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
          id v53 = v35;
          uint64_t v54 = (void *)sub_2562E2FB0();
          id v55 = objc_msgSend(v52, sel_initWithNSUUID_, v54);

          objc_msgSend(v53, sel_setOdsampleId_, v55);
          sub_2562319BC(v46);
          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v38);
        }
        uint64_t v56 = *(void *)(v0 + 144);
        uint64_t v57 = *(void *)(v0 + 32);
        uint64_t v58 = (void *)(v57 + *(void *)(v0 + 160));
        swift_task_dealloc();
        objc_msgSend(v25, sel_setEventMetadata_, v35);

        uint64_t v59 = v58[3];
        uint64_t v60 = v58[4];
        __swift_project_boxed_opaque_existential_1(v58, v59);
        uint64_t v62 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 16) + **(int **)(v60 + 16));
        int v61 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v61;
        *int v61 = v0;
        v61[1] = sub_2562378B8;
        return (id)v62(v25, v57 + v56, v59, v60);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
    swift_bridgeObjectRelease();
    int v47 = sub_2562E3410();
    os_log_type_t v48 = sub_2562E3800();
    if (os_log_type_enabled(v47, v48))
    {
      int v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v49 = 0;
      _os_log_impl(&dword_256226000, v47, v48, "#SpeakerIdSamplingSELFReporter: Failed to generate event", v49, 2u);
      MEMORY[0x25A2A5190](v49, -1, -1);
    }
    uint64_t v50 = *(void *)(v0 + 112);

    sub_2562319BC(v50);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v51 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v51();
}

uint64_t sub_2562378B8()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_256238954;
  }
  else
  {
    os_log_type_t v2 = sub_2562379D4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_2562379D4()
{
  if (qword_269F53AF0 != -1) {
    swift_once();
  }
  if (objc_msgSend((id)qword_269F5E450, sel_longLivedIdentifierUploadingEnabled))
  {
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E800]), sel_init);
    *(void *)(v0 + 256) = v1;
    if (v1)
    {
      os_log_type_t v2 = v1;
      sub_256231958(*(void *)(v0 + 112), *(void *)(v0 + 88));
      id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E828]), sel_init);
      if (result)
      {
        uint64_t v4 = result;
        os_log_type_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
        uint64_t v6 = *(void *)(v0 + 192);
        uint64_t v7 = *(void *)(v0 + 88);
        uint64_t v8 = *(void *)(v0 + 64);
        uint64_t v9 = swift_task_alloc();
        uint64_t v10 = v7 + *(int *)(v8 + 124);
        uint64_t v11 = swift_task_alloc();
        sub_256231A18(v10, v11);
        if (v5(v11, 1, v6) == 1)
        {
          sub_2562319BC(*(void *)(v0 + 88));
          sub_2562344DC(v11);
          swift_task_dealloc();
        }
        else
        {
          uint64_t v35 = *(void *)(v0 + 192);
          uint64_t v36 = *(void *)(v0 + 200);
          uint64_t v37 = *(void *)(v0 + 88);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v9, v11, v35);
          swift_task_dealloc();
          id v38 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
          id v39 = v4;
          uint64_t v40 = (void *)sub_2562E2FB0();
          id v41 = objc_msgSend(v38, sel_initWithNSUUID_, v40);

          objc_msgSend(v39, sel_setRequestId_, v41);
          sub_2562319BC(v37);
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v9, v35);
        }
        uint64_t v42 = *(void *)(v0 + 112);
        uint64_t v43 = *(void *)(v0 + 80);
        swift_task_dealloc();
        objc_msgSend(v2, sel_setSpeakerIdSampleToRequestMap_, v4);

        sub_256231958(v42, v43);
        id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E808]), sel_init);
        if (result)
        {
          uint64_t v44 = result;
          int v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
          uint64_t v46 = *(void *)(v0 + 192);
          uint64_t v47 = *(void *)(v0 + 80);
          uint64_t v48 = *(void *)(v0 + 64);
          uint64_t v49 = swift_task_alloc();
          uint64_t v50 = v47 + *(int *)(v48 + 120);
          uint64_t v51 = swift_task_alloc();
          sub_256231A18(v50, v51);
          if (v45(v51, 1, v46) == 1)
          {
            sub_2562319BC(*(void *)(v0 + 80));
            sub_2562344DC(v51);
            swift_task_dealloc();
          }
          else
          {
            uint64_t v52 = *(void *)(v0 + 192);
            uint64_t v53 = *(void *)(v0 + 200);
            uint64_t v54 = *(void *)(v0 + 80);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v49, v51, v52);
            swift_task_dealloc();
            id v55 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
            id v56 = v44;
            uint64_t v57 = (void *)sub_2562E2FB0();
            id v58 = objc_msgSend(v55, sel_initWithNSUUID_, v57);

            objc_msgSend(v56, sel_setOdsampleId_, v58);
            sub_2562319BC(v54);
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v49, v52);
          }
          uint64_t v59 = *(void *)(v0 + 144);
          uint64_t v60 = *(void *)(v0 + 32);
          int v61 = (void *)(v60 + *(void *)(v0 + 160));
          swift_task_dealloc();
          objc_msgSend(v2, sel_setEventMetadata_, v44);

          uint64_t v62 = v61[3];
          uint64_t v63 = v61[4];
          __swift_project_boxed_opaque_existential_1(v61, v62);
          int v76 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 + 16) + **(int **)(v63 + 16));
          uint64_t v64 = (void *)swift_task_alloc();
          *(void *)(v0 + 264) = v64;
          void *v64 = v0;
          uint64_t v65 = sub_256238308;
LABEL_28:
          v64[1] = v65;
          return (id)v76(v2, v60 + v59, v62, v63);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_33;
    }
  }
  int v12 = *(void **)(v0 + 184);
  sub_2562319BC(*(void *)(v0 + 112));

  uint64_t v13 = *(void *)(v0 + 176) + 1;
  if (v13 == *(void *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v0 + 176) = v13;
    sub_256231958(*(void *)(v0 + 136)+ ((*(unsigned __int8 *)(v0 + 280) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280))+ *(void *)(v0 + 168) * v13, *(void *)(v0 + 112));
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E800]), sel_init);
    *(void *)(v0 + 184) = v14;
    if (v14)
    {
      os_log_type_t v2 = v14;
      uint64_t v15 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 112);
      uint64_t v17 = *(void *)(v0 + 96);
      uint64_t v19 = *(void *)(v0 + 48);
      uint64_t v18 = *(void *)(v0 + 56);
      uint64_t v20 = *(void *)(v0 + 40);
      uint64_t v21 = *(void *)(v0 + 32) + *(void *)(v0 + 144);
      sub_2562392C0();
      sub_256231958(v16, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v21, v20);
      id v22 = sub_256236778(v15, v18);
      objc_msgSend(v2, sel_setSpeakerIdModelSampleReported_, v22);

      sub_256231958(v16, v17);
      id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E808]), sel_init);
      if (result)
      {
        uint64_t v23 = result;
        uint64_t v24 = *(void *)(v0 + 96);
        uint64_t v25 = *(void *)(v0 + 64);
        uint64_t v26 = sub_2562E2FD0();
        *(void *)(v0 + 192) = v26;
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = v27;
        *(void *)(v0 + 200) = v27;
        *(void *)(v0 + 208) = *(void *)(v27 + 64);
        uint64_t v29 = swift_task_alloc();
        uint64_t v30 = v24 + *(int *)(v25 + 120);
        *(void *)(v0 + 216) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68)
                                                      - 8)
                                          + 64);
        uint64_t v31 = swift_task_alloc();
        sub_256231A18(v30, v31);
        uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
        *(void *)(v0 + 224) = v32;
        *(void *)(v0 + 232) = (v28 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        int v33 = v32(v31, 1, v26);
        uint64_t v34 = *(void *)(v0 + 96);
        if (v33 == 1)
        {
          sub_2562319BC(*(void *)(v0 + 96));
          sub_2562344DC(v31);
          swift_task_dealloc();
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v29, v31, v26);
          swift_task_dealloc();
          id v71 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
          id v72 = v23;
          uint64_t v73 = (void *)sub_2562E2FB0();
          id v74 = objc_msgSend(v71, sel_initWithNSUUID_, v73);

          objc_msgSend(v72, sel_setOdsampleId_, v74);
          sub_2562319BC(v34);
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v26);
        }
        uint64_t v59 = *(void *)(v0 + 144);
        uint64_t v60 = *(void *)(v0 + 32);
        v75 = (void *)(v60 + *(void *)(v0 + 160));
        swift_task_dealloc();
        objc_msgSend(v2, sel_setEventMetadata_, v23);

        uint64_t v62 = v75[3];
        uint64_t v63 = v75[4];
        __swift_project_boxed_opaque_existential_1(v75, v62);
        int v76 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 + 16) + **(int **)(v63 + 16));
        uint64_t v64 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v64;
        void *v64 = v0;
        uint64_t v65 = sub_2562378B8;
        goto LABEL_28;
      }
LABEL_33:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    v66 = sub_2562E3410();
    os_log_type_t v67 = sub_2562E3800();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl(&dword_256226000, v66, v67, "#SpeakerIdSamplingSELFReporter: Failed to generate event", v68, 2u);
      MEMORY[0x25A2A5190](v68, -1, -1);
    }
    uint64_t v69 = *(void *)(v0 + 112);

    sub_2562319BC(v69);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v70 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v70();
}

uint64_t sub_256238308()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_256238AA0;
  }
  else {
    os_log_type_t v2 = sub_25623841C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_25623841C()
{
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 112);

  sub_2562319BC(v2);
  uint64_t v3 = *(void *)(v0 + 176) + 1;
  if (v3 == *(void *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v31();
  }
  *(void *)(v0 + 176) = v3;
  sub_256231958(*(void *)(v0 + 136)+ ((*(unsigned __int8 *)(v0 + 280) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280))+ *(void *)(v0 + 168) * v3, *(void *)(v0 + 112));
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E800]), sel_init);
  *(void *)(v0 + 184) = v4;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_2562E3410();
    os_log_type_t v28 = sub_2562E3800();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_256226000, v27, v28, "#SpeakerIdSamplingSELFReporter: Failed to generate event", v29, 2u);
      MEMORY[0x25A2A5190](v29, -1, -1);
    }
    uint64_t v30 = *(void *)(v0 + 112);

    sub_2562319BC(v30);
    goto LABEL_10;
  }
  os_log_type_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 32) + *(void *)(v0 + 144);
  sub_2562392C0();
  sub_256231958(v7, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  id v13 = sub_256236778(v6, v9);
  objc_msgSend(v5, sel_setSpeakerIdModelSampleReported_, v13);

  sub_256231958(v7, v8);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E808]), sel_init);
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v17 = *(void *)(v0 + 64);
    uint64_t v18 = sub_2562E2FD0();
    *(void *)(v0 + 192) = v18;
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v19;
    *(void *)(v0 + 200) = v19;
    *(void *)(v0 + 208) = *(void *)(v19 + 64);
    uint64_t v21 = swift_task_alloc();
    uint64_t v22 = v16 + *(int *)(v17 + 120);
    *(void *)(v0 + 216) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68) - 8)
                                      + 64);
    uint64_t v23 = swift_task_alloc();
    sub_256231A18(v22, v23);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    *(void *)(v0 + 224) = v24;
    *(void *)(v0 + 232) = (v20 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    int v25 = v24(v23, 1, v18);
    uint64_t v26 = *(void *)(v0 + 96);
    if (v25 == 1)
    {
      sub_2562319BC(*(void *)(v0 + 96));
      sub_2562344DC(v23);
      swift_task_dealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v21, v23, v18);
      swift_task_dealloc();
      id v32 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      id v33 = v15;
      uint64_t v34 = (void *)sub_2562E2FB0();
      id v35 = objc_msgSend(v32, sel_initWithNSUUID_, v34);

      objc_msgSend(v33, sel_setOdsampleId_, v35);
      sub_2562319BC(v26);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v18);
    }
    uint64_t v36 = *(void *)(v0 + 144);
    uint64_t v37 = *(void *)(v0 + 32);
    id v38 = (void *)(v37 + *(void *)(v0 + 160));
    swift_task_dealloc();
    objc_msgSend(v5, sel_setEventMetadata_, v15);

    uint64_t v39 = v38[3];
    uint64_t v40 = v38[4];
    __swift_project_boxed_opaque_existential_1(v38, v39);
    uint64_t v42 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 + 16) + **(int **)(v40 + 16));
    id v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v41;
    *id v41 = v0;
    v41[1] = sub_2562378B8;
    return (id)v42(v5, v37 + v36, v39, v40);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_256238954()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingSELFReporter: Unable to report SampleReported event", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  id v4 = (void *)v0[23];
  uint64_t v5 = v0[14];

  swift_willThrow();
  sub_2562319BC(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

id sub_256238AA0()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  BOOL v3 = os_log_type_enabled(v1, v2);
  id v4 = *(void **)(v0 + 272);
  uint64_t v5 = *(void **)(v0 + 256);
  uint64_t v6 = *(void **)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 112);
  if (v3)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingSELFReporter: Unable to report Sample To Request Map event", v8, 2u);
    MEMORY[0x25A2A5190](v8, -1, -1);
  }

  sub_2562319BC(v7);
  uint64_t v9 = *(void *)(v0 + 176) + 1;
  if (v9 == *(void *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v37();
  }
  *(void *)(v0 + 176) = v9;
  sub_256231958(*(void *)(v0 + 136)+ ((*(unsigned __int8 *)(v0 + 280) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 280))+ *(void *)(v0 + 168) * v9, *(void *)(v0 + 112));
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E800]), sel_init);
  *(void *)(v0 + 184) = v10;
  if (!v10)
  {
    swift_bridgeObjectRelease();
    id v33 = sub_2562E3410();
    os_log_type_t v34 = sub_2562E3800();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v35 = 0;
      _os_log_impl(&dword_256226000, v33, v34, "#SpeakerIdSamplingSELFReporter: Failed to generate event", v35, 2u);
      MEMORY[0x25A2A5190](v35, -1, -1);
    }
    uint64_t v36 = *(void *)(v0 + 112);

    sub_2562319BC(v36);
    goto LABEL_12;
  }
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v18 = *(void *)(v0 + 32) + *(void *)(v0 + 144);
  sub_2562392C0();
  sub_256231958(v13, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v18, v17);
  id v19 = sub_256236778(v12, v15);
  objc_msgSend(v11, sel_setSpeakerIdModelSampleReported_, v19);

  sub_256231958(v13, v14);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E808]), sel_init);
  if (result)
  {
    uint64_t v21 = result;
    uint64_t v22 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 64);
    uint64_t v24 = sub_2562E2FD0();
    *(void *)(v0 + 192) = v24;
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = v25;
    *(void *)(v0 + 200) = v25;
    *(void *)(v0 + 208) = *(void *)(v25 + 64);
    uint64_t v27 = swift_task_alloc();
    uint64_t v28 = v22 + *(int *)(v23 + 120);
    *(void *)(v0 + 216) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68) - 8)
                                      + 64);
    uint64_t v29 = swift_task_alloc();
    sub_256231A18(v28, v29);
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    *(void *)(v0 + 224) = v30;
    *(void *)(v0 + 232) = (v26 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    int v31 = v30(v29, 1, v24);
    uint64_t v32 = *(void *)(v0 + 96);
    if (v31 == 1)
    {
      sub_2562319BC(*(void *)(v0 + 96));
      sub_2562344DC(v29);
      swift_task_dealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v27, v29, v24);
      swift_task_dealloc();
      id v38 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      id v39 = v21;
      uint64_t v40 = (void *)sub_2562E2FB0();
      id v41 = objc_msgSend(v38, sel_initWithNSUUID_, v40);

      objc_msgSend(v39, sel_setOdsampleId_, v41);
      sub_2562319BC(v32);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v24);
    }
    uint64_t v42 = *(void *)(v0 + 144);
    uint64_t v43 = *(void *)(v0 + 32);
    uint64_t v44 = (void *)(v43 + *(void *)(v0 + 160));
    swift_task_dealloc();
    objc_msgSend(v11, sel_setEventMetadata_, v21);

    uint64_t v45 = v44[3];
    uint64_t v46 = v44[4];
    __swift_project_boxed_opaque_existential_1(v44, v45);
    uint64_t v48 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 + 16) + **(int **)(v46 + 16));
    uint64_t v47 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v47;
    *uint64_t v47 = v0;
    v47[1] = sub_2562378B8;
    return (id)v48(v11, v43 + v42, v45, v46);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25623905C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_reportingService;

  return __swift_destroy_boxed_opaque_existential_0(v3);
}

uint64_t SpeakerIdSamplingSELFReporter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_reportingService);
  return v0;
}

uint64_t SpeakerIdSamplingSELFReporter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_reportingService);

  return swift_deallocClassInstance();
}

uint64_t sub_2562391FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v11 = a3 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

unint64_t sub_2562392C0()
{
  unint64_t result = qword_269F53E38;
  if (!qword_269F53E38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F53E38);
  }
  return result;
}

uint64_t sub_256239300()
{
  return type metadata accessor for SpeakerIdSamplingSELFReporter();
}

uint64_t type metadata accessor for SpeakerIdSamplingSELFReporter()
{
  uint64_t result = qword_269F53F30;
  if (!qword_269F53F30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256239354()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSamplingSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingSELFReporter);
}

uint64_t dispatch thunk of SpeakerIdSamplingSELFReporter.__allocating_init(logger:reportingService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  uint64_t v5 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_256239524(uint64_t a1)
{
  v2[2] = v1;
  v2[3] = *(void *)(type metadata accessor for DeviceExperimentMetrics(0) - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *(void *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  return MEMORY[0x270FA2498](sub_2562395E8, 0, 0);
}

uint64_t sub_2562395E8()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Reporter invoked: SiriDeviceExperimentMetricsReporter", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = v0[5];

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = v0[5] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = (char *)v0[4];
      sub_256239F28(v7, (uint64_t)v9, type metadata accessor for DeviceExperimentMetrics);
      id v10 = _s16MetricsFramework020SiriDeviceExperimentA13BiomeReporterC06createf2Ond6DigesteA5Event010experimentA0So06BMSiriidjeA0CAA0deA0V_tFZ_0(v9);
      sub_2562E30D0();

      sub_256239F90((uint64_t)v9, type metadata accessor for DeviceExperimentMetrics);
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_256239770()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDeviceExperimentMetricsBiomeReporter.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_2562398F8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  if (a4)
  {
    uint64_t v15 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  if (!a6)
  {
    uint64_t v16 = 0;
    uint64_t v17 = a10;
    if (a9) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v18 = 0;
    goto LABEL_9;
  }
  uint64_t v16 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  uint64_t v17 = a10;
  if (!a9) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v18 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_256239FF0();
  id v19 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v11, sel_initWithEventMetadata_digestType_experimentId_treatmentIdUUID_deploymentId_deviceType_programCode_digests_, a1, a2, v15, v16, a7, v18, v17, v19);

  return v20;
}

id _s16MetricsFramework020SiriDeviceExperimentA13BiomeReporterC06createf2Ond6DigesteA5Event010experimentA0So06BMSiriidjeA0CAA0deA0V_tFZ_0(char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53F60);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ExperimentDigest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x263F8EE78];
  uint64_t v9 = (int *)type metadata accessor for DeviceExperimentMetrics(0);
  uint64_t v10 = *(void *)&a1[v9[11]];
  if (v10)
  {
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v37 = a1;
      uint64_t v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v13 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_256239F28(v12, (uint64_t)v8, type metadata accessor for ExperimentDigest);
        _s16MetricsFramework16ExperimentDigestV12toBiomeEvent010experimentD0So014BMSiriOnDevicedcacD0CAC_tFZ_0((uint64_t)v8);
        MEMORY[0x25A2A4400]();
        if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2562E3730();
        }
        sub_2562E3750();
        sub_2562E3720();
        sub_256239F90((uint64_t)v8, type metadata accessor for ExperimentDigest);
        v12 += v13;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      a1 = v37;
    }
  }
  sub_256239F28((uint64_t)a1, (uint64_t)v4, type metadata accessor for DeviceExperimentMetrics);
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v9 - 1) + 56))(v4, 0, 1, v9);
  uint64_t v37 = (char *)_s16MetricsFramework13EventMetadataV07toBiomeC0016deviceExperimentA0So020BMSiriOnDeviceDigesthacD0CAA0khA0VSg_tFZ_0((uint64_t)v4);
  sub_25622F3C4((uint64_t)v4, &qword_269F53F60);
  if (a1[v9[5] + 4]) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = (void *)sub_2562E3D30();
  }
  uint64_t v14 = (uint64_t *)&a1[v9[6]];
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = a1;
  sub_256231A18((uint64_t)&a1[v9[7]], (uint64_t)v19);
  uint64_t v21 = sub_2562E2FD0();
  uint64_t v22 = *(void *)(v21 - 8);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21);
  swift_bridgeObjectRetain();
  if (v23 == 1)
  {
    sub_25622F3C4((uint64_t)v19, &qword_269F53D68);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v24 = sub_2562E2FA0();
    uint64_t v25 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
  }
  if (v20[v9[8] + 8]) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = (void *)sub_2562E3D40();
  }
  uint64_t v28 = v9[10];
  uint64_t v29 = (uint64_t *)&v20[v9[9]];
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  if (v20[v28 + 4])
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = (void *)sub_2562E3D30();
  }
  id v33 = objc_allocWithZone(MEMORY[0x263F2A408]);
  return sub_2562398F8(v37, v36, v15, v16, v24, v25, v27, v30, v31, v32);
}

uint64_t sub_256239EA8()
{
  return type metadata accessor for SiriDeviceExperimentMetricsBiomeReporter();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsBiomeReporter()
{
  uint64_t result = qword_269F53F50;
  if (!qword_269F53F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetricsBiomeReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDeviceExperimentMetricsBiomeReporter);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_256239F28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256239F90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_256239FF0()
{
  unint64_t result = qword_269F53F68;
  if (!qword_269F53F68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F53F68);
  }
  return result;
}

uint64_t sub_25623A030(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25623A09C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25623A0E8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25623A13C())()
{
  return j__swift_endAccess;
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_25623B374(a1, v2);
  swift_release();
  return v3;
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.init(logger:)(uint64_t a1)
{
  uint64_t v2 = sub_25623B374(a1, v1);
  swift_release();
  return v2;
}

uint64_t sub_25623A220(uint64_t a1)
{
  v2[2] = v1;
  v2[3] = *(void *)(type metadata accessor for DeviceExperimentMetrics(0) - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *(void *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269F54DA8 + dword_269F54DA8);
  uint64_t v6 = (void *)swift_task_alloc();
  v2[6] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_25623A330;
  return v8(2, 1);
}

uint64_t sub_25623A330(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25623A430, 0, 0);
}

uint64_t sub_25623A430()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v3 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
    *(void *)(v0 + 64) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
    uint64_t v4 = v2 + v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_25623A750;
    uint64_t v6 = v1;
    uint64_t v7 = v4;
    goto LABEL_3;
  }
  uint64_t v9 = sub_2562E3410();
  uint64_t v10 = sub_2562E3800();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_256226000, v9, (os_log_type_t)v10, "Unable to create exection metadata event", v11, 2u);
    MEMORY[0x25A2A5190](v11, -1, -1);
  }

  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v12 + 16);
  *(void *)(v0 + 88) = v13;
  if (!v13)
  {
LABEL_20:
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  uint64_t v14 = *(void *)(v0 + 24);
  uint64_t v15 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService;
  *(void *)(v0 + 104) = v15;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v14 + 80);
  *(void *)(v0 + 112) = 0;
  uint64_t v16 = *(void *)(v12 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_25:
    __break(1u);
    return result;
  }
  unint64_t v17 = 0;
  while (1)
  {
    sub_25623B500(result+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(void *)(*(void *)(v0 + 24) + 72) * v17, *(void *)(v0 + 32));
    unint64_t v18 = DeviceExperimentMetrics.convertToSELFEvents()();
    *(void *)(v0 + 120) = v18;
    if (v18 >> 62) {
      break;
    }
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 128) = v19;
    if (v19) {
      goto LABEL_17;
    }
LABEL_13:
    uint64_t v20 = *(void *)(v0 + 112);
    uint64_t v21 = *(void *)(v0 + 88);
    uint64_t v22 = *(void *)(v0 + 32);
    swift_bridgeObjectRelease();
    sub_25623B564(v22);
    if (v20 + 1 == v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    unint64_t v17 = *(void *)(v0 + 112) + 1;
    *(void *)(v0 + 112) = v17;
    uint64_t result = *(void *)(v0 + 40);
    if (v17 >= *(void *)(result + 16)) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2562E3AD0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v23;
  if (!v23) {
    goto LABEL_13;
  }
LABEL_17:
  uint64_t v24 = *(void *)(v0 + 16);
  *(void *)(v0 + 136) = *(void *)(v24 + *(void *)(v0 + 96));
  uint64_t v25 = *(void *)(v0 + 120);
  if ((v25 & 0xC000000000000001) != 0)
  {
    id v26 = (id)MEMORY[0x25A2A4740](0);
    uint64_t v24 = *(void *)(v0 + 16);
  }
  else
  {
    id v26 = *(id *)(v25 + 32);
  }
  *(void *)(v0 + 144) = v26;
  *(void *)(v0 + 152) = 1;
  uint64_t v28 = *(void *)(v0 + 104);
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_25623AAA0;
  uint64_t v7 = v24 + v28;
  uint64_t v6 = (uint64_t)v26;
LABEL_3:
  return sub_2562492A0(v6, v7);
}

uint64_t sub_25623A750()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25623ADE0;
  }
  else {
    uint64_t v2 = sub_25623A864;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25623A864()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 88) = v2;
  if (!v2)
  {
LABEL_13:
    swift_task_dealloc();
    unint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService;
  *(void *)(v0 + 104) = v4;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v3 + 80);
  *(void *)(v0 + 112) = 0;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v7 = 0;
  while (1)
  {
    sub_25623B500(result+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(void *)(*(void *)(v0 + 24) + 72) * v7, *(void *)(v0 + 32));
    unint64_t v8 = DeviceExperimentMetrics.convertToSELFEvents()();
    *(void *)(v0 + 120) = v8;
    if (v8 >> 62) {
      break;
    }
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 128) = v9;
    if (v9) {
      goto LABEL_10;
    }
LABEL_6:
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 32);
    swift_bridgeObjectRelease();
    sub_25623B564(v12);
    if (v10 + 1 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    unint64_t v7 = *(void *)(v0 + 112) + 1;
    *(void *)(v0 + 112) = v7;
    uint64_t result = *(void *)(v0 + 40);
    if (v7 >= *(void *)(result + 16)) {
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2562E3AD0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v13;
  if (!v13) {
    goto LABEL_6;
  }
LABEL_10:
  uint64_t v14 = *(void *)(v0 + 16);
  *(void *)(v0 + 136) = *(void *)(v14 + *(void *)(v0 + 96));
  uint64_t v15 = *(void *)(v0 + 120);
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x25A2A4740](0);
    uint64_t v14 = *(void *)(v0 + 16);
  }
  else
  {
    id v16 = *(id *)(v15 + 32);
  }
  *(void *)(v0 + 144) = v16;
  *(void *)(v0 + 152) = 1;
  uint64_t v18 = *(void *)(v0 + 104);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_25623AAA0;
  return sub_2562492A0((uint64_t)v16, v14 + v18);
}

uint64_t sub_25623AAA0()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25623B09C;
  }
  else
  {
    uint64_t v2 = sub_25623ABC8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_25623ABC8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 128);

  if (v1 == v2)
  {
    while (1)
    {
      uint64_t v3 = *(void *)(v0 + 112);
      uint64_t v4 = *(void *)(v0 + 88);
      uint64_t v5 = *(void *)(v0 + 32);
      swift_bridgeObjectRelease();
      id result = (id)sub_25623B564(v5);
      if (v3 + 1 == v4) {
        break;
      }
      unint64_t v7 = *(void *)(v0 + 112) + 1;
      *(void *)(v0 + 112) = v7;
      uint64_t v8 = *(void *)(v0 + 40);
      if (v7 >= *(void *)(v8 + 16))
      {
        __break(1u);
        goto LABEL_21;
      }
      sub_25623B500(v8+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(void *)(*(void *)(v0 + 24) + 72) * v7, *(void *)(v0 + 32));
      unint64_t v9 = DeviceExperimentMetrics.convertToSELFEvents()();
      *(void *)(v0 + 120) = v9;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_2562E3AD0();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = v11;
        if (v11)
        {
LABEL_8:
          uint64_t v12 = 0;
          *(void *)(v0 + 136) = *(void *)(*(void *)(v0 + 16) + *(void *)(v0 + 96));
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        *(void *)(v0 + 128) = v10;
        if (v10) {
          goto LABEL_8;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v18();
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 152);
LABEL_10:
    uint64_t v13 = *(void *)(v0 + 120);
    if ((v13 & 0xC000000000000001) != 0) {
      id result = (id)MEMORY[0x25A2A4740](v12);
    }
    else {
      id result = *(id *)(v13 + 8 * v12 + 32);
    }
    uint64_t v14 = (uint64_t)result;
    *(void *)(v0 + 144) = result;
    *(void *)(v0 + 152) = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_21:
      __break(1u);
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 16);
      unint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v17;
      *unint64_t v17 = v0;
      v17[1] = sub_25623AAA0;
      return (id)sub_2562492A0(v14, v16 + v15);
    }
  }
  return result;
}

uint64_t sub_25623ADE0()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = *(void **)(v0 + 80);
  if (v3)
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Unable to report execution Event", v5, 2u);
    MEMORY[0x25A2A5190](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v6 + 16);
  *(void *)(v0 + 88) = v7;
  if (!v7)
  {
LABEL_15:
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService;
  *(void *)(v0 + 104) = v9;
  *(_DWORD *)(v0 + 176) = *(_DWORD *)(v8 + 80);
  *(void *)(v0 + 112) = 0;
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  unint64_t v12 = 0;
  while (1)
  {
    sub_25623B500(result+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ *(void *)(*(void *)(v0 + 24) + 72) * v12, *(void *)(v0 + 32));
    unint64_t v13 = DeviceExperimentMetrics.convertToSELFEvents()();
    *(void *)(v0 + 120) = v13;
    if (v13 >> 62) {
      break;
    }
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 128) = v14;
    if (v14) {
      goto LABEL_12;
    }
LABEL_8:
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 32);
    swift_bridgeObjectRelease();
    sub_25623B564(v17);
    if (v15 + 1 == v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    unint64_t v12 = *(void *)(v0 + 112) + 1;
    *(void *)(v0 + 112) = v12;
    uint64_t result = *(void *)(v0 + 40);
    if (v12 >= *(void *)(result + 16)) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_2562E3AD0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v18;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_12:
  uint64_t v19 = *(void *)(v0 + 16);
  *(void *)(v0 + 136) = *(void *)(v19 + *(void *)(v0 + 96));
  uint64_t v20 = *(void *)(v0 + 120);
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v21 = (id)MEMORY[0x25A2A4740](0);
    uint64_t v19 = *(void *)(v0 + 16);
  }
  else
  {
    id v21 = *(id *)(v20 + 32);
  }
  *(void *)(v0 + 144) = v21;
  *(void *)(v0 + 152) = 1;
  uint64_t v23 = *(void *)(v0 + 104);
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v24;
  void *v24 = v0;
  v24[1] = sub_25623AAA0;
  return sub_2562492A0((uint64_t)v21, v19 + v23);
}

uint64_t sub_25623B09C()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  if (os_log_type_enabled(v1, v2))
  {
    BOOL v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Unable to report event", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = (void *)v0[18];
  uint64_t v5 = v0[4];

  swift_willThrow();
  sub_25623B564(v5);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_25623B1A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SiriDeviceExperimentMetricsSELFReporter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25623B374(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents) = MEMORY[0x263F8EE78];
  uint64_t v4 = a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_logger;
  uint64_t v5 = sub_2562E3430();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  type metadata accessor for SELFReportingService();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = self;
  swift_retain();
  v7[3] = objc_msgSend(v8, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  id v9 = objc_msgSend(self, sel_sharedAnalytics);
  id v10 = objc_msgSend(v9, sel_defaultMessageStream);

  v7[2] = v10;
  v7[4] = 0xD000000000000027;
  v7[5] = 0x80000002562EBB60;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  *(void *)(a2 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_reportingService) = v7;
  return a2;
}

uint64_t sub_25623B500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceExperimentMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25623B564(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeviceExperimentMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25623B5C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  BOOL v3 = (void *)(*a1 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25623B61C()
{
  return type metadata accessor for SiriDeviceExperimentMetricsSELFReporter();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsSELFReporter()
{
  uint64_t result = qword_269F53F88;
  if (!qword_269F53F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25623B670()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetricsSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDeviceExperimentMetricsSELFReporter);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.oddSiriClientEvents.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.oddSiriClientEvents.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.oddSiriClientEvents.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsSELFReporter.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unint64_t sub_25623B7B4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_25623B878(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25623B88C()
{
  return sub_2562E3D90();
}

uint64_t sub_25623B8D4()
{
  return sub_2562E3D60();
}

uint64_t sub_25623B900()
{
  return sub_2562E3D90();
}

unint64_t sub_25623B944()
{
  return sub_25623B7B4(*v0);
}

uint64_t sub_25623B94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25623C9D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25623B974()
{
  return 0;
}

void sub_25623B980(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_25623B98C(uint64_t a1)
{
  unint64_t v2 = sub_25623BDDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25623B9C8(uint64_t a1)
{
  unint64_t v2 = sub_25623BDDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SiriResponseIdentifierMapping.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53F98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25623BDDC();
  sub_2562E3DC0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v40 = 0;
  uint64_t v9 = sub_2562E3B90();
  uint64_t v11 = v10;
  char v38 = 1;
  sub_25623BE30();
  swift_bridgeObjectRetain();
  sub_2562E3BB0();
  int v32 = v39;
  char v37 = 2;
  uint64_t v12 = sub_2562E3B30();
  uint64_t v15 = v14;
  uint64_t v29 = v12;
  char v36 = 3;
  swift_bridgeObjectRetain();
  uint64_t v31 = v15;
  uint64_t v16 = sub_2562E3B30();
  uint64_t v30 = v17;
  uint64_t v27 = v16;
  char v35 = 4;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  int v26 = sub_2562E3B40();
  char v34 = 5;
  int v25 = sub_2562E3B40();
  char v33 = 6;
  uint64_t v18 = sub_2562E3B30();
  uint64_t v20 = v19;
  id v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v28 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v32;
  uint64_t v22 = v30;
  uint64_t v23 = v31;
  *(void *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = v22;
  *(unsigned char *)(a2 + 56) = v26;
  *(unsigned char *)(a2 + 57) = v25;
  *(void *)(a2 + 64) = v28;
  *(void *)(a2 + 72) = v20;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_25623BDDC()
{
  unint64_t result = qword_269F53FA0;
  if (!qword_269F53FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FA0);
  }
  return result;
}

unint64_t sub_25623BE30()
{
  unint64_t result = qword_269F53FA8;
  if (!qword_269F53FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FA8);
  }
  return result;
}

uint64_t sub_25623BE84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SiriResponseIdentifierMapping.init(from:)(a1, a2);
}

Swift::String __swiftcall SiriReponseCategory.getCategoryCode()()
{
  uint64_t v1 = 8 * *v0;
  uint64_t v2 = *(void *)&aApple_1[v1];
  BOOL v3 = *(void **)((char *)&unk_2562E5660 + v1);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

MetricsFramework::SiriReponseCategory_optional __swiftcall SiriReponseCategory.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_2562E3CB0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      char v5 = 1;
LABEL_3:
      char v6 = v5;
      break;
    case 2:
      break;
    case 3:
      char v6 = 3;
      break;
    case 4:
      char v6 = 4;
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    default:
      char v6 = 20;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t SiriReponseCategory.rawValue.getter()
{
  return *(void *)&aApple_1[8 * *v0];
}

uint64_t sub_25623C058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25629CDF8(*a1, *a2);
}

unint64_t sub_25623C068()
{
  unint64_t result = qword_269F53FB0;
  if (!qword_269F53FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FB0);
  }
  return result;
}

uint64_t sub_25623C0BC()
{
  return sub_2562E3D90();
}

uint64_t sub_25623C124()
{
  SiriReponseCategory.rawValue.getter();
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25623C188()
{
  return sub_2562E3D90();
}

MetricsFramework::SiriReponseCategory_optional sub_25623C1EC(Swift::String *a1)
{
  return SiriReponseCategory.init(rawValue:)(*a1);
}

uint64_t sub_25623C1F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SiriReponseCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25623C220()
{
  return sub_2562E36D0();
}

uint64_t initializeBufferWithCopyOfBuffer for RequestWithNoAssetData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SiriResponseIdentifierMapping()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriResponseIdentifierMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SiriResponseIdentifierMapping(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for SiriResponseIdentifierMapping(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriResponseIdentifierMapping(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriResponseIdentifierMapping(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriResponseIdentifierMapping()
{
  return &type metadata for SiriResponseIdentifierMapping;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SiriReponseCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriReponseCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *__n128 result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25623C6ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 19;
        break;
    }
  }
  return result;
}

uint64_t sub_25623C714(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25623C71C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriReponseCategory()
{
  return &type metadata for SiriReponseCategory;
}

uint64_t getEnumTagSinglePayload for SiriResponseIdentifierMapping.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriResponseIdentifierMapping.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25623C890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriResponseIdentifierMapping.CodingKeys()
{
  return &type metadata for SiriResponseIdentifierMapping.CodingKeys;
}

unint64_t sub_25623C8CC()
{
  unint64_t result = qword_269F53FB8;
  if (!qword_269F53FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FB8);
  }
  return result;
}

unint64_t sub_25623C924()
{
  unint64_t result = qword_269F53FC0;
  if (!qword_269F53FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FC0);
  }
  return result;
}

unint64_t sub_25623C97C()
{
  unint64_t result = qword_269F53FC8;
  if (!qword_269F53FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FC8);
  }
  return result;
}

uint64_t sub_25623C9D0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002562EBB90 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002562EBBB0 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002562EBBD0 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002562EBBF0 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002562EBC10 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002562EBC30 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002562EBC50)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_25623CC74()
{
  unint64_t result = qword_269F53FD0;
  if (!qword_269F53FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F53FD0);
  }
  return result;
}

uint64_t SiriDeviceExperimentMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SiriDeviceExperimentMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t SiriDeviceExperimentMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  id v70 = a1;
  uint64_t v4 = sub_2562E3430();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v65 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v56 - v8;
  uint64_t v71 = v5;
  uint64_t v10 = *(void (**)(void))(v5 + 16);
  uint64_t v66 = v2 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_logger;
  v10();
  uint64_t v11 = sub_2562E2FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v61 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v62 = v13;
  sub_2562E2FC0();
  uint64_t v75 = v2;
  uint64_t v14 = *(void (**)(void))(v12 + 32);
  uint64_t v68 = v2 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_oddId;
  uint64_t v69 = v11;
  v14();
  uint64_t v15 = sub_2562E3340();
  swift_allocObject();
  id v70 = v70;
  uint64_t v16 = sub_2562E3330();
  uint64_t v73 = v15;
  uint64_t v74 = MEMORY[0x263F396B8];
  uint64_t v72 = v16;
  uint64_t v63 = v10;
  uint64_t v64 = v5 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v10)(v9, a2, v4);
  sub_2562E3140();
  swift_allocObject();
  uint64_t v17 = v67;
  uint64_t v18 = sub_2562E3120();
  if (v17)
  {

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v19(a2, v4);
    v19(v66, v4);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v68, v69);
    type metadata accessor for SiriDeviceExperimentMetrics();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v20 = v18;
    uint64_t v21 = sub_2562E2F80();
    id v58 = &v56;
    uint64_t v22 = *(void *)(v21 - 8);
    MEMORY[0x270FA5388](v21);
    uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E32A0();
    uint64_t v25 = sub_2562E3060();
    uint64_t v60 = v4;
    uint64_t v26 = v25;
    uint64_t v57 = &v56;
    uint64_t v27 = a2;
    uint64_t v28 = *(void *)(v25 - 8);
    MEMORY[0x270FA5388](v25);
    uint64_t v66 = 0;
    uint64_t v30 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3020();
    uint64_t v67 = v20;
    sub_2562E3130();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    uint64_t v31 = v75;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    uint64_t v32 = (uint64_t)v65;
    uint64_t v59 = v27;
    uint64_t v33 = v60;
    char v34 = v63;
    ((void (*)(char *, uint64_t, uint64_t))v63)(v65, v27, v60);
    type metadata accessor for SiriDeviceExperimentMetricsDataProvider();
    uint64_t v35 = swift_allocObject();
    uint64_t v57 = *(uint64_t **)(v71 + 32);
    id v58 = (uint64_t *)(v71 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v35 + OBJC_IVAR____TtC16MetricsFramework39SiriDeviceExperimentMetricsDataProvider_logger, v32, v33);
    *(void *)(v31
              + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_siriDeviceExperimentMetricsDataProvider) = v35;
    uint64_t v36 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v32, v27, v33);
    MEMORY[0x270FA5388](v36);
    char v37 = (char *)&v56 - v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v56 - v61, v68, v69);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
    MEMORY[0x270FA5388](v38 - 8);
    char v40 = (char *)&v56 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = v67;
    swift_retain();
    sub_25623D5D8((uint64_t)v40);
    type metadata accessor for SiriDeviceExperimentMetricsCalculator();
    swift_allocObject();
    uint64_t v42 = sub_256256DF4(v32, (uint64_t)v40, v41, (uint64_t)v37);
    swift_release();
    *(void *)(v31
              + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_siriDeviceExperimentMetricsCalculator) = v42;
    id v43 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    id v44 = objc_msgSend(v43, sel_Metrics);
    swift_unknownObjectRelease();
    id v45 = objc_msgSend(v44, sel_OnDeviceDigestExperimentMetrics);
    swift_unknownObjectRelease();
    id v46 = objc_msgSend(v45, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53FF8);
    swift_allocObject();
    uint64_t v47 = sub_2562E30C0();
    uint64_t v48 = v59;
    uint64_t v49 = v60;
    ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v32, v59, v60);
    type metadata accessor for SiriDeviceExperimentMetricsBiomeReporter();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v47;
    ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v50 + OBJC_IVAR____TtC16MetricsFramework40SiriDeviceExperimentMetricsBiomeReporter_logger, v32, v49);
    ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v32, v48, v49);
    type metadata accessor for SiriDeviceExperimentMetricsSELFReporter();
    uint64_t v51 = swift_allocObject();
    swift_retain();
    uint64_t v52 = sub_25623B374(v32, v51);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_2562E5700;
    *(void *)(v53 + 32) = v50;
    *(void *)(v53 + 40) = v52;
    uint64_t v72 = v53;
    sub_2562E3720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54000);
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v72 = sub_2562E30E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54008);
    swift_allocObject();
    uint64_t v54 = sub_2562E3100();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v59, v49);
    *(void *)(v75 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_siriDeviceExperimentMetricsReporter) = v54;
  }
  return v75;
}

uint64_t type metadata accessor for SiriDeviceExperimentMetrics()
{
  uint64_t result = qword_269F54070;
  if (!qword_269F54070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25623D5D8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SiriDeviceExperimentMetricsCalculator();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_2562E3550();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2562E2E20();

    uint64_t v7 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_25623D738()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25623D758, 0, 0);
}

uint64_t sub_25623D758()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SiriDeviceExperimentMetricsDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25623D844(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25623D874, 0, 0);
}

uint64_t sub_25623D874()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395D0] + MEMORY[0x263F395D0]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25623D940;
  return v4(v0 + 16);
}

uint64_t sub_25623D940()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25623DA74, 0, 0);
  }
  else
  {
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25623DA74()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25623DA8C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25623DAAC, 0, 0);
}

uint64_t sub_25623DAAC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_25624FFB8(v2);
}

uint64_t sub_25623DB50()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25623DC84, 0, 0);
  }
  else
  {
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25623DC84()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SiriDeviceExperimentMetrics.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SiriDeviceExperimentMetrics.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDeviceExperimentMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_25623DE88()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_25623D758, 0, 0);
}

uint64_t sub_25623DEAC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25623DAAC, 0, 0);
}

uint64_t sub_25623DED0(uint64_t a1)
{
  *(void *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25623D874, 0, 0);
}

uint64_t sub_25623DF04()
{
  return sub_25623DFA0(&qword_269F54030);
}

uint64_t sub_25623DF38()
{
  return sub_25623DFA0(&qword_269F54038);
}

uint64_t sub_25623DF6C()
{
  return sub_25623DFA0(&qword_269F54040);
}

uint64_t sub_25623DFA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SiriDeviceExperimentMetrics();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25623DFE8()
{
  unint64_t result = qword_269F54048;
  if (!qword_269F54048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54048);
  }
  return result;
}

unint64_t sub_25623E040()
{
  unint64_t result = qword_269F54058[0];
  if (!qword_269F54058[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F54058);
  }
  return result;
}

uint64_t sub_25623E094()
{
  return type metadata accessor for SiriDeviceExperimentMetrics();
}

uint64_t sub_25623E09C()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E2FD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for SiriDeviceExperimentMetrics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDeviceExperimentMetrics);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t DeviceBatchDataBuilderImpl.deinit()
{
  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId);
  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId);
  return v0;
}

uint64_t DeviceBatchDataBuilderImpl.__deallocating_deinit()
{
  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId);
  sub_2562344DC(v0 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId);

  return swift_deallocClassInstance();
}

uint64_t sub_25623E584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_25623E598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_25623E5AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 24))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_25623E5D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 32))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_25623E5FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceBatchData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2562E2FD0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = (char *)a1 + v17;
    uint64_t v21 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
  }
  return a1;
}

uint64_t destroy for DeviceBatchData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2562E2FD0();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *initializeWithCopy for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2562E2FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = &a1[v15];
  uint64_t v19 = &a2[v15];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  return a1;
}

char *assignWithCopy for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2562E2FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = *(_DWORD *)v20;
  v19[4] = v20[4];
  *(_DWORD *)uint64_t v19 = v21;
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  int v25 = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)uint64_t v23 = v25;
  return a1;
}

char *initializeWithTake for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2562E2FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  int v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(_DWORD *)int v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = &a1[v15];
  uint64_t v19 = &a2[v15];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  return a1;
}

char *assignWithTake for DeviceBatchData(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_2562E2FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v18];
  int v21 = &a2[v18];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = &a1[v19];
  uint64_t v23 = &a2[v19];
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceBatchData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25623F308);
}

uint64_t sub_25623F308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DeviceBatchData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25623F38C);
}

uint64_t sub_25623F38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DeviceBatchData(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F540A8);
}

void sub_25623F420()
{
  sub_25623626C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for OdBatchDataValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for OdBatchDataValue()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for OdBatchDataValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for OdBatchDataValue(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for OdBatchDataValue(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OdBatchDataValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OdBatchDataValue()
{
  return &type metadata for OdBatchDataValue;
}

uint64_t sub_25623F630()
{
  return type metadata accessor for DeviceBatchDataBuilderImpl(0);
}

uint64_t type metadata accessor for DeviceBatchDataBuilderImpl(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F540C8);
}

void sub_25623F658()
{
  sub_25623626C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DeviceBatchDataBuilderImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeviceBatchDataBuilderImpl);
}

uint64_t dispatch thunk of ReportingService.reportEvent(event:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_25622844C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ReportingService.reportODSampleEvent(event:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_25623E4D4;
  return v11(a1, a2, a3, a4);
}

const char *sub_25623F928(char a1)
{
  __n128 result = "enableOnDeviceSiriMetrics";
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      __n128 result = "disablePersistentIDLogging";
      break;
    case 3:
      __n128 result = "od_deletion";
      break;
    case 4:
      __n128 result = "disablePersistentIDLoggingGM";
      break;
    case 5:
      __n128 result = "enableRPIOptInInternalSetting";
      break;
    case 6:
      __n128 result = "enableRPIInternalBuildRule";
      break;
    case 7:
      __n128 result = "disablePersistentIDLoggingIOSOptOut";
      break;
    case 8:
      __n128 result = "disablePersistentIDLoggingIOS";
      break;
    case 9:
      __n128 result = "disablePersistentIDLoggingMacOSOptOut";
      break;
    case 10:
      __n128 result = "disablePersistentIDLoggingVisionOSOptOut";
      break;
    case 11:
      __n128 result = "disablePersistentIDLoggingMacOS";
      break;
    case 12:
      __n128 result = "disablePersistentIDLoggingVisionOS";
      break;
    case 13:
      __n128 result = "disablePersistentIDLoggingSiriXUODOptOut";
      break;
    case 14:
      __n128 result = "disablePersistentIDLoggingSiriXHybridOptOut";
      break;
    case 15:
      __n128 result = "disablePersistentIDLoggingClassicOptOut";
      break;
    case 16:
      __n128 result = "disablePersistentIDLoggingSiriXUOD";
      break;
    case 17:
      __n128 result = "disablePersistentIDLoggingSiriXHybrid";
      break;
    case 18:
      __n128 result = "disablePersistentIDLoggingClassic";
      break;
    case 19:
      __n128 result = "disablePersistentIDLoggingOptIn";
      break;
    default:
      __n128 result = "enableFBFReporter";
      break;
  }
  return result;
}

const char *sub_25623FAF8()
{
  return "SiriMetrics";
}

const char *sub_25623FB0C()
{
  return sub_25623F928(*v0);
}

void sub_25623FB2C(void *a1@<X8>)
{
  *a1 = &unk_2704CAAB0;
}

Swift::Bool __swiftcall isOnDeviceSiriMetricsEnabled()()
{
  return sub_25623FBA0(1);
}

unint64_t sub_25623FB44()
{
  unint64_t result = qword_269F540E8;
  if (!qword_269F540E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F540E8);
  }
  return result;
}

Swift::Bool __swiftcall isFBFReporterEnabled()()
{
  return sub_25623FBA0(0);
}

uint64_t sub_25623FBA0(char a1)
{
  int v5 = &type metadata for Features;
  unint64_t v6 = sub_25623FB44();
  v4[0] = a1;
  char v2 = sub_2562E3150();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2 & 1;
}

unsigned char *storeEnumTagSinglePayload for Features(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25623FCC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

unint64_t sub_25623FD00()
{
  unint64_t result = qword_269F540F0;
  if (!qword_269F540F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F540F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F540F0);
  }
  return result;
}

unint64_t sub_25623FD60()
{
  unint64_t result = qword_269F54100;
  if (!qword_269F54100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54100);
  }
  return result;
}

uint64_t SiriDigestMetrics.__allocating_init(defaults:logger:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SiriDigestMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t SiriDigestMetrics.init(defaults:logger:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v66 = a1;
  uint64_t v4 = sub_2562E3430();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v56 - v8;
  uint64_t v74 = v5;
  int v10 = *(void (**)(void))(v5 + 16);
  uint64_t v64 = v2 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_logger;
  v10();
  uint64_t v11 = sub_2562E2FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v60 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v61 = v13;
  sub_2562E2FC0();
  uint64_t v69 = v11;
  uint64_t v70 = v2;
  uint64_t v14 = *(void (**)(void))(v12 + 32);
  uint64_t v68 = v2 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_oddId;
  v14();
  uint64_t v15 = sub_2562E3340();
  swift_allocObject();
  int v16 = v66;
  uint64_t v17 = sub_2562E3330();
  uint64_t v72 = v15;
  uint64_t v73 = MEMORY[0x263F396B8];
  uint64_t v71 = v17;
  uint64_t v65 = v5 + 16;
  uint64_t v66 = v10;
  ((void (*)(char *, uint64_t, uint64_t))v10)(v9, a2, v4);
  sub_2562E3140();
  swift_allocObject();
  uint64_t v18 = v67;
  uint64_t v19 = sub_2562E3120();
  if (v18)
  {

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v20(a2, v4);
    v20(v64, v4);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v68, v69);
    type metadata accessor for SiriDigestMetrics();
    uint64_t v21 = v70;
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v22 = v19;
    uint64_t v23 = sub_2562E2F80();
    uint64_t v57 = &v56;
    id v58 = v16;
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v59 = v4;
    uint64_t v63 = a2;
    uint64_t v25 = v24;
    MEMORY[0x270FA5388](v23);
    uint64_t v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E32A0();
    uint64_t v28 = sub_2562E3060();
    uint64_t v29 = *(void *)(v28 - 8);
    MEMORY[0x270FA5388](v28);
    uint64_t v64 = 0;
    uint64_t v31 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3020();
    uint64_t v67 = v22;
    sub_2562E3130();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    uint64_t v33 = (uint64_t)v62;
    uint64_t v32 = v63;
    uint64_t v34 = v59;
    uint64_t v35 = v66;
    ((void (*)(char *, uint64_t, uint64_t))v66)(v62, v63, v59);
    type metadata accessor for SiriDigestMetricsDataProvider();
    uint64_t v36 = swift_allocObject();
    uint64_t v57 = *(uint64_t **)(v74 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v36 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger, v33, v34);
    uint64_t v21 = v70;
    *(void *)(v70 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_siriDigestMetricsDataProvider) = v36;
    uint64_t v37 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v35)(v33, v32, v34);
    MEMORY[0x270FA5388](v37);
    uint64_t v38 = (char *)&v56 - v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v56 - v60, v68, v69);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
    MEMORY[0x270FA5388](v39 - 8);
    uint64_t v41 = (char *)&v56 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v42 = v67;
    swift_retain();
    sub_2562406A0((uint64_t)v41);
    type metadata accessor for SiriDigestMetricsCalculator();
    swift_allocObject();
    *(void *)(v21 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_siriDigestMetricsCalculator) = SiriDigestMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(v33, (uint64_t)v41, v42, (uint64_t)v38);
    id v43 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    id v44 = objc_msgSend(v43, sel_Metrics);
    swift_unknownObjectRelease();
    id v45 = objc_msgSend(v44, sel_OnDeviceDigestUsageMetrics);
    swift_unknownObjectRelease();
    id v46 = objc_msgSend(v45, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54128);
    swift_allocObject();
    uint64_t v47 = sub_2562E30C0();
    uint64_t v48 = v63;
    uint64_t v49 = v59;
    ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v33, v63, v59);
    type metadata accessor for SiriDigestMetricsBiomeReporter();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v47;
    ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v50 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger, v33, v49);
    ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v33, v48, v49);
    type metadata accessor for SiriDigestMetricsSELFReporter();
    uint64_t v51 = swift_allocObject();
    swift_retain();
    uint64_t v52 = sub_256276F88(v33, v51);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_2562E5700;
    *(void *)(v53 + 32) = v50;
    *(void *)(v53 + 40) = v52;
    uint64_t v71 = v53;
    sub_2562E3720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54130);
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v71 = sub_2562E30E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54138);
    swift_allocObject();
    uint64_t v54 = sub_2562E3100();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v63, v49);
    *(void *)(v21 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_siriDigestMetricsReporter) = v54;
  }
  return v21;
}

uint64_t type metadata accessor for SiriDigestMetrics()
{
  uint64_t result = qword_269F541A0;
  if (!qword_269F541A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2562406A0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SiriDigestMetricsCalculator();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_2562E3550();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2562E2E20();

    uint64_t v7 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_256240800()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256240820, 0, 0);
}

uint64_t sub_256240820()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SiriDigestMetricsDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25624090C(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25624093C, 0, 0);
}

uint64_t sub_25624093C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395D0] + MEMORY[0x263F395D0]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25623D940;
  return v4(v0 + 16);
}

uint64_t sub_256240A08(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256240A28, 0, 0);
}

uint64_t sub_256240A28()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_2562A65A8(v2);
}

uint64_t SiriDigestMetrics.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SiriDigestMetrics.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework17SiriDigestMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_256240CB8()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_256240820, 0, 0);
}

uint64_t sub_256240CDC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_256240A28, 0, 0);
}

uint64_t sub_256240D00(uint64_t a1)
{
  *(void *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25624093C, 0, 0);
}

uint64_t sub_256240D34()
{
  return sub_256240DD0(&qword_269F54160);
}

uint64_t sub_256240D68()
{
  return sub_256240DD0(&qword_269F54168);
}

uint64_t sub_256240D9C()
{
  return sub_256240DD0(&qword_269F54170);
}

uint64_t sub_256240DD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SiriDigestMetrics();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256240E18()
{
  unint64_t result = qword_269F54178;
  if (!qword_269F54178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54178);
  }
  return result;
}

unint64_t sub_256240E70()
{
  unint64_t result = qword_269F54188[0];
  if (!qword_269F54188[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F54188);
  }
  return result;
}

uint64_t sub_256240EC4()
{
  return type metadata accessor for SiriDigestMetrics();
}

uint64_t method lookup function for SiriDigestMetrics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetrics);
}

uint64_t dispatch thunk of SiriDigestMetrics.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriDigestMetrics.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDigestMetrics.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SiriDigestMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_256241228(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v9 = *v8;
      v12[0] = *(v8 - 1);
      v12[1] = v9;
      swift_bridgeObjectRetain();
      a1(&v11, v12);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v10 = swift_bridgeObjectRelease();
      if (v11)
      {
        MEMORY[0x25A2A4400](v10);
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2562E3730();
        }
        sub_2562E3750();
        sub_2562E3720();
      }
      v8 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_256241368(void (*a1)(uint64_t *__return_ptr, unsigned char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2562E3A70();
    uint64_t v8 = (char *)(a3 + 32);
    for (uint64_t i = v5 - 1; ; --i)
    {
      memcpy(__dst, v8, sizeof(__dst));
      memcpy(v10, v8, sizeof(v10));
      sub_25622F420((uint64_t)__dst);
      a1(&v11, v10);
      sub_256244498((uint64_t)__dst);
      if (v3) {
        return swift_release();
      }
      sub_2562E3A50();
      sub_2562E3A80();
      sub_2562E3A90();
      sub_2562E3A60();
      if (!i) {
        break;
      }
      v8 += 272;
    }
    return v13;
  }
  return result;
}

uint64_t RequestWithNoAssetSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v8 = sub_25624413C(a1, v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v8;
}

uint64_t RequestWithNoAssetSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_256244078(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_2562415EC(uint64_t a1)
{
  *(void *)(v2 + 48) = v1;
  uint64_t v4 = sub_2562E3430();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CombinedRequestNoAssetData(0);
  *(void *)(v2 + 80) = v5;
  *(void *)(v2 + 88) = *(void *)(v5 - 8);
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  *(void *)(v2 + 112) = swift_task_alloc();
  *(void *)(v2 + 120) = swift_task_alloc();
  *(_OWORD *)(v2 + 128) = *(_OWORD *)a1;
  *(void *)(v2 + 144) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_256241744, 0, 0);
}

uint64_t sub_256241744()
{
  uint64_t v55 = v0;
  *(void *)(v0 + 152) = OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 40) = *(void *)(v3 + 16);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v1, v2, "RequestWithNoAssetSELFReporter reporting results for %ld days", v4, 0xCu);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v0 + 160) = v6;
  if (v6)
  {
    uint64_t v7 = v0 + 16;
    uint64_t v8 = *(void *)(v0 + 88);
    int v9 = *(_DWORD *)(v8 + 80);
    *(_DWORD *)(v0 + 232) = v9;
    uint64_t v10 = v5 + ((v9 + 32) & ~(unint64_t)v9);
    uint64_t v51 = *(void *)(v8 + 72);
    *(void *)(v0 + 168) = v51;
    swift_bridgeObjectRetain();
    uint64_t v50 = v0;
    do
    {
      uint64_t v12 = *(void *)(v0 + 112);
      uint64_t v11 = *(void *)(v0 + 120);
      sub_25624423C(v10, v11);
      uint64_t v13 = *(void *)(*(void *)v11 + 16);
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      sub_2562E3A00();
      swift_bridgeObjectRelease();
      uint64_t v53 = 0xD000000000000013;
      unint64_t v54 = 0x80000002562EC200;
      *(void *)(v0 + 16) = v13;
      sub_2562E3C80();
      sub_2562E3640();
      swift_bridgeObjectRelease();
      sub_2562E3640();
      sub_25624423C(v11, v12);
      sub_2562E35B0();
      sub_2562E3640();
      swift_bridgeObjectRelease();
      uint64_t v15 = v53;
      unint64_t v14 = v54;
      swift_bridgeObjectRetain();
      int v16 = sub_2562E3410();
      os_log_type_t v17 = sub_2562E37F0();
      BOOL v18 = os_log_type_enabled(v16, v17);
      uint64_t v19 = *(void *)(v0 + 120);
      if (v18)
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = v7;
        uint64_t v22 = swift_slowAlloc();
        uint64_t v53 = v22;
        *(_DWORD *)uint64_t v20 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v20 + 4) = sub_256229738(v15, v14, &v53);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_256226000, v16, v17, "%s", (uint8_t *)v20, 0xCu);
        swift_arrayDestroy();
        uint64_t v23 = v22;
        uint64_t v7 = v21;
        uint64_t v0 = v50;
        MEMORY[0x25A2A5190](v23, -1, -1);
        MEMORY[0x25A2A5190](v20, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_2562442A0(v19);
      v10 += v51;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_256231B4C(0, &qword_269F541D8);
    uint64_t v25 = OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService;
    *(void *)(v0 + 176) = v24;
    *(void *)(v0 + 184) = v25;
    *(void *)(v0 + 192) = 0;
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v26 = *(uint64_t **)(v0 + 112);
    uint64_t v29 = *(void *)(v0 + 64);
    uint64_t v28 = *(void *)(v0 + 72);
    uint64_t v30 = *(void *)(v0 + 56);
    uint64_t v31 = *(void *)(v0 + 144)
        + ((*(unsigned __int8 *)(v0 + 232) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 232));
    uint64_t v32 = *(void *)(v0 + 48) + *(void *)(v0 + 152);
    swift_bridgeObjectRetain();
    sub_25624423C(v31, v27);
    sub_25624423C(v27, (uint64_t)v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v32, v30);
    uint64_t v33 = sub_256242BC0(v26, v28);
    *(void *)(v0 + 200) = v33;
    id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
    *(void *)(v0 + 208) = v34;
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = *(void *)(v0 + 152);
      uint64_t v37 = *(void *)(v0 + 48);
      uint64_t v38 = (void *)(v37 + *(void *)(v0 + 184));
      objc_msgSend(v34, sel_setRequestsWithoutAssetsDigestReported_, v33);
      id v39 = EventMetadata.transformToODDClientEventMetadata()();
      objc_msgSend(v35, sel_setEventMetadata_, v39);

      uint64_t v40 = v38[3];
      uint64_t v41 = v38[4];
      __swift_project_boxed_opaque_existential_1(v38, v40);
      uint64_t v52 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8) + **(int **)(v41 + 8));
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v42;
      void *v42 = v0;
      v42[1] = sub_256241E04;
      return v52(v35, v37 + v36, v40, v41);
    }
    swift_bridgeObjectRelease();
    id v44 = sub_2562E3410();
    os_log_type_t v45 = sub_2562E3800();
    if (os_log_type_enabled(v44, v45))
    {
      id v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v46 = 0;
      _os_log_impl(&dword_256226000, v44, v45, "Failed to generate final payload", v46, 2u);
      MEMORY[0x25A2A5190](v46, -1, -1);
      uint64_t v47 = v33;
    }
    else
    {
      uint64_t v47 = v44;
      id v44 = v33;
    }
    uint64_t v48 = *(void *)(v0 + 104);

    sub_2562442A0(v48);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
  return v49();
}

uint64_t sub_256241E04()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_2562427E0;
  }
  else {
    os_log_type_t v2 = sub_256241F18;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_256241F18()
{
  uint64_t v70 = v0;
  sub_25624423C(*(void *)(v0 + 104), *(void *)(v0 + 96));
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v69 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_25624423C(v4, v3);
    uint64_t v7 = sub_2562E35B0();
    *(void *)(v5 + 4) = sub_256229738(v7, v8, &v69);
    swift_bridgeObjectRelease();
    sub_2562442A0(v4);
    _os_log_impl(&dword_256226000, v1, v2, "Successfully reported final payload: %s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v6, -1, -1);
    MEMORY[0x25A2A5190](v5, -1, -1);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 96);

    sub_2562442A0(v9);
  }
  uint64_t v10 = **(void **)(v0 + 104);
  if (*(void *)(v10 + 16) && *(void *)(v10 + 296))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_2562E3410();
    os_log_type_t v12 = sub_2562E37F0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v69 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x25A2A4430](v15, MEMORY[0x263F8D310]);
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 32) = sub_256229738(v16, v18, &v69);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v11, v12, "Original assetFailureReasons: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v14, -1, -1);
      MEMORY[0x25A2A5190](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  id v19 = objc_msgSend(*(id *)(v0 + 200), sel_digests);
  if (!v19)
  {
LABEL_20:
    long long v39 = *(_OWORD *)(v0 + 200);
LABEL_24:
    uint64_t v68 = (void *)v39;

    uint64_t v38 = *(void *)(v0 + 104);
    goto LABEL_25;
  }
  uint64_t v20 = v19;
  sub_256231B4C(0, &qword_269F541E8);
  unint64_t v21 = sub_2562E3700();

  if (!(v21 >> 62))
  {
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_23:
    long long v67 = *(_OWORD *)(v0 + 200);
    swift_bridgeObjectRelease();
    long long v39 = v67;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_2562E3AD0();
  swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_23;
  }
LABEL_12:
  if ((v21 & 0xC000000000000001) != 0)
  {
    id v22 = (id)MEMORY[0x25A2A4740](0, v21);
  }
  else
  {
    if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v22 = *(id *)(v21 + 32);
  }
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v23, sel_dimensions);

  if (!v24) {
    goto LABEL_20;
  }
  id v25 = objc_msgSend(v24, sel_assetFailureReasons);

  if (!v25) {
    goto LABEL_20;
  }
  uint64_t v26 = sub_256231B4C(0, (unint64_t *)&qword_269F53EB0);
  sub_2562E3700();

  swift_bridgeObjectRetain();
  uint64_t v27 = sub_2562E3410();
  os_log_type_t v28 = sub_2562E37F0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void **)(v0 + 208);
  uint64_t v31 = *(void *)(v0 + 104);
  if (v29)
  {
    uint64_t v65 = *(void **)(v0 + 200);
    uint64_t v64 = *(void **)(v0 + 208);
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v69 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x25A2A4430](v34, v26);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = sub_256229738(v35, v37, &v69);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v27, v28, "Reported assetFailureReasons: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v33, -1, -1);
    MEMORY[0x25A2A5190](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v38 = v31;
LABEL_25:
  sub_2562442A0(v38);
  uint64_t v41 = *(void *)(v0 + 192) + 1;
  if (v41 == *(void *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
LABEL_35:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = *(void (**)(void))(v0 + 8);
    v63();
    return;
  }
  *(void *)(v0 + 192) = v41;
  uint64_t v43 = *(void *)(v0 + 104);
  uint64_t v42 = *(uint64_t **)(v0 + 112);
  uint64_t v45 = *(void *)(v0 + 64);
  uint64_t v44 = *(void *)(v0 + 72);
  uint64_t v46 = *(void *)(v0 + 56);
  uint64_t v47 = *(void *)(v0 + 48) + *(void *)(v0 + 152);
  sub_25624423C(*(void *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 232) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 232))+ *(void *)(v0 + 168) * v41, v43);
  sub_25624423C(v43, (uint64_t)v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v44, v47, v46);
  uint64_t v48 = sub_256242BC0(v42, v44);
  *(void *)(v0 + 200) = v48;
  id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  *(void *)(v0 + 208) = v49;
  if (!v49)
  {
    swift_bridgeObjectRelease();
    id v58 = sub_2562E3410();
    os_log_type_t v59 = sub_2562E3800();
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v60 = 0;
      _os_log_impl(&dword_256226000, v58, v59, "Failed to generate final payload", v60, 2u);
      MEMORY[0x25A2A5190](v60, -1, -1);
      uint64_t v61 = v48;
    }
    else
    {
      uint64_t v61 = v58;
      id v58 = v48;
    }
    uint64_t v62 = *(void *)(v0 + 104);

    sub_2562442A0(v62);
    goto LABEL_35;
  }
  uint64_t v50 = v49;
  uint64_t v51 = *(void *)(v0 + 152);
  uint64_t v52 = *(void *)(v0 + 48);
  uint64_t v53 = (void *)(v52 + *(void *)(v0 + 184));
  objc_msgSend(v49, sel_setRequestsWithoutAssetsDigestReported_, v48);
  id v54 = EventMetadata.transformToODDClientEventMetadata()();
  objc_msgSend(v50, sel_setEventMetadata_, v54);

  uint64_t v55 = v53[3];
  uint64_t v56 = v53[4];
  __swift_project_boxed_opaque_existential_1(v53, v55);
  uint64_t v66 = (void (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 + 8) + **(int **)(v56 + 8));
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v57;
  *uint64_t v57 = v0;
  v57[1] = sub_256241E04;
  v66(v50, v52 + v51, v55, v56);
}

uint64_t sub_2562427E0()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = *(void **)(v0 + 224);
  uint64_t v5 = *(NSObject **)(v0 + 200);
  uint64_t v6 = *(void **)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 104);
  if (v3)
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v8 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Failed to report final payload", v8, 2u);
    MEMORY[0x25A2A5190](v8, -1, -1);
  }
  else
  {

    uint64_t v5 = v1;
  }

  sub_2562442A0(v7);
  uint64_t v9 = *(void *)(v0 + 192) + 1;
  if (v9 == *(void *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  *(void *)(v0 + 192) = v9;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(uint64_t **)(v0 + 112);
  uint64_t v13 = *(void *)(v0 + 64);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 48) + *(void *)(v0 + 152);
  sub_25624423C(*(void *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 232) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 232))+ *(void *)(v0 + 168) * v9, v11);
  sub_25624423C(v11, (uint64_t)v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  uint64_t v16 = sub_256242BC0(v10, v12);
  *(void *)(v0 + 200) = v16;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  *(void *)(v0 + 208) = v17;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_2562E3410();
    os_log_type_t v28 = sub_2562E3800();
    if (os_log_type_enabled(v27, v28))
    {
      BOOL v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v29 = 0;
      _os_log_impl(&dword_256226000, v27, v28, "Failed to generate final payload", v29, 2u);
      MEMORY[0x25A2A5190](v29, -1, -1);
      uint64_t v30 = v16;
    }
    else
    {
      uint64_t v30 = v27;
      uint64_t v27 = v16;
    }
    uint64_t v31 = *(void *)(v0 + 104);

    sub_2562442A0(v31);
    goto LABEL_14;
  }
  unint64_t v18 = v17;
  uint64_t v19 = *(void *)(v0 + 152);
  uint64_t v20 = *(void *)(v0 + 48);
  unint64_t v21 = (void *)(v20 + *(void *)(v0 + 184));
  objc_msgSend(v17, sel_setRequestsWithoutAssetsDigestReported_, v16);
  id v22 = EventMetadata.transformToODDClientEventMetadata()();
  objc_msgSend(v18, sel_setEventMetadata_, v22);

  uint64_t v23 = v21[3];
  uint64_t v24 = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v23);
  uint64_t v33 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 8) + **(int **)(v24 + 8));
  id v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v25;
  *id v25 = v0;
  v25[1] = sub_256241E04;
  return v33(v18, v20 + v19, v23, v24);
}

id sub_256242BC0(uint64_t *a1, uint64_t a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result) {
    goto LABEL_43;
  }
  uint64_t v5 = *a1;
  v26[2] = a2;
  id v6 = (id)MEMORY[0x270FA5388](result);
  swift_bridgeObjectRetain();
  sub_256241368((void (*)(uint64_t *__return_ptr, unsigned char *))sub_256244478, (uint64_t)v26, v5);
  swift_bridgeObjectRelease();
  sub_256231B4C(0, &qword_269F541E8);
  uint64_t v7 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setDigests_, v7);

  uint64_t v8 = *a1;
  unint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = MEMORY[0x263F8EE78];
LABEL_31:
    id result = (id)swift_bridgeObjectRelease();
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = (void *)sub_2562E3AD0();
      id result = (id)swift_bridgeObjectRelease();
      if (!v23) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v23 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v23)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_setFixedDimensions_, v23);

        sub_2562442A0((uint64_t)a1);
        uint64_t v25 = sub_2562E3430();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a2, v25);
        return v6;
      }
    }
    if ((v22 & 0xC000000000000001) != 0)
    {
      id v24 = (id)MEMORY[0x25A2A4740](0, v22);
      goto LABEL_36;
    }
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v24 = *(id *)(v22 + 32);
LABEL_36:
      uint64_t v23 = v24;
      goto LABEL_37;
    }
    __break(1u);
    goto LABEL_42;
  }
  id v27 = v6;
  os_log_type_t v28 = a1;
  uint64_t v29 = a2;
  swift_bridgeObjectRetain_n();
  memcpy(v30, (const void *)(v8 + 32), sizeof(v30));
  id v10 = objc_allocWithZone(MEMORY[0x263F6E730]);
  sub_25622F420((uint64_t)v30);
  id result = objc_msgSend(v10, sel_init);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = 304;
    while (1)
    {
      if (v30[9])
      {
        id v13 = v11;
        swift_bridgeObjectRetain();
        uint64_t v14 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v15 = v11;
        uint64_t v14 = 0;
      }
      uint64_t v16 = v30[11];
      objc_msgSend(v11, sel_setDeviceType_, v14);

      if (v16)
      {
        swift_bridgeObjectRetain();
        sub_256244498((uint64_t)v30);
        id v17 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
        id v18 = v17;
        if ([v18 isEqualToString:@"PROGRAMCODE_UNKNOWN"])
        {
          uint64_t v19 = 0;
        }
        else if ([v18 isEqualToString:@"PROGRAMCODE_IOS"])
        {
          uint64_t v19 = 1;
        }
        else if ([v18 isEqualToString:@"PROGRAMCODE_MACOS"])
        {
          uint64_t v19 = 2;
        }
        else if ([v18 isEqualToString:@"PROGRAMCODE_TVOS"])
        {
          uint64_t v19 = 3;
        }
        else if ([v18 isEqualToString:@"PROGRAMCODE_WATCHOS"])
        {
          uint64_t v19 = 4;
        }
        else
        {
          uint64_t v19 = [v18 isEqualToString:@"PROGRAMCODE_VISIONOS"] ? 5 : 0;
        }

        objc_msgSend(v11, sel_setProgramCode_, v19);
      }
      else
      {

        uint64_t v20 = sub_256244498((uint64_t)v30);
      }
      MEMORY[0x25A2A4400](v20);
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2562E3730();
      }
      sub_2562E3750();
      sub_2562E3720();
      if (!--v9) {
        break;
      }
      memcpy(v30, (const void *)(v8 + v12), sizeof(v30));
      id v21 = objc_allocWithZone(MEMORY[0x263F6E730]);
      sub_25622F420((uint64_t)v30);
      id result = objc_msgSend(v21, sel_init);
      uint64_t v11 = result;
      v12 += 272;
      if (!result) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v22 = v31;
    a1 = v28;
    a2 = v29;
    id v6 = v27;
    goto LABEL_31;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_256243068()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService;

  return __swift_destroy_boxed_opaque_existential_0(v3);
}

uint64_t RequestWithNoAssetSELFReporter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
  return v0;
}

uint64_t RequestWithNoAssetSELFReporter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);

  return swift_deallocClassInstance();
}

id sub_256243208@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2562E3430();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memcpy(v13, a1, 0x110uLL);
  sub_256231B4C(0, &qword_269F541E8);
  memcpy(v12, a1, sizeof(v12));
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_25622F420((uint64_t)v13);
  id result = sub_256243350(v12, (uint64_t)v9);
  *a3 = result;
  return result;
}

id sub_256243350(const void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2562E3430();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(v14, a1, sizeof(v14));
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v9 = result;
    sub_256231B4C(0, &qword_269F54200);
    memcpy(v13, a1, sizeof(v13));
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    id v10 = v9;
    sub_25622F420((uint64_t)v14);
    id v11 = sub_256243548(v13, (uint64_t)v7);
    objc_msgSend(v10, sel_setDimensions_, v11);

    sub_256231B4C(0, &qword_269F54208);
    memcpy(v13, v14, sizeof(v13));
    id v12 = sub_25624380C(v13);
    objc_msgSend(v10, sel_setCounts_, v12);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_256243548(void *__src, uint64_t a2)
{
  memcpy(v15, __src, sizeof(v15));
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v4 = result;
    sub_25622F514((uint64_t)&v15[27], (uint64_t)v16, &qword_269F53DD0);
    sub_25622F514((uint64_t)v16, (uint64_t)&v20, &qword_269F53DD0);
    uint64_t v5 = v21;
    if (v21)
    {
      id v6 = v4;
      sub_256233CD8((uint64_t)v16);
      uint64_t v5 = (void *)sub_2562E3550();
      sub_256233D04((uint64_t)v16);
    }
    else
    {
      id v7 = v4;
    }
    objc_msgSend(v4, sel_setAssetSetName_, v5);

    if (v15[32])
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
    }
    objc_msgSend(v4, sel_setPreviousSystemBuild_, v8);

    sub_25622F514((uint64_t)&v15[29], (uint64_t)v17, &qword_269F53EB8);
    sub_25622F514((uint64_t)v17, (uint64_t)&v18, &qword_269F53EB8);
    if ((v19 & 1) == 0) {
      objc_msgSend(v4, sel_setBuildInstallationTimestampInSecondsSince1970_, v18);
    }
    sub_25622F420((uint64_t)v15);
    id v9 = sub_256243D20(v15);
    objc_msgSend(v4, sel_setAssistantDimensions_, v9);

    uint64_t v11 = v15[33];
    if (v15[33])
    {
      MEMORY[0x270FA5388](v10);
      v14[2] = a2;
      swift_bridgeObjectRetain();
      sub_256241228((void (*)(uint64_t *__return_ptr, void *))sub_256244590, (uint64_t)v14, v11);
      sub_256244498((uint64_t)v15);
      swift_bridgeObjectRelease();
      sub_256231B4C(0, (unint64_t *)&qword_269F53EB0);
      id v12 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_256244498((uint64_t)v15);
      id v12 = 0;
    }
    objc_msgSend(v4, sel_setAssetFailureReasons_, v12);

    uint64_t v13 = sub_2562E3430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_25624380C(void *__src)
{
  memcpy(v4, __src, sizeof(v4));
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v2 = result;
  if (LOBYTE(v4[49]) == 1)
  {
    id v3 = result;
    if (v4[51]) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  objc_msgSend(result, sel_setRequestsRequiringAssetsCount_, v4[48]);
  if ((v4[51] & 1) == 0) {
LABEL_6:
  }
    objc_msgSend(v2, sel_setRequestsMissingAssetsCount_, v4[50]);
LABEL_7:
  sub_256244498((uint64_t)v4);
  if ((v4[53] & 1) == 0) {
    objc_msgSend(v2, sel_setRequestsWithFailuresCount_, v4[52]);
  }

  return v2;
}

uint64_t *sub_2562438E8@<X0>(uint64_t *result@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4 = *result;
  unint64_t v3 = result[1];
  uint64_t v5 = HIBYTE(v3) & 0xF;
  uint64_t v6 = *result & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v7 = *result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7) {
    goto LABEL_32;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_2562C01EC(v4, v3, 10);
    swift_bridgeObjectRelease();
    unint64_t v9 = v27;
    if ((v27 & 0x100000000) != 0) {
      goto LABEL_32;
    }
    goto LABEL_10;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v4 & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_2562E3A40();
    }
    unint64_t v9 = (unint64_t)sub_2562C01D4(v8, v6, 10);
    LOBYTE(v29) = BYTE4(v9) & 1;
    if ((v9 & 0x100000000) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    swift_bridgeObjectRetain_n();
    id v15 = sub_2562E3410();
    os_log_type_t v16 = sub_2562E3800();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v28[0] = v18;
      *(_DWORD *)id v17 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_256229738(v4, v3, v28);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v15, v16, "Invalid assetFailureReason value: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v18, -1, -1);
      MEMORY[0x25A2A5190](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id result = 0;
    goto LABEL_36;
  }
  v28[0] = *result;
  v28[1] = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v4 == 43)
  {
    if (!v5) {
      goto LABEL_60;
    }
    if (v5 == 1) {
      goto LABEL_32;
    }
    unint64_t v9 = (BYTE1(v4) - 48);
    if (v9 > 9) {
      goto LABEL_32;
    }
    if (v5 != 2)
    {
      if ((BYTE2(v4) - 48) > 9u) {
        goto LABEL_32;
      }
      unint64_t v9 = 10 * v9 + (BYTE2(v4) - 48);
      uint64_t v11 = v5 - 3;
      if (v5 != 3)
      {
        id v12 = (unsigned __int8 *)v28 + 3;
        do
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            goto LABEL_32;
          }
          uint64_t v14 = 10 * (int)v9;
          if (v14 != (int)v14) {
            goto LABEL_32;
          }
          unint64_t v9 = v14 + v13;
          if (__OFADD__(v14, v13)) {
            goto LABEL_32;
          }
          ++v12;
        }
        while (--v11);
      }
    }
LABEL_10:
    id result = (uint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithInt_, v9);
LABEL_36:
    *a2 = result;
    return result;
  }
  if (v4 != 45)
  {
    if (!v5) {
      goto LABEL_32;
    }
    unint64_t v9 = (v4 - 48);
    if (v9 > 9) {
      goto LABEL_32;
    }
    if (v5 != 1)
    {
      if ((BYTE1(v4) - 48) > 9u) {
        goto LABEL_32;
      }
      unint64_t v9 = 10 * v9 + (BYTE1(v4) - 48);
      uint64_t v19 = v5 - 2;
      if (v5 != 2)
      {
        uint64_t v20 = (unsigned __int8 *)v28 + 2;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            goto LABEL_32;
          }
          uint64_t v22 = 10 * (int)v9;
          if (v22 != (int)v22) {
            goto LABEL_32;
          }
          unint64_t v9 = v22 + v21;
          if (__OFADD__(v22, v21)) {
            goto LABEL_32;
          }
          ++v20;
          if (!--v19) {
            goto LABEL_10;
          }
        }
      }
    }
    goto LABEL_10;
  }
  if (v5)
  {
    if (v5 == 1) {
      goto LABEL_32;
    }
    unsigned int v10 = (BYTE1(v4) - 48);
    if (v10 > 9) {
      goto LABEL_32;
    }
    if (v5 == 2)
    {
      unint64_t v9 = -v10;
    }
    else
    {
      if ((BYTE2(v4) - 48) > 9u) {
        goto LABEL_32;
      }
      unint64_t v9 = -10 * v10 - (BYTE2(v4) - 48);
      uint64_t v23 = v5 - 3;
      if (v5 != 3)
      {
        id v24 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          unsigned int v25 = *v24 - 48;
          if (v25 > 9) {
            goto LABEL_32;
          }
          uint64_t v26 = 10 * (int)v9;
          if (v26 != (int)v26) {
            goto LABEL_32;
          }
          unint64_t v9 = v26 - v25;
          if (__OFSUB__(v26, v25)) {
            goto LABEL_32;
          }
          ++v24;
          if (!--v23) {
            goto LABEL_10;
          }
        }
      }
    }
    goto LABEL_10;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

id sub_256243D20(const void *a1)
{
  unsigned int v21 = &type metadata for RequestWithNoAssetData;
  uint64_t v22 = &off_2704CC0F0;
  id v2 = (void *)swift_allocObject();
  v20[0] = v2;
  memcpy(v2 + 2, a1, 0x110uLL);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E680]), sel_init);
  if (result)
  {
    uint64_t v4 = result;
    if (v2[9])
    {
      id v5 = result;
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v7 = result;
      uint64_t v6 = 0;
    }
    objc_msgSend(v4, sel_setSystemBuild_, v6);

    if (__swift_project_boxed_opaque_existential_1(v20, (uint64_t)&type metadata for RequestWithNoAssetData)[21])
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      id v9 = v8;
      if ([v9 isEqualToString:@"ORCHSIRIASRMODE_UNKNOWN"])
      {
        uint64_t v10 = 0;
      }
      else if ([v9 isEqualToString:@"ORCHSIRIASRMODE_SERVER"])
      {
        uint64_t v10 = 1;
      }
      else if ([v9 isEqualToString:@"ORCHSIRIASRMODE_DEVICE"])
      {
        uint64_t v10 = 2;
      }
      else
      {
        uint64_t v10 = 0;
      }

      objc_msgSend(v4, sel_setAsrLocation_, v10);
    }
    if (__swift_project_boxed_opaque_existential_1(v20, (uint64_t)v21)[23])
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      id v12 = v11;
      if ([v12 isEqualToString:@"ORCHSIRINLMODE_UNKNOWN"])
      {
        uint64_t v13 = 0;
      }
      else if ([v12 isEqualToString:@"ORCHSIRINLMODE_NLV3_SERVER"])
      {
        uint64_t v13 = 1;
      }
      else if ([v12 isEqualToString:@"ORCHSIRINLMODE_NLX_DEVICE"])
      {
        uint64_t v13 = 2;
      }
      else
      {
        uint64_t v13 = 0;
      }

      objc_msgSend(v4, sel_setNlLocation_, v13);
    }
    if (v2[17])
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      id v15 = v14;
      if ([v15 isEqualToString:@"UNKNOWN"])
      {
        uint64_t v16 = 0;
      }
      else if ([v15 isEqualToString:@"OPTED_IN"])
      {
        uint64_t v16 = 1;
      }
      else if ([v15 isEqualToString:@"OPTED_OUT"])
      {
        uint64_t v16 = 2;
      }
      else if ([v15 isEqualToString:@"DISMISSED"])
      {
        uint64_t v16 = 3;
      }
      else
      {
        uint64_t v16 = 0;
      }

      objc_msgSend(v4, sel_setDataSharingOptInStatus_, v16);
    }
    uint64_t v17 = v2[15];
    id v18 = v4;
    if (v17)
    {
      uint64_t v19 = v2[14];
      swift_bridgeObjectRetain();
      id v18 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v19, v17);
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setSiriInputLocale_, v18);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_256244078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v11 = a3 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

uint64_t sub_25624413C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RequestWithNoAssetSELFReporter();
  uint64_t v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_256244078(a1, (uint64_t)v11, v12, a4, a5);
}

uint64_t sub_25624423C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CombinedRequestNoAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562442A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CombinedRequestNoAssetData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2562442FC()
{
  return type metadata accessor for RequestWithNoAssetSELFReporter();
}

uint64_t type metadata accessor for RequestWithNoAssetSELFReporter()
{
  uint64_t result = qword_269F541F0;
  if (!qword_269F541F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256244350()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for RequestWithNoAssetSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RequestWithNoAssetSELFReporter);
}

uint64_t dispatch thunk of RequestWithNoAssetSELFReporter.__allocating_init(logger:reportingService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_256244414(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_256244428(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_25624443C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_256244450(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_256244464(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id sub_256244478@<X0>(const void *a1@<X0>, void *a2@<X8>)
{
  return sub_256243208(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_256244498(uint64_t a1)
{
  return a1;
}

uint64_t *sub_256244590@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_2562438E8(a1, a2);
}

uint64_t sub_2562445AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 288, 7);
}

unint64_t static DevicePropertiesWorker.devicePropertiesPluginLastRunDateKey.getter()
{
  return 0xD000000000000021;
}

uint64_t DevicePropertiesWorker.Subtask.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_2562E3B20();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t DevicePropertiesWorker.Subtask.rawValue.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_2562446DC()
{
  return 1;
}

uint64_t sub_2562446E4()
{
  return sub_2562E3D90();
}

uint64_t sub_25624473C()
{
  return sub_2562E3600();
}

uint64_t sub_256244758()
{
  return sub_2562E3D90();
}

uint64_t sub_2562447AC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_2562E3B20();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_256244800(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002562EABF0;
}

uint64_t DevicePropertiesWorker.init(logger:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2562E3020();
  uint64_t v4 = a2 + *(int *)(type metadata accessor for DevicePropertiesWorker() + 20);
  uint64_t v5 = sub_2562E3430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a1, v5);
}

uint64_t type metadata accessor for DevicePropertiesWorker()
{
  uint64_t result = qword_269F54250;
  if (!qword_269F54250) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DevicePropertiesWorker.doWork(executor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_2562E3780();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_2562E3430();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256244A1C, 0, 0);
}

uint64_t sub_256244A1C()
{
  uint64_t v115 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v5 = *(void **)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for DevicePropertiesWorker() + 20);
  id v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v1, v6, v2);
  id v8 = v5;
  uint64_t v9 = sub_2562E3410();
  os_log_type_t v10 = sub_2562E37E0();
  v110 = (id *)(v0 + 48);
  uint64_t v111 = v6;
  v108 = v7;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 144);
    uint64_t v105 = *(void *)(v0 + 136);
    uint64_t v106 = *(void *)(v0 + 160);
    uint64_t v12 = *(void **)(v0 + 96);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v113 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v15 = sub_2562E3200();
    *(void *)(v0 + 72) = sub_256229738(v15, v16, &v113);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v17 = sub_2562E3210();
    *(void *)(v0 + 40) = sub_256229738(v17, v18, &v113);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_256226000, v9, v10, "TaskId: %s, TaskName: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v14, -1, -1);
    MEMORY[0x25A2A5190](v13, -1, -1);

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v19(v106, v105);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 144);
    uint64_t v23 = *(void **)(v0 + 96);

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v19(v20, v21);
  }
  id v24 = *(void **)(v0 + 80);
  void *v24 = 0;
  uint64_t v25 = *MEMORY[0x263F8AF08];
  *(_DWORD *)(v0 + 272) = v25;
  uint64_t v26 = sub_2562E31D0();
  *(void *)(v0 + 168) = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  *(void *)(v0 + 176) = v27;
  os_log_type_t v28 = *(void (**)(void *, uint64_t, uint64_t))(v27 + 104);
  *(void *)(v0 + 184) = v28;
  *(void *)(v0 + 192) = (v27 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v28(v24, v25, v26);
  id v29 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v30 = (void *)sub_2562E3550();
  id v31 = objc_msgSend(v29, sel_initWithSuiteName_, v30);
  *(void *)(v0 + 200) = v31;

  uint64_t v32 = sub_2562E3200();
  unint64_t v34 = v33;
  uint64_t v35 = sub_2562E3210();
  sub_2562467F4(v32, v34, v35, v36);
  v107 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v113 = sub_2562E3210();
  uint64_t v114 = v45;
  sub_2562E3640();
  id v46 = objc_allocWithZone(MEMORY[0x263F80E10]);
  uint64_t v47 = (void *)sub_2562E3550();
  uint64_t v48 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v46, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v47, 1, v48);
  *(void *)(v0 + 208) = v49;

  unint64_t v50 = sub_256246B38((uint64_t)&unk_2704CAB58);
  sub_2562E3200();
  uint64_t v113 = sub_2562E3210();
  uint64_t v114 = v51;
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v52 = objc_allocWithZone((Class)sub_2562E3220());
  uint64_t v53 = (void *)sub_2562E31F0();
  *(void *)(v0 + 216) = v53;
  uint64_t v54 = sub_2562E3180();
  *(void *)(v0 + 224) = v54;
  uint64_t v55 = *(void *)(v54 - 8);
  *(void *)(v0 + 232) = v55;
  uint64_t v56 = swift_task_alloc();
  *(void *)(v0 + 240) = v56;
  id v57 = v49;
  sub_25624709C(v50);
  swift_bridgeObjectRelease();
  id v58 = v53;
  sub_2562E3170();
  if (v31)
  {
    uint64_t v59 = *(void *)(v0 + 88);
    uint64_t v60 = swift_task_alloc();
    *(void *)(v0 + 248) = v60;
    v109 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t))(*(void *)(*(void *)v59 + 88)
                                                                 + **(int **)(*(void *)v59 + 88));
    id v61 = v31;
    uint64_t v62 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v62;
    *uint64_t v62 = v0;
    v62[1] = sub_256245834;
    return v109(v60, v61, v56, v111);
  }
  uint64_t v70 = v57;
  v108(*(void *)(v0 + 152), v111, *(void *)(v0 + 136));
  uint64_t v71 = sub_2562E3410();
  os_log_type_t v72 = sub_2562E3800();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v73 = 0;
    _os_log_impl(&dword_256226000, v71, v72, "Can't get user defaults initialized", v73, 2u);
    MEMORY[0x25A2A5190](v73, -1, -1);
  }
  uint64_t v74 = *(void *)(v0 + 152);
  uint64_t v75 = *(void *)(v0 + 136);

  v107(v74, v75);
  sub_256246AD8();
  id v43 = (id)swift_allocError();
  *int v76 = 5;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v54);
  swift_task_dealloc();
  unint64_t v37 = (id *)(v0 + 16);
  *(void *)(v0 + 16) = v43;
  uint64_t v38 = sub_2562E31A0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 88))(v40, v38);
    if (MEMORY[0x263F8AEE8] && v42 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v43 = *v37;
      char v44 = 3;
LABEL_40:
      char v112 = v44;
      goto LABEL_41;
    }
    if (MEMORY[0x263F8AEF0] && v42 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v43 = *v37;
      char v44 = 4;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
  }
  uint64_t v64 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v43;
  uint64_t v65 = sub_2562E3320();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = swift_task_alloc();
  id v68 = v43;
  if (swift_dynamicCast())
  {
    int v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 88))(v67, v65);
    if (MEMORY[0x263F396A0] && v69 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v43 = *v64;
      char v44 = 6;
      goto LABEL_40;
    }
    if (MEMORY[0x263F396A8] && v69 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v43 = *v64;
      char v44 = 7;
      goto LABEL_40;
    }
    if (MEMORY[0x263F396B0] && v69 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v43 = *v64;
      char v44 = 8;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v65);
  }
  uint64_t v77 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v43;
  id v78 = v43;
  if (swift_dynamicCast())
  {

    char v112 = *(unsigned char *)(v0 + 276);
    id v43 = *v77;
LABEL_41:

    v95 = *(void **)(v0 + 200);
    uint64_t v97 = *(void *)(v0 + 176);
    v96 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v98 = *(void *)(v0 + 168);
    uint64_t v99 = *(unsigned int *)(v0 + 272);
    uint64_t v100 = *(void *)(v0 + 80);
    v101 = (void *)swift_task_alloc();
    sub_256246AD8();
    uint64_t v102 = swift_allocError();
    char *v103 = v112;

    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v100, v98);
    void *v101 = v102;
    v96(v101, v99, v98);
    (*(void (**)(uint64_t, void *, uint64_t))(v97 + 32))(v100, v101, v98);
    swift_task_dealloc();
    goto LABEL_42;
  }

  id *v110 = v43;
  uint64_t v79 = sub_2562E31E0();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = swift_task_alloc();
  id v82 = v43;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v79);
    swift_task_dealloc();
    id v43 = *v110;
    char v44 = 2;
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v43;
  uint64_t v83 = sub_2562E3190();
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = swift_task_alloc();
  id v86 = v43;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v83);
    swift_task_dealloc();
    char v112 = 0;
    id v43 = *(id *)(v0 + 56);
    goto LABEL_41;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v43;
  id v87 = v43;
  if (!swift_dynamicCast())
  {

    char v44 = 1;
    goto LABEL_40;
  }
  v88 = *(void **)(v0 + 200);
  uint64_t v89 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v90 = *(void *)(v0 + 168);
  uint64_t v92 = *(void *)(v0 + 120);
  uint64_t v91 = *(void *)(v0 + 128);
  uint64_t v93 = *(void *)(v0 + 112);
  uint64_t v94 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v94, v90);

  v89(v94, *MEMORY[0x263F8AF18], v90);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v93);

LABEL_42:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v104 = *(uint64_t (**)(void))(v0 + 8);
  return v104();
}

uint64_t sub_256245834()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_256246100;
  }
  else {
    uint64_t v2 = sub_256245948;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256245948()
{
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(uint64_t **)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v2, v4);
  swift_task_dealloc();
  sub_25624769C(v6, v3);
  uint64_t v7 = sub_2562E3200();
  unint64_t v9 = v8;
  uint64_t v10 = sub_2562E3210();
  sub_2562467F4(v7, v9, v10, v11);
  uint64_t v12 = *(void **)(v0 + 216);
  uint64_t v13 = *(void **)(v0 + 200);
  uint64_t v14 = *(void **)(v0 + 208);
  (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v1)
  {
    uint64_t v15 = (id *)(v0 + 16);
    swift_task_dealloc();
    *(void *)(v0 + 16) = v1;
    uint64_t v16 = sub_2562E31A0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = swift_task_alloc();
    id v19 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v18, v16);
      if (MEMORY[0x263F8AEE8] && v20 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v21 = 3;
LABEL_31:
        char v58 = v21;
        goto LABEL_32;
      }
      if (MEMORY[0x263F8AEF0] && v20 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v21 = 4;
        goto LABEL_31;
      }
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
    }
    uint64_t v22 = (id *)(v0 + 24);
    swift_task_dealloc();

    *(void *)(v0 + 24) = v1;
    uint64_t v23 = sub_2562E3320();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = swift_task_alloc();
    id v26 = v1;
    if (swift_dynamicCast())
    {
      int v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 88))(v25, v23);
      if (MEMORY[0x263F396A0] && v27 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v21 = 6;
        goto LABEL_31;
      }
      if (MEMORY[0x263F396A8] && v27 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v21 = 7;
        goto LABEL_31;
      }
      if (MEMORY[0x263F396B0] && v27 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v21 = 8;
        goto LABEL_31;
      }
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    }
    os_log_type_t v28 = (id *)(v0 + 32);
    swift_task_dealloc();

    *(void *)(v0 + 32) = v1;
    id v29 = v1;
    if (swift_dynamicCast())
    {

      char v58 = *(unsigned char *)(v0 + 276);
    }
    else
    {
      uint64_t v30 = (id *)(v0 + 48);

      *(void *)(v0 + 48) = v1;
      uint64_t v31 = sub_2562E31E0();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = swift_task_alloc();
      id v34 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v31);
        swift_task_dealloc();

        char v21 = 2;
        goto LABEL_31;
      }
      swift_task_dealloc();

      *(void *)(v0 + 56) = v1;
      uint64_t v35 = sub_2562E3190();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = swift_task_alloc();
      id v38 = v1;
      if (!swift_dynamicCast())
      {
        swift_task_dealloc();

        *(void *)(v0 + 64) = v1;
        id v39 = v1;
        if (swift_dynamicCast())
        {
          uint64_t v40 = *(void **)(v0 + 200);
          id v41 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
          uint64_t v42 = *(void *)(v0 + 168);
          uint64_t v44 = *(void *)(v0 + 120);
          uint64_t v43 = *(void *)(v0 + 128);
          uint64_t v45 = *(void *)(v0 + 112);
          uint64_t v46 = *(void *)(v0 + 80);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v46, v42);

          v41(v46, *MEMORY[0x263F8AF18], v42);
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);

          goto LABEL_34;
        }

        char v21 = 1;
        goto LABEL_31;
      }

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
      swift_task_dealloc();

      char v58 = 0;
    }
LABEL_32:
    uint64_t v47 = *(void **)(v0 + 200);
    uint64_t v49 = *(void *)(v0 + 176);
    uint64_t v48 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v50 = *(void *)(v0 + 168);
    uint64_t v51 = *(unsigned int *)(v0 + 272);
    uint64_t v52 = *(void *)(v0 + 80);
    uint64_t v53 = (void *)swift_task_alloc();
    sub_256246AD8();
    uint64_t v54 = swift_allocError();
    *uint64_t v55 = v58;

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v50);
    void *v53 = v54;
    v48(v53, v51, v50);
    (*(void (**)(uint64_t, void *, uint64_t))(v49 + 32))(v52, v53, v50);
    goto LABEL_33;
  }

LABEL_33:
  swift_task_dealloc();
LABEL_34:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
  return v56();
}

uint64_t sub_256246100()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v5 = *(void **)(v0 + 208);
  uint64_t v4 = *(void **)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 264);
  *(void *)(v0 + 16) = v6;
  uint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  uint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  int v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 276);
    id v6 = *v20;
LABEL_25:

    int v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    id v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 272);
    uint64_t v32 = *(void *)(v0 + 80);
    uint64_t v33 = (void *)swift_task_alloc();
    sub_256246AD8();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *uint64_t v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2562467F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_2562E3430();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2562E37B0();
  if (result)
  {
    uint64_t v14 = a1;
    uint64_t v15 = type metadata accessor for DevicePropertiesWorker();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v4 + *(int *)(v15 + 20), v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_2562E3410();
    os_log_type_t v17 = sub_2562E37E0();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = a3;
      uint64_t v20 = v19;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v26 = v24;
      *(_DWORD *)uint64_t v20 = 136315394;
      int v23 = v18;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_256229738(v14, a2, &v26);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_256229738(v22, a4, &v26);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v16, (os_log_type_t)v23, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v20, 0x16u);
      uint64_t v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v21, -1, -1);
      MEMORY[0x25A2A5190](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_2562E3780();
    sub_256248F9C();
    swift_allocError();
    sub_2562E3480();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_256246AD8()
{
  unint64_t result = qword_269F54220;
  if (!qword_269F54220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54220);
  }
  return result;
}

unint64_t sub_256246B2C(uint64_t a1)
{
  return sub_256246D90(a1, &qword_269F54290);
}

unint64_t sub_256246B38(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54298);
  uint64_t v2 = (void *)sub_2562E3B00();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2562561F4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_256246C4C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54280);
  uint64_t v2 = sub_2562E3B00();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25622F360(v6, (uint64_t)&v15, &qword_269F54288);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2562561F4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_256248F84(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_256246D84(uint64_t a1)
{
  return sub_256246D90(a1, &qword_269F54278);
}

unint64_t sub_256246D90(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_2562E3B00();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_2562561F4(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_256246EA8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54268);
    uint64_t v2 = (void *)sub_2562E3B00();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54270);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(int *)(v4 + 48);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_25622F360(v11, (uint64_t)v7, &qword_269F54270);
      unint64_t result = sub_2562564F4((uint64_t)v7);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v2[6];
      uint64_t v17 = sub_2562E2F80();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v7, v17);
      *(void *)(v2[7] + 8 * v15) = *(void *)&v7[v9];
      uint64_t v18 = v2[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_12;
      }
      v2[2] = v20;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

unint64_t sub_25624709C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54280);
    uint64_t v2 = (void *)sub_2562E3B00();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D6C8];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_256248F94();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_256248F84(v6, v7);
    sub_256248F84(v7, v40);
    sub_256248F84(v40, &v38);
    unint64_t result = sub_2562561F4(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_256248F84(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v27 = (uint64_t *)(v2[6] + 16 * result);
    *int v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_256248F84(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_2562473F8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54278);
    uint64_t v2 = (void *)sub_2562E3B00();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_256248F94();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_2562561F4(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v19;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    int64_t v23 = (uint64_t *)(v2[6] + 16 * v20);
    *int64_t v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v19;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_25624769C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2562E3430();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = sub_2562E31D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (MEMORY[0x263F8AF10] && v17 == *MEMORY[0x263F8AF10])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = sub_2562E2F80();
    id v57 = &v50;
    id v19 = *(void **)(v18 - 8);
    uint64_t v20 = v19[8];
    uint64_t v21 = MEMORY[0x270FA5388](v18);
    uint64_t v59 = v12;
    uint64_t v56 = (char *)((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v53 = a2;
    MEMORY[0x270FA5388](v21);
    int64_t v23 = (char *)&v50 - v22;
    sub_2562E30A0();
    sub_2562E3010();
    uint64_t v24 = (uint64_t (*)(char *, uint64_t))v19[1];
    char v58 = v19 + 1;
    uint64_t v55 = v24;
    v24(v23, v18);
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
    uint64_t v26 = (void *)sub_2562E3550();
    id v54 = v25;
    objc_msgSend(v25, sel_setDateFormat_, v26);

    int64_t v27 = (void *)sub_2562E2F00();
    unint64_t v52 = 0x80000002562EC2A0;
    uint64_t v28 = (void *)sub_2562E3550();
    objc_msgSend(v53, sel_setValue_forKey_, v27, v28);

    uint64_t v29 = type metadata accessor for DevicePropertiesWorker();
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v59, v3 + *(int *)(v29 + 20), v6);
    uint64_t v53 = &v50;
    MEMORY[0x270FA5388](v30);
    int64_t v31 = (char *)((char *)&v50 - v56);
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v19[2];
    int64_t v33 = (char *)((char *)&v50 - v56);
    uint64_t v56 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = v59;
    v32(v33, v56, v18);
    uint64_t v35 = sub_2562E3410();
    os_log_type_t v36 = sub_2562E37F0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v61 = v51;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v50 = v37 + 4;
      sub_2562313F4();
      uint64_t v38 = sub_2562E3C80();
      uint64_t v60 = sub_256229738(v38, v39, &v61);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      uint64_t v40 = v31;
      id v41 = v55;
      v55(v40, v18);
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v60 = sub_256229738(0xD000000000000021, v52, &v61);
      sub_2562E38F0();
      _os_log_impl(&dword_256226000, v35, v36, "Wrote %s to %s in UserDefaults", (uint8_t *)v37, 0x16u);
      uint64_t v42 = v51;
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v42, -1, -1);
      MEMORY[0x25A2A5190](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
      return v41(v56, v18);
    }
    else
    {

      uint64_t v49 = v55;
      v55(v31, v18);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
      return v49(v56, v18);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v44 = type metadata accessor for DevicePropertiesWorker();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v3 + *(int *)(v44 + 20), v6);
    uint64_t v45 = sub_2562E3410();
    os_log_type_t v46 = sub_2562E37F0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v61 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v60 = sub_256229738(0xD000000000000021, 0x80000002562EC2A0, &v61);
      sub_2562E38F0();
      _os_log_impl(&dword_256226000, v45, v46, "DevicePropertiesPlugin run was not successful. Not updating  %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v48, -1, -1);
      MEMORY[0x25A2A5190](v47, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t DevicePropertiesExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DevicePropertiesExecutor.init()()
{
  return v0;
}

uint64_t sub_256247DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_2562E3430();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256247EB8, 0, 0);
}

uint64_t sub_256247EB8()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v5 = *(void **)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  type metadata accessor for DevicePropertiesPlugin();
  swift_allocObject();
  uint64_t v8 = sub_2562A55A0(v5, v1);

  *(void *)(v0 + 16) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54238);
  swift_allocObject();
  uint64_t v9 = sub_2562E31C0();
  *(void *)(v0 + 88) = v9;
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v11 = swift_task_alloc();
    *(void *)(v0 + 96) = v11;
    uint64_t v12 = sub_2562E3180();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v10, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_256248210;
    return MEMORY[0x270F8C5F8](v6, v11);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 24);
    uint64_t v16 = sub_2562E31D0();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v6, 1, 1, v16);
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v15, *MEMORY[0x263F8AF00], v16);
    sub_25622F3C4(v6, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_256248210()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  sub_25622F3C4(*(void *)(v2 + 96), &qword_269F54240);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_25624847C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_256248374;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_256248374()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_2562E31D0();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_25624847C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DevicePropertiesExecutor.deinit()
{
  return v0;
}

uint64_t DevicePropertiesExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_25624850C()
{
  unint64_t result = qword_269F54248;
  if (!qword_269F54248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54248);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DevicePropertiesWorker(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2562E3060();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2562E3430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for DevicePropertiesWorker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2562E3430();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256248A04);
}

uint64_t sub_256248A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2562E3430();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DevicePropertiesWorker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256248B10);
}

uint64_t sub_256248B10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2562E3060();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2562E3430();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_256248C14()
{
  uint64_t result = sub_2562E3060();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E3430();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DevicePropertiesWorker.Subtask(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DevicePropertiesWorker.Subtask(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256248DCCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_256248DF4()
{
  return 0;
}

ValueMetadata *type metadata accessor for DevicePropertiesWorker.Subtask()
{
  return &type metadata for DevicePropertiesWorker.Subtask;
}

uint64_t type metadata accessor for DevicePropertiesExecutor()
{
  return self;
}

uint64_t method lookup function for DevicePropertiesExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DevicePropertiesExecutor);
}

uint64_t dispatch thunk of DevicePropertiesExecutor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DevicePropertiesExecutor.executeDevicePropertiesPlugin(defaults:pluginContext:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 88)
                                                                   + **(int **)(*(void *)v4 + 88));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25622844C;
  return v12(a1, a2, a3, a4);
}

_OWORD *sub_256248F84(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_256248F94()
{
  return swift_release();
}

unint64_t sub_256248F9C()
{
  unint64_t result = qword_269F542A0;
  if (!qword_269F542A0)
  {
    sub_2562E3780();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F542A0);
  }
  return result;
}

uint64_t SELFReportingService.__allocating_init(messageStream:fbfBundleId:)(void *a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  SELFReportingService.init(messageStream:fbfBundleId:)(a1, a2, a3);
  return v6;
}

uint64_t sub_25624904C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_25622844C;
  v7[9] = a2;
  v7[10] = v6;
  v7[8] = a1;
  return MEMORY[0x270FA2498](sub_2562492C4, 0, 0);
}

uint64_t sub_25624910C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_25623E4D4;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return MEMORY[0x270FA2498](sub_256249E04, 0, 0);
}

void *SELFReportingService.init(messageStream:fbfBundleId:)(id a1, unint64_t a2, unint64_t a3)
{
  v3[3] = objc_msgSend(self, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  if (!a1)
  {
    id v7 = objc_msgSend(self, sel_sharedAnalytics);
    a1 = objc_msgSend(v7, sel_defaultMessageStream);
  }
  v3[2] = a1;
  unint64_t v8 = 0xD000000000000027;
  if (a3) {
    unint64_t v8 = a2;
  }
  unint64_t v9 = 0x80000002562EBB60;
  if (a3) {
    unint64_t v9 = a3;
  }
  v3[4] = v8;
  v3[5] = v9;
  return v3;
}

uint64_t sub_2562492A0(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return MEMORY[0x270FA2498](sub_2562492C4, 0, 0);
}

uint64_t sub_2562492C4()
{
  *(void *)(v0 + 40) = &type metadata for Features;
  unint64_t v1 = sub_25623FB44();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_2562E3150();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2)
  {
    id v3 = objc_msgSend(*(id *)(v0 + 64), sel_wrapAsAnyEvent);
    *(void *)(v0 + 88) = v3;
    if (v3)
    {
      id v4 = v3;
      id v5 = v3;
      uint64_t v6 = sub_2562E3410();
      os_log_type_t v7 = sub_2562E37F0();
      if (os_log_type_enabled(v6, v7))
      {
        unint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v8 = 138412290;
        *(void *)(v0 + 56) = v5;
        id v22 = v5;
        id v9 = v5;
        sub_2562E38F0();
        *uint64_t v21 = v4;

        id v5 = v22;
        _os_log_impl(&dword_256226000, v6, v7, "FBF Shared reporter: store the event %@ and send to server", v8, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v21, -1, -1);
        MEMORY[0x25A2A5190](v8, -1, -1);
      }
      else
      {
      }
      uint64_t v15 = *(void *)(v0 + 80);

      uint64_t v17 = *(void *)(v15 + 32);
      uint64_t v16 = *(void *)(v15 + 40);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_2562495D0;
      uint64_t v20 = *(void *)(v0 + 72);
      uint64_t v19 = *(void *)(v0 + 80);
      v18[18] = v16;
      v18[19] = v19;
      v18[16] = v20;
      v18[17] = v17;
      v18[15] = v5;
      return MEMORY[0x270FA2498](sub_25624A320, 0, 0);
    }
    uint64_t v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E3800();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_256226000, v10, v11, "Couldn't package event in AnyEvent wrapper.", v12, 2u);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }
  }
  else
  {
    sub_25624A750(*(void **)(v0 + 64));
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_2562495D0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_25624976C;
  }
  else {
    char v2 = sub_2562496E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562496E4()
{
  uint64_t v1 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_25624AB08();

  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25624976C()
{
  uint64_t v1 = *(void **)(v0 + 104);
  char v2 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_25624AB08();
  sub_256246AD8();
  swift_allocError();
  *id v3 = 16;
  swift_willThrow();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_256249840(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return MEMORY[0x270FA2498](sub_256249864, 0, 0);
}

uint64_t sub_256249864()
{
  *(void *)(v0 + 40) = &type metadata for Features;
  unint64_t v1 = sub_25623FB44();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_2562E3150();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2)
  {
    id v3 = objc_msgSend(*(id *)(v0 + 64), sel_wrapAsAnyEvent);
    *(void *)(v0 + 88) = v3;
    if (v3)
    {
      id v4 = v3;
      id v5 = v3;
      uint64_t v6 = sub_2562E3410();
      os_log_type_t v7 = sub_2562E37F0();
      if (os_log_type_enabled(v6, v7))
      {
        unint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v8 = 138412290;
        *(void *)(v0 + 56) = v5;
        id v22 = v5;
        id v9 = v5;
        sub_2562E38F0();
        *uint64_t v21 = v4;

        id v5 = v22;
        _os_log_impl(&dword_256226000, v6, v7, "FBF Shared reporter: store the event %@ and send to server", v8, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v21, -1, -1);
        MEMORY[0x25A2A5190](v8, -1, -1);
      }
      else
      {
      }
      uint64_t v15 = *(void *)(v0 + 80);

      uint64_t v17 = *(void *)(v15 + 32);
      uint64_t v16 = *(void *)(v15 + 40);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_256249B70;
      uint64_t v20 = *(void *)(v0 + 72);
      uint64_t v19 = *(void *)(v0 + 80);
      v18[18] = v16;
      v18[19] = v19;
      v18[16] = v20;
      v18[17] = v17;
      v18[15] = v5;
      return MEMORY[0x270FA2498](sub_25624A320, 0, 0);
    }
    uint64_t v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E3800();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_256226000, v10, v11, "Couldn't package event in AnyEvent wrapper.", v12, 2u);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }
  }
  else
  {
    sub_25624A750(*(void **)(v0 + 64));
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_256249B70()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_256249D0C;
  }
  else {
    char v2 = sub_256249C84;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256249C84()
{
  uint64_t v1 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_25624AB08();

  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_256249D0C()
{
  uint64_t v1 = *(void **)(v0 + 104);
  char v2 = *(void **)(v0 + 88);
  objc_msgSend(*(id *)(v0 + 64), sel_whichEvent_Type);
  sub_25624AB08();
  sub_256246AD8();
  swift_allocError();
  *id v3 = 16;
  swift_willThrow();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_256249DE0(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_256249E04, 0, 0);
}

uint64_t sub_256249E04()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_wrapAsAnyEvent);
  *(void *)(v0 + 48) = v1;
  if (v1)
  {
    id v2 = v1;
    id v3 = v1;
    uint64_t v4 = sub_2562E3410();
    os_log_type_t v5 = sub_2562E37F0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      *(void *)(v0 + 16) = v3;
      uint64_t v20 = v3;
      os_log_type_t v7 = v3;
      sub_2562E38F0();
      *uint64_t v19 = v2;

      id v3 = v20;
      _os_log_impl(&dword_256226000, v4, v5, "FBF Shared reporter: store the event %@ and send to server", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v19, -1, -1);
      MEMORY[0x25A2A5190](v6, -1, -1);
    }
    else
    {

      uint64_t v4 = v3;
    }

    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v13 + 32);
    uint64_t v14 = *(void *)(v13 + 40);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_25624A0D0;
    uint64_t v18 = *(void *)(v0 + 32);
    uint64_t v17 = *(void *)(v0 + 40);
    v16[18] = v14;
    v16[19] = v17;
    unsigned char v16[16] = v18;
    v16[17] = v15;
    v16[15] = v3;
    return MEMORY[0x270FA2498](sub_25624A320, 0, 0);
  }
  else
  {
    unint64_t v8 = sub_2562E3410();
    os_log_type_t v9 = sub_2562E3800();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_256226000, v8, v9, "Couldn't package event in AnyEvent wrapper.", v10, 2u);
      MEMORY[0x25A2A5190](v10, -1, -1);
    }

    os_log_type_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_25624A0D0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_25624A248;
  }
  else {
    id v2 = sub_25624A1E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25624A1E4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25624A248()
{
  uint64_t v1 = (void *)v0[8];
  id v2 = (void *)v0[6];
  sub_256228280();
  swift_allocError();
  *uint64_t v3 = 16;
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25624A2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return MEMORY[0x270FA2498](sub_25624A320, 0, 0);
}

uint64_t sub_25624A320()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = v0 + 80;
  id v3 = *(id *)(v0 + 120);
  uint64_t v4 = sub_2562E3410();
  os_log_type_t v5 = sub_2562E37F0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  os_log_type_t v7 = *(void **)(v0 + 120);
  if (v6)
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 138412290;
    v1[10] = v7;
    id v9 = v7;
    sub_2562E38F0();
    *uint64_t v15 = v7;

    _os_log_impl(&dword_256226000, v4, v5, "FBF reporter: store the event %@ and send to server", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v15, -1, -1);
    MEMORY[0x25A2A5190](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v10 = v1[15];
  os_log_type_t v11 = *(void **)(v1[19] + 24);
  uint64_t v12 = sub_2562E3550();
  v1[20] = v12;
  v1[2] = v1;
  v1[3] = sub_25624A56C;
  uint64_t v13 = swift_continuation_init();
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 0x40000000;
  v1[12] = sub_2562BE48C;
  v1[13] = &block_descriptor_17;
  v1[14] = v13;
  objc_msgSend(v11, sel_reportSiriInstrumentationEvent_forBundleID_completion_, v10, v12, v2);
  return MEMORY[0x270FA23F0](v1 + 2);
}

uint64_t sub_25624A56C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_25624A6E0;
  }
  else {
    uint64_t v2 = sub_25624A67C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25624A67C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25624A6E0()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_25624A750(void *a1)
{
  uint64_t v3 = sub_2562E2FD0();
  uint64_t v4 = *(void **)(v3 - 8);
  uint64_t v5 = v4[8];
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  os_log_type_t v7 = &v27[-v6];
  uint64_t v8 = sub_2562E2FC0();
  MEMORY[0x270FA5388](v8);
  id v9 = &v27[-v6];
  uint64_t v10 = (void (*)(unsigned char *, unsigned char *, uint64_t))v4[2];
  uint64_t v35 = v3;
  v10(&v27[-v6], &v27[-v6], v3);
  id v11 = a1;
  uint64_t v12 = sub_2562E3410();
  os_log_type_t v13 = sub_2562E37F0();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v33 = v1;
    uint64_t v16 = v15;
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v37 = v31;
    *(_DWORD *)uint64_t v16 = 136315394;
    os_log_t v29 = v12;
    int v28 = v14;
    uint64_t v17 = sub_2562E2FA0();
    uint64_t v36 = sub_256229738(v17, v18, &v37);
    uint64_t v32 = &v27[-v6];
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    uint64_t v19 = (void (*)(unsigned char *, uint64_t))v4[1];
    v19(v9, v35);
    *(_WORD *)(v16 + 12) = 2112;
    uint64_t v36 = (uint64_t)v11;
    id v20 = v11;
    os_log_type_t v7 = v32;
    sub_2562E38F0();
    uint64_t v21 = v30;
    void *v30 = v11;

    os_log_t v22 = v29;
    _os_log_impl(&dword_256226000, v29, (os_log_type_t)v28, "SELF reporter: reported task with stats, isolatedStreamUUID = %s, message = %@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v21, -1, -1);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v23, -1, -1);
    MEMORY[0x25A2A5190](v16, -1, -1);
  }
  else
  {

    uint64_t v19 = (void (*)(unsigned char *, uint64_t))v4[1];
    v19(v9, v35);
  }
  uint64_t v24 = *(void **)(v34 + 16);
  id v25 = (void *)sub_2562E2FB0();
  objc_msgSend(v24, sel_emitMessage_isolatedStreamUUID_, v11, v25);

  return ((uint64_t (*)(unsigned char *, uint64_t))v19)(v7, v35);
}

uint64_t SELFReportingService.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SELFReportingService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_25624AB08()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F542F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E5DC0;
  *(void *)(inited + 32) = 0x73736563637553;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = sub_2562E3760();
  *(void *)(inited + 56) = 0x707954746E657645;
  *(void *)(inited + 64) = 0xE900000000000065;
  *(void *)(inited + 72) = sub_2562E38E0();
  *(void *)(inited + 80) = 0x546567617373654DLL;
  *(void *)(inited + 88) = 0xEB00000000657079;
  *(void *)(inited + 96) = sub_2562E38E0();
  unint64_t v1 = sub_256246B2C(inited);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_2562E3410();
  os_log_type_t v3 = sub_2562E37F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    aBlock[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_25624B1DC();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2562E34B0();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_256229738(v6, v8, aBlock);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v2, v3, "FBFWrite: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v5, -1, -1);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v9 = (void *)sub_2562E3550();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  aBlock[4] = (uint64_t)sub_25624B1BC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25624FDEC;
  aBlock[3] = (uint64_t)&block_descriptor_1;
  id v11 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v11);
}

uint64_t type metadata accessor for SELFReportingService()
{
  return self;
}

uint64_t method lookup function for SELFReportingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SELFReportingService);
}

uint64_t dispatch thunk of SELFReportingService.__allocating_init(messageStream:fbfBundleId:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SELFReportingService.reportEvent(event:logger:)(uint64_t a1, uint64_t a2)
{
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 112) + **(int **)(*(void *)v2 + 112));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of SELFReportingService.reportODBATCHEvent(event:logger:)(uint64_t a1, uint64_t a2)
{
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 120) + **(int **)(*(void *)v2 + 120));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25623E4D4;
  return v8(a1, a2);
}

uint64_t dispatch thunk of SELFReportingService.reportODSampleEvent(event:logger:)(uint64_t a1, uint64_t a2)
{
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 128) + **(int **)(*(void *)v2 + 128));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25623E4D4;
  return v8(a1, a2);
}

uint64_t sub_25624B184()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25624B1BC()
{
  sub_2562473F8(*(void *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_25624B1DC()
{
  unint64_t result = qword_269F53EB0;
  if (!qword_269F53EB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F53EB0);
  }
  return result;
}

uint64_t BootToAssetReporter.deinit()
{
  return v0;
}

uint64_t sub_25624B224()
{
  return MEMORY[0x270FA2498](sub_25624B240, 0, 0);
}

uint64_t sub_25624B240()
{
  return sub_2562E3AC0();
}

uint64_t BootToAssetReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_25624B2D4()
{
  unint64_t result = qword_269F54300;
  if (!qword_269F54300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54300);
  }
  return result;
}

uint64_t sub_25624B328(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t type metadata accessor for BootToAssetReporter()
{
  return self;
}

uint64_t method lookup function for BootToAssetReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BootToAssetReporter);
}

uint64_t dispatch thunk of BootToAssetReporter.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t sub_25624B570()
{
  uint64_t v0 = sub_2562E3430();
  __swift_allocate_value_buffer(v0, qword_269F54318);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F54318);
  return sub_2562E3420();
}

MetricsFramework::SiriMetricsWorkerError_optional __swiftcall SiriMetricsWorkerError.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2562E3CB0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t SiriMetricsWorkerError.rawValue.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7463657078656E75;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 8:
    case 0xB:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 9:
      unint64_t result = 0x4E656C69466C7173;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0x72576664556C7173;
      break;
    case 0xD:
      unint64_t result = 0x78456664556C7173;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x74754F64656D6974;
      break;
  }
  return result;
}

uint64_t sub_25624B874(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25629CFBC(*a1, *a2);
}

uint64_t sub_25624B880()
{
  return sub_2562E3D90();
}

uint64_t sub_25624B8E8()
{
  SiriMetricsWorkerError.rawValue.getter();
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25624B94C()
{
  return sub_2562E3D90();
}

MetricsFramework::SiriMetricsWorkerError_optional sub_25624B9B0(Swift::String *a1)
{
  return SiriMetricsWorkerError.init(rawValue:)(*a1);
}

unint64_t sub_25624B9BC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SiriMetricsWorkerError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

MetricsFramework::MetricsWorker::Subtask_optional __swiftcall MetricsWorker.Subtask.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_2562E3B20();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t MetricsWorker.Subtask.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_25624BA98(char *a1, char *a2)
{
  return sub_25629CE10(*a1, *a2);
}

uint64_t sub_25624BAA4()
{
  return sub_25629D078();
}

uint64_t sub_25624BAAC()
{
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25624BB20()
{
  return sub_25629D414();
}

MetricsFramework::MetricsWorker::Subtask_optional sub_25624BB28(Swift::String *a1)
{
  return MetricsWorker.Subtask.init(rawValue:)(*a1);
}

void sub_25624BB34(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000018;
  }
  else {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x80000002562EAE10;
  if (*v1) {
    unint64_t v3 = 0x80000002562EAE30;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t static MetricsWorker.suiteName.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static MetricsWorker.includeCurrentDateForAggregation.getter()
{
  return 0xD000000000000022;
}

uint64_t MetricsWorker.doWork(metricsExecutor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[31] = a2;
  v3[32] = a3;
  v3[30] = a1;
  uint64_t v4 = sub_2562E3780();
  v3[33] = v4;
  v3[34] = *(void *)(v4 - 8);
  v3[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25624BC78, 0, 0);
}

uint64_t sub_25624BC78()
{
  uint64_t v96 = v0;
  if (qword_269F53AF8 != -1) {
    swift_once();
  }
  uint64_t v1 = (id *)(v0 + 224);
  unint64_t v2 = *(void **)(v0 + 256);
  uint64_t v3 = sub_2562E3430();
  __swift_project_value_buffer(v3, (uint64_t)qword_269F54318);
  id v4 = v2;
  char v5 = sub_2562E3410();
  os_log_type_t v6 = sub_2562E37E0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = *(void **)(v0 + 256);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v94 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = sub_2562E3200();
    *(void *)(v0 + 232) = sub_256229738(v11, v12, &v94);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = sub_2562E3210();
    *(void *)(v0 + 216) = sub_256229738(v13, v14, &v94);
    uint64_t v1 = (id *)(v0 + 224);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_256226000, v5, v6, "TaskId: %s, TaskName: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v10, -1, -1);
    MEMORY[0x25A2A5190](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = *(void **)(v0 + 240);
  *uint64_t v15 = 0;
  uint64_t v16 = *MEMORY[0x263F8AF08];
  *(_DWORD *)(v0 + 496) = v16;
  uint64_t v17 = sub_2562E31D0();
  *(void *)(v0 + 288) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v0 + 296) = v18;
  uint64_t v19 = *(void (**)(void *, uint64_t, uint64_t))(v18 + 104);
  *(void *)(v0 + 304) = v19;
  *(void *)(v0 + 312) = (v18 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v19(v15, v16, v17);
  uint64_t v20 = sub_2562E3200();
  unint64_t v22 = v21;
  uint64_t v23 = sub_2562E3210();
  sub_25624E5D8(v20, v22, v23, v24);
  uint64_t v93 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2562E3200();
  uint64_t v94 = sub_2562E3210();
  uint64_t v95 = v32;
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = (objc_class *)sub_2562E3220();
  *(void *)(v0 + 352) = v33;
  id v34 = objc_allocWithZone(v33);
  uint64_t v35 = (void *)sub_2562E31F0();
  *(void *)(v0 + 360) = v35;
  uint64_t v36 = sub_2562E3180();
  *(void *)(v0 + 368) = v36;
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = v37;
  *(void *)(v0 + 376) = v37;
  *(void *)(v0 + 384) = *(void *)(v37 + 64);
  uint64_t v39 = swift_task_alloc();
  *(void *)(v0 + 392) = v39;
  id v40 = v35;
  uint64_t v94 = sub_2562E3210();
  uint64_t v95 = v41;
  sub_2562E3640();
  id v42 = objc_allocWithZone(MEMORY[0x263F80E10]);
  uint64_t v43 = (void *)sub_2562E3550();
  uint64_t v44 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  uint64_t v45 = v42;
  os_log_type_t v46 = v40;
  objc_msgSend(v45, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v43, 1, v44);

  *(void *)(v0 + 400) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54338);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
  *(void *)(inited + 32) = 0xD00000000000001CLL;
  *(void *)(inited + 40) = 0x80000002562EAC10;
  *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = 60000;
  sub_256246C4C(inited);
  sub_2562E3170();
  id v48 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v49 = (void *)sub_2562E3550();
  id v50 = objc_msgSend(v48, sel_initWithSuiteName_, v49);
  *(void *)(v0 + 408) = v50;

  if (v50)
  {
    uint64_t v51 = *(void *)(v0 + 248);
    *(void *)(v0 + 320) = *(void *)(v18 + 64);
    uint64_t v52 = swift_task_alloc();
    *(void *)(v0 + 328) = v52;
    uint64_t v92 = (uint64_t (*)(uint64_t, id, uint64_t))(*(void *)(*(void *)v51 + 88)
                                                       + **(int **)(*(void *)v51 + 88));
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v53;
    void *v53 = v0;
    v53[1] = sub_25624CA18;
    return v92(v52, v50, v39);
  }
  uint64_t v61 = sub_2562E3410();
  uint64_t v62 = sub_2562E3800();
  if (os_log_type_enabled(v61, (os_log_type_t)v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v63 = 0;
    _os_log_impl(&dword_256226000, v61, (os_log_type_t)v62, "Can't get user defaults initialized", v63, 2u);
    MEMORY[0x25A2A5190](v63, -1, -1);
  }

  sub_256246AD8();
  id v30 = (id)swift_allocError();
  unsigned char *v64 = 5;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v36);
  swift_task_dealloc();
  id *v93 = v30;
  uint64_t v25 = sub_2562E31A0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = swift_task_alloc();
  id v28 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v27, v25);
    if (MEMORY[0x263F8AEE8] && v29 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v30 = *v93;
      char v31 = 3;
LABEL_42:

      uint64_t v83 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 304);
      uint64_t v84 = *(void *)(v0 + 288);
      uint64_t v85 = *(void *)(v0 + 296);
      uint64_t v86 = *(unsigned int *)(v0 + 496);
      uint64_t v87 = *(void *)(v0 + 240);
      v88 = (void *)swift_task_alloc();
      sub_256246AD8();
      uint64_t v89 = swift_allocError();
      *uint64_t v90 = v31;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v87, v84);
      void *v88 = v89;
      v83(v88, v86, v84);
      (*(void (**)(uint64_t, void *, uint64_t))(v85 + 32))(v87, v88, v84);
      swift_task_dealloc();
      goto LABEL_43;
    }
    if (MEMORY[0x263F8AEF0] && v29 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v30 = *v93;
      char v31 = 4;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
  }
  uint64_t v55 = (id *)(v0 + 184);
  swift_task_dealloc();

  *(void *)(v0 + 184) = v30;
  uint64_t v56 = sub_2562E3320();
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = swift_task_alloc();
  id v59 = v30;
  if (swift_dynamicCast())
  {
    int v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 88))(v58, v56);
    if (MEMORY[0x263F396A0] && v60 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v30 = *v55;
      char v31 = 6;
      goto LABEL_42;
    }
    if (MEMORY[0x263F396A8] && v60 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v30 = *v55;
      char v31 = 7;
      goto LABEL_42;
    }
    if (MEMORY[0x263F396B0] && v60 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v30 = *v55;
      char v31 = 8;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v56);
  }
  uint64_t v65 = (id *)(v0 + 176);
  swift_task_dealloc();

  *(void *)(v0 + 176) = v30;
  id v66 = v30;
  if (swift_dynamicCast())
  {

    char v31 = *(unsigned char *)(v0 + 500);
    id v30 = *v65;
    goto LABEL_42;
  }
  uint64_t v67 = (id *)(v0 + 192);

  *(void *)(v0 + 192) = v30;
  uint64_t v68 = sub_2562E31E0();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = swift_task_alloc();
  id v71 = v30;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v70, v68);
    swift_task_dealloc();
    id v30 = *v67;
    char v31 = 2;
    goto LABEL_42;
  }
  swift_task_dealloc();

  *(void *)(v0 + 200) = v30;
  uint64_t v72 = sub_2562E3190();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = swift_task_alloc();
  id v75 = v30;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v72);
    swift_task_dealloc();
    char v31 = 0;
    id v30 = *(id *)(v0 + 200);
    goto LABEL_42;
  }
  swift_task_dealloc();

  *(void *)(v0 + 208) = v30;
  id v76 = v30;
  if (!swift_dynamicCast())
  {

    char v31 = 1;
    goto LABEL_42;
  }
  uint64_t v77 = *(void (**)(uint64_t, void, uint64_t))(v0 + 304);
  uint64_t v78 = *(void *)(v0 + 288);
  uint64_t v80 = *(void *)(v0 + 272);
  uint64_t v79 = *(void *)(v0 + 280);
  uint64_t v81 = *(void *)(v0 + 264);
  uint64_t v82 = *(void *)(v0 + 240);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8))(v82, v78);

  v77(v82, *MEMORY[0x263F8AF18], v78);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);

LABEL_43:
  swift_task_dealloc();
  uint64_t v91 = *(uint64_t (**)(void))(v0 + 8);
  return v91();
}

uint64_t sub_25624CA18()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_25624D824;
  }
  else {
    unint64_t v2 = sub_25624CB2C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25624CB2C()
{
  uint64_t v1 = *(void **)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v0 + 240);
  os_log_type_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 416) = v6;
  *(void *)(v0 + 424) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v5, v3);
  BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  *(void *)(v0 + 432) = v7;
  *(void *)(v0 + 440) = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v7(v5, v2, v3);
  swift_task_dealloc();
  uint64_t v8 = sub_2562E3200();
  unint64_t v10 = v9;
  uint64_t v11 = sub_2562E3210();
  sub_25624E5D8(v8, v10, v11, v12);
  if (v1)
  {
    uint64_t v13 = (id *)(v0 + 224);
    unint64_t v14 = *(void **)(v0 + 408);
    uint64_t v15 = *(void **)(v0 + 360);
    (*(void (**)(void, void))(*(void *)(v0 + 376) + 8))(*(void *)(v0 + 392), *(void *)(v0 + 368));

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    *(void *)(v0 + 224) = v1;
    uint64_t v16 = sub_2562E31A0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = swift_task_alloc();
    id v19 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v18, v16);
      if (MEMORY[0x263F8AEE8] && v20 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v21 = 3;
        goto LABEL_33;
      }
      if (MEMORY[0x263F8AEF0] && v20 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v21 = 4;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
    }
    uint64_t v38 = (id *)(v0 + 184);
    swift_task_dealloc();

    *(void *)(v0 + 184) = v1;
    uint64_t v39 = sub_2562E3320();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = swift_task_alloc();
    id v42 = v1;
    if (swift_dynamicCast())
    {
      int v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v41, v39);
      if (MEMORY[0x263F396A0] && v43 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v21 = 6;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396A8] && v43 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v21 = 7;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396B0] && v43 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v21 = 8;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
    }
    uint64_t v44 = (id *)(v0 + 176);
    swift_task_dealloc();

    *(void *)(v0 + 176) = v1;
    id v45 = v1;
    if (swift_dynamicCast())
    {

      char v21 = *(unsigned char *)(v0 + 500);
    }
    else
    {
      os_log_type_t v46 = (id *)(v0 + 192);

      *(void *)(v0 + 192) = v1;
      uint64_t v47 = sub_2562E31E0();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = swift_task_alloc();
      id v50 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
        swift_task_dealloc();

        char v21 = 2;
      }
      else
      {
        swift_task_dealloc();

        *(void *)(v0 + 200) = v1;
        uint64_t v51 = sub_2562E3190();
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v53 = swift_task_alloc();
        id v54 = v1;
        if (swift_dynamicCast())
        {

          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v51);
          swift_task_dealloc();

          char v21 = 0;
        }
        else
        {
          swift_task_dealloc();

          *(void *)(v0 + 208) = v1;
          id v55 = v1;
          if (swift_dynamicCast())
          {
            uint64_t v56 = *(void (**)(uint64_t, void, uint64_t))(v0 + 304);
            uint64_t v57 = *(void *)(v0 + 288);
            uint64_t v59 = *(void *)(v0 + 272);
            uint64_t v58 = *(void *)(v0 + 280);
            uint64_t v60 = *(void *)(v0 + 264);
            uint64_t v61 = *(void *)(v0 + 240);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8))(v61, v57);

            v56(v61, *MEMORY[0x263F8AF18], v57);
            (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);

LABEL_34:
            swift_task_dealloc();
            uint64_t v70 = *(uint64_t (**)(void))(v0 + 8);
            return v70();
          }

          char v21 = 1;
        }
      }
    }
LABEL_33:
    uint64_t v62 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 304);
    uint64_t v63 = *(void *)(v0 + 288);
    uint64_t v64 = *(void *)(v0 + 296);
    uint64_t v65 = *(unsigned int *)(v0 + 496);
    uint64_t v66 = *(void *)(v0 + 240);
    uint64_t v67 = (void *)swift_task_alloc();
    sub_256246AD8();
    uint64_t v68 = swift_allocError();
    *uint64_t v69 = v21;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v66, v63);
    *uint64_t v67 = v68;
    v62(v67, v65, v63);
    (*(void (**)(uint64_t, void *, uint64_t))(v64 + 32))(v66, v67, v63);
    swift_task_dealloc();
    goto LABEL_34;
  }
  uint64_t v22 = *(void *)(v0 + 376);
  uint64_t v72 = *(void *)(v0 + 368);
  uint64_t v73 = *(void *)(v0 + 392);
  uint64_t v23 = *(objc_class **)(v0 + 352);
  id v71 = *(void **)(v0 + 360);
  uint64_t v75 = *(void *)(v0 + 248);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2562E3200();
  sub_2562E3210();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone(v23);
  uint64_t v25 = (void *)sub_2562E31F0();
  *(void *)(v0 + 448) = v25;

  uint64_t v26 = swift_task_alloc();
  id v27 = v25;
  sub_2562E3210();
  sub_2562E3640();
  id v28 = objc_allocWithZone(MEMORY[0x263F80E10]);
  int v29 = (void *)sub_2562E3550();
  id v30 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v29, 1, v30);

  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
  *(void *)(inited + 32) = 0xD00000000000001CLL;
  *(void *)(inited + 40) = 0x80000002562EAC10;
  *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = 60000;
  sub_256246C4C(inited);
  sub_2562E3170();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  *(void *)(v0 + 456) = v32;
  *(void *)(v0 + 464) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v32(v73, v72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v73, v26, v72);
  swift_task_dealloc();
  uint64_t v33 = swift_task_alloc();
  *(void *)(v0 + 472) = v33;
  uint64_t v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v75 + 96)
                                                          + **(int **)(*(void *)v75 + 96));
  id v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v34;
  *id v34 = v0;
  v34[1] = sub_25624D618;
  uint64_t v35 = *(void *)(v0 + 408);
  uint64_t v36 = *(void *)(v0 + 392);
  return v74(v33, v35, v36);
}

uint64_t sub_25624D618()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25624DEE8;
  }
  else {
    uint64_t v2 = sub_25624D72C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25624D72C()
{
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
  uint64_t v3 = *(void **)(v0 + 408);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 368);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 240);

  v2(v5, v6);
  v4(v8, v7);
  v11(v8, v1, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_25624D824()
{
  uint64_t v1 = *(void **)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 376);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = *(id *)(v0 + 344);
  *(void *)(v0 + 224) = v5;
  uint64_t v6 = (id *)(v0 + 224);
  uint64_t v7 = sub_2562E31A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  id v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7);
    if (MEMORY[0x263F8AEE8] && v11 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v5 = *v6;
      char v12 = 3;
      goto LABEL_29;
    }
    if (MEMORY[0x263F8AEF0] && v11 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v5 = *v6;
      char v12 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  uint64_t v13 = (id *)(v0 + 184);
  swift_task_dealloc();

  *(void *)(v0 + 184) = v5;
  uint64_t v14 = sub_2562E3320();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = swift_task_alloc();
  id v17 = v5;
  if (swift_dynamicCast())
  {
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x263F396A0] && v18 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v5 = *v13;
      char v12 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x263F396A8] && v18 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v5 = *v13;
      char v12 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x263F396B0] && v18 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v5 = *v13;
      char v12 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  id v19 = (id *)(v0 + 176);
  swift_task_dealloc();

  *(void *)(v0 + 176) = v5;
  id v20 = v5;
  if (swift_dynamicCast())
  {

    char v12 = *(unsigned char *)(v0 + 500);
    id v5 = *v19;
  }
  else
  {
    char v21 = (id *)(v0 + 192);

    *(void *)(v0 + 192) = v5;
    uint64_t v22 = sub_2562E31E0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = swift_task_alloc();
    id v25 = v5;
    if (swift_dynamicCast())
    {

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
      swift_task_dealloc();
      id v5 = *v21;
      char v12 = 2;
    }
    else
    {
      swift_task_dealloc();

      *(void *)(v0 + 200) = v5;
      uint64_t v26 = sub_2562E3190();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = swift_task_alloc();
      id v29 = v5;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
        swift_task_dealloc();
        char v12 = 0;
        id v5 = *(id *)(v0 + 200);
      }
      else
      {
        swift_task_dealloc();

        *(void *)(v0 + 208) = v5;
        id v30 = v5;
        if (swift_dynamicCast())
        {
          char v31 = *(void (**)(uint64_t, void, uint64_t))(v0 + 304);
          uint64_t v32 = *(void *)(v0 + 288);
          uint64_t v34 = *(void *)(v0 + 272);
          uint64_t v33 = *(void *)(v0 + 280);
          uint64_t v35 = *(void *)(v0 + 264);
          uint64_t v36 = *(void *)(v0 + 240);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8))(v36, v32);

          v31(v36, *MEMORY[0x263F8AF18], v32);
          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);

          goto LABEL_30;
        }

        char v12 = 1;
      }
    }
  }
LABEL_29:

  uint64_t v37 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 304);
  uint64_t v38 = *(void *)(v0 + 288);
  uint64_t v39 = *(void *)(v0 + 296);
  uint64_t v40 = *(unsigned int *)(v0 + 496);
  uint64_t v41 = *(void *)(v0 + 240);
  id v42 = (void *)swift_task_alloc();
  sub_256246AD8();
  uint64_t v43 = swift_allocError();
  *uint64_t v44 = v12;
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
  void *v42 = v43;
  v37(v42, v40, v38);
  (*(void (**)(uint64_t, void *, uint64_t))(v39 + 32))(v41, v42, v38);
  swift_task_dealloc();
LABEL_30:
  swift_task_dealloc();
  id v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_25624DEE8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v2 = *(void **)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 368);

  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = *(id *)(v0 + 488);
  *(void *)(v0 + 224) = v5;
  uint64_t v6 = (id *)(v0 + 224);
  uint64_t v7 = sub_2562E31A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  id v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7);
    if (MEMORY[0x263F8AEE8] && v11 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v5 = *v6;
      char v12 = 3;
      goto LABEL_29;
    }
    if (MEMORY[0x263F8AEF0] && v11 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v5 = *v6;
      char v12 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  }
  uint64_t v13 = (id *)(v0 + 184);
  swift_task_dealloc();

  *(void *)(v0 + 184) = v5;
  uint64_t v14 = sub_2562E3320();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = swift_task_alloc();
  id v17 = v5;
  if (swift_dynamicCast())
  {
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14);
    if (MEMORY[0x263F396A0] && v18 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v5 = *v13;
      char v12 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x263F396A8] && v18 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v5 = *v13;
      char v12 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x263F396B0] && v18 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v5 = *v13;
      char v12 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  }
  id v19 = (id *)(v0 + 176);
  swift_task_dealloc();

  *(void *)(v0 + 176) = v5;
  id v20 = v5;
  if (swift_dynamicCast())
  {

    char v12 = *(unsigned char *)(v0 + 500);
    id v5 = *v19;
  }
  else
  {
    char v21 = (id *)(v0 + 192);

    *(void *)(v0 + 192) = v5;
    uint64_t v22 = sub_2562E31E0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = swift_task_alloc();
    id v25 = v5;
    if (swift_dynamicCast())
    {

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
      swift_task_dealloc();
      id v5 = *v21;
      char v12 = 2;
    }
    else
    {
      swift_task_dealloc();

      *(void *)(v0 + 200) = v5;
      uint64_t v26 = sub_2562E3190();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = swift_task_alloc();
      id v29 = v5;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
        swift_task_dealloc();
        char v12 = 0;
        id v5 = *(id *)(v0 + 200);
      }
      else
      {
        swift_task_dealloc();

        *(void *)(v0 + 208) = v5;
        id v30 = v5;
        if (swift_dynamicCast())
        {
          char v31 = *(void (**)(uint64_t, void, uint64_t))(v0 + 304);
          uint64_t v32 = *(void *)(v0 + 288);
          uint64_t v34 = *(void *)(v0 + 272);
          uint64_t v33 = *(void *)(v0 + 280);
          uint64_t v35 = *(void *)(v0 + 264);
          uint64_t v36 = *(void *)(v0 + 240);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8))(v36, v32);

          v31(v36, *MEMORY[0x263F8AF18], v32);
          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);

          goto LABEL_30;
        }

        char v12 = 1;
      }
    }
  }
LABEL_29:

  uint64_t v37 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 304);
  uint64_t v38 = *(void *)(v0 + 288);
  uint64_t v39 = *(void *)(v0 + 296);
  uint64_t v40 = *(unsigned int *)(v0 + 496);
  uint64_t v41 = *(void *)(v0 + 240);
  id v42 = (void *)swift_task_alloc();
  sub_256246AD8();
  uint64_t v43 = swift_allocError();
  *uint64_t v44 = v12;
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
  void *v42 = v43;
  v37(v42, v40, v38);
  (*(void (**)(uint64_t, void *, uint64_t))(v39 + 32))(v41, v42, v38);
  swift_task_dealloc();
LABEL_30:
  swift_task_dealloc();
  id v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_25624E5D8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = sub_2562E37B0();
  if (result)
  {
    if (qword_269F53AF8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2562E3430();
    __swift_project_value_buffer(v9, (uint64_t)qword_269F54318);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E37E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_256229738(a1, a2, &v14);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_256229738(a3, a4, &v14);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v10, v11, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v13, -1, -1);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_2562E3780();
    sub_256248F9C();
    swift_allocError();
    sub_2562E3480();
    return swift_willThrow();
  }
  return result;
}

uint64_t MetricsExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MetricsExecutor.init()()
{
  return v0;
}

uint64_t sub_25624E84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_2562E3430();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25624E910, 0, 0);
}

uint64_t sub_25624E910()
{
  uint64_t v1 = (void *)v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v2 = swift_task_alloc();
  v0[9] = v2;
  uint64_t v3 = qword_269F53AF8;
  uint64_t v4 = v1;
  if (v3 == -1)
  {
    id v5 = v4;
  }
  else
  {
    swift_once();
    id v5 = (void (*)(void))v0[4];
  }
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[6];
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_269F54318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  type metadata accessor for SiriDigestMetrics();
  swift_allocObject();
  v0[2] = SiriDigestMetrics.init(defaults:logger:)(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54348);
  swift_allocObject();
  uint64_t v11 = sub_2562E31C0();
  v0[10] = v11;
  if (v11)
  {
    uint64_t v12 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v13 = swift_task_alloc();
    v0[11] = v13;
    uint64_t v14 = sub_2562E3180();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[12] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_25624ECA4;
    return MEMORY[0x270F8C5F8](v2, v13);
  }
  else
  {
    uint64_t v17 = v0[3];
    uint64_t v18 = sub_2562E31D0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v2, 1, 1, v18);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, *MEMORY[0x263F8AF00], v18);
    sub_25622F3C4(v2, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    id v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_25624ECA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  sub_25622F3C4(*(void *)(v2 + 88), &qword_269F54240);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_25624EF10;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_25624EE08;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25624EE08()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_2562E31D0();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_25624EF10()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25624EF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_2562E3430();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25624F048, 0, 0);
}

uint64_t sub_25624F048()
{
  uint64_t v1 = (void *)v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v2 = swift_task_alloc();
  v0[9] = v2;
  uint64_t v3 = qword_269F53AF8;
  id v4 = v1;
  if (v3 == -1)
  {
    uint64_t v5 = v4;
  }
  else
  {
    swift_once();
    uint64_t v5 = (void *)v0[4];
  }
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[6];
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_269F54318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  type metadata accessor for SiriSegmentCohortMetrics();
  swift_allocObject();
  v0[2] = SiriSegmentCohortMetrics.init(defaults:logger:)(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54358);
  swift_allocObject();
  uint64_t v11 = sub_2562E31C0();
  v0[10] = v11;
  if (v11)
  {
    uint64_t v12 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v13 = swift_task_alloc();
    v0[11] = v13;
    uint64_t v14 = sub_2562E3180();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[12] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_25624F3DC;
    return MEMORY[0x270F8C5F8](v2, v13);
  }
  else
  {
    uint64_t v17 = v0[3];
    uint64_t v18 = sub_2562E31D0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v2, 1, 1, v18);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, *MEMORY[0x263F8AF00], v18);
    sub_25622F3C4(v2, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    id v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_25624F3DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  sub_25622F3C4(*(void *)(v2 + 88), &qword_269F54240);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_25624FCF4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_25624FCF8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t MetricsExecutor.deinit()
{
  return v0;
}

uint64_t MetricsExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_25624F55C()
{
  unint64_t result = qword_269F54360;
  if (!qword_269F54360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54360);
  }
  return result;
}

unint64_t sub_25624F5B8()
{
  unint64_t result = qword_269F54368;
  if (!qword_269F54368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54368);
  }
  return result;
}

unint64_t sub_25624F610()
{
  unint64_t result = qword_269F54370;
  if (!qword_269F54370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54370);
  }
  return result;
}

unint64_t sub_25624F668()
{
  unint64_t result = qword_269F54378;
  if (!qword_269F54378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54378);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SiriMetricsWorkerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriMetricsWorkerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25624F818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriMetricsWorkerError()
{
  return &type metadata for SiriMetricsWorkerError;
}

ValueMetadata *type metadata accessor for MetricsWorker()
{
  return &type metadata for MetricsWorker;
}

uint64_t getEnumTagSinglePayload for MetricsWorker.Subtask(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsWorker.Subtask(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25624F9BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25624F9E4(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsWorker.Subtask()
{
  return &type metadata for MetricsWorker.Subtask;
}

uint64_t type metadata accessor for MetricsExecutor()
{
  return self;
}

uint64_t method lookup function for MetricsExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MetricsExecutor);
}

uint64_t dispatch thunk of MetricsExecutor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MetricsExecutor.executeSiriDigestMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 88)
                                                          + **(int **)(*(void *)v3 + 88));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_25622844C;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MetricsExecutor.executeSiriSegmentCohortMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 96)
                                                          + **(int **)(*(void *)v3 + 96));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_25623E4D4;
  return v10(a1, a2, a3);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_25624FCFC@<X0>(uint64_t *a1@<X8>)
{
  return sub_25624FD2C((uint64_t (*)(void))sub_2562BC9B0, a1);
}

uint64_t sub_25624FD14@<X0>(uint64_t *a1@<X8>)
{
  return sub_25624FD2C((uint64_t (*)(void))sub_2562BD664, a1);
}

uint64_t sub_25624FD2C@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1();
  uint64_t v5 = v4;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DD0);
  a2[3] = result;
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t SiriDeviceExperimentMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_256256DF4(a1, a2, a3, a4);
  swift_release();
  return v8;
}

id sub_25624FDEC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_256231B4C(0, &qword_269F54428);
    uint64_t v4 = (void *)sub_2562E3490();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t SiriDeviceExperimentMetricsResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDeviceExperimentMetricsResults.eventStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*SiriDeviceExperimentMetricsResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDeviceExperimentMetricsResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDeviceExperimentMetricsResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriDeviceExperimentMetricsResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDeviceExperimentMetricsResults.deviceExperimentMetrics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDeviceExperimentMetricsResults.deviceExperimentMetrics.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriDeviceExperimentMetricsResults.deviceExperimentMetrics.modify())()
{
  return nullsub_1;
}

uint64_t SiriDeviceExperimentMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_256256DF4(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t sub_25624FFB8(uint64_t a1)
{
  v2[422] = v1;
  v2[421] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  v2[423] = swift_task_alloc();
  v2[424] = swift_task_alloc();
  type metadata accessor for DeviceExperimentMetrics(0);
  v2[425] = swift_task_alloc();
  v2[426] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for EventMetadata(0);
  v2[427] = v3;
  v2[428] = *(void *)(v3 - 8);
  v2[429] = swift_task_alloc();
  uint64_t v4 = sub_2562E3380();
  v2[430] = v4;
  v2[431] = *(void *)(v4 - 8);
  v2[432] = swift_task_alloc();
  v2[433] = swift_task_alloc();
  uint64_t v5 = sub_2562E33B0();
  v2[434] = v5;
  v2[435] = *(void *)(v5 - 8);
  v2[436] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562501C0, 0, 0);
}

void sub_2562501C0()
{
  v388 = v0;
  sub_2562E33A0();
  sub_2562E3390();
  sub_2562E3360();
  uint64_t v1 = sub_2562E3390();
  os_signpost_type_t v2 = sub_2562E3830();
  if (sub_2562E38A0())
  {
    uint64_t v3 = v0[432];
    uint64_t v4 = v0[431];
    uint64_t v5 = v0[430];
    unsigned int v6 = *(void (**)(uint64_t, void, uint64_t))(v4 + 16);
    v6(v3, v0[433], v5);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    os_signpost_id_t v8 = sub_2562E3370();
    _os_signpost_emit_with_name_impl(&dword_256226000, v1, v2, v8, "SiriDeviceExperimentMetricsCalculatorSP", "", v7, 2u);
    MEMORY[0x25A2A5190](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    uint64_t v9 = v0[431];

    unsigned int v6 = *(void (**)(uint64_t, void, uint64_t))(v9 + 16);
  }
  v383 = v0;
  v6(v0[432], v0[433], v0[430]);
  sub_2562E33F0();
  swift_allocObject();
  sub_2562E33E0();
  id v10 = sub_2562E3410();
  os_log_type_t v11 = sub_2562E37F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_256226000, v10, v11, "SQL calculator invoked: SiriDeviceExperimentMetricsCalculator", v12, 2u);
    MEMORY[0x25A2A5190](v12, -1, -1);
  }
  uint64_t v13 = v0[422];

  uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_defaults);
  uint64_t v15 = (void *)sub_2562E3550();
  unsigned int v16 = objc_msgSend(v14, sel_BOOLForKey_, v15);

  uint64_t v17 = sub_2562E3410();
  os_log_type_t v18 = sub_2562E37F0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  if (v16)
  {
    if (v19)
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      os_log_type_t v21 = v18;
      uint64_t v22 = "SiriDeviceExperimentMetricsCalculator: Include current date data for aggregation.";
LABEL_11:
      _os_log_impl(&dword_256226000, v17, v21, v22, v20, 2u);
      MEMORY[0x25A2A5190](v20, -1, -1);
    }
  }
  else if (v19)
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    os_log_type_t v21 = v18;
    uint64_t v22 = "SiriDeviceExperimentMetricsCalculator: current date data NOT included for aggregation.";
    goto LABEL_11;
  }
  uint64_t v23 = v383[422];

  uint64_t v24 = v23 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v25 = swift_task_alloc();
  sub_25622F360(v24, v25, &qword_269F53D10);
  uint64_t v26 = sub_2562E2E30();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v25, 1, v26);
  sub_25622F3C4(v25, &qword_269F53D10);
  swift_task_dealloc();
  if (v29 == 1)
  {
    uint64_t v30 = v383[436];
    sub_256246AD8();
    swift_allocError();
    *char v31 = 9;
    swift_willThrow();
    goto LABEL_19;
  }
  uint64_t v32 = swift_task_alloc();
  sub_25622F360(v24, v32, &qword_269F53D10);
  if (v28(v32, 1, v26) == 1) {
    goto LABEL_505;
  }
  sub_2562E35A0();
  swift_task_alloc();
  sub_2562E3590();
  uint64_t v33 = sub_2562E3530();
  unint64_t v35 = v34;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v26);
  swift_task_dealloc();
  v262 = v14;
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_2562E3410();
  os_log_type_t v37 = sub_2562E37F0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v384 = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    swift_bridgeObjectRetain();
    v383[413] = sub_256229738(v33, v35, &v384);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v36, v37, "SQL: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v39, -1, -1);
    MEMORY[0x25A2A5190](v38, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v44 = (void *)sub_2562E3110();
  v325 = v383 + 417;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D40);
  sub_2562E3300();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_2562E4C80;
  id v46 = v44;
  sub_2562E32F0();
  sub_2562E32F0();
  nullsub_1(v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F543C0);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = sub_25622CF18(v47, 1);
  void *v49 = 20;
  nullsub_1(v48);
  objc_allocWithZone((Class)sub_2562E3260());
  id v258 = v46;
  v255 = (void *)sub_2562E3230();
  sub_2562E3250();
  swift_bridgeObjectRelease();
  uint64_t v266 = sub_2562E2F80();
  uint64_t v50 = *(void *)(v266 - 8);
  uint64_t v51 = swift_task_alloc();
  sub_2562E30A0();
  uint64_t v259 = swift_task_alloc();
  uint64_t v324 = v51;
  sub_2562E2E90();
  uint64_t v52 = sub_25622CD18(0);
  v383[417] = v52;
  char v53 = sub_2562E3280();
  uint64_t v256 = v50;
  if ((v53 & 1) == 0)
  {
    uint64_t v364 = 0;
    uint64_t v326 = 0;
    uint64_t v327 = 0;
LABEL_489:
    uint64_t v212 = swift_allocObject();
    *(void *)(v212 + 16) = v52;
    swift_bridgeObjectRetain_n();
    v213 = sub_2562E3410();
    os_log_type_t v214 = sub_2562E37F0();
    uint64_t v215 = swift_allocObject();
    *(unsigned char *)(v215 + 16) = 0;
    uint64_t v216 = swift_allocObject();
    *(unsigned char *)(v216 + 16) = 8;
    uint64_t v217 = swift_allocObject();
    *(void *)(v217 + 16) = sub_2562570B4;
    *(void *)(v217 + 24) = v212;
    uint64_t v218 = swift_allocObject();
    *(void *)(v218 + 16) = sub_2562570E8;
    *(void *)(v218 + 24) = v217;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
    uint64_t v219 = swift_allocObject();
    sub_25622F578(v219, 3);
    void *v220 = sub_2562570D0;
    v220[1] = v215;
    v220[2] = sub_2562578CC;
    v220[3] = v216;
    v220[4] = sub_256257128;
    v220[5] = v218;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v213, v214))
    {
      v221 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v221 = 256;
      v221[2] = 0;
      swift_release();
      v221[3] = 8;
      swift_release();
      uint64_t v222 = sub_256239418(v52);
      swift_release();
      swift_bridgeObjectRelease();
      v383[418] = v222;
      sub_2562E38F0();
      swift_release();
      swift_release();
      _os_log_impl(&dword_256226000, v213, v214, "SiriDeviceExperimentMetricsCalculator query yielded %ld results", v221, 0xCu);
      MEMORY[0x25A2A5190](v221, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
    }
    sub_2562558A4(v327, 0xD000000000000017, 0x80000002562EC5E0);
    sub_2562558A4(v326, 0xD000000000000015, 0x80000002562EC600);
    sub_2562558A4(v364, 0xD00000000000001CLL, 0x80000002562EC620);
    uint64_t v223 = sub_2562E3290();
    if (!v223)
    {
      uint64_t v363 = v383[436];
      uint64_t v372 = v383[435];
      uint64_t v374 = v383[434];
      uint64_t v369 = v383[433];
      uint64_t v365 = v383[431];
      uint64_t v367 = v383[430];
      v240 = (uint64_t *)v383[421];
      sub_2562E32B0();

      uint64_t v241 = swift_allocObject();
      uint64_t v242 = sub_25622CF18(v241, 1);
      void *v243 = 20;
      nullsub_1(v242);
      uint64_t v244 = swift_task_alloc();
      sub_2562E30F0();
      uint64_t v245 = sub_2562E30B0();
      swift_bridgeObjectRelease();
      v246 = *(void (**)(uint64_t, uint64_t))(v256 + 8);
      v246(v244, v266);
      swift_task_dealloc();
      uint64_t v247 = sub_25622CD0C(0);

      swift_release();
      v246(v259, v266);
      v246(v324, v266);
      swift_beginAccess();
      uint64_t v248 = v383[417];
      uint64_t *v240 = v245;
      v240[1] = v247;
      v240[2] = v248;
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25625544C(v363, (unint64_t)"SiriDeviceExperimentMetricsCalculatorSP", 39, 2);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v365 + 8))(v369, v367);
      (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v363, v374);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v43 = (void (*)(void))v383[1];
      goto LABEL_20;
    }
    v224 = (void *)v223;
    swift_bridgeObjectRelease();

    uint64_t v225 = swift_allocObject();
    *(void *)(v225 + 16) = v224;
    id v226 = v224;
    id v227 = v224;
    v228 = sub_2562E3410();
    os_log_type_t v229 = sub_2562E3800();
    uint64_t v230 = swift_allocObject();
    *(unsigned char *)(v230 + 16) = 32;
    uint64_t v231 = swift_allocObject();
    *(unsigned char *)(v231 + 16) = 8;
    uint64_t v232 = swift_allocObject();
    *(void *)(v232 + 16) = sub_256257168;
    *(void *)(v232 + 24) = v225;
    uint64_t v233 = swift_allocObject();
    *(void *)(v233 + 16) = sub_256257190;
    *(void *)(v233 + 24) = v232;
    uint64_t v234 = swift_allocObject();
    sub_25622F578(v234, 3);
    void *v235 = sub_2562578CC;
    v235[1] = v230;
    v235[2] = sub_2562578CC;
    v235[3] = v231;
    v235[4] = sub_256257198;
    v235[5] = v233;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v228, v229))
    {
      v236 = (uint8_t *)swift_slowAlloc();
      uint64_t v237 = swift_slowAlloc();
      uint64_t v384 = v237;
      *(_WORD *)v236 = 258;
      v236[2] = 32;
      swift_release();
      v236[3] = 8;
      swift_release();
      swift_getErrorValue();
      uint64_t v238 = sub_2562E3CE0();
      v383[416] = sub_256229738(v238, v239, &v384);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      _os_log_impl(&dword_256226000, v228, v229, "SQL execution error: %s", v236, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v237, -1, -1);
      MEMORY[0x25A2A5190](v236, -1, -1);
    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v30 = v383[436];
    swift_getErrorValue();
    sub_2562E3CE0();
    sub_256246AD8();
    swift_allocError();
    static BiomeSQLDatabaseUtils.identifySqlError(errorString:)(v249);
    swift_bridgeObjectRelease();
    swift_willThrow();

    swift_release();
    v250 = *(void (**)(uint64_t, uint64_t))(v256 + 8);
    v250(v259, v266);
    v250(v324, v266);
    swift_task_dealloc();
    swift_task_dealloc();
LABEL_19:
    sub_25625544C(v30, (unint64_t)"SiriDeviceExperimentMetricsCalculatorSP", 39, 2);
    swift_release();
    uint64_t v40 = v383[436];
    uint64_t v41 = v383[435];
    uint64_t v42 = v383[434];
    (*(void (**)(void, void))(v383[431] + 8))(v383[433], v383[430]);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (void (*)(void))v383[1];
LABEL_20:
    v43();
    return;
  }
  uint64_t v364 = 0;
  uint64_t v326 = 0;
  uint64_t v327 = 0;
  uint64_t v289 = (uint64_t)(v383 + 8);
  uint64_t v288 = (uint64_t)(v383 + 13);
  uint64_t v287 = (uint64_t)(v383 + 18);
  uint64_t v253 = (uint64_t)(v383 + 23);
  uint64_t v297 = (uint64_t)(v383 + 28);
  uint64_t v286 = (uint64_t)(v383 + 33);
  uint64_t v264 = (uint64_t)(v383 + 38);
  uint64_t v296 = (uint64_t)(v383 + 43);
  uint64_t v368 = (uint64_t)(v383 + 48);
  uint64_t v285 = (uint64_t)(v383 + 53);
  v284 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v383[428] + 56);
  uint64_t v295 = (uint64_t)(v383 + 58);
  uint64_t v323 = (uint64_t)(v383 + 63);
  uint64_t v283 = (uint64_t)(v383 + 68);
  uint64_t v294 = (uint64_t)(v383 + 73);
  uint64_t v322 = (uint64_t)(v383 + 78);
  uint64_t v282 = (uint64_t)(v383 + 83);
  uint64_t v299 = (uint64_t)(v383 + 88);
  uint64_t v321 = (uint64_t)(v383 + 93);
  uint64_t v281 = (uint64_t)(v383 + 98);
  uint64_t v309 = (uint64_t)(v383 + 103);
  uint64_t v320 = (uint64_t)(v383 + 108);
  uint64_t v280 = (uint64_t)(v383 + 113);
  uint64_t v308 = (uint64_t)(v383 + 118);
  uint64_t v319 = (uint64_t)(v383 + 123);
  uint64_t v279 = (uint64_t)(v383 + 128);
  uint64_t v307 = (uint64_t)(v383 + 133);
  uint64_t v318 = (uint64_t)(v383 + 138);
  uint64_t v278 = (uint64_t)(v383 + 143);
  uint64_t v306 = (uint64_t)(v383 + 148);
  uint64_t v317 = (uint64_t)(v383 + 153);
  uint64_t v305 = (uint64_t)(v383 + 158);
  v304 = v383 + 163;
  v277 = v383 + 167;
  v276 = v383 + 171;
  v303 = v383 + 175;
  v316 = v383 + 179;
  v275 = v383 + 183;
  v302 = v383 + 187;
  v315 = v383 + 191;
  v274 = v383 + 195;
  v301 = v383 + 199;
  v314 = v383 + 203;
  v273 = v383 + 207;
  v300 = v383 + 211;
  v313 = v383 + 215;
  v272 = v383 + 219;
  v298 = v383 + 223;
  v312 = v383 + 227;
  v271 = v383 + 231;
  v293 = v383 + 235;
  v311 = v383 + 239;
  v270 = v383 + 243;
  v292 = v383 + 247;
  v310 = v383 + 251;
  v269 = v383 + 255;
  v291 = v383 + 259;
  v252 = v383 + 267;
  v290 = v383 + 271;
  v263 = v383 + 275;
  v268 = v383 + 279;
  v267 = v383 + 283;
  v366 = v383 + 263;
  v265 = v383 + 437;
  v362 = (int *)v383[427];
  v260 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
  v261 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
  v257 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  v254 = (void (**)(uint64_t, uint64_t))(v50 + 8);
  while (1)
  {
    uint64_t v55 = sub_2562E3270();
    if (!v55) {
      goto LABEL_29;
    }
    uint64_t v56 = v55;
    id v370 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
    if (qword_269F53B18 != -1) {
      swift_once();
    }
    uint64_t v57 = (void *)qword_269F5E468;
    v383[356] = 0x61645F746E657665;
    v383[357] = 0xEA00000000006574;
    sub_2562E39D0();
    if (*(void *)(v56 + 16) && (unint64_t v58 = sub_25625626C(v368), (v59 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v56 + 56) + 32 * v58, (uint64_t)v366);
    }
    else
    {
      _OWORD *v366 = 0u;
      *(_OWORD *)(v383 + 265) = 0u;
    }
    sub_2562571A0(v368);
    if (!v383[266])
    {
      sub_25622F3C4((uint64_t)v366, &qword_269F543D8);
      goto LABEL_53;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_53;
    }
    uint64_t v60 = v383[304];
    unint64_t v61 = v383[305];
    uint64_t v381 = swift_task_alloc();
    uint64_t v62 = (void *)sub_2562E3550();
    id v63 = objc_msgSend(v57, sel_dateFromString_, v62);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    uint64_t v64 = swift_task_alloc();
    uint64_t v65 = v64;
    if (!v63) {
      break;
    }
    uint64_t v66 = swift_task_alloc();
    sub_2562E2F60();

    uint64_t v67 = *v260;
    (*v260)(v65, v66, v266);
    (*v261)(v65, 0, 1, v266);
    swift_task_dealloc();
    if ((*v257)(v65, 1, v266) == 1) {
      goto LABEL_52;
    }
    v67(v381, v65, v266);
    swift_task_dealloc();
    uint64_t v68 = swift_task_alloc();
    sub_2562E2E90();
    uint64_t v379 = v68;
    if ((sub_2562E2F50() & 1) != 0
      && (uint64_t v69 = (void *)sub_2562E3550(),
          unsigned __int8 v70 = objc_msgSend(v262, sel_BOOLForKey_, v69),
          v69,
          (v70 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2562E2F40();
      double v72 = v71;
      if (v71 > -1.0 && v71 < 1.84467441e19 && v71 == trunc(v71))
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v370, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v72);
        if (v370)
        {
          v383[382] = 0xD000000000000018;
          v383[383] = 0x80000002562EC7A0;
          id v73 = v370;
          sub_2562E39D0();
          sub_256255764(v253, v56, v252);
          sub_2562571A0(v253);
          if (v383[270])
          {
            if (swift_dynamicCast()) {
              uint64_t v74 = *((unsigned int *)v383 + 877);
            }
            else {
              uint64_t v74 = 86400;
            }
          }
          else
          {
            uint64_t v74 = 86400;
            sub_25622F3C4((uint64_t)v252, &qword_269F543D8);
          }
          objc_msgSend(v73, sel_setNumberOfSeconds_, v74);
        }
        v118 = *v254;
        (*v254)(v68, v266);
        v118(v381, v266);
        swift_task_dealloc();
        swift_task_dealloc();
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      uint64_t v100 = swift_allocObject();
      *(double *)(v100 + 16) = v72;
      uint64_t v101 = v100;
      uint64_t v102 = swift_allocObject();
      *(void *)(v102 + 16) = v60;
      *(void *)(v102 + 24) = v61;
      swift_bridgeObjectRetain();
      v377 = sub_2562E3410();
      os_log_type_t v360 = sub_2562E3800();
      uint64_t v103 = swift_allocObject();
      *(unsigned char *)(v103 + 16) = 0;
      uint64_t v104 = swift_allocObject();
      *(unsigned char *)(v104 + 16) = 8;
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = sub_256257330;
      *(void *)(v105 + 24) = v101;
      uint64_t v106 = swift_allocObject();
      *(void *)(v106 + 16) = sub_2562573C0;
      *(void *)(v106 + 24) = v105;
      uint64_t v107 = swift_allocObject();
      *(unsigned char *)(v107 + 16) = 32;
      uint64_t v108 = swift_allocObject();
      *(unsigned char *)(v108 + 16) = 8;
      uint64_t v356 = v60;
      uint64_t v109 = v108;
      uint64_t v110 = swift_allocObject();
      *(void *)(v110 + 16) = sub_256257370;
      *(void *)(v110 + 24) = v102;
      uint64_t v111 = swift_allocObject();
      *(void *)(v111 + 16) = sub_2562578C4;
      *(void *)(v111 + 24) = v110;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
      uint64_t v112 = swift_allocObject();
      sub_25622F578(v112, 6);
      *uint64_t v113 = sub_2562578CC;
      v113[1] = v103;
      v113[2] = sub_2562578CC;
      v113[3] = v104;
      v113[4] = sub_2562573E8;
      v113[5] = v106;
      v113[6] = sub_2562578CC;
      v113[7] = v107;
      v113[8] = sub_2562578CC;
      v113[9] = v109;
      v113[10] = sub_2562578C8;
      v113[11] = v111;
      swift_retain();
      swift_retain();
      swift_retain();
      id v373 = (id)v110;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      id v375 = (id)v107;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v377, v360))
      {
        uint64_t v114 = (uint8_t *)swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        uint64_t v384 = v115;
        *(_WORD *)uint64_t v114 = 514;
        v114[2] = 0;
        swift_release();
        v114[3] = 8;
        swift_release();
        *((double *)v383 + 419) = v72;
        sub_2562E38F0();
        swift_release();
        swift_release();
        swift_release();
        v114[12] = 32;
        swift_release();
        v114[13] = 8;
        swift_release();
        swift_bridgeObjectRetain();
        v383[420] = sub_256229738(v356, v61, &v384);
        sub_2562E38F0();
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl(&dword_256226000, v377, v360, "startTimestamp %f of eventDate %s cannot be cast to UInt64.", v114, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v115, -1, -1);
        MEMORY[0x25A2A5190](v114, -1, -1);
      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v116 = (void *)sub_2562E3550();
      v383[6] = sub_2562557C8;
      v383[7] = 0;
      v383[2] = MEMORY[0x263EF8330];
      v383[3] = 1107296256;
      v383[4] = sub_25624FDEC;
      v383[5] = &block_descriptor_2;
      v117 = _Block_copy(v383 + 2);
      AnalyticsSendEventLazy();
      _Block_release(v117);
    }
    id v54 = *v254;
    (*v254)(v379, v266);
    v54(v381, v266);
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
LABEL_29:
    if ((sub_2562E3280() & 1) == 0)
    {
      uint64_t v52 = *v325;
      goto LABEL_489;
    }
  }
  (*v261)(v64, 1, 1, v266);
LABEL_52:
  swift_bridgeObjectRelease();
  sub_25622F3C4(v65, &qword_269F53DB0);
  swift_task_dealloc();
  swift_task_dealloc();
LABEL_53:
  if (__OFADD__(v364++, 1)) {
    goto LABEL_502;
  }
LABEL_54:
  v383[354] = 0x6C707261635F7369;
  v383[355] = 0xEA00000000007961;
  sub_2562E39D0();
  sub_256255764(v323, v56, v310);
  sub_2562571A0(v323);
  if (!v383[254])
  {
    sub_25622F3C4((uint64_t)v310, &qword_269F543D8);
    goto LABEL_60;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_60:
    uint64_t v361 = 0;
    BOOL v359 = 1;
    goto LABEL_61;
  }
  BOOL v359 = *v265 != 1;
  uint64_t v76 = 5;
  if (*v265 != 1) {
    uint64_t v76 = 0;
  }
  uint64_t v361 = v76;
LABEL_61:
  v383[350] = 0xD000000000000019;
  v383[351] = 0x80000002562EB130;
  sub_2562E39D0();
  sub_256255764(v322, v56, v311);
  sub_2562571A0(v322);
  if (!v383[242])
  {
    sub_25622F3C4((uint64_t)v311, &qword_269F543D8);
    goto LABEL_66;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_66:
    uint64_t v358 = 0;
    unsigned __int8 v357 = 1;
    goto LABEL_75;
  }
  uint64_t v77 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v78 = v77;
  if ([v78 isEqualToString:@"UNKNOWN"])
  {
    uint64_t v358 = 0;
  }
  else
  {
    if ([v78 isEqualToString:@"OPTED_IN"])
    {
      uint64_t v79 = 1;
    }
    else if ([v78 isEqualToString:@"OPTED_OUT"])
    {
      uint64_t v79 = 2;
    }
    else
    {
      int v80 = [v78 isEqualToString:@"DISMISSED"];
      uint64_t v79 = 3;
      if (!v80) {
        uint64_t v79 = 0;
      }
    }
    uint64_t v358 = v79;
  }

  unsigned __int8 v357 = 0;
LABEL_75:
  strcpy((char *)v383 + 2784, "asr_location");
  *((unsigned char *)v383 + 2797) = 0;
  *((_WORD *)v383 + 1399) = -5120;
  sub_2562E39D0();
  sub_256255764(v321, v56, v312);
  sub_2562571A0(v321);
  if (!v383[230])
  {
    sub_25622F3C4((uint64_t)v312, &qword_269F543D8);
    goto LABEL_80;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_80:
    uint64_t v355 = 0;
    unsigned __int8 v354 = 1;
    goto LABEL_87;
  }
  uint64_t v81 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v82 = v81;
  if ([v82 isEqualToString:@"ORCHSIRIASRMODE_UNKNOWN"])
  {
    uint64_t v355 = 0;
  }
  else
  {
    if ([v82 isEqualToString:@"ORCHSIRIASRMODE_SERVER"])
    {
      uint64_t v83 = 1;
    }
    else
    {
      int v84 = [v82 isEqualToString:@"ORCHSIRIASRMODE_DEVICE"];
      uint64_t v83 = 2;
      if (!v84) {
        uint64_t v83 = 0;
      }
    }
    uint64_t v355 = v83;
  }

  unsigned __int8 v354 = 0;
LABEL_87:
  v383[344] = 0x7461636F6C5F6C6ELL;
  v383[345] = 0xEB000000006E6F69;
  sub_2562E39D0();
  sub_256255764(v320, v56, v313);
  sub_2562571A0(v320);
  if (!v383[218])
  {
    sub_25622F3C4((uint64_t)v313, &qword_269F543D8);
    goto LABEL_92;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_92:
    uint64_t v353 = 0;
    unsigned __int8 v352 = 1;
    goto LABEL_99;
  }
  uint64_t v85 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v86 = v85;
  if ([v86 isEqualToString:@"ORCHSIRINLMODE_UNKNOWN"])
  {
    uint64_t v353 = 0;
  }
  else
  {
    if ([v86 isEqualToString:@"ORCHSIRINLMODE_NLV3_SERVER"])
    {
      uint64_t v87 = 1;
    }
    else
    {
      int v88 = [v86 isEqualToString:@"ORCHSIRINLMODE_NLX_DEVICE"];
      uint64_t v87 = 2;
      if (!v88) {
        uint64_t v87 = 0;
      }
    }
    uint64_t v353 = v87;
  }

  unsigned __int8 v352 = 0;
LABEL_99:
  id v375 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6ED60]), sel_init);
  v383[342] = 0xD000000000000011;
  v383[343] = 0x80000002562EB110;
  sub_2562E39D0();
  sub_256255764(v319, v56, v314);
  sub_2562571A0(v319);
  if (v383[206])
  {
    if (swift_dynamicCast())
    {
      id v89 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v383[378], v383[379]);

      swift_bridgeObjectRelease();
      id v375 = v89;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v314, &qword_269F543D8);
  }
  id v373 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6ED60]), sel_init);
  v383[338] = 0xD000000000000015;
  v383[339] = 0x80000002562EC640;
  sub_2562E39D0();
  sub_256255764(v318, v56, v315);
  sub_2562571A0(v318);
  if (v383[194])
  {
    if (swift_dynamicCast())
    {
      id v90 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v383[394], v383[395]);

      swift_bridgeObjectRelease();
      id v373 = v90;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v315, &qword_269F543D8);
  }
  v383[336] = 0xD000000000000016;
  v383[337] = 0x80000002562EC660;
  sub_2562E39D0();
  sub_256255764(v317, v56, v316);
  sub_2562571A0(v317);
  if (!v383[182])
  {
    sub_25622F3C4((uint64_t)v316, &qword_269F543D8);
    goto LABEL_112;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_112:
    uint64_t v91 = sub_2562E3410();
    os_log_type_t v92 = sub_2562E37E0();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v93 = 0;
      _os_log_impl(&dword_256226000, v91, v92, "no response category found", v93, 2u);
      MEMORY[0x25A2A5190](v93, -1, -1);
    }

    int v351 = 0;
    char v350 = 1;
    goto LABEL_115;
  }
  SiriReponseCategory.init(rawValue:)(*((Swift::String *)v383 + 198));
  if (v387 == 20) {
    goto LABEL_506;
  }
  LOBYTE(v384) = v387;
  int v351 = sub_256270DF8((char *)&v384);
  char v350 = 0;
LABEL_115:
  v383[332] = 0x6974756F725F6569;
  v383[333] = 0xEA0000000000676ELL;
  sub_2562E39D0();
  sub_256255764(v305, v56, v304);
  sub_2562571A0(v305);
  if (v383[166])
  {
    if (swift_dynamicCast())
    {
      v341 = _s16MetricsFramework15ExtensionsUtilsC15decodeIERoutingySaySo08SISchemaF0VGSgSSSgFZ_0(v383[408], v383[409]);
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v304, &qword_269F543D8);
  }
  uint64_t v94 = sub_2562E3410();
  os_log_type_t v95 = sub_2562E37E0();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v96 = 0;
    _os_log_impl(&dword_256226000, v94, v95, "No ieRouting found", v96, 2u);
    MEMORY[0x25A2A5190](v96, -1, -1);
  }

  v341 = 0;
LABEL_122:
  v383[330] = 0xD000000000000011;
  v383[331] = 0x80000002562EC680;
  sub_2562E39D0();
  sub_256255764(v306, v56, v303);
  sub_2562571A0(v306);
  if (!v383[178])
  {
    sub_25622F3C4((uint64_t)v303, &qword_269F543D8);
    goto LABEL_127;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_127:
    uint64_t v349 = 0;
    unsigned __int8 v348 = 1;
    goto LABEL_334;
  }
  uint64_t v97 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v98 = v97;
  if ([v98 isEqualToString:@"INVOCATIONSOURCE_UNKNOWN_INVOCATION_SOURCE"])
  {
    uint64_t v349 = 0;
  }
  else
  {
    if ([v98 isEqualToString:@"INVOCATIONSOURCE_HOME_BUTTON"])
    {
      uint64_t v99 = 1;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_LOCK_BUTTON"])
    {
      uint64_t v99 = 2;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_BLUETOOTH_HEADSET_BUTTON"])
    {
      uint64_t v99 = 3;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_STEERING_WHEEL_BUTTON"])
    {
      uint64_t v99 = 4;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TOUCHBAR_BUTTON"])
    {
      uint64_t v99 = 5;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_KEYBOARD_SHORTCUT"])
    {
      uint64_t v99 = 6;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_APPLICATION_ICON"])
    {
      uint64_t v99 = 7;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_WIRED_MICROPHONE_BUTTON"])
    {
      uint64_t v99 = 8;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_REMOTE_MICROPHONE_BUTTON"])
    {
      uint64_t v99 = 9;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_BANNER"])
    {
      uint64_t v99 = 10;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARD_SECTION"])
    {
      uint64_t v99 = 11;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TAP_TO_EDIT"])
    {
      uint64_t v99 = 12;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_STRUCTURED_DICTATION"])
    {
      uint64_t v99 = 13;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SOFT_BUTTON"])
    {
      uint64_t v99 = 14;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_AUTO_PROMPT"])
    {
      uint64_t v99 = 15;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_RAISE_TO_SPEAK"])
    {
      uint64_t v99 = 16;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_VOICE_TRIGGER"])
    {
      uint64_t v99 = 17;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_HARDWARE_BUTTON"])
    {
      uint64_t v99 = 18;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_HANDOFF"])
    {
      uint64_t v99 = 19;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TRANSCRIPT_ELEMENT"])
    {
      uint64_t v99 = 20;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_BLUETOOTH_HEADSET_VOICE_TRIGGER"])
    {
      uint64_t v99 = 21;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_MENU_BAR"])
    {
      uint64_t v99 = 22;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DOCK_ICON"])
    {
      uint64_t v99 = 23;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_HOME_BUTTON"])
    {
      uint64_t v99 = 24;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_VOICETRIGGER"])
    {
      uint64_t v99 = 25;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_GATEKEEPER"])
    {
      uint64_t v99 = 26;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_SIRI_BUTTON"])
    {
      uint64_t v99 = 27;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_IN_APP_SIRI_AFFORDANCE"])
    {
      uint64_t v99 = 28;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_BREADCRUMB"])
    {
      uint64_t v99 = 29;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_GUIDE_BUTTON"])
    {
      uint64_t v99 = 30;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TRANSCRIPT_VERTICAL_SWIPE"])
    {
      uint64_t v99 = 31;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SPOTLIGHT_SUGGESTION"])
    {
      uint64_t v99 = 32;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SPOTLIGHT_ASK_SIRI"])
    {
      uint64_t v99 = 33;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_COMPLICATION"])
    {
      uint64_t v99 = 34;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TV_REMOTE_BUTTON"])
    {
      uint64_t v99 = 35;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_NONAPPLE_REMOTE"])
    {
      uint64_t v99 = 36;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_REMOTE_APP"])
    {
      uint64_t v99 = 37;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_REMOTE_UI"])
    {
      uint64_t v99 = 38;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON"])
    {
      uint64_t v99 = 39;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_INPUT_FIELD_MIC_BUTTON"])
    {
      uint64_t v99 = 40;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SPEECH_API"])
    {
      uint64_t v99 = 41;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_TV_REMOTE"])
    {
      uint64_t v99 = 42;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_SHORTCUT_ENROLLMENT"])
    {
      uint64_t v99 = 43;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_TRIGGER_ENROLLMENT"])
    {
      uint64_t v99 = 44;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_TRIGGER_PROXIMITY_ENROLLMENT"])
    {
      uint64_t v99 = 45;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_SECONDARY_DEVICE"])
    {
      uint64_t v99 = 46;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE"])
    {
      uint64_t v99 = 47;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_TRIGGERLESS"])
    {
      uint64_t v99 = 48;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_NOTIFICATION"])
    {
      uint64_t v99 = 49;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TEST_AUTOMATION"])
    {
      uint64_t v99 = 50;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_WAVEFORM_GLYPH_BUTTON"])
    {
      uint64_t v99 = 51;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_AUTO_PROMPT"])
    {
      uint64_t v99 = 52;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_GLOBE_BUTTON"])
    {
      uint64_t v99 = 53;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_LONG_PRESS"])
    {
      uint64_t v99 = 54;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_ACCESSIBILITY_BACKTAP"])
    {
      uint64_t v99 = 55;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_VOICECOMMAND_BUTTON"])
    {
      uint64_t v99 = 56;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_VOICECOMMAND_BUTTON"])
    {
      uint64_t v99 = 57;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_APPLETV_REMOTE_DEVICE"])
    {
      uint64_t v99 = 58;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_MESSAGE_SEND_BUTTON"])
    {
      uint64_t v99 = 59;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_WITH_INPUT_SWITCHER"])
    {
      uint64_t v99 = 60;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_INPUT_FIELD_MIC_BUTTON_FIRST_RESPONDER"])
    {
      uint64_t v99 = 61;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_SAFARI_MIC_BUTTON_IN_ADDRESS_BAR"])
    {
      uint64_t v99 = 62;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_SAFARI_MIC_BUTTON_IN_ADDRESS_BAR_FIRST_RESPONDER"])
    {
      uint64_t v99 = 63;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WHILE_SEARCH_BAR_VISIBLE"])
    {
      uint64_t v99 = 64;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WITH_INPUT_SWITCHER_WHILE_SEARCH_MIC_VISIBLE"])
    {
      uint64_t v99 = 65;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WHILE_SAFARI_MIC_VISIBLE"])
    {
      uint64_t v99 = 66;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WITH_INPUT_SWITCHER_WHILE_SAFARI_MIC_VISIBLE"])
    {
      uint64_t v99 = 67;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_FROM_QUICKBOARD"])
    {
      uint64_t v99 = 68;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MESSAGES_TEXT_FIELD_MIC_BUTTON"])
    {
      uint64_t v99 = 69;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MIC_ICON_UCBBAR"])
    {
      uint64_t v99 = 70;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_GLOBE_BUTTON_SHORTCUT"])
    {
      uint64_t v99 = 71;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_STANDARD_SHORTCUT"])
    {
      uint64_t v99 = 72;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_CALL"])
    {
      uint64_t v99 = 73;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_NOTIFICATION"])
    {
      uint64_t v99 = 74;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_AIRPODS_MAX_BUTTON_PRESS"])
    {
      uint64_t v99 = 75;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_AUTO_START"])
    {
      uint64_t v99 = 76;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_MIC_BUTTON_PRESSED"])
    {
      uint64_t v99 = 77;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_LANGUAGE_PICKER_ITEM_SELECTED"])
    {
      uint64_t v99 = 78;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_FLEXIBLE_FOLLOW_UPS"])
    {
      uint64_t v99 = 79;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_JS_VOICE_TRIGGER"])
    {
      uint64_t v99 = 80;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MESSAGES_TEXT_FIELD_MIC_BUTTON_WHILE_KEYBOARD_NOT_VISIBLE"])
    {
      uint64_t v99 = 81;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_POP_UP_UI_LANGUAGE_SWITCHER_ICON"])
    {
      uint64_t v99 = 82;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_LONG_PRESS_TEXT_INPUT_FIELD"])
    {
      uint64_t v99 = 83;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_DROP_IN"])
    {
      uint64_t v99 = 84;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TYPE_TO_SIRI"])
    {
      uint64_t v99 = 85;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_PINCH"])
    {
      uint64_t v99 = 87;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_DICTATION_GAZE"])
    {
      uint64_t v99 = 88;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_EXECUTE_ON_REMOTE_REQUEST"])
    {
      uint64_t v99 = 89;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_WATCH_GESTURE_PRIMARY"])
    {
      uint64_t v99 = 90;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_QUICK_TYPE_TO_SIRI"])
    {
      uint64_t v99 = 91;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_HEAD_GESTURE"])
    {
      uint64_t v99 = 92;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SOFT_KEYBOARD_BUTTON"])
    {
      uint64_t v99 = 93;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_WRITING_TOOLS"])
    {
      uint64_t v99 = 94;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_GENERATIVE_FIELD"])
    {
      uint64_t v99 = 95;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_SUGGESTION"])
    {
      uint64_t v99 = 96;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_TYPE_TO_SIRI_CONTROL_CENTER"])
    {
      uint64_t v99 = 97;
    }
    else if ([v98 isEqualToString:@"INVOCATIONSOURCE_VISUAL_INTELLIGENCE"])
    {
      uint64_t v99 = 98;
    }
    else
    {
      int v119 = [v98 isEqualToString:@"INVOCATIONSOURCE_VISUAL_INTELLIGENCE_QUICK_TYPE"];
      uint64_t v99 = 99;
      if (!v119) {
        uint64_t v99 = 0;
      }
    }
    uint64_t v349 = v99;
  }

  unsigned __int8 v348 = 0;
LABEL_334:
  v383[326] = 0xD000000000000011;
  v383[327] = 0x80000002562EC6A0;
  sub_2562E39D0();
  sub_256255764(v307, v56, v302);
  sub_2562571A0(v307);
  if (!v383[190])
  {
    sub_25622F3C4((uint64_t)v302, &qword_269F543D8);
    goto LABEL_339;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_339:
    uint64_t v347 = 0;
    unsigned __int8 v346 = 1;
    goto LABEL_348;
  }
  v120 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v121 = v120;
  if ([v121 isEqualToString:@"EXPTREATMENTALLOCATIONSTATUS_UNKNOWN"])
  {
    uint64_t v347 = 0;
  }
  else
  {
    if ([v121 isEqualToString:@"EXPTREATMENTALLOCATIONSTATUS_ALLOCATED"])
    {
      uint64_t v122 = 1;
    }
    else if ([v121 isEqualToString:@"EXPTREATMENTALLOCATIONSTATUS_ACTIVATED"])
    {
      uint64_t v122 = 2;
    }
    else
    {
      int v123 = [v121 isEqualToString:@"EXPTREATMENTALLOCATIONSTATUS_DEACTIVATED"];
      uint64_t v122 = 3;
      if (!v123) {
        uint64_t v122 = 0;
      }
    }
    uint64_t v347 = v122;
  }

  unsigned __int8 v346 = 0;
LABEL_348:
  strcpy((char *)v383 + 2592, "program_code");
  *((unsigned char *)v383 + 2605) = 0;
  *((_WORD *)v383 + 1303) = -5120;
  sub_2562E39D0();
  sub_256255764(v308, v56, v301);
  sub_2562571A0(v308);
  if (!v383[202])
  {
    sub_25622F3C4((uint64_t)v301, &qword_269F543D8);
    goto LABEL_353;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_353:
    int v344 = 0;
    char v342 = 1;
    goto LABEL_367;
  }
  v124 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v125 = v124;
  if ([v125 isEqualToString:@"PROGRAMCODE_UNKNOWN"])
  {
    int v344 = 0;
  }
  else
  {
    if ([v125 isEqualToString:@"PROGRAMCODE_IOS"])
    {
      int v126 = 1;
    }
    else if ([v125 isEqualToString:@"PROGRAMCODE_MACOS"])
    {
      int v126 = 2;
    }
    else if ([v125 isEqualToString:@"PROGRAMCODE_TVOS"])
    {
      int v126 = 3;
    }
    else if ([v125 isEqualToString:@"PROGRAMCODE_WATCHOS"])
    {
      int v126 = 4;
    }
    else if ([v125 isEqualToString:@"PROGRAMCODE_VISIONOS"])
    {
      int v126 = 5;
    }
    else
    {
      int v126 = 0;
    }
    int v344 = v126;
  }

  char v342 = 0;
LABEL_367:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  uint64_t v127 = swift_task_alloc();
  uint64_t v128 = sub_2562E2FD0();
  v129 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56);
  uint64_t v382 = v127;
  v129(v127, 1, 1, v128);
  v383[320] = 0xD000000000000015;
  v383[321] = 0x80000002562EB0B0;
  sub_2562E39D0();
  sub_256255764(v309, v56, v300);
  sub_2562571A0(v309);
  if (v383[214])
  {
    if (swift_dynamicCast())
    {
      uint64_t v130 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v127, &qword_269F53D68);
      sub_2562363FC(v130, v127);
      swift_task_dealloc();
      goto LABEL_373;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v300, &qword_269F543D8);
  }
  if (__OFADD__(v327, 1)) {
    goto LABEL_503;
  }
  ++v327;
LABEL_373:
  uint64_t v380 = swift_task_alloc();
  v129(v380, 1, 1, v128);
  v383[318] = 0xD000000000000013;
  v383[319] = 0x80000002562EC6C0;
  sub_2562E39D0();
  sub_256255764(v299, v56, v298);
  sub_2562571A0(v299);
  if (v383[226])
  {
    if (swift_dynamicCast())
    {
      uint64_t v131 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v380, &qword_269F53D68);
      sub_2562363FC(v131, v380);
      swift_task_dealloc();
      goto LABEL_379;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v298, &qword_269F543D8);
  }
  if (__OFADD__(v326, 1)) {
    goto LABEL_504;
  }
  ++v326;
LABEL_379:
  v383[314] = 0xD000000000000029;
  v383[315] = 0x80000002562EB150;
  sub_2562E39D0();
  sub_256255764(v294, v56, v293);
  sub_2562571A0(v294);
  if (v383[238])
  {
    int v132 = swift_dynamicCast();
    uint64_t v133 = v383[410];
    if (!v132) {
      uint64_t v133 = 0;
    }
    uint64_t v338 = v133;
    char v134 = v132 ^ 1;
  }
  else
  {
    sub_25622F3C4((uint64_t)v293, &qword_269F543D8);
    uint64_t v338 = 0;
    char v134 = 1;
  }
  char v336 = v134;
  v383[312] = 0xD00000000000002BLL;
  v383[313] = 0x80000002562EB180;
  sub_2562E39D0();
  sub_256255764(v295, v56, v292);
  sub_2562571A0(v295);
  if (v383[250])
  {
    int v135 = swift_dynamicCast();
    uint64_t v136 = v383[411];
    if (!v135) {
      uint64_t v136 = 0;
    }
    uint64_t v334 = v136;
    char v137 = v135 ^ 1;
  }
  else
  {
    sub_25622F3C4((uint64_t)v292, &qword_269F543D8);
    uint64_t v334 = 0;
    char v137 = 1;
  }
  uint64_t v378 = swift_task_alloc();
  v129(v378, 1, 1, v128);
  strcpy((char *)v383 + 2464, "treatment_id");
  *((unsigned char *)v383 + 2477) = 0;
  *((_WORD *)v383 + 1239) = -5120;
  sub_2562E39D0();
  sub_256255764(v296, v56, v291);
  sub_2562571A0(v296);
  if (v383[262])
  {
    if (swift_dynamicCast())
    {
      uint64_t v138 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v378, &qword_269F53D68);
      sub_2562363FC(v138, v378);
      swift_task_dealloc();
      goto LABEL_396;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v291, &qword_269F543D8);
  }
  v139 = sub_2562E3410();
  os_log_type_t v140 = sub_2562E3800();
  if (os_log_type_enabled(v139, v140))
  {
    v141 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v141 = 0;
    _os_log_impl(&dword_256226000, v139, v140, "nil treatmentId", v141, 2u);
    MEMORY[0x25A2A5190](v141, -1, -1);
  }

LABEL_396:
  uint64_t v376 = swift_task_alloc();
  v129(v376, 1, 1, v128);
  v383[306] = 0x6874617065646F63;
  v383[307] = 0xEB0000000064695FLL;
  sub_2562E39D0();
  sub_256255764(v297, v56, v290);
  sub_2562571A0(v297);
  if (v383[274])
  {
    if (swift_dynamicCast())
    {
      uint64_t v142 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v376, &qword_269F53D68);
      sub_2562363FC(v142, v376);
      swift_task_dealloc();
      goto LABEL_403;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v290, &qword_269F543D8);
  }
  v143 = sub_2562E3410();
  os_log_type_t v144 = sub_2562E3800();
  if (os_log_type_enabled(v143, v144))
  {
    v145 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v145 = 0;
    _os_log_impl(&dword_256226000, v143, v144, "nil codePathId", v145, 2u);
    MEMORY[0x25A2A5190](v145, -1, -1);
  }

LABEL_403:
  id v146 = objc_msgSend(self, sel_sharedPreferences);
  unsigned int v147 = objc_msgSend(v146, sel_longLivedIdentifierUploadingEnabled);

  if (v147)
  {
    v383[386] = 0x7364695F6E727574;
    v383[387] = 0xE800000000000000;
    sub_2562E39D0();
    sub_256255764(v264, v56, v263);
    sub_2562571A0(v264);
    if (v383[278])
    {
      if (swift_dynamicCast())
      {
        unint64_t v340 = _s16MetricsFramework15ExtensionsUtilsC13decodeTurnIdsySay10Foundation4UUIDVGSgSSSgFZ_0(v383[388], v383[389]);
        swift_bridgeObjectRelease();
        goto LABEL_412;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v263, &qword_269F543D8);
    }
  }
  else
  {
    v148 = sub_2562E3410();
    int v149 = sub_2562E37E0();
    if (os_log_type_enabled(v148, (os_log_type_t)v149))
    {
      v150 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v150 = 0;
      _os_log_impl(&dword_256226000, v148, (os_log_type_t)v149, "No turnIds found.", v150, 2u);
      MEMORY[0x25A2A5190](v150, -1, -1);
    }
  }
  unint64_t v340 = 0;
LABEL_412:
  uint64_t v151 = v383[429];
  sub_2562E2FC0();
  v129(v151, 0, 1, v128);
  sub_25622F360(v382, v151 + v362[5], &qword_269F53D68);
  sub_25622F360(v380, v151 + v362[6], &qword_269F53D68);
  sub_2562E2F40();
  if ((~*(void *)&v152 & 0x7FF0000000000000) != 0)
  {
    if (v152 <= -1.0) {
      goto LABEL_499;
    }
    if (v152 >= 1.84467441e19) {
      goto LABEL_500;
    }
    if (!is_mul_ok((unint64_t)v152, 0x3E8uLL)) {
      goto LABEL_501;
    }
    uint64_t v153 = v383[429];
    uint64_t v154 = v383[427];
    uint64_t v155 = v383[424];
    uint64_t v156 = v383[423];
    uint64_t v157 = v153 + v362[7];
    *(void *)uint64_t v157 = 1000 * (unint64_t)v152;
    *(unsigned char *)(v157 + 8) = 0;
    *(void *)(v153 + v362[8]) = v370;
    uint64_t v158 = v153 + v362[9];
    *(void *)uint64_t v158 = v338;
    *(unsigned char *)(v158 + 8) = v336;
    uint64_t v159 = v153 + v362[10];
    *(void *)uint64_t v159 = v334;
    *(unsigned char *)(v159 + 8) = v137;
    type metadata accessor for DeviceExperimentMetricsBuilderImpl(0);
    swift_allocObject();
    uint64_t v160 = sub_25627B638();
    sub_256257258(v153, v155, type metadata accessor for EventMetadata);
    (*v284)(v155, 0, 1, v154);
    sub_25622F360(v155, v156, &qword_269F54398);
    uint64_t v161 = v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata;
    swift_beginAccess();
    id v371 = v370;
    sub_2562571F4(v156, v161, &qword_269F54398);
    swift_endAccess();
    sub_25622F3C4(v155, &qword_269F54398);
    uint64_t v162 = v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType;
    *(_DWORD *)uint64_t v162 = 2;
    *(unsigned char *)(v162 + 4) = 0;
    strcpy((char *)v383 + 2416, "experiment_id");
    *((_WORD *)v383 + 1215) = -4864;
    sub_2562E39D0();
    sub_256255764(v287, v56, v267);
    sub_2562571A0(v287);
    if (v383[286])
    {
      int v163 = swift_dynamicCast();
      uint64_t v164 = v383[380];
      uint64_t v165 = v383[381];
      if (!v163)
      {
        uint64_t v164 = 0;
        uint64_t v165 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v267, &qword_269F543D8);
      uint64_t v164 = 0;
      uint64_t v165 = 0;
    }
    v166 = (void *)(v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId);
    void *v166 = v164;
    v166[1] = v165;
    swift_bridgeObjectRelease();
    uint64_t v167 = swift_task_alloc();
    sub_25622F360(v378, v167, &qword_269F53D68);
    uint64_t v168 = v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID;
    swift_beginAccess();
    sub_2562571F4(v167, v168, &qword_269F53D68);
    swift_endAccess();
    swift_task_dealloc();
    strcpy((char *)v383 + 3072, "deployment_id");
    *((_WORD *)v383 + 1543) = -4864;
    sub_2562E39D0();
    sub_256255764(v288, v56, v276);
    sub_2562571A0(v288);
    if (v383[174])
    {
      int v169 = swift_dynamicCast();
      uint64_t v170 = v383[412];
      if (!v169) {
        uint64_t v170 = 0;
      }
      char v171 = v169 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v276, &qword_269F543D8);
      uint64_t v170 = 0;
      char v171 = 1;
    }
    uint64_t v172 = v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId;
    *(void *)uint64_t v172 = v170;
    *(unsigned char *)(v172 + 8) = v171;
    v383[310] = 0x745F656369766564;
    v383[311] = 0xEB00000000657079;
    sub_2562E39D0();
    sub_256255764(v286, v56, v268);
    sub_2562571A0(v286);
    if (v383[282])
    {
      int v173 = swift_dynamicCast();
      uint64_t v174 = v383[376];
      uint64_t v175 = v383[377];
      if (!v173)
      {
        uint64_t v174 = 0;
        uint64_t v175 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v268, &qword_269F543D8);
      uint64_t v174 = 0;
      uint64_t v175 = 0;
    }
    v176 = (void *)(v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType);
    void *v176 = v174;
    v176[1] = v175;
    swift_bridgeObjectRelease();
    uint64_t v177 = v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode;
    *(_DWORD *)uint64_t v177 = v344;
    *(unsigned char *)(v177 + 4) = v342;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F543E0);
    type metadata accessor for ExperimentDigest(0);
    uint64_t v178 = swift_allocObject();
    uint64_t v345 = sub_25622CF28(v178, 1);
    uint64_t v343 = v179;
    v383[316] = 0x5F746375646F7270;
    v383[317] = 0xEA00000000006469;
    sub_2562E39D0();
    sub_256255764(v283, v56, v269);
    sub_2562571A0(v283);
    if (v383[258])
    {
      int v180 = swift_dynamicCast();
      uint64_t v181 = v383[374];
      if (!v180) {
        uint64_t v181 = 0;
      }
      uint64_t v339 = v181;
      if (v180) {
        uint64_t v182 = v383[375];
      }
      else {
        uint64_t v182 = 0;
      }
      uint64_t v337 = v182;
    }
    else
    {
      sub_25622F3C4((uint64_t)v269, &qword_269F543D8);
      uint64_t v339 = 0;
      uint64_t v337 = 0;
    }
    strcpy((char *)v383 + 2576, "system_build");
    *((unsigned char *)v383 + 2589) = 0;
    *((_WORD *)v383 + 1295) = -5120;
    sub_2562E39D0();
    sub_256255764(v281, v56, v271);
    sub_2562571A0(v281);
    if (v383[234])
    {
      int v183 = swift_dynamicCast();
      uint64_t v184 = v383[372];
      if (!v183) {
        uint64_t v184 = 0;
      }
      uint64_t v335 = v184;
      if (v183) {
        uint64_t v185 = v383[373];
      }
      else {
        uint64_t v185 = 0;
      }
      uint64_t v333 = v185;
    }
    else
    {
      sub_25622F3C4((uint64_t)v271, &qword_269F543D8);
      uint64_t v335 = 0;
      uint64_t v333 = 0;
    }
    v383[328] = 0xD000000000000012;
    v383[329] = 0x80000002562EC6E0;
    sub_2562E39D0();
    sub_256255764(v279, v56, v273);
    sub_2562571A0(v279);
    if (v383[210])
    {
      int v186 = swift_dynamicCast();
      uint64_t v187 = v383[370];
      if (!v186) {
        uint64_t v187 = 0;
      }
      uint64_t v332 = v187;
      if (v186) {
        uint64_t v188 = v383[371];
      }
      else {
        uint64_t v188 = 0;
      }
      uint64_t v331 = v188;
    }
    else
    {
      sub_25622F3C4((uint64_t)v273, &qword_269F543D8);
      uint64_t v332 = 0;
      uint64_t v331 = 0;
    }
    v383[334] = 0xD000000000000013;
    v383[335] = 0x80000002562EC700;
    sub_2562E39D0();
    sub_256255764(v289, v56, v275);
    sub_2562571A0(v289);
    if (v383[186])
    {
      int v189 = swift_dynamicCast();
      uint64_t v190 = v383[368];
      if (!v189) {
        uint64_t v190 = 0;
      }
      uint64_t v330 = v190;
      if (v189) {
        uint64_t v191 = v383[369];
      }
      else {
        uint64_t v191 = 0;
      }
      uint64_t v329 = v191;
    }
    else
    {
      sub_25622F3C4((uint64_t)v275, &qword_269F543D8);
      uint64_t v330 = 0;
      uint64_t v329 = 0;
    }
    v383[340] = 0x616D6F645F627573;
    v383[341] = 0xEA00000000006E69;
    sub_2562E39D0();
    sub_256255764(v278, v56, v277);
    sub_2562571A0(v278);
    if (v383[170])
    {
      int v192 = swift_dynamicCast();
      uint64_t v193 = v383[366];
      if (!v192) {
        uint64_t v193 = 0;
      }
      uint64_t v328 = v193;
      if (v192) {
        uint64_t v194 = v383[367];
      }
      else {
        uint64_t v194 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v277, &qword_269F543D8);
      uint64_t v328 = 0;
      uint64_t v194 = 0;
    }
    uint64_t v195 = swift_task_alloc();
    sub_25622F360(v376, v195, &qword_269F53D68);
    v383[346] = 0xD00000000000001BLL;
    v383[347] = 0x80000002562EC720;
    sub_2562E39D0();
    sub_256255764(v280, v56, v274);
    sub_2562571A0(v280);
    if (v383[198])
    {
      if (swift_dynamicCast()) {
        char v196 = *((unsigned char *)v383 + 3512);
      }
      else {
        char v196 = 2;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v274, &qword_269F543D8);
      char v196 = 2;
    }
    v383[352] = 0x746E635F6E727574;
    v383[353] = 0xE800000000000000;
    sub_2562E39D0();
    sub_256255764(v282, v56, v272);
    sub_2562571A0(v282);
    if (v383[222])
    {
      int v197 = swift_dynamicCast();
      if (v197) {
        int v198 = *((_DWORD *)v383 + 876);
      }
      else {
        int v198 = 0;
      }
      char v199 = v197 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v272, &qword_269F543D8);
      int v198 = 0;
      char v199 = 1;
    }
    strcpy((char *)v383 + 2864, "user_turn_cnt");
    *((_WORD *)v383 + 1439) = -4864;
    sub_2562E39D0();
    sub_256255764(v285, v56, v270);
    swift_bridgeObjectRelease();
    sub_2562571A0(v285);
    if (v383[246])
    {
      int v200 = swift_dynamicCast();
      if (v200) {
        int v201 = *((_DWORD *)v383 + 875);
      }
      else {
        int v201 = 0;
      }
      char v202 = v200 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v270, &qword_269F543D8);
      int v201 = 0;
      char v202 = 1;
    }
    uint64_t v203 = v383[426];
    uint64_t v204 = v383[425];
    uint64_t v384 = 1;
    long long v385 = 0u;
    long long v386 = 0u;
    char v387 = 1;
    *((void *)&v251 + 1) = v373;
    *(void *)&long long v251 = v375;
    sub_25627B08C(v339, v337, v335, v333, v358 | ((unint64_t)v357 << 32), v361 | ((unint64_t)v359 << 32), v332, v331, v343, v330, v329, v355, (v355 | ((unint64_t)v354 << 32)) >> 32, v353, (v353 | ((unint64_t)v352 << 32)) >> 32, v251, v328, v194, v351,
      v350,
      v347,
      (v347 | ((unint64_t)v346 << 32)) >> 32,
      (v347 | ((unint64_t)v346 << 32)) >> 48,
      514,
      v195,
      v196,
      (uint64_t)v341,
      v349,
      (v349 | ((unint64_t)v348 << 32)) >> 32,
      v198,
      v199,
      v201,
      v202,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      (long long *)&v384,
      v340);
    swift_task_dealloc();
    *(void *)(v160 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digests) = nullsub_1(v345);
    id v205 = v375;
    id v206 = v373;
    swift_bridgeObjectRelease();
    sub_25627B378(v203);
    swift_release();
    sub_256257258(v203, v204, type metadata accessor for DeviceExperimentMetrics);
    sub_256255F9C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25626C060);
    unint64_t v207 = v383[417];
    unint64_t v209 = *(void *)(v207 + 16);
    unint64_t v208 = *(void *)(v207 + 24);
    if (v209 >= v208 >> 1) {
      uint64_t *v325 = sub_25626C060(v208 > 1, v209 + 1, 1, v207);
    }
    uint64_t v210 = v383[429];
    uint64_t v211 = v383[426];
    sub_2562560A0(v209, v383[425], type metadata accessor for DeviceExperimentMetrics, type metadata accessor for DeviceExperimentMetrics);

    sub_2562572C0(v211, type metadata accessor for DeviceExperimentMetrics);
    sub_2562572C0(v210, type metadata accessor for EventMetadata);
    sub_25622F3C4(v376, &qword_269F53D68);
    sub_25622F3C4(v378, &qword_269F53D68);
    sub_25622F3C4(v380, &qword_269F53D68);
    sub_25622F3C4(v382, &qword_269F53D68);
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_28;
  }
  __break(1u);
LABEL_499:
  __break(1u);
LABEL_500:
  __break(1u);
LABEL_501:
  __break(1u);
LABEL_502:
  __break(1u);
LABEL_503:
  __break(1u);
LABEL_504:
  __break(1u);
LABEL_505:
  __break(1u);
LABEL_506:

  __break(1u);
}

uint64_t sub_25625544C(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_2562E33C0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_2562E3380();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_2562E3390();
  sub_2562E33D0();
  int v24 = sub_2562E3820();
  if ((sub_2562E38A0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    unsigned int v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unsigned int v16 = sub_2562AC010();
LABEL_10:
  swift_retain();
  sub_2562E3400();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == *MEMORY[0x263F90238])
  {
    BOOL v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    BOOL v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  id v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)id v20 = 0;
  os_signpost_id_t v21 = sub_2562E3370();
  _os_signpost_emit_with_name_impl(&dword_256226000, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  MEMORY[0x25A2A5190](v20, -1, -1);

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

double sub_256255764@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_25625626C(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_256229CD0(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_2562557C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
  *(void *)(inited + 32) = 0xD000000000000018;
  *(void *)(inited + 40) = 0x80000002562EC840;
  sub_256231B4C(0, (unint64_t *)&qword_269F54438);
  *(void *)(inited + 48) = sub_2562E3890();
  return sub_256246D84(inited);
}

uint64_t sub_256255868()
{
  return sub_2562E3CE0();
}

void sub_2562558A4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >= 1)
  {
    swift_bridgeObjectRetain_n();
    char v6 = sub_2562E3410();
    os_log_type_t v7 = sub_2562E3800();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_256229738(a2, a3, aBlock);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v6, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v9, -1, -1);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v10 = (void *)sub_2562E3550();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    aBlock[4] = (uint64_t)sub_2562578B8;
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_25624FDEC;
    aBlock[3] = (uint64_t)&block_descriptor_78;
    uint64_t v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);
  }
}

unint64_t sub_256255AEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C80;
  *(void *)(inited + 32) = 0x726F727245;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = sub_2562E3550();
  *(void *)(inited + 56) = 0x746E756F43;
  *(void *)(inited + 64) = 0xE500000000000000;
  *(void *)(inited + 72) = sub_2562E37D0();
  return sub_256246D84(inited);
}

uint64_t SiriDeviceExperimentMetricsCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();

  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_calendar;
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t SiriDeviceExperimentMetricsCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();

  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_calendar;
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_256255E3C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25622844C;
  return sub_25624FFB8(a1);
}

uint64_t sub_256255ED8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_256255EE8(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = sub_2562E3370();
  _os_signpost_emit_with_name_impl(&dword_256226000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_256255F6C()
{
  return sub_256255F9C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25626C094);
}

uint64_t sub_256255F84()
{
  return sub_256255F9C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25626C3B8);
}

uint64_t sub_256255F9C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_256255FF8(uint64_t a1)
{
  return sub_256256028(a1, (uint64_t (*)(BOOL))sub_25626C094);
}

uint64_t sub_256256010(uint64_t a1)
{
  return sub_256256028(a1, (uint64_t (*)(BOOL))sub_25626C3B8);
}

uint64_t sub_256256028(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_256256074(uint64_t a1, uint64_t a2)
{
  return sub_2562560A0(a1, a2, type metadata accessor for DeviceUsageMetrics, type metadata accessor for DeviceUsageMetrics);
}

uint64_t sub_2562560A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = *v4;
  *(void *)(v8 + 16) = a1 + 1;
  uint64_t v9 = *(void *)(a3(0) - 8);
  return sub_2562577BC(a2, v8+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * a1, a4);
}

uint64_t sub_256256148(uint64_t a1, uint64_t a2)
{
  return sub_2562560A0(a1, a2, type metadata accessor for SpeakerIdSamplingData, type metadata accessor for SpeakerIdSamplingData);
}

uint64_t sub_256256174(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25625619C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_2562E38F0();
  *a1 = v5;
  return result;
}

unint64_t sub_2562561F4(uint64_t a1, uint64_t a2)
{
  sub_2562E3D50();
  sub_2562E3600();
  uint64_t v4 = sub_2562E3D90();

  return sub_25625656C(a1, a2, v4);
}

unint64_t sub_25625626C(uint64_t a1)
{
  uint64_t v2 = sub_2562E39B0();

  return sub_256256650(a1, v2);
}

unint64_t sub_2562562B0(uint64_t a1)
{
  sub_2562E3D50();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388]();
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25622F360(a1, (uint64_t)v3, &qword_269F53DB0);
  uint64_t v4 = sub_2562E2F80();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_2562E3D70();
  }
  else
  {
    MEMORY[0x270FA5388]();
    os_log_type_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_2562E3D70();
    sub_256257778(&qword_269F54418);
    sub_2562E34D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = sub_2562E3D90();
  return sub_256256718(a1, v8);
}

unint64_t sub_256256488(uint64_t a1)
{
  sub_2562E3D50();
  EventMetadata.hash(into:)();
  uint64_t v2 = sub_2562E3D90();

  return sub_256256B1C(a1, v2);
}

unint64_t sub_2562564F4(uint64_t a1)
{
  sub_2562E2F80();
  sub_256257778(&qword_269F54418);
  uint64_t v2 = sub_2562E34C0();

  return sub_256256C7C(a1, v2);
}

unint64_t sub_25625656C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2562E3C90() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        os_signpost_id_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2562E3C90() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_256256650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_256257824(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25A2A46E0](v9, a1);
      sub_2562571A0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_256256718(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v25 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v24 = ~v3;
    while (1)
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
      int v29 = v23;
      uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
      MEMORY[0x270FA5388]();
      unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v8 = (char *)v23 - v7;
      sub_25622F360(*(void *)(v27 + 48) + *(void *)(v9 + 72) * v4, (uint64_t)v23 - v7, &qword_269F53DB0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54420);
      uint64_t v28 = v23;
      uint64_t v10 = MEMORY[0x270FA5388]();
      uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 56)];
      sub_25622F360((uint64_t)v23 - v7, (uint64_t)v12, &qword_269F53DB0);
      sub_25622F360(v26, v13, &qword_269F53DB0);
      uint64_t v14 = sub_2562E2F80();
      uint64_t v15 = *(void *)(v14 - 8);
      unsigned int v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      if (v16(v12, 1, v14) == 1) {
        break;
      }
      v23[1] = v23;
      MEMORY[0x270FA5388]();
      uint64_t v17 = (char *)v23 - v7;
      sub_25622F360((uint64_t)v12, (uint64_t)v23 - v7, &qword_269F53DB0);
      if (v16((char *)v13, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))((char *)v23 - v7, v14);
LABEL_4:
        sub_25622F3C4((uint64_t)v12, &qword_269F54420);
        sub_25622F3C4((uint64_t)v23 - v7, &qword_269F53DB0);
        goto LABEL_5;
      }
      MEMORY[0x270FA5388]();
      BOOL v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v19, v13, v14);
      sub_256257778(&qword_269F53DB8);
      char v20 = sub_2562E3520();
      os_signpost_id_t v21 = *(void (**)(char *, uint64_t))(v15 + 8);
      v21(v19, v14);
      v21(v17, v14);
      sub_25622F3C4((uint64_t)v12, &qword_269F53DB0);
      sub_25622F3C4((uint64_t)v8, &qword_269F53DB0);
      if (v20) {
        return v4;
      }
LABEL_5:
      unint64_t v4 = (v4 + 1) & v24;
      if (((*(void *)(v25 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        return v4;
      }
    }
    if (v16((char *)v13, 1, v14) == 1)
    {
      sub_25622F3C4((uint64_t)v12, &qword_269F53DB0);
      sub_25622F3C4((uint64_t)v23 - v7, &qword_269F53DB0);
      return v4;
    }
    goto LABEL_4;
  }
  return v4;
}

unint64_t sub_256256B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EventMetadata(0) - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_256257258(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for EventMetadata);
      char v13 = _s16MetricsFramework13EventMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1);
      sub_2562572C0((uint64_t)v8, type metadata accessor for EventMetadata);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_256256C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v15 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v14 = ~v3;
    uint64_t v5 = sub_2562E2F80();
    uint64_t v6 = v5;
    uint64_t v7 = *(void **)(v5 - 8);
    uint64_t v8 = (void (*)(char *, unint64_t, uint64_t))v7[2];
    uint64_t v9 = v7[8];
    uint64_t v10 = v7[9];
    uint64_t v11 = (uint64_t (**)(char *, uint64_t))(v7 + 1);
    do
    {
      MEMORY[0x270FA5388](v5);
      v8((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v17 + 48) + v10 * v4, v6);
      sub_256257778(&qword_269F53DB8);
      char v12 = sub_2562E3520();
      uint64_t v5 = (*v11)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v12) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v14;
    }
    while (((*(void *)(v15 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_256256DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2562E3020();
  uint64_t v9 = v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_logger;
  uint64_t v10 = sub_2562E3430();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  sub_25622F360(a2, v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_bookmarkService) = a3;
  uint64_t v12 = v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_oddId;
  uint64_t v13 = sub_2562E2FD0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  id v15 = objc_allocWithZone(MEMORY[0x263F08788]);
  swift_retain();
  id v16 = objc_msgSend(v15, sel_init);
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlDateFormatter) = v16;
  id v17 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v18 = (void *)sub_2562E3550();
  id v19 = objc_msgSend(v17, sel_initWithSuiteName_, v18);

  if (!v19) {
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFFA48]), sel_init);
  }
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_defaults) = v19;
  char v20 = *(void **)(v4 + OBJC_IVAR____TtC16MetricsFramework37SiriDeviceExperimentMetricsCalculator_sqlDateFormatter);
  os_signpost_id_t v21 = (void *)sub_2562E3550();
  objc_msgSend(v20, sel_setDateFormat_, v21);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_25622F3C4(a2, &qword_269F53D10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v4;
}

uint64_t sub_25625707C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2562570B4()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t sub_2562570C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_2562570D0(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_25622950C(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_2562570D8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562570E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_25622951C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_2562570F0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256257128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25622954C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_256257130()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_256257168()
{
  return sub_256255868();
}

uint64_t sub_256257170()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256257180()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256257190()
{
  return sub_256229654(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_256257198(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_25622967C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2562571A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2562571F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_256257258(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2562572C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256257320()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

double sub_256257330()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_256257338()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256257370()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2562573A0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562573B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562573C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2562573E8(uint64_t *a1)
{
  (*(void (**)(void))(v1 + 16))();
  uint64_t v3 = *a1 + 8;
  uint64_t result = sub_2562E38F0();
  *a1 = v3;
  return result;
}

uint64_t sub_256257440()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256257450()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for SiriDeviceExperimentMetricsResults()
{
  return &type metadata for SiriDeviceExperimentMetricsResults;
}

uint64_t sub_256257488()
{
  return type metadata accessor for SiriDeviceExperimentMetricsCalculator();
}

uint64_t type metadata accessor for SiriDeviceExperimentMetricsCalculator()
{
  uint64_t result = qword_269F54400;
  if (!qword_269F54400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2562574DC()
{
  sub_2562E3430();
  if (v0 <= 0x3F)
  {
    sub_25622F25C();
    if (v1 <= 0x3F)
    {
      sub_2562E2FD0();
      if (v2 <= 0x3F)
      {
        sub_2562E3060();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for SiriDeviceExperimentMetricsCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDeviceExperimentMetricsCalculator);
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SiriDeviceExperimentMetricsCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_256257778(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2562E2F80();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2562577BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256257824(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_256257880()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

unint64_t sub_2562578B8()
{
  return sub_256255AEC();
}

uint64_t SiriSegmentCohortDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SiriSegmentCohortDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_2562579F0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256257A10, 0, 0);
}

uint64_t sub_256257A10()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SiriSegmentCohortDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t SiriSegmentCohortDataProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriSegmentCohortDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_256257BF4()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_256257A10, 0, 0);
}

unint64_t sub_256257C1C()
{
  unint64_t result = qword_269F54450;
  if (!qword_269F54450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54450);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSegmentCohortDataRecord()
{
  return &type metadata for SiriSegmentCohortDataRecord;
}

uint64_t sub_256257C80()
{
  return type metadata accessor for SiriSegmentCohortDataProvider();
}

uint64_t type metadata accessor for SiriSegmentCohortDataProvider()
{
  uint64_t result = qword_269F54460;
  if (!qword_269F54460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SiriSegmentCohortDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriSegmentCohortDataProvider);
}

uint64_t dispatch thunk of SiriSegmentCohortDataProvider.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SiriSegmentCohortDataProvider.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t DevicePropertiesResult.devicePropertiesEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DevicePropertiesResult.devicePropertiesEvents.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*DevicePropertiesResult.devicePropertiesEvents.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesResult.siriAccountInformationEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DevicePropertiesResult.siriAccountInformationEvents.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DevicePropertiesResult.siriAccountInformationEvents.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesCalculator.__allocating_init(defaults:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_2562E3020();
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults) = a1;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t DevicePropertiesCalculator.init(defaults:logger:)(uint64_t a1, uint64_t a2)
{
  sub_2562E3020();
  *(void *)(v2 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults) = a1;
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v2;
}

uint64_t sub_256257FEC(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(void *)(v3 + 48) = *(void *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_25625801C, 0, 0);
}

uint64_t sub_25625801C()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Calculator invoked: DevicePropertiesCalculator", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = *(void **)(v0 + 32);

  unint64_t v5 = sub_25625824C();
  sub_256259B9C(v5, v4);
  uint64_t v7 = v6;
  id v8 = objc_msgSend(self, sel_sharedPreferences);
  unsigned int v9 = objc_msgSend(v8, sel_longLivedIdentifierUploadingEnabled);

  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    id v12 = objc_msgSend(*(id *)(v0 + 32), sel_eventMetadata);
    uint64_t v13 = objc_msgSend(v12, sel_deviceAggregationId);

    sub_25625A0BC(v5, (uint64_t)v13, v10, v11);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_2562E3410();
    os_log_type_t v16 = sub_2562E37F0();
    if (os_log_type_enabled(v13, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl(&dword_256226000, v13, v16, "RPI enabled, skipping ODDSiriAccountInformation generation", v17, 2u);
      MEMORY[0x25A2A5190](v17, -1, -1);
    }
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v18 = *(void **)(v0 + 16);

  *uint64_t v18 = v7;
  v18[1] = v15;
  id v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_25625824C()
{
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 64);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_2562595D8((char *)&v21 - v2);
  unint64_t v3 = sub_2562585EC((uint64_t)&v21 - v2);
  uint64_t v4 = sub_25622F3C4((uint64_t)&v21 - v2, &qword_269F53DB0);
  MEMORY[0x270FA5388](v4);
  unint64_t v5 = (char *)&v21 - v2;
  unint64_t v22 = v3;
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    uint64_t v7 = sub_2562E2F80();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = v8;
    unint64_t v10 = v22 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v24 = *(void *)(v8 + 72);
    uint64_t v28 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    int v29 = (void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v25 = v8 + 32;
    uint64_t v12 = v8 + 16;
    uint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    uint64_t v26 = v12;
    uint64_t v27 = v11;
    uint64_t v23 = (void (**)(char *, uint64_t))(v9 + 8);
    v11(v5, v10, v7);
    while (1)
    {
      (*v29)(v5, 0, 1, v7);
      uint64_t v13 = (*v28)(v5, 1, v7);
      if (v13 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v13);
      uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v5, v7);
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
      uint64_t result = sub_2562E2F40();
      if (v16)
      {
        if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
        {
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          __break(1u);
          return result;
        }
        if (v18 <= -1.0) {
          goto LABEL_16;
        }
        if (v18 >= 1.84467441e19) {
          goto LABEL_17;
        }
        objc_msgSend(v16, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v18);
        objc_msgSend(v16, sel_setNumberOfSeconds_, 86400);
        id v19 = v16;
        MEMORY[0x25A2A4400]();
        if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2562E3730();
        }
        sub_2562E3750();
        sub_2562E3720();
      }
      (*v23)(v15, v7);
      v10 += v24;
      if (!--v6) {
        goto LABEL_13;
      }
      v27(v5, v10, v7);
    }
  }
  else
  {
LABEL_13:
    uint64_t v20 = sub_2562E2F80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  return v30;
}

unint64_t sub_2562585EC(uint64_t a1)
{
  unint64_t v37 = MEMORY[0x263F8EE78];
  uint64_t v3 = sub_2562E2F80();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v6);
  sub_2562E30A0();
  sub_2562E3010();
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t v29 = v4 + 8;
  uint64_t v7 = v28((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256258AEC(a1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3) == 1)
  {
    sub_25622F3C4((uint64_t)v11, &qword_269F53DB0);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    unint64_t v34 = (char *)(v4 + 32);
    v33(v8, v11, v3);
    uint64_t v32 = sub_256257778(qword_269F544C8);
    uint64_t v12 = sub_2562E3510();
    if ((v12 & 1) == 0)
    {
      uint64_t v27 = v1;
      unint64_t v13 = v37;
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      uint64_t v31 = v4 + 16;
      do
      {
        MEMORY[0x270FA5388](v12);
        v30((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8, v3);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_25626C0C8(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v15 = *(void *)(v13 + 16);
        unint64_t v14 = *(void *)(v13 + 24);
        if (v15 >= v14 >> 1) {
          unint64_t v13 = sub_25626C0C8(v14 > 1, v15 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v15 + 1;
        v33((char *)(v13+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15), (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
        sub_2562E2EE0();
        uint64_t v12 = sub_2562E3510();
      }
      while ((v12 & 1) == 0);
      unint64_t v37 = v13;
    }
    v28(v8, v3);
  }
  id v16 = sub_2562E3410();
  os_log_type_t v17 = sub_2562E37F0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v34 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    v36[0] = v20;
    *(_DWORD *)id v19 = 136315138;
    swift_beginAccess();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = MEMORY[0x25A2A4430](v21, v3);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_256229738(v22, v24, v36);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v16, v17, "Dates to run: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v20, -1, -1);
    MEMORY[0x25A2A5190](v19, -1, -1);

    uint64_t v25 = v34;
  }
  else
  {

    uint64_t v25 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  }
  v28(v25, v3);
  swift_beginAccess();
  return v37;
}

uint64_t sub_256258AEC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v65 = (void *)a1;
  uint64_t v3 = sub_2562E2F80();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  unint64_t v7 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v67 = v2;
  MEMORY[0x270FA5388](v6);
  sub_2562E30A0();
  uint64_t v68 = (char *)v58 - v7;
  sub_2562E3010();
  uint64_t v66 = v4;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v9 = v4 + 8;
  uint64_t v8 = v10;
  uint64_t v11 = ((uint64_t (*)(char *, uint64_t))v10)((char *)v58 - v7, v3);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  if (qword_269F53B10 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_2562E3060();
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_269F55418);
  MEMORY[0x270FA5388](v14);
  sub_2562E30A0();
  sub_2562E3010();
  v8((char *)v58 - v7, v3);
  sub_2562E2E80();
  sub_2562E2E70();
  uint64_t v63 = v9;
  uint64_t v15 = ((uint64_t (*)(char *, uint64_t))v8)((char *)v58 - v7, v3);
  MEMORY[0x270FA5388](v15);
  id v16 = (char *)v58 - v7;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25625B380((uint64_t)v65, (uint64_t)v19);
  uint64_t v20 = v66;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v19, 1, v3) == 1)
  {
    sub_25622F3C4((uint64_t)v19, &qword_269F53DB0);
    uint64_t v21 = sub_2562E3410();
    os_log_type_t v22 = sub_2562E37F0();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl(&dword_256226000, v21, v22, "pluginLastRunDate: no entry", v23, 2u);
      MEMORY[0x25A2A5190](v23, -1, -1);
    }

    v8(v68, v3);
    unint64_t v24 = v64;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v64, (char *)v58 - v7, v3);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v3);
  }
  else
  {
    uint64_t v65 = v58;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v62(v16, v19, v3);
    uint64_t v26 = sub_2562E2F20();
    uint64_t v27 = (char *)v58 - v7;
    if (v26)
    {
      MEMORY[0x270FA5388](v26);
      uint64_t v28 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v28, v16, v3);
      uint64_t v29 = v3;
      uint64_t v30 = sub_2562E3410();
      os_log_type_t v31 = sub_2562E37F0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v67 = (char *)v58 - v7;
        char v59 = v8;
        uint64_t v33 = v32;
        uint64_t v34 = swift_slowAlloc();
        uint64_t v60 = (uint8_t *)v34;
        *(_DWORD *)uint64_t v33 = 134218242;
        uint64_t v69 = 6;
        unsigned __int8 v70 = (char *)v34;
        unint64_t v61 = (uint8_t *)v58;
        sub_2562E38F0();
        *(_WORD *)(v33 + 12) = 2080;
        v58[1] = v33 + 14;
        sub_256257778((unint64_t *)&qword_269F53E00);
        uint64_t v35 = sub_2562E3C80();
        uint64_t v69 = sub_256229738(v35, v36, (uint64_t *)&v70);
        sub_2562E38F0();
        swift_bridgeObjectRelease();
        unint64_t v37 = v59;
        v59(v28, v29);
        _os_log_impl(&dword_256226000, v30, v31, "pluginLastRunDate more than %ld days ago: %s", (uint8_t *)v33, 0x16u);
        uint64_t v38 = v60;
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v38, -1, -1);
        MEMORY[0x25A2A5190](v33, -1, -1);

        v37(v16, v29);
        v37(v68, v29);
        uint64_t v27 = v67;
      }
      else
      {

        v8(v28, v29);
        v8(v16, v29);
        v8(v68, v29);
      }
      uint64_t v51 = v64;
      v62(v64, v27, v29);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v51, 0, 1, v29);
    }
    else
    {
      uint64_t v39 = sub_2562E2F20();
      char v40 = v39;
      uint64_t v62 = (void (*)(char *, char *, uint64_t))v58;
      MEMORY[0x270FA5388](v39);
      uint64_t v41 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v42 = v3;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v41, v16, v3);
      uint64_t v43 = sub_2562E3410();
      os_log_type_t v44 = sub_2562E37F0();
      BOOL v45 = os_log_type_enabled(v43, v44);
      if (v40)
      {
        if (v45)
        {
          uint64_t v46 = swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          uint64_t v67 = (char *)v47;
          *(_DWORD *)uint64_t v46 = 134218242;
          uint64_t v69 = 6;
          unsigned __int8 v70 = (char *)v47;
          unint64_t v61 = (uint8_t *)&v70;
          sub_2562E38F0();
          *(_WORD *)(v46 + 12) = 2080;
          uint64_t v60 = (uint8_t *)(v46 + 14);
          sub_256257778((unint64_t *)&qword_269F53E00);
          uint64_t v48 = sub_2562E3C80();
          uint64_t v69 = sub_256229738(v48, v49, (uint64_t *)&v70);
          sub_2562E38F0();
          swift_bridgeObjectRelease();
          v8(v41, v42);
          _os_log_impl(&dword_256226000, v43, v44, "pluginLastRunDate within last %ld days: %s", (uint8_t *)v46, 0x16u);
          uint64_t v50 = v67;
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v50, -1, -1);
          MEMORY[0x25A2A5190](v46, -1, -1);
        }
        else
        {

          v8(v41, v42);
        }
        uint64_t v57 = v64;
        sub_2562E2EF0();
        v8(v16, v42);
        v8(v27, v42);
        v8(v68, v42);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v57, 0, 1, v42);
      }
      else
      {
        if (v45)
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          uint64_t v67 = (char *)swift_slowAlloc();
          unsigned __int8 v70 = v67;
          unint64_t v61 = v52;
          *(_DWORD *)uint64_t v52 = 136315138;
          uint64_t v60 = v52 + 4;
          sub_256257778((unint64_t *)&qword_269F53E00);
          uint64_t v53 = sub_2562E3C80();
          uint64_t v69 = sub_256229738(v53, v54, (uint64_t *)&v70);
          sub_2562E38F0();
          swift_bridgeObjectRelease();
          v8(v41, v42);
          uint64_t v55 = v61;
          _os_log_impl(&dword_256226000, v43, v44, "pluginLastRunDate this morning or later: %s", v61, 0xCu);
          uint64_t v56 = v67;
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v56, -1, -1);
          MEMORY[0x25A2A5190](v55, -1, -1);
        }
        else
        {

          v8(v41, v42);
        }
        v8(v16, v42);
        v8(v27, v42);
        v8(v68, v42);
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v64, 1, 1, v42);
      }
    }
  }
}

uint64_t sub_2562595D8@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_2562E2F80();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults);
  unint64_t v39 = (unint64_t)"NLMODE_NLX_DEVICE";
  uint64_t v11 = (void *)sub_2562E3550();
  id v12 = objc_msgSend(v10, sel_objectForKey_, v11);

  if (v12)
  {
    sub_2562E3970();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_25625B318((uint64_t)v40, (uint64_t)v41);
  if (v41[3])
  {
    int v13 = swift_dynamicCast();
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
    v14(v9, v13 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
    {
      uint64_t v38 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
      uint64_t v15 = v38((char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v3);
      unint64_t v37 = v33;
      MEMORY[0x270FA5388](v15);
      id v16 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v16, v16, v3);
      uint64_t v17 = sub_2562E3410();
      os_log_type_t v18 = sub_2562E37F0();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v36 = v4 + 32;
        uint64_t v21 = v20;
        uint64_t v35 = swift_slowAlloc();
        v41[0] = v35;
        *(_DWORD *)uint64_t v21 = 136315394;
        int v34 = v19;
        uint64_t v22 = sub_256229738(0xD000000000000021, v39 | 0x8000000000000000, v41);
        unint64_t v39 = (unint64_t)a1;
        *(void *)&v40[0] = v22;
        sub_2562E38F0();
        *(_WORD *)(v21 + 12) = 2080;
        v33[1] = v21 + 14;
        sub_256257778((unint64_t *)&qword_269F53E00);
        uint64_t v23 = sub_2562E3C80();
        *(void *)&v40[0] = sub_256229738(v23, v24, v41);
        a1 = (char *)v39;
        sub_2562E38F0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
        _os_log_impl(&dword_256226000, v17, (os_log_type_t)v34, "%s: %s", (uint8_t *)v21, 0x16u);
        uint64_t v25 = v35;
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v25, -1, -1);
        MEMORY[0x25A2A5190](v21, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
      }
      v38(a1, v6, v3);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v14)(a1, 0, 1, v3);
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v41, &qword_269F543D8);
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
    v14(v9, 1, 1, v3);
  }
  sub_25622F3C4((uint64_t)v9, &qword_269F53DB0);
  uint64_t v26 = sub_2562E3410();
  os_log_type_t v27 = sub_2562E37F0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = a1;
    uint64_t v30 = swift_slowAlloc();
    v41[0] = v30;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&v40[0] = sub_256229738(0xD000000000000021, v39 | 0x8000000000000000, v41);
    sub_2562E38F0();
    _os_log_impl(&dword_256226000, v26, v27, "No entry for %s from UserDefaults", v28, 0xCu);
    swift_arrayDestroy();
    uint64_t v31 = v30;
    a1 = v29;
    MEMORY[0x25A2A5190](v31, -1, -1);
    MEMORY[0x25A2A5190](v28, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v14)(a1, 1, 1, v3);
}

void sub_256259B9C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  uint64_t v33 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2562E3AD0();
    if (v6) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v31 = v5 & 0xC000000000000001;
  uint64_t v7 = 4;
  uint64_t v25 = v6;
  uint64_t v27 = v3;
  unint64_t v28 = v5;
  uint64_t v26 = a2;
  while (1)
  {
    if (v31) {
      id v8 = (id)MEMORY[0x25A2A4740](v7 - 4, v5);
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7);
    }
    uint64_t v9 = v8;
    uint64_t v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    id v11 = sub_256259F08((uint64_t)v8, a2);
    if (v11) {
      break;
    }

LABEL_5:
    ++v7;
    if (v10 == v6) {
      goto LABEL_22;
    }
  }
  id v12 = v11;
  MEMORY[0x25A2A4400]();
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2562E3730();
  }
  sub_2562E3750();
  sub_2562E3720();
  id v13 = objc_msgSend(v12, sel_eventMetadata);
  if (!v13)
  {

    goto LABEL_5;
  }
  id v14 = v13;
  uint64_t v15 = sub_2562E3410();
  os_log_type_t v30 = sub_2562E37F0();
  if (!os_log_type_enabled(v15, v30))
  {

    goto LABEL_5;
  }
  uint64_t v16 = swift_slowAlloc();
  uint64_t v17 = swift_slowAlloc();
  os_log_type_t v18 = v14;
  uint64_t v19 = v17;
  uint64_t v32 = v17;
  *(_DWORD *)uint64_t v16 = 136315138;
  uint64_t v29 = v18;
  id v20 = objc_msgSend(v18, sel_dictionaryRepresentation);
  if (v20)
  {
    uint64_t v21 = v20;
    sub_2562E34A0();

    uint64_t v22 = sub_2562E34B0();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *(void *)(v16 + 4) = sub_256229738(v22, v24, &v32);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v15, v30, "Added devicePropertiesEvent with metadata: %s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v19, -1, -1);
    MEMORY[0x25A2A5190](v16, -1, -1);

    uint64_t v3 = v27;
    unint64_t v5 = v28;
    uint64_t v6 = v25;
    a2 = v26;
    goto LABEL_5;
  }

  __break(1u);
}

id sub_256259F08(uint64_t a1, id a2)
{
  if (!a2)
  {
    sub_25625A8FC(0xD000000000000020, 0x80000002562ED0A0);
LABEL_6:
    sub_25625A8FC(0xD000000000000017, 0x80000002562EC5E0);
    id v6 = 0;
    goto LABEL_7;
  }
  id v4 = objc_msgSend(a2, sel_eventMetadata);
  if (!v4) {
    goto LABEL_6;
  }
  unint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_deviceAggregationId);

  if (!v6) {
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v7 = (void *)sub_2562A379C(a1, (uint64_t)v6);
  if (v7)
  {
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_25625A8FC(0xD00000000000003BLL, 0x80000002562ED0D0);
    if (!a2) {
      goto LABEL_13;
    }
  }
  id v8 = objc_msgSend(a2, sel_data);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_2562E2E60();
    unint64_t v12 = v11;

    id v13 = (void *)sub_2562E2E50();
    sub_25625B2C0(v10, v12);
    goto LABEL_14;
  }
LABEL_13:
  id v13 = 0;
LABEL_14:
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_initWithData_, v13);

  if (v14) {
    objc_msgSend(v14, sel_setEventMetadata_, v7);
  }
  else {
    sub_25625A8FC(0xD000000000000037, 0x80000002562ED110);
  }

  return v14;
}

void sub_25625A0BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v66 = a3;
  uint64_t v74 = a2;
  unint64_t v7 = a1;
  uint64_t v78 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2562E3AD0();
    if (v8) {
      goto LABEL_3;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_46;
  }
LABEL_3:
  uint64_t v65 = v5 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  unint64_t v73 = v7 & 0xC000000000000001;
  uint64_t v10 = 4;
  unint64_t v68 = 0x80000002562ED0D0;
  unint64_t v69 = 0x80000002562EC5E0;
  unint64_t v67 = 0x80000002562ED110;
  *(void *)&long long v9 = 136315394;
  long long v59 = v9;
  uint64_t v57 = MEMORY[0x263F8EE58] + 8;
  uint64_t v70 = v5;
  uint64_t v71 = a4;
  unint64_t v58 = v7;
  uint64_t v72 = v8;
  uint64_t v60 = &v77;
  while (1)
  {
    if (v73) {
      id v11 = (id)MEMORY[0x25A2A4740](v10 - 4, v7);
    }
    else {
      id v11 = *(id *)(v7 + 8 * v10);
    }
    id v75 = v11;
    uint64_t v12 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v74)
    {
      if (a4) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_25625A8FC(0xD000000000000017, v69);
      if (a4) {
        goto LABEL_13;
      }
    }
    sub_25625A8FC(0x69737361206C696ELL, 0xEF6449746E617473);
LABEL_13:
    id v13 = objc_allocWithZone(MEMORY[0x263F6E6B0]);
    id v14 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
    id v15 = objc_msgSend(v13, sel_init, v57);
    id v16 = v15;
    if (v15)
    {
      objc_msgSend(v15, sel_setDeviceAggregationId_, v74);
      uint64_t v17 = sub_2562E2FD0();
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      id v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2562E2FC0();
      id v21 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      uint64_t v22 = (void *)sub_2562E2FB0();
      id v23 = objc_msgSend(v21, sel_initWithNSUUID_, v22);

      unint64_t v24 = *(void (**)(char *, uint64_t))(v18 + 8);
      a4 = v18 + 8;
      v24(v20, v17);
      objc_msgSend(v16, sel_setOddId_, v23);

      uint64_t v25 = sub_2562E2F80();
      uint64_t v26 = *(void *)(v25 - 8);
      MEMORY[0x270FA5388](v25);
      unint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2562E30A0();
      sub_2562E2F40();
      double v30 = v29;
      unint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
      uint64_t v5 = v26 + 8;
      v31(v28, v25);
      if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
        goto LABEL_41;
      }
      if (v30 <= -1.0) {
        goto LABEL_42;
      }
      if (v30 >= 1.84467441e19) {
        goto LABEL_43;
      }
      if (!is_mul_ok((unint64_t)v30, 0x3E8uLL)) {
        goto LABEL_44;
      }
      objc_msgSend(v16, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v30);
      objc_msgSend(v16, sel_setAggregationInterval_, v75);
      uint64_t v5 = v70;
      a4 = v71;
      id v14 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
    }
    else
    {
      sub_25625A8FC(0xD00000000000003BLL, v68);
    }
    id v32 = [objc_allocWithZone(MEMORY[0x263F6E770]) v14[123]];
    if (v32) {
      break;
    }
    sub_25625A8FC(0xD000000000000037, v67);
LABEL_5:

LABEL_6:
    ++v10;
    if (v12 == v72) {
      goto LABEL_46;
    }
  }
  uint64_t v33 = v32;
  objc_msgSend(v32, sel_setEventMetadata_, v16);
  id v34 = [objc_allocWithZone(MEMORY[0x263F6E768]) v14[123]];
  uint64_t v35 = v34;
  if (v34)
  {
    id v36 = v34;
    if (a4) {
      unint64_t v37 = (void *)sub_2562E3550();
    }
    else {
      unint64_t v37 = 0;
    }
    objc_msgSend(v36, sel_setAssistantId_, v37);
  }
  objc_msgSend(v33, sel_setSiriAccountInformation_, v35);

  id v16 = v33;
  MEMORY[0x25A2A4400]();
  if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2562E3730();
  }
  sub_2562E3750();
  sub_2562E3720();
  id v38 = objc_msgSend(v16, sel_eventMetadata);
  if (!v38) {
    goto LABEL_5;
  }
  unint64_t v39 = v38;
  id v40 = objc_msgSend(v16, sel_siriAccountInformation);
  if (!v40)
  {

    goto LABEL_6;
  }
  uint64_t v41 = v40;
  id v42 = objc_msgSend(v40, sel_assistantId);

  if (!v42)
  {

    a4 = v71;
    goto LABEL_6;
  }
  uint64_t v43 = sub_2562E3560();
  unint64_t v45 = v44;

  id v46 = v39;
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_2562E3410();
  int v48 = sub_2562E37F0();
  if (!os_log_type_enabled(v47, (os_log_type_t)v48))
  {
    swift_bridgeObjectRelease_n();

    a4 = v71;
    goto LABEL_6;
  }
  int v63 = v48;
  os_log_t v64 = v47;
  uint64_t v49 = swift_slowAlloc();
  uint64_t v62 = swift_slowAlloc();
  uint64_t v77 = v62;
  *(_DWORD *)uint64_t v49 = v59;
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_256229738(v43, v45, &v77);
  sub_2562E38F0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v49 + 12) = 2080;
  id v50 = objc_msgSend(v46, sel_dictionaryRepresentation);
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v61 = v49 + 14;
    sub_2562E34A0();

    uint64_t v52 = sub_2562E34B0();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_256229738(v52, v54, &v77);
    sub_2562E38F0();

    swift_bridgeObjectRelease();
    os_log_t v55 = v64;
    _os_log_impl(&dword_256226000, v64, (os_log_type_t)v63, "Added siriAccountInformationEvent with assistantId: %s metadata: %s", (uint8_t *)v49, 0x16u);
    uint64_t v56 = v62;
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v56, -1, -1);
    MEMORY[0x25A2A5190](v49, -1, -1);

    unint64_t v7 = v58;
    uint64_t v5 = v70;
    a4 = v71;
    goto LABEL_6;
  }

  __break(1u);
}

void sub_25625A8FC(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_2562E3410();
  os_log_type_t v5 = sub_2562E3800();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    aBlock[0] = v7;
    *(_DWORD *)id v6 = 136315138;
    swift_bridgeObjectRetain();
    sub_256229738(a1, a2, aBlock);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v7, -1, -1);
    MEMORY[0x25A2A5190](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = (void *)sub_2562E3550();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  aBlock[4] = (uint64_t)sub_25625B2A0;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25624FDEC;
  aBlock[3] = (uint64_t)&block_descriptor_3;
  uint64_t v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v10);
}

unint64_t sub_25625AB2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
  *(void *)(inited + 32) = 0x726F727245;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = sub_2562E3550();
  return sub_256246D84(inited);
}

uint64_t DevicePropertiesCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t DevicePropertiesCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_25625AD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v6;
  *(void *)(v7 + 8) = sub_25622844C;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a2;
  *(void *)(v7 + 48) = *(void *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_25625801C, 0, 0);
}

unint64_t sub_25625AE2C()
{
  unint64_t result = qword_269F54498;
  if (!qword_269F54498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54498);
  }
  return result;
}

unint64_t sub_25625AE84()
{
  unint64_t result = qword_269F544A0;
  if (!qword_269F544A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F544A0);
  }
  return result;
}

uint64_t destroy for DevicePropertiesResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework22DevicePropertiesResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DevicePropertiesResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DevicePropertiesResult(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DevicePropertiesResult()
{
  return &type metadata for DevicePropertiesResult;
}

uint64_t sub_25625B000()
{
  return type metadata accessor for DevicePropertiesCalculator();
}

uint64_t type metadata accessor for DevicePropertiesCalculator()
{
  uint64_t result = qword_269F544B0;
  if (!qword_269F544B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25625B054()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E3060();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for DevicePropertiesCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DevicePropertiesCalculator);
}

uint64_t dispatch thunk of DevicePropertiesCalculator.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DevicePropertiesCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 112) + **(int **)(*(void *)v2 + 112));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_25625B268()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_25625B2A0()
{
  return sub_25625AB2C();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_25625B2C0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_25625B318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25625B380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25625B3E8()
{
  return MEMORY[0x270FA2498](sub_25625B404, 0, 0);
}

uint64_t sub_25625B404()
{
  return sub_2562E3AC0();
}

uint64_t SiriDigestMetricsReporter.deinit()
{
  return v0;
}

uint64_t SiriDigestMetricsReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_25625B49C(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t type metadata accessor for SiriDigestMetricsReporter()
{
  return self;
}

uint64_t method lookup function for SiriDigestMetricsReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetricsReporter);
}

uint64_t dispatch thunk of SiriDigestMetricsReporter.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t DeviceSegmentsCohortsImpl.deinit()
{
  sub_25625BBA8(v0 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DeviceSegmentsCohortsImpl.__deallocating_deinit()
{
  sub_25625BBA8(v0 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id static DeviceSegments.toBiomeEvent(deviceSegments:)(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 29) & 1) == 0)
  {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 28);
    uint64_t v6 = *(unsigned int *)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    if ((*(void *)a1 & 0x100000000) != 0)
    {
      uint64_t v4 = 0;
      if ((v7 & 0x100000000) != 0)
      {
LABEL_5:
        uint64_t v3 = 0;
        uint64_t v9 = v6 | (v5 << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_6;
        }
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v4 = (void *)sub_2562E3D30();
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_5;
      }
    }
    uint64_t v3 = (void *)sub_2562E3D30();
    uint64_t v9 = v6 | (v5 << 32);
    if ((v8 & 0x100000000) != 0)
    {
LABEL_6:
      uint64_t v2 = 0;
      if ((v9 & 0x100000000) != 0)
      {
LABEL_7:
        uint64_t v1 = 0;
        goto LABEL_12;
      }
LABEL_11:
      uint64_t v1 = (void *)sub_2562E3DA0();
      goto LABEL_12;
    }
LABEL_10:
    uint64_t v2 = (void *)sub_2562E3DA0();
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_7;
    }
    goto LABEL_11;
  }
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
LABEL_12:
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A448]), sel_initWithSegmentType_segmentDataAvailabilityState_daysWithTwoValidAssistantTurnsPerWeek_daysWithTwoAssistantSpeechRequestsPerWeek_, v4, v3, v2, v1);

  return v10;
}

id static DeviceCohorts.toBiomeEvent(deviceCohorts:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = (void *)a1[2];
  if ((unint64_t)v3 >= 2)
  {
    id v6 = v3;
    objc_msgSend(v6, sel_startTimestampInSecondsSince1970);
    objc_msgSend(v6, sel_numberOfSeconds);
    uint64_t v5 = (void *)sub_2562E3DB0();
    uint64_t v4 = (void *)sub_2562E3DA0();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A458]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v5, v4);

  if (v3 != (void *)1)
  {
    if ((v2 & 0x100000000) != 0)
    {
      uint64_t v9 = 0;
      if ((v1 & 0x100000000) != 0) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = (void *)sub_2562E3D30();
      if ((v1 & 0x100000000) != 0)
      {
LABEL_8:
        uint64_t v8 = 0;
        goto LABEL_11;
      }
    }
    uint64_t v8 = (void *)sub_2562E3D30();
    goto LABEL_11;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 0;
LABEL_11:
  id v10 = objc_allocWithZone(MEMORY[0x263F2A440]);
  id v11 = v7;
  id v12 = objc_msgSend(v10, sel_initWithTimeInterval_cohortType_cohortDataAvailabilityState_, v11, v9, v8);

  return v12;
}

BOOL _s16MetricsFramework13DeviceCohortsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a2 + 4);
  unint64_t v4 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a1 != *(_DWORD *)a2) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)) {
      char v6 = *(unsigned char *)(a2 + 12);
    }
    else {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  BOOL result = (v2 | v4) == 0;
  if (v2)
  {
    if (v4)
    {
      sub_25625DEEC();
      id v7 = (id)v4;
      id v8 = (id)v2;
      char v9 = sub_2562E3870();

      return v9 & 1;
    }
  }
  return result;
}

uint64_t _s16MetricsFramework14DeviceSegmentsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 12);
  int v4 = *(_DWORD *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 20);
  int v6 = *(_DWORD *)(a1 + 24);
  int v7 = *(unsigned __int8 *)(a1 + 28);
  int v8 = *(unsigned __int8 *)(a2 + 20);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 28);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a1 == *(_DWORD *)a2) {
      char v11 = *(unsigned char *)(a2 + 4);
    }
    else {
      char v11 = 1;
    }
    if (v11) {
      return 0;
    }
  }
  if (v3)
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (v2 == *(_DWORD *)(a2 + 8)) {
      char v12 = *(unsigned char *)(a2 + 12);
    }
    else {
      char v12 = 1;
    }
    if (v12) {
      return 0;
    }
  }
  if (v5)
  {
    if ((v8 ^ 1 | v7)) {
      return v8 & v9;
    }
  }
  else
  {
    if (v4 == *(_DWORD *)(a2 + 16)) {
      int v13 = *(unsigned __int8 *)(a2 + 20);
    }
    else {
      int v13 = 1;
    }
    if ((v13 | v7)) {
      return v9 & ~v13;
    }
  }
  return (v6 == *(_DWORD *)(a2 + 24)) & ~v9;
}

uint64_t sub_25625BBA8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25625BC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_25625BC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_25625BC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_25625BC44(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

__n128 __swift_memcpy29_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceSegments(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeviceSegments(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 29) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DeviceSegments()
{
  return &type metadata for DeviceSegments;
}

uint64_t initializeBufferWithCopyOfBuffer for DeviceCohorts(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  char v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void destroy for DeviceCohorts(uint64_t a1)
{
}

uint64_t assignWithCopy for DeviceCohorts(uint64_t a1, int *a2)
{
  int v3 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v3;
  int v4 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  char v5 = *(void **)(a1 + 16);
  int v6 = (void *)*((void *)a2 + 2);
  *(void *)(a1 + 16) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for DeviceCohorts(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  int v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceCohorts(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceCohorts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceCohorts()
{
  return &type metadata for DeviceCohorts;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceSegmentsCohorts(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    id v7 = (int *)type metadata accessor for EventMetadata(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_2562E2FD0();
      uint64_t v12 = *(void *)(v11 - 8);
      int v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v38 = v8;
      if (v13(a2, 1, v11))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v15 = v7[5];
      id v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      uint64_t v19 = v7[6];
      id v20 = (char *)a1 + v19;
      id v21 = (char *)a2 + v19;
      if (v13((uint64_t *)((char *)a2 + v19), 1, v11))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      }
      uint64_t v23 = v7[7];
      unint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      *(void *)unint64_t v24 = *(void *)v25;
      v24[8] = v25[8];
      uint64_t v26 = v7[8];
      uint64_t v27 = *(void **)((char *)a2 + v26);
      *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
      uint64_t v28 = v7[9];
      double v29 = (char *)a1 + v28;
      double v30 = (char *)a2 + v28;
      v29[8] = v30[8];
      *(void *)double v29 = *(void *)v30;
      uint64_t v31 = v7[10];
      id v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      v32[8] = v33[8];
      *(void *)id v32 = *(void *)v33;
      id v34 = *(void (**)(uint64_t *, void, uint64_t, int *))(v38 + 56);
      id v35 = v27;
      v34(a1, 0, 1, v7);
    }
    uint64_t v36 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v36) = *(uint64_t *)((char *)a2 + v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeviceSegmentsCohorts(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for EventMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2))
  {
    uint64_t v3 = sub_2562E2FD0();
    uint64_t v4 = *(void *)(v3 - 8);
    int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    }
    uint64_t v6 = a1 + v2[5];
    if (!v5(v6, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
    }
    uint64_t v7 = a1 + v2[6];
    if (!v5(v7, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_2562E2FD0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v36 = v7;
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    uint64_t v17 = v6[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v19, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    uint64_t v21 = v6[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v6[8];
    uint64_t v25 = *(void **)&a2[v24];
    *(void *)&a1[v24] = v25;
    uint64_t v26 = v6[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = v6[10];
    double v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    v30[8] = v31[8];
    *(void *)double v30 = *(void *)v31;
    id v32 = *(void (**)(char *, void, uint64_t, int *))(v36 + 56);
    id v33 = v25;
    v32(a1, 0, 1, v6);
  }
  uint64_t v34 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v34] = *(void *)&a2[v34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_25625CFB0((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v16 = sub_2562E2FD0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(a1, 1, v16);
    int v20 = v18(a2, 1, v16);
    uint64_t v75 = a3;
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(a1, a2, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 24))(a1, a2, v16);
LABEL_22:
        uint64_t v46 = v6[5];
        uint64_t v47 = &a1[v46];
        int v48 = &a2[v46];
        int v49 = v18(&a1[v46], 1, v16);
        int v50 = v18(v48, 1, v16);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v47, v48, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v47, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v47, v48, v16);
LABEL_28:
            uint64_t v52 = v6[6];
            unint64_t v53 = &a1[v52];
            unint64_t v54 = &a2[v52];
            int v55 = v18(&a1[v52], 1, v16);
            int v56 = v18(v54, 1, v16);
            if (v55)
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v53, v54, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v53, 0, 1, v16);
LABEL_34:
                uint64_t v58 = v6[7];
                long long v59 = &a1[v58];
                uint64_t v60 = &a2[v58];
                uint64_t v61 = *(void *)v60;
                v59[8] = v60[8];
                *(void *)long long v59 = v61;
                uint64_t v62 = v6[8];
                int v63 = *(void **)&a1[v62];
                os_log_t v64 = *(void **)&a2[v62];
                *(void *)&a1[v62] = v64;
                id v65 = v64;

                uint64_t v66 = v6[9];
                unint64_t v67 = &a1[v66];
                unint64_t v68 = &a2[v66];
                uint64_t v69 = *(void *)v68;
                v67[8] = v68[8];
                *(void *)unint64_t v67 = v69;
                uint64_t v70 = v6[10];
                uint64_t v71 = &a1[v70];
                uint64_t v72 = &a2[v70];
                uint64_t v73 = *(void *)v72;
                v71[8] = v72[8];
                *(void *)uint64_t v71 = v73;
LABEL_35:
                a3 = v75;
                goto LABEL_36;
              }
            }
            else
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v53, v54, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
            }
            uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
            memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v16);
        }
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_22;
  }
  if (!v10)
  {
    uint64_t v11 = sub_2562E2FD0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v75 = a3;
    if (v13(a2, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v21 = v6[5];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v13(&a2[v21], 1, v11))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
    }
    uint64_t v25 = v6[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    if (v13(&a2[v25], 1, v11))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    }
    uint64_t v29 = v6[7];
    double v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = *(void *)v31;
    v30[8] = v31[8];
    *(void *)double v30 = v32;
    uint64_t v33 = v6[8];
    uint64_t v34 = *(void **)&a2[v33];
    *(void *)&a1[v33] = v34;
    uint64_t v35 = v6[9];
    uint64_t v36 = &a1[v35];
    unint64_t v37 = &a2[v35];
    uint64_t v38 = *(void *)v37;
    v36[8] = v37[8];
    *(void *)uint64_t v36 = v38;
    uint64_t v39 = v6[10];
    id v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    uint64_t v42 = *(void *)v41;
    v40[8] = v41[8];
    *(void *)id v40 = v42;
    uint64_t v43 = *(void (**)(char *, void, uint64_t, int *))(v7 + 56);
    id v44 = v34;
    v43(a1, 0, 1, v6);
    goto LABEL_35;
  }
LABEL_7:
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_36:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25625CFB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v32 = v7;
    uint64_t v9 = sub_2562E2FD0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    uint64_t v17 = v6[6];
    uint64_t v18 = &a1[v17];
    int v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v19, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    uint64_t v21 = v6[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v24 = v6[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    v25[8] = v26[8];
    *(void *)uint64_t v25 = *(void *)v26;
    uint64_t v27 = v6[10];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    v28[8] = v29[8];
    *(void *)uint64_t v28 = *(void *)v29;
    (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(a1, 0, 1, v6);
  }
  uint64_t v30 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v30] = *(void *)&a2[v30];
  return a1;
}

char *assignWithTake for DeviceSegmentsCohorts(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_25625CFB0((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v16 = sub_2562E2FD0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(a1, 1, v16);
    int v20 = v18(a2, 1, v16);
    uint64_t v63 = a3;
    if (v19)
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(a1, a2, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v20)
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 40))(a1, a2, v16);
LABEL_22:
        uint64_t v39 = v6[5];
        id v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        int v42 = v18(&a1[v39], 1, v16);
        int v43 = v18(v41, 1, v16);
        if (v42)
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v40, v41, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v40, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v43)
          {
            (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v40, v41, v16);
LABEL_28:
            uint64_t v45 = v6[6];
            uint64_t v46 = &a1[v45];
            uint64_t v47 = &a2[v45];
            int v48 = v18(&a1[v45], 1, v16);
            int v49 = v18(v47, 1, v16);
            if (v48)
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v46, v47, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v46, 0, 1, v16);
LABEL_34:
                uint64_t v51 = v6[7];
                uint64_t v52 = &a1[v51];
                unint64_t v53 = &a2[v51];
                *(void *)uint64_t v52 = *(void *)v53;
                v52[8] = v53[8];
                uint64_t v54 = v6[8];
                int v55 = *(void **)&a1[v54];
                *(void *)&a1[v54] = *(void *)&a2[v54];

                uint64_t v56 = v6[9];
                uint64_t v57 = &a1[v56];
                uint64_t v58 = &a2[v56];
                *(void *)uint64_t v57 = *(void *)v58;
                v57[8] = v58[8];
                uint64_t v59 = v6[10];
                uint64_t v60 = &a1[v59];
                uint64_t v61 = &a2[v59];
                v60[8] = v61[8];
                *(void *)uint64_t v60 = *(void *)v61;
LABEL_35:
                a3 = v63;
                goto LABEL_36;
              }
            }
            else
            {
              if (!v49)
              {
                (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v46, v47, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v17 + 8))(v46, v16);
            }
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
            memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v16);
        }
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(a1, v16);
    }
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_22;
  }
  if (!v10)
  {
    uint64_t v11 = sub_2562E2FD0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v63 = a3;
    if (v13(a2, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    uint64_t v21 = v6[5];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v13(&a2[v21], 1, v11))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
    }
    uint64_t v25 = v6[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    if (v13(&a2[v25], 1, v11))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    }
    uint64_t v29 = v6[7];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v32 = v6[9];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = &a2[v32];
    v33[8] = v34[8];
    *(void *)uint64_t v33 = *(void *)v34;
    uint64_t v35 = v6[10];
    uint64_t v36 = &a1[v35];
    unint64_t v37 = &a2[v35];
    v36[8] = v37[8];
    *(void *)uint64_t v36 = *(void *)v37;
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
    goto LABEL_35;
  }
LABEL_7:
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_36:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceSegmentsCohorts(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25625DB5C);
}

uint64_t sub_25625DB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DeviceSegmentsCohorts(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25625DC40);
}

uint64_t sub_25625DC40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for DeviceSegmentsCohorts(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F54500);
}

void sub_25625DD20()
{
  sub_25625DDB8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25625DDB8()
{
  if (!qword_269F54510)
  {
    type metadata accessor for EventMetadata(255);
    unint64_t v0 = sub_2562E38C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F54510);
    }
  }
}

uint64_t sub_25625DE10()
{
  return type metadata accessor for DeviceSegmentsCohortsImpl(0);
}

uint64_t type metadata accessor for DeviceSegmentsCohortsImpl(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F54518);
}

void sub_25625DE38()
{
  sub_25625DDB8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DeviceSegmentsCohortsImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeviceSegmentsCohortsImpl);
}

unint64_t sub_25625DEEC()
{
  unint64_t result = qword_269F54528;
  if (!qword_269F54528)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F54528);
  }
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AssetPenetrationPayload()
{
  return &type metadata for AssetPenetrationPayload;
}

uint64_t sub_25625DF64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54530);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25625E4FC();
  sub_2562E3DD0();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = v15;
  sub_25625E550();
  sub_2562E3C50();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_25625E0C4(char a1)
{
  return *(void *)&aStatusreassets[8 * a1];
}

uint64_t sub_25625E0E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a5;
  uint64_t v15 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54570);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256261178();
  sub_2562E3DD0();
  LOBYTE(v17) = 0;
  sub_2562E3C30();
  if (!v5)
  {
    uint64_t v11 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54580);
    sub_2562665A4(&qword_269F54588, &qword_269F54580, (void (*)(void))sub_2562611CC);
    sub_2562E3C50();
    uint64_t v17 = v11;
    char v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54598);
    sub_2562665A4(&qword_269F545A0, &qword_269F54598, (void (*)(void))sub_256261220);
    sub_2562E3C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25625E334()
{
  return sub_2562E3D90();
}

uint64_t sub_25625E378()
{
  return sub_2562E3D60();
}

uint64_t sub_25625E3A0()
{
  return sub_2562E3D90();
}

unint64_t sub_25625E3E0()
{
  return 0xD000000000000019;
}

uint64_t sub_25625E3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256260BC8(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_25625E428(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_25625E434(uint64_t a1)
{
  unint64_t v2 = sub_25625E4FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625E470(uint64_t a1)
{
  unint64_t v2 = sub_25625E4FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_25625E4AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_256260C50(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_25625E4DC(void *a1)
{
  return sub_25625DF64(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_25625E4FC()
{
  unint64_t result = qword_269F54538;
  if (!qword_269F54538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54538);
  }
  return result;
}

unint64_t sub_25625E550()
{
  unint64_t result = qword_269F54540;
  if (!qword_269F54540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54540);
  }
  return result;
}

uint64_t sub_25625E5AC()
{
  return sub_25625E0C4(*v0);
}

uint64_t sub_25625E5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256261274(a1, a2);
  *a3 = result;
  return result;
}

void sub_25625E5DC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25625E5E8(uint64_t a1)
{
  unint64_t v2 = sub_256261178();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625E624(uint64_t a1)
{
  unint64_t v2 = sub_256261178();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25625E660@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2562613FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_25625E690(void *a1)
{
  return sub_25625E0E4(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_25625E6B0(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74756F6C6C6F72;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x737465737361;
      break;
    default:
      unint64_t result = 0x6D614E6C61697274;
      break;
  }
  return result;
}

uint64_t sub_25625E750(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54630);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256261CFC();
  sub_2562E3DD0();
  v13[0] = 0;
  sub_2562E3C30();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 32);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)&unsigned char v13[16] = v9;
    uint64_t v14 = *(void *)(v3 + 48);
    char v12 = 1;
    sub_256261D50();
    sub_2562E3C50();
    *(_OWORD *)uint64_t v13 = *(_OWORD *)(v3 + 56);
    *(void *)&v13[13] = *(void *)(v3 + 69);
    char v12 = 2;
    sub_256261DA4();
    sub_2562E3C50();
    sub_25622F514(v3 + 80, (uint64_t)v15, &qword_269F54650);
    sub_25622F514((uint64_t)v15, (uint64_t)v13, &qword_269F54650);
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54658);
    sub_2562665A4(&qword_269F54660, &qword_269F54658, (void (*)(void))sub_256261DF8);
    sub_2562E3C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25625E9BC(char a1)
{
  return *(void *)&aAssetlocassetv[8 * a1];
}

uint64_t sub_25625E9DC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54768);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562641F8();
  sub_2562E3DD0();
  LOBYTE(v11[0]) = 0;
  sub_2562E3C30();
  if (!v2)
  {
    v11[0] = *(_OWORD *)(v3 + 16);
    *(void *)((char *)v11 + 13) = *(void *)(v3 + 29);
    v10[15] = 1;
    sub_256261DA4();
    sub_2562E3C50();
    LOBYTE(v11[0]) = 2;
    sub_2562E3C30();
    LOBYTE(v11[0]) = 3;
    sub_2562E3C30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25625EBAC()
{
  return sub_25625E6B0(*v0);
}

uint64_t sub_25625EBB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256261E4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25625EBDC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_25625EBE8(uint64_t a1)
{
  unint64_t v2 = sub_256261CFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625EC24(uint64_t a1)
{
  unint64_t v2 = sub_256261CFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_25625EC60@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_256262000(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_25625ECBC(void *a1)
{
  return sub_25625E750(a1);
}

uint64_t sub_25625ED08()
{
  return sub_25625E9BC(*v0);
}

uint64_t sub_25625ED10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256262418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25625ED38(uint64_t a1)
{
  unint64_t v2 = sub_2562641F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625ED74(uint64_t a1)
{
  unint64_t v2 = sub_2562641F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_25625EDB0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2562625FC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_25625EE04(void *a1)
{
  return sub_25625E9DC(a1);
}

uint64_t sub_25625EE1C(char a1)
{
  return *(void *)&aMajor_0[8 * a1];
}

uint64_t sub_25625EE34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54758);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562641A4();
  sub_2562E3DD0();
  char v14 = 0;
  sub_2562E3C10();
  if (!v4)
  {
    char v13 = 1;
    sub_2562E3C10();
    char v12 = 2;
    sub_2562E3C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_25625EFE8(char a1)
{
  return *(void *)&aDeploymerollou[8 * a1];
}

uint64_t sub_25625F008(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54748);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256264150();
  sub_2562E3DD0();
  v8[15] = 0;
  sub_2562E3C60();
  if (!v1)
  {
    v8[14] = 1;
    sub_2562E3C30();
    v8[13] = 2;
    sub_2562E3C30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25625F190()
{
  return sub_25625EE1C(*v0);
}

uint64_t sub_25625F198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256262938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25625F1C0(uint64_t a1)
{
  unint64_t v2 = sub_2562641A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625F1FC(uint64_t a1)
{
  unint64_t v2 = sub_2562641A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25625F238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_256262A68(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
    *(_DWORD *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 12) = BYTE4(v5) & 1;
    *(_DWORD *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 20) = BYTE4(v6) & 1;
  }
  return result;
}

uint64_t sub_25625F284(void *a1)
{
  return sub_25625EE34(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32), v1[2] | ((unint64_t)*((unsigned __int8 *)v1 + 12) << 32), v1[4] | ((unint64_t)*((unsigned __int8 *)v1 + 20) << 32));
}

uint64_t sub_25625F2E0()
{
  return sub_25625EFE8(*v0);
}

uint64_t sub_25625F2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256262C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25625F310(uint64_t a1)
{
  unint64_t v2 = sub_256264150();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625F34C(uint64_t a1)
{
  unint64_t v2 = sub_256264150();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_25625F388@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_256262DC0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_25625F3D0(void *a1)
{
  return sub_25625F008(a1);
}

uint64_t sub_25625F3E8(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x7465737341666175;
  }
}

uint64_t sub_25625F42C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F545F0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256261C00();
  sub_2562E3DD0();
  uint64_t v14 = a2;
  char v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54600);
  sub_2562665A4(&qword_269F54608, &qword_269F54600, (void (*)(void))sub_256261C54);
  sub_2562E3C50();
  if (!v3)
  {
    uint64_t v14 = a3;
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54618);
    sub_2562665A4(&qword_269F54620, &qword_269F54618, (void (*)(void))sub_256261CA8);
    sub_2562E3C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25625F648()
{
  return sub_25625F3E8(*v0);
}

uint64_t sub_25625F650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256262FFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25625F678(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25625F684(uint64_t a1)
{
  unint64_t v2 = sub_256261C00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625F6C0(uint64_t a1)
{
  unint64_t v2 = sub_256261C00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25625F6FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2562630F4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_25625F728(void *a1)
{
  return sub_25625F42C(a1, *v1, v1[1]);
}

uint64_t sub_25625F744(char a1)
{
  return *(void *)&aAssetsetassets[8 * a1];
}

uint64_t sub_25625F764(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F546F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256264000();
  sub_2562E3DD0();
  v11[0] = 0;
  sub_2562E3BE0();
  if (!v2)
  {
    v11[0] = 1;
    sub_2562E3C30();
    sub_25622F514(v3 + 32, (uint64_t)v12, &qword_269F54700);
    sub_25622F514((uint64_t)v12, (uint64_t)v11, &qword_269F54700);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54708);
    sub_2562665A4(&qword_269F54710, &qword_269F54708, (void (*)(void))sub_256264054);
    sub_2562E3C00();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25625F968()
{
  return sub_25625F744(*v0);
}

uint64_t sub_25625F970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25626424C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25625F998(uint64_t a1)
{
  unint64_t v2 = sub_256264000();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25625F9D4(uint64_t a1)
{
  unint64_t v2 = sub_256264000();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_25625FA10@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25626439C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_25625FA58(void *a1)
{
  return sub_25625F764(a1);
}

unint64_t sub_25625FA94(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6570537465737361;
      break;
    case 3:
      unint64_t result = 0x6D614E7465737361;
      break;
    case 4:
      unint64_t result = 0x7265567465737361;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      unint64_t result = 0x756F537465737361;
      break;
  }
  return result;
}

uint64_t sub_25625FB98(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54838);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256265DA4();
  sub_2562E3DD0();
  v8[15] = 0;
  sub_2562E3C30();
  if (!v1)
  {
    v8[14] = 1;
    sub_2562E3C40();
    v8[13] = 2;
    sub_2562E3BE0();
    v8[12] = 3;
    sub_2562E3C30();
    v8[11] = 4;
    sub_2562E3BE0();
    v8[10] = 5;
    sub_2562E3C70();
    v8[9] = 6;
    sub_2562E3C70();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25625FDC0(char a1)
{
  if (a1) {
    return 0x7069726373627573;
  }
  else {
    return 0x6269726373627573;
  }
}

uint64_t sub_25625FE10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54720);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562640A8();
  sub_2562E3DD0();
  char v13 = 0;
  sub_2562E3C30();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54730);
    sub_2562665A4(&qword_269F54738, &qword_269F54730, (void (*)(void))sub_2562640FC);
    sub_2562E3C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_25625FFE0()
{
  return sub_25625FA94(*v0);
}

uint64_t sub_25625FFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2562646DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256260010(uint64_t a1)
{
  unint64_t v2 = sub_256265DA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25626004C(uint64_t a1)
{
  unint64_t v2 = sub_256265DA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_256260088@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2562649CC(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_2562600E4(void *a1)
{
  return sub_25625FB98(a1);
}

uint64_t sub_2562600FC()
{
  return sub_25625FDC0(*v0);
}

uint64_t sub_256260104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256264DE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25626012C(uint64_t a1)
{
  unint64_t v2 = sub_2562640A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256260168(uint64_t a1)
{
  unint64_t v2 = sub_2562640A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2562601A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_256264EFC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_2562601D4(void *a1)
{
  return sub_25625FE10(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_2562601F4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x7465537465737361;
      break;
    case 3:
      unint64_t result = 0x696C416567617375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25626029C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54848);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256265DF8();
  sub_2562E3DD0();
  LOBYTE(v11) = 0;
  sub_2562E3C30();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54858);
    sub_2562664EC(&qword_269F54860);
    sub_2562E3C50();
    sub_25622F514(v3 + 24, (uint64_t)v13, &qword_269F54868);
    sub_25622F514((uint64_t)v13, (uint64_t)&v11, &qword_269F54868);
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54870);
    sub_2562665A4(&qword_269F54878, &qword_269F54870, (void (*)(void))sub_256265E4C);
    sub_2562E3C00();
    sub_25622F514(v3 + 32, (uint64_t)v12, &qword_269F54888);
    sub_25622F514((uint64_t)v12, (uint64_t)&v11, &qword_269F54888);
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54890);
    sub_2562665A4(&qword_269F54898, &qword_269F54890, (void (*)(void))sub_256265EA0);
    sub_2562E3C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25626058C(char a1)
{
  if (a1) {
    return 0x6C61566567617375;
  }
  else {
    return 0x6D614E6567617375;
  }
}

uint64_t sub_2562605CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_256260684(a1, a2, a3, a4, a5, &qword_269F54910, (void (*)(void *, uint64_t, uint64_t))sub_256266CF8);
}

uint64_t sub_256260608(char a1)
{
  if (a1) {
    return 0x6D614E7361696C61;
  }
  else {
    return 0x6C61567361696C61;
  }
}

uint64_t sub_256260648(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_256260684(a1, a2, a3, a4, a5, &qword_269F54920, (void (*)(void *, uint64_t, uint64_t))sub_256266D4C);
}

uint64_t sub_256260684(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(void *, uint64_t, uint64_t))
{
  v18[2] = a3;
  v18[0] = a4;
  v18[1] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a7(v13, v14, v15);
  sub_2562E3DD0();
  char v20 = 0;
  uint64_t v16 = v18[3];
  sub_2562E3C30();
  if (!v16)
  {
    char v19 = 1;
    sub_2562E3C30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_2562607F8()
{
  return sub_2562601F4(*v0);
}

uint64_t sub_256260800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256265EF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256260828(uint64_t a1)
{
  unint64_t v2 = sub_256265DF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256260864(uint64_t a1)
{
  unint64_t v2 = sub_256265DF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2562608A0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2562660D4(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_2562608E8(void *a1)
{
  return sub_25626029C(a1);
}

uint64_t sub_256260924()
{
  return sub_25626058C(*v0);
}

uint64_t sub_25626092C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256266DA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256260954(uint64_t a1)
{
  unint64_t v2 = sub_256266CF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256260990(uint64_t a1)
{
  unint64_t v2 = sub_256266CF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2562609CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_256260B48(a1, &qword_269F54930, (void (*)(void))sub_256266CF8, a2);
}

uint64_t sub_256260A08(void *a1)
{
  return sub_256260684(a1, *v1, v1[1], v1[2], v1[3], &qword_269F54910, (void (*)(void *, uint64_t, uint64_t))sub_256266CF8);
}

BOOL sub_256260A4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_256260A64()
{
  return sub_256260608(*v0);
}

uint64_t sub_256260A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256266E9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256260A94(uint64_t a1)
{
  unint64_t v2 = sub_256266D4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256260AD0(uint64_t a1)
{
  unint64_t v2 = sub_256266D4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256260B0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_256260B48(a1, &qword_269F54938, (void (*)(void))sub_256266D4C, a2);
}

uint64_t sub_256260B48@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_256266F98(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

uint64_t sub_256260B84(void *a1)
{
  return sub_256260684(a1, *v1, v1[1], v1[2], v1[3], &qword_269F54920, (void (*)(void *, uint64_t, uint64_t))sub_256266D4C);
}

uint64_t sub_256260BC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000002562ED260)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_256260C50(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54548);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25625E4FC();
  sub_2562E3DC0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    sub_256260DCC();
    sub_2562E3BB0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v9;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_256260DCC()
{
  unint64_t result = qword_269F54550;
  if (!qword_269F54550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54550);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetPenetrationPayload.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256260EBCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetPenetrationPayload.CodingKeys()
{
  return &type metadata for AssetPenetrationPayload.CodingKeys;
}

uint64_t _s16MetricsFramework16AssetDailyStatusVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework16AssetDailyStatusVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16MetricsFramework16AssetDailyStatusVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16MetricsFramework16AssetDailyStatusVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetDailyStatus()
{
  return &type metadata for AssetDailyStatus;
}

unint64_t sub_256261074()
{
  unint64_t result = qword_269F54558;
  if (!qword_269F54558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54558);
  }
  return result;
}

unint64_t sub_2562610CC()
{
  unint64_t result = qword_269F54560;
  if (!qword_269F54560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54560);
  }
  return result;
}

unint64_t sub_256261124()
{
  unint64_t result = qword_269F54568;
  if (!qword_269F54568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54568);
  }
  return result;
}

unint64_t sub_256261178()
{
  unint64_t result = qword_269F54578;
  if (!qword_269F54578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54578);
  }
  return result;
}

unint64_t sub_2562611CC()
{
  unint64_t result = qword_269F54590;
  if (!qword_269F54590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54590);
  }
  return result;
}

unint64_t sub_256261220()
{
  unint64_t result = qword_269F545A8;
  if (!qword_269F545A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545A8);
  }
  return result;
}

uint64_t sub_256261274(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6552737574617473 && a2 == 0xEC0000006E6F7361;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEE00737574617453 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63617073656D616ELL && a2 == 0xEF73757461745365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2562613FC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F545B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256261178();
  sub_2562E3DC0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    LOBYTE(v13) = 0;
    uint64_t v7 = sub_2562E3B90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54580);
    char v12 = 1;
    sub_2562665A4(&qword_269F545B8, &qword_269F54580, (void (*)(void))sub_256261740);
    swift_bridgeObjectRetain();
    sub_2562E3BB0();
    uint64_t v11 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54598);
    char v12 = 2;
    sub_2562665A4(&qword_269F545C8, &qword_269F54598, (void (*)(void))sub_256261794);
    swift_bridgeObjectRetain();
    uint64_t v9 = v11;
    sub_2562E3BB0();
    if (v9)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v11;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      if (!v10) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v7;
}

unint64_t sub_256261740()
{
  unint64_t result = qword_269F545C0;
  if (!qword_269F545C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545C0);
  }
  return result;
}

unint64_t sub_256261794()
{
  unint64_t result = qword_269F545D0;
  if (!qword_269F545D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetDailyStatus.CodingKeys()
{
  return &type metadata for AssetDailyStatus.CodingKeys;
}

uint64_t destroy for NamespaceStatus()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NamespaceStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 69) = *(void *)(a2 + 69);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NamespaceStatus(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v4;
  int v5 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v5;
  int v6 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NamespaceStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NamespaceStatus()
{
  return &type metadata for NamespaceStatus;
}

void *assignWithCopy for AssetSetStatus(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetSetStatus()
{
  return &type metadata for AssetSetStatus;
}

unint64_t sub_256261AFC()
{
  unint64_t result = qword_269F545D8;
  if (!qword_269F545D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545D8);
  }
  return result;
}

unint64_t sub_256261B54()
{
  unint64_t result = qword_269F545E0;
  if (!qword_269F545E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545E0);
  }
  return result;
}

unint64_t sub_256261BAC()
{
  unint64_t result = qword_269F545E8;
  if (!qword_269F545E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545E8);
  }
  return result;
}

unint64_t sub_256261C00()
{
  unint64_t result = qword_269F545F8;
  if (!qword_269F545F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F545F8);
  }
  return result;
}

unint64_t sub_256261C54()
{
  unint64_t result = qword_269F54610;
  if (!qword_269F54610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54610);
  }
  return result;
}

unint64_t sub_256261CA8()
{
  unint64_t result = qword_269F54628;
  if (!qword_269F54628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54628);
  }
  return result;
}

unint64_t sub_256261CFC()
{
  unint64_t result = qword_269F54638;
  if (!qword_269F54638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54638);
  }
  return result;
}

unint64_t sub_256261D50()
{
  unint64_t result = qword_269F54640;
  if (!qword_269F54640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54640);
  }
  return result;
}

unint64_t sub_256261DA4()
{
  unint64_t result = qword_269F54648;
  if (!qword_269F54648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54648);
  }
  return result;
}

unint64_t sub_256261DF8()
{
  unint64_t result = qword_269F54668;
  if (!qword_269F54668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54668);
  }
  return result;
}

uint64_t sub_256261E4C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D614E6C61697274 && a2 == 0xEE00656361707365;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F6C6C6F72 && a2 == 0xE700000000000000 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002562ED2A0 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737465737361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_256262000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54698);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256261CFC();
  sub_2562E3DC0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v30) = 0;
    uint64_t v9 = sub_2562E3B90();
    uint64_t v11 = v10;
    uint64_t v29 = v9;
    char v36 = 1;
    sub_256263434();
    swift_bridgeObjectRetain();
    sub_2562E3BB0();
    int v35 = v30;
    uint64_t v12 = v32;
    uint64_t v13 = v34;
    uint64_t v25 = v33;
    uint64_t v26 = v31;
    char v36 = 2;
    sub_256263488();
    uint64_t v28 = v12;
    swift_bridgeObjectRetain();
    uint64_t v27 = v13;
    swift_bridgeObjectRetain();
    sub_2562E3BB0();
    int v23 = BYTE4(v30);
    int v24 = v30;
    int v21 = BYTE4(v31);
    int v22 = v31;
    int v19 = BYTE4(v32);
    int v20 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54658);
    char v36 = 3;
    sub_2562665A4(&qword_269F546B0, &qword_269F54658, (void (*)(void))sub_2562634DC);
    sub_2562E3B60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v15 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v16 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v29;
    *(void *)(a2 + 8) = v11;
    *(_DWORD *)(a2 + 16) = v35;
    *(void *)(a2 + 24) = v26;
    *(void *)(a2 + 32) = v15;
    *(void *)(a2 + 40) = v25;
    *(void *)(a2 + 48) = v16;
    *(_DWORD *)(a2 + 56) = v24;
    *(unsigned char *)(a2 + 60) = v23;
    *(_DWORD *)(a2 + 64) = v22;
    *(unsigned char *)(a2 + 68) = v21;
    *(_DWORD *)(a2 + 72) = v20;
    *(unsigned char *)(a2 + 76) = v19;
    *(void *)(a2 + 80) = v14;
  }
  return result;
}

uint64_t sub_256262418(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x636F4C7465737361 && a2 == 0xEB00000000656C61;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265567465737361 && a2 == 0xEC0000006E6F6973 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E7465737361 && a2 == 0xE900000000000065 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E6C61697274 && a2 == 0xEE00656361707365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2562625FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F547B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562641F8();
  sub_2562E3DC0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v28) = 0;
  uint64_t v9 = sub_2562E3B90();
  uint64_t v11 = v10;
  char v35 = 1;
  sub_256263488();
  swift_bridgeObjectRetain();
  sub_2562E3BB0();
  int v34 = v28;
  int v26 = v30;
  int v27 = v29;
  int v24 = v32;
  int v25 = v31;
  int v23 = v33;
  LOBYTE(v28) = 2;
  uint64_t v21 = sub_2562E3B90();
  uint64_t v22 = v12;
  LOBYTE(v28) = 3;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2562E3B90();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v34;
  *(unsigned char *)(a2 + 20) = v27;
  *(_DWORD *)(a2 + 24) = v26;
  *(unsigned char *)(a2 + 28) = v25;
  *(_DWORD *)(a2 + 32) = v24;
  *(unsigned char *)(a2 + 36) = v23;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v20;
  *(void *)(a2 + 64) = v15;
  return result;
}

uint64_t sub_256262938(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x726F6A616DLL && a2 == 0xE500000000000000;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6E696DLL && a2 == 0xE500000000000000 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746170 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_256262A68(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F547B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562641A4();
  sub_2562E3DC0();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  v11[15] = 0;
  unint64_t v7 = sub_2562E3B70();
  v11[14] = 1;
  uint64_t v8 = sub_2562E3B70();
  v11[13] = 2;
  uint64_t v9 = sub_2562E3B70();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v11[12] = BYTE4(v7) & 1;
  char v11[8] = BYTE4(v8) & 1;
  v11[4] = BYTE4(v9) & 1;
  return v7 | ((HIDWORD(v7) & 1) << 32);
}

uint64_t sub_256262C60(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656D796F6C706564 && a2 == 0xEA0000000000746ELL || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974756F6C6C6F72 && a2 == 0xE900000000000064 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6150726F74636166 && a2 == 0xEA00000000006B63)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_256262DC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F547A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256264150();
  sub_2562E3DC0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v22 = 0;
  int v9 = sub_2562E3BC0();
  char v21 = 1;
  uint64_t v10 = sub_2562E3B90();
  uint64_t v12 = v11;
  uint64_t v19 = v10;
  char v20 = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2562E3B90();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(_DWORD *)a2 = v9;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v15;
  return result;
}

uint64_t sub_256262FFC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7465737341666175 && a2 == 0xEC00000073746553;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002562ED280)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2562630F4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54670);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_256261C00();
  sub_2562E3DC0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54600);
    HIBYTE(v9) = 0;
    sub_2562665A4(&qword_269F54678, &qword_269F54600, (void (*)(void))sub_25626338C);
    sub_2562E3BB0();
    uint64_t v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54618);
    HIBYTE(v9) = 1;
    sub_2562665A4(&qword_269F54688, &qword_269F54618, (void (*)(void))sub_2562633E0);
    swift_bridgeObjectRetain();
    sub_2562E3B60();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_25626338C()
{
  unint64_t result = qword_269F54680;
  if (!qword_269F54680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54680);
  }
  return result;
}

unint64_t sub_2562633E0()
{
  unint64_t result = qword_269F54690;
  if (!qword_269F54690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54690);
  }
  return result;
}

unint64_t sub_256263434()
{
  unint64_t result = qword_269F546A0;
  if (!qword_269F546A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546A0);
  }
  return result;
}

unint64_t sub_256263488()
{
  unint64_t result = qword_269F546A8;
  if (!qword_269F546A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546A8);
  }
  return result;
}

unint64_t sub_2562634DC()
{
  unint64_t result = qword_269F546B8;
  if (!qword_269F546B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceStatus.CodingKeys()
{
  return &type metadata for NamespaceStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetSetStatus.CodingKeys()
{
  return &type metadata for AssetSetStatus.CodingKeys;
}

uint64_t destroy for NamespaceAsset()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NamespaceAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 29) = *(void *)(a2 + 29);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NamespaceAsset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  int v5 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  int v6 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NamespaceAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NamespaceAsset(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NamespaceAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceAsset()
{
  return &type metadata for NamespaceAsset;
}

__n128 __swift_memcpy21_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Version(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Version(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 21) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Version()
{
  return &type metadata for Version;
}

uint64_t destroy for Rollout()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Rollout(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Rollout(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Rollout(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Rollout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Rollout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Rollout()
{
  return &type metadata for Rollout;
}

uint64_t destroy for UAFAssetSubscription()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework20UAFAssetSubscriptionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UAFAssetSubscription(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UAFAssetSubscription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UAFAssetSubscription()
{
  return &type metadata for UAFAssetSubscription;
}

uint64_t destroy for UAFAssetSet()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UAFAssetSet(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UAFAssetSet(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UAFAssetSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UAFAssetSet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UAFAssetSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAssetSet()
{
  return &type metadata for UAFAssetSet;
}

unint64_t sub_256263DF4()
{
  unint64_t result = qword_269F546C0;
  if (!qword_269F546C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546C0);
  }
  return result;
}

unint64_t sub_256263E4C()
{
  unint64_t result = qword_269F546C8;
  if (!qword_269F546C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546C8);
  }
  return result;
}

unint64_t sub_256263EA4()
{
  unint64_t result = qword_269F546D0;
  if (!qword_269F546D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546D0);
  }
  return result;
}

unint64_t sub_256263EFC()
{
  unint64_t result = qword_269F546D8;
  if (!qword_269F546D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546D8);
  }
  return result;
}

unint64_t sub_256263F54()
{
  unint64_t result = qword_269F546E0;
  if (!qword_269F546E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546E0);
  }
  return result;
}

unint64_t sub_256263FAC()
{
  unint64_t result = qword_269F546E8;
  if (!qword_269F546E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546E8);
  }
  return result;
}

unint64_t sub_256264000()
{
  unint64_t result = qword_269F546F8;
  if (!qword_269F546F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F546F8);
  }
  return result;
}

unint64_t sub_256264054()
{
  unint64_t result = qword_269F54718;
  if (!qword_269F54718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54718);
  }
  return result;
}

unint64_t sub_2562640A8()
{
  unint64_t result = qword_269F54728;
  if (!qword_269F54728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54728);
  }
  return result;
}

unint64_t sub_2562640FC()
{
  unint64_t result = qword_269F54740;
  if (!qword_269F54740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54740);
  }
  return result;
}

unint64_t sub_256264150()
{
  unint64_t result = qword_269F54750;
  if (!qword_269F54750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54750);
  }
  return result;
}

unint64_t sub_2562641A4()
{
  unint64_t result = qword_269F54760;
  if (!qword_269F54760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54760);
  }
  return result;
}

unint64_t sub_2562641F8()
{
  unint64_t result = qword_269F54770;
  if (!qword_269F54770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54770);
  }
  return result;
}

uint64_t sub_25626424C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7465537465737361 && a2 == 0xEA00000000006449;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEC000000656D614ELL || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737465737361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25626439C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54778);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256264000();
  sub_2562E3DC0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = 0;
    uint64_t v9 = sub_2562E3B30();
    uint64_t v11 = v10;
    uint64_t v19 = v9;
    char v22 = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2562E3B90();
    uint64_t v14 = v13;
    uint64_t v18 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54708);
    char v21 = 2;
    sub_2562665A4(&qword_269F54780, &qword_269F54708, (void (*)(void))sub_256264688);
    swift_bridgeObjectRetain();
    sub_2562E3B60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v20;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v19;
    a2[1] = v11;
    a2[2] = v18;
    a2[3] = v14;
    a2[4] = v15;
  }
  return result;
}

unint64_t sub_256264688()
{
  unint64_t result = qword_269F54788;
  if (!qword_269F54788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54788);
  }
  return result;
}

uint64_t sub_2562646DC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F537465737361 && a2 == 0xEB00000000656372;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002562ED2C0 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570537465737361 && a2 == 0xEE00726569666963 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D614E7465737361 && a2 == 0xE900000000000065 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7265567465737361 && a2 == 0xEC0000006E6F6973 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002562ED2E0 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002562ED300)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2562649CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F548A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256265DA4();
  sub_2562E3DC0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v37 = 0;
    uint64_t v9 = sub_2562E3B90();
    uint64_t v11 = v10;
    char v36 = 1;
    swift_bridgeObjectRetain();
    int v30 = sub_2562E3BA0();
    char v35 = 2;
    uint64_t v27 = sub_2562E3B30();
    uint64_t v28 = v9;
    char v34 = 3;
    uint64_t v29 = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_2562E3B90();
    uint64_t v15 = v14;
    uint64_t v25 = v13;
    int v26 = a2;
    char v33 = 4;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2562E3B30();
    uint64_t v18 = v17;
    uint64_t v24 = v16;
    char v32 = 5;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_2562E3BD0();
    char v31 = 6;
    uint64_t v19 = sub_2562E3BD0();
    v30 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v29;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v22 = v26;
    uint64_t *v26 = v28;
    v22[1] = v11;
    *((unsigned char *)v22 + 16) = v30;
    v22[3] = v27;
    v22[4] = v20;
    v22[5] = v25;
    v22[6] = v15;
    v22[7] = v24;
    v22[8] = v18;
    v22[9] = v23;
    v22[10] = v19;
  }
  return result;
}

uint64_t sub_256264DE0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6269726373627573 && a2 == 0xEE00656D614E7265;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256264EFC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54790);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562640A8();
  sub_2562E3DC0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_2562E3B90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54730);
    v9[30] = 1;
    sub_2562665A4(&qword_269F54798, &qword_269F54730, (void (*)(void))sub_256265160);
    swift_bridgeObjectRetain();
    sub_2562E3BB0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_256265160()
{
  unint64_t result = qword_269F547A0;
  if (!qword_269F547A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NamespaceAsset.CodingKeys()
{
  return &type metadata for NamespaceAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for Version.CodingKeys()
{
  return &type metadata for Version.CodingKeys;
}

ValueMetadata *type metadata accessor for Rollout.CodingKeys()
{
  return &type metadata for Rollout.CodingKeys;
}

ValueMetadata *type metadata accessor for UAFAssetSubscription.CodingKeys()
{
  return &type metadata for UAFAssetSubscription.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SpeakerIdSamplingWorker.Subtask(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16MetricsFramework16AssetDailyStatusV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256265350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAssetSet.CodingKeys()
{
  return &type metadata for UAFAssetSet.CodingKeys;
}

uint64_t destroy for UAFSubscription()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UAFSubscription(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UAFSubscription(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UAFSubscription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UAFSubscription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UAFSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFSubscription()
{
  return &type metadata for UAFSubscription;
}

uint64_t destroy for UAFAsset()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UAFAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UAFAsset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for UAFAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t _s16MetricsFramework8UAFAssetVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_256265818(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAsset()
{
  return &type metadata for UAFAsset;
}

unint64_t sub_256265880()
{
  unint64_t result = qword_269F547C0;
  if (!qword_269F547C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547C0);
  }
  return result;
}

unint64_t sub_2562658D8()
{
  unint64_t result = qword_269F547C8;
  if (!qword_269F547C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547C8);
  }
  return result;
}

unint64_t sub_256265930()
{
  unint64_t result = qword_269F547D0;
  if (!qword_269F547D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547D0);
  }
  return result;
}

unint64_t sub_256265988()
{
  unint64_t result = qword_269F547D8;
  if (!qword_269F547D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547D8);
  }
  return result;
}

unint64_t sub_2562659E0()
{
  unint64_t result = qword_269F547E0;
  if (!qword_269F547E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547E0);
  }
  return result;
}

unint64_t sub_256265A38()
{
  unint64_t result = qword_269F547E8;
  if (!qword_269F547E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547E8);
  }
  return result;
}

unint64_t sub_256265A90()
{
  unint64_t result = qword_269F547F0;
  if (!qword_269F547F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547F0);
  }
  return result;
}

unint64_t sub_256265AE8()
{
  unint64_t result = qword_269F547F8;
  if (!qword_269F547F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F547F8);
  }
  return result;
}

unint64_t sub_256265B40()
{
  unint64_t result = qword_269F54800;
  if (!qword_269F54800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54800);
  }
  return result;
}

unint64_t sub_256265B98()
{
  unint64_t result = qword_269F54808;
  if (!qword_269F54808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54808);
  }
  return result;
}

unint64_t sub_256265BF0()
{
  unint64_t result = qword_269F54810;
  if (!qword_269F54810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54810);
  }
  return result;
}

unint64_t sub_256265C48()
{
  unint64_t result = qword_269F54818;
  if (!qword_269F54818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54818);
  }
  return result;
}

unint64_t sub_256265CA0()
{
  unint64_t result = qword_269F54820;
  if (!qword_269F54820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54820);
  }
  return result;
}

unint64_t sub_256265CF8()
{
  unint64_t result = qword_269F54828;
  if (!qword_269F54828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54828);
  }
  return result;
}

unint64_t sub_256265D50()
{
  unint64_t result = qword_269F54830;
  if (!qword_269F54830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54830);
  }
  return result;
}

unint64_t sub_256265DA4()
{
  unint64_t result = qword_269F54840;
  if (!qword_269F54840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54840);
  }
  return result;
}

unint64_t sub_256265DF8()
{
  unint64_t result = qword_269F54850;
  if (!qword_269F54850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54850);
  }
  return result;
}

unint64_t sub_256265E4C()
{
  unint64_t result = qword_269F54880;
  if (!qword_269F54880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54880);
  }
  return result;
}

unint64_t sub_256265EA0()
{
  unint64_t result = qword_269F548A0;
  if (!qword_269F548A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548A0);
  }
  return result;
}

uint64_t sub_256265EF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002562ED320 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEF73656369646E49 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7465537465737361 && a2 == 0xEE00736567617355 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696C416567617375 && a2 == 0xEC00000073657361)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2562660D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F548B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256265DF8();
  sub_2562E3DC0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  uint64_t v9 = sub_2562E3B90();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54858);
  char v20 = 1;
  sub_2562664EC(&qword_269F548B8);
  swift_bridgeObjectRetain();
  sub_2562E3BB0();
  uint64_t v18 = v9;
  uint64_t v12 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54870);
  char v20 = 2;
  sub_2562665A4(&qword_269F548C0, &qword_269F54870, (void (*)(void))sub_256266550);
  uint64_t v19 = v12;
  swift_bridgeObjectRetain();
  sub_2562E3B60();
  uint64_t v13 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54890);
  char v20 = 3;
  sub_2562665A4(&qword_269F548D0, &qword_269F54890, (void (*)(void))sub_256266610);
  swift_bridgeObjectRetain();
  sub_2562E3B60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v18;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v13;
  a2[4] = v14;
  return result;
}

uint64_t sub_2562664EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F54858);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256266550()
{
  unint64_t result = qword_269F548C8;
  if (!qword_269F548C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548C8);
  }
  return result;
}

uint64_t sub_2562665A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256266610()
{
  unint64_t result = qword_269F548D8;
  if (!qword_269F548D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548D8);
  }
  return result;
}

uint64_t _s16MetricsFramework15NamespaceStatusV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16MetricsFramework15NamespaceStatusV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2562667C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFSubscription.CodingKeys()
{
  return &type metadata for UAFSubscription.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UAFAsset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2562668C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UAFAsset.CodingKeys()
{
  return &type metadata for UAFAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for UsageAlias()
{
  return &type metadata for UsageAlias;
}

uint64_t _s16MetricsFramework13AssetSetUsageVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework13AssetSetUsageVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16MetricsFramework13AssetSetUsageVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s16MetricsFramework13AssetSetUsageVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16MetricsFramework13AssetSetUsageVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_256266A98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSetUsage()
{
  return &type metadata for AssetSetUsage;
}

unint64_t sub_256266AEC()
{
  unint64_t result = qword_269F548E0;
  if (!qword_269F548E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548E0);
  }
  return result;
}

unint64_t sub_256266B44()
{
  unint64_t result = qword_269F548E8;
  if (!qword_269F548E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548E8);
  }
  return result;
}

unint64_t sub_256266B9C()
{
  unint64_t result = qword_269F548F0;
  if (!qword_269F548F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548F0);
  }
  return result;
}

unint64_t sub_256266BF4()
{
  unint64_t result = qword_269F548F8;
  if (!qword_269F548F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F548F8);
  }
  return result;
}

unint64_t sub_256266C4C()
{
  unint64_t result = qword_269F54900;
  if (!qword_269F54900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54900);
  }
  return result;
}

unint64_t sub_256266CA4()
{
  unint64_t result = qword_269F54908;
  if (!qword_269F54908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54908);
  }
  return result;
}

unint64_t sub_256266CF8()
{
  unint64_t result = qword_269F54918;
  if (!qword_269F54918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54918);
  }
  return result;
}

unint64_t sub_256266D4C()
{
  unint64_t result = qword_269F54928;
  if (!qword_269F54928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54928);
  }
  return result;
}

uint64_t sub_256266DA0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D614E6567617375 && a2 == 0xE900000000000065;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61566567617375 && a2 == 0xEA00000000006575)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256266E9C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C61567361696C61 && a2 == 0xEA00000000006575;
  if (v3 || (sub_2562E3C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E7361696C61 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2562E3C90();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256266F98(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  a3();
  sub_2562E3DC0();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = v13;
    char v15 = 0;
    uint64_t v9 = sub_2562E3B90();
    char v14 = 1;
    swift_bridgeObjectRetain();
    sub_2562E3B90();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v6);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

ValueMetadata *type metadata accessor for UsageAlias.CodingKeys()
{
  return &type metadata for UsageAlias.CodingKeys;
}

unsigned char *_s16MetricsFramework14AssetSetStatusV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25626728CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSetUsage.CodingKeys()
{
  return &type metadata for AssetSetUsage.CodingKeys;
}

unint64_t sub_2562672C8()
{
  unint64_t result = qword_269F54940;
  if (!qword_269F54940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54940);
  }
  return result;
}

unint64_t sub_256267320()
{
  unint64_t result = qword_269F54948;
  if (!qword_269F54948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54948);
  }
  return result;
}

unint64_t sub_256267378()
{
  unint64_t result = qword_269F54950;
  if (!qword_269F54950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54950);
  }
  return result;
}

unint64_t sub_2562673D0()
{
  unint64_t result = qword_269F54958;
  if (!qword_269F54958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54958);
  }
  return result;
}

unint64_t sub_256267428()
{
  unint64_t result = qword_269F54960;
  if (!qword_269F54960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54960);
  }
  return result;
}

unint64_t sub_256267480()
{
  unint64_t result = qword_269F54968;
  if (!qword_269F54968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54968);
  }
  return result;
}

uint64_t SiriDigestMetricsDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SiriDigestMetricsDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_2562675E4()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256267604, 0, 0);
}

uint64_t sub_256267604()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SiriDigestMetricsDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t SiriDigestMetricsDataProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDigestMetricsDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2562677E8()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_256267604, 0, 0);
}

ValueMetadata *type metadata accessor for SiriDigestMetricsDataRecord()
{
  return &type metadata for SiriDigestMetricsDataRecord;
}

uint64_t sub_25626781C()
{
  return type metadata accessor for SiriDigestMetricsDataProvider();
}

uint64_t type metadata accessor for SiriDigestMetricsDataProvider()
{
  uint64_t result = qword_269F54988;
  if (!qword_269F54988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SiriDigestMetricsDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetricsDataProvider);
}

uint64_t dispatch thunk of SiriDigestMetricsDataProvider.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SiriDigestMetricsDataProvider.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

unint64_t sub_2562679A4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 4:
      unint64_t result = 0x746144746E657665;
      break;
    case 5:
    case 11:
      unint64_t result = 0x7465537465737361;
      break;
    case 6:
      unint64_t result = 0x75706E4969726973;
      break;
    case 7:
      unint64_t result = 0x436D6172676F7270;
      break;
    case 8:
      unint64_t result = 0x75426D6574737973;
      break;
    case 10:
      unint64_t result = 0x7954656369766564;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_256267B24(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 4:
      unint64_t result = 0x746144746E657665;
      break;
    case 5:
    case 11:
      unint64_t result = 0x7465537465737361;
      break;
    case 6:
      unint64_t result = 0x75706E4969726973;
      break;
    case 7:
      unint64_t result = 0x436D6172676F7270;
      break;
    case 8:
      unint64_t result = 0x75426D6574737973;
      break;
    case 10:
      unint64_t result = 0x7954656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_256267CA4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_2562679A4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_2562679A4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2562E3C90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_256267D30()
{
  char v1 = *v0;
  sub_2562E3D50();
  sub_2562679A4(v1);
  sub_2562E3600();
  swift_bridgeObjectRelease();
  return sub_2562E3D90();
}

uint64_t sub_256267D94()
{
  sub_2562679A4(*v0);
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_256267DE8()
{
  char v1 = *v0;
  sub_2562E3D50();
  sub_2562679A4(v1);
  sub_2562E3600();
  swift_bridgeObjectRelease();
  return sub_2562E3D90();
}

uint64_t sub_256267E48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25626A980();
  *a1 = result;
  return result;
}

unint64_t sub_256267E78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2562679A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_256267EA4()
{
  return sub_256267B24(*v0);
}

uint64_t sub_256267EAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25626A980();
  *a1 = result;
  return result;
}

void sub_256267ED4(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

void sub_256267EE0(void *a1@<X8>)
{
  *a1 = &unk_2704CAEF0;
}

uint64_t sub_256267EF0(uint64_t a1)
{
  unint64_t v2 = sub_256269220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256267F2C(uint64_t a1)
{
  unint64_t v2 = sub_256269220();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_256267F68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2562E3430();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((sub_2562E3280() & 1) == 0) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  char v8 = (void *)MEMORY[0x263F8EE78];
  v7(v6, a2, v3);
  while (1)
  {
    swift_retain();
    sub_256268190((uint64_t)v6, (uint64_t)v23);
    sub_25626A9CC((uint64_t)v23, (uint64_t)v24);
    sub_25626A9CC((uint64_t)v24, (uint64_t)v25);
    if (sub_25626AA34((uint64_t)v25) != 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v8 = sub_25626C0E4(0, v8[2] + 1, 1, v8);
      }
      unint64_t v20 = v8[2];
      unint64_t v19 = v8[3];
      if (v20 >= v19 >> 1) {
        char v8 = sub_25626C0E4((void *)(v19 > 1), v20 + 1, 1, v8);
      }
      v8[2] = v20 + 1;
      uint64_t v9 = &v8[24 * v20];
      long long v10 = v25[0];
      long long v11 = v25[1];
      long long v12 = v25[3];
      v9[4] = v25[2];
      v9[5] = v12;
      v9[2] = v10;
      v9[3] = v11;
      long long v13 = v25[4];
      long long v14 = v25[5];
      long long v15 = v25[7];
      v9[8] = v25[6];
      v9[9] = v15;
      v9[6] = v13;
      v9[7] = v14;
      long long v16 = v25[8];
      long long v17 = v25[9];
      long long v18 = v25[11];
      v9[12] = v25[10];
      v9[13] = v18;
      v9[10] = v16;
      v9[11] = v17;
    }
    if ((sub_2562E3280() & 1) == 0) {
      break;
    }
    v7(v6, a2, v3);
  }
  return v8;
}

uint64_t sub_256268190@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2562E3270();
  if (v4)
  {
    uint64_t v5 = v4;
    sub_25626A6E4(v4, v4);
    *(void *)&long long v103 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
    sub_25626AA80((unint64_t *)&qword_269F549F0, &qword_269F549E8);
    uint64_t v7 = sub_2562E3500();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    long long v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E37F0();
    uint64_t v98 = a1;
    if (os_log_type_enabled(v10, v11))
    {
      long long v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(void *)&long long v103 = v13;
      *(_DWORD *)long long v12 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v101 = sub_256229738(v7, v9, (uint64_t *)&v103);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v10, v11, "Boot To Asset query result yielded: \n{%s}", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v13, -1, -1);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(void *)&long long v101 = 0x7465537465737361;
    *((void *)&v101 + 1) = 0xEA00000000006449;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v19 = sub_25625626C((uint64_t)&v103), (v20 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v19, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v21 = swift_dynamicCast();
      if (v21) {
        uint64_t v22 = v99;
      }
      else {
        uint64_t v22 = 0;
      }
      if (v21) {
        uint64_t v23 = v100;
      }
      else {
        uint64_t v23 = 0;
      }
      uint64_t v96 = v23;
      uint64_t v97 = v22;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v96 = 0;
      uint64_t v97 = 0;
    }
    strcpy((char *)&v101, "assetSetName");
    BYTE13(v101) = 0;
    HIWORD(v101) = -5120;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v24 = sub_25625626C((uint64_t)&v103), (v25 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v24, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v26 = swift_dynamicCast();
      if (v26) {
        uint64_t v27 = v99;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v26) {
        uint64_t v28 = v100;
      }
      else {
        uint64_t v28 = 0;
      }
      uint64_t v94 = v28;
      uint64_t v95 = v27;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v94 = 0;
      uint64_t v95 = 0;
    }
    *(void *)&long long v101 = 0xD000000000000017;
    *((void *)&v101 + 1) = 0x80000002562EAE90;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v29 = sub_25625626C((uint64_t)&v103), (v30 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v29, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v31 = swift_dynamicCast();
      uint64_t v32 = v99;
      if (!v31) {
        uint64_t v32 = 0;
      }
      uint64_t v93 = v32;
      char v33 = v31 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v93 = 0;
      char v33 = 1;
    }
    char v92 = v33;
    *(void *)&long long v101 = 0xD000000000000013;
    *((void *)&v101 + 1) = 0x80000002562EAF20;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v34 = sub_25625626C((uint64_t)&v103), (v35 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v34, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v36 = swift_dynamicCast();
      if (v36) {
        uint64_t v37 = v99;
      }
      else {
        uint64_t v37 = 0;
      }
      if (v36) {
        uint64_t v38 = v100;
      }
      else {
        uint64_t v38 = 0;
      }
      uint64_t v90 = v38;
      uint64_t v91 = v37;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v90 = 0;
      uint64_t v91 = 0;
    }
    *(void *)&long long v101 = 0x746144746E657665;
    *((void *)&v101 + 1) = 0xE900000000000065;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v39 = sub_25625626C((uint64_t)&v103), (v40 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v39, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v41 = swift_dynamicCast();
      if (v41) {
        uint64_t v42 = v99;
      }
      else {
        uint64_t v42 = 0;
      }
      if (v41) {
        uint64_t v43 = v100;
      }
      else {
        uint64_t v43 = 0;
      }
      uint64_t v88 = v43;
      uint64_t v89 = v42;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v88 = 0;
      uint64_t v89 = 0;
    }
    *(void *)&long long v101 = 0xD000000000000015;
    *((void *)&v101 + 1) = 0x80000002562EAE70;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v44 = sub_25625626C((uint64_t)&v103), (v45 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v44, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v46 = swift_dynamicCast();
      if (v46) {
        uint64_t v47 = v99;
      }
      else {
        uint64_t v47 = 0;
      }
      if (v46) {
        uint64_t v48 = v100;
      }
      else {
        uint64_t v48 = 0;
      }
      uint64_t v86 = v48;
      uint64_t v87 = v47;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v86 = 0;
      uint64_t v87 = 0;
    }
    *(void *)&long long v101 = 0x75706E4969726973;
    *((void *)&v101 + 1) = 0xEF656C61636F4C74;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v49 = sub_25625626C((uint64_t)&v103), (v50 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v49, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v51 = swift_dynamicCast();
      if (v51) {
        uint64_t v52 = v99;
      }
      else {
        uint64_t v52 = 0;
      }
      if (v51) {
        uint64_t v53 = v100;
      }
      else {
        uint64_t v53 = 0;
      }
      uint64_t v84 = v53;
      uint64_t v85 = v52;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v84 = 0;
      uint64_t v85 = 0;
    }
    *(void *)&long long v101 = 0x436D6172676F7270;
    *((void *)&v101 + 1) = 0xEB0000000065646FLL;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v54 = sub_25625626C((uint64_t)&v103), (v55 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v54, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v56 = swift_dynamicCast();
      if (v56) {
        uint64_t v57 = v99;
      }
      else {
        uint64_t v57 = 0;
      }
      if (v56) {
        uint64_t v58 = v100;
      }
      else {
        uint64_t v58 = 0;
      }
      uint64_t v82 = v58;
      uint64_t v83 = v57;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v82 = 0;
      uint64_t v83 = 0;
    }
    *(void *)&long long v101 = 0x75426D6574737973;
    *((void *)&v101 + 1) = 0xEB00000000646C69;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v59 = sub_25625626C((uint64_t)&v103), (v60 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v59, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v61 = swift_dynamicCast();
      if (v61) {
        uint64_t v62 = v99;
      }
      else {
        uint64_t v62 = 0;
      }
      if (v61) {
        uint64_t v63 = v100;
      }
      else {
        uint64_t v63 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v62 = 0;
      uint64_t v63 = 0;
    }
    *(void *)&long long v101 = 0x7954656369766564;
    *((void *)&v101 + 1) = 0xEA00000000006570;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v64 = sub_25625626C((uint64_t)&v103), (v65 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v64, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v66 = swift_dynamicCast();
      if (v66) {
        uint64_t v67 = v99;
      }
      else {
        uint64_t v67 = 0;
      }
      if (v66) {
        uint64_t v68 = v100;
      }
      else {
        uint64_t v68 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v67 = 0;
      uint64_t v68 = 0;
    }
    *(void *)&long long v101 = 0xD000000000000013;
    *((void *)&v101 + 1) = 0x80000002562EAE50;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v69 = sub_25625626C((uint64_t)&v103), (v70 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v69, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      uint64_t v71 = a2;
      int v72 = swift_dynamicCast();
      if (v72) {
        uint64_t v73 = v99;
      }
      else {
        uint64_t v73 = 0;
      }
      if (v72) {
        uint64_t v74 = v100;
      }
      else {
        uint64_t v74 = 0;
      }
    }
    else
    {
      uint64_t v71 = a2;
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v73 = 0;
      uint64_t v74 = 0;
    }
    *(void *)&long long v101 = 0xD00000000000002CLL;
    *((void *)&v101 + 1) = 0x80000002562EAEB0;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v75 = sub_25625626C((uint64_t)&v103), (v76 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v75, (uint64_t)&v101);
    }
    else
    {
      long long v101 = 0u;
      long long v102 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v77 = sub_2562E3430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v98, v77);
    sub_2562571A0((uint64_t)&v103);
    if (*((void *)&v102 + 1))
    {
      int v78 = swift_dynamicCast();
      uint64_t v79 = v99;
      if (!v78) {
        uint64_t v79 = 0;
      }
      char v80 = v78 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v101, &qword_269F543D8);
      uint64_t v79 = 0;
      char v80 = 1;
    }
    *(void *)&long long v103 = v97;
    *((void *)&v103 + 1) = v96;
    uint64_t v104 = v95;
    uint64_t v105 = v94;
    uint64_t v106 = v93;
    char v107 = v92;
    uint64_t v108 = v79;
    char v109 = v80;
    uint64_t v110 = v91;
    uint64_t v111 = v90;
    uint64_t v112 = v89;
    uint64_t v113 = v88;
    uint64_t v114 = v73;
    uint64_t v115 = v74;
    uint64_t v116 = v87;
    uint64_t v117 = v86;
    uint64_t v118 = v85;
    uint64_t v119 = v84;
    uint64_t v120 = v83;
    uint64_t v121 = v82;
    uint64_t v122 = v62;
    uint64_t v123 = v63;
    uint64_t v124 = v67;
    uint64_t v125 = v68;
    nullsub_1(&v103);
    uint64_t v18 = v71;
  }
  else
  {
    long long v14 = sub_2562E3410();
    os_log_type_t v15 = sub_2562E3810();
    if (os_log_type_enabled(v14, v15))
    {
      long long v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v16 = 0;
      _os_log_impl(&dword_256226000, v14, v15, "failed to get row", v16, 2u);
      MEMORY[0x25A2A5190](v16, -1, -1);
    }

    swift_release();
    uint64_t v17 = sub_2562E3430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
    sub_25626AA58(&v103);
    uint64_t v18 = a2;
  }
  return sub_25626A9CC((uint64_t)&v103, v18);
}

uint64_t BootToAssetData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F549A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = *(void *)v1;
  v22[1] = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  v22[11] = *(void *)(v1 + 24);
  v22[12] = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  int v25 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v24 = *(void *)(v1 + 48);
  int v23 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  v22[3] = *(void *)(v1 + 72);
  v22[4] = v9;
  uint64_t v10 = *(void *)(v1 + 88);
  v22[13] = *(void *)(v1 + 80);
  v22[14] = v10;
  uint64_t v11 = *(void *)(v1 + 112);
  uint64_t v27 = v8;
  uint64_t v28 = v11;
  uint64_t v26 = *(void *)(v1 + 120);
  uint64_t v12 = *(void *)(v1 + 128);
  v22[9] = *(void *)(v1 + 136);
  v22[10] = v12;
  uint64_t v13 = *(void *)(v1 + 144);
  v22[7] = *(void *)(v1 + 152);
  v22[8] = v13;
  uint64_t v14 = *(void *)(v1 + 160);
  v22[5] = *(void *)(v1 + 168);
  v22[6] = v14;
  uint64_t v15 = *(void *)(v1 + 184);
  v22[2] = *(void *)(v1 + 176);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1;
  uint64_t v19 = v18;
  __swift_project_boxed_opaque_existential_1(v17, v16);
  sub_256269220();
  sub_2562E3DD0();
  char v41 = 0;
  uint64_t v20 = v29;
  sub_2562E3BE0();
  if (!v20)
  {
    uint64_t v29 = v15;
    char v40 = 1;
    sub_2562E3BE0();
    char v39 = 2;
    sub_2562E3BF0();
    char v38 = 3;
    sub_2562E3C20();
    char v37 = 4;
    sub_2562E3BE0();
    char v36 = 5;
    sub_2562E3BE0();
    char v35 = 6;
    sub_2562E3BE0();
    char v34 = 7;
    sub_2562E3BE0();
    char v33 = 8;
    sub_2562E3BE0();
    char v32 = 9;
    sub_2562E3BE0();
    char v31 = 10;
    sub_2562E3BE0();
    char v30 = 11;
    sub_2562E3BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
}

unint64_t sub_256269220()
{
  unint64_t result = qword_269F549A8;
  if (!qword_269F549A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F549A8);
  }
  return result;
}

uint64_t BootToAssetData.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F549B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v123 = 1;
  char v121 = 1;
  uint64_t v9 = a1[3];
  uint64_t v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_256269220();
  sub_2562E3DC0();
  if (v2)
  {
    uint64_t v78 = v2;
    long long v74 = 0uLL;
    uint64_t v75 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v79 = 0;
    uint64_t v124 = 0;
    uint64_t v12 = 0;
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v13 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v10 = a2;
    LOBYTE(v95) = 0;
    uint64_t v11 = sub_2562E3B30();
    uint64_t v21 = v20;
    uint64_t v68 = v11;
    LOBYTE(v95) = 1;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_2562E3B30();
    uint64_t v69 = v21;
    uint64_t v24 = v23;
    uint64_t v67 = v22;
    LOBYTE(v95) = 2;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_2562E3B50();
    uint64_t v124 = v24;
    uint64_t v26 = v25;
    char v123 = v27 & 1;
    LOBYTE(v95) = 3;
    LODWORD(v24) = v27;
    uint64_t v66 = sub_2562E3B80();
    int v65 = v24;
    char v121 = v28 & 1;
    LOBYTE(v95) = 4;
    char v29 = v28;
    uint64_t v64 = sub_2562E3B30();
    LOBYTE(v95) = 5;
    uint64_t v81 = v30;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_2562E3B30();
    LOBYTE(v95) = 6;
    uint64_t v80 = v31;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_2562E3B30();
    LOBYTE(v95) = 7;
    uint64_t v79 = v32;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_2562E3B30();
    uint64_t v62 = v26;
    LOBYTE(v95) = 8;
    uint64_t v34 = v33;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_2562E3B30();
    uint64_t v78 = 0;
    uint64_t v76 = v34;
    LOBYTE(v95) = 9;
    uint64_t v75 = v35;
    swift_bridgeObjectRetain();
    uint64_t v36 = v78;
    uint64_t v61 = sub_2562E3B30();
    uint64_t v78 = v36;
    if (v36)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v74 = 0uLL;
      uint64_t v70 = 0;
      uint64_t v15 = 0;
      uint64_t v12 = v67;
      uint64_t v13 = v68;
      uint64_t v17 = v62;
      uint64_t v16 = v66;
      uint64_t v18 = v63;
      uint64_t v14 = v64;
    }
    else
    {
      uint64_t v38 = v37;
      LOBYTE(v95) = 10;
      swift_bridgeObjectRetain();
      uint64_t v39 = v78;
      *(void *)&long long v74 = sub_2562E3B30();
      *((void *)&v74 + 1) = v40;
      uint64_t v78 = v39;
      uint64_t v70 = v38;
      if (v39)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v74 = 0uLL;
      }
      else
      {
        char v94 = 11;
        swift_bridgeObjectRetain();
        uint64_t v41 = v78;
        uint64_t v60 = sub_2562E3B30();
        uint64_t v78 = v41;
        if (!v41)
        {
          uint64_t v43 = v42;
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          uint64_t v59 = v43;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&long long v82 = v60;
          *((void *)&v82 + 1) = v43;
          uint64_t v44 = v80;
          *(void *)&long long v83 = v63;
          *((void *)&v83 + 1) = v80;
          *(void *)&long long v84 = v62;
          BYTE8(v84) = v65 & 1;
          *(void *)&long long v85 = v66;
          BYTE8(v85) = v29 & 1;
          *(void *)&long long v86 = v61;
          *((void *)&v86 + 1) = v38;
          *(void *)&long long v87 = v64;
          *((void *)&v87 + 1) = v81;
          *(void *)&long long v88 = v68;
          *((void *)&v88 + 1) = v21;
          uint64_t v45 = v124;
          *(void *)&long long v89 = v67;
          *((void *)&v89 + 1) = v124;
          uint64_t v46 = v79;
          *(void *)&long long v90 = v73;
          *((void *)&v90 + 1) = v79;
          uint64_t v47 = v75;
          *(void *)&long long v91 = v72;
          *((void *)&v91 + 1) = v76;
          *(void *)&long long v92 = v77;
          *((void *)&v92 + 1) = v75;
          long long v93 = v74;
          sub_256233990((uint64_t)&v82);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v48 = v21;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v49 = v46;
          swift_bridgeObjectRelease();
          uint64_t v50 = v76;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v51 = *((void *)&v74 + 1);
          swift_bridgeObjectRelease();
          long long v52 = v91;
          v10[8] = v90;
          v10[9] = v52;
          long long v53 = v93;
          v10[10] = v92;
          v10[11] = v53;
          long long v54 = v87;
          v10[4] = v86;
          v10[5] = v54;
          long long v55 = v89;
          v10[6] = v88;
          v10[7] = v55;
          long long v56 = v83;
          *uint64_t v10 = v82;
          v10[1] = v56;
          long long v57 = v85;
          v10[2] = v84;
          v10[3] = v57;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
          uint64_t v95 = v60;
          uint64_t v96 = v59;
          uint64_t v97 = v63;
          uint64_t v98 = v44;
          uint64_t v99 = v62;
          char v100 = v123;
          *(_DWORD *)long long v101 = *(_DWORD *)v122;
          *(_DWORD *)&v101[3] = *(_DWORD *)&v122[3];
          uint64_t v102 = v66;
          char v103 = v121;
          *(_DWORD *)uint64_t v104 = *(_DWORD *)v120;
          *(_DWORD *)&v104[3] = *(_DWORD *)&v120[3];
          uint64_t v105 = v61;
          uint64_t v106 = v70;
          uint64_t v107 = v64;
          uint64_t v108 = v81;
          uint64_t v109 = v68;
          uint64_t v110 = v48;
          uint64_t v111 = v67;
          uint64_t v112 = v45;
          uint64_t v113 = v73;
          uint64_t v114 = v49;
          uint64_t v115 = v72;
          uint64_t v116 = v50;
          uint64_t v117 = v77;
          uint64_t v118 = v47;
          *(void *)&long long v119 = v74;
          *((void *)&v119 + 1) = v51;
          return sub_256233A48((uint64_t)&v95);
        }
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v12 = v67;
      uint64_t v13 = v68;
      uint64_t v17 = v62;
      uint64_t v18 = v63;
      uint64_t v16 = v66;
      uint64_t v14 = v64;
      uint64_t v15 = v61;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  uint64_t v97 = v18;
  uint64_t v98 = v80;
  uint64_t v99 = v17;
  char v100 = v123;
  *(_DWORD *)long long v101 = *(_DWORD *)v122;
  *(_DWORD *)&v101[3] = *(_DWORD *)&v122[3];
  uint64_t v102 = v16;
  char v103 = v121;
  *(_DWORD *)uint64_t v104 = *(_DWORD *)v120;
  *(_DWORD *)&v104[3] = *(_DWORD *)&v120[3];
  uint64_t v105 = v15;
  uint64_t v106 = v70;
  uint64_t v107 = v14;
  uint64_t v108 = v81;
  uint64_t v109 = v13;
  uint64_t v110 = v69;
  uint64_t v111 = v12;
  uint64_t v112 = v124;
  uint64_t v113 = v73;
  uint64_t v114 = v79;
  uint64_t v115 = v72;
  uint64_t v116 = v76;
  uint64_t v117 = v77;
  uint64_t v118 = v75;
  long long v119 = v74;
  return sub_256233A48((uint64_t)&v95);
}

uint64_t sub_256269D80@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return BootToAssetData.init(from:)(a1, a2);
}

uint64_t sub_256269D98(void *a1)
{
  return BootToAssetData.encode(to:)(a1);
}

uint64_t destroy for BootToAssetData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BootToAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BootToAssetData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for BootToAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BootToAssetData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BootToAssetData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BootToAssetData()
{
  return &type metadata for BootToAssetData;
}

uint64_t getEnumTagSinglePayload for BootToAssetData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BootToAssetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25626A424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BootToAssetData.CodingKeys()
{
  return &type metadata for BootToAssetData.CodingKeys;
}

uint64_t sub_25626A45C()
{
  return sub_25626AA80(&qword_269F549B8, &qword_269F549C0);
}

unint64_t sub_25626A49C()
{
  unint64_t result = qword_269F549C8;
  if (!qword_269F549C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F549C8);
  }
  return result;
}

unint64_t sub_25626A4F4()
{
  unint64_t result = qword_269F549D0;
  if (!qword_269F549D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F549D0);
  }
  return result;
}

unint64_t sub_25626A54C()
{
  unint64_t result = qword_269F549D8;
  if (!qword_269F549D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F549D8);
  }
  return result;
}

uint64_t sub_25626A5A0(uint64_t a1, uint64_t a2)
{
  sub_256229CD0(a2, (uint64_t)&v3);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
    unint64_t v4 = 0xE000000000000000;
    sub_2562E3640();
    sub_2562E3AA0();
    sub_2562E3640();
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0xE000000000000000;
    sub_2562E3AA0();
  }
  uint64_t v3 = 34;
  unint64_t v4 = 0xE100000000000000;
  sub_2562E39A0();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  sub_2562E3640();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_25626A6E4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) >= *(void *)(a1 + 16)) {
    int64_t v4 = *(void *)(a1 + 16);
  }
  else {
    int64_t v4 = *(void *)(a2 + 16);
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_2562B74A4(0, v4, 0);
  sub_2562B7A94(a1, a2, (uint64_t)&v28);
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2562B7B00((uint64_t)&v24);
      if (!*((void *)&v25 + 1)) {
        break;
      }
      uint64_t v5 = sub_25626A5A0((uint64_t)&v24, (uint64_t)v26 + 8);
      uint64_t v7 = v6;
      sub_25622F3C4((uint64_t)&v24, &qword_269F549F8);
      uint64_t v8 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2562B74A4(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v29;
      }
      unint64_t v10 = *(void *)(v8 + 16);
      unint64_t v9 = *(void *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_2562B74A4(v9 > 1, v10 + 1, 1);
        uint64_t v8 = v29;
      }
      *(void *)(v8 + 16) = v10 + 1;
      uint64_t v11 = v8 + 16 * v10;
      *(void *)(v11 + 32) = v5;
      *(void *)(v11 + 40) = v7;
      if (!--v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    sub_2562B7B00((uint64_t)&v19);
    if (*((void *)&v20 + 1))
    {
      uint64_t v12 = v29;
      do
      {
        v26[0] = v21;
        v26[1] = v22;
        uint64_t v27 = v23;
        long long v24 = v19;
        long long v25 = v20;
        uint64_t v13 = sub_25626A5A0((uint64_t)&v24, (uint64_t)v26 + 8);
        uint64_t v15 = v14;
        sub_25622F3C4((uint64_t)&v24, &qword_269F549F8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2562B74A4(0, *(void *)(v12 + 16) + 1, 1);
          uint64_t v12 = v29;
        }
        unint64_t v17 = *(void *)(v12 + 16);
        unint64_t v16 = *(void *)(v12 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_2562B74A4(v16 > 1, v17 + 1, 1);
          uint64_t v12 = v29;
        }
        *(void *)(v12 + 16) = v17 + 1;
        uint64_t v18 = v12 + 16 * v17;
        *(void *)(v18 + 32) = v13;
        *(void *)(v18 + 40) = v15;
        sub_2562B7B00((uint64_t)&v19);
      }
      while (*((void *)&v20 + 1));
    }
    sub_256248F94();
    sub_256248F94();
    sub_25622F3C4((uint64_t)&v19, qword_269F54A00);
  }
}

uint64_t sub_25626A980()
{
  unint64_t v0 = sub_2562E3B20();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_25626A9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25626AA34(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_25626AA58(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_2562E7A40;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  return result;
}

uint64_t sub_25626AA80(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25626AAC8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25626AB1C()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25626AB3C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CollectionWeightScale()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25626AB8C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PercentageSampler()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25626ABDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_25626ABF0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_25626AC04()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25626AC4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25626AC54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25626AC7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SampleableDateCollectionWeightScale()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t SpeakerIdSamplingBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSamplingBiomeReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SpeakerIdSamplingBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSamplingBiomeReporter_logger;
  uint64_t v5 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_25626AE0C(uint64_t a1)
{
  v2[2] = v1;
  uint64_t v4 = type metadata accessor for SpeakerIdSamplingData(0);
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *(void *)(a1 + 16);
  v2[5] = v5;
  v2[6] = v6;
  return MEMORY[0x270FA2498](sub_25626AED4, 0, 0);
}

uint64_t sub_25626AED4()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Reporter invoked: SpeakerIdSamplingBiomeReporter", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = v0[6];

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    uint64_t v8 = v0[6] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v32 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v34 = v0;
    uint64_t v33 = v7;
    do
    {
      uint64_t v35 = v5;
      uint64_t v12 = v0[5];
      sub_256231958(v8, v12);
      uint64_t v13 = sub_2562E2F80();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v36 = swift_task_alloc();
      sub_2562E2F30();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      uint64_t v15 = swift_task_alloc();
      sub_256231A18(v12 + *(int *)(v7 + 120), v15);
      uint64_t v16 = sub_2562E2FD0();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {
        sub_2562344DC(v15);
        swift_task_dealloc();
      }
      else
      {
        uint64_t v18 = sub_2562E2FA0();
        uint64_t v20 = v19;
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
        swift_task_dealloc();
        long long v21 = sub_25626B9CC(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v23 = v21[2];
        unint64_t v22 = v21[3];
        if (v23 >= v22 >> 1) {
          long long v21 = sub_25626B9CC((void *)(v22 > 1), v23 + 1, 1, v21);
        }
        void v21[2] = v23 + 1;
        long long v24 = &v21[2 * v23];
        v24[4] = v18;
        v24[5] = v20;
      }
      uint64_t v25 = v0[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
      uint64_t v26 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v26, v36, v13);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
      uint64_t v27 = *(void *)(v25 + *(int *)(v7 + 112) + 8);
      LODWORD(v25) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v26, 1, v13);
      swift_bridgeObjectRetain();
      if (v25 == 1)
      {
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v28 = (void *)sub_2562E2F00();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v26, v13);
      }
      uint64_t v29 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      if (v27)
      {
        unint64_t v9 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v9 = 0;
      }
      uint64_t v0 = v34;
      uint64_t v10 = v34[5];
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A4E0]), sel_initWithTimestamp_onDeviceSampleIdentifiers_enrollmentIdentifier_, v28, v29, v9);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
      swift_task_dealloc();
      swift_task_dealloc();
      sub_2562E30D0();

      sub_2562319BC(v10);
      v8 += v32;
      uint64_t v5 = v35 - 1;
      uint64_t v7 = v33;
    }
    while (v35 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

id static SpeakerIdSamplingBiomeReporter.createBiomeEvent(result:)(uint64_t a1)
{
  uint64_t v2 = sub_2562E2F80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E2F30();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpeakerIdSamplingData(0);
  sub_256231A18(a1 + *(int *)(v9 + 120), (uint64_t)v8);
  uint64_t v10 = sub_2562E2FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_2562344DC((uint64_t)v8);
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v27 = sub_2562E2FA0();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    uint64_t v12 = sub_25626B9CC(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v16 = v12[2];
    unint64_t v15 = v12[3];
    if (v16 >= v15 >> 1) {
      uint64_t v12 = sub_25626B9CC((void *)(v15 > 1), v16 + 1, 1, v12);
    }
    void v12[2] = v16 + 1;
    uint64_t v17 = &v12[2 * v16];
    v17[4] = v27;
    v17[5] = v14;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v20, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v20, 0, 1, v2);
  long long v21 = (uint64_t *)(a1 + *(int *)(v9 + 112));
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  objc_allocWithZone(MEMORY[0x263F2A4E0]);
  swift_bridgeObjectRetain();
  id v24 = sub_25626B878((uint64_t)v20, (uint64_t)v12, v22, v23);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v24;
}

uint64_t sub_25626B6F0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSamplingBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t SpeakerIdSamplingBiomeReporter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSamplingBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SpeakerIdSamplingBiomeReporter.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSamplingBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_25626B878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = sub_2562E2F80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_2562E2F00();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  }
  uint64_t v11 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v12 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(v5, sel_initWithTimestamp_onDeviceSampleIdentifiers_enrollmentIdentifier_, v10, v11, v12);

  return v13;
}

void *sub_25626B9CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54C00);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25626C420(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25626BADC()
{
  return type metadata accessor for SpeakerIdSamplingBiomeReporter();
}

uint64_t type metadata accessor for SpeakerIdSamplingBiomeReporter()
{
  uint64_t result = qword_269F54B98;
  if (!qword_269F54B98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSamplingBiomeReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingBiomeReporter);
}

uint64_t dispatch thunk of SpeakerIdSamplingBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *sub_25626BB5C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DC0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 272);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[34 * v8 + 4]) {
          memmove(v12, a4 + 4, 272 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25626C514(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25626BC80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54C18, type metadata accessor for CombinedRequestNoAssetData, type metadata accessor for CombinedRequestNoAssetData);
}

uint64_t sub_25626BCB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BF0, MEMORY[0x270FA94A8], MEMORY[0x270FA9668]);
}

uint64_t sub_25626BCD0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_2562E3AB0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  _OWORD v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25626C8FC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

char *sub_25626BF50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54C08);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_25626C704(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25626C060(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54C10, type metadata accessor for DeviceExperimentMetrics, type metadata accessor for DeviceExperimentMetrics);
}

uint64_t sub_25626C094(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BE0, type metadata accessor for DeviceUsageMetrics, type metadata accessor for DeviceUsageMetrics);
}

uint64_t sub_25626C0C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BB8, MEMORY[0x270FA9290], MEMORY[0x270FA91A8]);
}

void *sub_25626C0E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BD0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[24 * v8 + 4]) {
          memmove(v12, a4 + 4, 192 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25626C60C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25626C20C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BC0, (uint64_t (*)(void))type metadata accessor for AssetPenetrationData, (uint64_t (*)(void))type metadata accessor for AssetPenetrationData);
}

uint64_t sub_25626C240(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BE8, type metadata accessor for DeviceSegmentsCohorts, type metadata accessor for DeviceSegmentsCohorts);
}

uint64_t sub_25626C274(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BF8, type metadata accessor for DeviceBatchData, type metadata accessor for DeviceBatchData);
}

void *sub_25626C2A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BA8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25626C7F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25626C3B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BD8, type metadata accessor for SpeakerIdSamplingData, type metadata accessor for SpeakerIdSamplingData);
}

uint64_t sub_25626C3EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25626BCD0(a1, a2, a3, a4, &qword_269F54BC8, type metadata accessor for CombinedBootToAssetData, type metadata accessor for CombinedBootToAssetData);
}

uint64_t sub_25626C420(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_25626C514(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 272 * a1 + 32;
    unint64_t v6 = a3 + 272 * v4;
    if (v5 >= v6 || v5 + 272 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_25626C60C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 192 * a1 + 32;
    unint64_t v6 = a3 + 192 * v4;
    if (v5 >= v6 || v5 + 192 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

char *sub_25626C704(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_25626C7F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BB0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_25626C8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t AssetPenetrationStatus.__allocating_init(defaults:logger:fbfBundleId:)(void *a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t v8 = swift_allocObject();
  AssetPenetrationStatus.init(defaults:logger:fbfBundleId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t AssetPenetrationStatus.init(defaults:logger:fbfBundleId:)(void *a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t v76 = a4;
  uint64_t v5 = v4;
  uint64_t v79 = a3;
  id v81 = a1;
  uint64_t v7 = sub_2562E3430();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v62 - v12;
  uint64_t v14 = *(void (**)(void))(v8 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v14)((char *)&v62 - v12, a2, v7);
  type metadata accessor for AssetPenetrationStatusDataProvider();
  uint64_t v15 = swift_allocObject();
  uint64_t v85 = v8;
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v74 = v8 + 32;
  uint64_t v75 = v13;
  uint64_t v73 = v16;
  v16(v15 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger, v13, v7);
  *(void *)(v5 + 16) = v15;
  uint64_t v72 = v5 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger;
  v14();
  uint64_t v17 = sub_2562E2FD0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v68 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v69 = v19;
  sub_2562E2FC0();
  BOOL v20 = *(void (**)(void))(v18 + 32);
  uint64_t v78 = (uint64_t *)(v5 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_oddId);
  uint64_t v80 = v17;
  uint64_t v70 = v20;
  uint64_t v71 = v18 + 32;
  v20();
  uint64_t v21 = v5;
  unint64_t v22 = (void *)(v5 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_fbfBundleId);
  unint64_t v23 = v79;
  uint64_t v79 = (void *)(v5 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_fbfBundleId);
  id v24 = v76;
  void *v22 = v23;
  v22[1] = v24;
  uint64_t v25 = sub_2562E3340();
  swift_allocObject();
  id v81 = v81;
  uint64_t v26 = sub_2562E3330();
  uint64_t v83 = v25;
  uint64_t v84 = MEMORY[0x263F396B8];
  uint64_t v82 = v26;
  uint64_t v76 = v14;
  ((void (*)(char *, uint64_t, uint64_t))v14)(v11, a2, v7);
  sub_2562E3140();
  swift_allocObject();
  uint64_t v27 = v77;
  uint64_t v28 = sub_2562E3120();
  if (v27)
  {

    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v29(a2, v7);
    swift_release();
    v29(v72, v7);
    (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v78, v80);
    swift_bridgeObjectRelease();
    type metadata accessor for AssetPenetrationStatus();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v30 = v28;
    uint64_t v64 = sub_2562E2F80();
    int v65 = &v62;
    uint64_t v31 = *(void *)(v64 - 8);
    MEMORY[0x270FA5388](v64);
    uint64_t v63 = v7;
    uint64_t v72 = 0;
    uint64_t v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E32A0();
    uint64_t v34 = sub_2562E3060();
    uint64_t v62 = (uint64_t)&v62;
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v77 = v21;
    uint64_t v36 = v35;
    MEMORY[0x270FA5388](v34);
    uint64_t v38 = (char *)&v62 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3020();
    uint64_t v67 = v30;
    sub_2562E3130();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v34);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v64);
    uint64_t v40 = v75;
    uint64_t v39 = v76;
    uint64_t v66 = a2;
    uint64_t v41 = v63;
    uint64_t v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v76)(v75, a2, v63);
    int v65 = &v62;
    MEMORY[0x270FA5388](v42);
    uint64_t v43 = (char *)&v62 - v68;
    uint64_t v44 = v80;
    (*(void (**)(char *, uint64_t *, uint64_t))(v18 + 16))((char *)&v62 - v68, v78, v80);
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
    uint64_t v78 = &v62;
    MEMORY[0x270FA5388](v45 - 8);
    uint64_t v47 = (char *)&v62 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v48 = v67;
    swift_retain();
    sub_25626D380((uint64_t)v47);
    type metadata accessor for AssetPenetrationCalculator();
    uint64_t v49 = swift_allocObject();
    sub_2562E3020();
    v73(v49 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_logger, v40, v41);
    sub_25626DA70((uint64_t)v47, v49 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_sqlFileURL);
    *(void *)(v49 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_bookmarkService) = v48;
    ((void (*)(uint64_t, char *, uint64_t))v70)(v49 + OBJC_IVAR____TtC16MetricsFramework26AssetPenetrationCalculator_oddId, v43, v44);
    *(void *)(v77 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_calculator) = v49;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v40, v66, v41);
    uint64_t v50 = *v79;
    uint64_t v51 = v79[1];
    uint64_t v52 = type metadata accessor for SELFReportingService();
    long long v53 = (void *)swift_allocObject();
    long long v54 = self;
    swift_bridgeObjectRetain();
    v53[3] = objc_msgSend(v54, sel_sharedLoggerWithPersistenceConfiguration_, 1, v62);
    id v55 = objc_msgSend(self, sel_sharedAnalytics);
    id v56 = objc_msgSend(v55, sel_defaultMessageStream);

    v53[2] = v56;
    v53[4] = v50;
    v53[5] = v51;
    type metadata accessor for AssetPenetrationSELFReporter();
    uint64_t v57 = swift_allocObject();
    uint64_t v58 = (void *)(v57 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
    v58[3] = v52;
    v58[4] = &protocol witness table for SELFReportingService;
    *uint64_t v58 = v53;
    v73(v57 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger, v75, v41);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_2562E4F80;
    *(void *)(v59 + 32) = v57;
    uint64_t v82 = v59;
    sub_2562E3720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54C40);
    swift_allocObject();
    swift_retain();
    uint64_t v82 = sub_2562E30E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54C48);
    swift_allocObject();
    uint64_t v60 = sub_2562E3100();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v66, v41);
    uint64_t v21 = v77;
    *(void *)(v77 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_reporter) = v60;
  }
  return v21;
}

uint64_t sub_25626D380@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AssetPenetrationCalculator();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_2562E3550();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2562E2E20();

    uint64_t v7 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_25626D4E0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25626D500, 0, 0);
}

uint64_t sub_25626D500()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: AssetPenetrationMetricsDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25626D5E4(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25626D614, 0, 0);
}

uint64_t sub_25626D614()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395D0] + MEMORY[0x263F395D0]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25623D940;
  return v4(v0 + 16);
}

uint64_t sub_25626D6E0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25626D700, 0, 0);
}

uint64_t sub_25626D700()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_2562CD2B8(v2);
}

uint64_t AssetPenetrationStatus.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssetPenetrationStatus.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework22AssetPenetrationStatus_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_25626D9A8()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_25626D500, 0, 0);
}

uint64_t sub_25626D9CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25626D700, 0, 0);
}

uint64_t sub_25626D9F0(uint64_t a1)
{
  *(void *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25626D614, 0, 0);
}

uint64_t type metadata accessor for AssetPenetrationStatus()
{
  uint64_t result = qword_269F54CB0;
  if (!qword_269F54CB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25626DA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25626DAD8()
{
  return sub_25626DB74(&qword_269F54C70);
}

uint64_t sub_25626DB0C()
{
  return sub_25626DB74(&qword_269F54C78);
}

uint64_t sub_25626DB40()
{
  return sub_25626DB74(&qword_269F54C80);
}

uint64_t sub_25626DB74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AssetPenetrationStatus();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25626DBBC()
{
  unint64_t result = qword_269F54C88;
  if (!qword_269F54C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54C88);
  }
  return result;
}

unint64_t sub_25626DC14()
{
  unint64_t result = qword_269F54C98[0];
  if (!qword_269F54C98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F54C98);
  }
  return result;
}

uint64_t sub_25626DC68()
{
  return type metadata accessor for AssetPenetrationStatus();
}

uint64_t sub_25626DC70()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E2FD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for AssetPenetrationStatus(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetPenetrationStatus);
}

uint64_t dispatch thunk of AssetPenetrationStatus.__allocating_init(defaults:logger:fbfBundleId:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AssetPenetrationStatus.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of AssetPenetrationStatus.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of AssetPenetrationStatus.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t SiriSegmentCohortMetrics.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SiriSegmentCohortMetrics.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t static SiriSegmentCohortMetrics.maxStreamLookbackNumDays.getter()
{
  return 7;
}

uint64_t SiriSegmentCohortMetrics.init(defaults:logger:)(void *a1, uint64_t a2)
{
  id v82 = a1;
  uint64_t v4 = sub_2562E3430();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v76 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v68 - v8;
  uint64_t v83 = v5;
  uint64_t v10 = *(void (**)(void))(v5 + 16);
  uint64_t v77 = v2 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_logger;
  v10();
  uint64_t v11 = sub_2562E2FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v73 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v74 = v13;
  sub_2562E2FC0();
  uint64_t v87 = v2;
  uint64_t v14 = *(void (**)(void))(v12 + 32);
  uint64_t v80 = v2 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_oddId;
  uint64_t v81 = v11;
  v14();
  uint64_t v15 = sub_2562E3340();
  swift_allocObject();
  id v82 = v82;
  uint64_t v16 = sub_2562E3330();
  uint64_t v85 = v15;
  uint64_t v86 = MEMORY[0x263F396B8];
  uint64_t v84 = v16;
  uint64_t v78 = v5 + 16;
  uint64_t v75 = v10;
  ((void (*)(char *, uint64_t, uint64_t))v10)(v9, a2, v4);
  sub_2562E3140();
  swift_allocObject();
  uint64_t v17 = v79;
  uint64_t v18 = sub_2562E3120();
  if (v17)
  {

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v19(a2, v4);
    v19(v77, v4);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v80, v81);
    type metadata accessor for SiriSegmentCohortMetrics();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v20 = v18;
    uint64_t v21 = sub_2562E2F80();
    uint64_t v70 = &v68;
    uint64_t v22 = *(void *)(v21 - 8);
    MEMORY[0x270FA5388](v21);
    id v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E32A0();
    uint64_t v25 = sub_2562E3060();
    uint64_t v26 = a2;
    uint64_t v71 = v4;
    uint64_t v27 = v25;
    uint64_t v69 = &v68;
    uint64_t v28 = *(void *)(v25 - 8);
    MEMORY[0x270FA5388](v25);
    uint64_t v77 = 0;
    uint64_t v30 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3020();
    uint64_t v79 = v20;
    sub_2562E3130();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v31 = v87;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    uint64_t v32 = v71;
    uint64_t v34 = v75;
    uint64_t v33 = v76;
    uint64_t v72 = v26;
    ((void (*)(char *, uint64_t, uint64_t))v75)(v76, v26, v71);
    type metadata accessor for SiriSegmentCohortDataProvider();
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = *(uint64_t **)(v83 + 32);
    uint64_t v69 = (uint64_t *)(v83 + 32);
    uint64_t v70 = v36;
    ((void (*)(uint64_t, char *, uint64_t))v36)(v35 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortDataProvider_logger, v33, v32);
    *(void *)(v31 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_siriSegmentCohortDataProvider) = v35;
    uint64_t v37 = v31;
    uint64_t v38 = (uint64_t)v33;
    uint64_t v39 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v33, v26, v32);
    uint64_t v40 = v34;
    MEMORY[0x270FA5388](v39);
    uint64_t v41 = (char *)&v68 - v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v68 - v73, v80, v81);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
    MEMORY[0x270FA5388](v42 - 8);
    uint64_t v44 = (char *)&v68 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = v79;
    swift_retain();
    sub_25626EAB8((uint64_t)v44);
    type metadata accessor for SiriSegmentCohortCalculator();
    swift_allocObject();
    uint64_t v46 = v38;
    uint64_t v47 = sub_256289DF8(v38, (uint64_t)v44, v45, (uint64_t)v41);
    swift_release();
    *(void *)(v37 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_siriSegmentCohortCalculator) = v47;
    id v48 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    id v49 = objc_msgSend(v48, sel_Metrics);
    swift_unknownObjectRelease();
    id v50 = objc_msgSend(v49, sel_OnDeviceDigestSegmentsCohorts);
    swift_unknownObjectRelease();
    id v51 = objc_msgSend(v50, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54CF8);
    swift_allocObject();
    uint64_t v52 = sub_2562E30C0();
    uint64_t v53 = v46;
    uint64_t v54 = v46;
    uint64_t v56 = v71;
    uint64_t v55 = v72;
    uint64_t v57 = v40;
    ((void (*)(uint64_t, uint64_t, uint64_t))v40)(v54, v72, v71);
    type metadata accessor for SiriSegmentCohortBiomeReporter();
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v52;
    uint64_t v81 = v52;
    uint64_t v59 = v70;
    ((void (*)(uint64_t, uint64_t, uint64_t))v70)(v58 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger, v53, v56);
    ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v53, v55, v56);
    type metadata accessor for SELFReportingService();
    uint64_t v60 = (void *)swift_allocObject();
    uint64_t v61 = self;
    swift_retain();
    v60[3] = objc_msgSend(v61, sel_sharedLoggerWithPersistenceConfiguration_, 1);
    id v62 = objc_msgSend(self, sel_sharedAnalytics);
    id v63 = objc_msgSend(v62, sel_defaultMessageStream);

    v60[2] = v63;
    v60[4] = 0xD000000000000027;
    v60[5] = 0x80000002562EBB60;
    type metadata accessor for SiriSegmentCohortSELFReporter();
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_odBatchClientEvents) = MEMORY[0x263F8EE78];
    ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v64 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_logger, v53, v56);
    *(void *)(v64 + OBJC_IVAR____TtC16MetricsFramework29SiriSegmentCohortSELFReporter_reportingService) = v60;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_2562E5700;
    *(void *)(v65 + 32) = v58;
    *(void *)(v65 + 40) = v64;
    uint64_t v84 = v65;
    sub_2562E3720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54D00);
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v84 = sub_2562E30E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54D08);
    swift_allocObject();
    uint64_t v66 = sub_2562E3100();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v72, v56);
    *(void *)(v87 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_siriSegmentCohortReporter) = v66;
  }
  return v87;
}

uint64_t type metadata accessor for SiriSegmentCohortMetrics()
{
  uint64_t result = qword_269F54D60;
  if (!qword_269F54D60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25626EAB8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SiriSegmentCohortMetrics();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_2562E3550();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2562E2E20();

    uint64_t v7 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_25626EC18()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25626EC38, 0, 0);
}

uint64_t sub_25626EC38()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SiriSegmentCohortDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25626ED24(_OWORD *a1)
{
  *(void *)(v2 + 48) = v1;
  long long v3 = a1[1];
  *(_OWORD *)(v2 + 56) = *a1;
  *(_OWORD *)(v2 + 72) = v3;
  return MEMORY[0x270FA2498](sub_25626ED50, 0, 0);
}

uint64_t sub_25626ED50()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 72);
  long long v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395D0] + MEMORY[0x263F395D0]);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_25626EE1C;
  return v3(v0 + 16);
}

uint64_t sub_25626EE1C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25626EF50, 0, 0);
  }
  else
  {
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25626EF50()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25626EF68(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25626EF88, 0, 0);
}

uint64_t sub_25626EF88()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_256282490(v2);
}

uint64_t SiriSegmentCohortMetrics.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SiriSegmentCohortMetrics.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework24SiriSegmentCohortMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25626F218()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_25626EC38, 0, 0);
}

uint64_t sub_25626F23C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25626EF88, 0, 0);
}

uint64_t sub_25626F260(_OWORD *a1)
{
  *(void *)(v2 + 48) = *v1;
  long long v3 = a1[1];
  *(_OWORD *)(v2 + 56) = *a1;
  *(_OWORD *)(v2 + 72) = v3;
  return MEMORY[0x270FA2498](sub_25626ED50, 0, 0);
}

uint64_t sub_25626F290()
{
  return sub_25626F32C(&qword_269F54D30);
}

uint64_t sub_25626F2C4()
{
  return sub_25626F32C(&qword_269F54D38);
}

uint64_t sub_25626F2F8()
{
  return sub_25626F32C(qword_269F54D40);
}

uint64_t sub_25626F32C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SiriSegmentCohortMetrics();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25626F374()
{
  return type metadata accessor for SiriSegmentCohortMetrics();
}

uint64_t sub_25626F37C()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E2FD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for SiriSegmentCohortMetrics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriSegmentCohortMetrics);
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SiriSegmentCohortMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t static ExtensionsUtils.createExecutionMetadataClientEvent(extensionName:executionStatus:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269F54DA8 + dword_269F54DA8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_256271E70;
  return v7(a1, a2);
}

uint64_t sub_25626F870()
{
  uint64_t v0 = sub_2562E3430();
  __swift_allocate_value_buffer(v0, qword_269F54D88);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F54D88);
  return sub_2562E3420();
}

uint64_t static ExtensionsUtils.isAssistantOrDictationEnabled()()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_sharedPreferences);
  unsigned __int8 v2 = objc_msgSend(v1, sel_assistantIsEnabled);

  if (v2) {
    return 1;
  }
  id v4 = objc_msgSend(v0, sel_sharedPreferences);
  id v3 = objc_msgSend(v4, sel_dictationIsEnabled);

  return (uint64_t)v3;
}

BOOL static ExtensionsUtils.isSiriDataSharingOptIn()()
{
  id v0 = objc_msgSend(self, sel_sharedPreferences);
  id v1 = objc_msgSend(v0, sel_siriDataSharingOptInStatus);

  return v1 == (id)1;
}

uint64_t static ExtensionsUtils.createClientEventMetadataEvent()()
{
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_269F54DB8 + dword_269F54DB8);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25626FA8C;
  return v3();
}

uint64_t sub_25626FA8C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t static ExtensionsUtils.fetchDeviceAggregationId()()
{
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_269F54DC8 + dword_269F54DC8);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_256271E70;
  return v3();
}

uint64_t ExtensionsUtils.deinit()
{
  return v0;
}

uint64_t ExtensionsUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_25626FC40()
{
  return MEMORY[0x270FA2498](sub_25626FC5C, 0, 0);
}

uint64_t sub_25626FC5C()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F285E0]), sel_init);
  v0[16] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_25626FD78;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2562C4B6C;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_getODDDeviceProperties_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25626FD78()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_2562700A0;
  }
  else {
    uint64_t v2 = sub_25626FE88;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25626FE88()
{
  uint64_t v1 = *(void **)(v0 + 120);

  if (v1)
  {
    if (qword_269F53B00 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_2562E3430();
    __swift_project_value_buffer(v2, (uint64_t)qword_269F54D88);
    id v3 = sub_2562E3410();
    os_log_type_t v4 = sub_2562E37F0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_256226000, v3, v4, "#ExtensionsUtils: Successfully fetched DevicePropertiesEvent", v5, 2u);
      MEMORY[0x25A2A5190](v5, -1, -1);
    }

    id v6 = objc_msgSend(v1, sel_eventMetadata);
    id v7 = objc_msgSend(v6, sel_deviceAggregationId);
  }
  else
  {
    if (qword_269F53B00 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_2562E3430();
    __swift_project_value_buffer(v8, (uint64_t)qword_269F54D88);
    uint64_t v9 = sub_2562E3410();
    os_log_type_t v10 = sub_2562E3800();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_256226000, v9, v10, "#ExtensionsUtils: Unable to fetch DevicePropertiesEvent", v11, 2u);
      MEMORY[0x25A2A5190](v11, -1, -1);
    }

    id v7 = 0;
  }
  uint64_t v12 = *(uint64_t (**)(id))(v0 + 8);
  return v12(v7);
}

uint64_t sub_2562700A0()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[17];
  swift_willThrow();

  if (qword_269F53B00 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_2562E3430();
  __swift_project_value_buffer(v3, (uint64_t)qword_269F54D88);
  os_log_type_t v4 = sub_2562E3410();
  os_log_type_t v5 = sub_2562E3800();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl(&dword_256226000, v4, v5, "#ExtensionsUtils: Unable to fetch DevicePropertiesEvent", v6, 2u);
    MEMORY[0x25A2A5190](v6, -1, -1);
  }

  id v7 = (uint64_t (*)(void))v0[1];
  return v7(0);
}

uint64_t sub_2562701D0()
{
  return MEMORY[0x270FA2498](sub_2562701EC, 0, 0);
}

uint64_t sub_2562701EC()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6B0]), sel_init);
  v0[2] = v1;
  if (v1)
  {
    uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_269F54DC8 + dword_269F54DC8);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[3] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_2562703A0;
    return v9();
  }
  else
  {
    if (qword_269F53B00 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_2562E3430();
    __swift_project_value_buffer(v4, (uint64_t)qword_269F54D88);
    os_log_type_t v5 = sub_2562E3410();
    os_log_type_t v6 = sub_2562E3800();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_256226000, v5, v6, "#ExtensionsUtils: Failed to generate ODDSiriSchemaODDClientEventMetadata", v7, 2u);
      MEMORY[0x25A2A5190](v7, -1, -1);
    }

    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8(0);
  }
}

uint64_t sub_2562703A0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2562704A0, 0, 0);
}

uint64_t sub_2562704A0()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[2];
  objc_msgSend(v2, sel_setDeviceAggregationId_, v1);

  uint64_t v3 = sub_2562E2FD0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_2562E2FC0();
  id v6 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
  id v7 = (void *)sub_2562E2FB0();
  id v8 = objc_msgSend(v6, sel_initWithNSUUID_, v7);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  swift_task_dealloc();
  objc_msgSend(v2, sel_setOddId_, v8);

  uint64_t v9 = sub_2562E2F80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = swift_task_alloc();
  sub_2562E30A0();
  sub_2562E2F40();
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v12 <= -1.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v12 >= 1.84467441e19)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (is_mul_ok((unint64_t)v12, 0x3E8uLL))
  {
    uint64_t v13 = (void *)v0[2];
    objc_msgSend(v13, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v12);
    uint64_t v14 = (void *)sub_2562A36F0();
    objc_msgSend(v13, sel_setAggregationInterval_, v14);

    if (qword_269F53B00 == -1) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  swift_once();
LABEL_6:
  uint64_t v15 = sub_2562E3430();
  __swift_project_value_buffer(v15, (uint64_t)qword_269F54D88);
  uint64_t v16 = sub_2562E3410();
  os_log_type_t v17 = sub_2562E37F0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_256226000, v16, v17, "#ExtensionsUtils: Successfully created ODDSiriSchemaODDClientEventMetadata", v18, 2u);
    MEMORY[0x25A2A5190](v18, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v9);
  swift_task_dealloc();
  uint64_t v19 = v0[2];
  uint64_t v20 = (uint64_t (*)(uint64_t))v0[1];
  return v20(v19);
}

uint64_t sub_2562707D0(int a1, int a2)
{
  *(_DWORD *)(v2 + 56) = a1;
  *(_DWORD *)(v2 + 60) = a2;
  return MEMORY[0x270FA2498](sub_2562707F0, 0, 0);
}

uint64_t sub_2562707F0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  v0[4] = v1;
  if (v1)
  {
    uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_269F54DB8 + dword_269F54DB8);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_2562709A4;
    return v9();
  }
  else
  {
    if (qword_269F53B00 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_2562E3430();
    __swift_project_value_buffer(v4, (uint64_t)qword_269F54D88);
    uint64_t v5 = sub_2562E3410();
    os_log_type_t v6 = sub_2562E3800();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_256226000, v5, v6, "#ExtensionsUtils: Failed to generate event for reporting Extension Execution Metadata", v7, 2u);
      MEMORY[0x25A2A5190](v7, -1, -1);
    }

    id v8 = (uint64_t (*)(void))v0[1];
    return v8(0);
  }
}

uint64_t sub_2562709A4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_256270AA4, 0, 0);
}

uint64_t sub_256270AA4()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void **)(v0 + 48);
  objc_msgSend(*(id *)(v0 + 32), sel_setEventMetadata_, v1);

  if (qword_269F53B00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2562E3430();
  __swift_project_value_buffer(v2, (uint64_t)qword_269F54D88);
  uint64_t v3 = sub_2562E3410();
  os_log_type_t v4 = sub_2562E37F0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_256226000, v3, v4, "#ExtensionsUtils: Added ODDSiriSchemaODDClientEventMetadata to ODDSiriSchemaODDExecutionMetadataReported", v5, 2u);
    MEMORY[0x25A2A5190](v5, -1, -1);
  }

  os_log_type_t v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E720]), sel_init);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(unsigned int *)(v0 + 60);
    [v6 setExtensionName:*(unsigned int *)(v0 + 56)];
    [v7 setExecutionStatus:v8];
    uint64_t v9 = sub_2562E3410();
    os_log_type_t v10 = sub_2562E37F0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v22 = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v13 = sub_2562E3850();
      *(void *)(v0 + 16) = sub_256229738(v13, v14, &v22);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      uint64_t v15 = sub_2562E3860();
      *(void *)(v0 + 24) = sub_256229738(v15, v16, &v22);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v9, v10, "#ExtensionsUtils: created executionMetadataEvent for %s with status %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v12, -1, -1);
      MEMORY[0x25A2A5190](v11, -1, -1);
    }

    objc_msgSend(*(id *)(v0 + 32), sel_setExecutionMetadataReported_, v7);
  }
  else
  {
    id v7 = sub_2562E3410();
    os_log_type_t v17 = sub_2562E3800();
    if (os_log_type_enabled(v7, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_256226000, v7, v17, "#ExtensionsUtils: Failed to generate ODDSiriSchemaODDExecutionMetadataReported event", v18, 2u);
      MEMORY[0x25A2A5190](v18, -1, -1);
    }
  }

  uint64_t v19 = *(void *)(v0 + 32);
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v19);
}

uint64_t sub_256270DF8(char *a1)
{
  return dword_2562E80D0[*a1];
}

char *_s16MetricsFramework15ExtensionsUtilsC15decodeIERoutingySaySo08SISchemaF0VGSgSSSgFZ_0(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    goto LABEL_3;
  }
  uint64_t v2 = sub_2562E35A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E3590();
  uint64_t v6 = sub_2562E3570();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 != 15)
  {
    sub_2562E2E00();
    swift_allocObject();
    uint64_t v15 = sub_2562E2DF0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
    sub_256271DF0();
    sub_2562E2DE0();
    v35[2] = v15;
    uint64_t v36 = v6;
    unint64_t v37 = v8;
    uint64_t v17 = *(void *)(v40 + 16);
    v35[1] = v40;
    uint64_t v13 = 0;
    if (v17)
    {
      uint64_t v18 = (unint64_t *)(v40 + 40);
      unint64_t v19 = 0x269F53000uLL;
      *(void *)&long long v16 = 136315138;
      long long v39 = v16;
      uint64_t v38 = MEMORY[0x263F8EE58] + 8;
      do
      {
        uint64_t v20 = *(v18 - 1);
        unint64_t v21 = *v18;
        uint64_t v22 = *(void *)(v19 + 2816);
        swift_bridgeObjectRetain();
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_2562E3430();
        __swift_project_value_buffer(v23, (uint64_t)qword_269F54D88);
        swift_bridgeObjectRetain_n();
        uint64_t v24 = sub_2562E3410();
        os_log_type_t v25 = sub_2562E3800();
        if (os_log_type_enabled(v24, v25))
        {
          unint64_t v26 = v19;
          uint64_t v27 = swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          uint64_t v40 = v28;
          *(_DWORD *)uint64_t v27 = v39;
          swift_bridgeObjectRetain();
          *(void *)(v27 + 4) = sub_256229738(v20, v21, &v40);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_256226000, v24, v25, "#ExtensionsUtils: ieRoutingString: %s", (uint8_t *)v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v28, -1, -1);
          uint64_t v29 = v27;
          unint64_t v19 = v26;
          MEMORY[0x25A2A5190](v29, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        if (!v13) {
          uint64_t v13 = (char *)MEMORY[0x263F8EE78];
        }
        uint64_t v30 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
        id v31 = v30;
        if ([v31 isEqualToString:@"IEROUTING_UNKNOWN"])
        {
          int v32 = 0;
        }
        else if ([v31 isEqualToString:@"IEROUTING_NL_ROUTER"])
        {
          int v32 = 1;
        }
        else if ([v31 isEqualToString:@"IEROUTING_FAILURE"])
        {
          int v32 = 2;
        }
        else if ([v31 isEqualToString:@"IEROUTING_SIRI_X_DIRECT"])
        {
          int v32 = 3;
        }
        else if ([v31 isEqualToString:@"IEROUTING_SIRI_X_REWRITE"])
        {
          int v32 = 4;
        }
        else if ([v31 isEqualToString:@"IEROUTING_PLANNER"])
        {
          int v32 = 5;
        }
        else if ([v31 isEqualToString:@"IEROUTING_RESPONSE_GENERATION"])
        {
          int v32 = 6;
        }
        else if ([v31 isEqualToString:@"IEROUTING_APP_INTENT"])
        {
          int v32 = 7;
        }
        else if ([v31 isEqualToString:@"IEROUTING_SEARCH_TOOL"])
        {
          int v32 = 8;
        }
        else if ([v31 isEqualToString:@"IEROUTING_SIRI_X"])
        {
          int v32 = 9;
        }
        else if ([v31 isEqualToString:@"IEROUTING_QUERY_REWRITE"])
        {
          int v32 = 10;
        }
        else if ([v31 isEqualToString:@"IEROUTING_GENERATIVE_AI"])
        {
          int v32 = 11;
        }
        else
        {
          int v32 = 0;
        }

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_25626BF50(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        unint64_t v34 = *((void *)v13 + 2);
        unint64_t v33 = *((void *)v13 + 3);
        if (v34 >= v33 >> 1) {
          uint64_t v13 = sub_25626BF50((char *)(v33 > 1), v34 + 1, 1, v13);
        }
        v18 += 2;
        *((void *)v13 + 2) = v34 + 1;
        *(_DWORD *)&v13[4 * v34 + 32] = v32;
        --v17;
      }
      while (v17);
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_256271E5C(v36, v37);
  }
  else
  {
LABEL_3:
    if (qword_269F53B00 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2562E3430();
    __swift_project_value_buffer(v9, (uint64_t)qword_269F54D88);
    os_log_type_t v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E37F0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_256226000, v10, v11, "#ExtensionsUtils: ieRoutingString is nil or its not utf8 encodable.", v12, 2u);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }

    swift_bridgeObjectRelease();
    return 0;
  }
  return v13;
}

unint64_t _s16MetricsFramework15ExtensionsUtilsC13decodeTurnIdsySay10Foundation4UUIDVGSgSSSgFZ_0(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    goto LABEL_3;
  }
  uint64_t v2 = sub_2562E35A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E3590();
  uint64_t v6 = sub_2562E3570();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 != 15)
  {
    sub_2562E2E00();
    swift_allocObject();
    uint64_t v14 = sub_2562E2DF0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
    sub_256271DF0();
    sub_2562E2DE0();
    v44[2] = v14;
    uint64_t v45 = v6;
    unint64_t v46 = v8;
    uint64_t v15 = v58;
    uint64_t v16 = *(void *)(v58 + 16);
    v44[1] = v58;
    if (v16)
    {
      uint64_t v17 = sub_2562E2FD0();
      unint64_t v55 = 0;
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void *)(v18 + 64);
      uint64_t v52 = (uint64_t (**)(char *, char *, uint64_t))(v18 + 32);
      uint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      id v50 = (void (**)(char *, char *, uint64_t))(v18 + 16);
      uint64_t v51 = v18;
      uint64_t v49 = v18 + 8;
      uint64_t v20 = (unint64_t *)(v15 + 40);
      *(void *)&long long v21 = 136315138;
      long long v48 = v21;
      uint64_t v47 = MEMORY[0x263F8EE58] + 8;
      uint64_t v57 = v17;
      uint64_t v54 = v19;
      do
      {
        uint64_t v23 = *(v20 - 1);
        unint64_t v22 = *v20;
        MEMORY[0x270FA5388](v17);
        unint64_t v24 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        MEMORY[0x270FA5388](v25 - 8);
        uint64_t v27 = (char *)v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        swift_bridgeObjectRetain();
        uint64_t v56 = (void *)v23;
        sub_2562E2F90();
        uint64_t v28 = v57;
        if ((*v53)(v27, 1, v57) == 1)
        {
          sub_2562344DC((uint64_t)v27);
          if (qword_269F53B00 != -1) {
            swift_once();
          }
          uint64_t v29 = sub_2562E3430();
          __swift_project_value_buffer(v29, (uint64_t)qword_269F54D88);
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_2562E3410();
          os_log_type_t v31 = sub_2562E3800();
          if (os_log_type_enabled(v30, v31))
          {
            uint64_t v32 = swift_slowAlloc();
            uint64_t v33 = swift_slowAlloc();
            uint64_t v58 = v33;
            *(_DWORD *)uint64_t v32 = v48;
            swift_bridgeObjectRetain();
            *(void *)(v32 + 4) = sub_256229738((uint64_t)v56, v22, &v58);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_256226000, v30, v31, "#ExtensionsUtils: Invalid UUID format for TurnId: %s", (uint8_t *)v32, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25A2A5190](v33, -1, -1);
            MEMORY[0x25A2A5190](v32, -1, -1);
          }
          else
          {

            uint64_t v17 = swift_bridgeObjectRelease_n();
          }
        }
        else
        {
          uint64_t v56 = v44;
          swift_bridgeObjectRelease();
          unint64_t v34 = *v52;
          uint64_t v35 = (*v52)((char *)v44 - v24, v27, v28);
          unint64_t v36 = v55;
          if (!v55) {
            unint64_t v36 = MEMORY[0x263F8EE78];
          }
          unint64_t v37 = v36;
          MEMORY[0x270FA5388](v35);
          (*v50)((char *)v44 - v24, (char *)v44 - v24, v28);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v37 = sub_25626BCB4(0, *(void *)(v37 + 16) + 1, 1, v37);
          }
          unint64_t v39 = *(void *)(v37 + 16);
          unint64_t v38 = *(void *)(v37 + 24);
          if (v39 >= v38 >> 1) {
            unint64_t v37 = sub_25626BCB4(v38 > 1, v39 + 1, 1, v37);
          }
          *(void *)(v37 + 16) = v39 + 1;
          uint64_t v40 = v51;
          unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          unint64_t v55 = v37;
          unint64_t v42 = v37 + v41 + *(void *)(v51 + 72) * v39;
          uint64_t v43 = v57;
          v34((char *)v42, (char *)v44 - v24, v57);
          uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))((char *)v44 - v24, v43);
        }
        v20 += 2;
        --v16;
        uint64_t v19 = v54;
      }
      while (v16);
    }
    else
    {
      unint64_t v55 = 0;
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_256271E5C(v45, v46);
    return v55;
  }
  else
  {
LABEL_3:
    if (qword_269F53B00 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2562E3430();
    __swift_project_value_buffer(v9, (uint64_t)qword_269F54D88);
    os_log_type_t v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E37F0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_256226000, v10, v11, "#ExtensionsUtils: turnIdsString is nil or its not utf8 encodable.", v12, 2u);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }

    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t type metadata accessor for ExtensionsUtils()
{
  return self;
}

uint64_t method lookup function for ExtensionsUtils(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExtensionsUtils);
}

ValueMetadata *type metadata accessor for SiriMetricsCalculatorHelper()
{
  return &type metadata for SiriMetricsCalculatorHelper;
}

unint64_t sub_256271DF0()
{
  unint64_t result = qword_269F54DD0;
  if (!qword_269F54DD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F549E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54DD0);
  }
  return result;
}

uint64_t sub_256271E5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25625B2C0(a1, a2);
  }
  return a1;
}

uint64_t AssetPenetrationSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v8 = sub_256275A44(a1, v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v8;
}

uint64_t AssetPenetrationSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_256275980(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v11;
}

uint64_t sub_256271FD8(uint64_t a1)
{
  *(void *)(v2 + 24) = v1;
  uint64_t v4 = sub_2562E3430();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = *(void *)(v4 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  *(void *)(v2 + 56) = *(void *)(type metadata accessor for AssetPenetrationData() - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  *(void *)(v2 + 72) = swift_task_alloc();
  *(_OWORD *)(v2 + 80) = *(_OWORD *)a1;
  *(void *)(v2 + 96) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_256272114, 0, 0);
}

uint64_t sub_256272114()
{
  *(void *)(v0 + 104) = OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 16) = *(void *)(v3 + 16);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v1, v2, "AssetPenetrationSELFReporter reporting results for %ld events", v4, 0xCu);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v0 + 112) = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 56);
    *(void *)(v0 + 120) = OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService;
    int v8 = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 176) = v8;
    *(void *)(v0 + 128) = *(void *)(v7 + 72);
    *(void *)(v0 + 136) = 0;
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v10 = v5 + ((v8 + 32) & ~(unint64_t)v8);
    swift_bridgeObjectRetain();
    sub_256275B44(v10, v9);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
    *(void *)(v0 + 144) = v11;
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v0 + 64);
      uint64_t v14 = *(void *)(v0 + 72);
      uint64_t v16 = *(void *)(v0 + 40);
      uint64_t v15 = *(void *)(v0 + 48);
      uint64_t v17 = *(void *)(v0 + 24);
      uint64_t v18 = *(void *)(v0 + 32);
      uint64_t v19 = (void *)(v17 + *(void *)(v0 + 120));
      uint64_t v20 = v17 + *(void *)(v0 + 104);
      sub_256231B4C(0, &qword_269F54DF0);
      sub_256275B44(v14, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v20, v18);
      id v21 = sub_256272DE8(v13, v15);
      *(void *)(v0 + 152) = v21;
      objc_msgSend(v12, sel_setAssetSetStatusDigestReported_, v21);
      sub_256231B4C(0, &qword_269F54DF8);
      sub_256275B44(v14, v13);
      unint64_t v22 = (void *)sub_256273074(v13);
      objc_msgSend(v12, sel_setEventMetadata_, v22);

      uint64_t v23 = v19[3];
      uint64_t v24 = v19[4];
      __swift_project_boxed_opaque_existential_1(v19, v23);
      uint64_t v32 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 8) + **(int **)(v24 + 8));
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_256272578;
      return v32(v12, v20, v23, v24);
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_2562E3410();
    os_log_type_t v28 = sub_2562E3800();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_256226000, v27, v28, "Failed to generate event for asset penetration", v29, 2u);
      MEMORY[0x25A2A5190](v29, -1, -1);
    }
    uint64_t v30 = *(void *)(v0 + 72);

    sub_256275BA8(v30);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_256272578()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_2562729EC;
  }
  else {
    os_log_type_t v2 = sub_25627268C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25627268C()
{
  uint64_t v1 = *(void **)(v0 + 152);

  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 136) + 1;
  sub_256275BA8(*(void *)(v0 + 72));
  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136) + 1;
  *(void *)(v0 + 136) = v5;
  sub_256275B44(*(void *)(v0 + 96)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v4 * v5, *(void *)(v0 + 72));
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  *(void *)(v0 + 144) = v6;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    unint64_t v22 = sub_2562E3410();
    os_log_type_t v23 = sub_2562E3800();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_256226000, v22, v23, "Failed to generate event for asset penetration", v24, 2u);
      MEMORY[0x25A2A5190](v24, -1, -1);
    }
    uint64_t v25 = *(void *)(v0 + 72);

    sub_256275BA8(v25);
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 24);
  uint64_t v13 = *(void *)(v0 + 32);
  uint64_t v14 = (void *)(v12 + *(void *)(v0 + 120));
  uint64_t v15 = v12 + *(void *)(v0 + 104);
  sub_256231B4C(0, &qword_269F54DF0);
  sub_256275B44(v9, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v15, v13);
  id v16 = sub_256272DE8(v8, v10);
  *(void *)(v0 + 152) = v16;
  objc_msgSend(v7, sel_setAssetSetStatusDigestReported_, v16);
  sub_256231B4C(0, &qword_269F54DF8);
  sub_256275B44(v9, v8);
  uint64_t v17 = (void *)sub_256273074(v8);
  objc_msgSend(v7, sel_setEventMetadata_, v17);

  uint64_t v18 = v14[3];
  uint64_t v19 = v14[4];
  __swift_project_boxed_opaque_existential_1(v14, v18);
  uint64_t v27 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 8) + **(int **)(v19 + 8));
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_256272578;
  return v27(v7, v15, v18, v19);
}

uint64_t sub_2562729EC()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = *(void **)(v0 + 168);
  id v6 = *(void **)(v0 + 144);
  uint64_t v5 = *(NSObject **)(v0 + 152);
  if (v3)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Failed to report asset penetration event", v7, 2u);
    MEMORY[0x25A2A5190](v7, -1, -1);
  }
  else
  {

    uint64_t v5 = v1;
  }

  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 136) + 1;
  sub_256275BA8(*(void *)(v0 + 72));
  if (v9 == v8)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  uint64_t v10 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 136) + 1;
  *(void *)(v0 + 136) = v11;
  sub_256275B44(*(void *)(v0 + 96)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v10 * v11, *(void *)(v0 + 72));
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  *(void *)(v0 + 144) = v12;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_2562E3410();
    os_log_type_t v29 = sub_2562E3800();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_256226000, v28, v29, "Failed to generate event for asset penetration", v30, 2u);
      MEMORY[0x25A2A5190](v30, -1, -1);
    }
    uint64_t v31 = *(void *)(v0 + 72);

    sub_256275BA8(v31);
    goto LABEL_13;
  }
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v18 = *(void *)(v0 + 24);
  uint64_t v19 = *(void *)(v0 + 32);
  uint64_t v20 = (void *)(v18 + *(void *)(v0 + 120));
  uint64_t v21 = v18 + *(void *)(v0 + 104);
  sub_256231B4C(0, &qword_269F54DF0);
  sub_256275B44(v15, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v21, v19);
  id v22 = sub_256272DE8(v14, v16);
  *(void *)(v0 + 152) = v22;
  objc_msgSend(v13, sel_setAssetSetStatusDigestReported_, v22);
  sub_256231B4C(0, &qword_269F54DF8);
  sub_256275B44(v15, v14);
  os_log_type_t v23 = (void *)sub_256273074(v14);
  objc_msgSend(v13, sel_setEventMetadata_, v23);

  uint64_t v24 = v20[3];
  uint64_t v25 = v20[4];
  __swift_project_boxed_opaque_existential_1(v20, v24);
  uint64_t v33 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 + 8) + **(int **)(v25 + 8));
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v26;
  void *v26 = v0;
  v26[1] = sub_256272578;
  return v33(v13, v21, v24, v25);
}

id sub_256272DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetPenetrationData();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v21 - v8;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v11 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2562E4F80;
    sub_256275B44(a1, (uint64_t)v9);
    id v13 = objc_allocWithZone(MEMORY[0x263F6E650]);
    id v14 = v11;
    id result = objc_msgSend(v13, sel_init);
    if (result)
    {
      uint64_t v15 = result;
      sub_256231B4C(0, &qword_269F54E18);
      sub_256275B44((uint64_t)v9, (uint64_t)v7);
      id v16 = v15;
      id v17 = sub_256273CA0((uint64_t)v7);
      objc_msgSend(v16, sel_setDimensions_, v17);

      sub_256275BA8((uint64_t)v9);
      *(void *)(v12 + 32) = v16;
      v21[1] = v12;
      sub_2562E3720();
      sub_256231B4C(0, &qword_269F54E20);
      uint64_t v18 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setDigests_, v18);

      sub_256231B4C(0, &qword_269F54E28);
      sub_256275B44(a1, (uint64_t)v7);
      id v19 = sub_256273AE0((uint64_t)v7);
      objc_msgSend(v14, sel_setFixedDimensions_, v19);

      uint64_t v20 = sub_2562E3430();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a2, v20);
      sub_256275BA8(a1);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_256273074(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v3 = v2;
  if (!v2)
  {
LABEL_21:
    sub_256275BA8(a1);
    return (uint64_t)v3;
  }
  id v64 = v2;
  uint64_t v4 = sub_2562E2FD0();
  id v62 = &v60;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = a1;
  id v11 = v64;
  swift_bridgeObjectRetain();
  sub_2562E2F90();
  swift_bridgeObjectRelease();
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  id v63 = v11;
  if (v12 == 1)
  {
    sub_25622F3C4((uint64_t)v10, &qword_269F53D68);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    id v13 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
    id v14 = (void *)sub_2562E2FB0();
    id v15 = objc_msgSend(v13, sel_initWithNSUUID_, v14);

    objc_msgSend(v11, sel_setDeviceAggregationId_, v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
  uint64_t v17 = sub_2562E3000();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E2FE0();
  uint64_t v21 = (void *)sub_2562E2FF0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  objc_msgSend(v16, sel_setLocale_, v21);

  id v22 = (void *)sub_2562E3550();
  objc_msgSend(v16, sel_setDateFormat_, v22);

  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54E10);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E3070();
  uint64_t v26 = sub_2562E3090();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) != 1)
  {
    uint64_t v28 = (void *)sub_2562E3080();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
  }
  objc_msgSend(v16, sel_setTimeZone_, v28);

  uint64_t v29 = sub_2562E2F80();
  id v62 = &v60;
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v29);
  swift_bridgeObjectRetain();
  uint64_t v32 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v61 = v16;
  id v33 = objc_msgSend(v16, sel_dateFromString_, v32);

  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  unint64_t v37 = (char *)&v60 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v37, 1, 1, v29);
    uint64_t v40 = v63;
    unint64_t v41 = 0x263F6E000uLL;
    goto LABEL_12;
  }
  uint64_t v60 = (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  sub_2562E2F60();

  unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v38(v37, (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v29);
  int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v37, 1, v29);
  uint64_t v40 = v63;
  unint64_t v41 = 0x263F6E000;
  if (v39 == 1)
  {
LABEL_12:
    sub_25622F3C4((uint64_t)v37, &qword_269F53DB0);
    goto LABEL_13;
  }
  unint64_t v42 = v60;
  v38(v60, v37, v29);
  uint64_t v43 = sub_2562E2F40();
  if (v44 < 0.0)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v42, v29);
LABEL_13:
    uint64_t v45 = v61;
    a1 = v65;
LABEL_14:
    uint64_t v46 = type metadata accessor for AssetPenetrationData();
    id v47 = objc_allocWithZone(*(Class *)(v41 + 3808));
    long long v48 = (void *)sub_2562E2FB0();
    id v49 = objc_msgSend(v47, sel_initWithNSUUID_, v48);

    objc_msgSend(v40, sel_setOddId_, v49);
    uint64_t v50 = a1 + *(int *)(v46 + 60);
    if (*(unsigned char *)(v50 + 8)) {
      uint64_t v51 = 0;
    }
    else {
      uint64_t v51 = *(void *)v50;
    }
    objc_msgSend(v40, sel_setUserAggregationIdRotationTimestampMs_, v51);
    uint64_t v52 = a1 + *(int *)(v46 + 64);
    if (*(unsigned char *)(v52 + 8)) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)v52;
    }
    objc_msgSend(v40, sel_setUserAggregationIdExpirationTimestampMs_, v53);

    id v3 = v64;
    goto LABEL_21;
  }
  MEMORY[0x270FA5388](v43);
  unint64_t v55 = (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E30A0();
  uint64_t result = sub_2562E2F40();
  a1 = v65;
  if ((~*(void *)&v56 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v56 <= -1.0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v56 >= 1.84467441e19)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (is_mul_ok((unint64_t)v56, 0x3E8uLL))
  {
    objc_msgSend(v40, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v56);
    uint64_t v57 = v60;
    uint64_t v58 = (void *)sub_2562A36F0();
    objc_msgSend(v40, sel_setAggregationInterval_, v58);

    uint64_t v59 = *(void (**)(char *, uint64_t))(v30 + 8);
    v59(v55, v29);
    v59(v57, v29);
    uint64_t v45 = v61;
    goto LABEL_14;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_256273940()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService;

  return __swift_destroy_boxed_opaque_existential_0(v3);
}

uint64_t AssetPenetrationSELFReporter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
  return v0;
}

uint64_t AssetPenetrationSELFReporter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);

  return swift_deallocClassInstance();
}

id sub_256273AE0(uint64_t a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v3 = result;
    if (*(void *)(a1 + 104))
    {
      id v4 = result;
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      id v6 = v5;
      if ([v6 isEqualToString:@"PROGRAMCODE_UNKNOWN"])
      {
        uint64_t v7 = 0;
      }
      else if ([v6 isEqualToString:@"PROGRAMCODE_IOS"])
      {
        uint64_t v7 = 1;
      }
      else if ([v6 isEqualToString:@"PROGRAMCODE_MACOS"])
      {
        uint64_t v7 = 2;
      }
      else if ([v6 isEqualToString:@"PROGRAMCODE_TVOS"])
      {
        uint64_t v7 = 3;
      }
      else if ([v6 isEqualToString:@"PROGRAMCODE_WATCHOS"])
      {
        uint64_t v7 = 4;
      }
      else if ([v6 isEqualToString:@"PROGRAMCODE_VISIONOS"])
      {
        uint64_t v7 = 5;
      }
      else
      {
        uint64_t v7 = 0;
      }

      objc_msgSend(v4, sel_setProgramCode_, v7);
      if (*(void *)(a1 + 72)) {
        goto LABEL_19;
      }
    }
    else
    {
      id v8 = result;
      if (*(void *)(a1 + 72))
      {
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v9 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setDeviceType_, v9);

        sub_256275BA8(a1);
        return v3;
      }
    }
    sub_256275BA8(a1);

    return v3;
  }
  __break(1u);
  return result;
}

id sub_256273CA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetPenetrationData();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v6 = result;
  if (!*(void *)(a1 + 24))
  {
    id v12 = result;
    if (!*(void *)(a1 + 136)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  sub_256231B4C(0, &qword_269F54E38);
  id v7 = v6;
  uint64_t v8 = swift_bridgeObjectRetain();
  id v9 = sub_256273E64(v8);
  objc_msgSend(v7, sel_setAssetSetStatus_, v9);

  if (*(void *)(a1 + 136))
  {
LABEL_4:
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setPreviousSystemBuild_, v10);
  }
LABEL_5:
  if ((*(unsigned char *)(a1 + 152) & 1) == 0) {
    objc_msgSend(v6, sel_setBuildInstallationTimestampInSecondsSince1970_, *(void *)(a1 + 144));
  }
  sub_256231B4C(0, &qword_269F54E30);
  sub_256275B44(a1, (uint64_t)v4);
  id v11 = sub_256274A3C(v4);
  objc_msgSend(v6, sel_setAssistantDimensions_, v11);

  sub_256275BA8(a1);
  return v6;
}

id sub_256273E64(uint64_t a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    int64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = MEMORY[0x263F8EE78];
    id v75 = result;
    uint64_t v76 = a1;
    int64_t v80 = v3;
    if (v3)
    {
      v92[0] = MEMORY[0x263F8EE78];
      id v5 = result;
      sub_2562B7514(0, v3, 0);
      uint64_t v6 = 0;
      uint64_t v7 = a1 + 32;
      uint64_t v8 = v92[0];
      unint64_t v9 = 0x263F6F000uLL;
      uint64_t v10 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
      int64_t v11 = v3;
      uint64_t v77 = a1 + 32;
      while (1)
      {
        uint64_t v12 = *(void *)(v7 + 16 * v6);
        uint64_t v13 = *(void *)(v12 + 16);
        if (v13) {
          break;
        }
        uint64_t v39 = v4;
LABEL_39:
        v92[0] = v8;
        unint64_t v41 = *(void *)(v8 + 16);
        unint64_t v40 = *(void *)(v8 + 24);
        unint64_t v42 = v41 + 1;
        if (v41 >= v40 >> 1)
        {
          uint64_t v43 = v6;
          uint64_t v44 = v7;
          sub_2562B7514(v40 > 1, v41 + 1, 1);
          uint64_t v7 = v44;
          uint64_t v6 = v43;
          int64_t v11 = v80;
          uint64_t v8 = v92[0];
        }
        ++v6;
        *(void *)(v8 + 16) = v42;
        *(void *)(v8 + 8 * v41 + 32) = v39;
        if (v6 == v11) {
          goto LABEL_44;
        }
      }
      uint64_t v78 = v6;
      uint64_t v79 = v8;
      uint64_t v91 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v81 = v13;
      sub_2562E3A70();
      uint64_t v14 = 0;
      uint64_t v82 = v12 + 32;
      while (1)
      {
        uint64_t v83 = v14;
        uint64_t v16 = v82 + 40 * v14;
        uint64_t v17 = *(void *)(v16 + 8);
        uint64_t v18 = *(void *)(v16 + 32);
        id v19 = objc_allocWithZone(*(Class *)(v9 + 304));
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id result = objc_msgSend(v19, sel_init);
        if (!result) {
          break;
        }
        id v20 = result;
        uint64_t v21 = (void *)sub_2562E3550();
        id v84 = v20;
        objc_msgSend(v20, v10[144], v21);

        if (v17)
        {
          swift_bridgeObjectRetain();
          id v22 = (void *)sub_2562E3550();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v22 = 0;
        }
        uint64_t v23 = v83;
        objc_msgSend(v84, sel_setAssetSetId_, v22, v75);

        if (v18)
        {
          uint64_t v24 = *(void *)(v18 + 16);
          if (v24)
          {
            swift_bridgeObjectRetain();
            sub_2562E3A70();
            uint64_t v25 = (void *)(v18 + 56);
            while (1)
            {
              uint64_t v27 = *((unsigned __int8 *)v25 - 8);
              uint64_t v28 = v25[1];
              uint64_t v29 = v25[5];
              uint64_t v31 = v25[6];
              uint64_t v30 = v25[7];
              id v32 = objc_allocWithZone(MEMORY[0x263F6F120]);
              uint64_t v86 = v29;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id result = objc_msgSend(v32, sel_init);
              if (!result) {
                break;
              }
              id v33 = result;
              uint64_t v34 = (void *)sub_2562E3550();
              objc_msgSend(v33, sel_setAssetName_, v34);

              objc_msgSend(v33, sel_setIsAssetPathValid_, v27);
              objc_msgSend(v33, sel_setAssetDownloadSizeInBytes_, v31);
              objc_msgSend(v33, sel_setAssetUnarchivedSizeInBytes_, v30);
              id v35 = (id)sub_2562E3550();
              if ([v35 isEqualToString:@"UAFASSETSOURCE_UNKNOWN"])
              {
                uint64_t v36 = 0;
                uint64_t v37 = v86;
              }
              else
              {
                uint64_t v37 = v86;
                if ([v35 isEqualToString:@"UAFASSETSOURCE_FACTORY_INSTALL"])
                {
                  uint64_t v36 = 1;
                }
                else if ([v35 isEqualToString:@"UAFASSETSOURCE_ROOT"])
                {
                  uint64_t v36 = 2;
                }
                else if ([v35 isEqualToString:@"UAFASSETSOURCE_TRIAL"])
                {
                  uint64_t v36 = 3;
                }
                else if ([v35 isEqualToString:@"UAFASSETSOURCE_MOBILE_ASSET"])
                {
                  uint64_t v36 = 4;
                }
                else
                {
                  uint64_t v36 = 0;
                }
              }

              objc_msgSend(v33, sel_setAssetSource_, v36);
              if (v28)
              {
                swift_bridgeObjectRetain();
                unint64_t v38 = (void *)sub_2562E3550();
                swift_bridgeObjectRelease();
              }
              else
              {
                unint64_t v38 = 0;
              }
              objc_msgSend(v33, sel_setAssetSpecifier_, v38);

              if (v37)
              {
                swift_bridgeObjectRetain();
                uint64_t v26 = (void *)sub_2562E3550();
                swift_bridgeObjectRelease_n();
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v26 = 0;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              objc_msgSend(v33, sel_setAssetVersion_, v26);

              sub_2562E3A50();
              sub_2562E3A80();
              sub_2562E3A90();
              sub_2562E3A60();
              v25 += 11;
              if (!--v24)
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v4 = MEMORY[0x263F8EE78];
                unint64_t v9 = 0x263F6F000;
                uint64_t v10 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
                uint64_t v23 = v83;
                goto LABEL_36;
              }
            }
            __break(1u);
            break;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_36:
          sub_256231B4C(0, &qword_269F54E58);
          id v15 = (void *)sub_2562E36F0();
        }
        else
        {
          swift_bridgeObjectRelease();
          id v15 = 0;
        }
        uint64_t v14 = v23 + 1;
        swift_bridgeObjectRelease();
        objc_msgSend(v84, sel_setAssets_, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_2562E3A50();
        sub_2562E3A80();
        sub_2562E3A90();
        sub_2562E3A60();
        if (v14 == v81)
        {
          uint64_t v39 = v91;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v8 = v79;
          int64_t v11 = v80;
          uint64_t v6 = v78;
          uint64_t v7 = v77;
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    unint64_t v42 = *(void *)(MEMORY[0x263F8EE78] + 16);
    id v45 = result;
    uint64_t v8 = v4;
    if (v42)
    {
LABEL_44:
      swift_bridgeObjectRetain();
      uint64_t v46 = 0;
      uint64_t v47 = MEMORY[0x263F8EE78];
      do
      {
        unint64_t v48 = *(void *)(v8 + 8 * v46++ + 32);
        v92[0] = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_256275140(v48, (uint64_t (*)(uint64_t, void, unint64_t))sub_25627553C);
        swift_bridgeObjectRelease();
      }
      while (v42 != v46);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_256231B4C(0, &qword_269F54E40);
    id v49 = (void *)sub_2562E36F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v75, sel_setUafAssetSets_, v49);

    if (v80)
    {
      sub_2562B74E4(0, v80, 0);
      int64_t v50 = v80;
      uint64_t v51 = 0;
      uint64_t v52 = v76 + 32;
      uint64_t v53 = v4;
      do
      {
        uint64_t v54 = *(void *)(v52 + 16 * v51 + 8);
        if (v54)
        {
          uint64_t v90 = v4;
          uint64_t v89 = *(void *)(v54 + 16);
          if (v89)
          {
            uint64_t v85 = v51;
            uint64_t v87 = v53;
            uint64_t v88 = v54 + 32;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v55 = 0;
            while (1)
            {
              uint64_t v56 = *(void *)(v88 + 24 * v55 + 16);
              id v57 = objc_allocWithZone(MEMORY[0x263F6F150]);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              id result = objc_msgSend(v57, sel_init);
              if (!result) {
                goto LABEL_76;
              }
              id v58 = result;
              uint64_t v59 = (void *)sub_2562E3550();
              objc_msgSend(v58, sel_setSubscriberName_, v59);

              uint64_t v60 = *(void *)(v56 + 16);
              if (v60)
              {
                swift_bridgeObjectRetain();
                sub_2562E3A70();
                sub_256231B4C(0, &qword_269F54E50);
                id v61 = (uint64_t *)(v56 + 64);
                do
                {
                  uint64_t v62 = *(v61 - 4);
                  uint64_t v63 = *(v61 - 3);
                  uint64_t v64 = *(v61 - 2);
                  uint64_t v65 = *(v61 - 1);
                  uint64_t v66 = *v61;
                  v61 += 5;
                  v92[0] = v62;
                  v92[1] = v63;
                  v92[2] = v64;
                  v92[3] = v65;
                  v92[4] = v66;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_256274C14(v92);
                  sub_2562E3A50();
                  sub_2562E3A80();
                  sub_2562E3A90();
                  sub_2562E3A60();
                  --v60;
                }
                while (v60);
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_256231B4C(0, &qword_269F54E50);
              uint64_t v67 = (void *)sub_2562E36F0();
              swift_bridgeObjectRelease();
              objc_msgSend(v58, sel_setSubscriptions_, v67);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              MEMORY[0x25A2A4400]();
              if (*(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_2562E3730();
              }
              ++v55;
              sub_2562E3750();
              sub_2562E3720();
              if (v55 == v89)
              {
                swift_bridgeObjectRelease();
                uint64_t v68 = v90;
                uint64_t v4 = MEMORY[0x263F8EE78];
                uint64_t v51 = v85;
                uint64_t v53 = v87;
                uint64_t v52 = v76 + 32;
                goto LABEL_64;
              }
            }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v68 = v4;
LABEL_64:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          int64_t v50 = v80;
        }
        else
        {
          uint64_t v68 = v4;
        }
        unint64_t v70 = *(void *)(v53 + 16);
        unint64_t v69 = *(void *)(v53 + 24);
        if (v70 >= v69 >> 1)
        {
          sub_2562B74E4(v69 > 1, v70 + 1, 1);
          int64_t v50 = v80;
        }
        ++v51;
        *(void *)(v53 + 16) = v70 + 1;
        *(void *)(v53 + 8 * v70 + 32) = v68;
      }
      while (v51 != v50);
      swift_bridgeObjectRelease();
      uint64_t v71 = *(void *)(v53 + 16);
      if (!v71) {
        goto LABEL_73;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v53 = MEMORY[0x263F8EE78];
      uint64_t v71 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v71)
      {
LABEL_73:
        swift_bridgeObjectRelease();
        sub_256231B4C(0, &qword_269F54E48);
        uint64_t v74 = (void *)sub_2562E36F0();
        swift_bridgeObjectRelease();
        objc_msgSend(v75, sel_setUafAssetSubscriptions_, v74);

        return v75;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v72 = 0;
    do
    {
      unint64_t v73 = *(void *)(v53 + 8 * v72++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_256275140(v73, (uint64_t (*)(uint64_t, void, unint64_t))sub_25627531C);
      swift_bridgeObjectRelease();
    }
    while (v71 != v72);
    swift_bridgeObjectRelease();
    goto LABEL_73;
  }
LABEL_77:
  __break(1u);
  return result;
}

id sub_256274A3C(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    int64_t v3 = result;
    if (a1[11])
    {
      id v4 = result;
      swift_bridgeObjectRetain();
      id v5 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setSystemBuild_, v5);
    }
    else
    {
      id v6 = result;
    }
    if (*(void *)((char *)a1 + *(int *)(type metadata accessor for AssetPenetrationData() + 56) + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      id v8 = v7;
      if ([v8 isEqualToString:@"UNKNOWN"])
      {
        uint64_t v9 = 0;
      }
      else if ([v8 isEqualToString:@"OPTED_IN"])
      {
        uint64_t v9 = 1;
      }
      else if ([v8 isEqualToString:@"OPTED_OUT"])
      {
        uint64_t v9 = 2;
      }
      else if ([v8 isEqualToString:@"DISMISSED"])
      {
        uint64_t v9 = 3;
      }
      else
      {
        uint64_t v9 = 0;
      }

      objc_msgSend(v3, sel_setDataSharingOptInStatus_, v9);
    }
    uint64_t v10 = a1[15];
    if (v10)
    {
      uint64_t v11 = a1[14];
      swift_bridgeObjectRetain();
      id v12 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v11, v10);
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setSiriInputLocale_, v12);

      sub_256275BA8((uint64_t)a1);
    }
    else
    {
      sub_256275BA8((uint64_t)a1);
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_256274C14(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result) {
    goto LABEL_26;
  }
  id v3 = result;
  id v4 = (void *)sub_2562E3550();
  objc_msgSend(v3, sel_setSubscriptionName_, v4);

  uint64_t v5 = a1[2];
  uint64_t v26 = v5;
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_2562E3A70();
    uint64_t v7 = v5 + 32;
    do
    {
      v7 += 4;
      sub_2562E3DA0();
      sub_2562E3A50();
      sub_2562E3A80();
      sub_2562E3A90();
      sub_2562E3A60();
      --v6;
    }
    while (v6);
    sub_256275D1C((uint64_t)&v26);
  }
  sub_256231B4C(0, (unint64_t *)&qword_269F53EB0);
  id v8 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAssetSetIndices_, v8);

  uint64_t v9 = a1[3];
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v25 = a1;
      swift_bridgeObjectRetain();
      sub_2562E3A70();
      uint64_t v11 = v9 + 56;
      while (1)
      {
        id v12 = objc_allocWithZone(MEMORY[0x263F6F148]);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id result = objc_msgSend(v12, sel_init);
        if (!result) {
          break;
        }
        v11 += 32;
        id v13 = result;
        uint64_t v14 = (void *)sub_2562E3550();
        objc_msgSend(v13, sel_setUsageName_, v14);

        id v15 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_setUsageValue_, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_2562E3A50();
        sub_2562E3A80();
        sub_2562E3A90();
        sub_2562E3A60();
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          a1 = v25;
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
LABEL_12:
    sub_256231B4C(0, &qword_269F54E68);
    uint64_t v16 = (void *)sub_2562E36F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  objc_msgSend(v3, sel_setAssetSetUsages_, v16, v25);

  uint64_t v17 = a1[4];
  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_256275D1C((uint64_t)&v26);
    uint64_t v24 = 0;
LABEL_23:
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setUsageAliases_, v24);

    return v3;
  }
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_256275D1C((uint64_t)&v26);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_22:
    sub_256231B4C(0, &qword_269F54E60);
    uint64_t v24 = (void *)sub_2562E36F0();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_2562E3A70();
  uint64_t v19 = v17 + 56;
  while (1)
  {
    id v20 = objc_allocWithZone(MEMORY[0x263F6F158]);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id result = objc_msgSend(v20, sel_init);
    if (!result) {
      break;
    }
    v19 += 32;
    id v21 = result;
    id v22 = (void *)sub_2562E3550();
    objc_msgSend(v21, sel_setAliasName_, v22);

    uint64_t v23 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAliasValue_, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_2562E3A50();
    sub_2562E3A80();
    sub_2562E3A90();
    sub_2562E3A60();
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      sub_256275D1C((uint64_t)&v26);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_256275140(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = v6 + v5;
  if (__OFADD__(v6, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  uint64_t v6 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v6 = 1;
  }
  if (v8 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v7) {
      uint64_t v11 = v7;
    }
    swift_bridgeObjectRetain();
    *uint64_t v2 = MEMORY[0x25A2A4750](v6, v11, 1, v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = *v2 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
    unint64_t v8 = *v2;
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_2562E3720();
}

uint64_t sub_25627531C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_256275D48(&qword_269F54E78, &qword_269F54E70);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269F54E70);
          id v12 = sub_25627575C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_256231B4C(0, &qword_269F54E48);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_25627553C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2562E3AD0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_256275D48(&qword_269F54E88, &qword_269F54E80);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269F54E80);
          id v12 = sub_2562757C8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_256231B4C(0, &qword_269F54E40);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t (*sub_25627575C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_256275878(v6, a2, a3);
  return sub_2562757C4;
}

uint64_t (*sub_2562757C8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2562758F8(v6, a2, a3);
  return sub_2562757C4;
}

void sub_256275830(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_256275878(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25A2A4740](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_256275D98;
  }
  __break(1u);
  return result;
}

void (*sub_2562758F8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25A2A4740](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_256275978;
  }
  __break(1u);
  return result;
}

void sub_256275978(id *a1)
{
}

uint64_t sub_256275980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_reportingService);
  v9[3] = a4;
  v9[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v11 = a3 + OBJC_IVAR____TtC16MetricsFramework28AssetPenetrationSELFReporter_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  return a3;
}

uint64_t sub_256275A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssetPenetrationSELFReporter();
  uint64_t v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_256275980(a1, (uint64_t)v11, v12, a4, a5);
}

uint64_t sub_256275B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetPenetrationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256275BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetPenetrationData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256275C04()
{
  return type metadata accessor for AssetPenetrationSELFReporter();
}

uint64_t type metadata accessor for AssetPenetrationSELFReporter()
{
  uint64_t result = qword_269F54E00;
  if (!qword_269F54E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256275C58()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AssetPenetrationSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetPenetrationSELFReporter);
}

uint64_t dispatch thunk of AssetPenetrationSELFReporter.__allocating_init(logger:reportingService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_256275D1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_256275D48(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SpeakerIdSamplingDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SpeakerIdSamplingDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_256275E98()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256275EB8, 0, 0);
}

uint64_t sub_256275EB8()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SpeakerIdSamplingDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t SpeakerIdSamplingDataProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SpeakerIdSamplingDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_25627609C()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_256275EB8, 0, 0);
}

unint64_t sub_2562760C4()
{
  unint64_t result = qword_269F54EA0;
  if (!qword_269F54EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54EA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakerIdSamplingDataDataRecord()
{
  return &type metadata for SpeakerIdSamplingDataDataRecord;
}

uint64_t sub_256276128()
{
  return type metadata accessor for SpeakerIdSamplingDataProvider();
}

uint64_t type metadata accessor for SpeakerIdSamplingDataProvider()
{
  uint64_t result = qword_269F54EB0;
  if (!qword_269F54EB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSamplingDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingDataProvider);
}

uint64_t dispatch thunk of SpeakerIdSamplingDataProvider.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SpeakerIdSamplingDataProvider.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t SiriDigestMetricsSELFReporter.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_256276F88(a1, v2);
  swift_release();
  return v3;
}

uint64_t sub_256276300(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25627636C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2562763B8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25627640C())()
{
  return j__swift_endAccess;
}

uint64_t SiriDigestMetricsSELFReporter.init(logger:)(uint64_t a1)
{
  uint64_t v2 = sub_256276F88(a1, v1);
  swift_release();
  return v2;
}

uint64_t sub_25627649C(uint64_t a1)
{
  *(void *)(v2 + 64) = v1;
  *(_OWORD *)(v2 + 72) = *(_OWORD *)a1;
  *(void *)(v2 + 88) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_2562764CC, 0, 0);
}

uint64_t sub_2562764CC()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 64);
  long long v13 = *(_OWORD *)(v0 + 72);
  uint64_t v14 = v1;
  uint64_t v3 = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  uint64_t v4 = sub_256278A7C((uint64_t)&v13, v2 + v3);
  uint64_t v5 = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents;
  *(void *)(v0 + 104) = OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents;
  uint64_t v6 = (uint64_t *)(v2 + v5);
  swift_beginAccess();
  *uint64_t v6 = v4;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_2562E3410();
  os_log_type_t v8 = sub_2562E37F0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_256226000, v7, v8, "#SiriDigestMetricsSELFReporter: Start Emitting extension execution metadata event", v9, 2u);
    MEMORY[0x25A2A5190](v9, -1, -1);
  }

  uint64_t v12 = (uint64_t (*)(int, int))((char *)&dword_269F54DA8 + dword_269F54DA8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_25627665C;
  return v12(1, 1);
}

uint64_t sub_25627665C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25627675C, 0, 0);
}

uint64_t sub_25627675C()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    uint64_t v2 = (void *)(v0[8] + v0[13]);
    swift_beginAccess();
    id v3 = v1;
    MEMORY[0x25A2A4400]();
    if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2562E3730();
    }
    sub_2562E3750();
    sub_2562E3720();
    swift_endAccess();
    uint64_t v4 = sub_2562E3410();
    os_log_type_t v5 = sub_2562E37F0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_256226000, v4, v5, "#SiriDigestMetricsSELFReporter: Emitting extension execution metadata event", v6, 2u);
      MEMORY[0x25A2A5190](v6, -1, -1);
    }
  }
  else
  {
    uint64_t v4 = sub_2562E3410();
    uint64_t v7 = sub_2562E3800();
    if (os_log_type_enabled(v4, (os_log_type_t)v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl(&dword_256226000, v4, (os_log_type_t)v7, "Unable to create execution metadata event", v8, 2u);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }
  }

  unint64_t v9 = *(void *)(v0[8] + v0[13]);
  v0[16] = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2562E3AD0();
    v0[17] = v17;
    if (v17) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[17] = v10;
    if (v10)
    {
LABEL_11:
      uint64_t v11 = v0[8];
      v0[18] = *(void *)(v11 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_reportingService);
      uint64_t v12 = v0[16];
      if ((v12 & 0xC000000000000001) != 0)
      {
        id v13 = (id)MEMORY[0x25A2A4740](0);
        uint64_t v11 = v0[8];
      }
      else
      {
        id v13 = *(id *)(v12 + 32);
      }
      v0[19] = v13;
      v0[20] = 1;
      uint64_t v14 = v0[12];
      uint64_t v15 = (void *)swift_task_alloc();
      v0[21] = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_256276A60;
      return sub_2562492A0((uint64_t)v13, v11 + v14);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_256276A60()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_256276CB4;
  }
  else
  {
    uint64_t v2 = sub_256276B7C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_256276B7C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);

  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    id v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 128);
    if ((v6 & 0xC000000000000001) != 0) {
      id result = (id)MEMORY[0x25A2A4740](*(void *)(v0 + 160));
    }
    else {
      id result = *(id *)(v6 + 8 * v5 + 32);
    }
    uint64_t v7 = (uint64_t)result;
    *(void *)(v0 + 152) = result;
    *(void *)(v0 + 160) = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = *(void *)(v0 + 96);
      uint64_t v9 = *(void *)(v0 + 64);
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_256276A60;
      return (id)sub_2562492A0(v7, v9 + v8);
    }
  }
  return result;
}

uint64_t sub_256276CB4()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3800();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Unable to report event", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = *(void **)(v0 + 152);

  swift_willThrow();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_256276DA0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t SiriDigestMetricsSELFReporter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SiriDigestMetricsSELFReporter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t SiriDigestMetricsSELFAdapter.deinit()
{
  return v0;
}

uint64_t SiriDigestMetricsSELFAdapter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_256276F88(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents) = MEMORY[0x263F8EE78];
  uint64_t v4 = a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_logger;
  uint64_t v5 = sub_2562E3430();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  type metadata accessor for SELFReportingService();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = self;
  swift_retain();
  v7[3] = objc_msgSend(v8, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  id v9 = objc_msgSend(self, sel_sharedAnalytics);
  id v10 = objc_msgSend(v9, sel_defaultMessageStream);

  v7[2] = v10;
  v7[4] = 0xD000000000000027;
  _OWORD v7[5] = 0x80000002562EBB60;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  *(void *)(a2 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_reportingService) = v7;
  return a2;
}

void *sub_256277114(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E730]), sel_init);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = type metadata accessor for DeviceUsageMetrics(0);
    if (*(void *)(a1 + *(int *)(v4 + 24) + 8))
    {
      uint64_t v5 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setDeviceType_, v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + *(int *)(v4 + 28));
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v3, sel_setProgramCode_, *v6);
    }
  }
  else
  {
    uint64_t v7 = sub_2562E3410();
    os_log_type_t v8 = sub_2562E3800();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_256226000, v7, v8, "Unable to compose ODDSiriSchemaODDFixedDimensions SELF Event", v9, 2u);
      MEMORY[0x25A2A5190](v9, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_256277240(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E680]), sel_init);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    if (*(void *)(a1 + v4[9] + 8))
    {
      uint64_t v5 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setSystemBuild_, v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + v4[10]);
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v3, sel_setDataSharingOptInStatus_, *v6);
    }
    uint64_t v7 = (unsigned int *)(a1 + v4[11]);
    if ((v7[1] & 1) == 0) {
      objc_msgSend(v3, sel_setViewInterface_, *v7);
    }
    if (*(void *)(a1 + v4[12] + 8))
    {
      os_log_type_t v8 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setAudioInterfaceVendorId_, v8);
    }
    if (*(void *)(a1 + v4[13] + 8))
    {
      id v9 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setAudioInterfaceProductId_, v9);
    }
    id v10 = (unsigned int *)(a1 + v4[14]);
    if ((v10[1] & 1) == 0) {
      objc_msgSend(v3, sel_setAsrLocation_, *v10);
    }
    uint64_t v11 = (unsigned int *)(a1 + v4[15]);
    if ((v11[1] & 1) == 0) {
      objc_msgSend(v3, sel_setNlLocation_, *v11);
    }
    if (*(void *)(a1 + v4[16])) {
      objc_msgSend(v3, sel_setSiriInputLocale_);
    }
    if (*(void *)(a1 + v4[18] + 8))
    {
      uint64_t v12 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setSubDomain_, v12);
    }
    id v13 = (unsigned int *)(a1 + v4[34]);
    if ((v13[1] & 1) == 0) {
      objc_msgSend(v3, sel_setResponseCategory_, *v13);
    }
    int v14 = *(unsigned __int8 *)(a1 + v4[36]);
    if (v14 != 2) {
      objc_msgSend(v3, sel_setIsIntelligenceEngineRequest_, v14 & 1);
    }
    uint64_t v15 = *(void *)(a1 + v4[37]);
    if (v15)
    {
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v16; ++i)
        {
          uint64_t v18 = *(unsigned int *)(v15 + 4 * i + 32);
          objc_msgSend(v3, sel_addRouting_, v18);
        }
        swift_bridgeObjectRelease();
      }
      id v19 = v3;
      id v20 = sub_2562E3410();
      os_log_type_t v21 = sub_2562E37E0();
      if (os_log_type_enabled(v20, v21))
      {
        id v22 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v22 = 134217984;
        objc_msgSend(v19, sel_routingCount);
        sub_2562E38F0();

        _os_log_impl(&dword_256226000, v20, v21, "#MetricsSELFReporter: oddAssistantDimensions.IERouting count is %ld", v22, 0xCu);
        MEMORY[0x25A2A5190](v22, -1, -1);
      }
      else
      {
      }
    }
    uint64_t v26 = (unsigned int *)(a1 + v4[38]);
    if ((v26[1] & 1) == 0) {
      objc_msgSend(v3, sel_setInvocationSource_, *v26);
    }
  }
  else
  {
    uint64_t v23 = sub_2562E3410();
    os_log_type_t v24 = sub_2562E3800();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_256226000, v23, v24, "Unable to compose ODDSiriSchemaODDAssistantDimensions SELF Event", v25, 2u);
      MEMORY[0x25A2A5190](v25, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_256277624(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E788]), sel_init);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = type metadata accessor for DeviceUsageMetrics(0);
    uint64_t v5 = (unsigned int *)(a1 + *(int *)(v4 + 76));
    if ((v5[1] & 1) == 0) {
      objc_msgSend(v3, sel_setTotalTurnCount_, *v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + *(int *)(v4 + 80));
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v3, sel_setValidTurnCount_, *v6);
    }
  }
  else
  {
    uint64_t v7 = sub_2562E3410();
    os_log_type_t v8 = sub_2562E3800();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_256226000, v7, v8, "Unable to compose ODDSiriSchemaODDTurnCounts SELF Event", v9, 2u);
      MEMORY[0x25A2A5190](v9, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_256277740(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E778]), sel_init);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    uint64_t v5 = (unsigned int *)(a1 + v4[21]);
    if ((v5[1] & 1) == 0) {
      objc_msgSend(v3, sel_setSiriTasksStarted_, *v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + v4[22]);
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v3, sel_setSiriTasksCompleted_, *v6);
    }
    uint64_t v7 = (unsigned int *)(a1 + v4[23]);
    if ((v7[1] & 1) == 0) {
      objc_msgSend(v3, sel_setFlowTasksStarted_, *v7);
    }
    os_log_type_t v8 = (unsigned int *)(a1 + v4[24]);
    if ((v8[1] & 1) == 0) {
      objc_msgSend(v3, sel_setFlowTasksCompleted_, *v8);
    }
  }
  else
  {
    id v9 = sub_2562E3410();
    os_log_type_t v10 = sub_2562E3800();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_256226000, v9, v10, "Unable to compose ODDSiriSchemaODDTaskCounts SELF Event", v11, 2u);
      MEMORY[0x25A2A5190](v11, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_2562778A4(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E738]), sel_init);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    uint64_t v5 = (unsigned int *)(a1 + v4[25]);
    if ((v5[1] & 1) == 0) {
      objc_msgSend(v3, sel_setReliabilityRequestCount_, *v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + v4[26]);
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v3, sel_setReliabilityTurnCount_, *v6);
    }
    uint64_t v7 = (unsigned int *)(a1 + v4[27]);
    if ((v7[1] & 1) == 0) {
      objc_msgSend(v3, sel_setClientErrorCount_, *v7);
    }
    os_log_type_t v8 = (unsigned int *)(a1 + v4[28]);
    if ((v8[1] & 1) == 0) {
      objc_msgSend(v3, sel_setUndesiredResponseCount_, *v8);
    }
    id v9 = (unsigned int *)(a1 + v4[29]);
    if ((v9[1] & 1) == 0) {
      objc_msgSend(v3, sel_setFatalResponseCount_, *v9);
    }
    os_log_type_t v10 = (unsigned int *)(a1 + v4[30]);
    if ((v10[1] & 1) == 0) {
      objc_msgSend(v3, sel_setFailureResponseCount_, *v10);
    }
    uint64_t v11 = (unsigned int *)(a1 + v4[31]);
    if ((v11[1] & 1) == 0) {
      objc_msgSend(v3, sel_setSiriUnavailableResponseCount_, *v11);
    }
  }
  else
  {
    uint64_t v12 = sub_2562E3410();
    os_log_type_t v13 = sub_2562E3800();
    if (os_log_type_enabled(v12, v13))
    {
      int v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v14 = 0;
      _os_log_impl(&dword_256226000, v12, v13, "Unable to compose ODDSiriSchemaODDReliabilityCounts SELF Event", v14, 2u);
      MEMORY[0x25A2A5190](v14, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_256277A74(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E668]), sel_init);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = sub_256277624(a1);
    objc_msgSend(v3, sel_setTurnCounts_, v4);

    uint64_t v5 = sub_256277740(a1);
    objc_msgSend(v3, sel_setTaskCounts_, v5);

    uint64_t v6 = sub_2562778A4(a1);
    objc_msgSend(v3, sel_setReliabilityCounts_, v6);
  }
  else
  {
    uint64_t v6 = sub_2562E3410();
    os_log_type_t v7 = sub_2562E3800();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl(&dword_256226000, v6, v7, "Unable to compose ODDSiriSchemaODDAssistantCounts SELF Event", v8, 2u);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }
    id v3 = 0;
  }

  return v3;
}

id sub_256277BB0(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E678]), sel_init);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_256277240(a1);
    objc_msgSend(v5, sel_setDimensions_, v6);

    os_log_type_t v7 = sub_256277A74(a1);
    objc_msgSend(v5, sel_setCounts_, v7);

    id v8 = objc_msgSend(self, sel_sharedPreferences);
    unsigned int v9 = objc_msgSend(v8, sel_longLivedIdentifierUploadingEnabled);

    if (v9)
    {
      uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for DeviceUsageMetrics(0) + 140));
      if (v10)
      {
        uint64_t v36[3] = a2;
        id v41 = v5;
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        v36[1] = v36;
        MEMORY[0x270FA5388](v11 - 8);
        os_log_type_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v14 = *(void *)(v10 + 16);
        v36[2] = v10;
        if (v14)
        {
          uint64_t v15 = sub_2562E2FD0();
          uint64_t v16 = *(void *)(v15 - 8);
          uint64_t v17 = v16;
          uint64_t v18 = v10 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
          uint64_t v37 = *(void *)(v16 + 72);
          unint64_t v40 = (void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
          uint64_t v20 = v16 + 16;
          id v19 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
          uint64_t v38 = v20;
          uint64_t v39 = v19;
          v36[4] = v17 + 8;
          v36[5] = v17 + 32;
          swift_bridgeObjectRetain();
          while (1)
          {
            v39(v13, v18, v15);
            (*v40)(v13, 0, 1, v15);
            uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v15);
            if (v21 == 1) {
              break;
            }
            MEMORY[0x270FA5388](v21);
            uint64_t v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v13, v15);
            id v24 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
            uint64_t v25 = (void *)sub_2562E2FB0();
            id v26 = objc_msgSend(v24, sel_initWithNSUUID_, v25);

            (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v15);
            objc_msgSend(v41, sel_addTurnIds_, v26);

            v18 += v37;
            if (!--v14) {
              goto LABEL_14;
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
LABEL_14:
          uint64_t v31 = sub_2562E2FD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
        }
        swift_bridgeObjectRelease();
        id v5 = v41;
        id v32 = v41;
        id v33 = sub_2562E3410();
        os_log_type_t v34 = sub_2562E37E0();
        if (os_log_type_enabled(v33, v34))
        {
          id v35 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v35 = 134217984;
          id v42 = objc_msgSend(v32, sel_turnIdsCount);
          sub_2562E38F0();

          _os_log_impl(&dword_256226000, v33, v34, "#MetricsSELFReporter: Added %ld turnIds to ODDAssistantDigest.", v35, 0xCu);
          MEMORY[0x25A2A5190](v35, -1, -1);
        }
        else
        {
        }
      }
    }
  }
  else
  {
    uint64_t v27 = sub_2562E3410();
    os_log_type_t v28 = sub_2562E3800();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_256226000, v27, v28, "#MetricsSELFReporter: Unable to compose ODDSiriSchemaODDAssistantDigest SELF Event", v29, 2u);
      MEMORY[0x25A2A5190](v29, -1, -1);
    }

    return 0;
  }
  return v5;
}

void *sub_256278090(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6F0]), sel_init);
  if (v2)
  {
    id v3 = v2;
    id v4 = (int *)type metadata accessor for DeviceUsageMetrics(0);
    if (*(void *)(a1 + v4[9] + 8))
    {
      id v5 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setSystemBuild_, v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + v4[10]);
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v3, sel_setDataSharingOptInStatus_, *v6);
    }
    os_log_type_t v7 = (unsigned int *)(a1 + v4[11]);
    if ((v7[1] & 1) == 0) {
      objc_msgSend(v3, sel_setViewInterface_, *v7);
    }
    if (*(void *)(a1 + v4[12] + 8))
    {
      id v8 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setAudioInterfaceVendorId_, v8);
    }
    if (*(void *)(a1 + v4[13] + 8))
    {
      unsigned int v9 = (void *)sub_2562E3550();
      objc_msgSend(v3, sel_setAudioInterfaceProductId_, v9);
    }
    uint64_t v10 = (unsigned int *)(a1 + v4[14]);
    if ((v10[1] & 1) == 0) {
      objc_msgSend(v3, sel_setAsrLocation_, *v10);
    }
    if (*(void *)(a1 + v4[17])) {
      objc_msgSend(v3, sel_setDictationLocale_);
    }
  }
  else
  {
    uint64_t v11 = sub_2562E3410();
    os_log_type_t v12 = sub_2562E3800();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v13 = 0;
      _os_log_impl(&dword_256226000, v11, v12, "Unable to compose ODDSiriSchemaODDDictationDimensions SELF Event", v13, 2u);
      MEMORY[0x25A2A5190](v13, -1, -1);
    }

    return 0;
  }
  return v3;
}

void *sub_256278288(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6D8]), sel_init);
  if (v2)
  {
    id v3 = v2;
    id v4 = sub_256277624(a1);
    objc_msgSend(v3, sel_setTurnCounts_, v4);
  }
  else
  {
    id v4 = sub_2562E3410();
    os_log_type_t v5 = sub_2562E3800();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_256226000, v4, v5, "Unable to compose ODDSiriSchemaODDDictationCounts SELF Event", v6, 2u);
      MEMORY[0x25A2A5190](v6, -1, -1);
    }
    id v3 = 0;
  }

  return v3;
}

id sub_256278374(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6E8]), sel_init);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_256278090(a1);
    objc_msgSend(v5, sel_setDimensions_, v6);

    os_log_type_t v7 = sub_256278288(a1);
    objc_msgSend(v5, sel_setCounts_, v7);

    id v8 = objc_msgSend(self, sel_sharedPreferences);
    unsigned int v9 = objc_msgSend(v8, sel_longLivedIdentifierUploadingEnabled);

    if (v9)
    {
      uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for DeviceUsageMetrics(0) + 140));
      if (v10)
      {
        uint64_t v36[3] = a2;
        id v41 = v5;
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        v36[1] = v36;
        MEMORY[0x270FA5388](v11 - 8);
        os_log_type_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v14 = *(void *)(v10 + 16);
        v36[2] = v10;
        if (v14)
        {
          uint64_t v15 = sub_2562E2FD0();
          uint64_t v16 = *(void *)(v15 - 8);
          uint64_t v17 = v16;
          uint64_t v18 = v10 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
          uint64_t v37 = *(void *)(v16 + 72);
          unint64_t v40 = (void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
          uint64_t v20 = v16 + 16;
          id v19 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
          uint64_t v38 = v20;
          uint64_t v39 = v19;
          v36[4] = v17 + 8;
          v36[5] = v17 + 32;
          swift_bridgeObjectRetain();
          while (1)
          {
            v39(v13, v18, v15);
            (*v40)(v13, 0, 1, v15);
            uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v15);
            if (v21 == 1) {
              break;
            }
            MEMORY[0x270FA5388](v21);
            uint64_t v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v13, v15);
            id v24 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
            uint64_t v25 = (void *)sub_2562E2FB0();
            id v26 = objc_msgSend(v24, sel_initWithNSUUID_, v25);

            (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v15);
            objc_msgSend(v41, sel_addTurnIds_, v26);

            v18 += v37;
            if (!--v14) {
              goto LABEL_14;
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
LABEL_14:
          uint64_t v31 = sub_2562E2FD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
        }
        swift_bridgeObjectRelease();
        id v5 = v41;
        id v32 = v41;
        id v33 = sub_2562E3410();
        os_log_type_t v34 = sub_2562E37E0();
        if (os_log_type_enabled(v33, v34))
        {
          id v35 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v35 = 134217984;
          id v42 = objc_msgSend(v32, sel_turnIdsCount);
          sub_2562E38F0();

          _os_log_impl(&dword_256226000, v33, v34, "#MetricsSELFReporter: Added %ld turnIds to ODDDictationDigest.", v35, 0xCu);
          MEMORY[0x25A2A5190](v35, -1, -1);
        }
        else
        {
        }
      }
    }
  }
  else
  {
    uint64_t v27 = sub_2562E3410();
    os_log_type_t v28 = sub_2562E3800();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_256226000, v27, v28, "Unable to compose ODDSiriSchemaODDDictationDigest SELF Event", v29, 2u);
      MEMORY[0x25A2A5190](v29, -1, -1);
    }

    return 0;
  }
  return v5;
}

NSObject *sub_256278854(uint64_t a1, uint64_t a2, Class *a3, uint64_t (*a4)(uint64_t, uint64_t), const char *a5, const char *a6)
{
  uint64_t v11 = objc_msgSend(objc_allocWithZone(*a3), sel_init);
  if (!v11)
  {
    uint64_t v12 = sub_2562E3410();
    os_log_type_t v20 = sub_2562E3800();
    if (os_log_type_enabled(v12, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_256226000, v12, v20, a6, v21, 2u);
      MEMORY[0x25A2A5190](v21, -1, -1);
    }
    goto LABEL_13;
  }
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
    uint64_t v22 = sub_2562E3410();
    os_log_type_t v23 = sub_2562E3800();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl(&dword_256226000, v22, v23, a5, v24, 2u);
      MEMORY[0x25A2A5190](v24, -1, -1);
    }

LABEL_13:
    return 0;
  }
  uint64_t v14 = *(void *)(type metadata accessor for DeviceUsageMetrics(0) - 8);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = sub_256277114(v15);
  [v12 setFixedDimensions:v16];

  uint64_t v17 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v18 = a4(v15, a2);
    if (v18)
    {
      id v19 = (void *)v18;
      [v12 addDigests:v18];
    }
    v15 += v17;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_256278A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v174 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54EF0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v178 = (uint64_t)v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v177 = (char *)v157 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v157 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v157 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v166 = (char *)v157 - v17;
  uint64_t v173 = type metadata accessor for EventMetadata(0);
  uint64_t v18 = *(void *)(v173 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v173);
  uint64_t v175 = (char *)v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v176 = (uint64_t)v157 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v157 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v165 = (uint64_t)v157 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v157 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v169 = (uint64_t)v157 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v159 = (uint64_t)v157 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v168 = (uint64_t)v157 - v35;
  int64_t v179 = type metadata accessor for DeviceUsageMetrics(0);
  uint64_t v36 = MEMORY[0x270FA5388](v179);
  uint64_t v162 = (uint64_t)v157 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v161 = (uint64_t)v157 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)v157 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v47 = (char *)v157 - v46;
  uint64_t v48 = *(void *)(a1 + 16);
  uint64_t v49 = *(void *)(v48 + 16);
  if (!v49)
  {
    uint64_t v153 = sub_2562E3410();
    os_log_type_t v154 = sub_2562E37E0();
    if (os_log_type_enabled(v153, v154))
    {
      uint64_t v155 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v155 = 0;
      _os_log_impl(&dword_256226000, v153, v154, "No On-Device Digest metrics available", v155, 2u);
      MEMORY[0x25A2A5190](v155, -1, -1);
    }

    return MEMORY[0x263F8EE78];
  }
  uint64_t v171 = v45;
  int v163 = v25;
  uint64_t v185 = MEMORY[0x263F8EE78];
  unint64_t v183 = MEMORY[0x263F8EE80];
  unint64_t v184 = MEMORY[0x263F8EE80];
  unint64_t v160 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v50 = v48 + v160;
  unint64_t v180 = *(void *)(v44 + 72);
  uint64_t v181 = v18;
  uint64_t v172 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v157[1] = v48;
  swift_bridgeObjectRetain();
  uint64_t v164 = v16;
  uint64_t v51 = (uint64_t)v166;
  uint64_t v167 = v30;
  uint64_t v52 = v169;
  uint64_t v170 = v43;
  uint64_t v158 = v12;
  do
  {
    sub_25627A280(v50, (uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
    int v53 = v47[*(int *)(v179 + 32)];
    if (v53 != 2)
    {
      if (v53 != 1)
      {
        sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
        goto LABEL_4;
      }
      sub_25627A280((uint64_t)v47, (uint64_t)v43, type metadata accessor for DeviceUsageMetrics);
      sub_25627A3B0((uint64_t)v43, v51);
      if ((*v172)(v51, 1, v173) == 1)
      {
        sub_25627A350((uint64_t)v43, type metadata accessor for DeviceUsageMetrics);
        sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
        sub_25625BBA8(v51);
        goto LABEL_4;
      }
      uint64_t v55 = v168;
      sub_25627A418(v51, v168, type metadata accessor for EventMetadata);
      unint64_t v56 = v184;
      if (*(void *)(v184 + 16))
      {
        sub_256256488(v55);
        if (v57) {
          goto LABEL_31;
        }
      }
      uint64_t v58 = v159;
      sub_25627A280(v55, v159, type metadata accessor for EventMetadata);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v182[0] = v56;
      unint64_t v184 = 0x8000000000000000;
      unint64_t v61 = sub_256256488(v58);
      uint64_t v62 = *(void *)(v56 + 16);
      BOOL v63 = (v60 & 1) == 0;
      uint64_t v64 = v62 + v63;
      if (__OFADD__(v62, v63)) {
        goto LABEL_125;
      }
      char v65 = v60;
      if (*(void *)(v56 + 24) < v64)
      {
        sub_256286E68(v64, isUniquelyReferenced_nonNull_native);
        unint64_t v66 = sub_256256488(v58);
        if ((v65 & 1) != (v67 & 1)) {
          goto LABEL_131;
        }
        unint64_t v61 = v66;
        uint64_t v68 = (void *)v182[0];
        if ((v65 & 1) == 0) {
          goto LABEL_17;
        }
LABEL_29:
        uint64_t v88 = v68[7];
        swift_bridgeObjectRelease();
        *(void *)(v88 + 8 * v61) = MEMORY[0x263F8EE78];
        uint64_t v58 = v159;
LABEL_30:
        unint64_t v184 = (unint64_t)v68;
        swift_bridgeObjectRelease();
        sub_25627A350(v58, type metadata accessor for EventMetadata);
        uint64_t v55 = v168;
        uint64_t v52 = v169;
        uint64_t v43 = v170;
LABEL_31:
        sub_25627A280(v55, v52, type metadata accessor for EventMetadata);
        uint64_t v90 = sub_256281FAC(v182, v52);
        if (*v89)
        {
          uint64_t v91 = v89;
          sub_25627A280((uint64_t)v43, v161, type metadata accessor for DeviceUsageMetrics);
          unint64_t v92 = *v91;
          char v93 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v91 = v92;
          if ((v93 & 1) == 0)
          {
            unint64_t v92 = sub_25626C094(0, *(void *)(v92 + 16) + 1, 1, v92);
            unint64_t *v91 = v92;
          }
          unint64_t v95 = *(void *)(v92 + 16);
          unint64_t v94 = *(void *)(v92 + 24);
          uint64_t v12 = v158;
          if (v95 >= v94 >> 1)
          {
            unint64_t v92 = sub_25626C094(v94 > 1, v95 + 1, 1, v92);
            unint64_t *v91 = v92;
          }
          uint64_t v16 = v164;
          *(void *)(v92 + 16) = v95 + 1;
          sub_25627A418(v161, v92 + v160 + v95 * v180, type metadata accessor for DeviceUsageMetrics);
          ((void (*)(void *, void))v90)(v182, 0);
          uint64_t v52 = v169;
          sub_25627A350(v169, type metadata accessor for EventMetadata);
          sub_25627A350(v168, type metadata accessor for EventMetadata);
          uint64_t v43 = v170;
          sub_25627A350((uint64_t)v170, type metadata accessor for DeviceUsageMetrics);
          sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
          uint64_t v51 = (uint64_t)v166;
        }
        else
        {
          ((void (*)(void *, void))v90)(v182, 0);
          sub_25627A350(v52, type metadata accessor for EventMetadata);
          sub_25627A350(v55, type metadata accessor for EventMetadata);
          sub_25627A350((uint64_t)v43, type metadata accessor for DeviceUsageMetrics);
          sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
          uint64_t v16 = v164;
          uint64_t v51 = (uint64_t)v166;
          uint64_t v12 = v158;
        }
        goto LABEL_4;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v68 = (void *)v182[0];
        if (v60) {
          goto LABEL_29;
        }
      }
      else
      {
        sub_256288A9C();
        uint64_t v68 = (void *)v182[0];
        if (v65) {
          goto LABEL_29;
        }
      }
LABEL_17:
      v68[(v61 >> 6) + 8] |= 1 << v61;
      sub_25627A280(v58, v68[6] + *(void *)(v181 + 72) * v61, type metadata accessor for EventMetadata);
      *(void *)(v68[7] + 8 * v61) = MEMORY[0x263F8EE78];
      uint64_t v69 = v68[2];
      BOOL v70 = __OFADD__(v69, 1);
      uint64_t v71 = v69 + 1;
      if (v70) {
        goto LABEL_127;
      }
      v68[2] = v71;
      goto LABEL_30;
    }
    uint64_t v54 = v171;
    sub_25627A280((uint64_t)v47, v171, type metadata accessor for DeviceUsageMetrics);
    sub_25627A3B0(v54, (uint64_t)v16);
    if ((*v172)((uint64_t)v16, 1, v173) == 1)
    {
      sub_25627A350(v54, type metadata accessor for DeviceUsageMetrics);
      sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
      sub_25625BBA8((uint64_t)v16);
      uint64_t v43 = v170;
      goto LABEL_4;
    }
    uint64_t v72 = (uint64_t)v167;
    sub_25627A418((uint64_t)v16, (uint64_t)v167, type metadata accessor for EventMetadata);
    unint64_t v73 = v183;
    if (!*(void *)(v183 + 16) || (sub_256256488(v72), (v74 & 1) == 0))
    {
      uint64_t v75 = v165;
      sub_25627A280(v72, v165, type metadata accessor for EventMetadata);
      char v76 = swift_isUniquelyReferenced_nonNull_native();
      v182[0] = v73;
      unint64_t v183 = 0x8000000000000000;
      unint64_t v78 = sub_256256488(v75);
      uint64_t v79 = *(void *)(v73 + 16);
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80)) {
        goto LABEL_126;
      }
      char v82 = v77;
      if (*(void *)(v73 + 24) < v81)
      {
        sub_256286E68(v81, v76);
        unint64_t v83 = sub_256256488(v165);
        if ((v82 & 1) != (v84 & 1)) {
          goto LABEL_131;
        }
        unint64_t v78 = v83;
        uint64_t v85 = (void *)v182[0];
        if ((v82 & 1) == 0) {
          goto LABEL_25;
        }
LABEL_40:
        uint64_t v96 = v85[7];
        swift_bridgeObjectRelease();
        *(void *)(v96 + 8 * v78) = MEMORY[0x263F8EE78];
LABEL_41:
        unint64_t v183 = (unint64_t)v85;
        swift_bridgeObjectRelease();
        sub_25627A350(v165, type metadata accessor for EventMetadata);
        uint64_t v72 = (uint64_t)v167;
        goto LABEL_42;
      }
      if (v76)
      {
        uint64_t v85 = (void *)v182[0];
        if (v77) {
          goto LABEL_40;
        }
      }
      else
      {
        sub_256288A9C();
        uint64_t v85 = (void *)v182[0];
        if (v82) {
          goto LABEL_40;
        }
      }
LABEL_25:
      v85[(v78 >> 6) + 8] |= 1 << v78;
      sub_25627A280(v165, v85[6] + *(void *)(v181 + 72) * v78, type metadata accessor for EventMetadata);
      *(void *)(v85[7] + 8 * v78) = MEMORY[0x263F8EE78];
      uint64_t v86 = v85[2];
      BOOL v70 = __OFADD__(v86, 1);
      uint64_t v87 = v86 + 1;
      if (v70) {
        goto LABEL_128;
      }
      v85[2] = v87;
      goto LABEL_41;
    }
LABEL_42:
    uint64_t v97 = (uint64_t)v163;
    sub_25627A280(v72, (uint64_t)v163, type metadata accessor for EventMetadata);
    uint64_t v99 = sub_256281FAC(v182, v97);
    if (*v98)
    {
      char v100 = v98;
      sub_25627A280(v171, v162, type metadata accessor for DeviceUsageMetrics);
      unint64_t v101 = *v100;
      char v102 = swift_isUniquelyReferenced_nonNull_native();
      *char v100 = v101;
      if ((v102 & 1) == 0)
      {
        unint64_t v101 = sub_25626C094(0, *(void *)(v101 + 16) + 1, 1, v101);
        *char v100 = v101;
      }
      unint64_t v104 = *(void *)(v101 + 16);
      unint64_t v103 = *(void *)(v101 + 24);
      if (v104 >= v103 >> 1)
      {
        unint64_t v101 = sub_25626C094(v103 > 1, v104 + 1, 1, v101);
        *char v100 = v101;
      }
      uint64_t v16 = v164;
      *(void *)(v101 + 16) = v104 + 1;
      sub_25627A418(v162, v101 + v160 + v104 * v180, type metadata accessor for DeviceUsageMetrics);
      ((void (*)(void *, void))v99)(v182, 0);
      sub_25627A350((uint64_t)v163, type metadata accessor for EventMetadata);
      sub_25627A350((uint64_t)v167, type metadata accessor for EventMetadata);
      sub_25627A350(v171, type metadata accessor for DeviceUsageMetrics);
      sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
    }
    else
    {
      ((void (*)(void *, void))v99)(v182, 0);
      sub_25627A350(v97, type metadata accessor for EventMetadata);
      sub_25627A350(v72, type metadata accessor for EventMetadata);
      sub_25627A350(v171, type metadata accessor for DeviceUsageMetrics);
      sub_25627A350((uint64_t)v47, type metadata accessor for DeviceUsageMetrics);
      uint64_t v16 = v164;
    }
    uint64_t v51 = (uint64_t)v166;
    uint64_t v52 = v169;
    uint64_t v43 = v170;
LABEL_4:
    v50 += v180;
    --v49;
  }
  while (v49);
  swift_bridgeObjectRelease();
  uint64_t v105 = *(void *)(v184 + 64);
  uint64_t v173 = v184 + 64;
  uint64_t v106 = 1 << *(unsigned char *)(v184 + 32);
  uint64_t v107 = -1;
  if (v106 < 64) {
    uint64_t v107 = ~(-1 << v106);
  }
  unint64_t v108 = v107 & v105;
  int64_t v179 = (unint64_t)(v106 + 63) >> 6;
  unint64_t v180 = v184;
  uint64_t v172 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 - 1);
  swift_bridgeObjectRetain();
  int64_t v109 = 0;
  while (2)
  {
    if (v108)
    {
      unint64_t v110 = __clz(__rbit64(v108));
      v108 &= v108 - 1;
      unint64_t v111 = v110 | (v109 << 6);
      goto LABEL_60;
    }
    int64_t v115 = v109 + 1;
    if (__OFADD__(v109, 1))
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    if (v115 >= v179) {
      goto LABEL_78;
    }
    unint64_t v116 = *(void *)(v173 + 8 * v115);
    if (!v116)
    {
      int64_t v117 = v109 + 2;
      ++v109;
      if (v115 + 1 < v179)
      {
        unint64_t v116 = *(void *)(v173 + 8 * v117);
        if (v116)
        {
LABEL_67:
          int64_t v115 = v117;
          goto LABEL_64;
        }
        int64_t v109 = v115 + 1;
        if (v115 + 2 < v179)
        {
          unint64_t v116 = *(void *)(v173 + 8 * (v115 + 2));
          if (v116)
          {
            v115 += 2;
            goto LABEL_64;
          }
          int64_t v117 = v115 + 3;
          int64_t v109 = v115 + 2;
          if (v115 + 3 < v179)
          {
            unint64_t v116 = *(void *)(v173 + 8 * v117);
            if (v116) {
              goto LABEL_67;
            }
            while (1)
            {
              int64_t v115 = v117 + 1;
              if (__OFADD__(v117, 1)) {
                goto LABEL_129;
              }
              if (v115 >= v179) {
                break;
              }
              unint64_t v116 = *(void *)(v173 + 8 * v115);
              ++v117;
              if (v116) {
                goto LABEL_64;
              }
            }
            int64_t v109 = (int64_t)v172;
          }
        }
      }
LABEL_78:
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54EF8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v10, 1, 1, v118);
      unint64_t v108 = 0;
      goto LABEL_79;
    }
LABEL_64:
    unint64_t v108 = (v116 - 1) & v116;
    unint64_t v111 = __clz(__rbit64(v116)) + (v115 << 6);
    int64_t v109 = v115;
LABEL_60:
    unint64_t v112 = v180;
    sub_25627A280(*(void *)(v180 + 48) + *(void *)(v181 + 72) * v111, (uint64_t)v10, type metadata accessor for EventMetadata);
    uint64_t v113 = *(void *)(v112 + 56);
    uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54EF8);
    *(void *)&v10[*(int *)(v114 + 48)] = *(void *)(v113 + 8 * v111);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v10, 0, 1, v114);
    swift_bridgeObjectRetain();
LABEL_79:
    sub_25627A2E8((uint64_t)v10, (uint64_t)v12);
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54EF8);
    uint64_t v120 = *(void *)(v119 - 8);
    char v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
    if (v121(v12, 1, v119) != 1)
    {
      uint64_t v122 = *(void *)&v12[*(int *)(v119 + 48)];
      uint64_t v123 = v176;
      sub_25627A418((uint64_t)v12, v176, type metadata accessor for EventMetadata);
      id v124 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
      if (v124)
      {
        uint64_t v125 = v124;
        if (*(void *)(v122 + 16))
        {
          id v126 = EventMetadata.transformToODDClientEventMetadata()();
          objc_msgSend(v125, sel_setEventMetadata_, v126);
          uint64_t v127 = sub_256278854(v122, v174, (Class *)0x263F6E670, (uint64_t (*)(uint64_t, uint64_t))sub_256277BB0, "Assistant Device Digest Metrics is empty. Unable to compose ODDSiriSchemaODDAssistantDeviceDigestsReported SELF Event", "Unable to compose ODDSiriSchemaODDAssistantDeviceDigestsReported SELF Event");
          swift_bridgeObjectRelease();
          objc_msgSend(v125, sel_setAssistantDeviceDigestReported_, v127);

          id v128 = v125;
          MEMORY[0x25A2A4400]();
          if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2562E3730();
          }
          sub_2562E3750();
          sub_2562E3720();

          sub_25627A350(v123, type metadata accessor for EventMetadata);
        }
        else
        {
          sub_25627A350(v123, type metadata accessor for EventMetadata);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_25627A350(v123, type metadata accessor for EventMetadata);
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  swift_release();
  unint64_t v129 = v183;
  uint64_t v130 = *(void *)(v183 + 64);
  uint64_t v172 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 64);
  uint64_t v131 = 1 << *(unsigned char *)(v183 + 32);
  uint64_t v132 = -1;
  if (v131 < 64) {
    uint64_t v132 = ~(-1 << v131);
  }
  unint64_t v133 = v132 & v130;
  char v134 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56);
  uint64_t v176 = (unint64_t)(v131 + 63) >> 6;
  uint64_t v171 = v176 - 1;
  swift_bridgeObjectRetain();
  uint64_t v135 = 0;
  uint64_t v136 = (uint64_t)v175;
  uint64_t v173 = (uint64_t)v134;
  while (2)
  {
    uint64_t v138 = (uint64_t)v177;
    uint64_t v137 = v178;
    if (v133)
    {
      unint64_t v139 = __clz(__rbit64(v133));
      v133 &= v133 - 1;
      unint64_t v140 = v139 | (v135 << 6);
      goto LABEL_92;
    }
    uint64_t v141 = v135 + 1;
    if (__OFADD__(v135, 1)) {
      goto LABEL_124;
    }
    if (v141 >= v176) {
      goto LABEL_110;
    }
    unint64_t v142 = (unint64_t)v172[v141];
    if (v142)
    {
LABEL_96:
      unint64_t v133 = (v142 - 1) & v142;
      unint64_t v140 = __clz(__rbit64(v142)) + (v141 << 6);
      uint64_t v135 = v141;
LABEL_92:
      sub_25627A280(*(void *)(v129 + 48) + *(void *)(v181 + 72) * v140, v178, type metadata accessor for EventMetadata);
      *(void *)(v137 + *(int *)(v119 + 48)) = *(void *)(*(void *)(v129 + 56) + 8 * v140);
      (*v134)(v137, 0, 1, v119);
      swift_bridgeObjectRetain();
      uint64_t v136 = (uint64_t)v175;
LABEL_111:
      sub_25627A2E8(v137, v138);
      if (v121((char *)v138, 1, v119) == 1)
      {
        swift_release();
        uint64_t v152 = v185;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v152;
      }
      uint64_t v144 = *(void *)(v138 + *(int *)(v119 + 48));
      sub_25627A418(v138, v136, type metadata accessor for EventMetadata);
      id v145 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
      if (v145)
      {
        id v146 = v145;
        if (*(void *)(v144 + 16))
        {
          int64_t v179 = v135;
          unint64_t v147 = v129;
          uint64_t v148 = v136;
          id v149 = EventMetadata.transformToODDClientEventMetadata()();
          objc_msgSend(v146, sel_setEventMetadata_, v149);
          v150 = sub_256278854(v144, v174, (Class *)0x263F6E6E0, (uint64_t (*)(uint64_t, uint64_t))sub_256278374, "Received empty DeviceUsageMetrics. Not going to compose ODDSiriSchemaODDDictationDeviceDigestsReported SELF Event", "Unable to compose ODDSiriSchemaODDDictationDeviceDigestsReported SELF Event");
          swift_bridgeObjectRelease();
          objc_msgSend(v146, sel_setDictationDeviceDigestReported_, v150);

          id v151 = v146;
          MEMORY[0x25A2A4400]();
          if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2562E3730();
          }
          sub_2562E3750();
          sub_2562E3720();

          sub_25627A350(v148, type metadata accessor for EventMetadata);
          uint64_t v136 = v148;
          unint64_t v129 = v147;
          char v134 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v173;
          uint64_t v135 = v179;
        }
        else
        {
          sub_25627A350(v136, type metadata accessor for EventMetadata);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_25627A350(v136, type metadata accessor for EventMetadata);
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  uint64_t v143 = v135 + 2;
  ++v135;
  if (v141 + 1 >= v176) {
    goto LABEL_110;
  }
  unint64_t v142 = (unint64_t)v172[v143];
  if (v142)
  {
LABEL_99:
    uint64_t v141 = v143;
    goto LABEL_96;
  }
  uint64_t v135 = v141 + 1;
  if (v141 + 2 >= v176) {
    goto LABEL_110;
  }
  unint64_t v142 = (unint64_t)v172[v141 + 2];
  if (v142)
  {
    v141 += 2;
    goto LABEL_96;
  }
  uint64_t v143 = v141 + 3;
  uint64_t v135 = v141 + 2;
  if (v141 + 3 >= v176)
  {
LABEL_110:
    (*v134)(v178, 1, 1, v119);
    unint64_t v133 = 0;
    goto LABEL_111;
  }
  unint64_t v142 = (unint64_t)v172[v143];
  if (v142) {
    goto LABEL_99;
  }
  while (1)
  {
    uint64_t v141 = v143 + 1;
    if (__OFADD__(v143, 1)) {
      break;
    }
    if (v141 >= v176)
    {
      uint64_t v135 = v171;
      goto LABEL_110;
    }
    unint64_t v142 = (unint64_t)v172[v141];
    ++v143;
    if (v142) {
      goto LABEL_96;
    }
  }
LABEL_130:
  __break(1u);
LABEL_131:
  uint64_t result = sub_2562E3CD0();
  __break(1u);
  return result;
}

uint64_t sub_25627A0FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC16MetricsFramework29SiriDigestMetricsSELFReporter_oddSiriClientEvents);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25627A158()
{
  return type metadata accessor for SiriDigestMetricsSELFReporter();
}

uint64_t type metadata accessor for SiriDigestMetricsSELFReporter()
{
  uint64_t result = qword_269F54EE0;
  if (!qword_269F54EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SiriDigestMetricsSELFReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetricsSELFReporter);
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.oddSiriClientEvents.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.oddSiriClientEvents.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.oddSiriClientEvents.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SiriDigestMetricsSELFReporter.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t type metadata accessor for SiriDigestMetricsSELFAdapter()
{
  return self;
}

uint64_t method lookup function for SiriDigestMetricsSELFAdapter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetricsSELFAdapter);
}

uint64_t sub_25627A280(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25627A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25627A350(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25627A3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25627A418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t DeviceExperimentMetrics.convertToSELFEvents()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ExperimentDigest(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventMetadata(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (unint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = MEMORY[0x263F8EE78];
  sub_25622F360(v0, (uint64_t)v8, &qword_269F54398);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_25622F3C4((uint64_t)v8, &qword_269F54398);
    return MEMORY[0x263F8EE78];
  }
  sub_25627C4D0((uint64_t)v8, v12);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E770]), sel_init);
  if (!v14)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    goto LABEL_62;
  }
  uint64_t v15 = v14;
  id v16 = EventMetadata.transformToODDClientEventMetadata()();
  objc_msgSend(v15, sel_setEventMetadata_, v16);

  uint64_t v17 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E698]), sel_init);
  uint64_t v18 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E708]), sel_init);
  if (v17)
  {
    uint64_t v19 = (unsigned int *)(v1 + *(int *)(type metadata accessor for DeviceExperimentMetrics(0) + 20));
    if (*((unsigned char *)v19 + 4)) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = *v19;
    }
    objc_msgSend(v17, sel_setDigestType_, v20);
  }
  unint64_t v92 = v17;
  if (v18)
  {
    uint64_t v21 = (unsigned int *)(v1 + *(int *)(type metadata accessor for DeviceExperimentMetrics(0) + 20));
    if (*((unsigned char *)v21 + 4)) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = *v21;
    }
    objc_msgSend(v18, sel_setDigestType_, v22);
  }
  unint64_t v94 = v18;
  id v95 = v15;
  uint64_t v89 = (uint64_t *)v5;
  uint64_t v90 = v3;
  uint64_t v88 = v2;
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E728]), sel_init);
  uint64_t v24 = (int *)type metadata accessor for DeviceExperimentMetrics(0);
  if (*(void *)(v1 + v24[6] + 8) && v23)
  {
    id v25 = v23;
    uint64_t v26 = (void *)sub_2562E3550();
    objc_msgSend(v25, sel_setExperimentId_, v26);
  }
  id v93 = v23;
  uint64_t v27 = sub_2562E2FD0();
  unint64_t v108 = &v81;
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v101 = v29;
  uint64_t v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v1 + v24[7];
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v84 = v33;
  uint64_t v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25622F360(v31, (uint64_t)v34, &qword_269F53D68);
  unint64_t v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v104 = v28 + 48;
  int v35 = v103(v34, 1, v27);
  uint64_t v107 = v27;
  uint64_t v87 = v28;
  if (v35 == 1)
  {
    sub_25622F3C4((uint64_t)v34, &qword_269F53D68);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v34, v27);
    id v36 = v93;
    if (v93)
    {
      id v37 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      id v38 = v36;
      uint64_t v39 = (void *)sub_2562E2FB0();
      id v40 = objc_msgSend(v37, sel_initWithNSUUID_, v39);

      uint64_t v28 = v87;
      objc_msgSend(v38, sel_setTreatmentId_, v40);
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v107);
  }
  uint64_t v41 = v88;
  uint64_t v42 = v1 + v24[8];
  uint64_t v44 = v89;
  uint64_t v43 = v90;
  uint64_t v45 = v92;
  if ((*(unsigned char *)(v42 + 8) & 1) == 0) {
    objc_msgSend(v93, sel_setDeploymentId_, *(void *)v42);
  }
  id v46 = v93;
  objc_msgSend(v45, sel_setExperimentFixedDimensions_, v93);
  objc_msgSend(v94, sel_setExperimentFixedDimensions_, v46);
  id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E730]), sel_init);
  id v48 = v47;
  uint64_t v49 = *(void *)(v1 + v24[9] + 8);
  id v91 = v47;
  if (v49 && v47)
  {
    id v50 = v91;
    uint64_t v51 = (void *)sub_2562E3550();
    objc_msgSend(v50, sel_setDeviceType_, v51);

    uint64_t v45 = v92;
    id v48 = v91;
  }
  uint64_t v52 = (unsigned int *)(v1 + v24[10]);
  if ((v52[1] & 1) == 0)
  {
    objc_msgSend(v48, sel_setProgramCode_, *v52);
    id v48 = v91;
  }
  int v53 = (char *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
  objc_msgSend(v45, sel_setFixedDimensions_, v48);
  objc_msgSend(v94, sel_setFixedDimensions_, v48);
  uint64_t v54 = *(void *)(v1 + v24[11]);
  if (!v54 || (uint64_t v106 = *(void *)(v54 + 16)) == 0)
  {
LABEL_60:
    int v53 = (char *)v95;
    MEMORY[0x25A2A4400]();
    if (*(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_65;
    }
    goto LABEL_61;
  }
  unint64_t v82 = v12;
  uint64_t v105 = v54 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
  uint64_t v100 = v87 + 16;
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
  uint64_t v96 = (void (**)(char *, uint64_t))(v87 + 8);
  uint64_t v97 = (void (**)(char *, char *, uint64_t))(v87 + 32);
  swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  uint64_t v56 = v107;
  while (v12 < *(void *)(v54 + 16))
  {
    sub_25627C554(v105 + *(void *)(v43 + 72) * v12, (uint64_t)v44);
    int v53 = (char *)v44[1];
    if (v53)
    {
      uint64_t v61 = *v44;
      BOOL v62 = *v44 == 0x4E41545349535341 && v53 == (char *)0xE900000000000054;
      if (v62 || (sub_2562E3C90() & 1) != 0)
      {
        id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E690]), sel_init);
        if (!v63) {
          goto LABEL_38;
        }
        uint64_t v64 = v63;
        id v65 = sub_25627CDA0((uint64_t)v44, (Class *)0x263F6E6A0, (uint64_t (*)(uint64_t))sub_25627C618, (SEL *)&selRef_setAssistantDimensions_);
        objc_msgSend(v64, sel_setDimensions_, v65);

        id v66 = sub_25627CACC((uint64_t)v44);
        objc_msgSend(v64, sel_setCounts_, v66);

        id v67 = sub_25627D148((uint64_t)v44, (Class *)0x263F6E6A8);
        unint64_t v108 = (uint64_t *)v64;
        objc_msgSend(v64, sel_setTuples_, v67);

        int v53 = (char *)objc_msgSend(self, sel_sharedPreferences);
        LODWORD(v64) = objc_msgSend(v53, sel_longLivedIdentifierUploadingEnabled);

        if (v64)
        {
          uint64_t v68 = *(uint64_t *)((char *)v44 + *(int *)(v41 + 152));
          if (v68)
          {
            uint64_t v85 = &v81;
            uint64_t v69 = MEMORY[0x270FA5388](v68);
            uint64_t v71 = (char *)&v81 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
            int v53 = *(char **)(v69 + 16);
            uint64_t v86 = v69;
            if (v53)
            {
              unint64_t v83 = (unint64_t)v55 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
              unint64_t v72 = v69 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
              uint64_t v98 = *(void *)(v87 + 72);
              char v102 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
              swift_bridgeObjectRetain();
              unint64_t v99 = v12;
              while (1)
              {
                v102(v71, v72, v56);
                char v57 = *v55;
                (*v55)(v71, 0, 1, v56);
                uint64_t v73 = v103(v71, 1, v56);
                if (v73 == 1) {
                  break;
                }
                MEMORY[0x270FA5388](v73);
                uint64_t v75 = (char *)&v81 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
                (*v97)(v75, v71, v56);
                id v76 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
                char v77 = (void *)sub_2562E2FB0();
                id v78 = objc_msgSend(v76, sel_initWithNSUUID_, v77);

                uint64_t v56 = v107;
                (*v96)(v75, v107);
                unint64_t v12 = v99;
                objc_msgSend(v108, sel_addTurnIds_, v78);

                v72 += v98;
                if (!--v53) {
                  goto LABEL_34;
                }
              }
            }
            else
            {
              char v57 = *v55;
              swift_bridgeObjectRetain();
LABEL_34:
              v57(v71, 1, 1, v56);
            }
            swift_bridgeObjectRelease();
            uint64_t v41 = v88;
            uint64_t v44 = v89;
            uint64_t v43 = v90;
            uint64_t v45 = v92;
          }
        }
        uint64_t v58 = v108;
        objc_msgSend(v45, sel_addDigests_, v108);
        uint64_t v59 = &selRef_setAssistantExperimentDigestReported_;
        char v60 = v45;
      }
      else
      {
        if ((v61 != 0x4F49544154434944 || v53 != (char *)0xE90000000000004ELL) && (sub_2562E3C90() & 1) == 0) {
          goto LABEL_38;
        }
        uint64_t v79 = (uint64_t *)sub_25627D368((uint64_t)v44);
        if (!v79) {
          goto LABEL_38;
        }
        uint64_t v58 = v79;
        int v53 = v94;
        objc_msgSend(v94, sel_addDigests_, v79);
        uint64_t v59 = &selRef_setDictationExperimentDigestsReported_;
        char v60 = v53;
      }
      objc_msgSend(v95, *v59, v60);
    }
LABEL_38:
    ++v12;
    sub_25627C5B8((uint64_t)v44, type metadata accessor for ExperimentDigest);
    if (v12 == v106)
    {
      swift_bridgeObjectRelease();
      unint64_t v12 = v82;
      goto LABEL_60;
    }
  }
  __break(1u);
LABEL_65:
  sub_2562E3730();
LABEL_61:
  sub_2562E3750();
  sub_2562E3720();

  uint64_t v13 = v109;
LABEL_62:
  sub_25627C5B8(v12, type metadata accessor for EventMetadata);
  return v13;
}

__n128 sub_25627B08C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, int a12, char a13, int a14, char a15, long long a16, uint64_t a17, uint64_t a18, int a19, char a20,int a21,char a22,__int16 a23,__int16 a24,uint64_t a25,char a26,uint64_t a27,int a28,char a29,int a30,char a31,int a32,char a33,int a34,char a35,int a36,char a37,int a38,char a39,int a40,char a41,int a42,char a43,int a44,char a45,int a46,char a47,int a48,char a49,int a50,char a51,int a52,char a53,int a54,char a55,int a56,char a57,long long *a58,uint64_t a59)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 36) = BYTE4(a5) & 1;
  *(_DWORD *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 44) = BYTE4(a6) & 1;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(_DWORD *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 84) = a13 & 1;
  *(_DWORD *)(a9 + 88) = a14;
  *(unsigned char *)(a9 + 92) = a15 & 1;
  *(void *)(a9 + 112) = a17;
  *(void *)(a9 + 120) = a18;
  *(_DWORD *)(a9 + 128) = a19;
  *(unsigned char *)(a9 + 132) = a20 & 1;
  *(_DWORD *)(a9 + 136) = a21;
  *(unsigned char *)(a9 + 140) = a22 & 1;
  *(_WORD *)(a9 + 141) = a24;
  long long v78 = *a58;
  __n128 v79 = (__n128)a58[1];
  uint64_t v80 = *((void *)a58 + 4);
  *(_OWORD *)(a9 + 96) = a16;
  char v60 = (int *)type metadata accessor for ExperimentDigest(0);
  sub_2562363FC(a25, a9 + v60[19]);
  *(unsigned char *)(a9 + v60[20]) = a26;
  *(void *)(a9 + v60[21]) = a27;
  uint64_t v61 = a9 + v60[22];
  *(_DWORD *)uint64_t v61 = a28;
  *(unsigned char *)(v61 + 4) = a29 & 1;
  uint64_t v62 = a9 + v60[23];
  *(_DWORD *)uint64_t v62 = a30;
  *(unsigned char *)(v62 + 4) = a31 & 1;
  uint64_t v63 = a9 + v60[24];
  *(_DWORD *)uint64_t v63 = a32;
  *(unsigned char *)(v63 + 4) = a33 & 1;
  uint64_t v64 = a9 + v60[25];
  *(_DWORD *)uint64_t v64 = a34;
  *(unsigned char *)(v64 + 4) = a35 & 1;
  uint64_t v65 = a9 + v60[26];
  *(_DWORD *)uint64_t v65 = a36;
  *(unsigned char *)(v65 + 4) = a37 & 1;
  uint64_t v66 = a9 + v60[27];
  *(_DWORD *)uint64_t v66 = a38;
  *(unsigned char *)(v66 + 4) = a39 & 1;
  uint64_t v67 = a9 + v60[28];
  *(_DWORD *)uint64_t v67 = a40;
  *(unsigned char *)(v67 + 4) = a41 & 1;
  uint64_t v68 = a9 + v60[29];
  *(_DWORD *)uint64_t v68 = a42;
  *(unsigned char *)(v68 + 4) = a43 & 1;
  uint64_t v69 = a9 + v60[30];
  *(_DWORD *)uint64_t v69 = a44;
  *(unsigned char *)(v69 + 4) = a45 & 1;
  uint64_t v70 = a9 + v60[31];
  *(_DWORD *)uint64_t v70 = a46;
  *(unsigned char *)(v70 + 4) = a47 & 1;
  uint64_t v71 = a9 + v60[32];
  *(_DWORD *)uint64_t v71 = a48;
  *(unsigned char *)(v71 + 4) = a49 & 1;
  uint64_t v72 = a9 + v60[33];
  *(_DWORD *)uint64_t v72 = a50;
  *(unsigned char *)(v72 + 4) = a51 & 1;
  uint64_t v73 = a9 + v60[34];
  *(_DWORD *)uint64_t v73 = a52;
  *(unsigned char *)(v73 + 4) = a53 & 1;
  uint64_t v74 = a9 + v60[35];
  *(_DWORD *)uint64_t v74 = a54;
  *(unsigned char *)(v74 + 4) = a55 & 1;
  uint64_t v75 = a9 + v60[36];
  *(_DWORD *)uint64_t v75 = a56;
  *(unsigned char *)(v75 + 4) = a57 & 1;
  uint64_t v76 = a9 + v60[37];
  __n128 result = v79;
  *(_OWORD *)uint64_t v76 = v78;
  *(__n128 *)(v76 + 16) = v79;
  *(void *)(v76 + 32) = v80;
  *(void *)(a9 + v60[38]) = a59;
  return result;
}

uint64_t sub_25627B378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata;
  swift_beginAccess();
  sub_25622F360(v3, a1, &qword_269F54398);
  int v4 = *(_DWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType);
  char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType + 4);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId + 8);
  uint64_t v8 = v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID;
  swift_beginAccess();
  uint64_t v9 = (int *)type metadata accessor for DeviceExperimentMetrics(0);
  sub_25622F360(v8, a1 + v9[7], &qword_269F53D68);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId);
  char v11 = *(unsigned char *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId + 8);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType + 8);
  int v14 = *(_DWORD *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digests);
  char v16 = *(unsigned char *)(v1 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode + 4);
  uint64_t v17 = a1 + v9[5];
  *(_DWORD *)uint64_t v17 = v4;
  *(unsigned char *)(v17 + 4) = v5;
  uint64_t v18 = (void *)(a1 + v9[6]);
  *uint64_t v18 = v7;
  v18[1] = v6;
  uint64_t v19 = a1 + v9[8];
  *(void *)uint64_t v19 = v10;
  *(unsigned char *)(v19 + 8) = v11;
  uint64_t v20 = (void *)(a1 + v9[9]);
  *uint64_t v20 = v12;
  v20[1] = v13;
  uint64_t v21 = a1 + v9[10];
  *(_DWORD *)uint64_t v21 = v14;
  *(unsigned char *)(v21 + 4) = v16;
  *(void *)(a1 + v9[11]) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DeviceExperimentMetricsBuilderImpl.deinit()
{
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata, &qword_269F54398);
  swift_bridgeObjectRelease();
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID, &qword_269F53D68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DeviceExperimentMetricsBuilderImpl.__deallocating_deinit()
{
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata, &qword_269F54398);
  swift_bridgeObjectRelease();
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID, &qword_269F53D68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_25627B638()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_eventMetadata;
  uint64_t v2 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digestType;
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  int v4 = (void *)(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_experimentId);
  *int v4 = 0;
  v4[1] = 0;
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_treatmentIdUUID;
  uint64_t v6 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deploymentId;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_deviceType);
  void *v8 = 0;
  v8[1] = 0;
  uint64_t v9 = v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_programCode;
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC16MetricsFramework34DeviceExperimentMetricsBuilderImpl_digests) = 0;
  return v0;
}

uint64_t sub_25627B768(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2562E3A70();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 4;
      sub_2562E37C0();
      sub_2562E3A50();
      sub_2562E3A80();
      sub_2562E3A90();
      sub_2562E3A60();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_25627B810(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34)
{
  if (a2)
  {
    uint64_t v43 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v42 = 0;
    uint64_t v36 = a13;
    if (a8) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v43 = 0;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v42 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  uint64_t v36 = a13;
  if (a8)
  {
LABEL_4:
    uint64_t v41 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v41 = 0;
LABEL_8:
  if (v36)
  {
    uint64_t v39 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
  }
  if (a19)
  {
    id v37 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v37 = 0;
  }
  id v40 = objc_msgSend(v44, sel_initWithSystemBuild_dataSharingOptInStatus_viewInterface_audioInterfaceVendorId_audioInterfaceProductId_asrLocation_nlLocation_siriInputLocale_subDomain_responseCategory_experimentAllocationStatus_isTriggered_isFirstTriggerOrAfterFirstTrigger_codePathIdUUID_totalTurnCount_validTurnCount_siriTasksStarted_siriTasksCompleted_flowTasksStarted_flowTasksCompleted_reliabilityRequestCount_reliabilityTurnCount_clientErrorCount_undesiredResponseCount_fatalResponseCount_failureResponseCount_siriUnavailableResponseCount_usdxSessionCount_tuples_, v43, a3, a4, v42, v41, a9, a10, a11, v39, a14, a15, a16, a17, v37, a20, a21, a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          a34);

  return v40;
}

id _s16MetricsFramework16ExperimentTuplesV12toBiomeEvent15experimentTupleSo020BMSiriOnDeviceDigestcacmcD0CACSg_tFZ_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  if (v2)
  {
    if (v2 == 1) {
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F78);
    swift_dynamicCast();
    if (v4)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F70);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F78);
      swift_dynamicCast();
      if (v3) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_4;
  }
  if (v3)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F78);
    swift_dynamicCast();
    if (v6) {
      goto LABEL_6;
    }
LABEL_12:
    if (!v5) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_11:
  if (!v6) {
    goto LABEL_12;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F78);
  swift_dynamicCast();
  if (v5)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F78);
    swift_dynamicCast();
  }
LABEL_8:
  id v7 = objc_allocWithZone(MEMORY[0x263F2A428]);
  sub_25624B1DC();
  uint64_t v8 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  char v11 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v7, sel_initWithLaunchTimeInMs_endpointDelayInMs_siriResponseTimeInMs_timeToUufrInMs_timeToFirstWordInMs_, v8, v9, v10, v11, v12);

  return v13;
}

id _s16MetricsFramework16ExperimentDigestV12toBiomeEvent010experimentD0So014BMSiriOnDevicedcacD0CAC_tFZ_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54F80);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v57 = *(void *)(a1 + 16);
  uint64_t v58 = v5;
  if (*(unsigned char *)(a1 + 36))
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = 0;
    if ((*(unsigned char *)(a1 + 44) & 1) == 0)
    {
LABEL_3:
      uint64_t v55 = (void *)sub_2562E3D30();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = (void *)sub_2562E3D30();
    if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
      goto LABEL_3;
    }
  }
  uint64_t v55 = 0;
LABEL_6:
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v51 = *(void *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 84);
  uint64_t v52 = v8;
  uint64_t v53 = v6;
  if (v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = 0;
    if ((*(unsigned char *)(a1 + 92) & 1) == 0)
    {
LABEL_8:
      uint64_t v49 = (void *)sub_2562E3D30();
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = (void *)sub_2562E3D30();
    if ((*(unsigned char *)(a1 + 92) & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v49 = 0;
LABEL_11:
  sub_25627C554(a1, (uint64_t)v4);
  uint64_t v10 = (int *)type metadata accessor for ExperimentDigest(0);
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v10 - 1) + 56))(v4, 0, 1, v10);
  id v48 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE22toExperimentBiomeEvent16experimentDigestSo014BMSiriOnDevicejfcB0CAC0fJ0VSg_tFZ_0((uint64_t)v4);
  sub_25622F3C4((uint64_t)v4, &qword_269F54F80);
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v46 = *(void *)(a1 + 120);
  uint64_t v47 = v11;
  if (*(unsigned char *)(a1 + 132))
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = 0;
    if ((*(unsigned char *)(a1 + 140) & 1) == 0)
    {
LABEL_13:
      uint64_t v44 = (void *)sub_2562E3D30();
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = (void *)sub_2562E3D30();
    if ((*(unsigned char *)(a1 + 140) & 1) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v44 = 0;
LABEL_16:
  if (*(unsigned char *)(a1 + 141) == 2) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = (void *)sub_2562E3760();
  }
  int v12 = *(unsigned __int8 *)(a1 + 142);
  uint64_t v54 = v7;
  if (v12 == 2) {
    uint64_t v42 = 0;
  }
  else {
    uint64_t v42 = (void *)sub_2562E3760();
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25622F360(a1 + v10[19], (uint64_t)v15, &qword_269F53D68);
  uint64_t v16 = sub_2562E2FD0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_25622F3C4((uint64_t)v15, &qword_269F53D68);
    uint64_t v41 = 0;
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v41 = sub_2562E2FA0();
    uint64_t v40 = v18;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  if (*(unsigned char *)(a1 + v10[23] + 4)) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[24] + 4)) {
    id v38 = 0;
  }
  else {
    id v38 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[25] + 4)) {
    id v37 = 0;
  }
  else {
    id v37 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[26] + 4)) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[27] + 4)) {
    int v35 = 0;
  }
  else {
    int v35 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[28] + 4)) {
    uint64_t v34 = 0;
  }
  else {
    uint64_t v34 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[29] + 4)) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[30] + 4)) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[31] + 4)) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[32] + 4)) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[33] + 4)) {
    id v23 = 0;
  }
  else {
    id v23 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[34] + 4)) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[35] + 4)) {
    id v25 = 0;
  }
  else {
    id v25 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v10[36] + 4)) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = (void *)sub_2562E3DA0();
  }
  uint64_t v27 = a1 + v10[37];
  uint64_t v28 = *(void *)(v27 + 32);
  long long v29 = *(_OWORD *)(v27 + 16);
  v59[0] = *(_OWORD *)v27;
  v59[1] = v29;
  uint64_t v60 = v28;
  id v30 = _s16MetricsFramework16ExperimentTuplesV12toBiomeEvent15experimentTupleSo020BMSiriOnDeviceDigestcacmcD0CACSg_tFZ_0((uint64_t *)v59);
  id v31 = objc_allocWithZone(MEMORY[0x263F2A420]);
  return sub_25627B810(v57, v58, v56, v55, v53, v54, v51, v52, v50, v49, v48, v47, v46, v45, v44, v43, v42, v41, v40,
           v39,
           v38,
           v37,
           v36,
           v35,
           v34,
           v19,
           v20,
           v21,
           v22,
           v23,
           v24,
           v25,
           v26,
           v30);
}

uint64_t type metadata accessor for ExperimentDigest(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F54F28);
}

uint64_t sub_25627C4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DeviceExperimentMetrics(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F54F38);
}

uint64_t sub_25627C554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExperimentDigest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25627C5B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_25627C618(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E680]), sel_init);
  if (!v2) {
    return v2;
  }
  if (*(void *)(a1 + 24))
  {
    uint64_t v3 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setSystemBuild_, v3);
  }
  if (*(unsigned char *)(a1 + 36))
  {
    if (*(unsigned char *)(a1 + 44)) {
      goto LABEL_6;
    }
  }
  else
  {
    objc_msgSend(v2, sel_setDataSharingOptInStatus_, *(unsigned int *)(a1 + 32));
    if (*(unsigned char *)(a1 + 44))
    {
LABEL_6:
      if (!*(void *)(a1 + 56)) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  objc_msgSend(v2, sel_setViewInterface_, *(unsigned int *)(a1 + 40));
  if (*(void *)(a1 + 56))
  {
LABEL_7:
    uint64_t v4 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setAudioInterfaceVendorId_, v4);
  }
LABEL_8:
  if (*(void *)(a1 + 72))
  {
    uint64_t v5 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setAudioInterfaceProductId_, v5);
  }
  if (*(unsigned char *)(a1 + 84))
  {
    if (*(unsigned char *)(a1 + 92)) {
      goto LABEL_12;
    }
LABEL_32:
    objc_msgSend(v2, sel_setNlLocation_, *(unsigned int *)(a1 + 88));
    if (!*(void *)(a1 + 96)) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  objc_msgSend(v2, sel_setAsrLocation_, *(unsigned int *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 92) & 1) == 0) {
    goto LABEL_32;
  }
LABEL_12:
  if (*(void *)(a1 + 96)) {
LABEL_13:
  }
    objc_msgSend(v2, sel_setSiriInputLocale_);
LABEL_14:
  if (*(void *)(a1 + 120))
  {
    uint64_t v6 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setSubDomain_, v6);
  }
  if ((*(unsigned char *)(a1 + 132) & 1) == 0) {
    objc_msgSend(v2, sel_setResponseCategory_, *(unsigned int *)(a1 + 128));
  }
  uint64_t v7 = (int *)type metadata accessor for ExperimentDigest(0);
  int v8 = *(unsigned __int8 *)(a1 + v7[20]);
  if (v8 != 2) {
    objc_msgSend(v2, sel_setIsIntelligenceEngineRequest_, v8 & 1);
  }
  uint64_t v9 = *(void *)(a1 + v7[21]);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v10; ++i)
      {
        uint64_t v12 = *(unsigned int *)(v9 + 4 * i + 32);
        objc_msgSend(v2, sel_addRouting_, v12);
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v13 = (unsigned int *)(a1 + v7[22]);
  if ((v13[1] & 1) == 0) {
    objc_msgSend(v2, sel_setInvocationSource_, *v13);
  }
  return v2;
}

id sub_25627C890(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E778]), sel_init);
  if (v2)
  {
    uint64_t v3 = (int *)type metadata accessor for ExperimentDigest(0);
    uint64_t v4 = (unsigned int *)(a1 + v3[25]);
    if ((v4[1] & 1) == 0) {
      objc_msgSend(v2, sel_setSiriTasksStarted_, *v4);
    }
    uint64_t v5 = (unsigned int *)(a1 + v3[26]);
    if ((v5[1] & 1) == 0) {
      objc_msgSend(v2, sel_setSiriTasksCompleted_, *v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + v3[27]);
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v2, sel_setFlowTasksStarted_, *v6);
    }
    uint64_t v7 = (unsigned int *)(a1 + v3[28]);
    if ((v7[1] & 1) == 0) {
      objc_msgSend(v2, sel_setFlowTasksCompleted_, *v7);
    }
  }
  return v2;
}

id sub_25627C978(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E738]), sel_init);
  if (v2)
  {
    uint64_t v3 = (int *)type metadata accessor for ExperimentDigest(0);
    uint64_t v4 = (unsigned int *)(a1 + v3[29]);
    if ((v4[1] & 1) == 0) {
      objc_msgSend(v2, sel_setReliabilityRequestCount_, *v4);
    }
    uint64_t v5 = (unsigned int *)(a1 + v3[30]);
    if ((v5[1] & 1) == 0) {
      objc_msgSend(v2, sel_setReliabilityTurnCount_, *v5);
    }
    uint64_t v6 = (unsigned int *)(a1 + v3[31]);
    if ((v6[1] & 1) == 0) {
      objc_msgSend(v2, sel_setClientErrorCount_, *v6);
    }
    uint64_t v7 = (unsigned int *)(a1 + v3[32]);
    if ((v7[1] & 1) == 0) {
      objc_msgSend(v2, sel_setUndesiredResponseCount_, *v7);
    }
    int v8 = (unsigned int *)(a1 + v3[33]);
    if ((v8[1] & 1) == 0) {
      objc_msgSend(v2, sel_setFatalResponseCount_, *v8);
    }
    uint64_t v9 = (unsigned int *)(a1 + v3[34]);
    if ((v9[1] & 1) == 0) {
      objc_msgSend(v2, sel_setFailureResponseCount_, *v9);
    }
    uint64_t v10 = (unsigned int *)(a1 + v3[35]);
    if ((v10[1] & 1) == 0) {
      objc_msgSend(v2, sel_setSiriUnavailableResponseCount_, *v10);
    }
  }
  return v2;
}

id sub_25627CACC(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E688]), sel_init);
  if (v2)
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E788]), sel_init);
    if (v3)
    {
      uint64_t v4 = type metadata accessor for ExperimentDigest(0);
      uint64_t v5 = (unsigned int *)(a1 + *(int *)(v4 + 92));
      if ((v5[1] & 1) == 0) {
        objc_msgSend(v3, sel_setTotalTurnCount_, *v5);
      }
      uint64_t v6 = (unsigned int *)(a1 + *(int *)(v4 + 96));
      if ((v6[1] & 1) == 0) {
        objc_msgSend(v3, sel_setValidTurnCount_, *v6);
      }
    }
    objc_msgSend(v2, sel_setTurnCounts_, v3);

    id v7 = sub_25627C890(a1);
    objc_msgSend(v2, sel_setTaskCounts_, v7);

    id v8 = sub_25627C978(a1);
    objc_msgSend(v2, sel_setReliabilityCounts_, v8);

    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E760]), sel_init);
    if (v9)
    {
      uint64_t v10 = (unsigned int *)(a1 + *(int *)(type metadata accessor for ExperimentDigest(0) + 144));
      if ((v10[1] & 1) == 0) {
        objc_msgSend(v9, sel_setUsdxSessionCount_, *v10);
      }
    }
    objc_msgSend(v2, sel_setSessionCounts_, v9);
  }
  return v2;
}

id sub_25627CC50(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6F0]), sel_init);
  if (!v2) {
    return v2;
  }
  if (*(void *)(a1 + 24))
  {
    id v3 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setSystemBuild_, v3);
  }
  if (*(unsigned char *)(a1 + 36))
  {
    if (*(unsigned char *)(a1 + 44)) {
      goto LABEL_6;
    }
LABEL_16:
    objc_msgSend(v2, sel_setViewInterface_, *(unsigned int *)(a1 + 40));
    if (!*(void *)(a1 + 56)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  objc_msgSend(v2, sel_setDataSharingOptInStatus_, *(unsigned int *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
    goto LABEL_16;
  }
LABEL_6:
  if (*(void *)(a1 + 56))
  {
LABEL_7:
    uint64_t v4 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setAudioInterfaceVendorId_, v4);
  }
LABEL_8:
  if (*(void *)(a1 + 72))
  {
    uint64_t v5 = (void *)sub_2562E3550();
    objc_msgSend(v2, sel_setAudioInterfaceProductId_, v5);
  }
  if ((*(unsigned char *)(a1 + 84) & 1) == 0) {
    objc_msgSend(v2, sel_setAsrLocation_, *(unsigned int *)(a1 + 80));
  }
  if (*(void *)(a1 + 104)) {
    objc_msgSend(v2, sel_setDictationLocale_);
  }
  return v2;
}

id sub_25627CDA0(uint64_t a1, Class *a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  id v7 = objc_msgSend(objc_allocWithZone(*a2), sel_init);
  if (v7)
  {
    id v8 = (void *)a3(a1);
    objc_msgSend(v7, *a4, v8);
    if (*(unsigned char *)(a1 + 140)) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = *(unsigned int *)(a1 + 136);
    }
    objc_msgSend(v7, sel_setExperimentAllocationStatus_, v9);
    int v10 = *(unsigned __int8 *)(a1 + 142);
    if (v10 != 2) {
      objc_msgSend(v7, sel_setIsFirstTriggerOrAfterFirstTrigger_, v10 & 1);
    }
    uint64_t v11 = sub_2562E2FD0();
    uint64_t v12 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v11);
    uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = a1 + *(int *)(type metadata accessor for ExperimentDigest(0) + 76);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    MEMORY[0x270FA5388](v16 - 8);
    uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_25622F360(v15, (uint64_t)v18, &qword_269F53D68);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
    {

      sub_25622F3C4((uint64_t)v18, &qword_269F53D68);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
      id v19 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      uint64_t v20 = (void *)sub_2562E2FB0();
      id v21 = objc_msgSend(v19, sel_initWithNSUUID_, v20);

      objc_msgSend(v7, sel_setCodePathId_, v21);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return v7;
}

id sub_25627D02C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6F8]), sel_init);
  if (v2)
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E788]), sel_init);
    if (v3)
    {
      uint64_t v4 = type metadata accessor for ExperimentDigest(0);
      uint64_t v5 = (unsigned int *)(a1 + *(int *)(v4 + 92));
      if ((v5[1] & 1) == 0) {
        objc_msgSend(v3, sel_setTotalTurnCount_, *v5);
      }
      uint64_t v6 = (unsigned int *)(a1 + *(int *)(v4 + 96));
      if ((v6[1] & 1) == 0) {
        objc_msgSend(v3, sel_setValidTurnCount_, *v6);
      }
    }
    objc_msgSend(v2, sel_setTurnCounts_, v3);

    id v7 = sub_25627C890(a1);
    objc_msgSend(v2, sel_setTaskCounts_, v7);

    id v8 = sub_25627C978(a1);
    objc_msgSend(v2, sel_setReliabilityCounts_, v8);
  }
  return v2;
}

id sub_25627D148(uint64_t a1, Class *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(*a2), sel_init);
  if (v3)
  {
    uint64_t v4 = (void *)(a1 + *(int *)(type metadata accessor for ExperimentDigest(0) + 148));
    uint64_t v5 = v4[1];
    uint64_t v7 = v4[2];
    uint64_t v6 = v4[3];
    uint64_t v8 = v4[4];
    if (*v4)
    {
      if (*v4 == 1) {
        return v3;
      }
      uint64_t v9 = swift_bridgeObjectRetain();
      sub_25627B768(v9);
      swift_bridgeObjectRelease();
      sub_25624B1DC();
      int v10 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setLaunchTimeInMs_, v10);
    }
    if (v5)
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_25627B768(v11);
      swift_bridgeObjectRelease();
      sub_25624B1DC();
      uint64_t v12 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setEndpointDelayInMs_, v12);
    }
    if (v7)
    {
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_25627B768(v13);
      swift_bridgeObjectRelease();
      sub_25624B1DC();
      uint64_t v14 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setSiriResponseTimeInMs_, v14);
    }
    if (v6)
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_25627B768(v15);
      swift_bridgeObjectRelease();
      sub_25624B1DC();
      uint64_t v16 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setTimeToUufrInMs_, v16);
    }
    if (v8)
    {
      uint64_t v17 = swift_bridgeObjectRetain();
      sub_25627B768(v17);
      swift_bridgeObjectRelease();
      sub_25624B1DC();
      uint64_t v18 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setTimeToFirstWordInMs_, v18);
    }
  }
  return v3;
}

id sub_25627D368(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E700]), sel_init);
  if (v2)
  {
    id v3 = sub_25627CDA0(a1, (Class *)0x263F6E710, (uint64_t (*)(uint64_t))sub_25627CC50, (SEL *)&selRef_setDictationDimensions_);
    objc_msgSend(v2, sel_setDimensions_, v3);

    id v4 = sub_25627D02C(a1);
    objc_msgSend(v2, sel_setCounts_, v4);

    id v5 = sub_25627D148(a1, (Class *)0x263F6E718);
    objc_msgSend(v2, sel_setTuples_, v5);

    id v6 = objc_msgSend(self, sel_sharedPreferences);
    unsigned int v7 = objc_msgSend(v6, sel_longLivedIdentifierUploadingEnabled);

    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + *(int *)(type metadata accessor for ExperimentDigest(0) + 152));
      if (v8)
      {
        id v32 = v2;
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        v27[1] = v27;
        MEMORY[0x270FA5388](v9 - 8);
        uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v12 = *(void *)(v8 + 16);
        v27[2] = v8;
        if (v12)
        {
          uint64_t v13 = sub_2562E2FD0();
          uint64_t v14 = *(void *)(v13 - 8);
          uint64_t v15 = v14;
          uint64_t v16 = v8 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
          uint64_t v28 = *(void *)(v14 + 72);
          id v31 = (void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
          uint64_t v18 = v14 + 16;
          uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
          uint64_t v29 = v18;
          id v30 = v17;
          v27[3] = v15 + 8;
          v27[4] = v15 + 32;
          swift_bridgeObjectRetain();
          while (1)
          {
            v30(v11, v16, v13);
            (*v31)(v11, 0, 1, v13);
            uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v13);
            if (v19 == 1) {
              break;
            }
            MEMORY[0x270FA5388](v19);
            id v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v11, v13);
            id v22 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
            uint64_t v23 = (void *)sub_2562E2FB0();
            id v24 = objc_msgSend(v22, sel_initWithNSUUID_, v23);

            (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v13);
            objc_msgSend(v32, sel_addTurnIds_, v24);

            v16 += v28;
            if (!--v12) {
              goto LABEL_10;
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
LABEL_10:
          uint64_t v25 = sub_2562E2FD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
        }
        swift_bridgeObjectRelease();
        return v32;
      }
    }
  }
  return v2;
}

uint64_t sub_25627D748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_25627D75C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 16))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_25627D784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_25627D798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_25627D7AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 40))(a1, a2 & 1);
}

uint64_t sub_25627D7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_25627D7D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 56))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_25627D800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_25627D814(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t destroy for ExperimentTuples()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ExperimentTuples(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExperimentTuples(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExperimentTuples(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentTuples(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExperimentTuples(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentTuples()
{
  return &type metadata for ExperimentTuples;
}

void *initializeBufferWithCopyOfBuffer for ExperimentDigest(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    *(unsigned char *)(a1 + 36) = *((unsigned char *)a2 + 36);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
    *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
    *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
    uint64_t v12 = (void *)a2[12];
    uint64_t v11 = (void *)a2[13];
    *(void *)(a1 + 96) = v12;
    *(void *)(a1 + 104) = v11;
    uint64_t v13 = a2[14];
    uint64_t v14 = a2[15];
    *(unsigned char *)(a1 + 132) = *((unsigned char *)a2 + 132);
    *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
    *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
    *(_DWORD *)(a1 + 136) = *((_DWORD *)a2 + 34);
    *(_WORD *)(a1 + 141) = *(_WORD *)((char *)a2 + 141);
    uint64_t v15 = a3[19];
    __dst = (void *)(a1 + v15);
    uint64_t v80 = (char *)a2 + v15;
    *(void *)(a1 + 112) = v13;
    *(void *)(a1 + 120) = v14;
    uint64_t v16 = sub_2562E2FD0();
    uint64_t v17 = *(void *)(v16 - 8);
    __n128 v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v12;
    id v19 = v11;
    swift_bridgeObjectRetain();
    if (v79(v80, 1, v16))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(__dst, v80, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(__dst, v80, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v22 = a3[21];
    *((unsigned char *)v4 + a3[20]) = *((unsigned char *)a2 + a3[20]);
    *(void *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    uint64_t v23 = a3[22];
    uint64_t v24 = a3[23];
    uint64_t v25 = (char *)v4 + v23;
    uint64_t v26 = (uint64_t)a2 + v23;
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    v25[4] = *(unsigned char *)(v26 + 4);
    uint64_t v27 = (char *)v4 + v24;
    uint64_t v28 = (uint64_t)a2 + v24;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = *(unsigned char *)(v28 + 4);
    uint64_t v29 = a3[24];
    uint64_t v30 = a3[25];
    id v31 = (char *)v4 + v29;
    uint64_t v32 = (uint64_t)a2 + v29;
    *(_DWORD *)id v31 = *(_DWORD *)v32;
    v31[4] = *(unsigned char *)(v32 + 4);
    uint64_t v33 = (char *)v4 + v30;
    uint64_t v34 = (uint64_t)a2 + v30;
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = *(unsigned char *)(v34 + 4);
    uint64_t v35 = a3[26];
    uint64_t v36 = a3[27];
    id v37 = (char *)v4 + v35;
    id v38 = (int *)((char *)a2 + v35);
    int v39 = *v38;
    v37[4] = *((unsigned char *)v38 + 4);
    *(_DWORD *)id v37 = v39;
    uint64_t v40 = (char *)v4 + v36;
    uint64_t v41 = (uint64_t)a2 + v36;
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = *(unsigned char *)(v41 + 4);
    uint64_t v42 = a3[28];
    uint64_t v43 = a3[29];
    uint64_t v44 = (char *)v4 + v42;
    uint64_t v45 = (uint64_t)a2 + v42;
    *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
    v44[4] = *(unsigned char *)(v45 + 4);
    uint64_t v46 = (char *)v4 + v43;
    uint64_t v47 = (uint64_t)a2 + v43;
    *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
    v46[4] = *(unsigned char *)(v47 + 4);
    uint64_t v48 = a3[30];
    uint64_t v49 = a3[31];
    id v50 = (char *)v4 + v48;
    uint64_t v51 = (uint64_t)a2 + v48;
    *(_DWORD *)id v50 = *(_DWORD *)v51;
    v50[4] = *(unsigned char *)(v51 + 4);
    uint64_t v52 = (char *)v4 + v49;
    uint64_t v53 = (uint64_t)a2 + v49;
    *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
    v52[4] = *(unsigned char *)(v53 + 4);
    uint64_t v54 = a3[32];
    uint64_t v55 = a3[33];
    uint64_t v56 = (char *)v4 + v54;
    uint64_t v57 = (uint64_t)a2 + v54;
    *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
    v56[4] = *(unsigned char *)(v57 + 4);
    uint64_t v58 = (char *)v4 + v55;
    uint64_t v59 = (uint64_t)a2 + v55;
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
    v58[4] = *(unsigned char *)(v59 + 4);
    uint64_t v60 = a3[34];
    uint64_t v61 = a3[35];
    uint64_t v62 = (char *)v4 + v60;
    uint64_t v63 = (uint64_t)a2 + v60;
    *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
    v62[4] = *(unsigned char *)(v63 + 4);
    uint64_t v64 = (char *)v4 + v61;
    uint64_t v65 = (uint64_t)a2 + v61;
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = *(unsigned char *)(v65 + 4);
    uint64_t v66 = a3[36];
    uint64_t v67 = a3[37];
    uint64_t v68 = (char *)v4 + v66;
    uint64_t v69 = (uint64_t)a2 + v66;
    *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
    v68[4] = *(unsigned char *)(v69 + 4);
    uint64_t v70 = (char *)v4 + v67;
    uint64_t v71 = (uint64_t)a2 + v67;
    uint64_t v72 = *(uint64_t *)((char *)a2 + v67);
    swift_bridgeObjectRetain();
    if (v72 == 1)
    {
      long long v73 = *(_OWORD *)(v71 + 16);
      *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v73;
      *((void *)v70 + 4) = *(void *)(v71 + 32);
    }
    else
    {
      uint64_t v74 = *(void *)(v71 + 8);
      uint64_t v75 = *(void *)(v71 + 16);
      *(void *)uint64_t v70 = v72;
      *((void *)v70 + 1) = v74;
      uint64_t v76 = *(void *)(v71 + 24);
      uint64_t v77 = *(void *)(v71 + 32);
      *((void *)v70 + 2) = v75;
      *((void *)v70 + 3) = v76;
      *((void *)v70 + 4) = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)((char *)v4 + a3[38]) = *(uint64_t *)((char *)a2 + a3[38]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ExperimentDigest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 76);
  uint64_t v5 = sub_2562E2FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 148)) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  uint64_t v11 = *(void **)(a2 + 96);
  uint64_t v10 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v10;
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_WORD *)(a1 + 141) = *(_WORD *)(a2 + 141);
  uint64_t v14 = a3[19];
  __dst = (void *)(a1 + v14);
  long long v78 = (const void *)(a2 + v14);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = v13;
  uint64_t v15 = sub_2562E2FD0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v77 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = v11;
  id v18 = v10;
  swift_bridgeObjectRetain();
  if (v77(v78, 1, v15))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(__dst, v78, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v78, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v20 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[22];
  uint64_t v22 = a3[23];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(unsigned char *)(v23 + 4) = *(unsigned char *)(v24 + 4);
  uint64_t v25 = a1 + v22;
  uint64_t v26 = a2 + v22;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = a3[24];
  uint64_t v28 = a3[25];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(unsigned char *)(v29 + 4) = *(unsigned char *)(v30 + 4);
  uint64_t v31 = a1 + v28;
  uint64_t v32 = a2 + v28;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a3[26];
  uint64_t v34 = a3[27];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = (int *)(a2 + v33);
  int v37 = *v36;
  *(unsigned char *)(v35 + 4) = *((unsigned char *)v36 + 4);
  *(_DWORD *)uint64_t v35 = v37;
  uint64_t v38 = a1 + v34;
  uint64_t v39 = a2 + v34;
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v39 + 4);
  uint64_t v40 = a3[28];
  uint64_t v41 = a3[29];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  *(unsigned char *)(v42 + 4) = *(unsigned char *)(v43 + 4);
  uint64_t v44 = a1 + v41;
  uint64_t v45 = a2 + v41;
  *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
  *(unsigned char *)(v44 + 4) = *(unsigned char *)(v45 + 4);
  uint64_t v46 = a3[30];
  uint64_t v47 = a3[31];
  uint64_t v48 = a1 + v46;
  uint64_t v49 = a2 + v46;
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
  *(unsigned char *)(v48 + 4) = *(unsigned char *)(v49 + 4);
  uint64_t v50 = a1 + v47;
  uint64_t v51 = a2 + v47;
  *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
  *(unsigned char *)(v50 + 4) = *(unsigned char *)(v51 + 4);
  uint64_t v52 = a3[32];
  uint64_t v53 = a3[33];
  uint64_t v54 = a1 + v52;
  uint64_t v55 = a2 + v52;
  *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
  *(unsigned char *)(v54 + 4) = *(unsigned char *)(v55 + 4);
  uint64_t v56 = a1 + v53;
  uint64_t v57 = a2 + v53;
  *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
  *(unsigned char *)(v56 + 4) = *(unsigned char *)(v57 + 4);
  uint64_t v58 = a3[34];
  uint64_t v59 = a3[35];
  uint64_t v60 = a1 + v58;
  uint64_t v61 = a2 + v58;
  *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
  *(unsigned char *)(v60 + 4) = *(unsigned char *)(v61 + 4);
  uint64_t v62 = a1 + v59;
  uint64_t v63 = a2 + v59;
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  *(unsigned char *)(v62 + 4) = *(unsigned char *)(v63 + 4);
  uint64_t v64 = a3[36];
  uint64_t v65 = a3[37];
  uint64_t v66 = a1 + v64;
  uint64_t v67 = a2 + v64;
  *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
  *(unsigned char *)(v66 + 4) = *(unsigned char *)(v67 + 4);
  uint64_t v68 = a1 + v65;
  uint64_t v69 = a2 + v65;
  uint64_t v70 = *(void *)(a2 + v65);
  swift_bridgeObjectRetain();
  if (v70 == 1)
  {
    long long v71 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v71;
    *(void *)(v68 + 32) = *(void *)(v69 + 32);
  }
  else
  {
    uint64_t v72 = *(void *)(v69 + 8);
    uint64_t v73 = *(void *)(v69 + 16);
    *(void *)uint64_t v68 = v70;
    *(void *)(v68 + 8) = v72;
    uint64_t v74 = *(void *)(v69 + 24);
    uint64_t v75 = *(void *)(v69 + 32);
    *(void *)(v68 + 16) = v73;
    *(void *)(v68 + 24) = v74;
    *(void *)(v68 + 32) = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  int v7 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v8;
  LOBYTE(v8) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = v8;
  uint64_t v9 = *(void **)(a1 + 96);
  uint64_t v10 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v10;
  id v11 = v10;

  uint64_t v12 = *(void **)(a1 + 104);
  uint64_t v13 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v13;
  id v14 = v13;

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = v15;
  int v16 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v16;
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  *(unsigned char *)(a1 + 142) = *(unsigned char *)(a2 + 142);
  uint64_t v17 = a3[19];
  id v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_2562E2FD0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[22];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(unsigned char *)(v27 + 4) = *((unsigned char *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[23];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (int *)(a2 + v30);
  int v33 = *v32;
  *(unsigned char *)(v31 + 4) = *((unsigned char *)v32 + 4);
  *(_DWORD *)uint64_t v31 = v33;
  uint64_t v34 = a3[24];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (int *)(a2 + v34);
  int v37 = *v36;
  *(unsigned char *)(v35 + 4) = *((unsigned char *)v36 + 4);
  *(_DWORD *)uint64_t v35 = v37;
  uint64_t v38 = a3[25];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (int *)(a2 + v38);
  int v41 = *v40;
  *(unsigned char *)(v39 + 4) = *((unsigned char *)v40 + 4);
  *(_DWORD *)uint64_t v39 = v41;
  uint64_t v42 = a3[26];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = (int *)(a2 + v42);
  int v45 = *v44;
  *(unsigned char *)(v43 + 4) = *((unsigned char *)v44 + 4);
  *(_DWORD *)uint64_t v43 = v45;
  uint64_t v46 = a3[27];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = (int *)(a2 + v46);
  int v49 = *v48;
  *(unsigned char *)(v47 + 4) = *((unsigned char *)v48 + 4);
  *(_DWORD *)uint64_t v47 = v49;
  uint64_t v50 = a3[28];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = (int *)(a2 + v50);
  int v53 = *v52;
  *(unsigned char *)(v51 + 4) = *((unsigned char *)v52 + 4);
  *(_DWORD *)uint64_t v51 = v53;
  uint64_t v54 = a3[29];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = (int *)(a2 + v54);
  int v57 = *v56;
  *(unsigned char *)(v55 + 4) = *((unsigned char *)v56 + 4);
  *(_DWORD *)uint64_t v55 = v57;
  uint64_t v58 = a3[30];
  uint64_t v59 = a1 + v58;
  uint64_t v60 = (int *)(a2 + v58);
  int v61 = *v60;
  *(unsigned char *)(v59 + 4) = *((unsigned char *)v60 + 4);
  *(_DWORD *)uint64_t v59 = v61;
  uint64_t v62 = a3[31];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = (int *)(a2 + v62);
  int v65 = *v64;
  *(unsigned char *)(v63 + 4) = *((unsigned char *)v64 + 4);
  *(_DWORD *)uint64_t v63 = v65;
  uint64_t v66 = a3[32];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = (int *)(a2 + v66);
  int v69 = *v68;
  *(unsigned char *)(v67 + 4) = *((unsigned char *)v68 + 4);
  *(_DWORD *)uint64_t v67 = v69;
  uint64_t v70 = a3[33];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = (int *)(a2 + v70);
  int v73 = *v72;
  *(unsigned char *)(v71 + 4) = *((unsigned char *)v72 + 4);
  *(_DWORD *)uint64_t v71 = v73;
  uint64_t v74 = a3[34];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = (int *)(a2 + v74);
  int v77 = *v76;
  *(unsigned char *)(v75 + 4) = *((unsigned char *)v76 + 4);
  *(_DWORD *)uint64_t v75 = v77;
  uint64_t v78 = a3[35];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = (int *)(a2 + v78);
  int v81 = *v80;
  *(unsigned char *)(v79 + 4) = *((unsigned char *)v80 + 4);
  *(_DWORD *)uint64_t v79 = v81;
  uint64_t v82 = a3[36];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = (int *)(a2 + v82);
  int v85 = *v84;
  *(unsigned char *)(v83 + 4) = *((unsigned char *)v84 + 4);
  *(_DWORD *)uint64_t v83 = v85;
  uint64_t v86 = a3[37];
  uint64_t v87 = a1 + v86;
  uint64_t v88 = (long long *)(a2 + v86);
  uint64_t v89 = *(void *)(a2 + v86);
  if (*(void *)(a1 + v86) == 1)
  {
    if (v89 == 1)
    {
      long long v90 = *v88;
      long long v91 = v88[1];
      *(void *)(v87 + 32) = *((void *)v88 + 4);
      *(_OWORD *)uint64_t v87 = v90;
      *(_OWORD *)(v87 + 16) = v91;
    }
    else
    {
      *(void *)uint64_t v87 = v89;
      *(void *)(v87 + 8) = *((void *)v88 + 1);
      *(void *)(v87 + 16) = *((void *)v88 + 2);
      *(void *)(v87 + 24) = *((void *)v88 + 3);
      *(void *)(v87 + 32) = *((void *)v88 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v89 == 1)
  {
    sub_25627EA68(a1 + v86);
    uint64_t v92 = *((void *)v88 + 4);
    long long v93 = v88[1];
    *(_OWORD *)uint64_t v87 = *v88;
    *(_OWORD *)(v87 + 16) = v93;
    *(void *)(v87 + 32) = v92;
  }
  else
  {
    *(void *)uint64_t v87 = v89;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v87 + 8) = *((void *)v88 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v87 + 16) = *((void *)v88 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v87 + 24) = *((void *)v88 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v87 + 32) = *((void *)v88 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25627EA68(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  int v8 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v8;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_WORD *)(a1 + 141) = *(_WORD *)(a2 + 141);
  uint64_t v11 = a3[19];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  uint64_t v14 = sub_2562E2FD0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[22];
  uint64_t v19 = a3[23];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  uint64_t v24 = a3[24];
  uint64_t v25 = a3[25];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = a2 + v25;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = a3[26];
  uint64_t v31 = a3[27];
  uint64_t v32 = a1 + v30;
  int v33 = (int *)(a2 + v30);
  int v34 = *v33;
  *(unsigned char *)(v32 + 4) = *((unsigned char *)v33 + 4);
  *(_DWORD *)uint64_t v32 = v34;
  uint64_t v35 = a1 + v31;
  uint64_t v36 = a2 + v31;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
  uint64_t v37 = a3[28];
  uint64_t v38 = a3[29];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(unsigned char *)(v39 + 4) = *(unsigned char *)(v40 + 4);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(unsigned char *)(v41 + 4) = *(unsigned char *)(v42 + 4);
  uint64_t v43 = a3[30];
  uint64_t v44 = a3[31];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(unsigned char *)(v45 + 4) = *(unsigned char *)(v46 + 4);
  uint64_t v47 = a1 + v44;
  uint64_t v48 = a2 + v44;
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  *(unsigned char *)(v47 + 4) = *(unsigned char *)(v48 + 4);
  uint64_t v49 = a3[32];
  uint64_t v50 = a3[33];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = a2 + v49;
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  *(unsigned char *)(v51 + 4) = *(unsigned char *)(v52 + 4);
  uint64_t v53 = a1 + v50;
  uint64_t v54 = a2 + v50;
  *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
  *(unsigned char *)(v53 + 4) = *(unsigned char *)(v54 + 4);
  uint64_t v55 = a3[34];
  uint64_t v56 = a3[35];
  uint64_t v57 = a1 + v55;
  uint64_t v58 = a2 + v55;
  *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
  *(unsigned char *)(v57 + 4) = *(unsigned char *)(v58 + 4);
  uint64_t v59 = a1 + v56;
  uint64_t v60 = a2 + v56;
  *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
  *(unsigned char *)(v59 + 4) = *(unsigned char *)(v60 + 4);
  uint64_t v61 = a3[36];
  uint64_t v62 = a3[37];
  uint64_t v63 = a1 + v61;
  uint64_t v64 = a2 + v61;
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  *(unsigned char *)(v63 + 4) = *(unsigned char *)(v64 + 4);
  uint64_t v65 = a1 + v62;
  uint64_t v66 = a2 + v62;
  long long v67 = *(_OWORD *)(v66 + 16);
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  *(_OWORD *)(v65 + 16) = v67;
  *(void *)(v65 + 32) = *(void *)(v66 + 32);
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  return a1;
}

uint64_t assignWithTake for ExperimentDigest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  long long v10 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  uint64_t v11 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  uint64_t v13 = a3[19];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(_WORD *)(a1 + 141) = *(_WORD *)(a2 + 141);
  uint64_t v16 = sub_2562E2FD0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[22];
  uint64_t v24 = a3[23];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a3[24];
  uint64_t v30 = a3[25];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  uint64_t v35 = a3[26];
  uint64_t v36 = a3[27];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(unsigned char *)(v37 + 4) = *(unsigned char *)(v38 + 4);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(unsigned char *)(v39 + 4) = *(unsigned char *)(v40 + 4);
  uint64_t v41 = a3[28];
  uint64_t v42 = a3[29];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  *(unsigned char *)(v43 + 4) = *(unsigned char *)(v44 + 4);
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(unsigned char *)(v45 + 4) = *(unsigned char *)(v46 + 4);
  uint64_t v47 = a3[30];
  uint64_t v48 = a3[31];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
  *(unsigned char *)(v49 + 4) = *(unsigned char *)(v50 + 4);
  uint64_t v51 = a1 + v48;
  uint64_t v52 = a2 + v48;
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  *(unsigned char *)(v51 + 4) = *(unsigned char *)(v52 + 4);
  uint64_t v53 = a3[32];
  uint64_t v54 = a3[33];
  uint64_t v55 = a1 + v53;
  uint64_t v56 = a2 + v53;
  *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
  *(unsigned char *)(v55 + 4) = *(unsigned char *)(v56 + 4);
  uint64_t v57 = a1 + v54;
  uint64_t v58 = a2 + v54;
  *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
  *(unsigned char *)(v57 + 4) = *(unsigned char *)(v58 + 4);
  uint64_t v59 = a3[34];
  uint64_t v60 = a3[35];
  uint64_t v61 = a1 + v59;
  uint64_t v62 = a2 + v59;
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  *(unsigned char *)(v61 + 4) = *(unsigned char *)(v62 + 4);
  uint64_t v63 = a1 + v60;
  uint64_t v64 = a2 + v60;
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  *(unsigned char *)(v63 + 4) = *(unsigned char *)(v64 + 4);
  uint64_t v65 = a3[36];
  uint64_t v66 = a3[37];
  uint64_t v67 = a1 + v65;
  uint64_t v68 = a2 + v65;
  *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
  *(unsigned char *)(v67 + 4) = *(unsigned char *)(v68 + 4);
  int v69 = (void *)(a1 + v66);
  uint64_t v70 = (void *)(a2 + v66);
  if (*(void *)(a1 + v66) != 1)
  {
    if (*v70 != 1)
    {
      *int v69 = *v70;
      swift_bridgeObjectRelease();
      v69[1] = v70[1];
      swift_bridgeObjectRelease();
      v69[2] = v70[2];
      swift_bridgeObjectRelease();
      v69[3] = v70[3];
      swift_bridgeObjectRelease();
      v69[4] = v70[4];
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_25627EA68(a1 + v66);
  }
  long long v71 = *((_OWORD *)v70 + 1);
  *(_OWORD *)int v69 = *(_OWORD *)v70;
  *((_OWORD *)v69 + 1) = v71;
  v69[4] = v70[4];
LABEL_12:
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentDigest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25627F29C);
}

uint64_t sub_25627F29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 76);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ExperimentDigest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25627F370);
}

uint64_t sub_25627F370(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 76);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25627F41C()
{
  sub_256281D7C(319, (unint64_t *)&qword_269F53EF8, MEMORY[0x270FA94D8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceExperimentMetrics(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for EventMetadata(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_2562E2FD0();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v62 = v8;
      if (v13(a2, 1, v11))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v15 = v7[5];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      uint64_t v19 = v7[6];
      int v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v13((uint64_t *)((char *)a2 + v19), 1, v11))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      }
      uint64_t v23 = v7[7];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v25[8];
      uint64_t v26 = v7[8];
      uint64_t v27 = *(void **)((char *)a2 + v26);
      *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
      uint64_t v28 = v7[9];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      v29[8] = v30[8];
      *(void *)uint64_t v29 = *(void *)v30;
      uint64_t v31 = v7[10];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      v32[8] = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      uint64_t v34 = *(void (**)(uint64_t *, void, uint64_t, int *))(v62 + 56);
      id v35 = v27;
      v34(a1, 0, 1, v7);
    }
    uint64_t v36 = a3[5];
    uint64_t v37 = a3[6];
    uint64_t v38 = (char *)a1 + v36;
    uint64_t v39 = (char *)a2 + v36;
    *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
    v38[4] = v39[4];
    uint64_t v40 = (uint64_t *)((char *)a1 + v37);
    uint64_t v41 = (uint64_t *)((char *)a2 + v37);
    uint64_t v42 = v41[1];
    void *v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = a3[7];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    uint64_t v46 = sub_2562E2FD0();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    uint64_t v50 = a3[8];
    uint64_t v51 = a3[9];
    uint64_t v52 = (char *)a1 + v50;
    uint64_t v53 = (char *)a2 + v50;
    *(void *)uint64_t v52 = *(void *)v53;
    v52[8] = v53[8];
    uint64_t v54 = (uint64_t *)((char *)a1 + v51);
    uint64_t v55 = (uint64_t *)((char *)a2 + v51);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = a3[10];
    uint64_t v58 = a3[11];
    uint64_t v59 = (char *)a1 + v57;
    uint64_t v60 = (char *)a2 + v57;
    *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
    v59[4] = v60[4];
    *(uint64_t *)((char *)a1 + v58) = *(uint64_t *)((char *)a2 + v58);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DeviceExperimentMetrics(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (int *)type metadata accessor for EventMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v4 - 1) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_2562E2FD0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    }
    uint64_t v8 = a1 + v4[5];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = a1 + v4[6];
    if (!v7(v9, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + *(int *)(a2 + 28);
  uint64_t v11 = sub_2562E2FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_2562E2FD0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v60 = v7;
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    uint64_t v17 = v6[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v19, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    uint64_t v21 = v6[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v6[8];
    uint64_t v25 = *(void **)&a2[v24];
    *(void *)&a1[v24] = v25;
    uint64_t v26 = v6[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = v6[10];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = *(void (**)(char *, void, uint64_t, int *))(v60 + 56);
    id v33 = v25;
    v32(a1, 0, 1, v6);
  }
  uint64_t v34 = a3[5];
  uint64_t v35 = a3[6];
  uint64_t v36 = &a1[v34];
  uint64_t v37 = &a2[v34];
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  v36[4] = v37[4];
  uint64_t v38 = &a1[v35];
  uint64_t v39 = &a2[v35];
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = v40;
  uint64_t v41 = a3[7];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = sub_2562E2FD0();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  if (v46(v43, 1, v44))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v48 = a3[8];
  uint64_t v49 = a3[9];
  uint64_t v50 = &a1[v48];
  uint64_t v51 = &a2[v48];
  *(void *)uint64_t v50 = *(void *)v51;
  v50[8] = v51[8];
  uint64_t v52 = &a1[v49];
  uint64_t v53 = &a2[v49];
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = *(void *)v53;
  *((void *)v52 + 1) = v54;
  uint64_t v55 = a3[10];
  uint64_t v56 = a3[11];
  uint64_t v57 = &a1[v55];
  uint64_t v58 = &a2[v55];
  *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
  v57[4] = v58[4];
  *(void *)&a1[v56] = *(void *)&a2[v56];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_25627C5B8((uint64_t)a1, type metadata accessor for EventMetadata);
      goto LABEL_7;
    }
    uint64_t v16 = sub_2562E2FD0();
    uint64_t v102 = *(void *)(v16 - 8);
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
    int v18 = v17(a1, 1, v16);
    int v19 = v17(a2, 1, v16);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(a1, a2, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 24))(a1, a2, v16);
LABEL_22:
        uint64_t v45 = v6[5];
        uint64_t v46 = &a1[v45];
        uint64_t v47 = &a2[v45];
        int v48 = v17(&a1[v45], 1, v16);
        int v49 = v17(v47, 1, v16);
        if (v48)
        {
          if (!v49)
          {
            (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v46, v47, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v46, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v49)
          {
            (*(void (**)(char *, char *, uint64_t))(v102 + 24))(v46, v47, v16);
LABEL_28:
            uint64_t v51 = v6[6];
            uint64_t v52 = &a1[v51];
            uint64_t v53 = &a2[v51];
            int v54 = v17(&a1[v51], 1, v16);
            int v55 = v17(v53, 1, v16);
            if (v54)
            {
              if (!v55)
              {
                (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v52, v53, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v52, 0, 1, v16);
LABEL_34:
                uint64_t v57 = v6[7];
                uint64_t v58 = &a1[v57];
                uint64_t v59 = &a2[v57];
                uint64_t v60 = *(void *)v59;
                v58[8] = v59[8];
                *(void *)uint64_t v58 = v60;
                uint64_t v61 = v6[8];
                uint64_t v62 = *(void **)&a1[v61];
                uint64_t v63 = *(void **)&a2[v61];
                *(void *)&a1[v61] = v63;
                id v64 = v63;

                uint64_t v65 = v6[9];
                uint64_t v66 = &a1[v65];
                uint64_t v67 = &a2[v65];
                uint64_t v68 = *(void *)v67;
                v66[8] = v67[8];
                *(void *)uint64_t v66 = v68;
                uint64_t v69 = v6[10];
                uint64_t v70 = &a1[v69];
                long long v71 = &a2[v69];
                uint64_t v72 = *(void *)v71;
                v70[8] = v71[8];
                *(void *)uint64_t v70 = v72;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v55)
              {
                (*(void (**)(char *, char *, uint64_t))(v102 + 24))(v52, v53, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v102 + 8))(v52, v16);
            }
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
            memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v102 + 8))(v46, v16);
        }
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(a1, v16);
    }
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  uint64_t v11 = sub_2562E2FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v101 = v12;
  if (v13(a2, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  uint64_t v20 = v6[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v13(&a2[v20], 1, v11))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v21, v22, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v21, 0, 1, v11);
  }
  uint64_t v24 = v6[6];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v25, 0, 1, v11);
  }
  uint64_t v28 = v6[7];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = v6[8];
  id v33 = *(void **)&a2[v32];
  *(void *)&a1[v32] = v33;
  uint64_t v34 = v6[9];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)v36;
  v35[8] = v36[8];
  *(void *)uint64_t v35 = v37;
  uint64_t v38 = v6[10];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = *(void *)v40;
  v39[8] = v40[8];
  *(void *)uint64_t v39 = v41;
  uint64_t v42 = *(void (**)(char *, void, uint64_t, int *))(v7 + 56);
  id v43 = v33;
  v42(a1, 0, 1, v6);
LABEL_35:
  uint64_t v73 = a3[5];
  uint64_t v74 = &a1[v73];
  uint64_t v75 = &a2[v73];
  int v76 = *(_DWORD *)v75;
  v74[4] = v75[4];
  *(_DWORD *)uint64_t v74 = v76;
  uint64_t v77 = a3[6];
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  *(void *)uint64_t v78 = *(void *)v79;
  *((void *)v78 + 1) = *((void *)v79 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[7];
  int v81 = &a1[v80];
  uint64_t v82 = &a2[v80];
  uint64_t v83 = sub_2562E2FD0();
  uint64_t v84 = *(void *)(v83 - 8);
  int v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  int v86 = v85(v81, 1, v83);
  int v87 = v85(v82, 1, v83);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v81, v82, v83);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
    goto LABEL_40;
  }
  if (v87)
  {
LABEL_40:
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v81, v82, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
LABEL_41:
  uint64_t v89 = a3[8];
  long long v90 = &a1[v89];
  long long v91 = &a2[v89];
  uint64_t v92 = *(void *)v91;
  v90[8] = v91[8];
  *(void *)long long v90 = v92;
  uint64_t v93 = a3[9];
  unint64_t v94 = &a1[v93];
  id v95 = &a2[v93];
  *(void *)unint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = a3[10];
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  int v99 = *(_DWORD *)v98;
  v97[4] = v98[4];
  *(_DWORD *)uint64_t v97 = v99;
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v7;
    uint64_t v9 = sub_2562E2FD0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
    }
    uint64_t v17 = v6[6];
    int v18 = &a1[v17];
    int v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v19, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    }
    uint64_t v21 = v6[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v24 = v6[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    v25[8] = v26[8];
    *(void *)uint64_t v25 = *(void *)v26;
    uint64_t v27 = v6[10];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    v28[8] = v29[8];
    *(void *)uint64_t v28 = *(void *)v29;
    (*(void (**)(char *, void, uint64_t, int *))(v50 + 56))(a1, 0, 1, v6);
  }
  uint64_t v30 = a3[5];
  uint64_t v31 = a3[6];
  uint64_t v32 = &a1[v30];
  id v33 = &a2[v30];
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  long long v34 = *(_OWORD *)&a2[v31];
  v32[4] = v33[4];
  *(_OWORD *)&a1[v31] = v34;
  uint64_t v35 = a3[7];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = sub_2562E2FD0();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v41 = a3[8];
  uint64_t v42 = a3[9];
  id v43 = &a1[v41];
  uint64_t v44 = &a2[v41];
  *(void *)id v43 = *(void *)v44;
  v43[8] = v44[8];
  *(_OWORD *)&a1[v42] = *(_OWORD *)&a2[v42];
  uint64_t v45 = a3[10];
  uint64_t v46 = a3[11];
  uint64_t v47 = &a1[v45];
  int v48 = &a2[v45];
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  v47[4] = v48[4];
  *(void *)&a1[v46] = *(void *)&a2[v46];
  return a1;
}

char *assignWithTake for DeviceExperimentMetrics(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_25627C5B8((uint64_t)a1, type metadata accessor for EventMetadata);
      goto LABEL_7;
    }
    uint64_t v16 = sub_2562E2FD0();
    uint64_t v92 = *(void *)(v16 - 8);
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
    int v18 = v17(a1, 1, v16);
    int v19 = v17(a2, 1, v16);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(a1, a2, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(a1, 0, 1, v16);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 40))(a1, a2, v16);
LABEL_22:
        uint64_t v38 = v6[5];
        uint64_t v39 = &a1[v38];
        uint64_t v40 = &a2[v38];
        int v41 = v17(&a1[v38], 1, v16);
        int v42 = v17(v40, 1, v16);
        if (v41)
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v39, v40, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v39, 0, 1, v16);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v92 + 40))(v39, v40, v16);
LABEL_28:
            uint64_t v44 = v6[6];
            uint64_t v45 = &a1[v44];
            uint64_t v46 = &a2[v44];
            int v47 = v17(&a1[v44], 1, v16);
            int v48 = v17(v46, 1, v16);
            if (v47)
            {
              if (!v48)
              {
                (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v45, v46, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v45, 0, 1, v16);
LABEL_34:
                uint64_t v50 = v6[7];
                uint64_t v51 = &a1[v50];
                uint64_t v52 = &a2[v50];
                *(void *)uint64_t v51 = *(void *)v52;
                v51[8] = v52[8];
                uint64_t v53 = v6[8];
                int v54 = *(void **)&a1[v53];
                *(void *)&a1[v53] = *(void *)&a2[v53];

                uint64_t v55 = v6[9];
                uint64_t v56 = &a1[v55];
                uint64_t v57 = &a2[v55];
                *(void *)uint64_t v56 = *(void *)v57;
                v56[8] = v57[8];
                uint64_t v58 = v6[10];
                uint64_t v59 = &a1[v58];
                uint64_t v60 = &a2[v58];
                v59[8] = v60[8];
                *(void *)uint64_t v59 = *(void *)v60;
                goto LABEL_35;
              }
            }
            else
            {
              if (!v48)
              {
                (*(void (**)(char *, char *, uint64_t))(v92 + 40))(v45, v46, v16);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v92 + 8))(v45, v16);
            }
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
            memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v92 + 8))(v39, v16);
        }
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v92 + 8))(a1, v16);
    }
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_35;
  }
  uint64_t v11 = sub_2562E2FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v91 = v12;
  if (v13(a2, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  uint64_t v20 = v6[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v13(&a2[v20], 1, v11))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v21, v22, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v21, 0, 1, v11);
  }
  uint64_t v24 = v6[6];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v25, 0, 1, v11);
  }
  uint64_t v28 = v6[7];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  uint64_t v31 = v6[9];
  uint64_t v32 = &a1[v31];
  id v33 = &a2[v31];
  v32[8] = v33[8];
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v34 = v6[10];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  v35[8] = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_35:
  uint64_t v61 = a3[5];
  uint64_t v62 = a3[6];
  uint64_t v63 = &a1[v61];
  id v64 = &a2[v61];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  uint64_t v65 = &a1[v62];
  uint64_t v66 = &a2[v62];
  uint64_t v68 = *(void *)v66;
  uint64_t v67 = *((void *)v66 + 1);
  *(void *)uint64_t v65 = v68;
  *((void *)v65 + 1) = v67;
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[7];
  uint64_t v70 = &a1[v69];
  long long v71 = &a2[v69];
  uint64_t v72 = sub_2562E2FD0();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v70, v71, v72);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_40;
  }
  if (v76)
  {
LABEL_40:
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
LABEL_41:
  uint64_t v78 = a3[8];
  uint64_t v79 = a3[9];
  uint64_t v80 = &a1[v78];
  int v81 = &a2[v78];
  *(void *)uint64_t v80 = *(void *)v81;
  v80[8] = v81[8];
  uint64_t v82 = &a1[v79];
  uint64_t v83 = &a2[v79];
  uint64_t v85 = *(void *)v83;
  uint64_t v84 = *((void *)v83 + 1);
  *(void *)uint64_t v82 = v85;
  *((void *)v82 + 1) = v84;
  swift_bridgeObjectRelease();
  uint64_t v86 = a3[10];
  uint64_t v87 = a3[11];
  uint64_t v88 = &a1[v86];
  uint64_t v89 = &a2[v86];
  *(_DWORD *)uint64_t v88 = *(_DWORD *)v89;
  v88[4] = v89[4];
  *(void *)&a1[v87] = *(void *)&a2[v87];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceExperimentMetrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2562819C4);
}

uint64_t sub_2562819C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for DeviceExperimentMetrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256281B1C);
}

uint64_t sub_256281B1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_256281C54()
{
  sub_256281D7C(319, (unint64_t *)&qword_269F54510, (void (*)(uint64_t))type metadata accessor for EventMetadata);
  if (v0 <= 0x3F)
  {
    sub_256281D7C(319, (unint64_t *)&qword_269F53EF8, MEMORY[0x270FA94D8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_256281D7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2562E38C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_256281DD0()
{
  return type metadata accessor for DeviceExperimentMetricsBuilderImpl(0);
}

uint64_t type metadata accessor for DeviceExperimentMetricsBuilderImpl(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F54F60);
}

void sub_256281DF8()
{
  sub_256281D7C(319, (unint64_t *)&qword_269F54510, (void (*)(uint64_t))type metadata accessor for EventMetadata);
  if (v0 <= 0x3F)
  {
    sub_256281D7C(319, (unint64_t *)&qword_269F53EF8, MEMORY[0x270FA94D8]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DeviceExperimentMetricsBuilderImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeviceExperimentMetricsBuilderImpl);
}

uint64_t SiriSegmentCohortCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_256289DF8(a1, a2, a3, a4);
  swift_release();
  return v8;
}

void (*sub_256281FAC(void *a1, uint64_t a2))(void *a1)
{
  unint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for EventMetadata(0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_25628A5F8(a2, (uint64_t)v6, type metadata accessor for EventMetadata);
  v4[5] = sub_256287E08(v4, (uint64_t)v6);
  return sub_256282060;
}

void sub_256282060(void *a1)
{
  unint64_t v1 = (void *)*a1;
  id v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_25628A6C8((uint64_t)v2, type metadata accessor for EventMetadata);
  free(v2);

  free(v1);
}

void (*sub_2562820D0(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  _OWORD v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_256287F78(v6, a2, a3);
  return sub_256282150;
}

void sub_256282150(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_2562821A4(void *a1))(void *a1)
{
  id v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2562E2F80();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  v2[6] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_256288098(v2);
  return sub_256282294;
}

void sub_256282294(void *a1)
{
  unint64_t v1 = (void *)*a1;
  id v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t SiriSegmentCohortResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.eventStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortResults.deviceSegmentsCohorts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.deviceSegmentsCohorts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.deviceSegmentsCohorts.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortResults.deviceBatchData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriSegmentCohortResults.deviceBatchData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*SiriSegmentCohortResults.deviceBatchData.modify())()
{
  return nullsub_1;
}

uint64_t SiriSegmentCohortCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_256289DF8(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t sub_256282490(uint64_t a1)
{
  v2[182] = v1;
  v2[181] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  v2[183] = swift_task_alloc();
  v2[184] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DeviceSegmentsCohorts(0);
  v2[185] = v3;
  v2[186] = *(void *)(v3 - 8);
  v2[187] = swift_task_alloc();
  v2[188] = swift_task_alloc();
  uint64_t v4 = sub_2562E3380();
  v2[189] = v4;
  v2[190] = *(void *)(v4 - 8);
  v2[191] = swift_task_alloc();
  v2[192] = swift_task_alloc();
  uint64_t v5 = sub_2562E33B0();
  v2[193] = v5;
  v2[194] = *(void *)(v5 - 8);
  v2[195] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25628266C, 0, 0);
}

uint64_t sub_25628266C()
{
  v277 = v0;
  sub_2562E33A0();
  sub_2562E3390();
  sub_2562E3360();
  uint64_t v1 = sub_2562E3390();
  os_signpost_type_t v2 = sub_2562E3830();
  if (sub_2562E38A0())
  {
    uint64_t v3 = v0[191];
    uint64_t v4 = v0[190];
    uint64_t v5 = v0[189];
    uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v4 + 16);
    v6(v3, v0[192], v5);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    os_signpost_id_t v8 = sub_2562E3370();
    _os_signpost_emit_with_name_impl(&dword_256226000, v1, v2, v8, "SiriSegmentCohortCalculatorSP", "", v7, 2u);
    MEMORY[0x25A2A5190](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    uint64_t v9 = v0[190];

    uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v9 + 16);
  }
  v273 = v0;
  v6(v0[191], v0[192], v0[189]);
  sub_2562E33F0();
  swift_allocObject();
  sub_2562E33E0();
  unint64_t v10 = sub_2562E3410();
  os_log_type_t v11 = sub_2562E37F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_256226000, v10, v11, "SQL calculator invoked: SiriSegmentCohortCalculator", v12, 2u);
    MEMORY[0x25A2A5190](v12, -1, -1);
  }
  uint64_t v13 = v0[182];

  uint64_t v14 = v13 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v15 = swift_task_alloc();
  sub_25622F360(v14, v15, &qword_269F53D10);
  uint64_t v16 = sub_2562E2E30();
  uint64_t v271 = *(void *)(v16 - 8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48);
  unsigned int v18 = v17(v15, 1, v16);
  sub_25622F3C4(v15, &qword_269F53D10);
  swift_task_dealloc();
  if (v18 == 1)
  {
    uint64_t v19 = v0[195];
    sub_256246AD8();
    swift_allocError();
    *uint64_t v20 = 9;
    swift_willThrow();
    goto LABEL_10;
  }
  uint64_t v21 = swift_task_alloc();
  sub_25622F360(v14, v21, &qword_269F53D10);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v21, 1, v16);
  if (result == 1) {
    goto LABEL_201;
  }
  sub_2562E3540();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
  v23(v21, v16);
  swift_task_dealloc();
  uint64_t v212 = v23;
  v228 = v17;
  uint64_t v28 = (void *)sub_2562E3110();
  uint64_t v210 = v16;
  uint64_t v29 = sub_2562E2F80();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = swift_task_alloc();
  id v32 = v28;
  id v33 = (void *)sub_2562E3110();
  int v200 = v32;
  uint64_t v208 = v31;
  uint64_t v209 = v30;
  uint64_t v211 = v29;
  sub_2562E32C0();
  char v35 = v34;

  unint64_t v0 = v273;
  if (v35)
  {
    uint64_t v36 = swift_task_alloc();
    uint64_t v37 = swift_task_alloc();
    uint64_t v38 = swift_task_alloc();
    sub_2562E32A0();
    sub_2562E2EC0();
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
    v39(v38, v29);
    swift_task_dealloc();
    sub_2562E2EA0();
    v39(v37, v29);
    swift_task_dealloc();
    sub_2562E2EB0();
    v39(v36, v29);
    swift_task_dealloc();
  }
  else
  {
    sub_2562E2E70();
  }
  unint64_t v207 = v273 + 173;
  uint64_t v40 = swift_task_alloc();
  uint64_t v41 = sub_2562E3060();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = swift_task_alloc();
  sub_2562E3020();
  sub_2562E2EC0();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v41);
  swift_task_dealloc();
  sub_2562E32E0();
  uint64_t v198 = v40;
  sub_2562E2E80();
  v267 = (void *)sub_2562E32D0();
  uint64_t v44 = swift_task_alloc();
  sub_2562E2EC0();
  uint64_t v45 = swift_task_alloc();
  sub_2562E30F0();
  uint64_t v201 = v45;
  uint64_t v202 = v44;
  uint64_t v46 = sub_2562865B4(v44, v45);
  uint64_t v48 = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54FB0);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_2562E4C90;
  *(void *)(v49 + 56) = MEMORY[0x263F8D310];
  *(void *)(v49 + 64) = sub_256289FF8();
  *(void *)(v49 + 32) = v46;
  *(void *)(v49 + 40) = v48;
  uint64_t v50 = sub_2562E3580();
  unint64_t v52 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v53 = sub_2562E3410();
  os_log_type_t v54 = sub_2562E37F0();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    v276[0] = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    swift_bridgeObjectRetain();
    v273[176] = sub_256229738(v50, v52, v276);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v53, v54, "SQL: %s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v56, -1, -1);
    MEMORY[0x25A2A5190](v55, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v57 = v209;
  uint64_t v274 = MEMORY[0x263F8EE80];
  sub_2562E3260();
  id v197 = v267;
  char v199 = (void *)sub_2562E3240();
  uint64_t v58 = sub_2562E3250();
  swift_bridgeObjectRelease();
  uint64_t v230 = swift_task_alloc();
  sub_2562E32A0();
  uint64_t v59 = MEMORY[0x263F8EE78];
  *unint64_t v207 = MEMORY[0x263F8EE78];
  uint64_t v229 = v58;
  if ((sub_2562E3280() & 1) == 0)
  {
    uint64_t v242 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
LABEL_138:
    swift_bridgeObjectRetain();
    uint64_t v135 = sub_2562E3410();
    os_log_type_t v136 = sub_2562E37F0();
    if (os_log_type_enabled(v135, v136))
    {
      uint64_t v137 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v137 = 134217984;
      v273[174] = *(void *)(v59 + 16);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v135, v136, "SiriSegmentCohortCalculator query yielded %ld results", v137, 0xCu);
      MEMORY[0x25A2A5190](v137, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    sub_2562868F4(v232, 0xD000000000000017, 0x80000002562EC5E0);
    sub_2562868F4(v231, 0xD000000000000015, 0x80000002562EC600);
    sub_2562868F4(v242, 0xD00000000000001CLL, 0x80000002562EC620);
    uint64_t v138 = sub_2562E3410();
    os_log_type_t v139 = sub_2562E37F0();
    if (os_log_type_enabled(v138, v139))
    {
      unint64_t v140 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v140 = 0;
      _os_log_impl(&dword_256226000, v138, v139, "SQL calculator invoked for SiriLogicClockIds", v140, 2u);
      MEMORY[0x25A2A5190](v140, -1, -1);
    }

    uint64_t v141 = swift_task_alloc();
    type metadata accessor for SiriSegmentCohortMetrics();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v143 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v144 = (void *)sub_2562E3550();
    id v145 = (void *)sub_2562E3550();
    id v146 = objc_msgSend(v143, sel_URLForResource_withExtension_, v144, v145);

    uint64_t v147 = swift_task_alloc();
    if (v146)
    {
      sub_2562E2E20();

      uint64_t v148 = 0;
    }
    else
    {
      uint64_t v148 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v271 + 56))(v147, v148, 1, v210);
    sub_25622F514(v147, v141, &qword_269F53D10);
    swift_task_dealloc();
    if (v228(v141, 1, v210) == 1)
    {
      uint64_t v19 = v273[195];
      swift_bridgeObjectRelease();

      sub_256246AD8();
      swift_allocError();
      *id v149 = 9;
      swift_willThrow();

      swift_release();
      v150 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v150(v230, v211);
      v150(v201, v211);
      v150(v202, v211);
      v150(v198, v211);
      v150(v208, v211);
      sub_25622F3C4(v141, &qword_269F53D10);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      goto LABEL_10;
    }
    uint64_t v151 = swift_task_alloc();
    sub_25622F360(v141, v151, &qword_269F53D10);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v228)(v151, 1, v210);
    if (result == 1) {
      goto LABEL_202;
    }
    sub_2562E3540();
    uint64_t v269 = v141;
    v212(v151, v210);
    swift_task_dealloc();
    sub_2562E3250();
    swift_bridgeObjectRelease();
    if ((sub_2562E3280() & 1) == 0)
    {
LABEL_183:
      uint64_t v175 = MEMORY[0x263F8EE78];
      unint64_t v275 = MEMORY[0x263F8EE78];
      if (*(void *)(v274 + 16))
      {
        uint64_t v176 = swift_bridgeObjectRetain();
        sub_2562863FC(v176, &v274, &v275);
        swift_bridgeObjectRelease();
      }
      uint64_t v177 = sub_2562E3290();
      if (!v177)
      {
        uint64_t v253 = v273[195];
        uint64_t v262 = v273[194];
        uint64_t v263 = v273[193];
        uint64_t v256 = v273[190];
        uint64_t v258 = v273[189];
        uint64_t v260 = v273[192];
        uint64_t v187 = (uint64_t *)v273[181];
        sub_2562E32B0();

        uint64_t v248 = sub_2562E30B0();
        swift_release();
        swift_release();

        uint64_t v188 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
        v188(v230, v211);
        v188(v201, v211);
        v188(v202, v211);
        v188(v198, v211);
        v188(v208, v211);
        swift_beginAccess();
        uint64_t v189 = v273[173];
        unint64_t v190 = v275;
        *uint64_t v187 = v248;
        v187[1] = v175;
        v187[2] = v189;
        v187[3] = v190;
        swift_bridgeObjectRetain();
        sub_25622F3C4(v269, &qword_269F53D10);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_256285714(v253, (unint64_t)"SiriSegmentCohortCalculatorSP", 29, 2);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v260, v258);
        (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v253, v263);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v27 = (uint64_t (*)(void))v273[1];
        goto LABEL_11;
      }
      uint64_t v178 = (void *)v177;
      swift_bridgeObjectRelease();

      id v179 = v178;
      id v180 = v178;
      uint64_t v181 = sub_2562E3410();
      os_log_type_t v182 = sub_2562E3800();
      if (os_log_type_enabled(v181, v182))
      {
        unint64_t v183 = (uint8_t *)swift_slowAlloc();
        uint64_t v184 = swift_slowAlloc();
        v276[0] = v184;
        *(_DWORD *)unint64_t v183 = 136315138;
        swift_getErrorValue();
        uint64_t v185 = sub_2562E3CE0();
        v273[175] = sub_256229738(v185, v186, v276);
        sub_2562E38F0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_256226000, v181, v182, "SQL execution error: %s", v183, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v184, -1, -1);
        MEMORY[0x25A2A5190](v183, -1, -1);
      }
      else
      {
      }
      uint64_t v19 = v273[195];
      swift_getErrorValue();
      sub_2562E3CE0();
      sub_256246AD8();
      swift_allocError();
      static BiomeSQLDatabaseUtils.identifySqlError(errorString:)(v191);
      swift_bridgeObjectRelease();
      swift_willThrow();

      swift_release();
      swift_release();

      int v192 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
      v192(v230, v211);
      v192(v201, v211);
      v192(v202, v211);
      v192(v198, v211);
      v192(v208, v211);
      sub_25622F3C4(v269, &qword_269F53D10);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
LABEL_10:
      sub_256285714(v19, (unint64_t)"SiriSegmentCohortCalculatorSP", 29, 2);
      swift_release();
      uint64_t v24 = v0[195];
      uint64_t v25 = v0[194];
      uint64_t v26 = v0[193];
      (*(void (**)(void, void))(v0[190] + 8))(v0[192], v0[189]);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v27 = (uint64_t (*)(void))v0[1];
LABEL_11:
      return v27();
    }
    uint64_t v266 = v273 + 71;
    v255 = v273 + 103;
    while (1)
    {
      uint64_t v152 = sub_2562E3270();
      if (v152)
      {
        uint64_t v153 = v152;
        v273[155] = 0x61645F746E657665;
        v273[156] = 0xEA00000000006574;
        sub_2562E39D0();
        if (*(void *)(v153 + 16) && (unint64_t v154 = sub_25625626C((uint64_t)(v273 + 42)), (v155 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v153 + 56) + 32 * v154, (uint64_t)(v273 + 79));
        }
        else
        {
          *(_OWORD *)(v273 + 79) = 0u;
          *(_OWORD *)(v273 + 81) = 0u;
        }
        sub_2562571A0((uint64_t)(v273 + 42));
        if (v273[82])
        {
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_182;
          }
          uint64_t v156 = v273[152];
          if (*(void *)(v274 + 16))
          {
            uint64_t v157 = v273[151];
            swift_bridgeObjectRetain();
            sub_2562561F4(v157, v156);
            char v159 = v158;
            swift_bridgeObjectRelease();
            if ((v159 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_182:
              swift_bridgeObjectRelease();
              goto LABEL_152;
            }
            v273[149] = 0xD000000000000011;
            v273[150] = 0x80000002562ED9C0;
            uint64_t v160 = (uint64_t)(v273 + 62);
            sub_2562E39D0();
            if (*(void *)(v153 + 16))
            {
              unint64_t v161 = sub_25625626C((uint64_t)(v273 + 62));
              if (v162)
              {
                sub_256229CD0(*(void *)(v153 + 56) + 32 * v161, (uint64_t)v266);
              }
              else
              {
                *uint64_t v266 = 0u;
                *(_OWORD *)(v273 + 73) = 0u;
              }
              uint64_t v160 = (uint64_t)(v273 + 62);
            }
            else
            {
              *uint64_t v266 = 0u;
              *(_OWORD *)(v273 + 73) = 0u;
            }
            swift_bridgeObjectRelease();
            sub_2562571A0(v160);
            if (v273[74])
            {
              if ((swift_dynamicCast() & 1) == 0) {
                goto LABEL_182;
              }
              int v163 = sub_2562820D0(v255, v157, v156);
              uint64_t v164 = (void (*)(void *, void))v163;
              v250 = v165;
              if (!*v165)
              {
                swift_bridgeObjectRelease();
                v164(v255, 0);
                goto LABEL_182;
              }
              uint64_t v245 = (void (*)(void *, void))v163;
              __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
              uint64_t v166 = swift_task_alloc();
              sub_2562E2F90();
              swift_bridgeObjectRelease();
              uint64_t v167 = sub_2562E2FD0();
              uint64_t v168 = *(void *)(v167 - 8);
              uint64_t v252 = v166;
              uint64_t v247 = v167;
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v168 + 48))(v166, 1);
              if (result == 1) {
                goto LABEL_203;
              }
              unint64_t v169 = *v250;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t *v250 = v169;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v169 = sub_25626BCB4(0, *(void *)(v169 + 16) + 1, 1, v169);
                unint64_t *v250 = v169;
              }
              unint64_t v172 = *(void *)(v169 + 16);
              unint64_t v171 = *(void *)(v169 + 24);
              unint64_t v173 = v172 + 1;
              if (v172 >= v171 >> 1)
              {
                uint64_t v174 = sub_25626BCB4(v171 > 1, v172 + 1, 1, v169);
                unint64_t v173 = v172 + 1;
                unint64_t v169 = v174;
                unint64_t *v250 = v174;
              }
              *(void *)(v169 + 16) = v173;
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v168 + 32))(v169+ ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80))+ *(void *)(v168 + 72) * v172, v252, v247);
              v245(v255, 0);
              swift_bridgeObjectRelease();
              swift_task_dealloc();
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_25622F3C4((uint64_t)v266, &qword_269F543D8);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_25622F3C4((uint64_t)(v273 + 79), &qword_269F543D8);
        }
      }
LABEL_152:
      if ((sub_2562E3280() & 1) == 0) {
        goto LABEL_183;
      }
    }
  }
  uint64_t v242 = 0;
  uint64_t v231 = 0;
  uint64_t v232 = 0;
  uint64_t v216 = (uint64_t)(v273 + 2);
  uint64_t v60 = (uint64_t)(v273 + 7);
  uint64_t v259 = (uint64_t)(v273 + 12);
  uint64_t v225 = (uint64_t)(v273 + 17);
  uint64_t v61 = (uint64_t)(v273 + 22);
  uint64_t v62 = (uint64_t)(v273 + 27);
  uint64_t v227 = (uint64_t)(v273 + 47);
  uint64_t v220 = (uint64_t)(v273 + 52);
  uint64_t v221 = (uint64_t)(v273 + 32);
  uint64_t v222 = v273 + 75;
  uint64_t v223 = v273 + 67;
  id v226 = v273 + 87;
  uint64_t v218 = v273 + 91;
  uint64_t v219 = (uint64_t)(v273 + 57);
  uint64_t v193 = v273 + 99;
  uint64_t v194 = (uint64_t)(v273 + 37);
  uint64_t v205 = OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlDateFormatter;
  uint64_t v206 = v273[182];
  uint64_t v217 = v206 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  uint64_t v215 = v273 + 111;
  v254 = v273 + 95;
  v257 = v273 + 83;
  v249 = v273 + 119;
  long long v251 = v273 + 107;
  uint64_t v213 = v273[185];
  uint64_t v214 = v273[186];
  uint64_t v203 = (void (**)(uint64_t, uint64_t, uint64_t))(v209 + 32);
  uint64_t v204 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v209 + 56);
  char v196 = (void (**)(uint64_t, uint64_t))(v209 + 8);
  v224 = v273 + 115;
  while (1)
  {
    uint64_t v64 = sub_2562E3270();
    if (!v64) {
      goto LABEL_25;
    }
    uint64_t v65 = v58;
    v273[143] = 0xD000000000000010;
    v273[144] = 0x80000002562ED9E0;
    uint64_t v272 = v64;
    sub_2562E39D0();
    if (*(void *)(v272 + 16) && (unint64_t v66 = sub_25625626C(v62), (v67 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v272 + 56) + 32 * v66, (uint64_t)v257);
    }
    else
    {
      _OWORD *v257 = 0u;
      *(_OWORD *)(v273 + 85) = 0u;
    }
    uint64_t v68 = (unsigned int *)v273 + 393;
    sub_2562571A0(v62);
    if (v273[86])
    {
      if (swift_dynamicCast()) {
        int v69 = *((unsigned __int8 *)v273 + 1581);
      }
      else {
        int v69 = 2;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v257, &qword_269F543D8);
      int v69 = 2;
    }
    v273[139] = 0xD000000000000015;
    v273[140] = 0x80000002562EDA00;
    sub_2562E39D0();
    if (*(void *)(v272 + 16))
    {
      unint64_t v70 = sub_25625626C(v61);
      if (v71)
      {
        sub_256229CD0(*(void *)(v272 + 56) + 32 * v70, (uint64_t)v254);
      }
      else
      {
        _OWORD *v254 = 0u;
        *(_OWORD *)(v273 + 97) = 0u;
      }
      uint64_t v68 = (unsigned int *)v273 + 393;
    }
    else
    {
      _OWORD *v254 = 0u;
      *(_OWORD *)(v273 + 97) = 0u;
    }
    sub_2562571A0(v61);
    if (!v273[98])
    {
      sub_25622F3C4((uint64_t)v254, &qword_269F543D8);
LABEL_47:
      int v72 = 2;
      goto LABEL_48;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_47;
    }
    if (*((unsigned char *)v273 + 1580))
    {
      int v72 = 1;
      int v73 = 2;
      goto LABEL_49;
    }
    int v72 = 0;
LABEL_48:
    int v73 = 1;
LABEL_49:
    int v246 = v73;
    int v74 = (v72 & 1) == 0;
    if (v69) {
      int v74 = 2;
    }
    int v244 = v74;
    v273[137] = 0xD000000000000025;
    v273[138] = 0x80000002562EBDD0;
    sub_2562E39D0();
    if (*(void *)(v272 + 16))
    {
      unint64_t v75 = sub_25625626C(v259);
      if (v76)
      {
        sub_256229CD0(*(void *)(v272 + 56) + 32 * v75, (uint64_t)v251);
      }
      else
      {
        *long long v251 = 0u;
        *(_OWORD *)(v273 + 109) = 0u;
      }
      uint64_t v68 = (unsigned int *)v273 + 393;
    }
    else
    {
      *long long v251 = 0u;
      *(_OWORD *)(v273 + 109) = 0u;
    }
    sub_2562571A0(v259);
    if (!v273[110])
    {
      sub_25622F3C4((uint64_t)v251, &qword_269F543D8);
LABEL_61:
      uint64_t v77 = 0;
      goto LABEL_62;
    }
    if (!swift_dynamicCast()) {
      goto LABEL_61;
    }
    uint64_t v77 = *v68;
LABEL_62:
    v273[135] = 0xD000000000000029;
    v273[136] = 0x80000002562EBE00;
    sub_2562E39D0();
    if (*(void *)(v272 + 16) && (unint64_t v78 = sub_25625626C(v60), (v79 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v272 + 56) + 32 * v78, (uint64_t)v249);
    }
    else
    {
      _OWORD *v249 = 0u;
      *(_OWORD *)(v273 + 121) = 0u;
    }
    sub_2562571A0(v60);
    uint64_t v58 = v65;
    if (v273[122])
    {
      if (swift_dynamicCast())
      {
        uint64_t v261 = *((unsigned int *)v273 + 392);
        if (v77 | v261) {
          goto LABEL_73;
        }
        goto LABEL_76;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v249, &qword_269F543D8);
    }
    if (v77)
    {
      uint64_t v261 = 0;
      goto LABEL_73;
    }
LABEL_76:
    uint64_t v261 = 0;
    if ((v72 & 1) != 0 && v69 != 2 && (v69 & 1) == 0 && v72 != 2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
LABEL_73:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    uint64_t v80 = swift_task_alloc();
    uint64_t v81 = sub_2562E2FD0();
    uint64_t v239 = *(void *)(v81 - 8);
    uint64_t v270 = v80;
    uint64_t v264 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v239 + 56);
    v264(v80, 1, 1, v81);
    v273[165] = 0xD000000000000015;
    v273[166] = 0x80000002562EB0B0;
    sub_2562E39D0();
    sub_256255764(v227, v272, v226);
    sub_2562571A0(v227);
    if (v273[90])
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v82 = v81;
        uint64_t v83 = swift_task_alloc();
        sub_2562E2F90();
        swift_bridgeObjectRelease();
        sub_25622F3C4(v80, &qword_269F53D68);
        sub_25622F514(v83, v80, &qword_269F53D68);
        uint64_t v81 = v82;
        swift_task_dealloc();
        goto LABEL_83;
      }
    }
    else
    {
      uint64_t result = sub_25622F3C4((uint64_t)v226, &qword_269F543D8);
    }
    BOOL v84 = __OFADD__(v232++, 1);
    if (v84) {
      goto LABEL_196;
    }
LABEL_83:
    uint64_t v243 = v77;
    uint64_t v268 = swift_task_alloc();
    v264(v268, 1, 1, v81);
    v273[141] = 0xD000000000000013;
    v273[142] = 0x80000002562EC6C0;
    sub_2562E39D0();
    sub_256255764(v225, v272, v224);
    sub_2562571A0(v225);
    if (v273[118])
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v85 = swift_task_alloc();
        sub_2562E2F90();
        swift_bridgeObjectRelease();
        sub_25622F3C4(v268, &qword_269F53D68);
        sub_25622F514(v85, v268, &qword_269F53D68);
        swift_task_dealloc();
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t result = sub_25622F3C4((uint64_t)v224, &qword_269F543D8);
    }
    BOOL v84 = __OFADD__(v231++, 1);
    if (v84) {
      goto LABEL_197;
    }
LABEL_88:
    v273[147] = 0xD000000000000029;
    v273[148] = 0x80000002562EB150;
    sub_2562E39D0();
    sub_256255764(v219, v272, v218);
    sub_2562571A0(v219);
    if (v273[94])
    {
      int v86 = swift_dynamicCast();
      uint64_t v87 = v273[178];
      if (!v86) {
        uint64_t v87 = 0;
      }
      uint64_t v238 = v87;
      char v88 = v86 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v218, &qword_269F543D8);
      uint64_t v238 = 0;
      char v88 = 1;
    }
    char v237 = v88;
    v273[153] = 0xD00000000000002BLL;
    v273[154] = 0x80000002562EB180;
    sub_2562E39D0();
    sub_256255764(v220, v272, v223);
    sub_2562571A0(v220);
    if (v273[70])
    {
      int v89 = swift_dynamicCast();
      uint64_t v90 = v273[177];
      if (!v89) {
        uint64_t v90 = 0;
      }
      uint64_t v236 = v90;
      char v91 = v89 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v223, &qword_269F543D8);
      uint64_t v236 = 0;
      char v91 = 1;
    }
    char v235 = v91;
    id v241 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
    v273[159] = 0x61645F746E657665;
    v273[160] = 0xEA00000000006574;
    sub_2562E39D0();
    sub_256255764(v221, v272, v222);
    sub_2562571A0(v221);
    if (!v273[78])
    {
      uint64_t result = sub_25622F3C4((uint64_t)v222, &qword_269F543D8);
      goto LABEL_114;
    }
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0) {
      goto LABEL_114;
    }
    uint64_t v92 = swift_task_alloc();
    uint64_t v93 = *(void **)(v206 + v205);
    unint64_t v94 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    id v95 = objc_msgSend(v93, sel_dateFromString_, v94);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    uint64_t v96 = swift_task_alloc();
    uint64_t v97 = v96;
    if (!v95)
    {
      (*v204)(v96, 1, 1, v211);
LABEL_113:
      sub_25622F3C4(v97, &qword_269F53DB0);
      swift_task_dealloc();
      uint64_t result = swift_task_dealloc();
LABEL_114:
      if (__OFADD__(v242, 1)) {
        goto LABEL_195;
      }
      ++v242;
      goto LABEL_116;
    }
    uint64_t v98 = swift_task_alloc();
    sub_2562E2F60();

    int v99 = *v203;
    (*v203)(v97, v98, v211);
    (*v204)(v97, 0, 1, v211);
    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v209 + 48))(v97, 1, v211) == 1) {
      goto LABEL_113;
    }
    v99(v92, v97, v211);
    swift_task_dealloc();
    uint64_t v100 = v92;
    uint64_t v101 = swift_task_alloc();
    sub_2562E2EB0();
    if ((sub_2562E2F20() & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();

    uint64_t v63 = *v196;
    (*v196)(v101, v211);
    v63(v100, v211);
    sub_25622F3C4(v268, &qword_269F53D68);
    sub_25622F3C4(v270, &qword_269F53D68);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v60 = (uint64_t)(v273 + 7);
LABEL_24:
    uint64_t v61 = (uint64_t)(v273 + 22);
    uint64_t v62 = (uint64_t)(v273 + 27);
LABEL_25:
    if ((sub_2562E3280() & 1) == 0)
    {
      uint64_t v59 = *v207;
      uint64_t v57 = v209;
      goto LABEL_138;
    }
  }
  uint64_t v233 = v100;
  uint64_t v195 = v81;
  if (v241)
  {
    uint64_t v102 = swift_task_alloc();
    id v103 = v241;
    sub_2562E2E90();
    sub_2562E2F40();
    double v105 = v104;
    uint64_t v106 = *v196;
    uint64_t v107 = v211;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))*v196)(v102, v211);
    if ((~*(void *)&v105 & 0x7FF0000000000000) == 0) {
      goto LABEL_198;
    }
    if (v105 <= -1.0) {
      goto LABEL_199;
    }
    if (v105 >= 1.84467441e19) {
      goto LABEL_200;
    }
    swift_task_dealloc();
    objc_msgSend(v103, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v105);

    v273[157] = 0xD000000000000018;
    v273[158] = 0x80000002562EC7A0;
    id v108 = v103;
    sub_2562E39D0();
    sub_256255764(v194, v272, v193);
    sub_2562571A0(v194);
    if (v273[102])
    {
      if (swift_dynamicCast()) {
        uint64_t v109 = *((unsigned int *)v273 + 394);
      }
      else {
        uint64_t v109 = 86400;
      }
    }
    else
    {
      uint64_t v109 = 86400;
      sub_25622F3C4((uint64_t)v193, &qword_269F543D8);
    }
    objc_msgSend(v108, sel_setNumberOfSeconds_, v109);

    v106(v101, v211);
  }
  else
  {
    uint64_t v106 = *v196;
    uint64_t v107 = v211;
    (*v196)(v101, v211);
  }
  v106(v233, v107);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v81 = v195;
LABEL_116:
  uint64_t v110 = v273[184];
  type metadata accessor for DeviceSegmentsCohortsImpl(0);
  uint64_t v111 = swift_allocObject();
  uint64_t v112 = v111 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata;
  uint64_t v113 = (int *)type metadata accessor for EventMetadata(0);
  uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(*((void *)v113 - 1) + 56);
  v114(v112, 1, 1, v113);
  uint64_t v115 = OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceSegmentsReported;
  *(void *)(v111 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceSegmentsReported) = 0;
  uint64_t v234 = OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceCohortsReported;
  *(void *)(v111 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_deviceCohortsReported) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v239 + 16))(v110, v217, v81);
  v264(v110, 0, 1, v81);
  sub_25622F360(v270, v110 + v113[5], &qword_269F53D68);
  sub_25622F360(v268, v110 + v113[6], &qword_269F53D68);
  uint64_t result = sub_2562E2F40();
  if ((~*(void *)&v116 & 0x7FF0000000000000) != 0)
  {
    if (v116 <= -1.0) {
      goto LABEL_192;
    }
    if (v116 >= 1.84467441e19) {
      goto LABEL_193;
    }
    if (!is_mul_ok((unint64_t)v116, 0x3E8uLL)) {
      goto LABEL_194;
    }
    uint64_t v240 = v273[188];
    uint64_t v117 = v273[184];
    uint64_t v118 = v273[183];
    uint64_t v119 = v117 + v113[7];
    *(void *)uint64_t v119 = 1000 * (unint64_t)v116;
    *(unsigned char *)(v119 + 8) = 0;
    *(void *)(v117 + v113[8]) = v241;
    uint64_t v120 = v117 + v113[9];
    *(void *)uint64_t v120 = v238;
    *(unsigned char *)(v120 + 8) = v237;
    uint64_t v121 = v117 + v113[10];
    *(void *)uint64_t v121 = v236;
    *(unsigned char *)(v121 + 8) = v235;
    v114(v117, 0, 1, v113);
    sub_25622F360(v117, v118, &qword_269F54398);
    swift_beginAccess();
    id v265 = v241;
    sub_2562571F4(v118, v112, &qword_269F54398);
    swift_endAccess();
    sub_25622F3C4(v117, &qword_269F54398);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54FD0);
    uint64_t v122 = swift_allocObject();
    *(_OWORD *)(v122 + 16) = xmmword_2562E4C90;
    *(_DWORD *)(v122 + 32) = v244;
    *(unsigned char *)(v122 + 36) = 0;
    *(_DWORD *)(v122 + 40) = v246;
    *(unsigned char *)(v122 + 44) = 0;
    *(_DWORD *)(v122 + 48) = v243;
    *(unsigned char *)(v122 + 52) = 0;
    *(_DWORD *)(v122 + 56) = v261;
    *(unsigned char *)(v122 + 60) = 0;
    *(void *)(v111 + v115) = v122;
    swift_bridgeObjectRelease();
    sub_25622F360(v112, v240, &qword_269F54398);
    uint64_t v123 = *(void *)(v111 + v234);
    *(void *)(v240 + *(int *)(v213 + 20)) = v122;
    *(void *)(v240 + *(int *)(v213 + 24)) = v123;
    swift_setDeallocating();
    uint64_t v124 = v111 + OBJC_IVAR____TtC16MetricsFramework25DeviceSegmentsCohortsImpl_eventMetadata;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25622F3C4(v124, &qword_269F54398);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocClassInstance();
    v273[167] = 0x61645F746E657665;
    v273[168] = 0xEA00000000006574;
    sub_2562E39D0();
    sub_256255764(v216, v272, v215);
    swift_bridgeObjectRelease();
    sub_2562571A0(v216);
    if (v273[114])
    {
      uint64_t v58 = v229;
      uint64_t v60 = (uint64_t)(v273 + 7);
      if (swift_dynamicCast())
      {
        uint64_t v125 = v273[169];
        uint64_t v126 = v273[170];
        if (!*(void *)(v274 + 16)
          || (swift_bridgeObjectRetain(),
              sub_2562561F4(v125, v126),
              char v128 = v127,
              swift_bridgeObjectRelease(),
              (v128 & 1) == 0))
        {
          char v129 = swift_isUniquelyReferenced_nonNull_native();
          v276[0] = v274;
          sub_256289AF4(MEMORY[0x263F8EE78], v243 | (v261 << 32), v125, v126, v129);
          uint64_t v274 = v276[0];
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v215, &qword_269F543D8);
      uint64_t v58 = v229;
      uint64_t v60 = (uint64_t)(v273 + 7);
    }
    sub_25628A5F8(v273[188], v273[187], type metadata accessor for DeviceSegmentsCohorts);
    unint64_t v130 = v273[173];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v130 = sub_25626C240(0, *(void *)(v130 + 16) + 1, 1, v130);
    }
    unint64_t v132 = *(void *)(v130 + 16);
    unint64_t v131 = *(void *)(v130 + 24);
    if (v132 >= v131 >> 1) {
      unint64_t v130 = sub_25626C240(v131 > 1, v132 + 1, 1, v130);
    }
    uint64_t v133 = v273[188];
    uint64_t v134 = v273[187];
    *(void *)(v130 + 16) = v132 + 1;
    sub_25628A660(v134, v130+ ((*(unsigned __int8 *)(v214 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v214 + 80))+ *(void *)(v214 + 72) * v132, type metadata accessor for DeviceSegmentsCohorts);

    v273[173] = v130;
    sub_25628A6C8(v133, type metadata accessor for DeviceSegmentsCohorts);
    sub_25622F3C4(v268, &qword_269F53D68);
    sub_25622F3C4(v270, &qword_269F53D68);
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_24;
  }
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
  return result;
}

uint64_t sub_256285714(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_2562E33C0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_2562E3380();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_2562E3390();
  sub_2562E33D0();
  int v24 = sub_2562E3820();
  if ((sub_2562E38A0() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_2562AC010();
LABEL_10:
  swift_retain();
  sub_2562E3400();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == *MEMORY[0x263F90238])
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v20 = 0;
  os_signpost_id_t v21 = sub_2562E3370();
  _os_signpost_emit_with_name_impl(&dword_256226000, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  MEMORY[0x25A2A5190](v20, -1, -1);

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

uint64_t sub_256285A2C(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for DeviceBatchData(0);
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v89 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v73 - v11;
  uint64_t v14 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v15 = *a2;
  if (*(void *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_2562561F4(v14, v13);
    if (v17)
    {
      uint64_t v74 = *(void *)(*(void *)(v15 + 56) + 16 * v16);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v74 = 0;
LABEL_6:
  uint64_t v18 = *a2;
  if (*(void *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_2562561F4(v14, v13);
    if (v20)
    {
      uint64_t v21 = *(void *)(v18 + 56) + 16 * v19;
      uint64_t v22 = *(void *)v21;
      int v92 = *(_DWORD *)(v21 + 8);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      if (v22)
      {
        uint64_t result = swift_bridgeObjectRelease();
        int v87 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int v92 = 0;
  int v87 = 1;
LABEL_12:
  uint64_t v23 = *a2;
  if (*(void *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_2562561F4(v14, v13);
    if (v25)
    {
      uint64_t v26 = *(void *)(v23 + 56) + 16 * v24;
      uint64_t v27 = *(void *)v26;
      int v91 = *(_DWORD *)(v26 + 12);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      if (v27)
      {
        uint64_t result = swift_bridgeObjectRelease();
        int v86 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int v91 = 0;
  int v86 = 1;
LABEL_18:
  if (v74)
  {
    v73[2] = v3;
    uint64_t v28 = v74;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    v73[1] = v73;
    MEMORY[0x270FA5388](v29 - 8);
    uint64_t v85 = v30;
    uint64_t v31 = (char *)v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v32 = *(void *)(v28 + 16);
    if (v32)
    {
      uint64_t v33 = sub_2562E2FD0();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v35 = v74 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v78 = *(void *)(v34 + 72);
      uint64_t v36 = (void (**)(void))(v34 + 56);
      BOOL v84 = (uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
      uint64_t v77 = v34 + 32;
      uint64_t v37 = *(void (**)(void, void, void))(v34 + 16);
      uint64_t v79 = v34;
      unint64_t v75 = (void (**)(char *, uint64_t))(v34 + 8);
      uint64_t v83 = v9;
      uint64_t v82 = v12;
      uint64_t v81 = v31;
      uint64_t v80 = v33;
      double v105 = (void (**)(void))(v34 + 56);
      char v76 = v37;
      uint64_t v104 = v34 + 16;
      while (1)
      {
        v37(v31, v35, v33);
        uint64_t v38 = *v36;
        ((void (*)(char *, void, uint64_t, uint64_t))*v36)(v31, 0, 1, v33);
        uint64_t v39 = (*v84)(v31, 1, v33);
        if (v39 == 1) {
          break;
        }
        uint64_t v102 = v35;
        uint64_t v103 = v32;
        uint64_t v101 = v73;
        uint64_t v40 = *(void *)(v79 + 64);
        MEMORY[0x270FA5388](v39);
        unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v107 = (char *)v73 - v41;
        uint64_t v43 = (*(uint64_t (**)(void))(v42 + 32))();
        uint64_t v100 = v73;
        MEMORY[0x270FA5388](v43);
        uint64_t v44 = (char *)v73 - v41;
        sub_2562E2FC0();
        type metadata accessor for DeviceBatchDataBuilderImpl(0);
        uint64_t v45 = swift_allocObject();
        uint64_t v106 = v45 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId;
        v38();
        uint64_t v96 = v45 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId;
        uint64_t v46 = ((uint64_t (*)(void))v38)();
        id v95 = v73;
        uint64_t v47 = v45 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoValidAssistantTurnsPerWeek;
        uint64_t v98 = (_DWORD *)(v45
                       + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoValidAssistantTurnsPerWeek);
        *(_DWORD *)uint64_t v47 = 0;
        *(unsigned char *)(v47 + 4) = 1;
        uint64_t v48 = v45
            + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoAssistantSpeechRequestsPerWeek;
        uint64_t v97 = (_DWORD *)(v45
                       + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_daysWithTwoAssistantSpeechRequestsPerWeek);
        *(_DWORD *)uint64_t v48 = 0;
        *(unsigned char *)(v48 + 4) = 1;
        uint64_t v49 = (void (*)(char *, char *, uint64_t))v37;
        uint64_t v50 = v85;
        MEMORY[0x270FA5388](v46);
        unint64_t v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF0;
        int v99 = v44;
        v49((char *)v73 - v51, v44, v33);
        uint64_t v52 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)((char *)v73 - v51, 0, 1, v33);
        uint64_t v93 = v73;
        MEMORY[0x270FA5388](v52);
        sub_25622F360((uint64_t)v73 - v51, (uint64_t)v73 - v51, &qword_269F53D68);
        unint64_t v94 = v38;
        uint64_t v53 = v106;
        swift_beginAccess();
        sub_2562571F4((uint64_t)v73 - v51, v53, &qword_269F53D68);
        swift_endAccess();
        uint64_t v54 = sub_25622F3C4((uint64_t)v73 - v51, &qword_269F53D68);
        id v95 = v73;
        MEMORY[0x270FA5388](v54);
        v49((char *)v73 - v51, v107, v33);
        uint64_t v55 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v94)((char *)v73 - v51, 0, 1, v33);
        MEMORY[0x270FA5388](v55);
        sub_25622F360((uint64_t)v73 - v51, (uint64_t)v73 - v51, &qword_269F53D68);
        uint64_t v56 = v96;
        swift_beginAccess();
        uint64_t v57 = (uint64_t)v82;
        sub_2562571F4((uint64_t)v73 - v51, v56, &qword_269F53D68);
        swift_endAccess();
        sub_25622F3C4((uint64_t)v73 - v51, &qword_269F53D68);
        int v58 = v91;
        LODWORD(v49) = v92;
        uint64_t v59 = v98;
        *uint64_t v98 = v92;
        char v60 = v87;
        *((unsigned char *)v59 + 4) = v87;
        uint64_t v61 = v97;
        _DWORD *v97 = v58;
        LOBYTE(v53) = v86;
        *((unsigned char *)v61 + 4) = v86;
        sub_25622F360(v106, v57, &qword_269F53D68);
        uint64_t v62 = v89;
        sub_25622F360(v56, v57 + *(int *)(v89 + 20), &qword_269F53D68);
        swift_setDeallocating();
        sub_25622F3C4(v45 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_odbatchId, &qword_269F53D68);
        sub_25622F3C4(v45 + OBJC_IVAR____TtC16MetricsFramework26DeviceBatchDataBuilderImpl_originalClockId, &qword_269F53D68);
        uint64_t v63 = (uint64_t)v83;
        swift_deallocClassInstance();
        uint64_t v64 = v57 + *(int *)(v62 + 24);
        *(_DWORD *)uint64_t v64 = v49;
        *(unsigned char *)(v64 + 4) = v60;
        uint64_t v65 = v57 + *(int *)(v62 + 28);
        *(_DWORD *)uint64_t v65 = v58;
        *(unsigned char *)(v65 + 4) = v53;
        sub_25628A5F8(v57, v63, type metadata accessor for DeviceBatchData);
        unint64_t v66 = v90;
        unint64_t v67 = *v90;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v66 = v67;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v67 = sub_25626C274(0, *(void *)(v67 + 16) + 1, 1, v67);
          *uint64_t v90 = v67;
        }
        unint64_t v70 = *(void *)(v67 + 16);
        unint64_t v69 = *(void *)(v67 + 24);
        uint64_t v31 = v81;
        uint64_t v33 = v80;
        uint64_t v36 = v105;
        if (v70 >= v69 >> 1)
        {
          unint64_t v67 = sub_25626C274(v69 > 1, v70 + 1, 1, v67);
          *uint64_t v90 = v67;
        }
        *(void *)(v67 + 16) = v70 + 1;
        sub_25628A660(v63, v67+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v70, type metadata accessor for DeviceBatchData);
        sub_25628A6C8(v57, type metadata accessor for DeviceBatchData);
        char v71 = *v75;
        (*v75)(v99, v33);
        v71(v107, v33);
        uint64_t v35 = v102 + v78;
        uint64_t v32 = v103 - 1;
        uint64_t v37 = v76;
        if (v103 == 1) {
          goto LABEL_27;
        }
      }
    }
    else
    {
LABEL_27:
      uint64_t v72 = sub_2562E2FD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v31, 1, 1, v72);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2562863FC(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v7 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_256285A2C(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 3;
      if (v13 + 3 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        int64_t v13 = v18;
        goto LABEL_15;
      }
      int64_t v21 = v13 + 4;
      if (v13 + 4 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17) {
        break;
      }
    }
LABEL_15:
    unint64_t v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    int64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v21;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2562865B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2562E2F80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v31 = v8;
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v10 = sub_256257778(qword_269F544C8);
  uint64_t v32 = a2;
  uint64_t v30 = v10;
  char v11 = sub_2562E3510();
  uint64_t v27 = v7;
  if (v11)
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    id v28 = *(id *)(v3 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlDateFormatter);
    uint64_t v29 = v3 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_calendar;
    uint64_t v15 = (void (**)(char *, uint64_t))(v7 + 8);
    unint64_t v16 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v33 = 39;
      unint64_t v34 = 0xE100000000000000;
      unint64_t v17 = (void *)sub_2562E2F00();
      id v18 = objc_msgSend(v28, sel_stringFromDate_, v17);

      sub_2562E3560();
      sub_2562E3640();
      swift_bridgeObjectRelease();
      sub_2562E3640();
      uint64_t v19 = v33;
      unint64_t v20 = v34;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_25626B9CC(0, v12[2] + 1, 1, v12);
        uint64_t v12 = (void *)isUniquelyReferenced_nonNull_native;
      }
      unint64_t v23 = v12[2];
      unint64_t v22 = v12[3];
      if (v23 >= v22 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_25626B9CC((void *)(v22 > 1), v23 + 1, 1, v12);
        uint64_t v12 = (void *)isUniquelyReferenced_nonNull_native;
      }
      void v12[2] = v23 + 1;
      unint64_t v24 = &v12[2 * v23];
      v24[4] = v19;
      v24[5] = v20;
      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
      uint64_t v26 = (char *)&v27 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2562E2EC0();
      (*v15)(v9, v6);
      (*v16)(v9, v26, v6);
    }
    while ((sub_2562E3510() & 1) == 0);
  }
  uint64_t v33 = (uint64_t)v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
  sub_25628A59C();
  uint64_t v13 = sub_2562E3500();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
  return v13;
}

void sub_2562868F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >= 1)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_2562E3410();
    os_log_type_t v7 = sub_2562E3800();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_256229738(a2, a3, aBlock);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v6, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v9, -1, -1);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v10 = (void *)sub_2562E3550();
    char v11 = (void *)swift_allocObject();
    void v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    aBlock[4] = (uint64_t)sub_2562578B8;
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_25624FDEC;
    aBlock[3] = (uint64_t)&block_descriptor_4;
    uint64_t v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);
  }
}

uint64_t SiriSegmentCohortCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_calendar;
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t SiriSegmentCohortCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_calendar;
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_256286DC0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25622844C;
  return sub_256282490(a1);
}

uint64_t sub_256286E5C(uint64_t a1, char a2)
{
  return sub_256287910(a1, a2, &qword_269F55010);
}

uint64_t sub_256286E68(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for EventMetadata(0);
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  os_log_type_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55008);
  char v9 = a2;
  uint64_t v10 = sub_2562E3AF0();
  char v11 = (void *)v10;
  if (*(void *)(v8 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v33 = (void *)(v8 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    uint64_t v31 = v2;
    int64_t v32 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        unint64_t v24 = v33;
        if (v23 >= v32) {
          goto LABEL_24;
        }
        unint64_t v25 = v33[v23];
        ++v18;
        if (!v25)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v32) {
            goto LABEL_24;
          }
          unint64_t v25 = v33[v18];
          if (!v25)
          {
            int64_t v26 = v23 + 2;
            if (v26 >= v32)
            {
LABEL_24:
              swift_release();
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_31;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v8 + 32);
              if (v29 >= 64) {
                bzero(v24, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v24 = -1 << v29;
              }
              uint64_t v3 = v31;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v25 = v33[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v18 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_33;
                }
                if (v18 >= v32) {
                  goto LABEL_24;
                }
                unint64_t v25 = v33[v18];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v26;
          }
        }
LABEL_21:
        unint64_t v15 = (v25 - 1) & v25;
        unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
      }
      uint64_t v27 = *(void *)(v34 + 72);
      uint64_t v28 = *(void *)(v8 + 48) + v27 * v22;
      if (v9)
      {
        sub_25628A660(v28, (uint64_t)v7, type metadata accessor for EventMetadata);
        uint64_t v19 = *(void *)(*(void *)(v8 + 56) + 8 * v22);
      }
      else
      {
        sub_25628A5F8(v28, (uint64_t)v7, type metadata accessor for EventMetadata);
        uint64_t v19 = *(void *)(*(void *)(v8 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
      }
      sub_2562E3D50();
      EventMetadata.hash(into:)();
      sub_2562E3D90();
      unint64_t v20 = sub_2562E3990();
      *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = sub_25628A660((uint64_t)v7, v11[6] + v27 * v20, type metadata accessor for EventMetadata);
      *(void *)(v11[7] + 8 * v20) = v19;
      ++v11[2];
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_2562871C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55000);
  char v41 = a2;
  uint64_t v6 = sub_2562E3AF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v39) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v40 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v40 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v39)
        {
LABEL_33:
          swift_release();
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v40 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v40 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    int64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2562E3D50();
    sub_2562E3600();
    uint64_t result = sub_2562E3D90();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v24 = (void *)(v5 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2562874F8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54268);
  int v43 = a2;
  uint64_t v6 = sub_2562E3AF0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  char v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v40) {
      break;
    }
    uint64_t v19 = v41;
    unint64_t v20 = v41[v18];
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v20 = v41[v14];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v41[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v40) {
              goto LABEL_34;
            }
            unint64_t v20 = v41[v14];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = sub_2562E2F80();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x270FA5388](v22);
    unint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = *(void *)(v26 + 72);
    unint64_t v28 = *(void *)(v5 + 48) + v27 * v17;
    uint64_t v44 = v29;
    if (v43)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      swift_bridgeObjectRetain();
    }
    sub_256257778(&qword_269F54418);
    uint64_t result = sub_2562E34C0();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v12 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v15 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(*(void *)(v7 + 48) + v27 * v15, v25, v22);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v19 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v19, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_256287904(uint64_t a1, char a2)
{
  return sub_256287910(a1, a2, &qword_269F54FF8);
}

uint64_t sub_256287910(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v26 = (void *)sub_2562E3AF0();
  if (*(void *)(v6 + 16))
  {
    unint64_t v25 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v8 = (void *)(v6 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v6 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v17 >= v11) {
          goto LABEL_23;
        }
        unint64_t v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v18 = v8[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v11)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v25;
                goto LABEL_30;
              }
              uint64_t v24 = 1 << *(unsigned char *)(v6 + 32);
              if (v24 >= 64) {
                bzero((void *)(v6 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v8 = -1 << v24;
              }
              uint64_t v4 = v25;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v18 = v8[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_32;
                }
                if (v13 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v18 = v8[v13];
                ++v19;
                if (v18) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_20:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
      MEMORY[0x270FA5388]();
      int64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = *(void *)(v6 + 48) + *(void *)(v22 + 72) * v16;
      if (a2)
      {
        sub_25622F514(v23, (uint64_t)v21, &qword_269F53DB0);
        uint64_t v14 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
      }
      else
      {
        sub_25622F360(v23, (uint64_t)v21, &qword_269F53DB0);
        uint64_t v14 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_256287B9C((uint64_t)v21, v14, v26);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v4 = v26;
  return result;
}

uint64_t sub_256287B9C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_2562E3D50();
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0) - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25622F360(a1, (uint64_t)v8, &qword_269F53DB0);
  uint64_t v9 = sub_2562E2F80();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2562E3D70();
  }
  else
  {
    MEMORY[0x270FA5388]();
    uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_2562E3D70();
    sub_256257778(&qword_269F54418);
    sub_2562E34D0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_2562E3D90();
  unint64_t v13 = sub_2562E3990();
  *(void *)((char *)a3 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v13;
  uint64_t result = sub_25622F514(a1, a3[6] + *(void *)(v6 + 72) * v13, &qword_269F53DB0);
  *(void *)(a3[7] + 8 * v13) = a2;
  ++a3[2];
  return result;
}

void (*sub_256287E08(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for EventMetadata(0);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_25628A5F8(a2, (uint64_t)v6, type metadata accessor for EventMetadata);
  v4[9] = sub_2562886D4(v4);
  v4[10] = sub_25628824C(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_256287EE8;
}

void sub_256287EE8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_25628A6C8((uint64_t)v3, type metadata accessor for EventMetadata);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_256287F78(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_2562886D4(v6);
  v6[10] = sub_256288394(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_256288024;
}

void sub_256288024(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_256288098(void *a1))(uint64_t a1)
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = sub_2562E2F80();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v2[9] = v5;
  uint64_t v7 = malloc(*(void *)(v5 + 64));
  v2[10] = v7;
  (*(void (**)(void))(v6 + 16))();
  v2[11] = sub_256288704(v2);
  v2[12] = sub_256288534(v2 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_2562881B4;
}

void sub_2562881B4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_25628824C(void *a1, uint64_t a2, char a3))(void *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_256256488(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_25628837C;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_256288A9C();
      goto LABEL_7;
    }
    sub_256286E68(v14, a3 & 1);
    unint64_t v18 = sub_256256488(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for EventMetadata(0);
  uint64_t result = (void (*)(void *, uint64_t))sub_2562E3CD0();
  __break(1u);
  return result;
}

void sub_25628837C(void *a1, uint64_t a2)
{
}

void (*sub_256288394(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  char v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[3] = a3;
  v10[4] = v4;
  v10[2] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_2562561F4(a2, a3);
  *((unsigned char *)v10 + 48) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[5] = v13;
      if (v17)
      {
LABEL_8:
        char v19 = (uint64_t *)(*(void *)(*v5 + 56) + 16 * v13);
        uint64_t v20 = *v19;
        uint64_t v21 = v19[1];
LABEL_12:
        *char v10 = v20;
        v10[1] = v21;
        return sub_2562884E4;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_256288D20();
      goto LABEL_7;
    }
    sub_2562871C0(v16, a4 & 1);
    unint64_t v22 = sub_2562561F4(a2, a3);
    if ((v17 & 1) == (v23 & 1))
    {
      unint64_t v13 = v22;
      v10[5] = v22;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_2562E3CD0();
  __break(1u);
  return result;
}

void sub_2562884E4(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_256288880(*a1, *((unsigned char *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[2], (*a1)[3]);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_256288534(void *a1, uint64_t a2, char a3))(void *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_2562564F4(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_256288664;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_256288EE4();
      goto LABEL_7;
    }
    sub_2562874F8(v14, a3 & 1);
    unint64_t v18 = sub_2562564F4(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_2562E2F80();
  uint64_t result = (void (*)(void *, uint64_t))sub_2562E3CD0();
  __break(1u);
  return result;
}

void sub_256288664(void *a1, uint64_t a2)
{
}

void sub_25628867C(void *a1, uint64_t a2, void (*a3)(void, void, void, void, void))
{
  uint64_t v3 = (void *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 32), *(void *)(*a1 + 16), *(void *)(*a1 + 24), *(void *)(*a1 + 8));
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t (*sub_2562886D4(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_25628A728;
}

uint64_t (*sub_256288704(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_256288734;
}

uint64_t sub_256288734(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_256288740(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for EventMetadata(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if (v13)
  {
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      *(void *)(v14[7] + 8 * a4) = v13;
    }
    else
    {
      sub_25628A5F8(a5, (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EventMetadata);
      sub_256289930(a4, (uint64_t)v12, v13, v14);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_2562891B0(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_256288880(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    uint64_t v9 = a1[1];
    if (a2)
    {
      uint64_t v10 = (uint64_t *)(*(void *)(*a3 + 56) + 16 * a4);
      *uint64_t v10 = v8;
      v10[1] = v9;
    }
    else
    {
      sub_2562899E4(a4, a5, a6, v8, v9, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_25628948C(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_256288944(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      uint64_t v10 = sub_2562E2F80();
      MEMORY[0x270FA5388](v10);
      uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a5);
      sub_256289A3C(a4, (uint64_t)v12, v7, v8);
    }
  }
  else if (a2)
  {
    sub_2562E2F80();
    swift_arrayDestroy();
    sub_256289664(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

void *sub_256288A9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EventMetadata(0);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55008);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2562E3AE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_25628A5F8(*(void *)(v5 + 48) + v17, (uint64_t)v4, type metadata accessor for EventMetadata);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    sub_25628A660((uint64_t)v4, *(void *)(v7 + 48) + v17, type metadata accessor for EventMetadata);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_256288D20()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55000);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2562E3AE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    uint64_t v23 = v20[1];
    void *v22 = v19;
    v22[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_256288EE4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54268);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_2562E3AE0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v35 = v2;
  if (!v3)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v29 = v35;
    unint64_t v28 = v31;
LABEL_28:
    *unint64_t v28 = v29;
    return result;
  }
  uint64_t v4 = v2;
  uint64_t result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v35;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v34 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v32 = v1 + 64;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v35;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v34;
      goto LABEL_12;
    }
    int64_t v25 = v8 + 1;
    uint64_t v15 = v34;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v8;
    if (!v26)
    {
      int64_t v8 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v8);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v14 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_12:
    uint64_t v16 = sub_2562E2F80();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 8 * v14;
    uint64_t v24 = *(void *)(v22 + 8 * v14);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v21, v19, v16);
    *(void *)(*(void *)(v12 + 56) + v23) = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    unint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v8 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v8 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v8);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_2562891B0(int64_t a1, uint64_t a2)
{
  uint64_t v30 = type metadata accessor for EventMetadata(0);
  uint64_t v4 = *(void *)(v30 - 8);
  unint64_t result = MEMORY[0x270FA5388](v30);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_2562E3980();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_25628A5F8(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for EventMetadata);
        sub_2562E3D50();
        EventMetadata.hash(into:)();
        uint64_t v17 = sub_2562E3D90();
        unint64_t result = sub_25628A6C8((uint64_t)v7, type metadata accessor for EventMetadata);
        uint64_t v13 = v16;
        unint64_t v18 = v17 & v16;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 < v31)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v31 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            uint64_t v19 = *(void *)(a2 + 48);
            unint64_t result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            unint64_t v21 = (void *)(v20 + 8 * a1);
            uint64_t v22 = (void *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *unint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25628948C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_2562E3980();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2562E3D50();
        swift_bridgeObjectRetain();
        sub_2562E3600();
        uint64_t v9 = sub_2562E3D90();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          int64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *int64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_256289664(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_2562E3980();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      unint64_t result = sub_2562E2F80();
      unint64_t v41 = result;
      uint64_t v9 = *(void **)(result - 8);
      unint64_t v10 = (void (*)(char *, unint64_t, unint64_t))v9[2];
      uint64_t v38 = v9 + 2;
      int64_t v39 = v10;
      uint64_t v11 = v9[8];
      uint64_t v12 = v9[9];
      uint64_t v36 = v12;
      uint64_t v37 = v11;
      uint64_t v35 = (uint64_t (**)(char *, unint64_t))(v9 + 1);
      uint64_t v40 = v4;
      unint64_t v13 = result;
      do
      {
        MEMORY[0x270FA5388](result);
        unint64_t v15 = v8;
        uint64_t v16 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v17 = v12 * v6;
        v39(v16, *(void *)(v2 + 48) + v12 * v6, v13);
        uint64_t v18 = v2;
        sub_256257778(&qword_269F54418);
        uint64_t v19 = sub_2562E34C0();
        uint64_t v20 = v16;
        uint64_t v8 = v15;
        unint64_t result = (*v35)(v20, v13);
        uint64_t v21 = v19 & v7;
        if (v3 >= (uint64_t)v15)
        {
          if (v21 >= v15 && v3 >= v21)
          {
LABEL_16:
            uint64_t v2 = v18;
            uint64_t v24 = *(void *)(v18 + 48);
            uint64_t v12 = v36;
            unint64_t result = v24 + v36 * v3;
            if (v36 * v3 < v17 || result >= v24 + v17 + v36)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v40;
            }
            else
            {
              uint64_t v4 = v40;
              if (v36 * v3 != v17) {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v25 = *(void *)(v2 + 56);
            uint64_t v26 = (void *)(v25 + 8 * v3);
            BOOL v27 = (void *)(v25 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v26 >= v27 + 1))
            {
              void *v26 = *v27;
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v15 || v3 >= v21)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v40;
        uint64_t v2 = v18;
        uint64_t v12 = v36;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v28 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << result) - 1;
  }
  *uint64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(v2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v33;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_256289930(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for EventMetadata(0);
  uint64_t result = sub_25628A660(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for EventMetadata);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_2562899E4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  unint64_t v6 = (void *)(a6[6] + 16 * result);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_256289A3C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_2562E2F80();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_256289AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  BOOL v12 = (void *)*v5;
  unint64_t v14 = sub_2562561F4(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_256288D20();
    goto LABEL_7;
  }
  sub_2562871C0(v17, a5 & 1);
  unint64_t v23 = sub_2562561F4(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_2562E3CD0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2562899E4(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_256289C50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2562564F4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_256288EE4();
    goto LABEL_7;
  }
  sub_2562874F8(v13, a3 & 1);
  unint64_t v19 = sub_2562564F4(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    sub_2562E2F80();
    uint64_t result = sub_2562E3CD0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v21 = sub_2562E2F80();
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v24 + 16))(v23, a2);
  return sub_256289A3C(v10, (uint64_t)v23, a1, v16);
}

uint64_t sub_256289DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2562E3020();
  uint64_t v9 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_logger;
  uint64_t v10 = sub_2562E3430();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  sub_25622F360(a2, v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_bookmarkService) = a3;
  uint64_t v12 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_oddId;
  uint64_t v13 = sub_2562E2FD0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  id v15 = objc_allocWithZone(MEMORY[0x263F08788]);
  swift_retain();
  id v16 = objc_msgSend(v15, sel_init);
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriSegmentCohortCalculator_sqlDateFormatter) = v16;
  uint64_t v17 = (void *)sub_2562E3550();
  objc_msgSend(v16, sel_setDateFormat_, v17);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_25622F3C4(a2, &qword_269F53D10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v4;
}

unint64_t sub_256289FF8()
{
  unint64_t result = qword_269F54FB8;
  if (!qword_269F54FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F54FB8);
  }
  return result;
}

uint64_t destroy for SiriSegmentCohortResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SiriSegmentCohortResults(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SiriSegmentCohortResults(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SiriSegmentCohortResults(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriSegmentCohortResults(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriSegmentCohortResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSegmentCohortResults()
{
  return &type metadata for SiriSegmentCohortResults;
}

uint64_t sub_25628A264()
{
  return type metadata accessor for SiriSegmentCohortCalculator();
}

uint64_t type metadata accessor for SiriSegmentCohortCalculator()
{
  uint64_t result = qword_269F54FE0;
  if (!qword_269F54FE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25628A2B8()
{
  sub_2562E3430();
  if (v0 <= 0x3F)
  {
    sub_25622F25C();
    if (v1 <= 0x3F)
    {
      sub_2562E2FD0();
      if (v2 <= 0x3F)
      {
        sub_2562E3060();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for SiriSegmentCohortCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriSegmentCohortCalculator);
}

uint64_t dispatch thunk of SiriSegmentCohortCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SiriSegmentCohortCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_25628A54C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_25628A59C()
{
  unint64_t result = qword_269F549F0;
  if (!qword_269F549F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F549E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F549F0);
  }
  return result;
}

uint64_t sub_25628A5F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25628A660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25628A6C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25628A72C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RequestWithNoAssetsCalculator(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_2562E3550();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2562E2E20();

    uint64_t v7 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t RequestWithNoAssetMetrics.__allocating_init(defaults:logger:fbfBundleId:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v8 = swift_allocObject();
  RequestWithNoAssetMetrics.init(defaults:logger:fbfBundleId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t RequestWithNoAssetMetrics.init(defaults:logger:fbfBundleId:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v80 = a1;
  uint64_t v77 = a4;
  uint64_t v7 = sub_2562E3430();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v63 - v11;
  uint64_t v14 = v8 + 16;
  uint64_t v13 = *(void (**)(void))(v8 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v13)((char *)v63 - v11, a2, v7);
  type metadata accessor for RequestWithNoAssetDataProvider();
  uint64_t v15 = swift_allocObject();
  uint64_t v83 = v8;
  id v16 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v72 = v12;
  unint64_t v75 = v16;
  uint64_t v76 = v8 + 32;
  v16(v15 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetDataProvider_logger, v12, v7);
  *(void *)(v4 + 16) = v15;
  uint64_t v74 = (void *)(v4 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger);
  uint64_t v17 = a2;
  v13();
  uint64_t v18 = sub_2562E2FD0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v68 = v20;
  unint64_t v67 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_2562E2FC0();
  uint64_t v21 = *(void (**)(void))(v19 + 32);
  uint64_t v81 = (void *)(v4 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_oddId);
  uint64_t v87 = v18;
  unint64_t v69 = v21;
  uint64_t v70 = v19 + 32;
  v21();
  uint64_t v22 = v4;
  unint64_t v23 = (void *)(v4 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_fbfBundleId);
  uint64_t v82 = (uint64_t *)(v4 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_fbfBundleId);
  uint64_t v24 = v77;
  *unint64_t v23 = a3;
  v23[1] = v24;
  uint64_t v25 = sub_2562E3340();
  swift_allocObject();
  id v80 = v80;
  uint64_t v26 = sub_2562E3330();
  uint64_t v85 = v25;
  uint64_t v86 = MEMORY[0x263F396B8];
  uint64_t v27 = v17;
  uint64_t v84 = v26;
  uint64_t v71 = v14;
  uint64_t v77 = v13;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v78, v17, v7);
  sub_2562E3140();
  swift_allocObject();
  uint64_t v28 = v79;
  uint64_t v29 = sub_2562E3120();
  if (v28)
  {

    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v30(v17, v7);
    swift_release();
    v30((uint64_t)v74, v7);
    (*(void (**)(void *, uint64_t))(v19 + 8))(v81, v87);
    swift_bridgeObjectRelease();
    type metadata accessor for RequestWithNoAssetMetrics();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v31 = v29;
    uint64_t v65 = sub_2562E2F80();
    uint64_t v74 = v63;
    uint64_t v32 = *(void *)(v65 - 8);
    MEMORY[0x270FA5388](v65);
    uint64_t v34 = (char *)v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E32A0();
    uint64_t v35 = sub_2562E3060();
    uint64_t v64 = v7;
    uint64_t v73 = v27;
    uint64_t v36 = v35;
    v63[1] = v63;
    uint64_t v37 = *(void *)(v35 - 8);
    uint64_t v79 = v4;
    uint64_t v38 = v37;
    MEMORY[0x270FA5388](v35);
    uint64_t v78 = 0;
    uint64_t v40 = (char *)v63 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3020();
    sub_2562E3130();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v36);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v65);
    unint64_t v41 = v72;
    uint64_t v42 = v64;
    uint64_t v43 = ((uint64_t (*)(char *, uint64_t, uint64_t))v77)(v72, v73, v64);
    uint64_t v74 = v63;
    MEMORY[0x270FA5388](v43);
    uint64_t v44 = (char *)v63 - v67;
    (*(void (**)(char *, void *, uint64_t))(v19 + 16))((char *)v63 - v67, v81, v87);
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
    uint64_t v81 = v63;
    MEMORY[0x270FA5388](v45 - 8);
    uint64_t v47 = (char *)v63 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v48 = v80;
    uint64_t v66 = v31;
    swift_retain();
    sub_25628A72C((uint64_t)v47);
    type metadata accessor for RequestWithNoAssetsCalculator(0);
    uint64_t v49 = swift_allocObject();
    sub_2562E3020();
    v75(v49 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_logger, v41, v42);
    sub_25626DA70((uint64_t)v47, v49 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_sqlFileURL);
    *(void *)(v49 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_bookmarkService) = v31;
    ((void (*)(uint64_t, char *, uint64_t))v69)(v49 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_oddId, v44, v87);
    *(void *)(v49 + OBJC_IVAR____TtC16MetricsFramework29RequestWithNoAssetsCalculator_defaults) = v48;
    uint64_t v50 = v73;
    *(void *)(v79 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_calculator) = v49;
    ((void (*)(char *, uint64_t, uint64_t))v77)(v41, v50, v42);
    uint64_t v51 = *v82;
    uint64_t v52 = v82[1];
    uint64_t v53 = type metadata accessor for SELFReportingService();
    uint64_t v54 = (void *)swift_allocObject();
    uint64_t v55 = self;
    swift_bridgeObjectRetain();
    v54[3] = objc_msgSend(v55, sel_sharedLoggerWithPersistenceConfiguration_, 1);
    id v56 = objc_msgSend(self, sel_sharedAnalytics);
    id v57 = objc_msgSend(v56, sel_defaultMessageStream);

    v54[2] = v57;
    v54[4] = v51;
    v54[5] = v52;
    type metadata accessor for RequestWithNoAssetSELFReporter();
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = (void *)(v58 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_reportingService);
    v59[3] = v53;
    v59[4] = &protocol witness table for SELFReportingService;
    void *v59 = v54;
    v75(v58 + OBJC_IVAR____TtC16MetricsFramework30RequestWithNoAssetSELFReporter_logger, v41, v42);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_2562E4F80;
    *(void *)(v60 + 32) = v58;
    uint64_t v84 = v60;
    sub_2562E3720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F55038);
    swift_allocObject();
    swift_retain();
    uint64_t v84 = sub_2562E30E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F55040);
    swift_allocObject();
    uint64_t v61 = sub_2562E3100();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v73, v42);
    uint64_t v22 = v79;
    *(void *)(v79 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_reporter) = v61;
  }
  return v22;
}

uint64_t type metadata accessor for RequestWithNoAssetMetrics()
{
  uint64_t result = qword_269F55098;
  if (!qword_269F55098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25628B230()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25628B250, 0, 0);
}

uint64_t sub_25628B250()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: RequestWithNoAssetDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_25628B334(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25628B364, 0, 0);
}

uint64_t sub_25628B364()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395D0] + MEMORY[0x263F395D0]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25623D940;
  return v4(v0 + 16);
}

uint64_t sub_25628B430(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25628B450, 0, 0);
}

uint64_t sub_25628B450()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E3810();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Doing work", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25623DB50;
  uint64_t v5 = *(void *)(v0 + 16);
  return sub_25622B0E8(v5);
}

uint64_t RequestWithNoAssetMetrics.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RequestWithNoAssetMetrics.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework25RequestWithNoAssetMetrics_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_25628B77C()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_25628B250, 0, 0);
}

uint64_t sub_25628B7A0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_25622844C;
  return MEMORY[0x270FA2498](sub_25628B450, 0, 0);
}

uint64_t sub_25628B850(uint64_t a1)
{
  *(void *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_25628B364, 0, 0);
}

uint64_t sub_25628B884()
{
  return sub_25628B920(&qword_269F55068);
}

uint64_t sub_25628B8B8()
{
  return sub_25628B920(&qword_269F55070);
}

uint64_t sub_25628B8EC()
{
  return sub_25628B920(qword_269F55078);
}

uint64_t sub_25628B920(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RequestWithNoAssetMetrics();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25628B964()
{
  return type metadata accessor for RequestWithNoAssetMetrics();
}

uint64_t sub_25628B96C()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E2FD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for RequestWithNoAssetMetrics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RequestWithNoAssetMetrics);
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.__allocating_init(defaults:logger:fbfBundleId:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 144) + **(int **)(*(void *)v1 + 144));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of RequestWithNoAssetMetrics.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

void *sub_25628BDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_2562E3430();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((sub_2562E3280() & 1) == 0) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  v7(v6, a2, v3);
  while (1)
  {
    uint64_t v9 = swift_retain();
    sub_25628C720(v9, (uint64_t)v6, (uint64_t)v14);
    sub_2562909F0((uint64_t)v14, (uint64_t)v15);
    sub_2562909F0((uint64_t)v15, (uint64_t)v16);
    if (sub_25626AA34((uint64_t)v16) != 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_25626BB5C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1) {
        uint64_t v8 = sub_25626BB5C((void *)(v10 > 1), v11 + 1, 1, v8);
      }
      v8[2] = v11 + 1;
      memcpy(&v8[34 * v11 + 4], v16, 0x110uLL);
    }
    if ((sub_2562E3280() & 1) == 0) {
      break;
    }
    v7(v6, a2, v3);
  }
  return v8;
}

unint64_t sub_25628BF74(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
    case 17:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x75426D6574737973;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    case 5:
      unint64_t result = 0x436D6172676F7270;
      break;
    case 6:
      unint64_t result = 0x75706E4969726973;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x5474736575716572;
      break;
    case 9:
      unint64_t result = 0x6E656E6F706D6F63;
      break;
    case 10:
      unint64_t result = 0x65646F4D6C6ELL;
      break;
    case 11:
      unint64_t result = 0x65646F4D727361;
      break;
    case 12:
      unint64_t result = 0x65757165526D756ELL;
      break;
    case 13:
      unint64_t result = 0x6552414E526D756ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000016;
      break;
    case 15:
      unint64_t result = 0x7465537465737361;
      break;
    case 16:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 18:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x746144746E657665;
      break;
  }
  return result;
}

unint64_t sub_25628C1E8(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
    case 17:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x75426D6574737973;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    case 5:
      unint64_t result = 0x436D6172676F7270;
      break;
    case 6:
      unint64_t result = 0x75706E4969726973;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x5474736575716572;
      break;
    case 9:
      unint64_t result = 0x6E656E6F706D6F63;
      break;
    case 10:
      unint64_t result = 0x65646F4D6C6ELL;
      break;
    case 11:
      unint64_t result = 0x65646F4D727361;
      break;
    case 12:
      unint64_t result = 0x65757165526D756ELL;
      break;
    case 13:
      unint64_t result = 0x6552414E526D756ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000016;
      break;
    case 15:
      unint64_t result = 0x7465537465737361;
      break;
    case 16:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 18:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x746144746E657665;
      break;
  }
  return result;
}

uint64_t sub_25628C45C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_25628BF74(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_25628BF74(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2562E3C90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25628C4E8()
{
  char v1 = *v0;
  sub_2562E3D50();
  sub_25628BF74(v1);
  sub_2562E3600();
  swift_bridgeObjectRelease();
  return sub_2562E3D90();
}

uint64_t sub_25628C54C()
{
  sub_25628BF74(*v0);
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25628C5A0()
{
  char v1 = *v0;
  sub_2562E3D50();
  sub_25628BF74(v1);
  sub_2562E3600();
  swift_bridgeObjectRelease();
  return sub_2562E3D90();
}

uint64_t sub_25628C600@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25629099C();
  *a1 = result;
  return result;
}

unint64_t sub_25628C630@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25628BF74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25628C65C()
{
  return sub_25628C1E8(*v0);
}

uint64_t sub_25628C664@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25629099C();
  *a1 = result;
  return result;
}

void sub_25628C68C(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

void sub_25628C698(void *a1@<X8>)
{
  *a1 = &unk_2704CB1A8;
}

uint64_t sub_25628C6A8(uint64_t a1)
{
  unint64_t v2 = sub_25628EF98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25628C6E4(uint64_t a1)
{
  unint64_t v2 = sub_25628EF98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25628C720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v224 = a3;
  uint64_t v297 = *MEMORY[0x263EF8340];
  uint64_t v223 = a1;
  uint64_t v4 = sub_2562E3270();
  if (v4)
  {
    uint64_t v5 = v4;
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_2562E3410();
    os_log_type_t v7 = sub_2562E37F0();
    uint64_t v228 = a2;
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(void *)&long long v261 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      os_log_t v251 = (os_log_t)(v8 + 4);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_2562E34B0();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = v10;
      a2 = v228;
      *(void *)&long long v259 = sub_256229738(v13, v12, (uint64_t *)&v261);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v6, v7, "row data: %s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v9, -1, -1);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v18 = swift_bridgeObjectRetain();
    sub_25626A6E4(v18, v5);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v261 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
    sub_25626AA80((unint64_t *)&qword_269F549F0, &qword_269F549E8);
    uint64_t v21 = sub_2562E3500();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_2562E3410();
    os_log_type_t v25 = sub_2562E37F0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(void *)&long long v261 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v259 = sub_256229738(v21, v23, (uint64_t *)&v261);
      a2 = v228;
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v24, v25, "Request no asset raw query results: \n{%s}", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v27, -1, -1);
      MEMORY[0x25A2A5190](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    strcpy((char *)&v259, "eventDate");
    WORD5(v259) = 0;
    HIDWORD(v259) = -385875968;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v28 = sub_25625626C((uint64_t)&v261), (v29 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v28, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v30 = swift_dynamicCast();
      if (v30) {
        uint64_t v31 = v257;
      }
      else {
        uint64_t v31 = 0;
      }
      if (v30) {
        uint64_t v32 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v32 = 0;
      }
      uint64_t v221 = v32;
      uint64_t v222 = v31;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v221 = 0;
      uint64_t v222 = 0;
    }
    *(void *)&long long v259 = 0xD000000000000015;
    *((void *)&v259 + 1) = 0x80000002562EAF50;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v33 = sub_25625626C((uint64_t)&v261), (v34 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v33, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v35 = swift_dynamicCast();
      uint64_t v36 = v257;
      if (!v35) {
        uint64_t v36 = 0;
      }
      uint64_t v220 = v36;
      int v37 = v35 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v220 = 0;
      int v37 = 1;
    }
    int v219 = v37;
    *(void *)&long long v259 = 0xD000000000000013;
    *((void *)&v259 + 1) = 0x80000002562EAF20;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v38 = sub_25625626C((uint64_t)&v261), (v39 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v38, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v40 = swift_dynamicCast();
      if (v40) {
        uint64_t v41 = v257;
      }
      else {
        uint64_t v41 = 0;
      }
      if (v40) {
        uint64_t v42 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v42 = 0;
      }
      uint64_t v217 = v42;
      uint64_t v218 = v41;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v217 = 0;
      uint64_t v218 = 0;
    }
    strcpy((char *)&v259, "systemBuild");
    HIDWORD(v259) = -352321536;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v43 = sub_25625626C((uint64_t)&v261), (v44 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v43, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v45 = swift_dynamicCast();
      if (v45) {
        uint64_t v46 = v257;
      }
      else {
        uint64_t v46 = 0;
      }
      if (v45) {
        uint64_t v47 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v47 = 0;
      }
      uint64_t v215 = v47;
      uint64_t v216 = v46;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v215 = 0;
      uint64_t v216 = 0;
    }
    strcpy((char *)&v259, "deviceType");
    BYTE11(v259) = 0;
    HIDWORD(v259) = -369098752;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v48 = sub_25625626C((uint64_t)&v261), (v49 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v48, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v50 = swift_dynamicCast();
      if (v50) {
        uint64_t v51 = v257;
      }
      else {
        uint64_t v51 = 0;
      }
      if (v50) {
        uint64_t v52 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v52 = 0;
      }
      uint64_t v209 = v52;
      uint64_t v210 = v51;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v209 = 0;
      uint64_t v210 = 0;
    }
    strcpy((char *)&v259, "programCode");
    HIDWORD(v259) = -352321536;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v53 = sub_25625626C((uint64_t)&v261), (v54 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v53, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v55 = swift_dynamicCast();
      if (v55) {
        uint64_t v56 = v257;
      }
      else {
        uint64_t v56 = 0;
      }
      if (v55) {
        uint64_t v57 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v57 = 0;
      }
      uint64_t v207 = v57;
      uint64_t v208 = v56;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v207 = 0;
      uint64_t v208 = 0;
    }
    *(void *)&long long v259 = 0x75706E4969726973;
    *((void *)&v259 + 1) = 0xEF656C61636F4C74;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v58 = sub_25625626C((uint64_t)&v261), (v59 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v58, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v60 = swift_dynamicCast();
      if (v60) {
        uint64_t v61 = v257;
      }
      else {
        uint64_t v61 = 0;
      }
      if (v60) {
        uint64_t v62 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v62 = 0;
      }
      uint64_t v205 = v62;
      uint64_t v206 = v61;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v205 = 0;
      uint64_t v206 = 0;
    }
    *(void *)&long long v259 = 0xD000000000000015;
    *((void *)&v259 + 1) = 0x80000002562EAE70;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v63 = sub_25625626C((uint64_t)&v261), (v64 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v63, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v65 = swift_dynamicCast();
      if (v65) {
        uint64_t v66 = v257;
      }
      else {
        uint64_t v66 = 0;
      }
      if (v65) {
        uint64_t v67 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v67 = 0;
      }
      uint64_t v203 = v67;
      uint64_t v204 = v66;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v203 = 0;
      uint64_t v204 = 0;
    }
    strcpy((char *)&v259, "requestType");
    HIDWORD(v259) = -352321536;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v68 = sub_25625626C((uint64_t)&v261), (v69 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v68, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v70 = swift_dynamicCast();
      if (v70) {
        uint64_t v71 = v257;
      }
      else {
        uint64_t v71 = 0;
      }
      if (v70) {
        uint64_t v72 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v72 = 0;
      }
      uint64_t v201 = v72;
      uint64_t v202 = v71;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v201 = 0;
      uint64_t v202 = 0;
    }
    strcpy((char *)&v259, "componentName");
    HIWORD(v259) = -4864;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v73 = sub_25625626C((uint64_t)&v261), (v74 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v73, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v75 = swift_dynamicCast();
      if (v75) {
        uint64_t v76 = v257;
      }
      else {
        uint64_t v76 = 0;
      }
      if (v75) {
        uint64_t v77 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v77 = 0;
      }
      uint64_t v199 = v77;
      uint64_t v200 = v76;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v199 = 0;
      uint64_t v200 = 0;
    }
    *(void *)&long long v259 = 0x65646F4D6C6ELL;
    *((void *)&v259 + 1) = 0xE600000000000000;
    sub_2562E39D0();
    if (*(void *)(v5 + 16) && (unint64_t v78 = sub_25625626C((uint64_t)&v261), (v79 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v5 + 56) + 32 * v78, (uint64_t)&v259);
    }
    else
    {
      long long v259 = 0u;
      long long v260 = 0u;
    }
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v80 = swift_dynamicCast();
      if (v80) {
        uint64_t v81 = v257;
      }
      else {
        uint64_t v81 = 0;
      }
      if (v80) {
        uint64_t v82 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v82 = 0;
      }
      uint64_t v197 = v82;
      uint64_t v198 = v81;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v197 = 0;
      uint64_t v198 = 0;
    }
    strcpy((char *)&v259, "asrMode");
    *((void *)&v259 + 1) = 0xE700000000000000;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v83 = swift_dynamicCast();
      if (v83) {
        uint64_t v84 = v257;
      }
      else {
        uint64_t v84 = 0;
      }
      if (v83) {
        uint64_t v85 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v85 = 0;
      }
      uint64_t v195 = v85;
      uint64_t v196 = v84;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v195 = 0;
      uint64_t v196 = 0;
    }
    strcpy((char *)&v259, "numRequests");
    HIDWORD(v259) = -352321536;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v86 = swift_dynamicCast();
      int v87 = v257;
      if (!v86) {
        int v87 = 0;
      }
      int v194 = v87;
      int v88 = v86 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      int v194 = 0;
      int v88 = 1;
    }
    int v193 = v88;
    strcpy((char *)&v259, "numRNARequests");
    HIBYTE(v259) = -18;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v89 = swift_dynamicCast();
      int v90 = v257;
      if (!v89) {
        int v90 = 0;
      }
      int v192 = v90;
      int v91 = v89 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      int v192 = 0;
      int v91 = 1;
    }
    int v191 = v91;
    *(void *)&long long v259 = 0xD000000000000016;
    *((void *)&v259 + 1) = 0x80000002562EAFB0;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v92 = swift_dynamicCast();
      int v93 = v257;
      if (!v92) {
        int v93 = 0;
      }
      int v190 = v93;
      int v94 = v92 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      int v190 = 0;
      int v94 = 1;
    }
    int v189 = v94;
    strcpy((char *)&v259, "assetSetName");
    BYTE13(v259) = 0;
    HIWORD(v259) = -5120;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v95 = swift_dynamicCast();
      if (v95) {
        uint64_t v96 = v257;
      }
      else {
        uint64_t v96 = 0;
      }
      if (v95) {
        uint64_t v97 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v97 = 0;
      }
      uint64_t v187 = v97;
      uint64_t v188 = v96;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v187 = 0;
      uint64_t v188 = 0;
    }
    *(void *)&long long v259 = 0xD000000000000013;
    *((void *)&v259 + 1) = 0x80000002562EAE50;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v98 = swift_dynamicCast();
      if (v98) {
        uint64_t v99 = v257;
      }
      else {
        uint64_t v99 = 0;
      }
      if (v98) {
        uint64_t v100 = *((void *)&v257 + 1);
      }
      else {
        uint64_t v100 = 0;
      }
      uint64_t v213 = v100;
      uint64_t v214 = v99;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v213 = 0;
      uint64_t v214 = 0;
    }
    *(void *)&long long v259 = 0xD00000000000002CLL;
    *((void *)&v259 + 1) = 0x80000002562EAEB0;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v259);
    sub_2562571A0((uint64_t)&v261);
    if (*((void *)&v260 + 1))
    {
      int v101 = swift_dynamicCast();
      uint64_t v102 = v257;
      if (!v101) {
        uint64_t v102 = 0;
      }
      uint64_t v212 = v102;
      int v103 = v101 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v259, &qword_269F543D8);
      uint64_t v212 = 0;
      int v103 = 1;
    }
    int v211 = v103;
    *(void *)&long long v257 = 0xD000000000000012;
    *((void *)&v257 + 1) = 0x80000002562EAFD0;
    sub_2562E39D0();
    sub_256255764((uint64_t)&v261, v5, &v257);
    swift_bridgeObjectRelease();
    sub_2562571A0((uint64_t)&v261);
    if (!v258)
    {
      sub_25622F3C4((uint64_t)&v257, &qword_269F543D8);
      uint64_t v119 = sub_25622CC70(0);
      swift_bridgeObjectRelease();
      uint64_t v120 = sub_2562E3410();
      os_log_type_t v121 = sub_2562E37F0();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v122 = 0;
        _os_log_impl(&dword_256226000, v120, v121, "assetFailureReason is nil or empty", v122, 2u);
        MEMORY[0x25A2A5190](v122, -1, -1);
      }

      swift_release();
      uint64_t v123 = sub_2562E3430();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(a2, v123);
LABEL_231:
      LOBYTE(v257) = v193;
      LOBYTE(v256[0]) = v191;
      LOBYTE(v254) = v189;
      LOBYTE(v253) = v211;
      *(void *)&long long v261 = v222;
      *((void *)&v261 + 1) = v221;
      LOBYTE(v259) = v219;
      uint64_t v262 = v220;
      char v263 = v219;
      uint64_t v264 = v218;
      uint64_t v265 = v217;
      uint64_t v266 = v216;
      uint64_t v267 = v215;
      uint64_t v268 = v210;
      uint64_t v269 = v209;
      uint64_t v270 = v208;
      uint64_t v271 = v207;
      uint64_t v272 = v206;
      uint64_t v273 = v205;
      uint64_t v274 = v204;
      uint64_t v275 = v203;
      uint64_t v276 = v202;
      uint64_t v277 = v201;
      uint64_t v278 = v200;
      uint64_t v279 = v199;
      uint64_t v280 = v196;
      uint64_t v281 = v195;
      uint64_t v282 = v198;
      uint64_t v283 = v197;
      int v284 = v194;
      char v285 = v193;
      int v286 = v192;
      char v287 = v191;
      int v288 = v190;
      char v289 = v189;
      uint64_t v290 = v188;
      uint64_t v291 = v187;
      uint64_t v292 = v212;
      char v293 = v211;
      uint64_t v294 = v214;
      uint64_t v295 = v213;
      uint64_t v296 = v119;
      nullsub_1(&v261);
      return sub_2562909F0((uint64_t)&v261, v224);
    }
    sub_256248F84(&v257, &v259);
    sub_256229CD0((uint64_t)&v259, (uint64_t)&v261);
    sub_256229CD0((uint64_t)&v261, (uint64_t)&v257);
    uint64_t v104 = swift_allocObject();
    sub_256248F84(&v261, (_OWORD *)(v104 + 16));
    double v105 = sub_2562E3410();
    os_log_type_t v106 = sub_2562E37F0();
    uint64_t v107 = swift_allocObject();
    *(unsigned char *)(v107 + 16) = 32;
    uint64_t v108 = swift_allocObject();
    *(unsigned char *)(v108 + 16) = 8;
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = sub_256290AC4;
    *(void *)(v109 + 24) = v104;
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = sub_256290B60;
    *(void *)(v110 + 24) = v109;
    uint64_t v111 = swift_allocObject();
    *(void *)(v111 + 16) = sub_256257190;
    *(void *)(v111 + 24) = v110;
    uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
    uint64_t v112 = swift_allocObject();
    sub_25622F578(v112, 3);
    *uint64_t v113 = sub_2562570D0;
    v113[1] = v107;
    v113[2] = sub_2562578CC;
    v113[3] = v108;
    v113[4] = sub_256257198;
    v113[5] = v111;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_t v251 = v105;
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v114 = (uint8_t *)swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      v256[0] = v115;
      *(_WORD *)uint64_t v114 = 258;
      v114[2] = 32;
      swift_release();
      v114[3] = 8;
      swift_release();
      __swift_project_boxed_opaque_existential_1(&v257, v258);
      swift_getDynamicType();
      uint64_t v116 = sub_2562E3E00();
      id v254 = (id)sub_256229738(v116, v117, v256);
      sub_2562E38F0();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v257);
      _os_log_impl(&dword_256226000, v251, v106, "assetFailureReason type: %s", v114, 0xCu);
      uint64_t v118 = MEMORY[0x263F8EE58];
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v115, -1, -1);
      MEMORY[0x25A2A5190](v114, -1, -1);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v257);
      uint64_t v118 = MEMORY[0x263F8EE58];
    }
    sub_256229CD0((uint64_t)&v259, (uint64_t)&v261);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F55110);
    int v124 = swift_dynamicCast();
    uint64_t v125 = v257;
    sub_256229CD0((uint64_t)&v259, (uint64_t)&v257);
    uint64_t v126 = v228;
    uint64_t v127 = v118;
    if (v124 && v125)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v257);
      uint64_t v253 = v125;
      goto LABEL_216;
    }
    sub_256229CD0((uint64_t)&v257, (uint64_t)&v254);
    if (!swift_dynamicCast()) {
      goto LABEL_209;
    }
    uint64_t v128 = sub_2562E35A0();
    uint64_t v129 = *(void *)(v128 - 8);
    MEMORY[0x270FA5388](v128);
    unint64_t v131 = (char *)&v186 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3590();
    uint64_t v132 = sub_2562E3570();
    unint64_t v134 = v133;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v128);
    uint64_t v127 = MEMORY[0x263F8EE58];
    if (v134 >> 60 == 15)
    {
LABEL_209:
      uint64_t v132 = 0;
      unint64_t v134 = 0xC000000000000000;
    }
    uint64_t v135 = self;
    os_log_type_t v136 = (void *)sub_2562E2E50();
    sub_25625B2C0(v132, v134);
    id v254 = 0;
    id v137 = objc_msgSend(v135, sel_JSONObjectWithData_options_error_, v136, 0, &v254);

    id v138 = v254;
    if (v137)
    {
      sub_2562E3970();
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v257);
      if (swift_dynamicCast())
      {
        uint64_t v125 = v253;
        if (v253)
        {
LABEL_216:
          uint64_t v141 = sub_256239418((uint64_t)v125);
          if (v141)
          {
            int64_t v142 = v141;
            uint64_t v252 = sub_2562B7384();
            sub_2562B7390(v142);
            if (v142 < 0) {
              goto LABEL_234;
            }
            os_log_t v251 = v125;
            uint64_t v143 = (uint64_t)&v125[4];
            do
            {
              sub_256229CD0(v143, (uint64_t)v256);
              id v254 = 0;
              unint64_t v255 = 0xE000000000000000;
              sub_2562E3AA0();
              uint64_t v144 = (uint64_t)v254;
              uint64_t v145 = v255;
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v256);
              sub_2562B7408();
              uint64_t v146 = *(void *)(v252 + 16);
              sub_2562B7464(v146);
              uint64_t v147 = sub_2562B748C(v146, v144, v145);
              nullsub_1(v147);
              v143 += 32;
              --v142;
            }
            while (v142);
            swift_bridgeObjectRelease();
            uint64_t v148 = v252;
            uint64_t v126 = v228;
            uint64_t v127 = MEMORY[0x263F8EE58];
          }
          else
          {
            uint64_t v148 = sub_25622CC70(0);
            swift_bridgeObjectRelease();
          }
          goto LABEL_223;
        }
      }
      else
      {
        uint64_t v253 = 0;
      }
    }
    else
    {
      os_log_type_t v139 = v138;
      unint64_t v140 = (void *)sub_2562E2E10();

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v257);
      uint64_t v253 = 0;
    }
    uint64_t v148 = sub_25622CC70(0);
LABEL_223:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v186 = v148;
    uint64_t v226 = sub_2562365D8(v148);
    if (v226)
    {
      uint64_t v149 = 0;
      v150 = (void *)(v186 + 40);
      uint64_t v225 = v127 + 8;
      while (!__OFADD__(v149, 1))
      {
        uint64_t v241 = v149 + 1;
        uint64_t v242 = v150;
        uint64_t v156 = *(v150 - 1);
        unint64_t v155 = *v150;
        uint64_t v157 = swift_allocObject();
        *(void *)(v157 + 16) = v149;
        uint64_t v158 = v157;
        uint64_t v249 = v157;
        uint64_t v159 = swift_allocObject();
        *(void *)(v159 + 16) = v156;
        *(void *)(v159 + 24) = v155;
        uint64_t v160 = v159;
        uint64_t v248 = v159;
        uint64_t v161 = swift_allocObject();
        uint64_t v229 = v156;
        *(void *)(v161 + 16) = v156;
        *(void *)(v161 + 24) = v155;
        uint64_t v162 = v161;
        uint64_t v247 = v161;
        unint64_t v235 = v155;
        swift_bridgeObjectRetain_n();
        os_log_t v250 = (os_log_t)sub_2562E3410();
        LODWORD(v240) = sub_2562E37F0();
        uint64_t v239 = swift_allocObject();
        *(unsigned char *)(v239 + 16) = 0;
        uint64_t v163 = swift_allocObject();
        *(unsigned char *)(v163 + 16) = 8;
        uint64_t v164 = v163;
        uint64_t v165 = swift_allocObject();
        *(void *)(v165 + 16) = sub_256290B74;
        *(void *)(v165 + 24) = v158;
        uint64_t v166 = swift_allocObject();
        uint64_t v244 = v166;
        *(void *)(v166 + 16) = sub_2562570E8;
        *(void *)(v166 + 24) = v165;
        uint64_t v238 = swift_allocObject();
        *(unsigned char *)(v238 + 16) = 32;
        uint64_t v246 = swift_allocObject();
        *(unsigned char *)(v246 + 16) = 8;
        uint64_t v167 = swift_allocObject();
        *(void *)(v167 + 16) = sub_256257370;
        *(void *)(v167 + 24) = v160;
        uint64_t v168 = swift_allocObject();
        os_log_t v251 = v168;
        v168[2].isa = (Class)sub_2562578C4;
        v168[3].isa = (Class)v167;
        uint64_t v236 = swift_allocObject();
        *(unsigned char *)(v236 + 16) = 32;
        uint64_t v245 = swift_allocObject();
        *(unsigned char *)(v245 + 16) = 8;
        uint64_t v169 = swift_allocObject();
        *(void *)(v169 + 16) = sub_256290BB4;
        *(void *)(v169 + 24) = v162;
        uint64_t v170 = swift_allocObject();
        *(void *)(v170 + 16) = sub_256290B60;
        *(void *)(v170 + 24) = v169;
        uint64_t v171 = swift_allocObject();
        uint64_t v243 = v149;
        uint64_t v172 = v171;
        *(void *)(v171 + 16) = sub_2562578C4;
        *(void *)(v171 + 24) = v170;
        uint64_t v173 = swift_allocObject();
        uint64_t v237 = sub_25622F578(v173, 9);
        uint64_t v175 = v238;
        uint64_t v174 = v239;
        void *v176 = sub_2562578CC;
        v176[1] = v174;
        v176[2] = sub_2562578CC;
        v176[3] = v164;
        uint64_t v177 = v164;
        uint64_t v178 = v244;
        v176[4] = sub_256257128;
        v176[5] = v178;
        v176[6] = sub_2562578CC;
        v176[7] = v175;
        uint64_t v179 = v246;
        v176[8] = sub_2562578CC;
        v176[9] = v179;
        os_log_t v180 = v251;
        v176[10] = sub_2562578C8;
        v176[11] = v180;
        uint64_t v181 = v236;
        v176[12] = sub_2562578CC;
        v176[13] = v181;
        uint64_t v182 = v245;
        v176[14] = sub_2562578CC;
        v176[15] = v182;
        v176[16] = sub_2562578C8;
        v176[17] = v172;
        swift_retain();
        uint64_t v234 = v165;
        swift_retain();
        swift_retain();
        uint64_t v232 = v167;
        swift_retain();
        swift_retain();
        uint64_t v231 = v169;
        swift_retain();
        uint64_t v230 = v170;
        swift_retain();
        swift_retain();
        uint64_t v233 = v177;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v183 = v240;
        if (os_log_type_enabled(v250, (os_log_type_t)v240))
        {
          uint64_t v151 = swift_slowAlloc();
          uint64_t v240 = swift_slowAlloc();
          v256[0] = v240;
          *(_WORD *)uint64_t v151 = 770;
          *(unsigned char *)(v151 + 2) = 0;
          swift_release();
          *(unsigned char *)(v151 + 3) = 8;
          swift_release();
          swift_release();
          *(void *)(v151 + 4) = v243;
          swift_release();
          swift_release();
          *(unsigned char *)(v151 + 12) = 32;
          swift_release();
          *(unsigned char *)(v151 + 13) = 8;
          swift_release();
          unint64_t v152 = v235;
          swift_bridgeObjectRetain();
          *(void *)(v151 + 14) = sub_256229738(v229, v152, v256);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          *(unsigned char *)(v151 + 22) = 32;
          swift_release();
          *(unsigned char *)(v151 + 23) = 8;
          swift_release();
          *(void *)(v151 + 24) = sub_256229738(0x676E69727453, 0xE600000000000000, v256);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          os_log_t v153 = v250;
          _os_log_impl(&dword_256226000, v250, v183, "assetFailureReason[%ld] = %s (type: %s)", (uint8_t *)v151, 0x20u);
          uint64_t v154 = v240;
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v154, -1, -1);
          MEMORY[0x25A2A5190](v151, -1, -1);
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          swift_release();
          swift_release();
        }
        v150 = v242 + 2;
        uint64_t v149 = v243 + 1;
        uint64_t v126 = v228;
        if (v241 == v226) {
          goto LABEL_230;
        }
      }
      __break(1u);
LABEL_234:
      __break(1u);
    }
LABEL_230:
    swift_release();
    uint64_t v184 = sub_2562E3430();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v184 - 8) + 8))(v126, v184);
    uint64_t v119 = v186;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v259);
    goto LABEL_231;
  }
  uint64_t v14 = sub_2562E3410();
  os_log_type_t v15 = sub_2562E3810();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v16 = 0;
    _os_log_impl(&dword_256226000, v14, v15, "failed to get row", v16, 2u);
    MEMORY[0x25A2A5190](v16, -1, -1);
  }

  swift_release();
  uint64_t v17 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  swift_bridgeObjectRelease();
  sub_256290A58(&v261);
  return sub_2562909F0((uint64_t)&v261, v224);
}

uint64_t RequestWithNoAssetData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F550C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  int v53 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v49 = *(void *)(v1 + 32);
  uint64_t v50 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v47 = *(void *)(v1 + 48);
  uint64_t v48 = v8;
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v45 = *(void *)(v1 + 72);
  uint64_t v46 = v9;
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v43 = *(void *)(v1 + 88);
  uint64_t v44 = v10;
  uint64_t v12 = *(void *)(v1 + 96);
  uint64_t v41 = *(void *)(v1 + 104);
  uint64_t v42 = v11;
  uint64_t v13 = *(void *)(v1 + 112);
  uint64_t v39 = *(void *)(v1 + 120);
  uint64_t v40 = v12;
  uint64_t v14 = *(void *)(v1 + 128);
  uint64_t v37 = *(void *)(v1 + 136);
  uint64_t v38 = v13;
  uint64_t v34 = *(void *)(v1 + 144);
  uint64_t v35 = *(void *)(v1 + 152);
  uint64_t v36 = v14;
  uint64_t v30 = *(void *)(v1 + 160);
  uint64_t v31 = *(void *)(v1 + 168);
  uint64_t v15 = *(void *)(v1 + 184);
  uint64_t v32 = *(void *)(v1 + 176);
  uint64_t v33 = v15;
  uint64_t v29 = *(unsigned int *)(v1 + 192);
  int v28 = *(unsigned __int8 *)(v1 + 196);
  uint64_t v27 = *(unsigned int *)(v1 + 200);
  int v26 = *(unsigned __int8 *)(v1 + 204);
  uint64_t v25 = *(unsigned int *)(v1 + 208);
  int v24 = *(unsigned __int8 *)(v1 + 212);
  uint64_t v22 = *(void *)(v1 + 216);
  uint64_t v23 = *(void *)(v1 + 224);
  uint64_t v20 = *(void *)(v1 + 232);
  int v21 = *(unsigned __int8 *)(v1 + 240);
  v18[1] = *(void *)(v1 + 248);
  v18[2] = *(void *)(v1 + 256);
  uint64_t v19 = *(void *)(v1 + 264);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25628EF98();
  sub_2562E3DD0();
  LOBYTE(v52) = 0;
  uint64_t v16 = v51;
  sub_2562E3BE0();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v51 = v4;
  LOBYTE(v52) = 1;
  sub_2562E3BF0();
  LOBYTE(v52) = 2;
  sub_2562E3BE0();
  LOBYTE(v52) = 3;
  sub_2562E3BE0();
  LOBYTE(v52) = 4;
  sub_2562E3BE0();
  LOBYTE(v52) = 5;
  sub_2562E3BE0();
  LOBYTE(v52) = 6;
  sub_2562E3BE0();
  LOBYTE(v52) = 7;
  sub_2562E3BE0();
  LOBYTE(v52) = 8;
  sub_2562E3BE0();
  LOBYTE(v52) = 9;
  sub_2562E3BE0();
  LOBYTE(v52) = 10;
  sub_2562E3BE0();
  LOBYTE(v52) = 11;
  sub_2562E3BE0();
  LOBYTE(v52) = 12;
  char v54 = v28;
  sub_2562E3C10();
  LOBYTE(v52) = 13;
  char v54 = v26;
  sub_2562E3C10();
  LOBYTE(v52) = 14;
  char v54 = v24;
  sub_2562E3C10();
  LOBYTE(v52) = 15;
  sub_2562E3BE0();
  LOBYTE(v52) = 16;
  sub_2562E3C20();
  LOBYTE(v52) = 17;
  sub_2562E3BE0();
  uint64_t v52 = v19;
  char v54 = 18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
  sub_25628FF70(&qword_269F550D0);
  sub_2562E3C00();
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v6, v3);
}

unint64_t sub_25628EF98()
{
  unint64_t result = qword_269F550C8;
  if (!qword_269F550C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F550C8);
  }
  return result;
}

uint64_t RequestWithNoAssetData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F550D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  v150 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_25628EF98();
  sub_2562E3DC0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v150);
    return swift_bridgeObjectRelease();
  }
  uint64_t v82 = a2;
  LOBYTE(v92[0]) = 0;
  uint64_t v11 = sub_2562E3B30();
  LOBYTE(v92[0]) = 1;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2562E3B50();
  uint64_t v90 = v13;
  uint64_t v15 = v14;
  char v149 = v16 & 1;
  LOBYTE(v92[0]) = 2;
  LODWORD(v13) = v16;
  uint64_t v80 = sub_2562E3B30();
  uint64_t v81 = v15;
  int v79 = v13;
  LOBYTE(v92[0]) = 3;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_2562E3B30();
  uint64_t v89 = v18;
  uint64_t v78 = v19;
  LOBYTE(v92[0]) = 4;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2562E3B30();
  uint64_t v88 = v21;
  uint64_t v77 = v22;
  LOBYTE(v92[0]) = 5;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_2562E3B30();
  uint64_t v87 = v24;
  uint64_t v76 = v25;
  LOBYTE(v92[0]) = 6;
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_2562E3B30();
  uint64_t v86 = v27;
  uint64_t v75 = v28;
  LOBYTE(v92[0]) = 7;
  uint64_t v30 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_2562E3B30();
  uint64_t v85 = v30;
  uint64_t v74 = v31;
  LOBYTE(v92[0]) = 8;
  uint64_t v33 = v32;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_2562E3B30();
  uint64_t v84 = v33;
  uint64_t v71 = v11;
  uint64_t v72 = v34;
  LOBYTE(v92[0]) = 9;
  uint64_t v83 = v35;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_2562E3B30();
  uint64_t v73 = v37;
  uint64_t v38 = v36;
  LOBYTE(v92[0]) = 10;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_2562E3B30();
  uint64_t v40 = v39;
  LOBYTE(v92[0]) = 11;
  swift_bridgeObjectRetain();
  uint64_t v68 = sub_2562E3B30();
  uint64_t v69 = v41;
  LOBYTE(v92[0]) = 12;
  swift_bridgeObjectRetain();
  unint64_t v67 = sub_2562E3B70();
  uint64_t v65 = HIDWORD(v67) & 1;
  char v147 = BYTE4(v67) & 1;
  LOBYTE(v92[0]) = 13;
  unint64_t v66 = sub_2562E3B70();
  uint64_t v62 = HIDWORD(v66) & 1;
  char v144 = BYTE4(v66) & 1;
  LOBYTE(v92[0]) = 14;
  unint64_t v64 = sub_2562E3B70();
  uint64_t v59 = HIDWORD(v64) & 1;
  char v141 = BYTE4(v64) & 1;
  LOBYTE(v92[0]) = 15;
  uint64_t v60 = sub_2562E3B30();
  uint64_t v61 = v42;
  uint64_t v63 = 0;
  LOBYTE(v92[0]) = 16;
  swift_bridgeObjectRetain();
  uint64_t v43 = v63;
  uint64_t v57 = sub_2562E3B80();
  int v58 = v44;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v150);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v63) {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  char v138 = v58 & 1;
  LOBYTE(v92[0]) = 17;
  uint64_t v56 = sub_2562E3B30();
  uint64_t v46 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
  char v135 = 18;
  sub_25628FF70((unint64_t *)&qword_269F54DD0);
  swift_bridgeObjectRetain();
  sub_2562E3B60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v47 = v136;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v91[3]) = v79 & 1;
  BYTE4(v91[24]) = v65;
  BYTE4(v91[25]) = v62;
  BYTE4(v91[26]) = v59;
  LOBYTE(v91[30]) = v58 & 1;
  v91[0] = v71;
  v91[1] = v90;
  uint64_t v48 = v90;
  v91[2] = v81;
  v91[4] = v80;
  v91[5] = v89;
  v91[6] = v78;
  v91[7] = v88;
  v91[8] = v77;
  v91[9] = v87;
  v91[10] = v76;
  v91[11] = v86;
  v91[12] = v75;
  v91[13] = v85;
  v91[14] = v74;
  v91[15] = v84;
  v91[16] = v72;
  v91[17] = v83;
  uint64_t v55 = v38;
  v91[18] = v38;
  v91[19] = v73;
  uint64_t v49 = v69;
  v91[20] = v68;
  v91[21] = v69;
  v91[22] = v70;
  v91[23] = v40;
  uint64_t v50 = v40;
  LODWORD(v91[24]) = v67;
  LODWORD(v91[25]) = v66;
  LODWORD(v91[26]) = v64;
  uint64_t v51 = v61;
  v91[27] = v60;
  v91[28] = v61;
  v91[29] = v57;
  v91[31] = v56;
  v91[32] = v46;
  uint64_t v52 = v47;
  v91[33] = v47;
  sub_25622F420((uint64_t)v91);
  uint64_t v53 = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v82, v91, 0x110uLL);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v150);
  v92[0] = v71;
  v92[1] = v53;
  v92[2] = v81;
  char v93 = v149;
  *(_DWORD *)int v94 = *(_DWORD *)v148;
  *(_DWORD *)&v94[3] = *(_DWORD *)&v148[3];
  uint64_t v95 = v80;
  uint64_t v96 = v89;
  uint64_t v97 = v78;
  uint64_t v98 = v88;
  uint64_t v99 = v77;
  uint64_t v100 = v87;
  uint64_t v101 = v76;
  uint64_t v102 = v54;
  uint64_t v103 = v75;
  uint64_t v104 = v85;
  uint64_t v105 = v74;
  uint64_t v106 = v84;
  uint64_t v107 = v72;
  uint64_t v108 = v83;
  uint64_t v109 = v55;
  uint64_t v110 = v73;
  uint64_t v111 = v68;
  uint64_t v112 = v49;
  uint64_t v113 = v70;
  uint64_t v114 = v50;
  int v115 = v67;
  char v116 = v147;
  __int16 v117 = v145;
  char v118 = v146;
  int v119 = v66;
  char v120 = v144;
  __int16 v121 = v142;
  char v122 = v143;
  int v123 = v64;
  char v124 = v141;
  char v126 = v140;
  __int16 v125 = v139;
  uint64_t v127 = v60;
  uint64_t v128 = v51;
  uint64_t v129 = v57;
  char v130 = v138;
  *(_DWORD *)&v131[3] = *(_DWORD *)&v137[3];
  *(_DWORD *)unint64_t v131 = *(_DWORD *)v137;
  uint64_t v132 = v56;
  uint64_t v133 = v46;
  uint64_t v134 = v52;
  return sub_256244498((uint64_t)v92);
}

uint64_t sub_25628FF70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269F549E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25628FFD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RequestWithNoAssetData.init(from:)(a1, a2);
}

uint64_t sub_25628FFEC(void *a1)
{
  return RequestWithNoAssetData.encode(to:)(a1);
}

uint64_t destroy for RequestWithNoAssetData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RequestWithNoAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  int v14 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v14;
  int v15 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v15;
  int v16 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v16;
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  uint64_t v18 = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 232) = v18;
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestWithNoAssetData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v5;
  int v6 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v6;
  int v7 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v7;
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 232) = v8;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for RequestWithNoAssetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestWithNoAssetData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 272)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestWithNoAssetData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestWithNoAssetData()
{
  return &type metadata for RequestWithNoAssetData;
}

uint64_t getEnumTagSinglePayload for RequestWithNoAssetData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RequestWithNoAssetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256290820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestWithNoAssetData.CodingKeys()
{
  return &type metadata for RequestWithNoAssetData.CodingKeys;
}

uint64_t sub_256290858()
{
  return sub_25626AA80(&qword_269F550E0, &qword_269F550E8);
}

unint64_t sub_256290898()
{
  unint64_t result = qword_269F550F0;
  if (!qword_269F550F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F550F0);
  }
  return result;
}

unint64_t sub_2562908F0()
{
  unint64_t result = qword_269F550F8;
  if (!qword_269F550F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F550F8);
  }
  return result;
}

unint64_t sub_256290948()
{
  unint64_t result = qword_269F55100;
  if (!qword_269F55100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55100);
  }
  return result;
}

uint64_t sub_25629099C()
{
  unint64_t v0 = sub_2562E3CB0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

uint64_t sub_2562909F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F55108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_256290A58(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_2562E7A40;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  return result;
}

uint64_t sub_256290A8C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256290AC4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));

  return swift_getDynamicType();
}

uint64_t sub_256290B08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290B18()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290B28()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256290B64()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_256290B74()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_256290B7C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256290BB4()
{
  return MEMORY[0x263F8D310];
}

uint64_t sub_256290BC0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290BD0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290BE0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290BF0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290C00()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290C10()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_256290C20()
{
  (*(void (**)(void))(v0 + 16))();

  return sub_2562E3E00();
}

uint64_t static BiomeSQLDatabaseUtils.identifySqlError(errorString:)@<X0>(char *a1@<X8>)
{
  sub_25624F610();
  uint64_t result = sub_2562E3950();
  if (result)
  {
    char v3 = 13;
  }
  else
  {
    uint64_t result = sub_2562E3950();
    if (result)
    {
      char v3 = 12;
    }
    else
    {
      uint64_t result = sub_2562E3950();
      if (result) {
        char v3 = 14;
      }
      else {
        char v3 = 11;
      }
    }
  }
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for BiomeSQLDatabaseUtils()
{
  return &type metadata for BiomeSQLDatabaseUtils;
}

uint64_t SpeakerIdSamplingPlugin.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SpeakerIdSamplingPlugin.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t SpeakerIdSamplingPlugin.init(defaults:logger:)(void *a1, uint64_t a2)
{
  id v73 = a1;
  uint64_t v4 = (void *)sub_2562E3430();
  uint64_t v5 = *(v4 - 1);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v70 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v63 - v8;
  uint64_t v11 = v5 + 16;
  uint64_t v10 = *(void (**)(void))(v5 + 16);
  ((void (*)(char *, uint64_t, void *))v10)((char *)&v63 - v8, a2, v4);
  type metadata accessor for SpeakerIdSamplingDataProvider();
  uint64_t v12 = swift_allocObject();
  uint64_t v72 = v5;
  uint64_t v13 = *(void (**)(uint64_t, char *, id))(v5 + 32);
  uint64_t v68 = v5 + 32;
  uint64_t v69 = v9;
  uint64_t v75 = v13;
  v13(v12 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingDataProvider_logger, v9, v4);
  *(void *)(v2 + 16) = v12;
  uint64_t v65 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_logger);
  v10();
  uint64_t v14 = sub_2562E2FD0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  sub_2562E2FC0();
  uint64_t v74 = v2;
  int v16 = *(void (**)(void))(v15 + 32);
  unint64_t v64 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_oddId);
  v16();
  uint64_t v17 = sub_2562E3340();
  swift_allocObject();
  id v18 = v73;
  uint64_t v19 = sub_2562E3330();
  uint64_t v77 = v17;
  uint64_t v78 = MEMORY[0x263F396B8];
  uint64_t v76 = v19;
  uint64_t v79 = a2;
  id v73 = v4;
  uint64_t v66 = v11;
  unint64_t v67 = v10;
  ((void (*)(char *, uint64_t, void *))v10)(v70, a2, v4);
  sub_2562E3140();
  swift_allocObject();
  uint64_t v20 = v71;
  uint64_t v21 = sub_2562E3120();
  if (v20)
  {

    id v22 = v73;
    uint64_t v23 = *(void (**)(uint64_t, id))(v72 + 8);
    v23(v79, v73);
    uint64_t v24 = v74;
    swift_release();
    v23((uint64_t)v65, v22);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v64, v14);
    type metadata accessor for SpeakerIdSamplingPlugin();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v25 = v21;
    uint64_t v26 = sub_2562E2F80();
    uint64_t v65 = &v63;
    uint64_t v27 = *(void *)(v26 - 8);
    MEMORY[0x270FA5388](v26);
    uint64_t v29 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E32A0();
    uint64_t v30 = sub_2562E3060();
    unint64_t v64 = &v63;
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v71 = 0;
    uint64_t v32 = v31;
    MEMORY[0x270FA5388](v30);
    uint64_t v34 = (char *)&v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3020();
    uint64_t v35 = (char *)v25;
    sub_2562E3130();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v36 = v69;
    id v37 = v73;
    ((void (*)(char *, uint64_t, id))v67)(v69, v79, v73);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
    MEMORY[0x270FA5388](v38 - 8);
    uint64_t v40 = (char *)&v63 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = (uint64_t *)v18;
    uint64_t v65 = v41;
    uint64_t v70 = v35;
    swift_retain();
    sub_2562917E0((uint64_t)v40);
    uint64_t v42 = type metadata accessor for SamplingUtils();
    type metadata accessor for SpeakerIdSamplingCalculator();
    uint64_t v43 = swift_allocObject();
    sub_2562E3020();
    *(void *)(v43 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_defaults) = v41;
    v75(v43 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger, v36, v37);
    sub_25626DA70((uint64_t)v40, v43 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_sqlFileURL);
    *(void *)(v43 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_bookmarkService) = v35;
    int v44 = (uint64_t *)(v43 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_samplingUtils);
    *int v44 = v42;
    v44[1] = (uint64_t)&protocol witness table for SamplingUtils;
    uint64_t v24 = v74;
    *(void *)(v74 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_calculator) = v43;
    id v45 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
    swift_unknownObjectRelease();
    id v46 = objc_msgSend(v45, sel_OnDeviceAnalytics);
    swift_unknownObjectRelease();
    id v47 = objc_msgSend(v46, sel_SpeakerIdSampling);
    swift_unknownObjectRelease();
    id v48 = objc_msgSend(v47, sel_source);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F55130);
    swift_allocObject();
    uint64_t v49 = sub_2562E30C0();
    uint64_t v50 = v79;
    uint64_t v51 = v67;
    ((void (*)(char *, uint64_t, id))v67)(v36, v79, v37);
    type metadata accessor for SpeakerIdSamplingBiomeReporter();
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v49;
    v75(v52 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSamplingBiomeReporter_logger, v36, v37);
    ((void (*)(char *, uint64_t, id))v51)(v36, v50, v37);
    uint64_t v53 = type metadata accessor for SELFReportingService();
    uint64_t v54 = (void *)swift_allocObject();
    uint64_t v55 = self;
    swift_retain();
    v54[3] = objc_msgSend(v55, sel_sharedLoggerWithPersistenceConfiguration_, 1);
    id v56 = objc_msgSend(self, sel_sharedAnalytics);
    id v57 = objc_msgSend(v56, sel_defaultMessageStream);

    v54[2] = v57;
    v54[4] = 0xD000000000000027;
    v54[5] = 0x80000002562EBB60;
    type metadata accessor for SpeakerIdSamplingSELFReporter();
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = (void *)(v58 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_reportingService);
    v59[3] = v53;
    v59[4] = &protocol witness table for SELFReportingService;
    void *v59 = v54;
    v75(v58 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdSamplingSELFReporter_logger, v69, v37);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_2562E5700;
    *(void *)(v60 + 32) = v58;
    *(void *)(v60 + 40) = v52;
    uint64_t v76 = v60;
    sub_2562E3720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F55138);
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v76 = sub_2562E30E0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F55140);
    swift_allocObject();
    uint64_t v61 = sub_2562E3100();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, id))(v72 + 8))(v79, v37);
    *(void *)(v24 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_reporter) = v61;
  }
  return v24;
}

uint64_t type metadata accessor for SpeakerIdSamplingPlugin()
{
  uint64_t result = qword_269F55198;
  if (!qword_269F55198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2562917E0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SiriDigestMetricsCalculator();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_2562E3550();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_2562E2E20();

    uint64_t v7 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_256291940()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256291960, 0, 0);
}

uint64_t sub_256291960()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SpeakerIdSamplingDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_256291A44(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_256291A74, 0, 0);
}

uint64_t sub_256291A74()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395D0] + MEMORY[0x263F395D0]);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25623D940;
  return v4(v0 + 16);
}

uint64_t sub_256291B40(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_256291B60, 0, 0);
}

uint64_t sub_256291B60()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_2562AC8A0(v2);
}

uint64_t SpeakerIdSamplingPlugin.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  return v0;
}

uint64_t SpeakerIdSamplingPlugin.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdSamplingPlugin_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_256291DE0()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_256291960, 0, 0);
}

uint64_t sub_256291E04(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_256291B60, 0, 0);
}

uint64_t sub_256291E28(uint64_t a1)
{
  *(void *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_256291A74, 0, 0);
}

uint64_t sub_256291E5C()
{
  return sub_256291EF8(&qword_269F55168);
}

uint64_t sub_256291E90()
{
  return sub_256291EF8(&qword_269F55170);
}

uint64_t sub_256291EC4()
{
  return sub_256291EF8(qword_269F55178);
}

uint64_t sub_256291EF8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SpeakerIdSamplingPlugin();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256291F3C()
{
  return type metadata accessor for SpeakerIdSamplingPlugin();
}

uint64_t sub_256291F44()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2562E2FD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSamplingPlugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingPlugin);
}

uint64_t dispatch thunk of SpeakerIdSamplingPlugin.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SpeakerIdSamplingPlugin.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SpeakerIdSamplingPlugin.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SpeakerIdSamplingPlugin.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t SpeakerIdManifestPlugin.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_256292A58(a1, a2);

  return v4;
}

uint64_t SpeakerIdManifestPlugin.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_256292A58(a1, a2);

  return v3;
}

uint64_t sub_25629242C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25629244C, 0, 0);
}

uint64_t sub_25629244C()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SpeakerIdManifestDataRecord", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_256292538(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 24) = v1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_25629255C, 0, 0);
}

uint64_t sub_25629255C()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_reporter);
  v0[2] = v0[4];
  uint64_t v4 = (uint64_t (*)(void *))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_256292674;
  return v4(v0 + 2);
}

uint64_t sub_256292674()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2562927A8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2562927A8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2562927C0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2562927E0, 0, 0);
}

uint64_t sub_2562927E0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_2562DDA88(v2);
}

uint64_t SpeakerIdManifestPlugin.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SpeakerIdManifestPlugin.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2562929E8()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_25629244C, 0, 0);
}

uint64_t sub_256292A0C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_2562927E0, 0, 0);
}

uint64_t sub_256292A30(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 24) = *v1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_25629255C, 0, 0);
}

uint64_t sub_256292A58(void *a1, uint64_t a2)
{
  id v26 = a1;
  uint64_t v4 = sub_2562E3430();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v2;
  uint64_t v8 = v7;
  uint64_t v28 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v9((char *)(v2 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_logger), a2, v4);
  v9(v6, a2, v4);
  uint64_t v25 = v9;
  type metadata accessor for SpeakerIdManifestDataProvider();
  uint64_t v10 = swift_allocObject();
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v23[1] = v8 + 32;
  v29(v10 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestDataProvider_logger, v6, v4);
  *(void *)(v2 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_dataProvider) = v10;
  v9(v6, a2, v4);
  uint64_t v11 = type metadata accessor for SamplingUtils();
  type metadata accessor for SpeakerIdManifestCalculator();
  uint64_t v12 = swift_allocObject();
  id v13 = v26;
  sub_2562E3020();
  *(void *)(v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdManifestCalculator_defaults) = v13;
  uint64_t v27 = v6;
  v29(v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdManifestCalculator_logger, v6, v4);
  uint64_t v14 = (uint64_t *)(v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdManifestCalculator_samplingUtils);
  *uint64_t v14 = v11;
  v14[1] = (uint64_t)&protocol witness table for SamplingUtils;
  uint64_t v15 = v24;
  *(void *)(v24 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_calculator) = v12;
  int v16 = v6;
  uint64_t v17 = v4;
  v25(v16, a2, v4);
  type metadata accessor for SELFReportingService();
  id v18 = (void *)swift_allocObject();
  void v18[3] = objc_msgSend(self, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  id v19 = objc_msgSend(self, sel_sharedAnalytics);
  id v20 = objc_msgSend(v19, sel_defaultMessageStream);

  v18[2] = v20;
  void v18[4] = 0xD000000000000027;
  v18[5] = 0x80000002562EBB60;
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a2, v4);
  type metadata accessor for SpeakerIdManifestSELFReporter();
  uint64_t v21 = swift_allocObject();
  v29(v21 + OBJC_IVAR____TtC16MetricsFramework29SpeakerIdManifestSELFReporter_logger, v27, v17);
  *(void *)(v21 + 16) = v18;
  *(void *)(v15 + OBJC_IVAR____TtC16MetricsFramework23SpeakerIdManifestPlugin_reporter) = v21;
  return v15;
}

uint64_t sub_256292DBC()
{
  return sub_256292EA4(&qword_269F551F8);
}

uint64_t type metadata accessor for SpeakerIdManifestPlugin()
{
  uint64_t result = qword_269F55230;
  if (!qword_269F55230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256292E3C()
{
  return sub_256292EA4(&qword_269F55200);
}

uint64_t sub_256292E70()
{
  return sub_256292EA4(&qword_269F55208);
}

uint64_t sub_256292EA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SpeakerIdManifestPlugin();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256292EEC()
{
  unint64_t result = qword_269F55210[0];
  if (!qword_269F55210[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F55210);
  }
  return result;
}

uint64_t sub_256292F40()
{
  return type metadata accessor for SpeakerIdManifestPlugin();
}

uint64_t sub_256292F48()
{
  uint64_t result = sub_2562E3430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SpeakerIdManifestPlugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdManifestPlugin);
}

uint64_t dispatch thunk of SpeakerIdManifestPlugin.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SpeakerIdManifestPlugin.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SpeakerIdManifestPlugin.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SpeakerIdManifestPlugin.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

MetricsFramework::SpeakerIdWorkerError_optional __swiftcall SpeakerIdWorkerError.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2562E3CB0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t SpeakerIdWorkerError.rawValue.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7463657078656E75;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 8:
    case 0xB:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 9:
      unint64_t result = 0x4E656C69466C7173;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0x72576664556C7173;
      break;
    case 0xD:
      unint64_t result = 0x78456664556C7173;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x74754F64656D6974;
      break;
  }
  return result;
}

uint64_t sub_2562935C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25629CDE0(*a1, *a2);
}

uint64_t sub_2562935D0()
{
  return sub_2562E3D90();
}

uint64_t sub_256293638()
{
  SpeakerIdWorkerError.rawValue.getter();
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25629369C()
{
  return sub_2562E3D90();
}

MetricsFramework::SpeakerIdWorkerError_optional sub_256293700(Swift::String *a1)
{
  return SpeakerIdWorkerError.init(rawValue:)(*a1);
}

unint64_t sub_25629370C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SpeakerIdWorkerError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t static SpeakerIdSamplingWorker.pluginLastRunDateKey.getter()
{
  return 0xD000000000000022;
}

unint64_t static SpeakerIdSamplingWorker.includeCurrentDateForAggregation.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static SpeakerIdSamplingWorker.defaultSamplingCountPerDayLimit.getter()
{
  return 2;
}

uint64_t static SpeakerIdSamplingWorker.defaultManifestIntermediateCountLimit.getter()
{
  return 50;
}

uint64_t static SpeakerIdSamplingWorker.defaultManifestTotalSamplingCountLimit.getter()
{
  return 150;
}

unint64_t static SpeakerIdSamplingWorker.CountPerDay.getter()
{
  return 0xD000000000000014;
}

unint64_t static SpeakerIdSamplingWorker.ManifestIntermediateCountLimit.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static SpeakerIdSamplingWorker.ManifestTotalCountLimit.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static SpeakerIdSamplingWorker.ManifestCurrentCount.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static SpeakerIdSamplingWorker.TotalTimeInMinutes.getter()
{
  return 0xD00000000000001ELL;
}

MetricsFramework::SpeakerIdSamplingWorker::Subtask_optional __swiftcall SpeakerIdSamplingWorker.Subtask.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2562E3B20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t SpeakerIdSamplingWorker.Subtask.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000019;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_2562938C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25629CCE8(*a1, *a2);
}

uint64_t sub_2562938D4()
{
  return sub_25629D100();
}

uint64_t sub_2562938DC()
{
  return sub_25629D250();
}

uint64_t sub_2562938E4()
{
  return sub_25629D498();
}

MetricsFramework::SpeakerIdSamplingWorker::Subtask_optional sub_2562938EC(Swift::String *a1)
{
  return SpeakerIdSamplingWorker.Subtask.init(rawValue:)(*a1);
}

unint64_t sub_2562938F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SpeakerIdSamplingWorker.Subtask.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SpeakerIdSamplingWorker.init(logger:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2562E3020();
  uint64_t v4 = a2 + *(int *)(type metadata accessor for SpeakerIdSamplingWorker() + 20);
  uint64_t v5 = sub_2562E3430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a1, v5);
}

uint64_t type metadata accessor for SpeakerIdSamplingWorker()
{
  uint64_t result = qword_269F552A8;
  if (!qword_269F552A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SpeakerIdSamplingWorker.doWork(executor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_2562E3780();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_2562E3430();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256293B1C, 0, 0);
}

uint64_t sub_256293B1C()
{
  uint64_t v119 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v5 = *(void **)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v6 = *(int *)(type metadata accessor for SpeakerIdSamplingWorker() + 20);
  *(_DWORD *)(v0 + 432) = v6;
  uint64_t v7 = v4 + v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v8(v1, v7, v2);
  id v9 = v5;
  uint64_t v10 = sub_2562E3410();
  os_log_type_t v11 = sub_2562E37E0();
  uint64_t v113 = (id *)(v0 + 48);
  uint64_t v115 = v7;
  uint64_t v111 = v8;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v108 = *(void *)(v0 + 136);
    uint64_t v109 = *(void *)(v0 + 160);
    id v13 = *(void **)(v0 + 96);
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v117 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v16 = sub_2562E3200();
    *(void *)(v0 + 72) = sub_256229738(v16, v17, &v117);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v18 = sub_2562E3210();
    *(void *)(v0 + 40) = sub_256229738(v18, v19, &v117);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_256226000, v10, v11, "TaskId: %s, TaskName: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v15, -1, -1);
    MEMORY[0x25A2A5190](v14, -1, -1);

    uint64_t v20 = v109;
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v110(v20, v108);
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v22 = *(void *)(v0 + 136);
    uint64_t v23 = *(void *)(v0 + 144);
    uint64_t v24 = *(void **)(v0 + 96);

    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v110(v21, v22);
  }
  uint64_t v25 = *(void **)(v0 + 80);
  *uint64_t v25 = 0;
  uint64_t v26 = *MEMORY[0x263F8AF08];
  *(_DWORD *)(v0 + 436) = v26;
  uint64_t v27 = sub_2562E31D0();
  *(void *)(v0 + 168) = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  *(void *)(v0 + 176) = v28;
  uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v28 + 104);
  *(void *)(v0 + 184) = v29;
  *(void *)(v0 + 192) = (v28 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v29(v25, v26, v27);
  id v30 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v31 = (void *)sub_2562E3550();
  id v32 = objc_msgSend(v30, sel_initWithSuiteName_, v31);
  *(void *)(v0 + 200) = v32;

  uint64_t v33 = sub_2562E3200();
  unint64_t v35 = v34;
  uint64_t v36 = sub_2562E3210();
  sub_25629764C(v33, v35, v36, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v117 = sub_2562E3210();
  uint64_t v118 = v46;
  sub_2562E3640();
  id v47 = objc_allocWithZone(MEMORY[0x263F80E10]);
  id v48 = (void *)sub_2562E3550();
  uint64_t v49 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(v47, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v48, 1, v49);
  *(void *)(v0 + 288) = v50;

  unint64_t v51 = sub_256246B38((uint64_t)&unk_2704CB490);
  uint64_t v52 = v51;
  *(void *)(v0 + 296) = v51;
  if (v32)
  {
    uint64_t v53 = *(void *)(v0 + 88);
    id v114 = v32;
    sub_2562E3200();
    uint64_t v117 = sub_2562E3210();
    uint64_t v118 = v54;
    swift_bridgeObjectRetain();
    sub_2562E3640();
    swift_bridgeObjectRetain();
    sub_2562E3640();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = (objc_class *)sub_2562E3220();
    *(void *)(v0 + 208) = v55;
    id v56 = objc_allocWithZone(v55);
    id v57 = (void *)sub_2562E31F0();
    *(void *)(v0 + 216) = v57;
    uint64_t v58 = sub_2562E3180();
    *(void *)(v0 + 224) = v58;
    uint64_t v59 = *(void *)(v58 - 8);
    *(void *)(v0 + 232) = v59;
    *(void *)(v0 + 240) = *(void *)(v59 + 64);
    uint64_t v60 = swift_task_alloc();
    *(void *)(v0 + 248) = v60;
    id v61 = v57;
    id v62 = v50;
    sub_25624709C(v52);
    sub_2562E3170();
    *(void *)(v0 + 256) = *(void *)(v28 + 64);
    uint64_t v63 = swift_task_alloc();
    *(void *)(v0 + 264) = v63;
    uint64_t v112 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t))(*(void *)(*(void *)v53 + 88)
                                                                 + **(int **)(*(void *)v53 + 88));
    unint64_t v64 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v64;
    void *v64 = v0;
    v64[1] = sub_256294904;
    return v112(v63, v114, v60, v115);
  }
  uint64_t v72 = *(void *)(v0 + 152);
  uint64_t v73 = *(void *)(v0 + 136);
  swift_bridgeObjectRelease();
  v111(v72, v115, v73);
  uint64_t v74 = sub_2562E3410();
  os_log_type_t v75 = sub_2562E3800();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v76 = 0;
    _os_log_impl(&dword_256226000, v74, v75, "Can't get user defaults initialized", v76, 2u);
    MEMORY[0x25A2A5190](v76, -1, -1);
  }
  uint64_t v77 = *(void *)(v0 + 152);
  uint64_t v78 = *(void *)(v0 + 136);

  v110(v77, v78);
  sub_256228280();
  id v44 = (id)swift_allocError();
  unsigned char *v79 = 5;
  swift_willThrow();

  uint64_t v38 = (id *)(v0 + 16);
  *(void *)(v0 + 16) = v44;
  uint64_t v39 = sub_2562E31A0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = swift_task_alloc();
  id v42 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v41, v39);
    if (MEMORY[0x263F8AEE8] && v43 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v44 = *v38;
      char v45 = 3;
LABEL_40:
      char v116 = v45;
      goto LABEL_41;
    }
    if (MEMORY[0x263F8AEF0] && v43 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v44 = *v38;
      char v45 = 4;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
  }
  uint64_t v66 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v44;
  uint64_t v67 = sub_2562E3320();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = swift_task_alloc();
  id v70 = v44;
  if (swift_dynamicCast())
  {
    int v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 88))(v69, v67);
    if (MEMORY[0x263F396A0] && v71 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v44 = *v66;
      char v45 = 6;
      goto LABEL_40;
    }
    if (MEMORY[0x263F396A8] && v71 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v44 = *v66;
      char v45 = 7;
      goto LABEL_40;
    }
    if (MEMORY[0x263F396B0] && v71 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v44 = *v66;
      char v45 = 8;
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v67);
  }
  uint64_t v80 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v44;
  id v81 = v44;
  if (swift_dynamicCast())
  {

    char v116 = *(unsigned char *)(v0 + 440);
    id v44 = *v80;
LABEL_41:

    uint64_t v98 = *(void **)(v0 + 200);
    uint64_t v99 = *(void *)(v0 + 176);
    uint64_t v100 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v101 = *(void *)(v0 + 168);
    uint64_t v102 = *(unsigned int *)(v0 + 436);
    uint64_t v103 = *(void *)(v0 + 80);
    uint64_t v104 = (void *)swift_task_alloc();
    sub_256228280();
    uint64_t v105 = swift_allocError();
    *uint64_t v106 = v116;

    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v103, v101);
    *uint64_t v104 = v105;
    v100(v104, v102, v101);
    (*(void (**)(uint64_t, void *, uint64_t))(v99 + 32))(v103, v104, v101);
    swift_task_dealloc();
    goto LABEL_42;
  }

  *uint64_t v113 = v44;
  uint64_t v82 = sub_2562E31E0();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v84 = swift_task_alloc();
  id v85 = v44;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v84, v82);
    swift_task_dealloc();
    id v44 = *v113;
    char v45 = 2;
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v44;
  uint64_t v86 = sub_2562E3190();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = swift_task_alloc();
  id v89 = v44;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v88, v86);
    swift_task_dealloc();
    char v116 = 0;
    id v44 = *(id *)(v0 + 56);
    goto LABEL_41;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v44;
  id v90 = v44;
  if (!swift_dynamicCast())
  {

    char v45 = 1;
    goto LABEL_40;
  }
  int v91 = *(void **)(v0 + 200);
  int v92 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v93 = *(void *)(v0 + 168);
  uint64_t v95 = *(void *)(v0 + 120);
  uint64_t v94 = *(void *)(v0 + 128);
  uint64_t v96 = *(void *)(v0 + 112);
  uint64_t v97 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v97, v93);

  v92(v97, *MEMORY[0x263F8AF18], v93);
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);

LABEL_42:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v107 = *(uint64_t (**)(void))(v0 + 8);
  return v107();
}

uint64_t sub_256294904()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_25629616C;
  }
  else
  {
    uint64_t v2 = sub_256294A20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256294A20()
{
  uint64_t v25 = *(void **)(v0 + 288);
  uint64_t v26 = *(void *)(v0 + 296);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v27 = *(void *)(v0 + 224);
  uint64_t v28 = *(void *)(v0 + 248);
  uint64_t v3 = *(objc_class **)(v0 + 208);
  uint64_t v4 = *(uint64_t **)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v31 = *(int *)(v0 + 432);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v30 = *(void *)(v0 + 88);
  uint64_t v24 = *(void **)(v0 + 216);
  id v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(void *)(v0 + 304) = v9;
  *(void *)(v0 + 312) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v8, v6);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  *(void *)(v0 + 320) = v10;
  *(void *)(v0 + 328) = (v5 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v8, v1, v6);
  swift_task_dealloc();
  uint64_t v11 = v7;
  sub_256297930(v8, v4);
  sub_2562E3200();
  sub_2562E3210();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone(v3);
  id v13 = (void *)sub_2562E31F0();
  *(void *)(v0 + 336) = v13;

  uint64_t v14 = swift_task_alloc();
  id v15 = v25;
  id v16 = v13;
  sub_25624709C(v26);
  sub_2562E3170();
  unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 344) = v17;
  *(void *)(v0 + 352) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v17(v28, v27);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  *(void *)(v0 + 360) = v18;
  *(void *)(v0 + 368) = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v18(v28, v14, v27);
  swift_task_dealloc();
  uint64_t v19 = swift_task_alloc();
  *(void *)(v0 + 376) = v19;
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v30 + 96)
                                                                   + **(int **)(*(void *)v30 + 96));
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_256294D78;
  uint64_t v21 = *(void *)(v0 + 248);
  uint64_t v22 = *(void *)(v0 + 200);
  return v29(v19, v22, v21, v11 + v31);
}

uint64_t sub_256294D78()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_256296868;
  }
  else
  {
    uint64_t v2 = sub_256294E94;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_256294E94()
{
  uint64_t v1 = *(void **)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v0 + 304))(v5, v4);
  v3(v5, v2, v4);
  swift_task_dealloc();
  uint64_t v6 = sub_2562E3200();
  unint64_t v8 = v7;
  uint64_t v9 = sub_2562E3210();
  sub_25629764C(v6, v8, v9, v10);
  if (v1)
  {
    uint64_t v11 = (id *)(v0 + 16);
    id v12 = *(void **)(v0 + 336);
    id v13 = *(void **)(v0 + 288);
    uint64_t v14 = *(void **)(v0 + 200);
    (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 248), *(void *)(v0 + 224));

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v0 + 16) = v1;
    uint64_t v15 = sub_2562E31A0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = swift_task_alloc();
    id v18 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
      if (MEMORY[0x263F8AEE8] && v19 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v20 = 3;
LABEL_33:
        char v78 = v20;
        goto LABEL_34;
      }
      if (MEMORY[0x263F8AEF0] && v19 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v20 = 4;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
    }
    unint64_t v34 = (id *)(v0 + 24);
    swift_task_dealloc();

    *(void *)(v0 + 24) = v1;
    uint64_t v35 = sub_2562E3320();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = swift_task_alloc();
    id v38 = v1;
    if (swift_dynamicCast())
    {
      int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v37, v35);
      if (MEMORY[0x263F396A0] && v39 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v20 = 6;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396A8] && v39 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v20 = 7;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396B0] && v39 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v20 = 8;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
    }
    uint64_t v40 = (id *)(v0 + 32);
    swift_task_dealloc();

    *(void *)(v0 + 32) = v1;
    id v41 = v1;
    if (swift_dynamicCast())
    {

      char v78 = *(unsigned char *)(v0 + 440);
    }
    else
    {
      id v42 = (id *)(v0 + 48);

      *(void *)(v0 + 48) = v1;
      uint64_t v43 = sub_2562E31E0();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v45 = swift_task_alloc();
      id v46 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
        swift_task_dealloc();

        char v20 = 2;
        goto LABEL_33;
      }
      swift_task_dealloc();

      *(void *)(v0 + 56) = v1;
      uint64_t v47 = sub_2562E3190();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = swift_task_alloc();
      id v50 = v1;
      if (!swift_dynamicCast())
      {
        swift_task_dealloc();

        *(void *)(v0 + 64) = v1;
        id v51 = v1;
        if (swift_dynamicCast())
        {
          uint64_t v52 = *(void **)(v0 + 200);
          uint64_t v53 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
          uint64_t v54 = *(void *)(v0 + 168);
          uint64_t v56 = *(void *)(v0 + 120);
          uint64_t v55 = *(void *)(v0 + 128);
          uint64_t v57 = *(void *)(v0 + 112);
          uint64_t v58 = *(void *)(v0 + 80);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v58, v54);

          v53(v58, *MEMORY[0x263F8AF18], v54);
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);

LABEL_35:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v68 = *(uint64_t (**)(void))(v0 + 8);
          return v68();
        }

        char v20 = 1;
        goto LABEL_33;
      }

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
      swift_task_dealloc();

      char v78 = 0;
    }
LABEL_34:
    uint64_t v59 = *(void **)(v0 + 200);
    uint64_t v61 = *(void *)(v0 + 176);
    uint64_t v60 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v62 = *(void *)(v0 + 168);
    uint64_t v63 = *(unsigned int *)(v0 + 436);
    uint64_t v64 = *(void *)(v0 + 80);
    uint64_t v65 = (void *)swift_task_alloc();
    sub_256228280();
    uint64_t v66 = swift_allocError();
    *uint64_t v67 = v78;

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64, v62);
    *uint64_t v65 = v66;
    v60(v65, v63, v62);
    (*(void (**)(uint64_t, void *, uint64_t))(v61 + 32))(v64, v65, v62);
    swift_task_dealloc();
    goto LABEL_35;
  }
  uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v21 = *(void *)(v0 + 296);
  uint64_t v69 = *(void **)(v0 + 336);
  id v70 = *(void **)(v0 + 288);
  uint64_t v71 = *(void *)(v0 + 248);
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(objc_class **)(v0 + 208);
  uint64_t v76 = *(void *)(v0 + 104);
  uint64_t v77 = *(int *)(v0 + 432);
  uint64_t v73 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2562E3200();
  sub_2562E3210();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone(v23);
  uint64_t v25 = (void *)sub_2562E31F0();
  *(void *)(v0 + 400) = v25;

  uint64_t v26 = swift_task_alloc();
  id v27 = v70;
  id v28 = v25;
  sub_25624709C(v21);
  swift_bridgeObjectRelease();
  sub_2562E3170();
  v72(v71, v22);
  v74(v71, v26, v22);
  swift_task_dealloc();
  uint64_t v29 = swift_task_alloc();
  *(void *)(v0 + 408) = v29;
  os_log_type_t v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v73 + 104)
                                                                   + **(int **)(*(void *)v73 + 104));
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v30;
  void *v30 = v0;
  v30[1] = sub_2562958CC;
  uint64_t v31 = *(void *)(v0 + 248);
  uint64_t v32 = *(void *)(v0 + 200);
  return v75(v29, v32, v31, v76 + v77);
}

uint64_t sub_2562958CC()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_256296F5C;
  }
  else {
    uint64_t v2 = sub_2562959E0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562959E0()
{
  uint64_t v1 = *(void **)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v0 + 304))(v5, v4);
  v3(v5, v2, v4);
  swift_task_dealloc();
  uint64_t v6 = sub_2562E3200();
  unint64_t v8 = v7;
  uint64_t v9 = sub_2562E3210();
  sub_25629764C(v6, v8, v9, v10);
  uint64_t v11 = *(void **)(v0 + 400);
  id v12 = *(void **)(v0 + 288);
  id v13 = *(void **)(v0 + 200);
  (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 248), *(void *)(v0 + 224));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v1)
  {
    uint64_t v14 = (id *)(v0 + 16);
    swift_task_dealloc();
    *(void *)(v0 + 16) = v1;
    uint64_t v15 = sub_2562E31A0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = swift_task_alloc();
    id v18 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
      if (MEMORY[0x263F8AEE8] && v19 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v20 = 3;
LABEL_31:
        char v57 = v20;
        goto LABEL_32;
      }
      if (MEMORY[0x263F8AEF0] && v19 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v20 = 4;
        goto LABEL_31;
      }
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
    }
    uint64_t v21 = (id *)(v0 + 24);
    swift_task_dealloc();

    *(void *)(v0 + 24) = v1;
    uint64_t v22 = sub_2562E3320();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = swift_task_alloc();
    id v25 = v1;
    if (swift_dynamicCast())
    {
      int v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v24, v22);
      if (MEMORY[0x263F396A0] && v26 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v20 = 6;
        goto LABEL_31;
      }
      if (MEMORY[0x263F396A8] && v26 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v20 = 7;
        goto LABEL_31;
      }
      if (MEMORY[0x263F396B0] && v26 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v20 = 8;
        goto LABEL_31;
      }
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
    }
    id v27 = (id *)(v0 + 32);
    swift_task_dealloc();

    *(void *)(v0 + 32) = v1;
    id v28 = v1;
    if (swift_dynamicCast())
    {

      char v57 = *(unsigned char *)(v0 + 440);
    }
    else
    {
      uint64_t v29 = (id *)(v0 + 48);

      *(void *)(v0 + 48) = v1;
      uint64_t v30 = sub_2562E31E0();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = swift_task_alloc();
      id v33 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
        swift_task_dealloc();

        char v20 = 2;
        goto LABEL_31;
      }
      swift_task_dealloc();

      *(void *)(v0 + 56) = v1;
      uint64_t v34 = sub_2562E3190();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = swift_task_alloc();
      id v37 = v1;
      if (!swift_dynamicCast())
      {
        swift_task_dealloc();

        *(void *)(v0 + 64) = v1;
        id v38 = v1;
        if (swift_dynamicCast())
        {
          int v39 = *(void **)(v0 + 200);
          uint64_t v40 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
          uint64_t v41 = *(void *)(v0 + 168);
          uint64_t v43 = *(void *)(v0 + 120);
          uint64_t v42 = *(void *)(v0 + 128);
          uint64_t v44 = *(void *)(v0 + 112);
          uint64_t v45 = *(void *)(v0 + 80);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v45, v41);

          v40(v45, *MEMORY[0x263F8AF18], v41);
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);

          goto LABEL_34;
        }

        char v20 = 1;
        goto LABEL_31;
      }

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
      swift_task_dealloc();

      char v57 = 0;
    }
LABEL_32:
    id v46 = *(void **)(v0 + 200);
    uint64_t v48 = *(void *)(v0 + 176);
    uint64_t v47 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v49 = *(void *)(v0 + 168);
    uint64_t v50 = *(unsigned int *)(v0 + 436);
    uint64_t v51 = *(void *)(v0 + 80);
    uint64_t v52 = (void *)swift_task_alloc();
    sub_256228280();
    uint64_t v53 = swift_allocError();
    *uint64_t v54 = v57;

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v51, v49);
    *uint64_t v52 = v53;
    v47(v52, v50, v49);
    (*(void (**)(uint64_t, void *, uint64_t))(v48 + 32))(v51, v52, v49);
    goto LABEL_33;
  }

LABEL_33:
  swift_task_dealloc();
LABEL_34:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
  return v55();
}

uint64_t sub_25629616C()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void **)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 280);
  *(void *)(v0 + 16) = v6;
  unint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  uint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  char v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 440);
    id v6 = *v20;
LABEL_25:

    id v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 436);
    uint64_t v32 = *(void *)(v0 + 80);
    id v33 = (void *)swift_task_alloc();
    sub_256228280();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *id v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_256296868()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void **)(v0 + 200);

  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 392);
  *(void *)(v0 + 16) = v6;
  unint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  uint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  char v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 440);
    id v6 = *v20;
LABEL_25:

    id v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 436);
    uint64_t v32 = *(void *)(v0 + 80);
    id v33 = (void *)swift_task_alloc();
    sub_256228280();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *id v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_256296F5C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void **)(v0 + 200);

  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 424);
  *(void *)(v0 + 16) = v6;
  unint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  uint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  char v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 440);
    id v6 = *v20;
LABEL_25:

    id v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 436);
    uint64_t v32 = *(void *)(v0 + 80);
    id v33 = (void *)swift_task_alloc();
    sub_256228280();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *id v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_25629764C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_2562E3430();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2562E37B0();
  if (result)
  {
    uint64_t v14 = a1;
    uint64_t v15 = type metadata accessor for SpeakerIdSamplingWorker();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v4 + *(int *)(v15 + 20), v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_2562E3410();
    os_log_type_t v17 = sub_2562E37E0();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = a3;
      uint64_t v20 = v19;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v26 = v24;
      *(_DWORD *)uint64_t v20 = 136315394;
      int v23 = v18;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_256229738(v14, a2, &v26);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_256229738(v22, a4, &v26);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v16, (os_log_type_t)v23, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v20, 0x16u);
      uint64_t v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v21, -1, -1);
      MEMORY[0x25A2A5190](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_2562E3780();
    sub_256248F9C();
    swift_allocError();
    sub_2562E3480();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_256297930(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2562E3430();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v12 = (char *)&v50 - v11;
  uint64_t v13 = sub_2562E31D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (MEMORY[0x263F8AF10] && v17 == *MEMORY[0x263F8AF10])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = sub_2562E2F80();
    char v57 = &v50;
    uint64_t v19 = *(void **)(v18 - 8);
    uint64_t v20 = v19[8];
    uint64_t v21 = MEMORY[0x270FA5388](v18);
    uint64_t v59 = v12;
    uint64_t v56 = (char *)((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v53 = a2;
    MEMORY[0x270FA5388](v21);
    int v23 = (char *)&v50 - v22;
    sub_2562E30A0();
    sub_2562E3010();
    uint64_t v24 = (uint64_t (*)(char *, uint64_t))v19[1];
    uint64_t v58 = v19 + 1;
    uint64_t v55 = v24;
    v24(v23, v18);
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
    uint64_t v26 = (void *)sub_2562E3550();
    id v54 = v25;
    objc_msgSend(v25, sel_setDateFormat_, v26);

    id v27 = (void *)sub_2562E2F00();
    unint64_t v52 = 0x80000002562EDC20;
    uint64_t v28 = (void *)sub_2562E3550();
    objc_msgSend(v53, sel_setValue_forKey_, v27, v28);

    uint64_t v29 = type metadata accessor for SpeakerIdSamplingWorker();
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v59, v3 + *(int *)(v29 + 20), v6);
    uint64_t v53 = &v50;
    MEMORY[0x270FA5388](v30);
    uint64_t v31 = (char *)((char *)&v50 - v56);
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v19[2];
    id v33 = (char *)((char *)&v50 - v56);
    uint64_t v56 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = v59;
    v32(v33, v56, v18);
    uint64_t v35 = sub_2562E3410();
    os_log_type_t v36 = sub_2562E37F0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v61 = v51;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v50 = v37 + 4;
      sub_2562313F4();
      uint64_t v38 = sub_2562E3C80();
      uint64_t v60 = sub_256229738(v38, v39, &v61);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      uint64_t v40 = v31;
      id v41 = v55;
      v55(v40, v18);
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v60 = sub_256229738(0xD000000000000022, v52, &v61);
      sub_2562E38F0();
      _os_log_impl(&dword_256226000, v35, v36, "Wrote %s to %s in UserDefaults", (uint8_t *)v37, 0x16u);
      uint64_t v42 = v51;
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v42, -1, -1);
      MEMORY[0x25A2A5190](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
      return v41(v56, v18);
    }
    else
    {

      uint64_t v49 = v55;
      v55(v31, v18);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
      return v49(v56, v18);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v44 = type metadata accessor for SpeakerIdSamplingWorker();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v3 + *(int *)(v44 + 20), v6);
    uint64_t v45 = sub_2562E3410();
    os_log_type_t v46 = sub_2562E37F0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v61 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v60 = sub_256229738(0xD000000000000022, 0x80000002562EDC20, &v61);
      sub_2562E38F0();
      _os_log_impl(&dword_256226000, v45, v46, "SpeakerId Sampling Plugin run was not successful. Not updating  %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v48, -1, -1);
      MEMORY[0x25A2A5190](v47, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t SpeakerIdSamplingTaskExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SpeakerIdSamplingTaskExecutor.init()()
{
  return v0;
}

uint64_t sub_256298088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_2562E3430();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25629814C, 0, 0);
}

uint64_t sub_25629814C()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingWorker: Call executeSpeakerIdSelection", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)v0[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v9 = swift_task_alloc();
  v0[10] = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  type metadata accessor for SpeakerIdSelectionPlugin();
  swift_allocObject();
  v0[2] = SpeakerIdSelectionPlugin.init(defaults:logger:)(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F55268);
  swift_allocObject();
  uint64_t v11 = sub_2562E31C0();
  v0[11] = v11;
  if (v11)
  {
    uint64_t v12 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v13 = swift_task_alloc();
    v0[12] = v13;
    uint64_t v14 = sub_2562E3180();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[13] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_256248210;
    return MEMORY[0x270F8C5F8](v9, v13);
  }
  else
  {
    uint64_t v17 = v0[3];
    uint64_t v18 = sub_2562E31D0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v9, 1, 1, v18);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, *MEMORY[0x263F8AF00], v18);
    sub_25622F3C4(v9, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_256298504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_2562E3430();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562985C8, 0, 0);
}

uint64_t sub_2562985C8()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingWorker: Call executeSpeakerIdSampling", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)v0[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v9 = swift_task_alloc();
  v0[10] = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  type metadata accessor for SpeakerIdSamplingPlugin();
  swift_allocObject();
  v0[2] = SpeakerIdSamplingPlugin.init(defaults:logger:)(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F55278);
  swift_allocObject();
  uint64_t v11 = sub_2562E31C0();
  v0[11] = v11;
  if (v11)
  {
    uint64_t v12 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v13 = swift_task_alloc();
    v0[12] = v13;
    uint64_t v14 = sub_2562E3180();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[13] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_256298980;
    return MEMORY[0x270F8C5F8](v9, v13);
  }
  else
  {
    uint64_t v17 = v0[3];
    uint64_t v18 = sub_2562E31D0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v9, 1, 1, v18);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, *MEMORY[0x263F8AF00], v18);
    sub_25622F3C4(v9, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_256298980()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  sub_25622F3C4(*(void *)(v2 + 96), &qword_269F54240);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_256299884;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_256299880;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_256298AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_2562E3430();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_256298BA8, 0, 0);
}

uint64_t sub_256298BA8()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingWorker: Call executeSpeakerIdManifest", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v8 = *(void **)(v0 + 32);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 80) = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  type metadata accessor for SpeakerIdManifestPlugin();
  swift_allocObject();
  uint64_t v10 = sub_256292A58(v8, v4);

  *(void *)(v0 + 16) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55288);
  swift_allocObject();
  uint64_t v12 = sub_2562E31C0();
  *(void *)(v0 + 88) = v12;
  if (v12)
  {
    uint64_t v13 = *(void *)(v0 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 96) = v14;
    uint64_t v15 = sub_2562E3180();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v13, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_256248210;
    return MEMORY[0x270F8C5F8](v9, v14);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 24);
    uint64_t v19 = sub_2562E31D0();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v9, 1, 1, v19);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v18, *MEMORY[0x263F8AF00], v19);
    sub_25622F3C4(v9, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t SpeakerIdSamplingTaskExecutor.deinit()
{
  return v0;
}

uint64_t SpeakerIdSamplingTaskExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_256298F84()
{
  unint64_t result = qword_269F55290;
  if (!qword_269F55290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55290);
  }
  return result;
}

unint64_t sub_256298FE0()
{
  unint64_t result = qword_269F55298;
  if (!qword_269F55298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55298);
  }
  return result;
}

unint64_t sub_256299038()
{
  unint64_t result = qword_269F552A0;
  if (!qword_269F552A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F552A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SpeakerIdWorkerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256299158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakerIdWorkerError()
{
  return &type metadata for SpeakerIdWorkerError;
}

uint64_t getEnumTagSinglePayload for SpeakerIdSamplingWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2562991A4);
}

uint64_t sub_2562991A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2562E3430();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SpeakerIdSamplingWorker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2562992B0);
}

uint64_t sub_2562992B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2562E3060();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2562E3430();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *storeEnumTagSinglePayload for SpeakerIdSamplingWorker.Subtask(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256299480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakerIdSamplingWorker.Subtask()
{
  return &type metadata for SpeakerIdSamplingWorker.Subtask;
}

uint64_t type metadata accessor for SpeakerIdSamplingTaskExecutor()
{
  return self;
}

uint64_t method lookup function for SpeakerIdSamplingTaskExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingTaskExecutor);
}

uint64_t dispatch thunk of SpeakerIdSamplingTaskExecutor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SpeakerIdSamplingTaskExecutor.executeSpeakerIdSelection(defaults:pluginContext:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 88)
                                                                   + **(int **)(*(void *)v4 + 88));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25623E4D4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SpeakerIdSamplingTaskExecutor.executeSpeakerIdSampling(defaults:pluginContext:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 96)
                                                                   + **(int **)(*(void *)v4 + 96));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25623E4D4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SpeakerIdSamplingTaskExecutor.executeSpeakerIdManifest(defaults:pluginContext:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 104)
                                                                   + **(int **)(*(void *)v4 + 104));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25622844C;
  return v12(a1, a2, a3, a4);
}

uint64_t SpeakerIdSelectionPlugin.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SpeakerIdSelectionPlugin.init(defaults:logger:)(a1, a2);
  return v4;
}

uint64_t SpeakerIdSelectionPlugin.init(defaults:logger:)(void *a1, uint64_t a2)
{
  id v36 = a1;
  uint64_t v4 = sub_2562E3430();
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v7;
  uint64_t v38 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v9(v2 + OBJC_IVAR____TtC16MetricsFramework24SpeakerIdSelectionPlugin_logger, a2, v4);
  uint64_t v39 = a2;
  v9((uint64_t)v6, a2, v4);
  uint64_t v35 = v9;
  type metadata accessor for SpeakerIdSelectionDataProvider();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v33 = v8 + 32;
  uint64_t v34 = v11;
  v11(v10 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSelectionDataProvider_logger, v6, v4);
  *(void *)(v2 + OBJC_IVAR____TtC16MetricsFramework24SpeakerIdSelectionPlugin_dataProvider) = v10;
  uint64_t v37 = v2;
  v9((uint64_t)v6, a2, v4);
  uint64_t v12 = type metadata accessor for SamplingUtils();
  type metadata accessor for SpeakerIdSelectionCalculator();
  uint64_t v13 = swift_allocObject();
  id v14 = v36;
  id v36 = v14;
  sub_2562E3020();
  *(void *)(v13 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_defaults) = v14;
  uint64_t v15 = v34;
  v34(v13 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_logger, v6, v4);
  uint64_t v16 = (uint64_t *)(v13 + OBJC_IVAR____TtC16MetricsFramework28SpeakerIdSelectionCalculator_samplingUtils);
  *uint64_t v16 = v12;
  v16[1] = (uint64_t)&protocol witness table for SamplingUtils;
  *(void *)(v2 + OBJC_IVAR____TtC16MetricsFramework24SpeakerIdSelectionPlugin_calculator) = v13;
  id v17 = objc_msgSend((id)BiomeLibrary(), sel_Siri);
  swift_unknownObjectRelease();
  id v18 = objc_msgSend(v17, sel_OnDeviceAnalytics);
  swift_unknownObjectRelease();
  id v19 = objc_msgSend(v18, sel_SpeakerIdSampling);
  swift_unknownObjectRelease();
  id v20 = objc_msgSend(v19, sel_source);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55130);
  swift_allocObject();
  uint64_t v21 = sub_2562E30C0();
  uint64_t v22 = v39;
  int v23 = (void (*)(char *, uint64_t, uint64_t))v35;
  v35((uint64_t)v6, v39, v4);
  type metadata accessor for SpeakerIdSelectionBiomeReporter();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v21;
  v15(v24 + OBJC_IVAR____TtC16MetricsFramework31SpeakerIdSelectionBiomeReporter_logger, v6, v4);
  v23(v6, v22, v4);
  type metadata accessor for SELFReportingService();
  id v25 = (void *)swift_allocObject();
  uint64_t v26 = self;
  swift_retain();
  v25[3] = objc_msgSend(v26, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  id v27 = objc_msgSend(self, sel_sharedAnalytics);
  id v28 = objc_msgSend(v27, sel_defaultMessageStream);

  v25[2] = v28;
  v25[4] = 0xD000000000000027;
  v25[5] = 0x80000002562EBB60;
  type metadata accessor for SpeakerIdSelectionSELFReporter();
  uint64_t v29 = swift_allocObject();
  v15(v29 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSelectionSELFReporter_logger, v6, v4);
  *(void *)(v29 + 16) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53EA8);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_2562E5700;
  *(void *)(v30 + 32) = v29;
  *(void *)(v30 + 40) = v24;
  uint64_t v40 = v30;
  sub_2562E3720();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F552E8);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v31 = sub_2562E30E0();
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v4);
  uint64_t result = v37;
  *(void *)(v37 + OBJC_IVAR____TtC16MetricsFramework24SpeakerIdSelectionPlugin_reporter) = v31;
  return result;
}

uint64_t sub_256299DE0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_256299E00, 0, 0);
}

uint64_t sub_256299E00()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SpeakerIdSelectionDataDataRecord", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_256299EEC(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 40) = v1;
  *(void *)(v2 + 48) = v3;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(a1 + 1);
  return MEMORY[0x270FA2498](sub_256299F18, 0, 0);
}

uint64_t sub_256299F18()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 48);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 56);
  uint64_t v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F395C0] + MEMORY[0x263F395C0]);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_25623D940;
  return v3(v0 + 16);
}

uint64_t sub_256299FE0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25629A000, 0, 0);
}

uint64_t sub_25629A000()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_25623DB50;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_25622F814(v2);
}

uint64_t SpeakerIdSelectionPlugin.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework24SpeakerIdSelectionPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SpeakerIdSelectionPlugin.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework24SpeakerIdSelectionPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25629A208()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_256299E00, 0, 0);
}

uint64_t sub_25629A22C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25629A000, 0, 0);
}

uint64_t sub_25629A250(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 40) = *v1;
  *(void *)(v2 + 48) = v3;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(a1 + 1);
  return MEMORY[0x270FA2498](sub_256299F18, 0, 0);
}

uint64_t sub_25629A280()
{
  return sub_25629A368(&qword_269F55310);
}

uint64_t type metadata accessor for SpeakerIdSelectionPlugin()
{
  uint64_t result = qword_269F55340;
  if (!qword_269F55340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25629A300()
{
  return sub_25629A368(&qword_269F55318);
}

uint64_t sub_25629A334()
{
  return sub_25629A368(qword_269F55320);
}

uint64_t sub_25629A368(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SpeakerIdSelectionPlugin();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25629A3B0()
{
  return type metadata accessor for SpeakerIdSelectionPlugin();
}

uint64_t method lookup function for SpeakerIdSelectionPlugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSelectionPlugin);
}

uint64_t dispatch thunk of SpeakerIdSelectionPlugin.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SpeakerIdSelectionPlugin.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SpeakerIdSelectionPlugin.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of SpeakerIdSelectionPlugin.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_25629A714()
{
  uint64_t v0 = sub_2562E3430();
  __swift_allocate_value_buffer(v0, qword_269F55368);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F55368);
  return sub_2562E3420();
}

unint64_t static ExperimentMetricsWorker.suiteName.getter()
{
  return 0xD000000000000025;
}

unint64_t static ExperimentMetricsWorker.includeCurrentDateForAggregation.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t ExperimentMetricsWorker.doWork(metricsExecutor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  uint64_t v4 = sub_2562E3780();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25629A898, 0, 0);
}

uint64_t sub_25629A898()
{
  uint64_t v89 = v0;
  if (qword_269F53B08 != -1) {
    swift_once();
  }
  uint64_t v1 = (id *)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v3 = sub_2562E3430();
  __swift_project_value_buffer(v3, (uint64_t)qword_269F55368);
  id v4 = v2;
  uint64_t v5 = sub_2562E3410();
  os_log_type_t v6 = sub_2562E37E0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 176);
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v88[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = sub_2562E3200();
    *(void *)(v0 + 152) = sub_256229738(v11, v12, v88);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = sub_2562E3210();
    *(void *)(v0 + 112) = sub_256229738(v13, v14, v88);
    uint64_t v1 = (id *)(v0 + 120);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_256226000, v5, v6, "TaskId: %s, TaskName: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v10, -1, -1);
    MEMORY[0x25A2A5190](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = *(void **)(v0 + 160);
  *uint64_t v15 = 0;
  uint64_t v16 = *MEMORY[0x263F8AF08];
  *(_DWORD *)(v0 + 296) = v16;
  uint64_t v17 = sub_2562E31D0();
  *(void *)(v0 + 208) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v0 + 216) = v18;
  id v19 = *(void (**)(void *, uint64_t, uint64_t))(v18 + 104);
  *(void *)(v0 + 224) = v19;
  *(void *)(v0 + 232) = (v18 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v19(v15, v16, v17);
  uint64_t v20 = sub_2562E3200();
  unint64_t v22 = v21;
  uint64_t v23 = sub_2562E3210();
  sub_25629C484(v20, v22, v23, v24);
  uint64_t v87 = v1;
  uint64_t v33 = *(void **)(v0 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_2562E3180();
  *(void *)(v0 + 264) = v34;
  uint64_t v85 = *(void *)(v34 - 8);
  *(void *)(v0 + 272) = v85;
  uint64_t v35 = swift_task_alloc();
  *(void *)(v0 + 280) = v35;
  v88[0] = sub_2562E3210();
  v88[1] = v36;
  sub_2562E3640();
  id v37 = objc_allocWithZone(MEMORY[0x263F80E10]);
  uint64_t v38 = (void *)sub_2562E3550();
  uint64_t v39 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v38, 1, v39);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54338);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
  *(void *)(inited + 32) = 0xD00000000000001CLL;
  *(void *)(inited + 40) = 0x80000002562EAC10;
  *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = 60000;
  sub_256246C4C(inited);
  id v41 = v33;
  sub_2562E3170();
  id v42 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v43 = (void *)sub_2562E3550();
  id v44 = objc_msgSend(v42, sel_initWithSuiteName_, v43);
  *(void *)(v0 + 288) = v44;

  if (v44)
  {
    uint64_t v45 = *(void *)(v0 + 168);
    uint64_t v46 = swift_task_alloc();
    *(void *)(v0 + 240) = v46;
    uint64_t v86 = (uint64_t (*)(uint64_t, id, uint64_t))(*(void *)(*(void *)v45 + 88)
                                                       + **(int **)(*(void *)v45 + 88));
    uint64_t v47 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v47;
    *uint64_t v47 = v0;
    v47[1] = sub_25629B564;
    return v86(v46, v44, v35);
  }
  uint64_t v55 = sub_2562E3410();
  uint64_t v56 = sub_2562E3800();
  if (os_log_type_enabled(v55, (os_log_type_t)v56))
  {
    char v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v57 = 0;
    _os_log_impl(&dword_256226000, v55, (os_log_type_t)v56, "Can't get user defaults initialized", v57, 2u);
    MEMORY[0x25A2A5190](v57, -1, -1);
  }

  sub_256246AD8();
  id v31 = (id)swift_allocError();
  *uint64_t v58 = 5;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v35, v34);
  swift_task_dealloc();
  id v25 = (id *)(v0 + 144);
  *(void *)(v0 + 144) = v31;
  uint64_t v26 = sub_2562E31A0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = swift_task_alloc();
  id v29 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v28, v26);
    if (MEMORY[0x263F8AEE8] && v30 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v31 = *v25;
      char v32 = 3;
LABEL_42:

      uint64_t v76 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 224);
      uint64_t v77 = *(void *)(v0 + 208);
      uint64_t v78 = *(void *)(v0 + 216);
      uint64_t v79 = *(unsigned int *)(v0 + 296);
      uint64_t v80 = *(void *)(v0 + 160);
      id v81 = (void *)swift_task_alloc();
      sub_256246AD8();
      uint64_t v82 = swift_allocError();
      *uint64_t v83 = v32;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v80, v77);
      *id v81 = v82;
      v76(v81, v79, v77);
      (*(void (**)(uint64_t, void *, uint64_t))(v78 + 32))(v80, v81, v77);
      swift_task_dealloc();
      goto LABEL_43;
    }
    if (MEMORY[0x263F8AEF0] && v30 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v31 = *v25;
      char v32 = 4;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  }
  uint64_t v49 = (id *)(v0 + 96);
  swift_task_dealloc();

  *(void *)(v0 + 96) = v31;
  uint64_t v50 = sub_2562E3320();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = swift_task_alloc();
  id v53 = v31;
  if (swift_dynamicCast())
  {
    int v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 88))(v52, v50);
    if (MEMORY[0x263F396A0] && v54 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v31 = *v49;
      char v32 = 6;
      goto LABEL_42;
    }
    if (MEMORY[0x263F396A8] && v54 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v31 = *v49;
      char v32 = 7;
      goto LABEL_42;
    }
    if (MEMORY[0x263F396B0] && v54 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v31 = *v49;
      char v32 = 8;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v50);
  }
  uint64_t v59 = (id *)(v0 + 104);
  swift_task_dealloc();

  *(void *)(v0 + 104) = v31;
  id v60 = v31;
  if (swift_dynamicCast())
  {

    char v32 = *(unsigned char *)(v0 + 300);
    id v31 = *v59;
    goto LABEL_42;
  }

  id *v87 = v31;
  uint64_t v61 = sub_2562E31E0();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = swift_task_alloc();
  id v64 = v31;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v61);
    swift_task_dealloc();
    id v31 = *v87;
    char v32 = 2;
    goto LABEL_42;
  }
  swift_task_dealloc();

  *(void *)(v0 + 128) = v31;
  uint64_t v65 = sub_2562E3190();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = swift_task_alloc();
  id v68 = v31;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v65);
    swift_task_dealloc();
    char v32 = 0;
    id v31 = *(id *)(v0 + 128);
    goto LABEL_42;
  }
  swift_task_dealloc();

  *(void *)(v0 + 136) = v31;
  id v69 = v31;
  if (!swift_dynamicCast())
  {

    char v32 = 1;
    goto LABEL_42;
  }
  id v70 = *(void (**)(uint64_t, void, uint64_t))(v0 + 224);
  uint64_t v71 = *(void *)(v0 + 208);
  uint64_t v73 = *(void *)(v0 + 192);
  uint64_t v72 = *(void *)(v0 + 200);
  uint64_t v74 = *(void *)(v0 + 184);
  uint64_t v75 = *(void *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 216) + 8))(v75, v71);

  v70(v75, *MEMORY[0x263F8AF18], v71);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);

LABEL_43:
  swift_task_dealloc();
  uint64_t v84 = *(uint64_t (**)(void))(v0 + 8);
  return v84();
}

uint64_t sub_25629B564()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25629BDCC;
  }
  else {
    uint64_t v2 = sub_25629B678;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25629B678()
{
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v2, v3);
  swift_task_dealloc();
  uint64_t v6 = sub_2562E3200();
  unint64_t v8 = v7;
  uint64_t v9 = sub_2562E3210();
  sub_25629C484(v6, v8, v9, v10);
  uint64_t v11 = *(void **)(v0 + 288);
  (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  if (v1)
  {
    unint64_t v12 = (id *)(v0 + 144);
    *(void *)(v0 + 144) = v1;
    uint64_t v13 = sub_2562E31A0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = swift_task_alloc();
    id v16 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v15, v13);
      if (MEMORY[0x263F8AEE8] && v17 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v18 = 3;
LABEL_30:
        uint64_t v43 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 224);
        uint64_t v44 = *(void *)(v0 + 208);
        uint64_t v45 = *(void *)(v0 + 216);
        uint64_t v46 = *(unsigned int *)(v0 + 296);
        uint64_t v47 = *(void *)(v0 + 160);
        uint64_t v48 = (void *)swift_task_alloc();
        sub_256246AD8();
        uint64_t v49 = swift_allocError();
        *uint64_t v50 = v18;
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v44);
        void *v48 = v49;
        v43(v48, v46, v44);
        (*(void (**)(uint64_t, void *, uint64_t))(v45 + 32))(v47, v48, v44);
        swift_task_dealloc();
        goto LABEL_31;
      }
      if (MEMORY[0x263F8AEF0] && v17 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v18 = 4;
        goto LABEL_30;
      }
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
    }
    id v19 = (id *)(v0 + 96);
    swift_task_dealloc();

    *(void *)(v0 + 96) = v1;
    uint64_t v20 = sub_2562E3320();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = swift_task_alloc();
    id v23 = v1;
    if (swift_dynamicCast())
    {
      int v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v22, v20);
      if (MEMORY[0x263F396A0] && v24 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v18 = 6;
        goto LABEL_30;
      }
      if (MEMORY[0x263F396A8] && v24 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v18 = 7;
        goto LABEL_30;
      }
      if (MEMORY[0x263F396B0] && v24 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v18 = 8;
        goto LABEL_30;
      }
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
    }
    id v25 = (id *)(v0 + 104);
    swift_task_dealloc();

    *(void *)(v0 + 104) = v1;
    id v26 = v1;
    if (swift_dynamicCast())
    {

      char v18 = *(unsigned char *)(v0 + 300);
    }
    else
    {
      uint64_t v27 = (id *)(v0 + 120);

      *(void *)(v0 + 120) = v1;
      uint64_t v28 = sub_2562E31E0();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = swift_task_alloc();
      id v31 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
        swift_task_dealloc();

        char v18 = 2;
      }
      else
      {
        swift_task_dealloc();

        *(void *)(v0 + 128) = v1;
        uint64_t v32 = sub_2562E3190();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = swift_task_alloc();
        id v35 = v1;
        if (swift_dynamicCast())
        {

          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
          swift_task_dealloc();

          char v18 = 0;
        }
        else
        {
          swift_task_dealloc();

          *(void *)(v0 + 136) = v1;
          id v36 = v1;
          if (swift_dynamicCast())
          {
            id v37 = *(void (**)(uint64_t, void, uint64_t))(v0 + 224);
            uint64_t v38 = *(void *)(v0 + 208);
            uint64_t v40 = *(void *)(v0 + 192);
            uint64_t v39 = *(void *)(v0 + 200);
            uint64_t v41 = *(void *)(v0 + 184);
            uint64_t v42 = *(void *)(v0 + 160);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 216) + 8))(v42, v38);

            v37(v42, *MEMORY[0x263F8AF18], v38);
            (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);

            goto LABEL_31;
          }

          char v18 = 1;
        }
      }
    }
    goto LABEL_30;
  }
LABEL_31:
  swift_task_dealloc();
  uint64_t v51 = *(uint64_t (**)(void))(v0 + 8);
  return v51();
}

uint64_t sub_25629BDCC()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 272);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = *(id *)(v0 + 256);
  *(void *)(v0 + 144) = v4;
  uint64_t v5 = (id *)(v0 + 144);
  uint64_t v6 = sub_2562E31A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_task_alloc();
  id v9 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v8, v6);
    if (MEMORY[0x263F8AEE8] && v10 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v4 = *v5;
      char v11 = 3;
      goto LABEL_29;
    }
    if (MEMORY[0x263F8AEF0] && v10 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v4 = *v5;
      char v11 = 4;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  }
  unint64_t v12 = (id *)(v0 + 96);
  swift_task_dealloc();

  *(void *)(v0 + 96) = v4;
  uint64_t v13 = sub_2562E3320();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = swift_task_alloc();
  id v16 = v4;
  if (swift_dynamicCast())
  {
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v15, v13);
    if (MEMORY[0x263F396A0] && v17 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v4 = *v12;
      char v11 = 6;
      goto LABEL_29;
    }
    if (MEMORY[0x263F396A8] && v17 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v4 = *v12;
      char v11 = 7;
      goto LABEL_29;
    }
    if (MEMORY[0x263F396B0] && v17 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v4 = *v12;
      char v11 = 8;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
  }
  char v18 = (id *)(v0 + 104);
  swift_task_dealloc();

  *(void *)(v0 + 104) = v4;
  id v19 = v4;
  if (swift_dynamicCast())
  {

    char v11 = *(unsigned char *)(v0 + 300);
    id v4 = *v18;
  }
  else
  {
    uint64_t v20 = (id *)(v0 + 120);

    *(void *)(v0 + 120) = v4;
    uint64_t v21 = sub_2562E31E0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = swift_task_alloc();
    id v24 = v4;
    if (swift_dynamicCast())
    {

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
      swift_task_dealloc();
      id v4 = *v20;
      char v11 = 2;
    }
    else
    {
      swift_task_dealloc();

      *(void *)(v0 + 128) = v4;
      uint64_t v25 = sub_2562E3190();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = swift_task_alloc();
      id v28 = v4;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
        swift_task_dealloc();
        char v11 = 0;
        id v4 = *(id *)(v0 + 128);
      }
      else
      {
        swift_task_dealloc();

        *(void *)(v0 + 136) = v4;
        id v29 = v4;
        if (swift_dynamicCast())
        {
          uint64_t v30 = *(void (**)(uint64_t, void, uint64_t))(v0 + 224);
          uint64_t v31 = *(void *)(v0 + 208);
          uint64_t v33 = *(void *)(v0 + 192);
          uint64_t v32 = *(void *)(v0 + 200);
          uint64_t v34 = *(void *)(v0 + 184);
          uint64_t v35 = *(void *)(v0 + 160);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 216) + 8))(v35, v31);

          v30(v35, *MEMORY[0x263F8AF18], v31);
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);

          goto LABEL_30;
        }

        char v11 = 1;
      }
    }
  }
LABEL_29:

  id v36 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 208);
  uint64_t v38 = *(void *)(v0 + 216);
  uint64_t v39 = *(unsigned int *)(v0 + 296);
  uint64_t v40 = *(void *)(v0 + 160);
  uint64_t v41 = (void *)swift_task_alloc();
  sub_256246AD8();
  uint64_t v42 = swift_allocError();
  *uint64_t v43 = v11;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
  *uint64_t v41 = v42;
  v36(v41, v39, v37);
  (*(void (**)(uint64_t, void *, uint64_t))(v38 + 32))(v40, v41, v37);
  swift_task_dealloc();
LABEL_30:
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_25629C484(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = sub_2562E37B0();
  if (result)
  {
    if (qword_269F53B08 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2562E3430();
    __swift_project_value_buffer(v9, (uint64_t)qword_269F55368);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    int v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E37E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_256229738(a1, a2, &v14);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_256229738(a3, a4, &v14);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v10, v11, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v13, -1, -1);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_2562E3780();
    sub_256248F9C();
    swift_allocError();
    sub_2562E3480();
    return swift_willThrow();
  }
  return result;
}

uint64_t ExperimentMetricsExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ExperimentMetricsExecutor.init()()
{
  return v0;
}

uint64_t sub_25629C6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_2562E3430();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25629C7BC, 0, 0);
}

uint64_t sub_25629C7BC()
{
  uint64_t v1 = (void *)v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v2 = swift_task_alloc();
  v0[9] = v2;
  uint64_t v3 = qword_269F53B08;
  id v4 = v1;
  if (v3 == -1)
  {
    uint64_t v5 = v4;
  }
  else
  {
    swift_once();
    uint64_t v5 = (void *)v0[4];
  }
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[6];
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_269F55368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  type metadata accessor for SiriDeviceExperimentMetrics();
  swift_allocObject();
  v0[2] = SiriDeviceExperimentMetrics.init(defaults:logger:)(v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F55390);
  swift_allocObject();
  uint64_t v11 = sub_2562E31C0();
  v0[10] = v11;
  if (v11)
  {
    uint64_t v12 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v13 = swift_task_alloc();
    v0[11] = v13;
    uint64_t v14 = sub_2562E3180();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    id v16 = (void *)swift_task_alloc();
    v0[12] = v16;
    *id v16 = v0;
    v16[1] = sub_25624ECA4;
    return MEMORY[0x270F8C5F8](v2, v13);
  }
  else
  {
    uint64_t v17 = v0[3];
    uint64_t v18 = sub_2562E31D0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v2, 1, 1, v18);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, *MEMORY[0x263F8AF00], v18);
    sub_25622F3C4(v2, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t ExperimentMetricsExecutor.deinit()
{
  return v0;
}

uint64_t ExperimentMetricsExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for ExperimentMetricsWorker()
{
  return &type metadata for ExperimentMetricsWorker;
}

uint64_t type metadata accessor for ExperimentMetricsExecutor()
{
  return self;
}

uint64_t method lookup function for ExperimentMetricsExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExperimentMetricsExecutor);
}

uint64_t dispatch thunk of ExperimentMetricsExecutor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ExperimentMetricsExecutor.executeSiriDeviceExperimentMetrics(defaults:pluginContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 88)
                                                          + **(int **)(*(void *)v3 + 88));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_25622844C;
  return v10(a1, a2, a3);
}

uint64_t sub_25629CCE8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000002562EAFF0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000011;
    }
    else {
      unint64_t v5 = 0xD000000000000019;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000002562EB010;
    }
    else {
      unint64_t v6 = 0x80000002562EB030;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000012;
  unint64_t v6 = 0x80000002562EAFF0;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000011;
    }
    else {
      unint64_t v2 = 0xD000000000000019;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x80000002562EB010;
    }
    else {
      unint64_t v3 = 0x80000002562EB030;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2562E3C90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25629CDE0(uint64_t a1, uint64_t a2)
{
  return sub_25629CFD4(a1, a2, (uint64_t (*)(void))SpeakerIdWorkerError.rawValue.getter);
}

uint64_t sub_25629CDF8(uint64_t a1, uint64_t a2)
{
  return sub_25629CFD4(a1, a2, SiriReponseCategory.rawValue.getter);
}

uint64_t sub_25629CE10(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000018;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x80000002562EAE10;
  }
  else {
    unint64_t v4 = 0x80000002562EAE30;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000018;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0x80000002562EAE30;
  }
  else {
    unint64_t v6 = 0x80000002562EAE10;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2562E3C90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25629CEBC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x80000002562EB050;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000012;
    }
    else {
      unint64_t v4 = 0xD000000000000019;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x80000002562EB070;
    }
    else {
      unint64_t v5 = 0x80000002562EB090;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000012;
      }
      else {
        unint64_t v7 = 0xD000000000000019;
      }
      if (v6 == 1) {
        unint64_t v2 = 0x80000002562EB070;
      }
      else {
        unint64_t v2 = 0x80000002562EB090;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD000000000000016;
    unint64_t v5 = 0x80000002562EB050;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD000000000000016)
  {
LABEL_21:
    char v8 = sub_2562E3C90();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25629CFBC(uint64_t a1, uint64_t a2)
{
  return sub_25629CFD4(a1, a2, (uint64_t (*)(void))SiriMetricsWorkerError.rawValue.getter);
}

uint64_t sub_25629CFD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_2562E3C90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_25629D078()
{
  return sub_2562E3D90();
}

uint64_t sub_25629D100()
{
  return sub_2562E3D90();
}

uint64_t sub_25629D1A8()
{
  return sub_2562E3D90();
}

uint64_t sub_25629D250()
{
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25629D2E0()
{
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25629D370()
{
  return sub_2562E3D90();
}

uint64_t sub_25629D414()
{
  return sub_2562E3D90();
}

uint64_t sub_25629D498()
{
  return sub_2562E3D90();
}

MetricsFramework::AssetMetricsWorkerError_optional __swiftcall AssetMetricsWorkerError.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_2562E3CB0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t AssetMetricsWorkerError.rawValue.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7463657078656E75;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 8:
    case 0xB:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 9:
      unint64_t result = 0x4E656C69466C7173;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0x72576664556C7173;
      break;
    case 0xD:
      unint64_t result = 0x78456664556C7173;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x74754F64656D6974;
      break;
  }
  return result;
}

uint64_t sub_25629D7BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25629CFD4(*a1, *a2, (uint64_t (*)(void))AssetMetricsWorkerError.rawValue.getter) & 1;
}

uint64_t sub_25629D7F4()
{
  return sub_2562E3D90();
}

uint64_t sub_25629D85C()
{
  AssetMetricsWorkerError.rawValue.getter();
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25629D8C0()
{
  return sub_2562E3D90();
}

MetricsFramework::AssetMetricsWorkerError_optional sub_25629D924(Swift::String *a1)
{
  return AssetMetricsWorkerError.init(rawValue:)(*a1);
}

unint64_t sub_25629D930@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AssetMetricsWorkerError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t static AssetMetricsWorker.assetMetricsPluginLastRunDateKey.getter()
{
  return 0xD00000000000001DLL;
}

MetricsFramework::AssetMetricsWorker::Subtask_optional __swiftcall AssetMetricsWorker.Subtask.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_2562E3B20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t AssetMetricsWorker.Subtask.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000019;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_25629DA30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25629CEBC(*a1, *a2);
}

uint64_t sub_25629DA3C()
{
  return sub_25629D1A8();
}

uint64_t sub_25629DA44()
{
  return sub_25629D2E0();
}

uint64_t sub_25629DA4C()
{
  return sub_25629D370();
}

MetricsFramework::AssetMetricsWorker::Subtask_optional sub_25629DA54(Swift::String *a1)
{
  return AssetMetricsWorker.Subtask.init(rawValue:)(*a1);
}

unint64_t sub_25629DA60@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AssetMetricsWorker.Subtask.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t static AssetMetricsWorker.includeCurrentDateForAggregation.getter()
{
  return 0xD000000000000027;
}

uint64_t AssetMetricsWorker.init(logger:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2562E3020();
  uint64_t v4 = a2 + *(int *)(type metadata accessor for AssetMetricsWorker() + 20);
  uint64_t v5 = sub_2562E3430();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a1, v5);
}

uint64_t type metadata accessor for AssetMetricsWorker()
{
  uint64_t result = qword_269F553F0;
  if (!qword_269F553F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssetMetricsWorker.doWork(executor:context:durationThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_2562E3780();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_2562E3430();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25629DCA0, 0, 0);
}

uint64_t sub_25629DCA0()
{
  uint64_t v122 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v4 = *(void **)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(int *)(type metadata accessor for AssetMetricsWorker() + 20);
  *(_DWORD *)(v0 + 432) = v5;
  uint64_t v117 = v3 + v5;
  uint64_t v115 = *(void (**)(uint64_t))(v2 + 16);
  v115(v1);
  id v6 = v4;
  uint64_t v7 = sub_2562E3410();
  os_log_type_t v8 = sub_2562E37E0();
  uint64_t v118 = (id *)(v0 + 48);
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 144);
    uint64_t v111 = *(void *)(v0 + 136);
    uint64_t v113 = *(void *)(v0 + 160);
    int v10 = *(void **)(v0 + 96);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v120 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v13 = sub_2562E3200();
    *(void *)(v0 + 72) = sub_256229738(v13, v14, &v120);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v15 = sub_2562E3210();
    *(void *)(v0 + 40) = sub_256229738(v15, v16, &v120);
    sub_2562E38F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_256226000, v7, v8, "TaskId: %s, TaskName: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v12, -1, -1);
    MEMORY[0x25A2A5190](v11, -1, -1);

    uint64_t v17 = v113;
    id v114 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v114(v17, v111);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 144);
    uint64_t v21 = *(void **)(v0 + 96);

    id v114 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v114(v18, v19);
  }
  uint64_t v22 = *(void **)(v0 + 80);
  void *v22 = 0;
  uint64_t v23 = *MEMORY[0x263F8AF08];
  *(_DWORD *)(v0 + 436) = v23;
  uint64_t v24 = sub_2562E31D0();
  *(void *)(v0 + 168) = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  *(void *)(v0 + 176) = v25;
  uint64_t v26 = *(void (**)(void *, uint64_t, uint64_t))(v25 + 104);
  *(void *)(v0 + 184) = v26;
  *(void *)(v0 + 192) = (v25 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v26(v22, v23, v24);
  id v27 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  id v28 = (void *)sub_2562E3550();
  id v29 = objc_msgSend(v27, sel_initWithSuiteName_, v28);
  *(void *)(v0 + 200) = v29;

  uint64_t v30 = sub_2562E3200();
  unint64_t v32 = v31;
  uint64_t v33 = sub_2562E3210();
  sub_2562A193C(v30, v32, v33, v34);
  uint64_t v112 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v120 = sub_2562E3210();
  uint64_t v121 = v35;
  sub_2562E3640();
  id v36 = objc_allocWithZone(MEMORY[0x263F80E10]);
  uint64_t v37 = (void *)sub_2562E3550();
  uint64_t v38 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v36, sel_initWithBMLTTaskId_deploymentId_treatmentId_, v37, 1, v38);
  *(void *)(v0 + 208) = v39;

  unint64_t v40 = sub_256246B38((uint64_t)&unk_2704CB700);
  *(void *)(v0 + 216) = v40;
  if (v29)
  {
    id v41 = v29;
    uint64_t v42 = sub_2562E3200();
    unint64_t v44 = v43;
    uint64_t v45 = sub_2562E3210();
    sub_2562A193C(v42, v44, v45, v46);
    uint64_t v79 = *(void *)(v0 + 88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2562E3200();
    id v80 = v41;
    uint64_t v120 = sub_2562E3210();
    uint64_t v121 = v81;
    swift_bridgeObjectRetain();
    sub_2562E3640();
    swift_bridgeObjectRetain();
    sub_2562E3640();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v82 = (objc_class *)sub_2562E3220();
    *(void *)(v0 + 224) = v82;
    id v83 = objc_allocWithZone(v82);
    uint64_t v84 = (void *)sub_2562E31F0();
    *(void *)(v0 + 232) = v84;
    uint64_t v85 = sub_2562E3180();
    *(void *)(v0 + 240) = v85;
    uint64_t v86 = *(void *)(v85 - 8);
    *(void *)(v0 + 248) = v86;
    *(void *)(v0 + 256) = *(void *)(v86 + 64);
    uint64_t v87 = swift_task_alloc();
    *(void *)(v0 + 264) = v87;
    id v88 = v84;
    id v89 = v39;
    sub_25624709C(v40);
    sub_2562E3170();
    *(void *)(v0 + 272) = *(void *)(v112 + 64);
    uint64_t v90 = swift_task_alloc();
    *(void *)(v0 + 280) = v90;
    char v116 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, unint64_t, unint64_t))(*(void *)(*(void *)v79 + 88) + **(int **)(*(void *)v79 + 88));
    int v91 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v91;
    void *v91 = v0;
    v91[1] = sub_25629EB20;
    return v116(v90, v80, v87, v117, 0xD00000000000002CLL, 0x80000002562EDEB0);
  }
  uint64_t v47 = *(void *)(v0 + 152);
  uint64_t v48 = *(void *)(v0 + 136);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t))v115)(v47, v117, v48);
  uint64_t v49 = sub_2562E3410();
  os_log_type_t v50 = sub_2562E3800();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&dword_256226000, v49, v50, "Can't get user defaults initialized", v51, 2u);
    MEMORY[0x25A2A5190](v51, -1, -1);
  }
  uint64_t v52 = *(void *)(v0 + 152);
  uint64_t v53 = *(void *)(v0 + 136);

  v114(v52, v53);
  sub_25622CE3C();
  id v54 = (id)swift_allocError();
  *uint64_t v55 = 5;
  swift_willThrow();

  uint64_t v56 = (id *)(v0 + 16);
  *(void *)(v0 + 16) = v54;
  uint64_t v57 = sub_2562E31A0();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = swift_task_alloc();
  id v60 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 88))(v59, v57);
    if (MEMORY[0x263F8AEE8] && v61 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v54 = *v56;
      char v62 = 3;
LABEL_39:
      char v119 = v62;
      goto LABEL_40;
    }
    if (MEMORY[0x263F8AEF0] && v61 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v54 = *v56;
      char v62 = 4;
      goto LABEL_39;
    }
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v57);
  }
  uint64_t v63 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v54;
  uint64_t v64 = sub_2562E3320();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = swift_task_alloc();
  id v67 = v54;
  if (swift_dynamicCast())
  {
    int v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 88))(v66, v64);
    if (MEMORY[0x263F396A0] && v68 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v54 = *v63;
      char v62 = 6;
      goto LABEL_39;
    }
    if (MEMORY[0x263F396A8] && v68 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v54 = *v63;
      char v62 = 7;
      goto LABEL_39;
    }
    if (MEMORY[0x263F396B0] && v68 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v54 = *v63;
      char v62 = 8;
      goto LABEL_39;
    }
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v64);
  }
  id v69 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v54;
  id v70 = v54;
  if (swift_dynamicCast())
  {

    char v119 = *(unsigned char *)(v0 + 440);
    id v54 = *v69;
LABEL_40:

    uint64_t v101 = *(void **)(v0 + 200);
    uint64_t v102 = *(void *)(v0 + 176);
    uint64_t v103 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v104 = *(void *)(v0 + 168);
    uint64_t v105 = *(unsigned int *)(v0 + 436);
    uint64_t v106 = *(void *)(v0 + 80);
    uint64_t v107 = (void *)swift_task_alloc();
    sub_25622CE3C();
    uint64_t v108 = swift_allocError();
    *uint64_t v109 = v119;

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v106, v104);
    *uint64_t v107 = v108;
    v103(v107, v105, v104);
    (*(void (**)(uint64_t, void *, uint64_t))(v102 + 32))(v106, v107, v104);
    swift_task_dealloc();
    goto LABEL_41;
  }

  *uint64_t v118 = v54;
  uint64_t v71 = sub_2562E31E0();
  uint64_t v72 = *(void *)(v71 - 8);
  uint64_t v73 = swift_task_alloc();
  id v74 = v54;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v71);
    swift_task_dealloc();
    id v54 = *v118;
    char v62 = 2;
    goto LABEL_39;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v54;
  uint64_t v75 = sub_2562E3190();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = swift_task_alloc();
  id v78 = v54;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v75);
    swift_task_dealloc();
    char v119 = 0;
    id v54 = *(id *)(v0 + 56);
    goto LABEL_40;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v54;
  id v93 = v54;
  if (!swift_dynamicCast())
  {

    char v62 = 1;
    goto LABEL_39;
  }
  uint64_t v94 = *(void **)(v0 + 200);
  uint64_t v95 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v96 = *(void *)(v0 + 168);
  uint64_t v98 = *(void *)(v0 + 120);
  uint64_t v97 = *(void *)(v0 + 128);
  uint64_t v99 = *(void *)(v0 + 112);
  uint64_t v100 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v100, v96);

  v95(v100, *MEMORY[0x263F8AF18], v96);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);

LABEL_41:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v110 = *(uint64_t (**)(void))(v0 + 8);
  return v110();
}

uint64_t sub_25629EB20()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2562A0468;
  }
  else
  {
    uint64_t v2 = sub_25629EC3C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25629EC3C()
{
  uint64_t v1 = *(void **)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 80);
  id v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 304) = v6;
  *(void *)(v0 + 312) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v5, v3);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  *(void *)(v0 + 320) = v7;
  *(void *)(v0 + 328) = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v7(v5, v2, v3);
  swift_task_dealloc();
  uint64_t v8 = sub_2562E3200();
  unint64_t v10 = v9;
  uint64_t v11 = sub_2562E3210();
  sub_2562A193C(v8, v10, v11, v12);
  if (v1)
  {
    uint64_t v13 = (id *)(v0 + 16);
    unint64_t v14 = *(void **)(v0 + 232);
    uint64_t v15 = *(void **)(v0 + 208);
    unint64_t v16 = *(void **)(v0 + 200);
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 240));

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v0 + 16) = v1;
    uint64_t v17 = sub_2562E31A0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = swift_task_alloc();
    id v20 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v19, v17);
      if (MEMORY[0x263F8AEE8] && v21 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v22 = 3;
LABEL_33:
        char v81 = v22;
        goto LABEL_34;
      }
      if (MEMORY[0x263F8AEF0] && v21 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v22 = 4;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
    }
    uint64_t v38 = (id *)(v0 + 24);
    swift_task_dealloc();

    *(void *)(v0 + 24) = v1;
    uint64_t v39 = sub_2562E3320();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = swift_task_alloc();
    id v42 = v1;
    if (swift_dynamicCast())
    {
      int v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v41, v39);
      if (MEMORY[0x263F396A0] && v43 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v22 = 6;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396A8] && v43 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v22 = 7;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396B0] && v43 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v22 = 8;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
    }
    unint64_t v44 = (id *)(v0 + 32);
    swift_task_dealloc();

    *(void *)(v0 + 32) = v1;
    id v45 = v1;
    if (swift_dynamicCast())
    {

      char v81 = *(unsigned char *)(v0 + 440);
    }
    else
    {
      unint64_t v46 = (id *)(v0 + 48);

      *(void *)(v0 + 48) = v1;
      uint64_t v47 = sub_2562E31E0();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = swift_task_alloc();
      id v50 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
        swift_task_dealloc();

        char v22 = 2;
        goto LABEL_33;
      }
      swift_task_dealloc();

      *(void *)(v0 + 56) = v1;
      uint64_t v51 = sub_2562E3190();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = swift_task_alloc();
      id v54 = v1;
      if (!swift_dynamicCast())
      {
        swift_task_dealloc();

        *(void *)(v0 + 64) = v1;
        id v55 = v1;
        if (swift_dynamicCast())
        {
          uint64_t v56 = *(void **)(v0 + 200);
          uint64_t v57 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
          uint64_t v58 = *(void *)(v0 + 168);
          uint64_t v60 = *(void *)(v0 + 120);
          uint64_t v59 = *(void *)(v0 + 128);
          uint64_t v61 = *(void *)(v0 + 112);
          uint64_t v62 = *(void *)(v0 + 80);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v62, v58);

          v57(v62, *MEMORY[0x263F8AF18], v58);
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);

LABEL_35:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v72 = *(uint64_t (**)(void))(v0 + 8);
          return v72();
        }

        char v22 = 1;
        goto LABEL_33;
      }

      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v51);
      swift_task_dealloc();

      char v81 = 0;
    }
LABEL_34:
    uint64_t v63 = *(void **)(v0 + 200);
    uint64_t v65 = *(void *)(v0 + 176);
    uint64_t v64 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v66 = *(void *)(v0 + 168);
    uint64_t v67 = *(unsigned int *)(v0 + 436);
    uint64_t v68 = *(void *)(v0 + 80);
    id v69 = (void *)swift_task_alloc();
    sub_25622CE3C();
    uint64_t v70 = swift_allocError();
    char *v71 = v81;

    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v68, v66);
    *id v69 = v70;
    v64(v69, v67, v66);
    (*(void (**)(uint64_t, void *, uint64_t))(v65 + 32))(v68, v69, v66);
    swift_task_dealloc();
    goto LABEL_35;
  }
  uint64_t v23 = *(void *)(v0 + 248);
  uint64_t v24 = *(void *)(v0 + 240);
  uint64_t v25 = *(objc_class **)(v0 + 224);
  uint64_t v75 = *(void *)(v0 + 216);
  uint64_t v76 = *(void *)(v0 + 264);
  uint64_t v73 = *(void **)(v0 + 232);
  id v74 = *(void **)(v0 + 208);
  uint64_t v79 = *(void *)(v0 + 104);
  uint64_t v80 = *(int *)(v0 + 432);
  uint64_t v78 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2562E3200();
  sub_2562E3210();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v26 = objc_allocWithZone(v25);
  id v27 = (void *)sub_2562E31F0();
  *(void *)(v0 + 336) = v27;

  uint64_t v28 = swift_task_alloc();
  id v29 = v74;
  id v30 = v27;
  sub_25624709C(v75);
  sub_2562E3170();
  unint64_t v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  *(void *)(v0 + 344) = v31;
  *(void *)(v0 + 352) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v31(v76, v24);
  unint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
  *(void *)(v0 + 360) = v32;
  *(void *)(v0 + 368) = (v23 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v32(v76, v28, v24);
  swift_task_dealloc();
  uint64_t v33 = swift_task_alloc();
  *(void *)(v0 + 376) = v33;
  uint64_t v77 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(void *)(*(void *)v78 + 96) + **(int **)(*(void *)v78 + 96));
  unint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v34;
  *unint64_t v34 = v0;
  v34[1] = sub_25629F6C8;
  uint64_t v35 = *(void *)(v0 + 264);
  uint64_t v36 = *(void *)(v0 + 200);
  return v77(v33, v36, v35, v79 + v80, 0xD00000000000002CLL, 0x80000002562EDEB0);
}

uint64_t sub_25629F6C8()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2562A0B60;
  }
  else
  {
    uint64_t v2 = sub_25629F7E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25629F7E4()
{
  uint64_t v1 = *(void **)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v0 + 304))(v5, v4);
  v3(v5, v2, v4);
  swift_task_dealloc();
  uint64_t v6 = sub_2562E3200();
  unint64_t v8 = v7;
  uint64_t v9 = sub_2562E3210();
  sub_2562A193C(v6, v8, v9, v10);
  if (v1)
  {
    uint64_t v11 = (id *)(v0 + 16);
    unint64_t v12 = *(void **)(v0 + 336);
    uint64_t v13 = *(void **)(v0 + 208);
    unint64_t v14 = *(void **)(v0 + 200);
    (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 264), *(void *)(v0 + 240));

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v0 + 16) = v1;
    uint64_t v15 = sub_2562E31A0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = swift_task_alloc();
    id v18 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    if (swift_dynamicCast())
    {
      int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
      if (MEMORY[0x263F8AEE8] && v19 == *MEMORY[0x263F8AEE8])
      {

        swift_task_dealloc();
        char v20 = 3;
LABEL_33:
        char v78 = v20;
        goto LABEL_34;
      }
      if (MEMORY[0x263F8AEF0] && v19 == *MEMORY[0x263F8AEF0])
      {

        swift_task_dealloc();
        char v20 = 4;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
    }
    unint64_t v34 = (id *)(v0 + 24);
    swift_task_dealloc();

    *(void *)(v0 + 24) = v1;
    uint64_t v35 = sub_2562E3320();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = swift_task_alloc();
    id v38 = v1;
    if (swift_dynamicCast())
    {
      int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v37, v35);
      if (MEMORY[0x263F396A0] && v39 == *MEMORY[0x263F396A0])
      {

        swift_task_dealloc();
        char v20 = 6;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396A8] && v39 == *MEMORY[0x263F396A8])
      {

        swift_task_dealloc();
        char v20 = 7;
        goto LABEL_33;
      }
      if (MEMORY[0x263F396B0] && v39 == *MEMORY[0x263F396B0])
      {

        swift_task_dealloc();
        char v20 = 8;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
    }
    uint64_t v40 = (id *)(v0 + 32);
    swift_task_dealloc();

    *(void *)(v0 + 32) = v1;
    id v41 = v1;
    if (swift_dynamicCast())
    {

      char v78 = *(unsigned char *)(v0 + 440);
    }
    else
    {
      id v42 = (id *)(v0 + 48);

      *(void *)(v0 + 48) = v1;
      uint64_t v43 = sub_2562E31E0();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v45 = swift_task_alloc();
      id v46 = v1;
      if (swift_dynamicCast())
      {

        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
        swift_task_dealloc();

        char v20 = 2;
        goto LABEL_33;
      }
      swift_task_dealloc();

      *(void *)(v0 + 56) = v1;
      uint64_t v47 = sub_2562E3190();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = swift_task_alloc();
      id v50 = v1;
      if (!swift_dynamicCast())
      {
        swift_task_dealloc();

        *(void *)(v0 + 64) = v1;
        id v51 = v1;
        if (swift_dynamicCast())
        {
          uint64_t v52 = *(void **)(v0 + 200);
          uint64_t v53 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
          uint64_t v54 = *(void *)(v0 + 168);
          uint64_t v56 = *(void *)(v0 + 120);
          uint64_t v55 = *(void *)(v0 + 128);
          uint64_t v57 = *(void *)(v0 + 112);
          uint64_t v58 = *(void *)(v0 + 80);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v58, v54);

          v53(v58, *MEMORY[0x263F8AF18], v54);
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);

LABEL_35:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v68 = *(uint64_t (**)(void))(v0 + 8);
          return v68();
        }

        char v20 = 1;
        goto LABEL_33;
      }

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
      swift_task_dealloc();

      char v78 = 0;
    }
LABEL_34:
    uint64_t v59 = *(void **)(v0 + 200);
    uint64_t v61 = *(void *)(v0 + 176);
    uint64_t v60 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v62 = *(void *)(v0 + 168);
    uint64_t v63 = *(unsigned int *)(v0 + 436);
    uint64_t v64 = *(void *)(v0 + 80);
    uint64_t v65 = (void *)swift_task_alloc();
    sub_25622CE3C();
    uint64_t v66 = swift_allocError();
    *uint64_t v67 = v78;

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64, v62);
    *uint64_t v65 = v66;
    v60(v65, v63, v62);
    (*(void (**)(uint64_t, void *, uint64_t))(v61 + 32))(v64, v65, v62);
    swift_task_dealloc();
    goto LABEL_35;
  }
  id v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v71 = *(void *)(v0 + 264);
  uint64_t v21 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v23 = *(objc_class **)(v0 + 224);
  id v69 = *(void **)(v0 + 336);
  uint64_t v70 = *(void **)(v0 + 208);
  uint64_t v76 = *(void *)(v0 + 104);
  uint64_t v77 = *(int *)(v0 + 432);
  uint64_t v73 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2562E3200();
  sub_2562E3210();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRetain();
  sub_2562E3640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone(v23);
  uint64_t v25 = (void *)sub_2562E31F0();
  *(void *)(v0 + 400) = v25;

  uint64_t v26 = swift_task_alloc();
  id v27 = v70;
  id v28 = v25;
  sub_25624709C(v22);
  swift_bridgeObjectRelease();
  sub_2562E3170();
  v72(v71, v21);
  v74(v71, v26, v21);
  swift_task_dealloc();
  uint64_t v29 = swift_task_alloc();
  *(void *)(v0 + 408) = v29;
  uint64_t v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(void *)(*(void *)v73 + 104) + **(int **)(*(void *)v73 + 104));
  id v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v30;
  void *v30 = v0;
  v30[1] = sub_2562A0238;
  uint64_t v31 = *(void *)(v0 + 264);
  uint64_t v32 = *(void *)(v0 + 200);
  return v75(v29, v32, v31, v76 + v77, 0xD00000000000002CLL, 0x80000002562EDEB0);
}

uint64_t sub_2562A0238()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2562A1250;
  }
  else {
    uint64_t v2 = sub_2562A034C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562A034C()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void **)(v0 + 200);
  unint64_t v7 = *(void **)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 168);
  uint64_t v9 = *(void *)(v0 + 80);

  v2(v4, v5);
  v3(v9, v8);
  v12(v9, v1, v8);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_2562A0468()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v5 = *(void **)(v0 + 200);
  uint64_t v4 = *(void **)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 296);
  *(void *)(v0 + 16) = v6;
  unint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  unint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  char v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 440);
    id v6 = *v20;
LABEL_25:

    id v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 436);
    uint64_t v32 = *(void *)(v0 + 80);
    uint64_t v33 = (void *)swift_task_alloc();
    sub_25622CE3C();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *uint64_t v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2562A0B60()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void **)(v0 + 200);
  uint64_t v4 = *(void **)(v0 + 208);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 392);
  *(void *)(v0 + 16) = v6;
  unint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  unint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  char v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 440);
    id v6 = *v20;
LABEL_25:

    id v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 436);
    uint64_t v32 = *(void *)(v0 + 80);
    uint64_t v33 = (void *)swift_task_alloc();
    sub_25622CE3C();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *uint64_t v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2562A1250()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void **)(v0 + 200);
  uint64_t v4 = *(void **)(v0 + 208);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = *(id *)(v0 + 424);
  *(void *)(v0 + 16) = v6;
  unint64_t v7 = (id *)(v0 + 16);
  uint64_t v8 = sub_2562E31A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_task_alloc();
  id v11 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
  if (swift_dynamicCast())
  {
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v10, v8);
    if (MEMORY[0x263F8AEE8] && v12 == *MEMORY[0x263F8AEE8])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 3;
LABEL_24:
      char v50 = v13;
      goto LABEL_25;
    }
    if (MEMORY[0x263F8AEF0] && v12 == *MEMORY[0x263F8AEF0])
    {

      swift_task_dealloc();
      id v6 = *v7;
      char v13 = 4;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  unint64_t v14 = (id *)(v0 + 24);
  swift_task_dealloc();

  *(void *)(v0 + 24) = v6;
  uint64_t v15 = sub_2562E3320();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = swift_task_alloc();
  id v18 = v6;
  if (swift_dynamicCast())
  {
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15);
    if (MEMORY[0x263F396A0] && v19 == *MEMORY[0x263F396A0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 6;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396A8] && v19 == *MEMORY[0x263F396A8])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 7;
      goto LABEL_24;
    }
    if (MEMORY[0x263F396B0] && v19 == *MEMORY[0x263F396B0])
    {

      swift_task_dealloc();
      id v6 = *v14;
      char v13 = 8;
      goto LABEL_24;
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
  }
  char v20 = (id *)(v0 + 32);
  swift_task_dealloc();

  *(void *)(v0 + 32) = v6;
  id v21 = v6;
  if (swift_dynamicCast())
  {

    char v50 = *(unsigned char *)(v0 + 440);
    id v6 = *v20;
LABEL_25:

    id v27 = *(void **)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v31 = *(unsigned int *)(v0 + 436);
    uint64_t v32 = *(void *)(v0 + 80);
    uint64_t v33 = (void *)swift_task_alloc();
    sub_25622CE3C();
    uint64_t v34 = swift_allocError();
    char *v35 = v50;

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
    *uint64_t v33 = v34;
    v29(v33, v31, v30);
    (*(void (**)(uint64_t, void *, uint64_t))(v28 + 32))(v32, v33, v30);
    swift_task_dealloc();
    goto LABEL_26;
  }
  uint64_t v22 = (id *)(v0 + 48);

  *(void *)(v0 + 48) = v6;
  uint64_t v23 = sub_2562E31E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = swift_task_alloc();
  id v26 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    swift_task_dealloc();
    id v6 = *v22;
    char v13 = 2;
    goto LABEL_24;
  }
  swift_task_dealloc();

  *(void *)(v0 + 56) = v6;
  uint64_t v38 = sub_2562E3190();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = swift_task_alloc();
  id v41 = v6;
  if (swift_dynamicCast())
  {

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    swift_task_dealloc();
    char v50 = 0;
    id v6 = *(id *)(v0 + 56);
    goto LABEL_25;
  }
  swift_task_dealloc();

  *(void *)(v0 + 64) = v6;
  id v42 = v6;
  if (!swift_dynamicCast())
  {

    char v13 = 1;
    goto LABEL_24;
  }
  uint64_t v43 = *(void **)(v0 + 200);
  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 128);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8))(v49, v45);

  v44(v49, *MEMORY[0x263F8AF18], v45);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2562A193C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_2562E3430();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2562E37B0();
  if (result)
  {
    uint64_t v14 = a1;
    uint64_t v15 = type metadata accessor for AssetMetricsWorker();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v4 + *(int *)(v15 + 20), v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_2562E3410();
    os_log_type_t v17 = sub_2562E37E0();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = a3;
      uint64_t v20 = v19;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v26 = v24;
      *(_DWORD *)uint64_t v20 = 136315394;
      int v23 = v18;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_256229738(v14, a2, &v26);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_256229738(v22, a4, &v26);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v16, (os_log_type_t)v23, "TaskId: %s, TaskName: %s: asked to stop!", (uint8_t *)v20, 0x16u);
      uint64_t v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v21, -1, -1);
      MEMORY[0x25A2A5190](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_2562E3780();
    sub_256248F9C();
    swift_allocError();
    sub_2562E3480();
    return swift_willThrow();
  }
  return result;
}

uint64_t AssetMetricsExecutor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t AssetMetricsExecutor.init()()
{
  return v0;
}

uint64_t sub_2562A1C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  _OWORD v6[4] = a2;
  uint64_t v7 = sub_2562E3430();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562A1D00, 0, 0);
}

uint64_t sub_2562A1D00()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void (*)(void))v0[8];
  uint64_t v3 = (void *)v0[7];
  uint64_t v4 = (void *)v0[4];
  (*(void (**)(uint64_t, void, void))(v0[10] + 16))(v1, v0[6], v0[9]);
  type metadata accessor for AssetPenetrationStatus();
  swift_allocObject();
  id v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = AssetPenetrationStatus.init(defaults:logger:fbfBundleId:)(v5, v1, v3, v2);
  v0[12] = v6;
  uint64_t v8 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v9 = swift_task_alloc();
  v0[2] = v8;
  v0[13] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F553B0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = sub_2562E31C0();
  v0[14] = v10;
  if (v10)
  {
    uint64_t v11 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v12 = swift_task_alloc();
    v0[15] = v12;
    uint64_t v13 = sub_2562E3180();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[16] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_2562A205C;
    return MEMORY[0x270F8C5F8](v9, v12);
  }
  else
  {
    uint64_t v16 = v0[3];
    swift_release();
    uint64_t v17 = sub_2562E31D0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v9, 1, 1, v17);
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v16, *MEMORY[0x263F8AF00], v17);
    sub_25622F3C4(v9, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_2562A205C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  sub_25622F3C4(*(void *)(v2 + 120), &qword_269F54240);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_2562A3648;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_2562A364C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2562A21C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  _OWORD v6[4] = a2;
  uint64_t v7 = sub_2562E3430();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562A2288, 0, 0);
}

uint64_t sub_2562A2288()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void (*)(void))v0[8];
  uint64_t v3 = v0[7];
  uint64_t v4 = (void *)v0[4];
  (*(void (**)(uint64_t, void, void))(v0[10] + 16))(v1, v0[6], v0[9]);
  type metadata accessor for BootToAssetMetrics();
  swift_allocObject();
  id v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = BootToAssetMetrics.init(defaults:logger:fbfBundleId:)(v5, v1, v3, v2);
  v0[12] = v6;
  uint64_t v8 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v9 = swift_task_alloc();
  v0[2] = v8;
  v0[13] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F553C0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = sub_2562E31C0();
  v0[14] = v10;
  if (v10)
  {
    uint64_t v11 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v12 = swift_task_alloc();
    v0[15] = v12;
    uint64_t v13 = sub_2562E3180();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[16] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_2562A25E4;
    return MEMORY[0x270F8C5F8](v9, v12);
  }
  else
  {
    uint64_t v16 = v0[3];
    swift_release();
    uint64_t v17 = sub_2562E31D0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v9, 1, 1, v17);
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v16, *MEMORY[0x263F8AF00], v17);
    sub_25622F3C4(v9, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_2562A25E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  sub_25622F3C4(*(void *)(v2 + 120), &qword_269F54240);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_2562A2844;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_2562A2748;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2562A2748()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[3];
  swift_release();
  uint64_t v3 = sub_2562E31D0();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_2562A2844()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2562A28C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  _OWORD v6[4] = a2;
  uint64_t v7 = sub_2562E3430();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562A298C, 0, 0);
}

uint64_t sub_2562A298C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void (*)(void))v0[8];
  uint64_t v3 = v0[7];
  uint64_t v4 = (void *)v0[4];
  (*(void (**)(uint64_t, void, void))(v0[10] + 16))(v1, v0[6], v0[9]);
  type metadata accessor for RequestWithNoAssetMetrics();
  swift_allocObject();
  id v5 = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = RequestWithNoAssetMetrics.init(defaults:logger:fbfBundleId:)(v5, v1, v3, v2);
  v0[12] = v6;
  uint64_t v8 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54230);
  uint64_t v9 = swift_task_alloc();
  v0[2] = v8;
  v0[13] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F553D0);
  swift_allocObject();
  swift_retain();
  uint64_t v10 = sub_2562E31C0();
  v0[14] = v10;
  if (v10)
  {
    uint64_t v11 = v0[5];
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54240);
    uint64_t v12 = swift_task_alloc();
    v0[15] = v12;
    uint64_t v13 = sub_2562E3180();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[16] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_2562A205C;
    return MEMORY[0x270F8C5F8](v9, v12);
  }
  else
  {
    uint64_t v16 = v0[3];
    swift_release();
    uint64_t v17 = sub_2562E31D0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v9, 1, 1, v17);
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v16, *MEMORY[0x263F8AF00], v17);
    sub_25622F3C4(v9, &qword_269F54230);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t AssetMetricsExecutor.deinit()
{
  return v0;
}

uint64_t AssetMetricsExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_2562A2D04()
{
  unint64_t result = qword_269F553D8;
  if (!qword_269F553D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F553D8);
  }
  return result;
}

unint64_t sub_2562A2D60()
{
  unint64_t result = qword_269F553E0;
  if (!qword_269F553E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F553E0);
  }
  return result;
}

unint64_t sub_2562A2DB8()
{
  unint64_t result = qword_269F553E8;
  if (!qword_269F553E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F553E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetMetricsWorkerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2562A2ED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetMetricsWorkerError()
{
  return &type metadata for AssetMetricsWorkerError;
}

uint64_t getEnumTagSinglePayload for AssetMetricsWorker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2562A2F24);
}

uint64_t sub_2562A2F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E3060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_2562E3430();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AssetMetricsWorker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2562A3030);
}

uint64_t sub_2562A3030(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2562E3060();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_2562E3430();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *storeEnumTagSinglePayload for AssetMetricsWorker.Subtask(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2562A3200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetMetricsWorker.Subtask()
{
  return &type metadata for AssetMetricsWorker.Subtask;
}

uint64_t type metadata accessor for AssetMetricsExecutor()
{
  return self;
}

uint64_t method lookup function for AssetMetricsExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetMetricsExecutor);
}

uint64_t dispatch thunk of AssetMetricsExecutor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of AssetMetricsExecutor.executeAssetPenetrationMetrics(defaults:pluginContext:logger:fbfBundleId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 88)
                                                                                     + **(int **)(*(void *)v6 + 88));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_25623E4D4;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AssetMetricsExecutor.executeDownloadMetrics(defaults:pluginContext:logger:fbfBundleId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 96)
                                                                                     + **(int **)(*(void *)v6 + 96));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_25622844C;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AssetMetricsExecutor.executeRequestWithNoAssetMetrics(defaults:pluginContext:logger:fbfBundleId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 104)
                                                                                     + **(int **)(*(void *)v6 + 104));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_25623E4D4;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2562A3650()
{
  uint64_t v0 = sub_2562E3060();
  __swift_allocate_value_buffer(v0, qword_269F55418);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F55418);
  return sub_2562E3020();
}

uint64_t DevicePropertiesUtils.deinit()
{
  return v0;
}

uint64_t DevicePropertiesUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DevicePropertiesUtils()
{
  return self;
}

uint64_t method lookup function for DevicePropertiesUtils(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DevicePropertiesUtils);
}

uint64_t sub_2562A36F0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
  uint64_t result = sub_2562E2F40();
  if (!v0) {
    return (uint64_t)v0;
  }
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 1.84467441e19)
  {
    objc_msgSend(v0, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v2);
    objc_msgSend(v0, sel_setNumberOfSeconds_, 86400);
    return (uint64_t)v0;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_2562A379C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E6B0]), sel_init);
  uint64_t v5 = v4;
  if (!v4) {
    return (uint64_t)v5;
  }
  objc_msgSend(v4, sel_setDeviceAggregationId_, a2);
  uint64_t v6 = sub_2562E2FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E2FC0();
  id v10 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
  uint64_t v11 = (void *)sub_2562E2FB0();
  id v12 = objc_msgSend(v10, sel_initWithNSUUID_, v11);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v5, sel_setOddId_, v12);

  uint64_t v13 = sub_2562E2F80();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E30A0();
  sub_2562E2F40();
  double v18 = v17;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v18 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v18 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (is_mul_ok((unint64_t)v18, 0x3E8uLL))
  {
    objc_msgSend(v5, sel_setEventTimestampInMsSince1970_, 1000 * (unint64_t)v18);
    objc_msgSend(v5, sel_setAggregationInterval_, a1);
    return (uint64_t)v5;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SiriDigestMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SiriDigestMetricsBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  uint64_t v5 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_2562A3B30(uint64_t a1)
{
  v2[2] = v1;
  v2[3] = *(void *)(type metadata accessor for DeviceUsageMetrics(0) - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *(void *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  return MEMORY[0x270FA2498](sub_2562A3BF4, 0, 0);
}

uint64_t sub_2562A3BF4()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Reporter invoked: SiriDigestMetricsBiomeReporter", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = v0[5];

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = v0[5] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v0[4];
      sub_2562A4910(v7, v9);
      id v10 = _s16MetricsFramework010SiriDigestA13BiomeReporterC06createe8OnDeviced5UsageA5Event05usageA0So06BMSirihidjA0CAA0ijA0V_tFZ_0(v9);
      sub_2562E30D0();

      sub_2562A4974(v9);
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2562A3D58()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t SiriDigestMetricsBiomeReporter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriDigestMetricsBiomeReporter.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriDigestMetricsBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_2562A3EE0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,uint64_t a34,uint64_t a35,void *a36,void *a37)
{
  if (a3)
  {
    uint64_t v49 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    uint64_t v38 = a11;
    if (a7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v38 = a11;
    if (a7)
    {
LABEL_3:
      uint64_t v48 = (void *)sub_2562E3550();
      swift_bridgeObjectRelease();
      uint64_t v39 = a13;
      if (v38) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v47 = 0;
      uint64_t v40 = a19;
      if (v39) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
  }
  uint64_t v48 = 0;
  uint64_t v39 = a13;
  if (!v38) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v47 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  uint64_t v40 = a19;
  if (v39)
  {
LABEL_5:
    uint64_t v46 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v46 = 0;
LABEL_10:
  if (v40)
  {
    uint64_t v45 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = 0;
  }
  if (a35)
  {
    id v41 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v41 = 0;
  }
  sub_25624B1DC();
  uint64_t v43 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  id v44 = objc_msgSend(v50, sel_initWithEventMetadata_deviceType_programCode_productId_systemBuild_dataSharingOptInStatus_viewInterface_audioInterfaceVendorId_audioInterfaceProductId_asrLocation_nlLocation_siriInputLocale_dictationLocale_subDomain_totalTurnCount_validTurnCount_siriTasksStarted_siriTasksCompleted_flowTasksStarted_flowTasksCompleted_reliabilityRequestCount_reliabilityTurnCount_clientErrorCount_undesiredResponseCount_fatalResponseCount_failureResponseCount_siriUnavailableResponseCount_asrTurnCount_siriResponseId_responseCategory_isIntelligenceEngineRequest_intelligenceEngineRouting_, a1, v49, a4, a5, v48, a8, a9, v47, v46, a14, a15, a16, a17, v45, a20, a21, a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          v41,
          a36,
          a37,
          v43);

  return v44;
}

id _s16MetricsFramework010SiriDigestA13BiomeReporterC06createe8OnDeviced5UsageA5Event05usageA0So06BMSirihidjA0CAA0ijA0V_tFZ_0(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for DeviceUsageMetrics(0);
  uint64_t v3 = *(void *)(a1 + v2[37]);
  if (v3)
  {
    uint64_t v62 = MEMORY[0x263F8EE78];
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = (unsigned int *)(v3 + 32);
      swift_bridgeObjectRetain();
      do
      {
        unsigned int v6 = *v5++;
        if (objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithInt_, v6))
        {
          MEMORY[0x25A2A4400]();
          if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2562E3730();
          }
          sub_2562E3750();
          sub_2562E3720();
        }
        --v4;
      }
      while (v4);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
  }
  id v7 = _s16MetricsFramework13EventMetadataV07toBiomeC005usagecD0So025BMSiriOnDeviceDigestUsageacD0CACSg_tFZ_0(a1);
  uint64_t v8 = (uint64_t *)(a1 + v2[6]);
  uint64_t v60 = v8[1];
  uint64_t v61 = v7;
  uint64_t v59 = *v8;
  if (*(unsigned char *)(a1 + v2[7] + 4))
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = (void *)sub_2562E3D30();
  }
  if (*(unsigned char *)(a1 + v2[8]) == 3) {
    char v50 = 0;
  }
  else {
    char v50 = (void *)sub_2562E37D0();
  }
  uint64_t v9 = (uint64_t *)(a1 + v2[9]);
  uint64_t v57 = *v9;
  uint64_t v58 = v9[1];
  if (*(unsigned char *)(a1 + v2[10] + 4))
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = (void *)sub_2562E3D30();
  }
  if (*(unsigned char *)(a1 + v2[11] + 4)) {
    uint64_t v48 = 0;
  }
  else {
    uint64_t v48 = (void *)sub_2562E3D30();
  }
  id v10 = (uint64_t *)(a1 + v2[12]);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (uint64_t *)(a1 + v2[13]);
  uint64_t v56 = v11;
  uint64_t v53 = v13[1];
  uint64_t v54 = *v13;
  if (*(unsigned char *)(a1 + v2[14] + 4))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = (void *)sub_2562E3D30();
  }
  uint64_t v55 = v12;
  if (*(unsigned char *)(a1 + v2[15] + 4)) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = (void *)sub_2562E3D30();
  }
  uint64_t v14 = v2[16];
  uint64_t v15 = *(void **)(a1 + v14);
  if (v15)
  {
    objc_msgSend(*(id *)(a1 + v14), sel_languageCode);
    uint64_t v16 = (void *)sub_2562E3D30();
    objc_msgSend(v15, sel_countryCode);
    uint64_t v15 = (void *)sub_2562E3D30();
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A478]), sel_initWithLanguageCode_countryCode_, v16, v15);

  uint64_t v18 = v2[17];
  uint64_t v19 = *(void **)(a1 + v18);
  if (v19)
  {
    objc_msgSend(*(id *)(a1 + v18), sel_languageCode);
    uint64_t v20 = (void *)sub_2562E3D30();
    objc_msgSend(v19, sel_countryCode);
    uint64_t v19 = (void *)sub_2562E3D30();
  }
  else
  {
    uint64_t v20 = 0;
  }
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A478]), sel_initWithLanguageCode_countryCode_, v20, v19);

  uint64_t v22 = (uint64_t *)(a1 + v2[18]);
  uint64_t v51 = v22[1];
  uint64_t v52 = *v22;
  if (*(unsigned char *)(a1 + v2[19] + 4))
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[20] + 4)) {
    id v44 = 0;
  }
  else {
    id v44 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[21] + 4)) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[22] + 4)) {
    id v42 = 0;
  }
  else {
    id v42 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[23] + 4)) {
    id v41 = 0;
  }
  else {
    id v41 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[24] + 4)) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[25] + 4)) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[26] + 4)) {
    uint64_t v38 = 0;
  }
  else {
    uint64_t v38 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[27] + 4)) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[28] + 4)) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[29] + 4)) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[30] + 4)) {
    int v23 = 0;
  }
  else {
    int v23 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[31] + 4)) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = (void *)sub_2562E3DA0();
  }
  if (*(unsigned char *)(a1 + v2[32] + 4)) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = (void *)sub_2562E3DA0();
  }
  uint64_t v26 = (uint64_t *)(a1 + v2[33]);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v29 = v17;
  if (*(unsigned char *)(a1 + v2[34] + 4))
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = (void *)sub_2562E3D30();
  }
  if (*(unsigned char *)(a1 + v2[36]) == 2) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = (void *)sub_2562E3760();
  }
  id v32 = objc_allocWithZone(MEMORY[0x263F2A460]);
  return sub_2562A3EE0(v61, v59, v60, v34, v50, v57, v58, v49, v48, v56, v55, v54, v53, v47, v46, v29, v21, v52, v51,
           v45,
           v44,
           v43,
           v42,
           v41,
           v40,
           v39,
           v38,
           v37,
           v36,
           v35,
           v23,
           v24,
           v25,
           v28,
           v27,
           v30,
           v31);
}

uint64_t sub_2562A4910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceUsageMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562A4974(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeviceUsageMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2562A49D0()
{
  return type metadata accessor for SiriDigestMetricsBiomeReporter();
}

uint64_t type metadata accessor for SiriDigestMetricsBiomeReporter()
{
  uint64_t result = qword_269F55440;
  if (!qword_269F55440) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SiriDigestMetricsBiomeReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetricsBiomeReporter);
}

uint64_t dispatch thunk of SiriDigestMetricsBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t DevicePropertiesPlugin.__allocating_init(defaults:logger:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_2562A55A0(a1, a2);

  return v4;
}

uint64_t DevicePropertiesPlugin.init(defaults:logger:)(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_2562A55A0(a1, a2);

  return v3;
}

uint64_t sub_2562A4AF8(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = v1;
  return MEMORY[0x270FA2498](sub_2562A4B18, 0, 0);
}

uint64_t sub_2562A4B18()
{
  v0[8] = *(void *)(v0[7] + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_dataProvider);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_2562A4BB8;
  return sub_2562C554C();
}

uint64_t sub_2562A4BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  uint64_t v5 = (void *)*v3;
  v4[10] = a2;
  swift_task_dealloc();
  if (v2)
  {
    unsigned int v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v4[11] = v8;
    void *v8 = v5;
    v8[1] = sub_2562A4D34;
    return sub_2562C5170();
  }
}

uint64_t sub_2562A4D34(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2562A4E8C;
  }
  else
  {
    uint64_t v6 = v4[3];
    v4[13] = a1;
    v4[14] = v6;
    uint64_t v5 = sub_2562A4E60;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2562A4E60()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 104);
  *(void *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2562A4E8C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2562A4EF0(_OWORD *a1)
{
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = *a1;
  return MEMORY[0x270FA2498](sub_2562A4F18, 0, 0);
}

uint64_t sub_2562A4F18()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_reporter);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 40);
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2562A5034;
  return v4(v0 + 16);
}

uint64_t sub_2562A5034()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2562A5168, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2562A5168()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2562A5180(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(void *)(v3 + 72) = *(void *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_2562A51B0, 0, 0);
}

uint64_t sub_2562A51B0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2562A526C;
  uint64_t v3 = *(void *)(v0 + 40);
  return sub_256257FEC(v3, v0 + 16);
}

uint64_t sub_2562A526C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2562A53A0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2562A53A0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DevicePropertiesPlugin.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DevicePropertiesPlugin.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2562A551C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = v3;
  return MEMORY[0x270FA2498](sub_2562A4B18, 0, 0);
}

uint64_t sub_2562A5540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v4;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(void *)(v3 + 72) = *(void *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_2562A51B0, 0, 0);
}

uint64_t sub_2562A5574(_OWORD *a1)
{
  *(void *)(v2 + 32) = *v1;
  *(_OWORD *)(v2 + 40) = *a1;
  return MEMORY[0x270FA2498](sub_2562A4F18, 0, 0);
}

uint64_t sub_2562A55A0(void *a1, uint64_t a2)
{
  id v28 = a1;
  uint64_t v4 = sub_2562E3430();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_logger;
  uint64_t v8 = v2;
  uint64_t v10 = v9;
  uint64_t v30 = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v11(v7, a2, v4);
  v11((uint64_t)v6, a2, v4);
  type metadata accessor for DevicePropertiesDataProvider();
  uint64_t v12 = swift_allocObject();
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v31 = v10 + 32;
  v27(v12 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger, v6, v4);
  *(void *)(v8 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_dataProvider) = v12;
  uint64_t v29 = v8;
  v11((uint64_t)v6, a2, v4);
  type metadata accessor for DevicePropertiesCalculator();
  uint64_t v13 = swift_allocObject();
  id v14 = v28;
  sub_2562E3020();
  *(void *)(v13 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_defaults) = v14;
  uint64_t v15 = v6;
  uint64_t v16 = v6;
  uint64_t v17 = v4;
  uint64_t v18 = v4;
  uint64_t v19 = v27;
  v27(v13 + OBJC_IVAR____TtC16MetricsFramework26DevicePropertiesCalculator_logger, v16, v17);
  *(void *)(v8 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_calculator) = v13;
  uint64_t v20 = v15;
  v11((uint64_t)v15, a2, v18);
  type metadata accessor for SELFReportingService();
  id v21 = (void *)swift_allocObject();
  v21[3] = objc_msgSend(self, sel_sharedLoggerWithPersistenceConfiguration_, 1);
  id v22 = objc_msgSend(self, sel_sharedAnalytics);
  id v23 = objc_msgSend(v22, sel_defaultMessageStream);

  void v21[2] = v23;
  v21[4] = 0xD000000000000027;
  v21[5] = 0x80000002562EBB60;
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a2, v18);
  type metadata accessor for DevicePropertiesSELFReporter();
  uint64_t v24 = swift_allocObject();
  v19(v24 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger, v20, v18);
  *(void *)(v24 + 16) = v21;
  uint64_t result = v29;
  *(void *)(v29 + OBJC_IVAR____TtC16MetricsFramework22DevicePropertiesPlugin_reporter) = v24;
  return result;
}

uint64_t sub_2562A58D0()
{
  return sub_2562A59B8(&qword_269F55488);
}

uint64_t type metadata accessor for DevicePropertiesPlugin()
{
  uint64_t result = qword_269F554B8;
  if (!qword_269F554B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2562A5950()
{
  return sub_2562A59B8(&qword_269F55490);
}

uint64_t sub_2562A5984()
{
  return sub_2562A59B8(qword_269F55498);
}

uint64_t sub_2562A59B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DevicePropertiesPlugin();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2562A5A00()
{
  return type metadata accessor for DevicePropertiesPlugin();
}

uint64_t method lookup function for DevicePropertiesPlugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DevicePropertiesPlugin);
}

uint64_t dispatch thunk of DevicePropertiesPlugin.__allocating_init(defaults:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DevicePropertiesPlugin.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of DevicePropertiesPlugin.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25623E4D4;
  return v6(a1);
}

uint64_t dispatch thunk of DevicePropertiesPlugin.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t AssetPenetrationStatusDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t AssetPenetrationStatusDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_2562A5E60()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2562A5E80, 0, 0);
}

uint64_t sub_2562A5E80()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: AssetPenetrationMetricsDataProvider", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t AssetPenetrationStatusDataProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AssetPenetrationStatusDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework34AssetPenetrationStatusDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2562A6064()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_2562A5E80, 0, 0);
}

ValueMetadata *type metadata accessor for AssetPenetrationStatusDataRecord()
{
  return &type metadata for AssetPenetrationStatusDataRecord;
}

uint64_t sub_2562A6098()
{
  return type metadata accessor for AssetPenetrationStatusDataProvider();
}

uint64_t type metadata accessor for AssetPenetrationStatusDataProvider()
{
  uint64_t result = qword_269F554F8;
  if (!qword_269F554F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for AssetPenetrationStatusDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetPenetrationStatusDataProvider);
}

uint64_t dispatch thunk of AssetPenetrationStatusDataProvider.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AssetPenetrationStatusDataProvider.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t SiriDigestMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  SiriDigestMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SiriDigestMetricsResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDigestMetricsResults.eventStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*SiriDigestMetricsResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDigestMetricsResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDigestMetricsResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SiriDigestMetricsResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SiriDigestMetricsResults.deviceUsageMetricsResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriDigestMetricsResults.deviceUsageMetricsResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SiriDigestMetricsResults.deviceUsageMetricsResults.modify())()
{
  return nullsub_1;
}

uint64_t SiriDigestMetricsCalculator.init(logger:sqlFileURL:bookmarkService:oddId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2562E3020();
  uint64_t v9 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_logger;
  uint64_t v10 = sub_2562E3430();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v20 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  uint64_t v19 = a2;
  sub_25622F360(a2, v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_bookmarkService) = a3;
  uint64_t v12 = v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  uint64_t v13 = sub_2562E2FD0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a4, v13);
  id v15 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  swift_retain();
  uint64_t v16 = (void *)sub_2562E3550();
  id v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  if (!v17) {
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFFA48]), sel_init, a2);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  sub_25622F3C4(v19, &qword_269F53D10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v20, v10);
  *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_defaults) = v17;
  return v4;
}

uint64_t sub_2562A65A8(uint64_t a1)
{
  v2[395] = v1;
  v2[394] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54398);
  v2[396] = swift_task_alloc();
  v2[397] = swift_task_alloc();
  type metadata accessor for DeviceUsageMetrics(0);
  v2[398] = swift_task_alloc();
  v2[399] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for EventMetadata(0);
  v2[400] = v3;
  v2[401] = *(void *)(v3 - 8);
  v2[402] = swift_task_alloc();
  uint64_t v4 = sub_2562E3380();
  v2[403] = v4;
  v2[404] = *(void *)(v4 - 8);
  v2[405] = swift_task_alloc();
  v2[406] = swift_task_alloc();
  uint64_t v5 = sub_2562E33B0();
  v2[407] = v5;
  v2[408] = *(void *)(v5 - 8);
  v2[409] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562A67B0, 0, 0);
}

void sub_2562A67B0()
{
  uint64_t v364 = v0;
  sub_2562E33A0();
  sub_2562E3390();
  sub_2562E3360();
  uint64_t v1 = sub_2562E3390();
  os_signpost_type_t v2 = sub_2562E3830();
  if (sub_2562E38A0())
  {
    uint64_t v3 = v0[405];
    uint64_t v4 = v0[404];
    uint64_t v5 = v0[403];
    uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v4 + 16);
    v6(v3, v0[406], v5);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    os_signpost_id_t v8 = sub_2562E3370();
    _os_signpost_emit_with_name_impl(&dword_256226000, v1, v2, v8, "SiriDigestMetricsCalculatorSP", "", v7, 2u);
    MEMORY[0x25A2A5190](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    uint64_t v9 = v0[404];

    uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v9 + 16);
  }
  uint64_t v361 = v0;
  v6(v0[405], v0[406], v0[403]);
  sub_2562E33F0();
  swift_allocObject();
  sub_2562E33E0();
  uint64_t v10 = sub_2562E3410();
  os_log_type_t v11 = sub_2562E37F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_256226000, v10, v11, "SQL calculator invoked: SiriDigestMetricsCalculator", v12, 2u);
    MEMORY[0x25A2A5190](v12, -1, -1);
  }
  uint64_t v13 = v0[395];

  uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_defaults);
  id v15 = (void *)sub_2562E3550();
  unsigned int v16 = objc_msgSend(v14, sel_BOOLForKey_, v15);

  id v17 = sub_2562E3410();
  os_log_type_t v18 = sub_2562E37F0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  if (v16)
  {
    if (v19)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_log_type_t v21 = v18;
      id v22 = "SiriDigestMetricsCalculator: Include current date data for aggregation.";
LABEL_11:
      _os_log_impl(&dword_256226000, v17, v21, v22, v20, 2u);
      MEMORY[0x25A2A5190](v20, -1, -1);
    }
  }
  else if (v19)
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    os_log_type_t v21 = v18;
    id v22 = "SiriDigestMetricsCalculator: current date data NOT included for aggregation.";
    goto LABEL_11;
  }
  uint64_t v23 = v361[395];

  uint64_t v24 = v23 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v25 = swift_task_alloc();
  sub_25622F360(v24, v25, &qword_269F53D10);
  uint64_t v26 = sub_2562E2E30();
  uint64_t v27 = *(void *)(v26 - 8);
  id v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v25, 1, v26);
  sub_25622F3C4(v25, &qword_269F53D10);
  swift_task_dealloc();
  if (v29 == 1)
  {
    uint64_t v30 = v361[409];
    sub_256246AD8();
    swift_allocError();
    *uint64_t v31 = 9;
    swift_willThrow();
    goto LABEL_19;
  }
  uint64_t v32 = swift_task_alloc();
  sub_25622F360(v24, v32, &qword_269F53D10);
  if (v28(v32, 1, v26) == 1) {
    goto LABEL_476;
  }
  sub_2562E35A0();
  swift_task_alloc();
  sub_2562E3590();
  uint64_t v33 = sub_2562E3530();
  unint64_t v35 = v34;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v26);
  swift_task_dealloc();
  os_log_t v251 = v14;
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_2562E3410();
  os_log_type_t v37 = sub_2562E37F0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v363[0] = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    swift_bridgeObjectRetain();
    v361[386] = sub_256229738(v33, v35, v363);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v36, v37, "SQL: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v39, -1, -1);
    MEMORY[0x25A2A5190](v38, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v44 = (void *)sub_2562E3110();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D40);
  sub_2562E3300();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_2562E4C80;
  id v46 = v44;
  sub_2562E32F0();
  sub_2562E32F0();
  nullsub_1(v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F543C0);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = sub_25622CF18(v47, 1);
  void *v49 = 20;
  nullsub_1(v48);
  objc_allocWithZone((Class)sub_2562E3260());
  id v247 = v46;
  uint64_t v245 = (void *)sub_2562E3230();
  sub_2562E3250();
  swift_bridgeObjectRelease();
  uint64_t v255 = sub_2562E2F80();
  uint64_t v50 = *(void *)(v255 - 8);
  uint64_t v51 = swift_task_alloc();
  sub_2562E30A0();
  uint64_t v248 = swift_task_alloc();
  uint64_t v310 = v51;
  sub_2562E2E90();
  uint64_t v52 = sub_25622CD30(0);
  v361[391] = v52;
  char v53 = sub_2562E3280();
  uint64_t v246 = v50;
  if ((v53 & 1) == 0)
  {
    uint64_t v342 = 0;
    uint64_t v311 = 0;
    uint64_t v312 = 0;
    uint64_t v313 = 0;
    uint64_t v314 = 0;
LABEL_458:
    uint64_t v201 = swift_allocObject();
    *(void *)(v201 + 16) = v52;
    swift_bridgeObjectRetain_n();
    uint64_t v202 = sub_2562E3410();
    os_log_type_t v203 = sub_2562E37F0();
    uint64_t v204 = swift_allocObject();
    *(unsigned char *)(v204 + 16) = 0;
    uint64_t v205 = swift_allocObject();
    *(unsigned char *)(v205 + 16) = 8;
    uint64_t v206 = swift_allocObject();
    *(void *)(v206 + 16) = sub_2562570B4;
    *(void *)(v206 + 24) = v201;
    uint64_t v207 = swift_allocObject();
    *(void *)(v207 + 16) = sub_2562570E8;
    *(void *)(v207 + 24) = v206;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
    uint64_t v208 = swift_allocObject();
    sub_25622F578(v208, 3);
    *uint64_t v209 = sub_2562570D0;
    v209[1] = v204;
    v209[2] = sub_2562578CC;
    v209[3] = v205;
    v209[4] = sub_256257128;
    v209[5] = v207;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v202, v203))
    {
      uint64_t v210 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v210 = 256;
      v210[2] = 0;
      swift_release();
      v210[3] = 8;
      swift_release();
      uint64_t v211 = sub_2562365D8(v52);
      swift_release();
      swift_bridgeObjectRelease();
      v361[392] = v211;
      sub_2562E38F0();
      swift_release();
      swift_release();
      _os_log_impl(&dword_256226000, v202, v203, "SiriDigestMetricsCalculator query yielded %ld results", v210, 0xCu);
      MEMORY[0x25A2A5190](v210, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
    }
    sub_2562AB900(v314, 0x69737361206C696ELL, 0xEF6449746E617473);
    sub_2562AB900(v313, 0xD000000000000017, 0x80000002562EC5E0);
    sub_2562AB900(v312, 0xD000000000000015, 0x80000002562EC600);
    sub_2562AB900(v311, 0xD000000000000014, 0x80000002562EE020);
    sub_2562AB900(v342, 0xD00000000000001CLL, 0x80000002562EC620);
    uint64_t v212 = sub_2562E3290();
    if (!v212)
    {
      uint64_t v349 = v361[408];
      uint64_t v351 = v361[407];
      uint64_t v341 = v361[409];
      uint64_t v343 = v361[404];
      uint64_t v345 = v361[403];
      uint64_t v347 = v361[406];
      uint64_t v230 = (uint64_t *)v361[394];
      sub_2562E32B0();

      uint64_t v231 = swift_allocObject();
      uint64_t v232 = sub_25622CF18(v231, 1);
      *uint64_t v233 = 20;
      nullsub_1(v232);
      uint64_t v234 = swift_task_alloc();
      sub_2562E30F0();
      uint64_t v235 = sub_2562E30B0();
      swift_bridgeObjectRelease();
      uint64_t v236 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      v236(v234, v255);
      swift_task_dealloc();
      uint64_t v237 = sub_25622CD0C(0);

      swift_release();
      v236(v248, v255);
      v236(v310, v255);
      swift_beginAccess();
      uint64_t v238 = v361[391];
      *uint64_t v230 = v235;
      v230[1] = v237;
      v230[2] = v238;
      swift_task_dealloc();
      swift_task_dealloc();
      sub_2562AB560(v341, "SiriDigestMetricsCalculatorSP", 29, 2);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v343 + 8))(v347, v345);
      (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v341, v351);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v43 = (void (*)(void))v361[1];
      goto LABEL_20;
    }
    uint64_t v213 = (void *)v212;
    swift_bridgeObjectRelease();

    uint64_t v214 = swift_allocObject();
    *(void *)(v214 + 16) = v213;
    id v215 = v213;
    id v216 = v213;
    uint64_t v217 = sub_2562E3410();
    os_log_type_t v218 = sub_2562E3800();
    uint64_t v219 = swift_allocObject();
    *(unsigned char *)(v219 + 16) = 32;
    uint64_t v220 = swift_allocObject();
    *(unsigned char *)(v220 + 16) = 8;
    uint64_t v221 = swift_allocObject();
    *(void *)(v221 + 16) = sub_256257168;
    *(void *)(v221 + 24) = v214;
    uint64_t v222 = swift_allocObject();
    *(void *)(v222 + 16) = sub_256257190;
    *(void *)(v222 + 24) = v221;
    uint64_t v223 = swift_allocObject();
    sub_25622F578(v223, 3);
    void *v224 = sub_2562578CC;
    v224[1] = v219;
    v224[2] = sub_2562578CC;
    v224[3] = v220;
    v224[4] = sub_256257198;
    v224[5] = v222;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v225 = v218;
    if (os_log_type_enabled(v217, v218))
    {
      uint64_t v226 = (uint8_t *)swift_slowAlloc();
      uint64_t v227 = swift_slowAlloc();
      v363[0] = v227;
      *(_WORD *)uint64_t v226 = 258;
      v226[2] = 32;
      swift_release();
      v226[3] = 8;
      swift_release();
      swift_getErrorValue();
      uint64_t v228 = sub_2562E3CE0();
      v361[389] = sub_256229738(v228, v229, v363);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      _os_log_impl(&dword_256226000, v217, v225, "SQL execution error: %s", v226, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v227, -1, -1);
      MEMORY[0x25A2A5190](v226, -1, -1);
    }
    else
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v30 = v361[409];
    swift_getErrorValue();
    sub_2562E3CE0();
    sub_256246AD8();
    swift_allocError();
    static BiomeSQLDatabaseUtils.identifySqlError(errorString:)(v239);
    swift_bridgeObjectRelease();
    swift_willThrow();

    swift_release();
    uint64_t v240 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
    v240(v248, v255);
    v240(v310, v255);
    swift_task_dealloc();
    swift_task_dealloc();
LABEL_19:
    sub_2562AB560(v30, "SiriDigestMetricsCalculatorSP", 29, 2);
    swift_release();
    uint64_t v40 = v361[409];
    uint64_t v41 = v361[408];
    uint64_t v42 = v361[407];
    (*(void (**)(void, void))(v361[404] + 8))(v361[406], v361[403]);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (void (*)(void))v361[1];
LABEL_20:
    v43();
    return;
  }
  uint64_t v342 = 0;
  uint64_t v311 = 0;
  uint64_t v312 = 0;
  uint64_t v313 = 0;
  uint64_t v314 = 0;
  uint64_t v253 = (uint64_t)(v361 + 8);
  uint64_t v278 = (uint64_t)(v361 + 13);
  uint64_t v277 = (uint64_t)(v361 + 18);
  uint64_t v243 = (uint64_t)(v361 + 23);
  uint64_t v276 = (uint64_t)(v361 + 28);
  uint64_t v275 = (uint64_t)(v361 + 33);
  uint64_t v274 = (uint64_t)(v361 + 38);
  uint64_t v283 = v361[395] + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  uint64_t v273 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v361[401] + 56);
  uint64_t v272 = (uint64_t)(v361 + 43);
  uint64_t v344 = (uint64_t)(v361 + 48);
  uint64_t v271 = (uint64_t)(v361 + 53);
  uint64_t v270 = (uint64_t)(v361 + 58);
  uint64_t v309 = (uint64_t)(v361 + 63);
  uint64_t v269 = (uint64_t)(v361 + 68);
  uint64_t v268 = (uint64_t)(v361 + 73);
  uint64_t v308 = (uint64_t)(v361 + 78);
  uint64_t v267 = (uint64_t)(v361 + 83);
  uint64_t v282 = (uint64_t)(v361 + 88);
  uint64_t v307 = (uint64_t)(v361 + 93);
  uint64_t v281 = (uint64_t)(v361 + 98);
  uint64_t v289 = (uint64_t)(v361 + 103);
  uint64_t v306 = (uint64_t)(v361 + 108);
  uint64_t v288 = (uint64_t)(v361 + 113);
  uint64_t v287 = (uint64_t)(v361 + 118);
  uint64_t v305 = (uint64_t)(v361 + 123);
  uint64_t v291 = (uint64_t)(v361 + 128);
  uint64_t v293 = (uint64_t)(v361 + 133);
  uint64_t v304 = (uint64_t)(v361 + 138);
  uint64_t v303 = (uint64_t)(v361 + 143);
  uint64_t v302 = (uint64_t)(v361 + 148);
  v301 = v361 + 153;
  int v286 = v361 + 157;
  v300 = v361 + 161;
  uint64_t v252 = v361 + 165;
  uint64_t v266 = v361 + 169;
  uint64_t v292 = v361 + 173;
  uint64_t v299 = v361 + 177;
  v298 = v361 + 181;
  uint64_t v290 = v361 + 185;
  uint64_t v265 = v361 + 189;
  uint64_t v264 = v361 + 193;
  char v285 = v361 + 197;
  uint64_t v297 = v361 + 201;
  char v263 = v361 + 205;
  int v284 = v361 + 209;
  uint64_t v242 = v361 + 213;
  uint64_t v262 = v361 + 217;
  long long v261 = v361 + 221;
  uint64_t v296 = v361 + 225;
  uint64_t v280 = v361 + 233;
  long long v260 = v361 + 237;
  long long v259 = v361 + 241;
  uint64_t v279 = v361 + 245;
  uint64_t v295 = v361 + 249;
  uint64_t v294 = v361 + 253;
  uint64_t v258 = v361 + 257;
  long long v257 = v361 + 261;
  uint64_t v256 = v361 + 265;
  unsigned __int8 v346 = v361 + 229;
  id v254 = v361 + 410;
  uint64_t v241 = (unsigned int *)v361 + 823;
  unint64_t v340 = (int *)v361[400];
  uint64_t v249 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
  os_log_t v250 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
  uint64_t v244 = (void (**)(uint64_t, uint64_t))(v50 + 8);
  while (1)
  {
    uint64_t v62 = sub_2562E3270();
    if (!v62) {
      goto LABEL_29;
    }
    uint64_t v63 = v62;
    id v348 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
    if (qword_269F53B18 != -1) {
      swift_once();
    }
    uint64_t v64 = (void *)qword_269F5E468;
    v361[304] = 0x61645F746E657665;
    v361[305] = 0xEA00000000006574;
    sub_2562E39D0();
    if (*(void *)(v63 + 16) && (unint64_t v65 = sub_25625626C(v344), (v66 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v63 + 56) + 32 * v65, (uint64_t)v346);
    }
    else
    {
      *unsigned __int8 v346 = 0u;
      *(_OWORD *)(v361 + 231) = 0u;
    }
    sub_2562571A0(v344);
    if (!v361[232])
    {
      sub_25622F3C4((uint64_t)v346, &qword_269F543D8);
      goto LABEL_53;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_53;
    }
    uint64_t v67 = v361[286];
    unint64_t v68 = v361[287];
    uint64_t v359 = swift_task_alloc();
    id v69 = (void *)sub_2562E3550();
    id v70 = objc_msgSend(v64, sel_dateFromString_, v69);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    uint64_t v71 = swift_task_alloc();
    uint64_t v72 = v71;
    if (!v70) {
      break;
    }
    uint64_t v73 = swift_task_alloc();
    sub_2562E2F60();

    id v74 = *v249;
    (*v249)(v72, v73, v255);
    (*v250)(v72, 0, 1, v255);
    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v72, 1, v255) == 1) {
      goto LABEL_52;
    }
    v74(v359, v72, v255);
    swift_task_dealloc();
    uint64_t v75 = swift_task_alloc();
    sub_2562E2E90();
    uint64_t v354 = v75;
    if ((sub_2562E2F50() & 1) != 0
      && (uint64_t v76 = (void *)sub_2562E3550(),
          unsigned __int8 v77 = objc_msgSend(v251, sel_BOOLForKey_, v76),
          v76,
          (v77 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2562E2F40();
      double v79 = v78;
      if (v78 > -1.0 && v78 < 1.84467441e19 && v78 == trunc(v78))
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v348, sel_setStartTimestampInSecondsSince1970_, (unint64_t)v79);
        if (v348)
        {
          v361[334] = 0xD000000000000018;
          v361[335] = 0x80000002562EC7A0;
          id v80 = v348;
          sub_2562E39D0();
          sub_256255764(v243, v63, v242);
          sub_2562571A0(v243);
          if (v361[216])
          {
            if (swift_dynamicCast()) {
              uint64_t v81 = *v241;
            }
            else {
              uint64_t v81 = 86400;
            }
          }
          else
          {
            uint64_t v81 = 86400;
            sub_25622F3C4((uint64_t)v242, &qword_269F543D8);
          }
          objc_msgSend(v80, sel_setNumberOfSeconds_, v81, v241);
        }
        uint64_t v136 = *v244;
        (*v244)(v75, v255);
        v136(v359, v255);
        swift_task_dealloc();
        swift_task_dealloc();
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      uint64_t v98 = swift_allocObject();
      *(double *)(v98 + 16) = v79;
      uint64_t v99 = v98;
      id v352 = (id)v98;
      uint64_t v100 = swift_allocObject();
      *(void *)(v100 + 16) = v67;
      *(void *)(v100 + 24) = v68;
      uint64_t v101 = v100;
      swift_bridgeObjectRetain();
      uint64_t v332 = sub_2562E3410();
      os_log_type_t typea = sub_2562E3800();
      uint64_t v102 = swift_allocObject();
      *(unsigned char *)(v102 + 16) = 0;
      uint64_t v338 = swift_allocObject();
      *(unsigned char *)(v338 + 16) = 8;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = sub_256257330;
      *(void *)(v103 + 24) = v99;
      uint64_t v356 = swift_allocObject();
      *(void *)(v356 + 16) = sub_2562AC1D8;
      *(void *)(v356 + 24) = v103;
      uint64_t v104 = swift_allocObject();
      *(unsigned char *)(v104 + 16) = 32;
      uint64_t v105 = swift_allocObject();
      *(unsigned char *)(v105 + 16) = 8;
      id v350 = (id)v105;
      uint64_t v106 = swift_allocObject();
      *(void *)(v106 + 16) = sub_256257370;
      *(void *)(v106 + 24) = v101;
      uint64_t v107 = swift_allocObject();
      *(void *)(v107 + 16) = sub_2562578C4;
      *(void *)(v107 + 24) = v106;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
      uint64_t v108 = swift_allocObject();
      sub_25622F578(v108, 6);
      *uint64_t v109 = sub_2562578CC;
      v109[1] = v102;
      v109[2] = sub_2562578CC;
      v109[3] = v338;
      v109[4] = sub_2562AC1E0;
      v109[5] = v356;
      v109[6] = sub_2562578CC;
      v109[7] = v104;
      v109[8] = sub_2562578CC;
      v109[9] = v105;
      v109[10] = sub_2562578C8;
      v109[11] = v107;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v332, typea))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        uint64_t v330 = swift_slowAlloc();
        v363[0] = v330;
        *(_WORD *)uint64_t v110 = 514;
        v110[2] = 0;
        swift_release();
        v110[3] = 8;
        swift_release();
        *((double *)v361 + 393) = v79;
        sub_2562E38F0();
        swift_release();
        swift_release();
        swift_release();
        v110[12] = 32;
        swift_release();
        v110[13] = 8;
        swift_release();
        swift_bridgeObjectRetain();
        v361[390] = sub_256229738(v67, v68, v363);
        sub_2562E38F0();
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl(&dword_256226000, v332, typea, "startTimestamp %f of eventDate %s cannot be cast to UInt64.", v110, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v330, -1, -1);
        MEMORY[0x25A2A5190](v110, -1, -1);
      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v111 = (void *)sub_2562E3550();
      v361[6] = sub_2562AB870;
      v361[7] = 0;
      v361[2] = MEMORY[0x263EF8330];
      v361[3] = 1107296256;
      v361[4] = sub_25624FDEC;
      v361[5] = &block_descriptor_5;
      uint64_t v112 = _Block_copy(v361 + 2);
      AnalyticsSendEventLazy();
      _Block_release(v112);
    }
    uint64_t v113 = *v244;
    (*v244)(v354, v255);
    v113(v359, v255);
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
LABEL_29:
    if ((sub_2562E3280() & 1) == 0)
    {
      uint64_t v52 = v361[391];
      goto LABEL_458;
    }
  }
  (*v250)(v71, 1, 1, v255);
LABEL_52:
  swift_bridgeObjectRelease();
  sub_25622F3C4(v72, &qword_269F53DB0);
  swift_task_dealloc();
  swift_task_dealloc();
LABEL_53:
  if (__OFADD__(v342++, 1)) {
    goto LABEL_471;
  }
LABEL_54:
  v361[292] = 0x6C707261635F7369;
  v361[293] = 0xEA00000000007961;
  sub_2562E39D0();
  sub_256255764(v309, v63, v294);
  sub_2562571A0(v309);
  if (!v361[256])
  {
    sub_25622F3C4((uint64_t)v294, &qword_269F543D8);
    goto LABEL_61;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_61:
    int v335 = 0;
    BOOL v336 = 1;
    goto LABEL_62;
  }
  BOOL v336 = *v254 != 1;
  if (*v254 == 1) {
    int v83 = 5;
  }
  else {
    int v83 = 0;
  }
  int v335 = v83;
LABEL_62:
  v361[296] = 0xD000000000000019;
  v361[297] = 0x80000002562EB130;
  sub_2562E39D0();
  sub_256255764(v308, v63, v298);
  sub_2562571A0(v308);
  if (!v361[184])
  {
    sub_25622F3C4((uint64_t)v298, &qword_269F543D8);
    goto LABEL_67;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_67:
    int v329 = 0;
    char v328 = 1;
    goto LABEL_77;
  }
  uint64_t v84 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v85 = v84;
  if ([v85 isEqualToString:@"UNKNOWN"])
  {
    int v329 = 0;
  }
  else
  {
    if ([v85 isEqualToString:@"OPTED_IN"])
    {
      int v86 = 1;
    }
    else if ([v85 isEqualToString:@"OPTED_OUT"])
    {
      int v86 = 2;
    }
    else if ([v85 isEqualToString:@"DISMISSED"])
    {
      int v86 = 3;
    }
    else
    {
      int v86 = 0;
    }
    int v329 = v86;
  }

  char v328 = 0;
LABEL_77:
  strcpy((char *)v361 + 2464, "asr_location");
  *((unsigned char *)v361 + 2477) = 0;
  *((_WORD *)v361 + 1239) = -5120;
  sub_2562E39D0();
  sub_256255764(v307, v63, v295);
  sub_2562571A0(v307);
  if (!v361[252])
  {
    sub_25622F3C4((uint64_t)v295, &qword_269F543D8);
    goto LABEL_82;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_82:
    *(_DWORD *)type = 0;
    char v331 = 1;
    goto LABEL_90;
  }
  uint64_t v87 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v88 = v87;
  if ([v88 isEqualToString:@"ORCHSIRIASRMODE_UNKNOWN"])
  {
    *(_DWORD *)type = 0;
  }
  else
  {
    if ([v88 isEqualToString:@"ORCHSIRIASRMODE_SERVER"])
    {
      int v89 = 1;
    }
    else if ([v88 isEqualToString:@"ORCHSIRIASRMODE_DEVICE"])
    {
      int v89 = 2;
    }
    else
    {
      int v89 = 0;
    }
    *(_DWORD *)type = v89;
  }

  char v331 = 0;
LABEL_90:
  v361[316] = 0x7461636F6C5F6C6ELL;
  v361[317] = 0xEB000000006E6F69;
  sub_2562E39D0();
  sub_256255764(v306, v63, v296);
  sub_2562571A0(v306);
  if (!v361[228])
  {
    sub_25622F3C4((uint64_t)v296, &qword_269F543D8);
    goto LABEL_95;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_95:
    int v327 = 0;
    char v326 = 1;
    goto LABEL_103;
  }
  uint64_t v90 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v91 = v90;
  if ([v91 isEqualToString:@"ORCHSIRINLMODE_UNKNOWN"])
  {
    int v327 = 0;
  }
  else
  {
    if ([v91 isEqualToString:@"ORCHSIRINLMODE_NLV3_SERVER"])
    {
      int v92 = 1;
    }
    else if ([v91 isEqualToString:@"ORCHSIRINLMODE_NLX_DEVICE"])
    {
      int v92 = 2;
    }
    else
    {
      int v92 = 0;
    }
    int v327 = v92;
  }

  char v326 = 0;
LABEL_103:
  id v352 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6ED60]), sel_init);
  v361[326] = 0xD000000000000011;
  v361[327] = 0x80000002562EB110;
  sub_2562E39D0();
  sub_256255764(v305, v63, v297);
  sub_2562571A0(v305);
  if (v361[204])
  {
    if (swift_dynamicCast())
    {
      id v93 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v361[346], v361[347]);

      swift_bridgeObjectRelease();
      id v352 = v93;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v297, &qword_269F543D8);
  }
  id v350 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6ED60]), sel_init);
  v361[364] = 0xD000000000000015;
  v361[365] = 0x80000002562EC640;
  sub_2562E39D0();
  sub_256255764(v304, v63, v299);
  sub_2562571A0(v304);
  if (v361[180])
  {
    if (swift_dynamicCast())
    {
      id v94 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(v361[374], v361[375]);

      swift_bridgeObjectRelease();
      id v350 = v94;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v299, &qword_269F543D8);
  }
  strcpy((char *)v361 + 2928, "program_code");
  *((unsigned char *)v361 + 2941) = 0;
  *((_WORD *)v361 + 1471) = -5120;
  sub_2562E39D0();
  sub_256255764(v302, v63, v301);
  sub_2562571A0(v302);
  if (!v361[156])
  {
    sub_25622F3C4((uint64_t)v301, &qword_269F543D8);
    goto LABEL_116;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_116:
    int v325 = 0;
    char v324 = 1;
    goto LABEL_136;
  }
  uint64_t v95 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v96 = v95;
  if ([v96 isEqualToString:@"PROGRAMCODE_UNKNOWN"])
  {
    int v325 = 0;
  }
  else
  {
    if ([v96 isEqualToString:@"PROGRAMCODE_IOS"])
    {
      int v97 = 1;
    }
    else if ([v96 isEqualToString:@"PROGRAMCODE_MACOS"])
    {
      int v97 = 2;
    }
    else if ([v96 isEqualToString:@"PROGRAMCODE_TVOS"])
    {
      int v97 = 3;
    }
    else if ([v96 isEqualToString:@"PROGRAMCODE_WATCHOS"])
    {
      int v97 = 4;
    }
    else if ([v96 isEqualToString:@"PROGRAMCODE_VISIONOS"])
    {
      int v97 = 5;
    }
    else
    {
      int v97 = 0;
    }
    int v325 = v97;
  }

  char v324 = 0;
LABEL_136:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  uint64_t v114 = swift_task_alloc();
  uint64_t v115 = sub_2562E2FD0();
  uint64_t v339 = *(void *)(v115 - 8);
  unsigned __int8 v357 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v339 + 56);
  uint64_t v360 = v114;
  v357(v114, 1, 1, v115);
  strcpy((char *)v361 + 2656, "assistant_id");
  *((unsigned char *)v361 + 2669) = 0;
  *((_WORD *)v361 + 1335) = -5120;
  sub_2562E39D0();
  sub_256255764(v303, v63, v300);
  sub_2562571A0(v303);
  if (v361[164])
  {
    if (swift_dynamicCast())
    {
      uint64_t v116 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v114, &qword_269F53D68);
      sub_2562363FC(v116, v114);
      swift_task_dealloc();
      goto LABEL_142;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v300, &qword_269F543D8);
  }
  if (__OFADD__(v314, 1)) {
    goto LABEL_472;
  }
  ++v314;
LABEL_142:
  uint64_t v355 = swift_task_alloc();
  v357(v355, 1, 1, v115);
  v361[328] = 0xD000000000000015;
  v361[329] = 0x80000002562EB0B0;
  sub_2562E39D0();
  sub_256255764(v293, v63, v292);
  sub_2562571A0(v293);
  if (v361[176])
  {
    if (swift_dynamicCast())
    {
      uint64_t v117 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v355, &qword_269F53D68);
      sub_2562363FC(v117, v355);
      swift_task_dealloc();
      goto LABEL_148;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v292, &qword_269F543D8);
  }
  if (__OFADD__(v313, 1)) {
    goto LABEL_473;
  }
  ++v313;
LABEL_148:
  uint64_t v353 = swift_task_alloc();
  v357(v353, 1, 1, v115);
  v361[322] = 0xD000000000000013;
  v361[323] = 0x80000002562EC6C0;
  sub_2562E39D0();
  sub_256255764(v291, v63, v290);
  sub_2562571A0(v291);
  if (v361[188])
  {
    if (swift_dynamicCast())
    {
      uint64_t v118 = swift_task_alloc();
      sub_2562E2F90();
      swift_bridgeObjectRelease();
      sub_25622F3C4(v353, &qword_269F53D68);
      sub_2562363FC(v118, v353);
      swift_task_dealloc();
      goto LABEL_154;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v290, &qword_269F543D8);
  }
  if (__OFADD__(v312, 1)) {
    goto LABEL_474;
  }
  ++v312;
LABEL_154:
  v361[320] = 0xD000000000000029;
  v361[321] = 0x80000002562EB150;
  sub_2562E39D0();
  sub_256255764(v287, v63, v285);
  sub_2562571A0(v287);
  if (v361[200])
  {
    int v119 = swift_dynamicCast();
    uint64_t v120 = v361[384];
    if (!v119) {
      uint64_t v120 = 0;
    }
    uint64_t v323 = v120;
    char v121 = v119 ^ 1;
  }
  else
  {
    sub_25622F3C4((uint64_t)v285, &qword_269F543D8);
    uint64_t v323 = 0;
    char v121 = 1;
  }
  char v322 = v121;
  v361[314] = 0xD00000000000002BLL;
  v361[315] = 0x80000002562EB180;
  sub_2562E39D0();
  sub_256255764(v288, v63, v284);
  sub_2562571A0(v288);
  if (v361[212])
  {
    int v122 = swift_dynamicCast();
    uint64_t v123 = v361[385];
    if (!v122) {
      uint64_t v123 = 0;
    }
    uint64_t v321 = v123;
    char v124 = v122 ^ 1;
  }
  else
  {
    sub_25622F3C4((uint64_t)v284, &qword_269F543D8);
    uint64_t v321 = 0;
    char v124 = 1;
  }
  char v320 = v124;
  v361[310] = 0xD000000000000016;
  v361[311] = 0x80000002562EC660;
  sub_2562E39D0();
  sub_256255764(v289, v63, v286);
  sub_2562571A0(v289);
  if (v361[160])
  {
    if (swift_dynamicCast())
    {
      SiriReponseCategory.init(rawValue:)(*((Swift::String *)v361 + 186));
      if (v362 == 20) {
        goto LABEL_477;
      }
      LOBYTE(v363[0]) = v362;
      int v319 = sub_256270DF8((char *)v363);
      char v318 = 0;
      goto LABEL_171;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v286, &qword_269F543D8);
  }
  if (__OFADD__(v311, 1)) {
    goto LABEL_475;
  }
  ++v311;
  int v319 = 0;
  char v318 = 1;
LABEL_171:
  id v125 = objc_msgSend(self, sel_sharedPreferences);
  unsigned int v126 = objc_msgSend(v125, sel_longLivedIdentifierUploadingEnabled);

  if (v126)
  {
    v361[368] = 0x7364695F6E727574;
    v361[369] = 0xE800000000000000;
    sub_2562E39D0();
    sub_256255764(v253, v63, v252);
    sub_2562571A0(v253);
    if (v361[168])
    {
      if (swift_dynamicCast())
      {
        unint64_t v317 = _s16MetricsFramework15ExtensionsUtilsC13decodeTurnIdsySay10Foundation4UUIDVGSgSSSgFZ_0(v361[370], v361[371]);
        swift_bridgeObjectRelease();
        goto LABEL_180;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v252, &qword_269F543D8);
    }
  }
  else
  {
    uint64_t v127 = sub_2562E3410();
    int v128 = sub_2562E37E0();
    if (os_log_type_enabled(v127, (os_log_type_t)v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl(&dword_256226000, v127, (os_log_type_t)v128, "No turnIds found.", v129, 2u);
      MEMORY[0x25A2A5190](v129, -1, -1);
    }
  }
  unint64_t v317 = 0;
LABEL_180:
  v361[302] = 0x6974756F725F6569;
  v361[303] = 0xEA0000000000676ELL;
  sub_2562E39D0();
  sub_256255764(v281, v63, v280);
  sub_2562571A0(v281);
  if (v361[236])
  {
    if (swift_dynamicCast())
    {
      v316 = _s16MetricsFramework15ExtensionsUtilsC15decodeIERoutingySaySo08SISchemaF0VGSgSSSgFZ_0(v361[362], v361[363]);
      swift_bridgeObjectRelease();
      goto LABEL_187;
    }
  }
  else
  {
    sub_25622F3C4((uint64_t)v280, &qword_269F543D8);
  }
  char v130 = sub_2562E3410();
  os_log_type_t v131 = sub_2562E37E0();
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v132 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v132 = 0;
    _os_log_impl(&dword_256226000, v130, v131, "No ieRouting found.", v132, 2u);
    MEMORY[0x25A2A5190](v132, -1, -1);
  }

  v316 = 0;
LABEL_187:
  v361[298] = 0xD000000000000011;
  v361[299] = 0x80000002562EC680;
  sub_2562E39D0();
  sub_256255764(v282, v63, v279);
  sub_2562571A0(v282);
  if (!v361[248])
  {
    sub_25622F3C4((uint64_t)v279, &qword_269F543D8);
    goto LABEL_192;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_192:
    int v337 = 0;
    char v315 = 1;
    goto LABEL_396;
  }
  uint64_t v133 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  id v134 = v133;
  if ([v134 isEqualToString:@"INVOCATIONSOURCE_UNKNOWN_INVOCATION_SOURCE"])
  {
    int v337 = 0;
  }
  else
  {
    if ([v134 isEqualToString:@"INVOCATIONSOURCE_HOME_BUTTON"])
    {
      int v135 = 1;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_LOCK_BUTTON"])
    {
      int v135 = 2;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_BLUETOOTH_HEADSET_BUTTON"])
    {
      int v135 = 3;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_STEERING_WHEEL_BUTTON"])
    {
      int v135 = 4;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TOUCHBAR_BUTTON"])
    {
      int v135 = 5;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_KEYBOARD_SHORTCUT"])
    {
      int v135 = 6;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_APPLICATION_ICON"])
    {
      int v135 = 7;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_WIRED_MICROPHONE_BUTTON"])
    {
      int v135 = 8;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_REMOTE_MICROPHONE_BUTTON"])
    {
      int v135 = 9;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_BANNER"])
    {
      int v135 = 10;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARD_SECTION"])
    {
      int v135 = 11;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TAP_TO_EDIT"])
    {
      int v135 = 12;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_STRUCTURED_DICTATION"])
    {
      int v135 = 13;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SOFT_BUTTON"])
    {
      int v135 = 14;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_AUTO_PROMPT"])
    {
      int v135 = 15;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_RAISE_TO_SPEAK"])
    {
      int v135 = 16;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_VOICE_TRIGGER"])
    {
      int v135 = 17;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_HARDWARE_BUTTON"])
    {
      int v135 = 18;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_HANDOFF"])
    {
      int v135 = 19;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TRANSCRIPT_ELEMENT"])
    {
      int v135 = 20;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_BLUETOOTH_HEADSET_VOICE_TRIGGER"])
    {
      int v135 = 21;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_MENU_BAR"])
    {
      int v135 = 22;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DOCK_ICON"])
    {
      int v135 = 23;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_HOME_BUTTON"])
    {
      int v135 = 24;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_VOICETRIGGER"])
    {
      int v135 = 25;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_GATEKEEPER"])
    {
      int v135 = 26;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_SIRI_BUTTON"])
    {
      int v135 = 27;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_IN_APP_SIRI_AFFORDANCE"])
    {
      int v135 = 28;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_BREADCRUMB"])
    {
      int v135 = 29;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_GUIDE_BUTTON"])
    {
      int v135 = 30;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TRANSCRIPT_VERTICAL_SWIPE"])
    {
      int v135 = 31;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SPOTLIGHT_SUGGESTION"])
    {
      int v135 = 32;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SPOTLIGHT_ASK_SIRI"])
    {
      int v135 = 33;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_COMPLICATION"])
    {
      int v135 = 34;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TV_REMOTE_BUTTON"])
    {
      int v135 = 35;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_NONAPPLE_REMOTE"])
    {
      int v135 = 36;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_REMOTE_APP"])
    {
      int v135 = 37;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_REMOTE_UI"])
    {
      int v135 = 38;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON"])
    {
      int v135 = 39;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_INPUT_FIELD_MIC_BUTTON"])
    {
      int v135 = 40;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SPEECH_API"])
    {
      int v135 = 41;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_TV_REMOTE"])
    {
      int v135 = 42;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_SHORTCUT_ENROLLMENT"])
    {
      int v135 = 43;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_TRIGGER_ENROLLMENT"])
    {
      int v135 = 44;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_TRIGGER_PROXIMITY_ENROLLMENT"])
    {
      int v135 = 45;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_SECONDARY_DEVICE"])
    {
      int v135 = 46;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE"])
    {
      int v135 = 47;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_TRIGGERLESS"])
    {
      int v135 = 48;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_NOTIFICATION"])
    {
      int v135 = 49;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TEST_AUTOMATION"])
    {
      int v135 = 50;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_WAVEFORM_GLYPH_BUTTON"])
    {
      int v135 = 51;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_AUTO_PROMPT"])
    {
      int v135 = 52;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_GLOBE_BUTTON"])
    {
      int v135 = 53;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_LONG_PRESS"])
    {
      int v135 = 54;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_ACCESSIBILITY_BACKTAP"])
    {
      int v135 = 55;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_VOICECOMMAND_BUTTON"])
    {
      int v135 = 56;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_VOICECOMMAND_BUTTON"])
    {
      int v135 = 57;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_APPLETV_REMOTE_DEVICE"])
    {
      int v135 = 58;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_MESSAGE_SEND_BUTTON"])
    {
      int v135 = 59;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_WITH_INPUT_SWITCHER"])
    {
      int v135 = 60;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_INPUT_FIELD_MIC_BUTTON_FIRST_RESPONDER"])
    {
      int v135 = 61;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_SAFARI_MIC_BUTTON_IN_ADDRESS_BAR"])
    {
      int v135 = 62;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_SAFARI_MIC_BUTTON_IN_ADDRESS_BAR_FIRST_RESPONDER"])
    {
      int v135 = 63;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WHILE_SEARCH_BAR_VISIBLE"])
    {
      int v135 = 64;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WITH_INPUT_SWITCHER_WHILE_SEARCH_MIC_VISIBLE"])
    {
      int v135 = 65;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WHILE_SAFARI_MIC_VISIBLE"])
    {
      int v135 = 66;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WITH_INPUT_SWITCHER_WHILE_SAFARI_MIC_VISIBLE"])
    {
      int v135 = 67;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_FROM_QUICKBOARD"])
    {
      int v135 = 68;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MESSAGES_TEXT_FIELD_MIC_BUTTON"])
    {
      int v135 = 69;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MIC_ICON_UCBBAR"])
    {
      int v135 = 70;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_GLOBE_BUTTON_SHORTCUT"])
    {
      int v135 = 71;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_STANDARD_SHORTCUT"])
    {
      int v135 = 72;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_CALL"])
    {
      int v135 = 73;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_NOTIFICATION"])
    {
      int v135 = 74;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_AIRPODS_MAX_BUTTON_PRESS"])
    {
      int v135 = 75;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_AUTO_START"])
    {
      int v135 = 76;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_MIC_BUTTON_PRESSED"])
    {
      int v135 = 77;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_LANGUAGE_PICKER_ITEM_SELECTED"])
    {
      int v135 = 78;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_FLEXIBLE_FOLLOW_UPS"])
    {
      int v135 = 79;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_JS_VOICE_TRIGGER"])
    {
      int v135 = 80;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MESSAGES_TEXT_FIELD_MIC_BUTTON_WHILE_KEYBOARD_NOT_VISIBLE"])
    {
      int v135 = 81;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_POP_UP_UI_LANGUAGE_SWITCHER_ICON"])
    {
      int v135 = 82;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_LONG_PRESS_TEXT_INPUT_FIELD"])
    {
      int v135 = 83;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_DROP_IN"])
    {
      int v135 = 84;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TYPE_TO_SIRI"])
    {
      int v135 = 85;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_PINCH"])
    {
      int v135 = 87;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_DICTATION_GAZE"])
    {
      int v135 = 88;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_EXECUTE_ON_REMOTE_REQUEST"])
    {
      int v135 = 89;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_WATCH_GESTURE_PRIMARY"])
    {
      int v135 = 90;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_QUICK_TYPE_TO_SIRI"])
    {
      int v135 = 91;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_HEAD_GESTURE"])
    {
      int v135 = 92;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SOFT_KEYBOARD_BUTTON"])
    {
      int v135 = 93;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_WRITING_TOOLS"])
    {
      int v135 = 94;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_GENERATIVE_FIELD"])
    {
      int v135 = 95;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_SUGGESTION"])
    {
      int v135 = 96;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_TYPE_TO_SIRI_CONTROL_CENTER"])
    {
      int v135 = 97;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_VISUAL_INTELLIGENCE"])
    {
      int v135 = 98;
    }
    else if ([v134 isEqualToString:@"INVOCATIONSOURCE_VISUAL_INTELLIGENCE_QUICK_TYPE"])
    {
      int v135 = 99;
    }
    else
    {
      int v135 = 0;
    }
    int v337 = v135;
  }

  char v315 = 0;
LABEL_396:
  uint64_t v137 = v361[402];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v339 + 16))(v137, v283, v115);
  v357(v137, 0, 1, v115);
  sub_25622F360(v355, v137 + v340[5], &qword_269F53D68);
  sub_25622F360(v353, v137 + v340[6], &qword_269F53D68);
  sub_2562E2F40();
  if ((~*(void *)&v138 & 0x7FF0000000000000) != 0)
  {
    if (v138 <= -1.0) {
      goto LABEL_468;
    }
    if (v138 >= 1.84467441e19) {
      goto LABEL_469;
    }
    if (!is_mul_ok((unint64_t)v138, 0x3E8uLL)) {
      goto LABEL_470;
    }
    uint64_t v139 = v361[402];
    uint64_t v140 = v139 + v340[7];
    *(void *)uint64_t v140 = 1000 * (unint64_t)v138;
    *(unsigned char *)(v140 + 8) = 0;
    *(void *)(v139 + v340[8]) = v348;
    uint64_t v141 = v139 + v340[9];
    *(void *)uint64_t v141 = v323;
    *(unsigned char *)(v141 + 8) = v322;
    uint64_t v142 = v139 + v340[10];
    *(void *)uint64_t v142 = v321;
    *(unsigned char *)(v142 + 8) = v320;
    type metadata accessor for DeviceUsageMetricsBuilderImpl(0);
    swift_allocObject();
    uint64_t v143 = sub_2562D085C();
    uint64_t v144 = swift_task_alloc();
    sub_25622F360(v360, v144, &qword_269F53D68);
    uint64_t v145 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_assistantId;
    swift_beginAccess();
    id v358 = v348;
    sub_2562571F4(v144, v145, &qword_269F53D68);
    swift_endAccess();
    swift_task_dealloc();
    v361[290] = 0x5F746375646F7270;
    v361[291] = 0xEA00000000006469;
    sub_2562E39D0();
    sub_256255764(v267, v63, v257);
    sub_2562571A0(v267);
    if (v361[264])
    {
      if (swift_dynamicCast())
      {
        uint64_t v146 = v361[359];
        if (v146)
        {
          uint64_t v147 = v361[358];
          if (v147 == 0x4E41545349535341 && v146 == 0xE900000000000054 || (sub_2562E3C90() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            char v148 = 1;
            goto LABEL_408;
          }
          if (v147 == 0x4F49544154434944 && v146 == 0xE90000000000004ELL)
          {
            swift_bridgeObjectRelease();
            char v148 = 2;
            goto LABEL_408;
          }
          char v200 = sub_2562E3C90();
          swift_bridgeObjectRelease();
          if (v200)
          {
            char v148 = 2;
            goto LABEL_408;
          }
        }
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v257, &qword_269F543D8);
    }
    char v148 = 0;
LABEL_408:
    uint64_t v149 = v361[402];
    uint64_t v150 = v361[400];
    uint64_t v151 = v361[397];
    uint64_t v152 = v361[396];
    *(unsigned char *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_productId) = v148;
    sub_2562AC108(v149, v151, type metadata accessor for EventMetadata);
    (*v273)(v151, 0, 1, v150);
    sub_25622F360(v151, v152, &qword_269F54398);
    uint64_t v153 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_eventMetadata;
    swift_beginAccess();
    sub_2562571F4(v152, v153, &qword_269F54398);
    swift_endAccess();
    sub_25622F3C4(v151, &qword_269F54398);
    v361[284] = 0x745F656369766564;
    v361[285] = 0xEB00000000657079;
    sub_2562E39D0();
    sub_256255764(v268, v63, v264);
    sub_2562571A0(v268);
    if (v361[196])
    {
      int v154 = swift_dynamicCast();
      uint64_t v155 = v361[356];
      uint64_t v156 = v361[357];
      if (!v154)
      {
        uint64_t v155 = 0;
        uint64_t v156 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v264, &qword_269F543D8);
      uint64_t v155 = 0;
      uint64_t v156 = 0;
    }
    uint64_t v157 = (void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_deviceType);
    *uint64_t v157 = v155;
    v157[1] = v156;
    swift_bridgeObjectRelease();
    strcpy((char *)v361 + 2304, "system_build");
    *((unsigned char *)v361 + 2317) = 0;
    *((_WORD *)v361 + 1159) = -5120;
    sub_2562E39D0();
    sub_256255764(v274, v63, v261);
    sub_2562571A0(v274);
    if (v361[224])
    {
      int v158 = swift_dynamicCast();
      uint64_t v159 = v361[354];
      uint64_t v160 = v361[355];
      if (!v158)
      {
        uint64_t v159 = 0;
        uint64_t v160 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v261, &qword_269F543D8);
      uint64_t v159 = 0;
      uint64_t v160 = 0;
    }
    uint64_t v161 = (void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_systemBuild);
    *uint64_t v161 = v159;
    v161[1] = v160;
    swift_bridgeObjectRelease();
    uint64_t v162 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_programCode;
    *(_DWORD *)uint64_t v162 = v325;
    *(unsigned char *)(v162 + 4) = v324;
    uint64_t v163 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dataSharingOptInStatus;
    *(_DWORD *)uint64_t v163 = v329;
    *(unsigned char *)(v163 + 4) = v328;
    uint64_t v164 = *(void **)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriInputLocale);
    *(void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriInputLocale) = v352;
    id v165 = v352;

    uint64_t v166 = *(void **)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dictationLocale);
    *(void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_dictationLocale) = v350;
    id v167 = v350;

    uint64_t v168 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_viewInterface;
    *(_DWORD *)uint64_t v168 = v335;
    *(unsigned char *)(v168 + 4) = v336;
    v361[294] = 0xD000000000000012;
    v361[295] = 0x80000002562EC6E0;
    sub_2562E39D0();
    sub_256255764(v269, v63, v258);
    sub_2562571A0(v269);
    if (v361[260])
    {
      int v169 = swift_dynamicCast();
      uint64_t v170 = v361[352];
      uint64_t v171 = v361[353];
      if (!v169)
      {
        uint64_t v170 = 0;
        uint64_t v171 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v258, &qword_269F543D8);
      uint64_t v170 = 0;
      uint64_t v171 = 0;
    }
    uint64_t v172 = (void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceVendorId);
    *uint64_t v172 = v170;
    v172[1] = v171;
    swift_bridgeObjectRelease();
    v361[300] = 0xD000000000000013;
    v361[301] = 0x80000002562EC700;
    sub_2562E39D0();
    sub_256255764(v270, v63, v256);
    sub_2562571A0(v270);
    if (v361[268])
    {
      int v173 = swift_dynamicCast();
      uint64_t v174 = v361[350];
      uint64_t v175 = v361[351];
      if (!v173)
      {
        uint64_t v174 = 0;
        uint64_t v175 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v256, &qword_269F543D8);
      uint64_t v174 = 0;
      uint64_t v175 = 0;
    }
    uint64_t v176 = (void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_audioInterfaceProductId);
    void *v176 = v174;
    v176[1] = v175;
    swift_bridgeObjectRelease();
    uint64_t v177 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrLocation;
    *(_DWORD *)uint64_t v177 = *(_DWORD *)type;
    *(unsigned char *)(v177 + 4) = v331;
    uint64_t v178 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_nlLocation;
    *(_DWORD *)uint64_t v178 = v327;
    *(unsigned char *)(v178 + 4) = v326;
    v361[306] = 0x616D6F645F627573;
    v361[307] = 0xEA00000000006E69;
    sub_2562E39D0();
    sub_256255764(v271, v63, v259);
    sub_2562571A0(v271);
    if (v361[244])
    {
      int v179 = swift_dynamicCast();
      uint64_t v180 = v361[348];
      uint64_t v181 = v361[349];
      if (!v179)
      {
        uint64_t v180 = 0;
        uint64_t v181 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v259, &qword_269F543D8);
      uint64_t v180 = 0;
      uint64_t v181 = 0;
    }
    uint64_t v182 = (void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_subDomain);
    *uint64_t v182 = v180;
    v182[1] = v181;
    swift_bridgeObjectRelease();
    v361[312] = 0x746E635F6E727574;
    v361[313] = 0xE800000000000000;
    sub_2562E39D0();
    sub_256255764(v272, v63, v260);
    sub_2562571A0(v272);
    if (v361[240])
    {
      int v183 = swift_dynamicCast();
      int v184 = *((_DWORD *)v361 + 824);
      if (!v183) {
        int v184 = 0;
      }
      char v185 = v183 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v260, &qword_269F543D8);
      int v184 = 0;
      char v185 = 1;
    }
    uint64_t v186 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_totalTurnCount;
    *(_DWORD *)uint64_t v186 = v184;
    *(unsigned char *)(v186 + 4) = v185;
    strcpy((char *)v361 + 2544, "user_turn_cnt");
    *((_WORD *)v361 + 1279) = -4864;
    sub_2562E39D0();
    sub_256255764(v275, v63, v262);
    sub_2562571A0(v275);
    if (v361[220])
    {
      int v187 = swift_dynamicCast();
      int v188 = *((_DWORD *)v361 + 822);
      if (!v187) {
        int v188 = 0;
      }
      char v189 = v187 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v262, &qword_269F543D8);
      int v188 = 0;
      char v189 = 1;
    }
    uint64_t v190 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_validTurnCount;
    *(_DWORD *)uint64_t v190 = v188;
    *(unsigned char *)(v190 + 4) = v189;
    strcpy((char *)v361 + 2592, "asr_turn_cnt");
    *((unsigned char *)v361 + 2605) = 0;
    *((_WORD *)v361 + 1303) = -5120;
    sub_2562E39D0();
    sub_256255764(v276, v63, v263);
    sub_2562571A0(v276);
    if (v361[208])
    {
      int v191 = swift_dynamicCast();
      int v192 = *((_DWORD *)v361 + 821);
      if (!v191) {
        int v192 = 0;
      }
      char v193 = v191 ^ 1;
    }
    else
    {
      sub_25622F3C4((uint64_t)v263, &qword_269F543D8);
      int v192 = 0;
      char v193 = 1;
    }
    uint64_t v194 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_asrTurnCount;
    *(_DWORD *)uint64_t v194 = v192;
    *(unsigned char *)(v194 + 4) = v193;
    v361[330] = 0xD000000000000014;
    v361[331] = 0x80000002562EE040;
    sub_2562E39D0();
    sub_256255764(v277, v63, v265);
    sub_2562571A0(v277);
    if (v361[192])
    {
      int v195 = swift_dynamicCast();
      uint64_t v196 = v361[340];
      uint64_t v197 = v361[341];
      if (!v195)
      {
        uint64_t v196 = 0;
        uint64_t v197 = 0;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v265, &qword_269F543D8);
      uint64_t v196 = 0;
      uint64_t v197 = 0;
    }
    uint64_t v198 = (void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_siriResponseId);
    *uint64_t v198 = v196;
    v198[1] = v197;
    swift_bridgeObjectRelease();
    uint64_t v199 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_responseCategory;
    *(_DWORD *)uint64_t v199 = v319;
    *(unsigned char *)(v199 + 4) = v318;
    *(void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_turnIds) = v317;
    swift_bridgeObjectRelease();
    v361[336] = 0xD00000000000001BLL;
    v361[337] = 0x80000002562EC720;
    sub_2562E39D0();
    sub_256255764(v278, v63, v266);
    swift_bridgeObjectRelease();
    sub_2562571A0(v278);
    if (v361[172])
    {
      int v54 = swift_dynamicCast();
      char v55 = *((unsigned char *)v361 + 3300);
      if (!v54) {
        char v55 = 2;
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)v266, &qword_269F543D8);
      char v55 = 2;
    }
    uint64_t v56 = v361[402];
    uint64_t v57 = v361[399];
    uint64_t v58 = v361[398];
    *(unsigned char *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_isIntelligenceEngineRequest) = v55;
    *(void *)(v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_ieRouting) = v316;
    swift_bridgeObjectRelease();
    uint64_t v59 = v143 + OBJC_IVAR____TtC16MetricsFramework29DeviceUsageMetricsBuilderImpl_invocationSource;
    *(_DWORD *)uint64_t v59 = v337;
    *(unsigned char *)(v59 + 4) = v315;
    sub_2562D0130(v57);
    swift_release();
    sub_2562AC108(v57, v58, type metadata accessor for DeviceUsageMetrics);
    sub_256255F6C();
    uint64_t v60 = *(void *)(v361[391] + 16);
    sub_256255FF8(v60);
    uint64_t v61 = sub_256256074(v60, v58);
    nullsub_1(v61);

    sub_25627A350(v57, type metadata accessor for DeviceUsageMetrics);
    sub_25627A350(v56, type metadata accessor for EventMetadata);
    sub_25622F3C4(v353, &qword_269F53D68);
    sub_25622F3C4(v355, &qword_269F53D68);
    sub_25622F3C4(v360, &qword_269F53D68);
    swift_task_dealloc();
    goto LABEL_28;
  }
  __break(1u);
LABEL_468:
  __break(1u);
LABEL_469:
  __break(1u);
LABEL_470:
  __break(1u);
LABEL_471:
  __break(1u);
LABEL_472:
  __break(1u);
LABEL_473:
  __break(1u);
LABEL_474:
  __break(1u);
LABEL_475:
  __break(1u);
LABEL_476:
  __break(1u);
LABEL_477:

  __break(1u);
}

uint64_t sub_2562AB560(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v26 = a2;
  uint64_t v5 = sub_2562E33C0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_2562E3380();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v23[-v13];
  id v15 = sub_2562E3390();
  sub_2562E33D0();
  int v24 = sub_2562E3820();
  uint64_t result = sub_2562E38A0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    id v17 = v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v26 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v17 = &v27;
LABEL_10:
  swift_retain();
  sub_2562E3400();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == *MEMORY[0x263F90238])
  {
    BOOL v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    BOOL v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v20 = 0;
  os_signpost_id_t v21 = sub_2562E3370();
  _os_signpost_emit_with_name_impl(&dword_256226000, v15, (os_signpost_type_t)v24, v21, v17, v19, v20, 2u);
  MEMORY[0x25A2A5190](v20, -1, -1);

  id v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

unint64_t sub_2562AB870()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
  *(void *)(inited + 32) = 0xD000000000000018;
  *(void *)(inited + 40) = 0x80000002562EC840;
  sub_2562AC518();
  *(void *)(inited + 48) = sub_2562E3890();
  return sub_256246D84(inited);
}

void sub_2562AB900(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >= 1)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_2562E3410();
    os_log_type_t v7 = sub_2562E3800();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      aBlock[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_256229738(a2, a3, aBlock);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v6, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v9, -1, -1);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v10 = (void *)sub_2562E3550();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    aBlock[4] = (uint64_t)sub_2562578B8;
    aBlock[5] = (uint64_t)v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_25624FDEC;
    aBlock[3] = (uint64_t)&block_descriptor_78_0;
    uint64_t v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);
  }
}

uint64_t SiriDigestMetricsCalculator.deinit()
{
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL, &qword_269F53D10);
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_calendar;
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t SiriDigestMetricsCalculator.__deallocating_deinit()
{
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_sqlFileURL, &qword_269F53D10);
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_oddId;
  uint64_t v4 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework27SiriDigestMetricsCalculator_calendar;
  uint64_t v6 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_2562ABDCC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25622844C;
  return sub_2562A65A8(a1);
}

id sub_2562ABE68()
{
  id result = sub_2562ABE88();
  qword_269F5E468 = (uint64_t)result;
  return result;
}

id sub_2562ABE88()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
  uint64_t v1 = (void *)sub_2562E3550();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F54E10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E3070();
  uint64_t v5 = sub_2562E3090();
  uint64_t v6 = *(void *)(v5 - 8);
  os_log_type_t v7 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    os_log_type_t v7 = (void *)sub_2562E3080();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  objc_msgSend(v0, sel_setTimeZone_, v7);

  return v0;
}

char *sub_2562AC010()
{
  return &v1;
}

uint64_t sub_2562AC020()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2562AC058()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC068()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC078()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2562AC0B0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2562AC0E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC0F8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2562AC170()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2562AC180()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2562AC1B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC1C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC1D8()
{
  return sub_256256174(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2562AC1E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25625619C(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_2562AC1E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562AC1F8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for SiriDigestMetricsResults()
{
  return &type metadata for SiriDigestMetricsResults;
}

uint64_t sub_2562AC230()
{
  return type metadata accessor for SiriDigestMetricsCalculator();
}

uint64_t type metadata accessor for SiriDigestMetricsCalculator()
{
  uint64_t result = qword_269F55550;
  if (!qword_269F55550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2562AC284()
{
  sub_25622F25C();
  if (v0 <= 0x3F)
  {
    sub_2562E3430();
    if (v1 <= 0x3F)
    {
      sub_2562E2FD0();
      if (v2 <= 0x3F)
      {
        sub_2562E3060();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for SiriDigestMetricsCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriDigestMetricsCalculator);
}

uint64_t dispatch thunk of SiriDigestMetricsCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SiriDigestMetricsCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

unint64_t sub_2562AC518()
{
  unint64_t result = qword_269F54438;
  if (!qword_269F54438)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F54438);
  }
  return result;
}

uint64_t sub_2562AC558()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t SpeakerIdSamplingCalculator.__allocating_init(defaults:logger:sqlFileURL:bookmarkService:samplingUtils:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  sub_2562E3020();
  *(void *)(v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_defaults) = a1;
  uint64_t v13 = v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger;
  uint64_t v14 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  sub_25622F514(a3, v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_bookmarkService) = a4;
  id v15 = (void *)(v12 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_samplingUtils);
  *id v15 = a5;
  v15[1] = a6;
  return v12;
}

uint64_t SpeakerIdSamplingResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerIdSamplingResults.eventStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*SpeakerIdSamplingResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SpeakerIdSamplingResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerIdSamplingResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SpeakerIdSamplingResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t SpeakerIdSamplingResults.SpeakerIdSamplingData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerIdSamplingResults.SpeakerIdSamplingData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SpeakerIdSamplingResults.SpeakerIdSamplingData.modify())()
{
  return nullsub_1;
}

uint64_t SpeakerIdSamplingCalculator.init(defaults:logger:sqlFileURL:bookmarkService:samplingUtils:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_2562E3020();
  *(void *)(v6 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_defaults) = a1;
  uint64_t v13 = v6 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger;
  uint64_t v14 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  sub_25622F514(a3, v6 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v6 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_bookmarkService) = a4;
  id v15 = (void *)(v6 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_samplingUtils);
  *id v15 = a5;
  v15[1] = a6;
  return v6;
}

uint64_t sub_2562AC8A0(uint64_t a1)
{
  v2[289] = v1;
  v2[288] = a1;
  v2[290] = type metadata accessor for SpeakerIdSamplingData(0);
  v2[291] = swift_task_alloc();
  v2[292] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2562AC948, 0, 0);
}

uint64_t sub_2562AC948()
{
  uint64_t v377 = v0;
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Sampling Calculator invoked: SpeakerIdSamplingCalculator", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = *(void *)(v372 + 2312);

  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v372 + 2200) = MEMORY[0x263F8EE78];
  uint64_t v6 = sub_2562E2F80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_task_alloc();
  sub_2562E30F0();
  uint64_t v9 = sub_2562E30B0();
  uint64_t v355 = v6;
  uint64_t v292 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v292(v8, v6);
  swift_task_dealloc();
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_samplingUtils);
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_samplingUtils + 8);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v10, v11);
  if (!v13)
  {
    uint64_t v31 = sub_2562E3410();
    os_log_type_t v32 = sub_2562E3800();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_256226000, v31, v32, "SpeakerIdSelectionCalculator: Unable to retrieve the siri language.", v33, 2u);
      MEMORY[0x25A2A5190](v33, -1, -1);
    }

    uint64_t v34 = MEMORY[0x263F8EE78];
    uint64_t v35 = v372;
    goto LABEL_15;
  }
  uint64_t v14 = v12;
  unint64_t v15 = v13;
  int v337 = (uint64_t *)(v372 + 2200);
  uint64_t v336 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v13, v10, v11);
  uint64_t v17 = v16;
  uint64_t v295 = v14;
  if ((*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v11 + 8))(v14, v15, v10, v11) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  unint64_t v301 = v15;
  uint64_t v335 = v17;
  uint64_t v293 = v11;
  uint64_t v294 = v10;
  uint64_t v18 = sub_2562E3410();
  os_log_type_t v19 = sub_2562E37F0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_256226000, v18, v19, "SQL calculator invoked: SpeakerIdSamplingCalculator", v20, 2u);
    MEMORY[0x25A2A5190](v20, -1, -1);
  }
  uint64_t v21 = *(void *)(v372 + 2312);

  id v22 = *(void **)(v21 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_defaults);
  uint64_t v23 = (void *)sub_2562E3550();
  id v373 = v22;
  unsigned int v24 = objc_msgSend(v22, sel_BOOLForKey_, v23);

  uint64_t v25 = sub_2562E3410();
  os_log_type_t v26 = sub_2562E37F0();
  BOOL v27 = os_log_type_enabled(v25, v26);
  if (v24)
  {
    if (!v27) {
      goto LABEL_19;
    }
    id v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v28 = 0;
    os_log_type_t v29 = v26;
    uint64_t v30 = "SpeakerIdSamplingCalculator: Include current date data for aggregation.";
  }
  else
  {
    if (!v27) {
      goto LABEL_19;
    }
    id v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v28 = 0;
    os_log_type_t v29 = v26;
    uint64_t v30 = "SpeakerIdSamplingCalculator: current date data NOT included for aggregation.";
  }
  _os_log_impl(&dword_256226000, v25, v29, v30, v28, 2u);
  MEMORY[0x25A2A5190](v28, -1, -1);
LABEL_19:
  uint64_t v38 = *(void *)(v372 + 2312);

  uint64_t v39 = v38 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_sqlFileURL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v40 = swift_task_alloc();
  sub_25622F360(v39, v40, &qword_269F53D10);
  uint64_t v41 = sub_2562E2E30();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v43(v40, 1, v41) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25622F3C4(v40, &qword_269F53D10);
    swift_task_dealloc();
    sub_256246AD8();
    swift_allocError();
    *id v44 = 9;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v37 = *(uint64_t (**)(void))(v372 + 8);
    goto LABEL_23;
  }
  uint64_t v284 = v7;
  uint64_t v277 = v9;
  sub_25622F3C4(v40, &qword_269F53D10);
  swift_task_dealloc();
  uint64_t v45 = swift_task_alloc();
  sub_25622F360(v39, v45, &qword_269F53D10);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v43)(v45, 1, v41);
  if (result == 1)
  {
LABEL_475:
    __break(1u);
    return result;
  }
  sub_2562E35A0();
  swift_task_alloc();
  sub_2562E3590();
  uint64_t v47 = sub_2562E3530();
  unint64_t v49 = v48;
  uint64_t v365 = v47;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v41);
  swift_task_dealloc();
  swift_bridgeObjectRetain_n();
  uint64_t v50 = sub_2562E3410();
  uint64_t v51 = sub_2562E37F0();
  if (os_log_type_enabled(v50, (os_log_type_t)v51))
  {
    char v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v376[0] = v54;
    *(_DWORD *)char v53 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v372 + 2272) = sub_256229738(v365, v49, v376);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v50, (os_log_type_t)v51, "SQL: %s", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v54, -1, -1);
    MEMORY[0x25A2A5190](v53, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  uint64_t v55 = swift_task_alloc();
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56);
  v56(v55, 1, 1, v355);
  uint64_t v57 = (void *)sub_2562E3110();
  uint64_t v345 = v56;
  uint64_t v291 = v372 + 16;
  uint64_t v334 = v372 + 56;
  uint64_t v333 = v372 + 96;
  uint64_t v332 = v372 + 136;
  uint64_t v331 = v372 + 176;
  uint64_t v330 = v372 + 216;
  uint64_t v329 = v372 + 256;
  uint64_t v328 = v372 + 296;
  uint64_t v344 = v372 + 336;
  uint64_t v327 = v372 + 376;
  uint64_t v326 = v372 + 416;
  uint64_t v343 = v372 + 456;
  uint64_t v325 = v372 + 496;
  uint64_t v324 = v372 + 536;
  uint64_t v323 = v372 + 576;
  uint64_t v322 = v372 + 616;
  uint64_t v321 = v372 + 656;
  uint64_t v320 = v372 + 696;
  uint64_t v319 = v372 + 736;
  uint64_t v318 = v372 + 776;
  unint64_t v317 = (_OWORD *)(v372 + 816);
  v316 = (_OWORD *)(v372 + 848);
  char v315 = (_OWORD *)(v372 + 880);
  uint64_t v314 = (_OWORD *)(v372 + 912);
  uint64_t v313 = (_OWORD *)(v372 + 976);
  uint64_t v312 = (_OWORD *)(v372 + 1008);
  uint64_t v311 = (_OWORD *)(v372 + 1040);
  uint64_t v310 = (_OWORD *)(v372 + 1072);
  uint64_t v342 = (_OWORD *)(v372 + 1104);
  uint64_t v309 = (_OWORD *)(v372 + 1136);
  uint64_t v308 = (_OWORD *)(v372 + 1168);
  uint64_t v307 = (_OWORD *)(v372 + 1200);
  uint64_t v306 = (_OWORD *)(v372 + 1232);
  uint64_t v305 = (_OWORD *)(v372 + 1264);
  uint64_t v304 = (_OWORD *)(v372 + 1296);
  uint64_t v303 = (_OWORD *)(v372 + 1328);
  uint64_t v341 = (_OWORD *)(v372 + 1392);
  uint64_t v302 = (_OWORD *)(v372 + 1424);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D40);
  sub_2562E3300();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2562E4C90;
  id v58 = v57;
  uint64_t v59 = sub_2562E3310();
  uint64_t v61 = v60;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v59;
  *(void *)(v62 + 24) = v61;
  sub_2562E32F0();
  uint64_t v63 = (void *)sub_2562E3550();
  unsigned int v64 = objc_msgSend(v373, sel_BOOLForKey_, v63);

  uint64_t v281 = v55;
  uint64_t v275 = v58;
  if (v64) {

  }
  id v65 = objc_allocWithZone((Class)sub_2562E3260());
  uint64_t v66 = sub_2562E3230();
  uint64_t v67 = v284;
  unint64_t v340 = (id *)(v372 + 2248);
  _s16MetricsFramework13SamplingUtilsC03getC16CountPerDayLimit4fromSiSo14NSUserDefaultsC_tFZ_0(v373);
  uint64_t v69 = v68;
  uint64_t v274 = (void *)v66;
  sub_2562E3250();
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_2562B1BC8(v69);
  uint64_t v276 = v70 + 64;
  uint64_t v279 = v70;
  uint64_t v71 = -1 << *(unsigned char *)(v70 + 32);
  if (-v71 < 64) {
    uint64_t v72 = ~(-1 << -(char)v71);
  }
  else {
    uint64_t v72 = -1;
  }
  unint64_t v73 = v72 & *(void *)(v70 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F555A0);
  uint64_t v74 = swift_task_alloc();
  int64_t v282 = 0;
  uint64_t v75 = (void (**)(uint64_t, uint64_t, uint64_t))(v284 + 16);
  int v286 = (void (**)(uint64_t, uint64_t, uint64_t))(v284 + 32);
  uint64_t v288 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v284 + 48);
  int64_t v278 = (unint64_t)(63 - v71) >> 6;
  for (i = v74; ; uint64_t v74 = i)
  {
    uint64_t result = swift_task_alloc();
    uint64_t v76 = result;
    if (v73)
    {
      unint64_t v77 = __clz(__rbit64(v73));
      uint64_t v78 = (v73 - 1) & v73;
      unint64_t v79 = v77 | (v282 << 6);
      uint64_t v80 = v281;
LABEL_38:
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v67 + 16))(result, *(void *)(v279 + 48) + *(void *)(v67 + 72) * v79, v355);
      uint64_t v81 = *(void *)(v279 + 56);
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F555A8);
      *(void *)(v76 + *(int *)(v82 + 48)) = *(void *)(v81 + 8 * v79);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v76, 0, 1, v82);
      swift_bridgeObjectRetain();
      uint64_t v83 = v294;
      goto LABEL_57;
    }
    int64_t v84 = v282 + 1;
    if (__OFADD__(v282, 1))
    {
      __break(1u);
LABEL_474:
      __break(1u);
      goto LABEL_475;
    }
    uint64_t v80 = v281;
    uint64_t v83 = v294;
    if (v84 < v278)
    {
      unint64_t v85 = *(void *)(v276 + 8 * v84);
      if (v85) {
        goto LABEL_42;
      }
      int64_t v86 = v282 + 2;
      ++v282;
      if (v84 + 1 < v278)
      {
        unint64_t v85 = *(void *)(v276 + 8 * v86);
        if (v85) {
          goto LABEL_45;
        }
        int64_t v282 = v84 + 1;
        if (v84 + 2 < v278)
        {
          unint64_t v85 = *(void *)(v276 + 8 * (v84 + 2));
          if (v85)
          {
            v84 += 2;
            goto LABEL_42;
          }
          int64_t v86 = v84 + 3;
          int64_t v282 = v84 + 2;
          if (v84 + 3 < v278)
          {
            unint64_t v85 = *(void *)(v276 + 8 * v86);
            if (v85)
            {
LABEL_45:
              int64_t v84 = v86;
LABEL_42:
              uint64_t v78 = (v85 - 1) & v85;
              unint64_t v79 = __clz(__rbit64(v85)) + (v84 << 6);
              int64_t v282 = v84;
              goto LABEL_38;
            }
            while (1)
            {
              int64_t v84 = v86 + 1;
              if (__OFADD__(v86, 1)) {
                goto LABEL_474;
              }
              if (v84 >= v278) {
                break;
              }
              unint64_t v85 = *(void *)(v276 + 8 * v84);
              ++v86;
              if (v85) {
                goto LABEL_42;
              }
            }
            int64_t v282 = v278 - 1;
          }
        }
      }
    }
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F555A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v76, 1, 1, v87);
    uint64_t v78 = 0;
LABEL_57:
    sub_25622F514(v76, v74, &qword_269F555A0);
    swift_task_dealloc();
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F555A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v74, 1, v88) == 1) {
      break;
    }
    unint64_t v283 = v78;
    uint64_t v89 = swift_task_alloc();
    uint64_t v289 = *(void *)(v74 + *(int *)(v88 + 48));
    char v285 = *v286;
    (*v286)(v89, v74, v355);
    uint64_t v90 = swift_task_alloc();
    id v91 = *v75;
    uint64_t v290 = v89;
    (*v75)(v90, v89, v355);
    int v92 = sub_2562E3410();
    os_log_type_t v93 = sub_2562E37F0();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      v376[0] = v95;
      *(_DWORD *)uint64_t v94 = 136315138;
      sub_256257778((unint64_t *)&qword_269F53E00);
      uint64_t v96 = sub_2562E3C80();
      *(void *)(v94 + 4) = sub_256229738(v96, v97, v376);
      swift_bridgeObjectRelease();
      v292(v90, v355);
      _os_log_impl(&dword_256226000, v92, v93, "#SpeakerIdSamplingCalculator: processing for date %s", (uint8_t *)v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v95, -1, -1);
      MEMORY[0x25A2A5190](v94, -1, -1);
    }
    else
    {

      v292(v90, v355);
    }
    swift_task_dealloc();
    uint64_t v98 = swift_task_alloc();
    sub_25622F360(v80, v98, &qword_269F53DB0);
    uint64_t v99 = *v288;
    unsigned int v100 = (*v288)(v98, 1, v355);
    sub_25622F3C4(v98, &qword_269F53DB0);
    swift_task_dealloc();
    uint64_t v101 = v80;
    uint64_t v102 = swift_task_alloc();
    v91(v102, v290, v355);
    uint64_t v287 = v99;
    if (v100 == 1)
    {
      v292(v102, v355);
LABEL_67:
      sub_25622F3C4(v101, &qword_269F53DB0);
      v91(v101, v290, v355);
      v345(v101, 0, 1, v355);
      uint64_t v106 = swift_task_alloc();
      v91(v106, v290, v355);
      uint64_t v369 = swift_task_alloc();
      v91(v369, v106, v355);
      unint64_t v107 = (*(unsigned __int8 *)(v284 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v284 + 80);
      uint64_t v108 = swift_allocObject();
      v285(v108 + v107, v106, v355);
      uint64_t v109 = swift_allocObject();
      *(void *)(v109 + 16) = sub_2562B36A8;
      *(void *)(v109 + 24) = v108;
      swift_retain();
      uint64_t v110 = sub_2562E3410();
      os_log_type_t v111 = sub_2562E37F0();
      uint64_t v112 = swift_allocObject();
      *(unsigned char *)(v112 + 16) = 32;
      uint64_t v113 = swift_allocObject();
      *(unsigned char *)(v113 + 16) = 8;
      uint64_t v114 = swift_allocObject();
      *(void *)(v114 + 16) = sub_2562B371C;
      *(void *)(v114 + 24) = v109;
      uint64_t v115 = swift_allocObject();
      *(void *)(v115 + 16) = sub_2562578C4;
      *(void *)(v115 + 24) = v114;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
      uint64_t v116 = swift_allocObject();
      sub_25622F578(v116, 3);
      void *v117 = sub_2562578CC;
      v117[1] = v112;
      v117[2] = sub_2562578CC;
      v117[3] = v113;
      v117[4] = sub_2562578C8;
      v117[5] = v115;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      v366 = v110;
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v118 = (uint8_t *)swift_slowAlloc();
        uint64_t v363 = swift_slowAlloc();
        v376[0] = v363;
        *(_WORD *)uint64_t v118 = 258;
        v118[2] = 32;
        swift_release();
        v118[3] = 8;
        swift_release();
        sub_256257778((unint64_t *)&qword_269F53E00);
        uint64_t v119 = sub_2562E3C80();
        *(void *)(v372 + 2216) = sub_256229738(v119, v120, v376);
        sub_2562E38F0();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v292(v369, v355);
        _os_log_impl(&dword_256226000, v366, v111, "#SpeakerIdSamplingCalculator: mostRecentDate %s", v118, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v363, -1, -1);
        MEMORY[0x25A2A5190](v118, -1, -1);
      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v292(v369, v355);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      goto LABEL_71;
    }
    uint64_t v103 = swift_task_alloc();
    uint64_t v104 = swift_task_alloc();
    sub_25622F360(v101, v104, &qword_269F53DB0);
    if (v99(v104, 1, v355) == 1)
    {
      sub_2562E2ED0();
      sub_25622F3C4(v104, &qword_269F53DB0);
    }
    else
    {
      v285(v103, v104, v355);
    }
    swift_task_dealloc();
    char v105 = sub_2562E2F10();
    v292(v103, v355);
    v292(v102, v355);
    swift_task_dealloc();
    if (v105) {
      goto LABEL_67;
    }
LABEL_71:
    uint64_t v360 = *(void *)(v289 + 16);
    if (v360)
    {
      char v121 = (uint64_t *)(v289 + 32);
      do
      {
        uint64_t v359 = v121;
        uint64_t v140 = *v121;
        uint64_t v141 = swift_allocObject();
        *(void *)(v141 + 16) = v140;
        uint64_t v142 = swift_allocObject();
        *(void *)(v142 + 16) = sub_2562B34A0;
        *(void *)(v142 + 24) = v141;
        uint64_t v375 = v140;
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v143 = sub_2562E3410();
        os_log_type_t v144 = sub_2562E37F0();
        uint64_t v145 = swift_allocObject();
        *(unsigned char *)(v145 + 16) = 32;
        uint64_t v146 = swift_allocObject();
        *(unsigned char *)(v146 + 16) = 8;
        uint64_t v147 = swift_allocObject();
        *(void *)(v147 + 16) = sub_2562B34AC;
        *(void *)(v147 + 24) = v142;
        uint64_t v148 = swift_allocObject();
        *(void *)(v148 + 16) = sub_256257190;
        *(void *)(v148 + 24) = v147;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F543D0);
        uint64_t v149 = swift_allocObject();
        sub_25622F578(v149, 3);
        void *v150 = sub_2562570D0;
        v150[1] = v145;
        v150[2] = sub_2562578CC;
        v150[3] = v146;
        v150[4] = sub_256257198;
        v150[5] = v148;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v151 = v144;
        id v370 = v143;
        if (os_log_type_enabled(v143, v144))
        {
          uint64_t v152 = (uint8_t *)swift_slowAlloc();
          uint64_t v367 = swift_slowAlloc();
          v376[0] = v367;
          *(_WORD *)uint64_t v152 = 258;
          v152[2] = 32;
          swift_release();
          v152[3] = 8;
          swift_release();
          swift_bridgeObjectRetain();
          uint64_t v153 = sub_2562E34B0();
          unint64_t v155 = v154;
          swift_bridgeObjectRelease();
          *(void *)(v372 + 2224) = sub_256229738(v153, v155, v376);
          sub_2562E38F0();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_256226000, v370, v151, "#SpeakerIdSamplingCalculator: Current Sample %s", v152, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v367, -1, -1);
          MEMORY[0x25A2A5190](v152, -1, -1);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
        }
        uint64_t v364 = swift_task_alloc();
        v345(v364, 1, 1, v355);
        uint64_t v371 = swift_allocObject();
        *(void *)(v371 + 16) = 0;
        uint64_t v156 = (void *)(v371 + 16);
        *(void *)(v372 + 1800) = 0xD000000000000017;
        *(void *)(v372 + 1808) = 0x80000002562EE8E0;
        sub_2562E39D0();
        sub_256255764(v344, v140, v342);
        sub_2562571A0(v344);
        if (*(void *)(v372 + 1128))
        {
          sub_25624B1DC();
          if (swift_dynamicCast())
          {
            id v157 = *v340;
            id v158 = objc_msgSend(*v340, sel_unsignedLongLongValue);
            swift_beginAccess();
            *uint64_t v156 = v158;
            uint64_t v159 = swift_task_alloc();
            sub_2562E2F30();

            sub_25622F3C4(v364, &qword_269F53DB0);
            v345(v159, 0, 1, v355);
            sub_25622F514(v159, v364, &qword_269F53DB0);
            swift_task_dealloc();
          }
        }
        else
        {
          sub_25622F3C4((uint64_t)v342, &qword_269F543D8);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
        uint64_t v160 = swift_task_alloc();
        uint64_t v161 = sub_2562E2FD0();
        uint64_t v162 = *(void *)(v161 - 8);
        uint64_t v163 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v162 + 56);
        uint64_t v362 = v160;
        v163(v160, 1, 1, v161);
        uint64_t v368 = swift_task_alloc();
        uint64_t v361 = v161;
        uint64_t v356 = v163;
        v163(v368, 1, 1, v161);
        *(void *)(v372 + 1880) = 0x5F74736575716572;
        *(void *)(v372 + 1888) = 0xEA00000000006469;
        sub_2562E39D0();
        sub_256255764(v343, v375, v341);
        sub_2562571A0(v343);
        if (!*(void *)(v372 + 1416))
        {
          sub_25622F3C4((uint64_t)v341, &qword_269F543D8);
          goto LABEL_90;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_90;
        }
        uint64_t v300 = v162;
        uint64_t v164 = *(void *)(v372 + 1736);
        unint64_t v165 = *(void *)(v372 + 1744);
        uint64_t v166 = swift_task_alloc();
        sub_2562E2F90();
        sub_25622F3C4(v362, &qword_269F53D68);
        sub_25622F514(v166, v362, &qword_269F53D68);
        swift_task_dealloc();
        uint64_t v167 = swift_task_alloc();
        swift_beginAccess();
        id v168 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF908]), sel_initWithTimeIntervalSince1970_, (double)*(unint64_t *)(v371 + 16));
        (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, id))(v293 + 88))(v164, v165, v295, v301, v168);

        sub_256231A80(v167, v368);
        swift_task_dealloc();
        uint64_t v169 = swift_allocObject();
        uint64_t v296 = v164;
        *(void *)(v169 + 16) = v164;
        *(void *)(v169 + 24) = v165;
        uint64_t v170 = v169;
        uint64_t v171 = swift_allocObject();
        *(void *)(v171 + 16) = v295;
        *(void *)(v171 + 24) = v301;
        uint64_t v172 = v171;
        swift_retain_n();
        unint64_t v299 = v165;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        oslog = sub_2562E3410();
        os_log_type_t v298 = sub_2562E37F0();
        uint64_t v173 = swift_allocObject();
        *(unsigned char *)(v173 + 16) = 32;
        uint64_t v174 = v173;
        uint64_t v175 = swift_allocObject();
        *(unsigned char *)(v175 + 16) = 8;
        uint64_t v176 = swift_allocObject();
        *(void *)(v176 + 16) = sub_256257370;
        *(void *)(v176 + 24) = v170;
        uint64_t v177 = v176;
        uint64_t v178 = swift_allocObject();
        *(void *)(v178 + 16) = sub_2562578C4;
        *(void *)(v178 + 24) = v177;
        uint64_t v179 = v178;
        uint64_t v297 = swift_allocObject();
        *(unsigned char *)(v297 + 16) = 32;
        uint64_t v338 = swift_allocObject();
        *(unsigned char *)(v338 + 16) = 8;
        uint64_t v180 = swift_allocObject();
        *(void *)(v180 + 16) = sub_2562B3A48;
        *(void *)(v180 + 24) = v172;
        uint64_t v346 = swift_allocObject();
        *(void *)(v346 + 16) = sub_2562578C4;
        *(void *)(v346 + 24) = v180;
        uint64_t v350 = swift_allocObject();
        *(unsigned char *)(v350 + 16) = 64;
        uint64_t v348 = swift_allocObject();
        *(unsigned char *)(v348 + 16) = 8;
        uint64_t v181 = swift_allocObject();
        *(void *)(v181 + 16) = sub_2562B351C;
        *(void *)(v181 + 24) = v371;
        uint64_t v182 = swift_allocObject();
        *(void *)(v182 + 16) = sub_2562B35B8;
        *(void *)(v182 + 24) = v181;
        uint64_t v353 = swift_allocObject();
        *(unsigned char *)(v353 + 16) = 0;
        uint64_t v183 = swift_allocObject();
        *(unsigned char *)(v183 + 16) = 8;
        uint64_t v184 = swift_allocObject();
        *(void *)(v184 + 16) = sub_2562B3524;
        *(void *)(v184 + 24) = v371;
        uint64_t v185 = swift_allocObject();
        *(void *)(v185 + 16) = sub_2562B35E8;
        *(void *)(v185 + 24) = v184;
        uint64_t v186 = swift_allocObject();
        sub_25622F578(v186, 12);
        *int v187 = sub_2562578CC;
        v187[1] = v174;
        v187[2] = sub_2562578CC;
        v187[3] = v175;
        v187[4] = sub_2562578C8;
        v187[5] = v179;
        v187[6] = sub_2562578CC;
        v187[7] = v297;
        v187[8] = sub_2562578CC;
        v187[9] = v338;
        v187[10] = sub_2562578C8;
        v187[11] = v346;
        v187[12] = sub_2562578CC;
        v187[13] = v350;
        v187[14] = sub_2562578CC;
        v187[15] = v348;
        v187[16] = sub_2562B35C0;
        v187[17] = v182;
        v187[18] = sub_2562578CC;
        v187[19] = v353;
        v187[20] = sub_2562578CC;
        v187[21] = v183;
        v187[22] = sub_256257128;
        v187[23] = v185;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(oslog, v298))
        {
          int v188 = (uint8_t *)swift_slowAlloc();
          char v189 = (void *)swift_slowAlloc();
          uint64_t v190 = swift_slowAlloc();
          v376[0] = v190;
          *(_WORD *)int v188 = 1026;
          v188[2] = 32;
          swift_release();
          v188[3] = 8;
          swift_release();
          unint64_t v191 = v299;
          swift_bridgeObjectRetain();
          *(void *)(v372 + 2208) = sub_256229738(v296, v299, v376);
          sub_2562E38F0();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          swift_release();
          v188[12] = 32;
          swift_release();
          v188[13] = 8;
          swift_release();
          swift_bridgeObjectRetain();
          *(void *)(v372 + 2280) = sub_256229738(v295, v301, v376);
          sub_2562E38F0();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          swift_release();
          v188[22] = 64;
          swift_release();
          v188[23] = 8;
          swift_release();
          id v192 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF908]), sel_initWithTimeIntervalSince1970_, (double)*(unint64_t *)(v371 + 16));
          *(void *)(v372 + 2288) = v192;
          sub_2562E38F0();
          *char v189 = v192;
          swift_release();
          swift_release();
          swift_release_n();
          v188[32] = 0;
          swift_release();
          v188[33] = 8;
          swift_release();
          uint64_t v193 = *(void *)(v371 + 16);
          swift_release_n();
          *(void *)(v372 + 2296) = v193;
          sub_2562E38F0();
          swift_release();
          swift_release();
          _os_log_impl(&dword_256226000, oslog, v298, "#SpeakerIdSamplingCalculator: SpeakerIdSamplingCalculator requestIdString: %s, siriLanguage: %s, date: %@ startDatestampInDaysSince1970: %llu)", v188, 0x2Au);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v189, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v190, -1, -1);
          MEMORY[0x25A2A5190](v188, -1, -1);
        }
        else
        {
          swift_release_n();
          swift_release();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          unint64_t v191 = v299;
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        uint64_t v156 = (void *)(v371 + 16);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v300 + 48))(v368, 1, v361))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v197 = swift_task_alloc();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v300 + 16))(v197, v368, v361);
          uint64_t v198 = sub_2562E2FA0();
          uint64_t v200 = v199;
          (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v197, v361);
          swift_task_dealloc();
          uint64_t v201 = swift_task_alloc();
          uint64_t v202 = swift_task_alloc();
          sub_25622F360(v364, v202, &qword_269F53DB0);
          if (v287(v202, 1, v355) != 1)
          {
            v285(v201, v202, v355);
            swift_task_dealloc();
            (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v293 + 72))(v296, v191, v198, v200, v201);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v292(v201, v355);
            swift_task_dealloc();
LABEL_90:
            id v357 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6ED60]), sel_init);
            *(void *)(v372 + 1944) = 0xD000000000000011;
            *(void *)(v372 + 1952) = 0x80000002562EB110;
            sub_2562E39D0();
            sub_256255764(v323, v375, v307);
            sub_2562571A0(v323);
            if (*(void *)(v372 + 1224))
            {
              if (swift_dynamicCast())
              {
                id v194 = _sSo17SISchemaISOLocaleC16MetricsFrameworkE10fromStringyABSgSSFZ_0(*(void *)(v372 + 1688), *(void *)(v372 + 1696));

                swift_bridgeObjectRelease();
                id v357 = v194;
              }
            }
            else
            {
              sub_25622F3C4((uint64_t)v307, &qword_269F543D8);
            }
            *(void *)(v372 + 2136) = 0xD000000000000011;
            *(void *)(v372 + 2144) = 0x80000002562EC680;
            sub_2562E39D0();
            sub_256255764(v320, v375, v312);
            sub_2562571A0(v320);
            if (*(void *)(v372 + 1032))
            {
              if (swift_dynamicCast())
              {
                int v195 = (void *)sub_2562E3550();
                swift_bridgeObjectRelease();
                id v196 = v195;
                if ([v196 isEqualToString:@"INVOCATIONSOURCE_UNKNOWN_INVOCATION_SOURCE"])
                {
                  int v354 = 0;
                }
                else
                {
                  if ([v196 isEqualToString:@"INVOCATIONSOURCE_HOME_BUTTON"])
                  {
                    int v206 = 1;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_LOCK_BUTTON"])
                  {
                    int v206 = 2;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_BLUETOOTH_HEADSET_BUTTON"])
                  {
                    int v206 = 3;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_STEERING_WHEEL_BUTTON"])
                  {
                    int v206 = 4;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TOUCHBAR_BUTTON"])
                  {
                    int v206 = 5;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_KEYBOARD_SHORTCUT"])
                  {
                    int v206 = 6;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_APPLICATION_ICON"])
                  {
                    int v206 = 7;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_WIRED_MICROPHONE_BUTTON"])
                  {
                    int v206 = 8;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_REMOTE_MICROPHONE_BUTTON"])
                  {
                    int v206 = 9;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_BANNER"])
                  {
                    int v206 = 10;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARD_SECTION"])
                  {
                    int v206 = 11;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TAP_TO_EDIT"])
                  {
                    int v206 = 12;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_STRUCTURED_DICTATION"])
                  {
                    int v206 = 13;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SOFT_BUTTON"])
                  {
                    int v206 = 14;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_AUTO_PROMPT"])
                  {
                    int v206 = 15;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_RAISE_TO_SPEAK"])
                  {
                    int v206 = 16;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_VOICE_TRIGGER"])
                  {
                    int v206 = 17;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_HARDWARE_BUTTON"])
                  {
                    int v206 = 18;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_HANDOFF"])
                  {
                    int v206 = 19;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TRANSCRIPT_ELEMENT"])
                  {
                    int v206 = 20;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_BLUETOOTH_HEADSET_VOICE_TRIGGER"])
                  {
                    int v206 = 21;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_MENU_BAR"])
                  {
                    int v206 = 22;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DOCK_ICON"])
                  {
                    int v206 = 23;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_HOME_BUTTON"])
                  {
                    int v206 = 24;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_VOICETRIGGER"])
                  {
                    int v206 = 25;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_GATEKEEPER"])
                  {
                    int v206 = 26;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_SIRI_BUTTON"])
                  {
                    int v206 = 27;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_CARPLAY_IN_APP_SIRI_AFFORDANCE"])
                  {
                    int v206 = 28;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_BREADCRUMB"])
                  {
                    int v206 = 29;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_GUIDE_BUTTON"])
                  {
                    int v206 = 30;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TRANSCRIPT_VERTICAL_SWIPE"])
                  {
                    int v206 = 31;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SPOTLIGHT_SUGGESTION"])
                  {
                    int v206 = 32;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SPOTLIGHT_ASK_SIRI"])
                  {
                    int v206 = 33;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_COMPLICATION"])
                  {
                    int v206 = 34;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TV_REMOTE_BUTTON"])
                  {
                    int v206 = 35;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_NONAPPLE_REMOTE"])
                  {
                    int v206 = 36;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_REMOTE_APP"])
                  {
                    int v206 = 37;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_REMOTE_UI"])
                  {
                    int v206 = 38;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON"])
                  {
                    int v206 = 39;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_INPUT_FIELD_MIC_BUTTON"])
                  {
                    int v206 = 40;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SPEECH_API"])
                  {
                    int v206 = 41;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_TV_REMOTE"])
                  {
                    int v206 = 42;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_SHORTCUT_ENROLLMENT"])
                  {
                    int v206 = 43;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_TRIGGER_ENROLLMENT"])
                  {
                    int v206 = 44;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_VOICE_TRIGGER_PROXIMITY_ENROLLMENT"])
                  {
                    int v206 = 45;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_SECONDARY_DEVICE"])
                  {
                    int v206 = 46;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE"])
                  {
                    int v206 = 47;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_TRIGGERLESS"])
                  {
                    int v206 = 48;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_NOTIFICATION"])
                  {
                    int v206 = 49;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TEST_AUTOMATION"])
                  {
                    int v206 = 50;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_WAVEFORM_GLYPH_BUTTON"])
                  {
                    int v206 = 51;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_AUTO_PROMPT"])
                  {
                    int v206 = 52;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_GLOBE_BUTTON"])
                  {
                    int v206 = 53;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_LONG_PRESS"])
                  {
                    int v206 = 54;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_ACCESSIBILITY_BACKTAP"])
                  {
                    int v206 = 55;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_VOICECOMMAND_BUTTON"])
                  {
                    int v206 = 56;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_VOICECOMMAND_BUTTON"])
                  {
                    int v206 = 57;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_APPLETV_REMOTE_DEVICE"])
                  {
                    int v206 = 58;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_MESSAGE_SEND_BUTTON"])
                  {
                    int v206 = 59;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_WITH_INPUT_SWITCHER"])
                  {
                    int v206 = 60;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_INPUT_FIELD_MIC_BUTTON_FIRST_RESPONDER"])
                  {
                    int v206 = 61;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_SAFARI_MIC_BUTTON_IN_ADDRESS_BAR"])
                  {
                    int v206 = 62;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_SAFARI_MIC_BUTTON_IN_ADDRESS_BAR_FIRST_RESPONDER"])
                  {
                    int v206 = 63;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WHILE_SEARCH_BAR_VISIBLE"])
                  {
                    int v206 = 64;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WITH_INPUT_SWITCHER_WHILE_SEARCH_MIC_VISIBLE"])
                  {
                    int v206 = 65;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WHILE_SAFARI_MIC_VISIBLE"])
                  {
                    int v206 = 66;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_FROM_KEYBOARD_WITH_INPUT_SWITCHER_WHILE_SAFARI_MIC_VISIBLE"])
                  {
                    int v206 = 67;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON_FROM_QUICKBOARD"])
                  {
                    int v206 = 68;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MESSAGES_TEXT_FIELD_MIC_BUTTON"])
                  {
                    int v206 = 69;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MIC_ICON_UCBBAR"])
                  {
                    int v206 = 70;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_GLOBE_BUTTON_SHORTCUT"])
                  {
                    int v206 = 71;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_KEYBOARD_STANDARD_SHORTCUT"])
                  {
                    int v206 = 72;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_CALL"])
                  {
                    int v206 = 73;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_NOTIFICATION"])
                  {
                    int v206 = 74;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_AIRPODS_MAX_BUTTON_PRESS"])
                  {
                    int v206 = 75;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_AUTO_START"])
                  {
                    int v206 = 76;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_MIC_BUTTON_PRESSED"])
                  {
                    int v206 = 77;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_QUICKBOARD_TEXT_INPUT_LANGUAGE_PICKER_ITEM_SELECTED"])
                  {
                    int v206 = 78;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_FLEXIBLE_FOLLOW_UPS"])
                  {
                    int v206 = 79;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_JS_VOICE_TRIGGER"])
                  {
                    int v206 = 80;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_MESSAGES_TEXT_FIELD_MIC_BUTTON_WHILE_KEYBOARD_NOT_VISIBLE"])
                  {
                    int v206 = 81;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_POP_UP_UI_LANGUAGE_SWITCHER_ICON"])
                  {
                    int v206 = 82;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_LONG_PRESS_TEXT_INPUT_FIELD"])
                  {
                    int v206 = 83;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SIRI_ANNOUNCE_DROP_IN"])
                  {
                    int v206 = 84;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TYPE_TO_SIRI"])
                  {
                    int v206 = 85;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_PINCH"])
                  {
                    int v206 = 87;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_DICTATION_GAZE"])
                  {
                    int v206 = 88;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_EXECUTE_ON_REMOTE_REQUEST"])
                  {
                    int v206 = 89;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_WATCH_GESTURE_PRIMARY"])
                  {
                    int v206 = 90;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_QUICK_TYPE_TO_SIRI"])
                  {
                    int v206 = 91;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_HEAD_GESTURE"])
                  {
                    int v206 = 92;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SOFT_KEYBOARD_BUTTON"])
                  {
                    int v206 = 93;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_WRITING_TOOLS"])
                  {
                    int v206 = 94;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_GENERATIVE_FIELD"])
                  {
                    int v206 = 95;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_SUGGESTION"])
                  {
                    int v206 = 96;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_TYPE_TO_SIRI_CONTROL_CENTER"])
                  {
                    int v206 = 97;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_VISUAL_INTELLIGENCE"])
                  {
                    int v206 = 98;
                  }
                  else if ([v196 isEqualToString:@"INVOCATIONSOURCE_VISUAL_INTELLIGENCE_QUICK_TYPE"])
                  {
                    int v206 = 99;
                  }
                  else
                  {
                    int v206 = 0;
                  }
                  int v354 = v206;
                }

LABEL_308:
                *(void *)(v372 + 1704) = 0x615F6E6F69746F6DLL;
                *(void *)(v372 + 1712) = 0xEF79746976697463;
                sub_2562E39D0();
                sub_256255764(v318, v375, v317);
                sub_2562571A0(v318);
                if (*(void *)(v372 + 840))
                {
                  if (swift_dynamicCast())
                  {
                    uint64_t v207 = (void *)sub_2562E3550();
                    swift_bridgeObjectRelease();
                    id v208 = v207;
                    if ([v208 isEqualToString:@"ORCHMOTIONACTIVITY_UNKNOWN"])
                    {
                      int v351 = 0;
                    }
                    else
                    {
                      if ([v208 isEqualToString:@"ORCHMOTIONACTIVITY_MOVING"])
                      {
                        int v209 = 1;
                      }
                      else if ([v208 isEqualToString:@"ORCHMOTIONACTIVITY_STATIONARY"])
                      {
                        int v209 = 2;
                      }
                      else if ([v208 isEqualToString:@"ORCHMOTIONACTIVITY_IN_VEHICLE_MOVING"])
                      {
                        int v209 = 3;
                      }
                      else if ([v208 isEqualToString:@"ORCHMOTIONACTIVITY_IN_VEHICLE_STATIC"])
                      {
                        int v209 = 4;
                      }
                      else if ([v208 isEqualToString:@"ORCHMOTIONACTIVITY_IN_VEHICLE_STATIONARY"])
                      {
                        int v209 = 5;
                      }
                      else
                      {
                        int v209 = 0;
                      }
                      int v351 = v209;
                    }

LABEL_327:
                    *(void *)(v372 + 2120) = 0x6F635F6F69647561;
                    *(void *)(v372 + 2128) = 0xEB00000000636564;
                    sub_2562E39D0();
                    sub_256255764(v319, v375, v315);
                    sub_2562571A0(v319);
                    if (*(void *)(v372 + 904))
                    {
                      if (swift_dynamicCast())
                      {
                        uint64_t v210 = (void *)sub_2562E3550();
                        swift_bridgeObjectRelease();
                        id v211 = v210;
                        if ([v211 isEqualToString:@"MHASRAUDIOCODEC_UNKNOWN"])
                        {
                          int v349 = 0;
                        }
                        else
                        {
                          if ([v211 isEqualToString:@"MHASRAUDIOCODEC_PCM_MONO_16BIT_8000HZ_VALUE"])
                          {
                            int v212 = 1;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_PCM_MONO_16BIT_11025HZ_VALUE"])
                          {
                            int v212 = 2;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_PCM_MONO_16BIT_16000HZ_VALUE"])
                          {
                            int v212 = 3;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_PCM_MONO_16BIT_22050HZ_VALUE"])
                          {
                            int v212 = 4;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_PCM_MONO_16BIT_32000HZ_VALUE"])
                          {
                            int v212 = 5;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_SPEEX_NB_QUALITY7_VALUE"])
                          {
                            int v212 = 6;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_SPEEX_WB_QUALITY8_VALUE"])
                          {
                            int v212 = 7;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_ALAC_MONO_8000HZ_VALUE"])
                          {
                            int v212 = 8;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_ALAC_MONO_16000HZ_VALUE"])
                          {
                            int v212 = 9;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_OPUS_MONO_8000HZ_VALUE"])
                          {
                            int v212 = 10;
                          }
                          else if ([v211 isEqualToString:@"MHASRAUDIOCODEC_OPUS_MONO_16000HZ_VALUE"])
                          {
                            int v212 = 11;
                          }
                          else
                          {
                            int v212 = 0;
                          }
                          int v349 = v212;
                        }

LABEL_358:
                        strcpy((char *)(v372 + 1960), "audio_source");
                        *(unsigned char *)(v372 + 1973) = 0;
                        *(_WORD *)(v372 + 1974) = -5120;
                        sub_2562E39D0();
                        sub_256255764(v321, v375, v313);
                        sub_2562571A0(v321);
                        if (*(void *)(v372 + 1000))
                        {
                          if (swift_dynamicCast())
                          {
                            uint64_t v213 = (void *)sub_2562E3550();
                            swift_bridgeObjectRelease();
                            id v214 = v213;
                            if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_UNKNOWN"])
                            {
                              int v347 = 0;
                            }
                            else
                            {
                              if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_LINEIN"])
                              {
                                int v215 = 1;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_BUILTIN_MIC"])
                              {
                                int v215 = 2;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_WIREDHEADSET_MIC"])
                              {
                                int v215 = 3;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_BLUETOOTH_HANDSFREE_DEVICE"])
                              {
                                int v215 = 4;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_USB_AUDIO"])
                              {
                                int v215 = 5;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_CAR_AUDIO"])
                              {
                                int v215 = 6;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_BLUETOOTH_DOAP_DEVICE"])
                              {
                                int v215 = 7;
                              }
                              else if ([v214 isEqualToString:@"MHASSISTANTDAEMONAUDIOSOURCE_ENHANCED_CARPLAY_DEVICE"])
                              {
                                int v215 = 8;
                              }
                              else
                              {
                                int v215 = 0;
                              }
                              int v347 = v215;
                            }

LABEL_383:
                            *(void *)(v372 + 1928) = 0x6B7361745F727361;
                            *(void *)(v372 + 1936) = 0xE800000000000000;
                            sub_2562E39D0();
                            sub_256255764(v322, v375, v310);
                            sub_2562571A0(v322);
                            if (*(void *)(v372 + 1096))
                            {
                              if (swift_dynamicCast())
                              {
                                id v216 = (void *)sub_2562E3550();
                                swift_bridgeObjectRelease();
                                id v217 = v216;
                                if ([v217 isEqualToString:@"ASRDATAPACKTASK_UNKNOWN"])
                                {
                                  int v218 = 0;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_SEARCH_OR_MESSAGING"])
                                {
                                  int v218 = 1;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_DICTATION"])
                                {
                                  int v218 = 2;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_WEB_SEARCH"])
                                {
                                  int v218 = 3;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_TSHOT"])
                                {
                                  int v218 = 4;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_SIRI_DICTATION"])
                                {
                                  int v218 = 5;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_DICTATION_WITH_VOICE_COMMAND"])
                                {
                                  int v218 = 6;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_BETO"])
                                {
                                  int v218 = 7;
                                }
                                else if ([v217 isEqualToString:@"ASRDATAPACKTASK_BETO_DICTATION"])
                                {
                                  int v218 = 8;
                                }
                                else
                                {
                                  int v218 = 0;
                                }

LABEL_407:
                                *(void *)(v372 + 1896) = 0xD000000000000015;
                                *(void *)(v372 + 1904) = 0x80000002562EE900;
                                sub_2562E39D0();
                                sub_256255764(v324, v375, v308);
                                sub_2562571A0(v324);
                                if (*(void *)(v372 + 1192))
                                {
                                  if (swift_dynamicCast())
                                  {
                                    uint64_t v219 = (void *)sub_2562E3550();
                                    swift_bridgeObjectRelease();
                                    id v220 = v219;
                                    if ([v220 isEqualToString:@"ORCHREQUESTCANCELLATIONREASON_UNKNOWN"])
                                    {
                                      int v221 = 0;
                                    }
                                    else if ([v220 isEqualToString:@"ORCHREQUESTCANCELLATIONREASON_MITIGATED"])
                                    {
                                      int v221 = 1;
                                    }
                                    else if ([v220 isEqualToString:@"ORCHREQUESTCANCELLATIONREASON_CANCEL_COMMAND"])
                                    {
                                      int v221 = 2;
                                    }
                                    else
                                    {
                                      int v221 = 0;
                                    }

LABEL_419:
                                    strcpy((char *)(v372 + 1848), "trigger_phrase");
                                    *(unsigned char *)(v372 + 1863) = -18;
                                    sub_2562E39D0();
                                    sub_256255764(v325, v375, v305);
                                    sub_2562571A0(v325);
                                    if (*(void *)(v372 + 1288))
                                    {
                                      if (swift_dynamicCast())
                                      {
                                        int v222 = _s16MetricsFramework13SamplingUtilsC24getSISchemaTriggerPhrase3forSo0fgH0VSS_tFZ_0(*(void *)(v372 + 2184), *(void *)(v372 + 2192));
                                        swift_bridgeObjectRelease();
                                        goto LABEL_424;
                                      }
                                    }
                                    else
                                    {
                                      sub_25622F3C4((uint64_t)v305, &qword_269F543D8);
                                    }
                                    int v222 = 0;
LABEL_424:
                                    id v223 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6ED80]), sel_init);
                                    *(void *)(v372 + 1832) = 0x656475746974616CLL;
                                    *(void *)(v372 + 1840) = 0xE800000000000000;
                                    sub_2562E39D0();
                                    uint64_t v224 = v372 + 1360;
                                    sub_256255764(v326, v375, (_OWORD *)(v372 + 1360));
                                    sub_2562571A0(v326);
                                    if (*(void *)(v372 + 1384))
                                    {
                                      if ((swift_dynamicCast() & 1) == 0) {
                                        goto LABEL_430;
                                      }
                                      int v225 = *(_DWORD *)(v372 + 2348);
                                      *(void *)(v372 + 2152) = 0x64757469676E6F6CLL;
                                      *(void *)(v372 + 2160) = 0xE900000000000065;
                                      sub_2562E39D0();
                                      uint64_t v224 = v372 + 944;
                                      sub_256255764(v291, v375, (_OWORD *)(v372 + 944));
                                      sub_2562571A0(v291);
                                      if (*(void *)(v372 + 968))
                                      {
                                        if (swift_dynamicCast())
                                        {
                                          int v227 = *(_DWORD *)(v372 + 2344);
                                          LODWORD(v226) = v225;
                                          objc_msgSend(v223, sel_setLatitude_, v226);
                                          LODWORD(v228) = v227;
                                          objc_msgSend(v223, sel_setLongitude_, v228);
LABEL_433:
                                          type metadata accessor for SpeakerIdSamplingDataBuilderImpl(0);
                                          swift_allocObject();
                                          uint64_t v232 = sub_256236464();
                                          uint64_t v233 = (uint64_t *)(v232
                                                           + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_enrollmentId);
                                          *uint64_t v233 = v336;
                                          v233[1] = v335;
                                          swift_bridgeObjectRetain();
                                          swift_bridgeObjectRelease();
                                          swift_beginAccess();
                                          *(void *)(v232 + 24) = *v156;
                                          *(unsigned char *)(v232 + 32) = 0;
                                          *(void *)(v372 + 1784) = 0x745F656369766564;
                                          *(void *)(v372 + 1792) = 0xEB00000000657079;
                                          sub_2562E39D0();
                                          sub_256255764(v327, v375, v303);
                                          sub_2562571A0(v327);
                                          if (*(void *)(v372 + 1352))
                                          {
                                            int v234 = swift_dynamicCast();
                                            uint64_t v235 = *(void *)(v372 + 2088);
                                            uint64_t v236 = *(void *)(v372 + 2096);
                                            if (!v234)
                                            {
                                              uint64_t v235 = 0;
                                              uint64_t v236 = 0;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v303, &qword_269F543D8);
                                            uint64_t v235 = 0;
                                            uint64_t v236 = 0;
                                          }
                                          *(void *)(v232 + 40) = v235;
                                          *(void *)(v232 + 48) = v236;
                                          swift_bridgeObjectRelease();
                                          strcpy((char *)(v372 + 1752), "system_build");
                                          *(unsigned char *)(v372 + 1765) = 0;
                                          *(_WORD *)(v372 + 1766) = -5120;
                                          sub_2562E39D0();
                                          sub_256255764(v328, v375, v309);
                                          sub_2562571A0(v328);
                                          if (*(void *)(v372 + 1160))
                                          {
                                            int v237 = swift_dynamicCast();
                                            uint64_t v238 = *(void *)(v372 + 2072);
                                            uint64_t v239 = *(void *)(v372 + 2080);
                                            if (!v237)
                                            {
                                              uint64_t v238 = 0;
                                              uint64_t v239 = 0;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v309, &qword_269F543D8);
                                            uint64_t v238 = 0;
                                            uint64_t v239 = 0;
                                          }
                                          *(void *)(v232 + 56) = v238;
                                          *(void *)(v232 + 64) = v239;
                                          swift_bridgeObjectRelease();
                                          uint64_t v240 = *(void **)(v232 + 104);
                                          *(void *)(v232 + 104) = v357;
                                          id v358 = v357;

                                          *(void *)(v372 + 1672) = 0xD000000000000019;
                                          *(void *)(v372 + 1680) = 0x80000002562EE920;
                                          sub_2562E39D0();
                                          sub_256255764(v329, v375, v311);
                                          sub_2562571A0(v329);
                                          if (*(void *)(v372 + 1064))
                                          {
                                            int v241 = swift_dynamicCast();
                                            uint64_t v242 = *(void *)(v372 + 2056);
                                            uint64_t v243 = *(void *)(v372 + 2064);
                                            if (!v241)
                                            {
                                              uint64_t v242 = 0;
                                              uint64_t v243 = 0;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v311, &qword_269F543D8);
                                            uint64_t v242 = 0;
                                            uint64_t v243 = 0;
                                          }
                                          *(void *)(v232 + 72) = v242;
                                          *(void *)(v232 + 80) = v243;
                                          swift_bridgeObjectRelease();
                                          *(void *)(v372 + 1720) = 0xD00000000000001ALL;
                                          *(void *)(v372 + 1728) = 0x80000002562EE940;
                                          sub_2562E39D0();
                                          sub_256255764(v330, v375, v314);
                                          sub_2562571A0(v330);
                                          if (*(void *)(v372 + 936))
                                          {
                                            int v244 = swift_dynamicCast();
                                            uint64_t v245 = *(void *)(v372 + 2040);
                                            uint64_t v246 = *(void *)(v372 + 2048);
                                            if (!v244)
                                            {
                                              uint64_t v245 = 0;
                                              uint64_t v246 = 0;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v314, &qword_269F543D8);
                                            uint64_t v245 = 0;
                                            uint64_t v246 = 0;
                                          }
                                          *(void *)(v232 + 88) = v245;
                                          *(void *)(v232 + 96) = v246;
                                          swift_bridgeObjectRelease();
                                          *(_DWORD *)(v232 + 112) = v354;
                                          *(unsigned char *)(v232 + 116) = 0;
                                          *(_DWORD *)(v232 + 120) = v351;
                                          *(unsigned char *)(v232 + 124) = 0;
                                          *(void *)(v372 + 1768) = 0xD000000000000012;
                                          *(void *)(v372 + 1776) = 0x80000002562EE960;
                                          sub_2562E39D0();
                                          sub_256255764(v331, v375, v304);
                                          sub_2562571A0(v331);
                                          if (*(void *)(v372 + 1320))
                                          {
                                            int v247 = swift_dynamicCast();
                                            char v248 = *(unsigned char *)(v372 + 2354);
                                            if (!v247) {
                                              char v248 = 2;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v304, &qword_269F543D8);
                                            char v248 = 2;
                                          }
                                          *(unsigned char *)(v232 + 125) = v248;
                                          *(void *)(v372 + 1816) = 0xD000000000000010;
                                          *(void *)(v372 + 1824) = 0x80000002562EE980;
                                          sub_2562E39D0();
                                          sub_256255764(v332, v375, v306);
                                          sub_2562571A0(v332);
                                          if (*(void *)(v372 + 1256))
                                          {
                                            int v249 = swift_dynamicCast();
                                            char v250 = *(unsigned char *)(v372 + 2353);
                                            if (!v249) {
                                              char v250 = 2;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v306, &qword_269F543D8);
                                            char v250 = 2;
                                          }
                                          *(unsigned char *)(v232 + 126) = v250;
                                          *(void *)(v372 + 1864) = 0xD000000000000012;
                                          *(void *)(v372 + 1872) = 0x80000002562EE9A0;
                                          sub_2562E39D0();
                                          sub_256255764(v333, v375, v302);
                                          sub_2562571A0(v333);
                                          if (*(void *)(v372 + 1448))
                                          {
                                            int v251 = swift_dynamicCast();
                                            char v252 = *(unsigned char *)(v372 + 2352);
                                            if (!v251) {
                                              char v252 = 2;
                                            }
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v302, &qword_269F543D8);
                                            char v252 = 2;
                                          }
                                          *(unsigned char *)(v232 + 127) = v252;
                                          *(_DWORD *)(v232 + 128) = v349;
                                          *(unsigned char *)(v232 + 132) = 0;
                                          *(_DWORD *)(v232 + 136) = v347;
                                          *(unsigned char *)(v232 + 140) = 0;
                                          *(_DWORD *)(v232 + 144) = v218;
                                          *(unsigned char *)(v232 + 148) = 0;
                                          *(void *)(v372 + 1912) = 0xD000000000000019;
                                          *(void *)(v372 + 1920) = 0x80000002562EE9C0;
                                          sub_2562E39D0();
                                          sub_256255764(v334, v375, v316);
                                          swift_bridgeObjectRelease();
                                          sub_2562571A0(v334);
                                          if (*(void *)(v372 + 872))
                                          {
                                            int v122 = swift_dynamicCast();
                                            uint64_t v123 = *(void *)(v372 + 2240);
                                            if (!v122) {
                                              uint64_t v123 = 0;
                                            }
                                            char v124 = v122 ^ 1;
                                          }
                                          else
                                          {
                                            sub_25622F3C4((uint64_t)v316, &qword_269F543D8);
                                            uint64_t v123 = 0;
                                            char v124 = 1;
                                          }
                                          uint64_t v352 = *(void *)(v372 + 2336);
                                          uint64_t v374 = *(void *)(v372 + 2328);
                                          *(void *)(v232 + 152) = v123;
                                          *(unsigned char *)(v232 + 160) = v124;
                                          *(_DWORD *)(v232 + 224) = v221;
                                          *(unsigned char *)(v232 + 228) = 0;
                                          uint64_t v125 = v232
                                               + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_triggerPhrase;
                                          *(_DWORD *)uint64_t v125 = v222;
                                          *(unsigned char *)(v125 + 4) = 0;
                                          uint64_t v126 = swift_task_alloc();
                                          uint64_t v127 = v368;
                                          sub_25622F360(v368, v126, &qword_269F53D68);
                                          uint64_t v128 = swift_task_alloc();
                                          sub_25622F360(v126, v128, &qword_269F53D68);
                                          uint64_t v129 = v232
                                               + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_audioId;
                                          swift_beginAccess();
                                          sub_256231A80(v128, v129);
                                          swift_endAccess();
                                          swift_task_dealloc();
                                          sub_25622F3C4(v126, &qword_269F53D68);
                                          swift_task_dealloc();
                                          char v130 = *(void **)(v232
                                                          + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_location);
                                          *(void *)(v232
                                                    + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_location) = v223;
                                          id v131 = v223;

                                          uint64_t v132 = swift_task_alloc();
                                          sub_2562E2FC0();
                                          v356(v132, 0, 1, v361);
                                          uint64_t v133 = swift_task_alloc();
                                          sub_25622F360(v132, v133, &qword_269F53D68);
                                          uint64_t v134 = v232
                                               + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_sampleId;
                                          swift_beginAccess();
                                          sub_256231A80(v133, v134);
                                          swift_endAccess();
                                          swift_task_dealloc();
                                          sub_25622F3C4(v132, &qword_269F53D68);
                                          swift_task_dealloc();
                                          uint64_t v135 = swift_task_alloc();
                                          uint64_t v136 = v362;
                                          sub_25622F360(v362, v135, &qword_269F53D68);
                                          uint64_t v137 = v232
                                               + OBJC_IVAR____TtC16MetricsFramework32SpeakerIdSamplingDataBuilderImpl_requestId;
                                          swift_beginAccess();
                                          sub_256231A80(v135, v137);
                                          swift_endAccess();
                                          swift_task_dealloc();
                                          sub_256233F38(v352);
                                          swift_release();
                                          sub_256231958(v352, v374);
                                          sub_256255F84();
                                          uint64_t v138 = *(void *)(*(void *)(v372 + 2200) + 16);
                                          sub_256256010(v138);
                                          uint64_t v139 = sub_256256148(v138, v374);
                                          nullsub_1(v139);

                                          sub_2562319BC(v352);
                                          goto LABEL_77;
                                        }
LABEL_430:
                                        unint64_t v229 = sub_2562E3410();
                                        os_log_type_t v230 = sub_2562E37F0();
                                        if (os_log_type_enabled(v229, v230))
                                        {
                                          uint64_t v231 = (uint8_t *)swift_slowAlloc();
                                          *(_WORD *)uint64_t v231 = 0;
                                          _os_log_impl(&dword_256226000, v229, v230, "#SpeakerIdSamplingCalculator: Unable to fetch location for the current request", v231, 2u);
                                          MEMORY[0x25A2A5190](v231, -1, -1);
                                        }

                                        goto LABEL_433;
                                      }
                                    }
                                    sub_25622F3C4(v224, &qword_269F543D8);
                                    goto LABEL_430;
                                  }
                                }
                                else
                                {
                                  sub_25622F3C4((uint64_t)v308, &qword_269F543D8);
                                }
                                int v221 = 0;
                                goto LABEL_419;
                              }
                            }
                            else
                            {
                              sub_25622F3C4((uint64_t)v310, &qword_269F543D8);
                            }
                            int v218 = 0;
                            goto LABEL_407;
                          }
                        }
                        else
                        {
                          sub_25622F3C4((uint64_t)v313, &qword_269F543D8);
                        }
                        int v347 = 0;
                        goto LABEL_383;
                      }
                    }
                    else
                    {
                      sub_25622F3C4((uint64_t)v315, &qword_269F543D8);
                    }
                    int v349 = 0;
                    goto LABEL_358;
                  }
                }
                else
                {
                  sub_25622F3C4((uint64_t)v317, &qword_269F543D8);
                }
                int v351 = 0;
                goto LABEL_327;
              }
            }
            else
            {
              sub_25622F3C4((uint64_t)v312, &qword_269F543D8);
            }
            int v354 = 0;
            goto LABEL_308;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_25622F3C4(v202, &qword_269F53DB0);
          swift_task_dealloc();
          swift_task_dealloc();
        }
        os_log_type_t v203 = sub_2562E3410();
        os_log_type_t v204 = sub_2562E37F0();
        if (os_log_type_enabled(v203, v204))
        {
          uint64_t v205 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v205 = 0;
          _os_log_impl(&dword_256226000, v203, v204, "#SpeakerIdSamplingCalculator: Unable to submit request to upload audio, skipping current sample.", v205, 2u);
          MEMORY[0x25A2A5190](v205, -1, -1);
        }

        uint64_t v136 = v362;
        uint64_t v127 = v368;
LABEL_77:
        sub_25622F3C4(v136, &qword_269F53D68);
        sub_25622F3C4(v364, &qword_269F53DB0);
        sub_25622F3C4(v127, &qword_269F53D68);
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        char v121 = v359 + 1;
        --v360;
      }
      while (v360);
    }
    swift_bridgeObjectRelease();
    v292(v290, v355);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v73 = v283;
    uint64_t v67 = v284;
    uint64_t v75 = (void (**)(uint64_t, uint64_t, uint64_t))(v284 + 16);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v253 = swift_task_alloc();
  uint64_t v254 = swift_task_alloc();
  sub_25622F360(v80, v254, &qword_269F53DB0);
  if ((*v288)(v254, 1, v355) == 1)
  {
    sub_25622F3C4(v254, &qword_269F53DB0);
    swift_task_dealloc();
  }
  else
  {
    (*v286)(v253, v254, v355);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v293 + 80))(v253, v83);
    uint64_t v255 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v284 + 16))(v255, v253, v355);
    uint64_t v256 = sub_2562E3410();
    os_log_type_t v257 = sub_2562E37F0();
    if (os_log_type_enabled(v256, v257))
    {
      uint64_t v258 = (uint8_t *)swift_slowAlloc();
      uint64_t v259 = swift_slowAlloc();
      v376[0] = v259;
      *(_DWORD *)uint64_t v258 = 136315138;
      sub_256257778((unint64_t *)&qword_269F53E00);
      uint64_t v260 = sub_2562E3C80();
      *(void *)(v372 + 2256) = sub_256229738(v260, v261, v376);
      uint64_t v80 = v281;
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      v292(v255, v355);
      _os_log_impl(&dword_256226000, v256, v257, "#SpeakerIdSamplingCalculator: cleanUpAudioWithOnAndBeforeDate %s", v258, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v259, -1, -1);
      MEMORY[0x25A2A5190](v258, -1, -1);

      v292(v253, v355);
      swift_task_dealloc();
    }
    else
    {
      v292(v255, v355);

      swift_task_dealloc();
      v292(v253, v355);
    }
  }
  swift_task_dealloc();
  uint64_t v262 = sub_2562E3410();
  os_log_type_t v263 = sub_2562E37F0();
  if (os_log_type_enabled(v262, v263))
  {
    uint64_t v264 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v264 = 134217984;
    swift_beginAccess();
    *(void *)(v372 + 2264) = sub_256239418(*v337);
    sub_2562E38F0();
    _os_log_impl(&dword_256226000, v262, v263, "SQL calculator completed: SpeakerIdSamplingCalculator query yielded %ld results", v264, 0xCu);
    MEMORY[0x25A2A5190](v264, -1, -1);
  }

  uint64_t v265 = sub_2562E3410();
  os_log_type_t v266 = sub_2562E37F0();
  if (os_log_type_enabled(v265, v266))
  {
    uint64_t v267 = *(void *)(v372 + 2320);
    uint64_t v268 = (uint8_t *)swift_slowAlloc();
    uint64_t v269 = swift_slowAlloc();
    v376[0] = v269;
    *(_DWORD *)uint64_t v268 = 136315138;
    swift_beginAccess();
    uint64_t v270 = swift_bridgeObjectRetain();
    uint64_t v271 = MEMORY[0x25A2A4430](v270, v267);
    unint64_t v273 = v272;
    swift_bridgeObjectRelease();
    *(void *)(v372 + 2232) = sub_256229738(v271, v273, v376);
    sub_2562E38F0();
    uint64_t v80 = v281;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v265, v266, "#SpeakerIdSamplingCalculator: output %s", v268, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v269, -1, -1);
    MEMORY[0x25A2A5190](v268, -1, -1);
  }
  swift_release();

  sub_25622F3C4(v80, &qword_269F53DB0);
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v9 = v277;
  swift_task_dealloc();
LABEL_14:
  uint64_t v35 = v372;
  swift_beginAccess();
  uint64_t v34 = *v337;
LABEL_15:
  uint64_t v36 = *(uint64_t **)(v35 + 2304);
  uint64_t *v36 = v9;
  v36[1] = v5;
  v36[2] = v34;
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v37 = *(uint64_t (**)(void))(v35 + 8);
LABEL_23:
  return v37();
}

id sub_2562B1B60(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF908]), sel_initWithTimeIntervalSince1970_, (double)*(unint64_t *)(a1 + 16));
}

uint64_t sub_2562B1BC8(uint64_t a1)
{
  uint64_t v75 = a1;
  uint64_t v70 = v1 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger;
  os_log_type_t v2 = sub_2562E3410();
  os_log_type_t v3 = sub_2562E37F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_256226000, v2, v3, "#SpeakerIdSamplingCalculator: randomRowsForEachDate", v4, 2u);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }

  unint64_t v5 = sub_2562B2464();
  unint64_t v82 = sub_256246EA8(MEMORY[0x263F8EE78]);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v71 = v5 + 64;
  unint64_t v73 = v5;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F555A0);
  uint64_t v69 = &v67;
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  unint64_t v76 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v77 = v12;
  unint64_t v13 = (char *)&v67 - v76;
  int64_t v78 = 0;
  int64_t v72 = (unint64_t)(v7 + 63) >> 6;
  int64_t v68 = v72 - 1;
  uint64_t v14 = (uint64_t *)&unk_269F555A8;
  uint64_t v74 = (char *)&v67 - v76;
  while (1)
  {
    MEMORY[0x270FA5388](v11);
    uint64_t v17 = (char *)&v67 - v76;
    if (v9)
    {
      unint64_t v18 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v19 = v18 | (v78 << 6);
LABEL_10:
      unint64_t v20 = v73;
      uint64_t v21 = *(void *)(v73 + 48);
      uint64_t v22 = sub_2562E2F80();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(v14);
      *(void *)&v17[*(int *)(v24 + 48)] = *(void *)(v23 + 8 * v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    int64_t v25 = v78 + 1;
    if (__OFADD__(v78, 1)) {
      goto LABEL_62;
    }
    if (v25 < v72)
    {
      unint64_t v26 = *(void *)(v71 + 8 * v25);
      if (v26) {
        goto LABEL_14;
      }
      int64_t v27 = v78 + 2;
      ++v78;
      if (v25 + 1 < v72)
      {
        unint64_t v26 = *(void *)(v71 + 8 * v27);
        if (v26) {
          goto LABEL_17;
        }
        int64_t v78 = v25 + 1;
        if (v25 + 2 < v72)
        {
          unint64_t v26 = *(void *)(v71 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
LABEL_14:
            unint64_t v9 = (v26 - 1) & v26;
            unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
            int64_t v78 = v25;
            goto LABEL_10;
          }
          int64_t v27 = v25 + 3;
          int64_t v78 = v25 + 2;
          if (v25 + 3 < v72)
          {
            unint64_t v26 = *(void *)(v71 + 8 * v27);
            if (!v26)
            {
              while (1)
              {
                int64_t v25 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_63;
                }
                if (v25 >= v72)
                {
                  int64_t v78 = v68;
                  goto LABEL_28;
                }
                unint64_t v26 = *(void *)(v71 + 8 * v25);
                ++v27;
                if (v26) {
                  goto LABEL_14;
                }
              }
            }
LABEL_17:
            int64_t v25 = v27;
            goto LABEL_14;
          }
        }
      }
    }
LABEL_28:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(v14);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
    unint64_t v9 = 0;
LABEL_29:
    sub_25622F514((uint64_t)v17, (uint64_t)v13, &qword_269F555A0);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v13, 1, v29) == 1) {
      break;
    }
    uint64_t v30 = *(void *)&v13[*(int *)(v29 + 48)];
    uint64_t v31 = sub_2562E2F80();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v67 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = *(void (**)(char *, char *))(v32 + 32);
    uint64_t v79 = v36;
    v35(v34, v13);
    v81[0] = v30;
    swift_bridgeObjectRetain();
    sub_2562B3154();
    uint64_t v37 = v81[0];
    uint64_t v38 = *(void *)(v30 + 16);
    swift_bridgeObjectRelease();
    unint64_t v39 = v75;
    if (v38 < v75) {
      unint64_t v39 = v38;
    }
    if ((v39 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      uint64_t result = sub_2562E3CD0();
      __break(1u);
      return result;
    }
    if (v39)
    {
      if (*(void *)(v37 + 16) >= v39) {
        unint64_t v40 = v39;
      }
      else {
        unint64_t v40 = *(void *)(v37 + 16);
      }
    }
    else
    {
      unint64_t v40 = 0;
    }
    sub_2562E3CA0();
    swift_unknownObjectRetain_n();
    uint64_t v41 = swift_dynamicCastClass();
    if (!v41)
    {
      swift_release();
      uint64_t v41 = MEMORY[0x263F8EE78];
    }
    uint64_t v42 = *(void *)(v41 + 16);
    swift_release();
    if (v42 == v40)
    {
      uint64_t v43 = swift_dynamicCastClass();
      swift_release();
      if (v43) {
        goto LABEL_44;
      }
      uint64_t v43 = MEMORY[0x263F8EE78];
    }
    else
    {
      swift_release();
      uint64_t v43 = sub_2562B32D0(v37, v37 + 32, 0, (2 * v40) | 1);
    }
    swift_release();
LABEL_44:
    id v44 = v14;
    uint64_t v45 = v82;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v81[0] = v45;
    unint64_t v82 = 0x8000000000000000;
    unint64_t v48 = sub_2562564F4((uint64_t)v34);
    uint64_t v49 = *(void *)(v45 + 16);
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      goto LABEL_60;
    }
    char v52 = v47;
    if (*(void *)(v45 + 24) >= v51)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v55 = (void *)v81[0];
        if (v47) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_256288EE4();
        uint64_t v55 = (void *)v81[0];
        if (v52) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_2562874F8(v51, isUniquelyReferenced_nonNull_native);
      unint64_t v53 = sub_2562564F4((uint64_t)v34);
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_64;
      }
      unint64_t v48 = v53;
      uint64_t v55 = (void *)v81[0];
      if (v52)
      {
LABEL_6:
        uint64_t v15 = v55[7];
        swift_bridgeObjectRelease();
        *(void *)(v15 + 8 * v48) = v43;
        uint64_t v16 = v79;
        goto LABEL_7;
      }
    }
    v55[(v48 >> 6) + 8] |= 1 << v48;
    uint64_t v16 = v79;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 16))(v55[6] + *(void *)(v32 + 72) * v48, v34, v79);
    *(void *)(v55[7] + 8 * v48) = v43;
    uint64_t v56 = v55[2];
    BOOL v57 = __OFADD__(v56, 1);
    uint64_t v58 = v56 + 1;
    if (v57) {
      goto LABEL_61;
    }
    v55[2] = v58;
LABEL_7:
    unint64_t v82 = (unint64_t)v55;
    swift_bridgeObjectRelease();
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v16);
    unint64_t v13 = v74;
    uint64_t v14 = v44;
  }
  swift_release();
  uint64_t v59 = sub_2562E3410();
  os_log_type_t v60 = sub_2562E37F0();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v81[0] = v62;
    *(_DWORD *)uint64_t v61 = 136315138;
    swift_beginAccess();
    sub_2562E2F80();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F555D0);
    sub_256257778(&qword_269F54418);
    uint64_t v63 = sub_2562E34B0();
    unint64_t v65 = v64;
    swift_bridgeObjectRelease();
    uint64_t v80 = sub_256229738(v63, v65, v81);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v59, v60, "#SpeakerIdSamplingCalculator: randomRowsForEachDate rows: %s", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v62, -1, -1);
    MEMORY[0x25A2A5190](v61, -1, -1);
  }

  swift_beginAccess();
  return v82;
}

unint64_t sub_2562B2464()
{
  unint64_t v80 = sub_256246EA8(MEMORY[0x263F8EE78]);
  uint64_t v63 = v0;
  uint64_t v68 = v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger;
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "#SpeakerIdSamplingCalculator: groupRowsByDate", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  if (sub_2562E3280())
  {
    uint64_t v66 = v63 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_calendar;
    uint64_t v61 = OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_defaults;
    unint64_t v5 = 0x80000002562EE8E0;
    *(void *)&long long v4 = 136315138;
    long long v60 = v4;
    unint64_t v59 = 0x80000002562EDC50;
    long long v62 = xmmword_2562E4C90;
    unint64_t v65 = 0x80000002562EE8E0;
    uint64_t v64 = MEMORY[0x263F8EE58] + 8;
    do
    {
      uint64_t v6 = sub_2562E3270();
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v75 = 0xD000000000000017;
        unint64_t v76 = v5;
        sub_2562E39D0();
        if (*(void *)(v7 + 16) && (unint64_t v8 = sub_25625626C((uint64_t)v77), (v9 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v78);
        }
        else
        {
          long long v78 = 0u;
          long long v79 = 0u;
        }
        sub_2562571A0((uint64_t)v77);
        if (*((void *)&v79 + 1))
        {
          sub_25624B1DC();
          if (swift_dynamicCast())
          {
            uint64_t v10 = (void *)v75;
            swift_bridgeObjectRetain_n();
            uint64_t v11 = sub_2562E3410();
            os_log_type_t v12 = sub_2562E37F0();
            if (os_log_type_enabled(v11, v12))
            {
              uint64_t v13 = swift_slowAlloc();
              uint64_t v14 = swift_slowAlloc();
              v77[0] = v14;
              *(_DWORD *)uint64_t v13 = v60;
              swift_bridgeObjectRetain();
              uint64_t v15 = sub_2562E34B0();
              unint64_t v17 = v16;
              swift_bridgeObjectRelease();
              *(void *)(v13 + 4) = sub_256229738(v15, v17, v77);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_256226000, v11, v12, "#SpeakerIdSamplingCalculator: groupRowsByDate current row %s", (uint8_t *)v13, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x25A2A5190](v14, -1, -1);
              MEMORY[0x25A2A5190](v13, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            id v70 = v10;
            objc_msgSend(v10, sel_unsignedLongLongValue);
            uint64_t v18 = sub_2562E2F80();
            uint64_t v74 = &v56;
            uint64_t v19 = *(void *)(v18 - 8);
            uint64_t v20 = *(void *)(v19 + 64);
            MEMORY[0x270FA5388](v18);
            uint64_t v21 = sub_2562E2F30();
            unint64_t v73 = &v56;
            MEMORY[0x270FA5388](v21);
            uint64_t v22 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v69 = v22;
            uint64_t v23 = sub_2562E3010();
            int64_t v72 = &v56;
            MEMORY[0x270FA5388](v23);
            uint64_t v24 = sub_2562E30A0();
            unint64_t v71 = &v56;
            MEMORY[0x270FA5388](v24);
            sub_2562E2E90();
            unint64_t v25 = sub_2562E2F50();
            if ((v25 & 1) != 0
              && (unint64_t v26 = *(void **)(v63 + v61),
                  int64_t v27 = (void *)sub_2562E3550(),
                  LOBYTE(v26) = objc_msgSend(v26, sel_BOOLForKey_, v27),
                  v27,
                  (v26 & 1) == 0))
            {
              swift_bridgeObjectRelease();

              uint64_t v45 = *(void (**)(char *, uint64_t))(v19 + 8);
              v45(v22, v18);
              v45(v22, v18);
              v45(v22, v18);
              v45(v69, v18);
            }
            else
            {
              if (*(void *)(v80 + 16) && (unint64_t v25 = sub_2562564F4((uint64_t)v22), (v28 & 1) != 0))
              {
                uint64_t v67 = &v56;
                MEMORY[0x270FA5388](v25);
                uint64_t v29 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
                (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v29, v22, v18);
                uint64_t v30 = sub_2562821A4(v77);
                uint64_t v32 = (void (*)(uint64_t *, void))v30;
                uint64_t v33 = *v31;
                if (*v31)
                {
                  uint64_t v58 = (void (*)(uint64_t *, void))v30;
                  uint64_t v34 = v31;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v36 = v34;
                  *uint64_t v34 = v33;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    id v46 = sub_25626C2A8(0, v33[2] + 1, 1, v33);
                    uint64_t v36 = v34;
                    uint64_t v33 = v46;
                    *uint64_t v34 = v46;
                  }
                  unint64_t v38 = v33[2];
                  unint64_t v37 = v33[3];
                  unint64_t v39 = v38 + 1;
                  if (v38 >= v37 >> 1)
                  {
                    uint64_t v56 = v36;
                    unint64_t v57 = v38 + 1;
                    char v47 = sub_25626C2A8((void *)(v37 > 1), v38 + 1, 1, v33);
                    unint64_t v39 = v57;
                    uint64_t v33 = v47;
                    *uint64_t v56 = v47;
                  }
                  void v33[2] = v39;
                  v33[v38 + 4] = v7;
                  v58(v77, 0);
                }
                else
                {
                  swift_bridgeObjectRelease();
                  v32(v77, 0);
                }

                id v44 = *(void (**)(char *, uint64_t))(v19 + 8);
                v44(v29, v18);
              }
              else
              {
                uint64_t v67 = &v56;
                MEMORY[0x270FA5388](v25);
                unint64_t v40 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
                (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v40, v22, v18);
                __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BA8);
                uint64_t v41 = swift_allocObject();
                *(_OWORD *)(v41 + 16) = v62;
                *(void *)(v41 + 32) = v7;
                uint64_t v42 = v80;
                char v43 = swift_isUniquelyReferenced_nonNull_native();
                v77[0] = v42;
                sub_256289C50(v41, (uint64_t)v40, v43);
                unint64_t v80 = v77[0];
                swift_bridgeObjectRelease();
                id v44 = *(void (**)(char *, uint64_t))(v19 + 8);
                v44(v40, v18);
              }
              v44(v22, v18);
              v44(v22, v18);
              v44(v22, v18);
              v44(v69, v18);
            }
            unint64_t v5 = v65;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_25622F3C4((uint64_t)&v78, &qword_269F543D8);
        }
      }
    }
    while ((sub_2562E3280() & 1) != 0);
  }
  unint64_t v48 = sub_2562E3410();
  os_log_type_t v49 = sub_2562E37F0();
  if (os_log_type_enabled(v48, v49))
  {
    BOOL v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v77[0] = v51;
    *(_DWORD *)BOOL v50 = 136315138;
    swift_beginAccess();
    sub_2562E2F80();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F555D0);
    sub_256257778(&qword_269F54418);
    uint64_t v52 = sub_2562E34B0();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_256229738(v52, v54, v77);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256226000, v48, v49, "#SpeakerIdSamplingCalculator: groupRowsByDate results %s", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v51, -1, -1);
    MEMORY[0x25A2A5190](v50, -1, -1);
  }

  swift_beginAccess();
  return v80;
}

uint64_t SpeakerIdSamplingCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_calendar;
  uint64_t v2 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  return v0;
}

uint64_t SpeakerIdSamplingCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_calendar;
  uint64_t v2 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework27SpeakerIdSamplingCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2562B3078(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25622844C;
  return sub_2562AC8A0(a1);
}

uint64_t sub_2562B3114()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2562B314C@<X0>(uint64_t *a1@<X8>)
{
  return sub_25622BC98(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_2562B3154()
{
  uint64_t v1 = *(void **)v0;
  unint64_t v2 = *(void *)(*(void *)v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      unint64_t v12 = 0;
      MEMORY[0x25A2A51A0](&v12, 8);
      uint64_t v6 = (v12 * (unsigned __int128)v2) >> 64;
      if (v2 > v12 * v2)
      {
        unint64_t v7 = -(uint64_t)v2 % v2;
        if (v7 > v12 * v2)
        {
          do
          {
            unint64_t v12 = 0;
            MEMORY[0x25A2A51A0](&v12, 8);
          }
          while (v7 > v12 * v2);
          uint64_t v6 = (v12 * (unsigned __int128)v2) >> 64;
        }
      }
      unint64_t v8 = v4 + v6;
      if (__OFADD__(v4, v6)) {
        break;
      }
      if (v4 != v8)
      {
        unint64_t v9 = v1[2];
        if (v4 >= v9) {
          goto LABEL_19;
        }
        if (v8 >= v9) {
          goto LABEL_20;
        }
        uint64_t v10 = v1[v4 + 4];
        uint64_t v11 = v1[v8 + 4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v1 = (void *)sub_2562B3454(v1);
        }
        if (v4 >= v1[2]) {
          goto LABEL_21;
        }
        v1[v4 + 4] = v11;
        swift_bridgeObjectRelease();
        if (v8 >= v1[2]) {
          goto LABEL_22;
        }
        v1[v8 + 4] = v10;
        swift_bridgeObjectRelease();
        *(void *)uint64_t v0 = v1;
      }
      --v2;
      if (v4++ == v3) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_2562B32D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      unint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BB0);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BA8);
      unint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_2562B3454(void *a1)
{
  return sub_2562B78F0(0, a1[2], 0, a1);
}

uint64_t sub_2562B3468()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2562B34A0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2562B34AC()
{
  return sub_256230C2C(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_2562B34B4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B34C4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B34D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2562B34E4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_2562B351C()
{
  return sub_2562B1B60(v0);
}

uint64_t sub_2562B3524()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_2562B3558()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B3568()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B3578()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B3588()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B3598()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B35A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B35B8()
{
  return sub_25622CC48(*(uint64_t (**)(void))(v0 + 16));
}

void sub_2562B35C0(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_25622CF90(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2562B35C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B35D8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B35E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_2562B3618()
{
  uint64_t v1 = sub_2562E2F80();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2562B36A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2562E2F80();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_2562B371C()
{
  return sub_256230CA8(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_2562B3724()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2562B3734()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

ValueMetadata *type metadata accessor for SpeakerIdSamplingResults()
{
  return &type metadata for SpeakerIdSamplingResults;
}

uint64_t sub_2562B3754()
{
  return type metadata accessor for SpeakerIdSamplingCalculator();
}

uint64_t type metadata accessor for SpeakerIdSamplingCalculator()
{
  uint64_t result = qword_269F555B8;
  if (!qword_269F555B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2562B37A8()
{
  sub_2562E3060();
  if (v0 <= 0x3F)
  {
    sub_2562E3430();
    if (v1 <= 0x3F)
    {
      sub_25622F25C();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for SpeakerIdSamplingCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSamplingCalculator);
}

uint64_t dispatch thunk of SpeakerIdSamplingCalculator.__allocating_init(defaults:logger:sqlFileURL:bookmarkService:samplingUtils:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SpeakerIdSamplingCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

unint64_t sub_2562B3A4C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7465537465737361;
      break;
    case 2:
      unint64_t result = 0x69745F746E657665;
      break;
    case 3:
      unint64_t result = 0x745F656369766564;
      break;
    case 4:
      unint64_t result = 0x625F6D6574737973;
      break;
    case 5:
      unint64_t result = 0x5F6D6172676F7270;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0x644964646FLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0xD000000000000029;
      break;
    case 12:
      unint64_t result = 0xD00000000000002BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2562B3BF4(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7465537465737361;
      break;
    case 2:
      unint64_t result = 0x69745F746E657665;
      break;
    case 3:
      unint64_t result = 0x745F656369766564;
      break;
    case 4:
      unint64_t result = 0x625F6D6574737973;
      break;
    case 5:
      unint64_t result = 0x5F6D6172676F7270;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0x644964646FLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0xD000000000000029;
      break;
    case 12:
      unint64_t result = 0xD00000000000002BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2562B3D9C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_2562B3A4C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_2562B3A4C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2562E3C90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2562B3E28()
{
  char v1 = *v0;
  sub_2562E3D50();
  sub_2562B3A4C(v1);
  sub_2562E3600();
  swift_bridgeObjectRelease();
  return sub_2562E3D90();
}

uint64_t sub_2562B3E8C()
{
  sub_2562B3A4C(*v0);
  sub_2562E3600();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2562B3EE0()
{
  char v1 = *v0;
  sub_2562E3D50();
  sub_2562B3A4C(v1);
  sub_2562E3600();
  swift_bridgeObjectRelease();
  return sub_2562E3D90();
}

uint64_t sub_2562B3F40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2562B7E4C();
  *a1 = result;
  return result;
}

unint64_t sub_2562B3F70@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2562B3A4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2562B3F9C()
{
  return sub_2562B3BF4(*v0);
}

uint64_t sub_2562B3FA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2562B7E4C();
  *a1 = result;
  return result;
}

void sub_2562B3FCC(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

void sub_2562B3FD8(void *a1@<X8>)
{
  *a1 = &unk_2704CB890;
}

uint64_t sub_2562B3FE8(uint64_t a1)
{
  unint64_t v2 = sub_2562B5A8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2562B4024(uint64_t a1)
{
  unint64_t v2 = sub_2562B5A8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2562B4060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2562E3430();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F55648);
  MEMORY[0x270FA5388](v8 - 8);
  int64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AssetPenetrationData();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v31 - v16;
  if ((sub_2562E3280() & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v36 = v17;
  unint64_t v37 = v15;
  uint64_t v38 = v5;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v18 = sub_2562E2FD0();
  uint64_t v35 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v33 = v19 + 16;
  uint64_t v34 = v20;
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v32 = v12;
  uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  unint64_t v24 = MEMORY[0x263F8EE78];
  do
  {
    while (1)
    {
      MEMORY[0x270FA5388](v18);
      uint64_t v25 = v11;
      v34((char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v35);
      (*v22)(v7, v40, v38);
      uint64_t v26 = swift_retain();
      sub_2562B43F0(v26, (uint64_t)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v7, (uint64_t)v10);
      if ((*v23)(v10, 1, v11) != 1) {
        break;
      }
      sub_25622F3C4((uint64_t)v10, &qword_269F55648);
      uint64_t v18 = sub_2562E3280();
      if ((v18 & 1) == 0) {
        return v24;
      }
    }
    uint64_t v27 = (uint64_t)v36;
    sub_2562B7E98((uint64_t)v10, (uint64_t)v36);
    sub_256275B44(v27, (uint64_t)v37);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v24 = sub_25626C20C(0, *(void *)(v24 + 16) + 1, 1, v24);
    }
    unint64_t v29 = *(void *)(v24 + 16);
    unint64_t v28 = *(void *)(v24 + 24);
    if (v29 >= v28 >> 1) {
      unint64_t v24 = sub_25626C20C(v28 > 1, v29 + 1, 1, v24);
    }
    *(void *)(v24 + 16) = v29 + 1;
    sub_2562B7E98((uint64_t)v37, v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v29);
    sub_256275BA8((uint64_t)v36);
    uint64_t v11 = v25;
    uint64_t v18 = sub_2562E3280();
  }
  while ((v18 & 1) != 0);
  return v24;
}

uint64_t sub_2562B43F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_2562E3270();
  if (v8)
  {
    uint64_t v9 = v8;
    *(void *)&long long v151 = 0xD000000000000015;
    *((void *)&v151 + 1) = 0x80000002562EB0B0;
    sub_2562E39D0();
    if (*(void *)(v9 + 16) && (unint64_t v10 = sub_25625626C((uint64_t)v150), (v11 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v151);
    }
    else
    {
      long long v151 = 0u;
      long long v152 = 0u;
    }
    sub_2562571A0((uint64_t)v150);
    if (*((void *)&v152 + 1))
    {
      int v12 = swift_dynamicCast();
      if (v12) {
        uint64_t v13 = v148;
      }
      else {
        uint64_t v13 = 0;
      }
      if (v12) {
        unint64_t v14 = v149;
      }
      else {
        unint64_t v14 = 0;
      }
      unint64_t v144 = v14;
      uint64_t v145 = v13;
    }
    else
    {
      sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
      unint64_t v144 = 0;
      uint64_t v145 = 0;
    }
    uint64_t v148 = 0x7465537465737361;
    unint64_t v149 = 0xEF64616F6C796150;
    sub_2562E39D0();
    if (*(void *)(v9 + 16) && (unint64_t v23 = sub_25625626C((uint64_t)v150), (v24 & 1) != 0))
    {
      sub_256229CD0(*(void *)(v9 + 56) + 32 * v23, (uint64_t)&v151);
    }
    else
    {
      long long v151 = 0u;
      long long v152 = 0u;
    }
    sub_2562571A0((uint64_t)v150);
    uint64_t v146 = a1;
    uint64_t v147 = a2;
    if (*((void *)&v152 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v25 = sub_2562E35A0();
        uint64_t v26 = a3;
        uint64_t v27 = *(void *)(v25 - 8);
        MEMORY[0x270FA5388](v25);
        unint64_t v29 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_2562E3590();
        uint64_t v30 = sub_2562E3570();
        unint64_t v32 = v31;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v25);
        a3 = v26;
        unint64_t v33 = v32;
LABEL_29:
        sub_2562E2E00();
        swift_allocObject();
        sub_2562E2DF0();
        if (v33 >> 60 == 15) {
          uint64_t v34 = 0;
        }
        else {
          uint64_t v34 = v30;
        }
        if (v33 >> 60 == 15) {
          unint64_t v35 = 0xC000000000000000;
        }
        else {
          unint64_t v35 = v33;
        }
        sub_2562B7EFC(v30, v33);
        sub_2562B6374();
        sub_2562E2DE0();
        uint64_t v139 = a4;
        swift_release();
        sub_25625B2C0(v34, v35);
        uint64_t v142 = v150[1];
        uint64_t v143 = v150[0];
        uint64_t v141 = v150[2];
        uint64_t v140 = v150[3];
        *(void *)&long long v151 = 0x69745F746E657665;
        *((void *)&v151 + 1) = 0xEF706D617473656DLL;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v36 = sub_25625626C((uint64_t)v150), (v37 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v36, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v38 = swift_dynamicCast();
          uint64_t v39 = v148;
          if (!v38) {
            uint64_t v39 = 0;
          }
          uint64_t v138 = v39;
          if (v38) {
            unint64_t v40 = v149;
          }
          else {
            unint64_t v40 = 0;
          }
          unint64_t v137 = v40;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v138 = 0;
          unint64_t v137 = 0;
        }
        *(void *)&long long v151 = 0x745F656369766564;
        *((void *)&v151 + 1) = 0xEB00000000657079;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v41 = sub_25625626C((uint64_t)v150), (v42 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v41, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v43 = swift_dynamicCast();
          uint64_t v44 = v148;
          if (!v43) {
            uint64_t v44 = 0;
          }
          uint64_t v136 = v44;
          if (v43) {
            unint64_t v45 = v149;
          }
          else {
            unint64_t v45 = 0;
          }
          unint64_t v135 = v45;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v136 = 0;
          unint64_t v135 = 0;
        }
        strcpy((char *)&v151, "system_build");
        BYTE13(v151) = 0;
        HIWORD(v151) = -5120;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v46 = sub_25625626C((uint64_t)v150), (v47 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v46, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v48 = swift_dynamicCast();
          uint64_t v49 = v148;
          if (!v48) {
            uint64_t v49 = 0;
          }
          uint64_t v134 = v49;
          if (v48) {
            unint64_t v50 = v149;
          }
          else {
            unint64_t v50 = 0;
          }
          unint64_t v133 = v50;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v134 = 0;
          unint64_t v133 = 0;
        }
        strcpy((char *)&v151, "program_code");
        BYTE13(v151) = 0;
        HIWORD(v151) = -5120;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v51 = sub_25625626C((uint64_t)v150), (v52 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v51, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v53 = swift_dynamicCast();
          uint64_t v54 = v148;
          if (!v53) {
            uint64_t v54 = 0;
          }
          uint64_t v132 = v54;
          if (v53) {
            unint64_t v55 = v149;
          }
          else {
            unint64_t v55 = 0;
          }
          unint64_t v131 = v55;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v132 = 0;
          unint64_t v131 = 0;
        }
        *(void *)&long long v151 = 0xD000000000000011;
        *((void *)&v151 + 1) = 0x80000002562EB110;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v56 = sub_25625626C((uint64_t)v150), (v57 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v56, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v58 = swift_dynamicCast();
          uint64_t v59 = v148;
          if (!v58) {
            uint64_t v59 = 0;
          }
          uint64_t v130 = v59;
          if (v58) {
            unint64_t v60 = v149;
          }
          else {
            unint64_t v60 = 0;
          }
          unint64_t v129 = v60;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v130 = 0;
          unint64_t v129 = 0;
        }
        *(void *)&long long v151 = 0xD000000000000013;
        *((void *)&v151 + 1) = 0x80000002562EAE50;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v61 = sub_25625626C((uint64_t)v150), (v62 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v61, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v63 = swift_dynamicCast();
          uint64_t v64 = v148;
          if (!v63) {
            uint64_t v64 = 0;
          }
          uint64_t v128 = v64;
          if (v63) {
            unint64_t v65 = v149;
          }
          else {
            unint64_t v65 = 0;
          }
          unint64_t v127 = v65;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v128 = 0;
          unint64_t v127 = 0;
        }
        *(void *)&long long v151 = 0xD000000000000019;
        *((void *)&v151 + 1) = 0x80000002562EB130;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v66 = sub_25625626C((uint64_t)v150), (v67 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v66, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v68 = swift_dynamicCast();
          uint64_t v69 = v148;
          if (!v68) {
            uint64_t v69 = 0;
          }
          uint64_t v126 = v69;
          if (v68) {
            unint64_t v70 = v149;
          }
          else {
            unint64_t v70 = 0;
          }
          unint64_t v125 = v70;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v126 = 0;
          unint64_t v125 = 0;
        }
        *(void *)&long long v151 = 0xD00000000000002CLL;
        *((void *)&v151 + 1) = 0x80000002562EAEB0;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v71 = sub_25625626C((uint64_t)v150), (v72 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v71, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v73 = swift_dynamicCast();
          uint64_t v74 = v148;
          if (!v73) {
            uint64_t v74 = 0;
          }
          uint64_t v124 = v74;
          int v75 = v73 ^ 1;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v124 = 0;
          int v75 = 1;
        }
        int v123 = v75;
        *(void *)&long long v151 = 0xD000000000000029;
        *((void *)&v151 + 1) = 0x80000002562EB150;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v76 = sub_25625626C((uint64_t)v150), (v77 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v76, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v78 = swift_dynamicCast();
          uint64_t v79 = v148;
          if (!v78) {
            uint64_t v79 = 0;
          }
          uint64_t v122 = v79;
          int v80 = v78 ^ 1;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v122 = 0;
          int v80 = 1;
        }
        int v121 = v80;
        *(void *)&long long v151 = 0xD00000000000002BLL;
        *((void *)&v151 + 1) = 0x80000002562EB180;
        sub_2562E39D0();
        if (*(void *)(v9 + 16) && (unint64_t v81 = sub_25625626C((uint64_t)v150), (v82 & 1) != 0))
        {
          sub_256229CD0(*(void *)(v9 + 56) + 32 * v81, (uint64_t)&v151);
        }
        else
        {
          long long v151 = 0u;
          long long v152 = 0u;
        }
        sub_2562571A0((uint64_t)v150);
        if (*((void *)&v152 + 1))
        {
          int v83 = swift_dynamicCast();
          uint64_t v84 = v148;
          if (!v83) {
            uint64_t v84 = 0;
          }
          uint64_t v120 = v84;
          int v85 = v83 ^ 1;
        }
        else
        {
          sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
          uint64_t v120 = 0;
          int v85 = 1;
        }
        int v119 = v85;
        uint64_t v86 = v139;
        uint64_t v87 = swift_bridgeObjectRetain();
        sub_25626A6E4(v87, v9);
        uint64_t v89 = v88;
        swift_bridgeObjectRelease_n();
        v150[0] = v89;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F549E8);
        sub_25626AA80((unint64_t *)&qword_269F549F0, &qword_269F549E8);
        uint64_t v90 = sub_2562E3500();
        unint64_t v92 = v91;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        os_log_type_t v93 = sub_2562E3410();
        os_log_type_t v94 = sub_2562E3810();
        if (os_log_type_enabled(v93, v94))
        {
          unint64_t v117 = v33;
          uint64_t v95 = swift_slowAlloc();
          uint64_t v118 = a3;
          uint64_t v96 = (uint8_t *)v95;
          uint64_t v97 = swift_slowAlloc();
          v150[0] = v97;
          *(_DWORD *)uint64_t v96 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)&long long v151 = sub_256229738(v90, v92, v150);
          sub_2562E38F0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_256226000, v93, v94, "Asset Set Status query result yielded: \n{%s}", v96, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A2A5190](v97, -1, -1);
          MEMORY[0x25A2A5190](v96, -1, -1);

          swift_release();
          sub_256271E5C(v30, v117);
          uint64_t v98 = sub_2562E3430();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v98 - 8) + 8))(v118, v98);
        }
        else
        {
          sub_256271E5C(v30, v33);

          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v99 = sub_2562E3430();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v99 - 8) + 8))(a3, v99);
        }
        uint64_t v100 = v147;
        unint64_t v101 = v144;
        *(void *)uint64_t v86 = v145;
        *(void *)(v86 + 8) = v101;
        uint64_t v102 = v142;
        *(void *)(v86 + 16) = v143;
        *(void *)(v86 + 24) = v102;
        uint64_t v103 = v140;
        *(void *)(v86 + 32) = v141;
        *(void *)(v86 + 40) = v103;
        unint64_t v104 = v137;
        *(void *)(v86 + 48) = v138;
        *(void *)(v86 + 56) = v104;
        unint64_t v105 = v135;
        *(void *)(v86 + 64) = v136;
        *(void *)(v86 + 72) = v105;
        unint64_t v106 = v133;
        *(void *)(v86 + 80) = v134;
        *(void *)(v86 + 88) = v106;
        unint64_t v107 = v131;
        *(void *)(v86 + 96) = v132;
        *(void *)(v86 + 104) = v107;
        unint64_t v108 = v129;
        *(void *)(v86 + 112) = v130;
        *(void *)(v86 + 120) = v108;
        unint64_t v109 = v127;
        *(void *)(v86 + 128) = v128;
        *(void *)(v86 + 136) = v109;
        *(void *)(v86 + 144) = v124;
        *(unsigned char *)(v86 + 152) = v123;
        uint64_t v110 = (int *)type metadata accessor for AssetPenetrationData();
        uint64_t v111 = v86 + v110[13];
        uint64_t v112 = sub_2562E2FD0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 32))(v111, v100, v112);
        uint64_t v113 = (uint64_t *)(v86 + v110[14]);
        unint64_t v114 = v125;
        *uint64_t v113 = v126;
        v113[1] = v114;
        uint64_t v115 = v86 + v110[15];
        *(void *)uint64_t v115 = v122;
        *(unsigned char *)(v115 + 8) = v121;
        uint64_t v116 = v86 + v110[16];
        *(void *)uint64_t v116 = v120;
        *(unsigned char *)(v116 + 8) = v119;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v110 - 1) + 56))(v86, 0, 1, v110);
      }
    }
    else
    {
      sub_25622F3C4((uint64_t)&v151, &qword_269F543D8);
    }
    uint64_t v30 = 0;
    unint64_t v33 = 0xF000000000000000;
    goto LABEL_29;
  }
  uint64_t v15 = sub_2562E3410();
  os_log_type_t v16 = sub_2562E3810();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v17 = 0;
    _os_log_impl(&dword_256226000, v15, v16, "failed to get row", v17, 2u);
    MEMORY[0x25A2A5190](v17, -1, -1);
  }

  swift_release();
  uint64_t v18 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a3, v18);
  uint64_t v19 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a2, v19);
  uint64_t v20 = type metadata accessor for AssetPenetrationData();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);

  return v21(a4, 1, 1, v20);
}

uint64_t AssetPenetrationData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F555D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562B5A8C();
  sub_2562E3DD0();
  LOBYTE(v12) = 0;
  sub_2562E3BE0();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 32);
    long long v12 = *(_OWORD *)(v3 + 16);
    long long v13 = v9;
    v11[15] = 1;
    sub_2562B5AE0();
    sub_2562E3C00();
    LOBYTE(v12) = 2;
    sub_2562E3BE0();
    LOBYTE(v12) = 3;
    sub_2562E3BE0();
    LOBYTE(v12) = 4;
    sub_2562E3BE0();
    LOBYTE(v12) = 5;
    sub_2562E3BE0();
    LOBYTE(v12) = 6;
    sub_2562E3BE0();
    LOBYTE(v12) = 7;
    sub_2562E3C20();
    LOBYTE(v12) = 8;
    sub_2562E3BE0();
    type metadata accessor for AssetPenetrationData();
    LOBYTE(v12) = 9;
    sub_2562E2FD0();
    sub_2562B63C8(&qword_269F555F0);
    sub_2562E3C50();
    LOBYTE(v12) = 10;
    sub_2562E3BE0();
    LOBYTE(v12) = 11;
    sub_2562E3C20();
    LOBYTE(v12) = 12;
    sub_2562E3C20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2562B5A8C()
{
  unint64_t result = qword_269F555E0;
  if (!qword_269F555E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F555E0);
  }
  return result;
}

unint64_t sub_2562B5AE0()
{
  unint64_t result = qword_269F555E8;
  if (!qword_269F555E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F555E8);
  }
  return result;
}

uint64_t type metadata accessor for AssetPenetrationData()
{
  uint64_t result = qword_269F55610;
  if (!qword_269F55610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssetPenetrationData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F555F8);
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (int *)type metadata accessor for AssetPenetrationData();
  MEMORY[0x270FA5388](v44);
  long long v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2562B5A8C();
  sub_2562E3DC0();
  if (v2)
  {
    uint64_t v45 = v2;
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    BOOL v48 = 0;
  }
  else
  {
    uint64_t v10 = a2;
    LOBYTE(v46) = 0;
    *(void *)long long v9 = sub_2562E3B30();
    *((void *)v9 + 1) = v14;
    char v49 = 1;
    sub_2562B6374();
    sub_2562E3B60();
    long long v15 = v47;
    *((_OWORD *)v9 + 1) = v46;
    *((_OWORD *)v9 + 2) = v15;
    LOBYTE(v46) = 2;
    *((void *)v9 + 6) = sub_2562E3B30();
    *((void *)v9 + 7) = v16;
    LOBYTE(v46) = 3;
    *((void *)v9 + 8) = sub_2562E3B30();
    *((void *)v9 + 9) = v17;
    LOBYTE(v46) = 4;
    *((void *)v9 + 10) = sub_2562E3B30();
    *((void *)v9 + 11) = v18;
    LOBYTE(v46) = 5;
    *((void *)v9 + 12) = sub_2562E3B30();
    *((void *)v9 + 13) = v19;
    LOBYTE(v46) = 6;
    *((void *)v9 + 14) = sub_2562E3B30();
    *((void *)v9 + 15) = v20;
    LOBYTE(v46) = 7;
    *((void *)v9 + 18) = sub_2562E3B80();
    v9[152] = v21 & 1;
    LOBYTE(v46) = 8;
    uint64_t v22 = sub_2562E3B30();
    uint64_t v45 = 0;
    *((void *)v9 + 16) = v22;
    *((void *)v9 + 17) = v23;
    uint64_t v24 = sub_2562E2FD0();
    char v42 = &v40;
    uint64_t v41 = *(void *)(v24 - 8);
    MEMORY[0x270FA5388](v24);
    uint64_t v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v46) = 9;
    sub_2562B63C8(&qword_269F55608);
    uint64_t v27 = v45;
    sub_2562E3BB0();
    BOOL v48 = v27 == 0;
    uint64_t v45 = v27;
    if (v27
      || ((*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v9[v44[13]], v26, v24),
          LOBYTE(v46) = 10,
          uint64_t v28 = v45,
          uint64_t v29 = sub_2562E3B30(),
          (uint64_t v45 = v28) != 0))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v43);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      sub_2562B6324(*((void *)v9 + 2), *((void *)v9 + 3));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v48)
      {
        long long v12 = &v9[v44[13]];
        uint64_t v13 = sub_2562E2FD0();
        return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
    }
    else
    {
      unint64_t v31 = (uint64_t *)&v9[v44[14]];
      *unint64_t v31 = v29;
      v31[1] = v30;
      LOBYTE(v46) = 11;
      uint64_t v32 = sub_2562E3B80();
      uint64_t v45 = 0;
      unint64_t v33 = &v9[v44[15]];
      *(void *)unint64_t v33 = v32;
      v33[8] = v34 & 1;
      LOBYTE(v46) = 12;
      uint64_t v35 = sub_2562E3B80();
      uint64_t v45 = 0;
      uint64_t v36 = v35;
      char v38 = v37;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v43);
      uint64_t v39 = &v9[v44[16]];
      *(void *)uint64_t v39 = v36;
      v39[8] = v38 & 1;
      sub_256275B44((uint64_t)v9, v10);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      return sub_256275BA8((uint64_t)v9);
    }
  }
  return result;
}

uint64_t sub_2562B6324(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2562B6374()
{
  unint64_t result = qword_269F55600;
  if (!qword_269F55600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55600);
  }
  return result;
}

uint64_t sub_2562B63C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2562E2FD0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2562B640C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetPenetrationData.init(from:)(a1, a2);
}

uint64_t sub_2562B6424(void *a1)
{
  return AssetPenetrationData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for AssetPenetrationData(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      uint64_t v9 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v11;
    }
    uint64_t v12 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v12;
    uint64_t v13 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v13;
    uint64_t v14 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v14;
    uint64_t v15 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v15;
    uint64_t v16 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v16;
    uint64_t v17 = a2[16];
    uint64_t v18 = a2[17];
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    uint64_t v19 = a2[18];
    *(void *)(a1 + 136) = v18;
    *(void *)(a1 + 144) = v19;
    uint64_t v20 = a3[13];
    uint64_t v34 = (uint64_t)a2 + v20;
    uint64_t v35 = a1 + v20;
    *(void *)(a1 + 128) = v17;
    uint64_t v21 = sub_2562E2FD0();
    unint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v35, v34, v21);
    uint64_t v22 = a3[14];
    uint64_t v23 = a3[15];
    uint64_t v24 = (void *)(a1 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a1 + v23;
    uint64_t v28 = (uint64_t)a2 + v23;
    *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = a3[16];
    uint64_t v30 = a1 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AssetPenetrationData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssetPenetrationData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  uint64_t v15 = *(void *)(a2 + 128);
  uint64_t v16 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v17 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v16;
  *(void *)(a1 + 144) = v17;
  uint64_t v18 = a3[13];
  uint64_t v32 = a2 + v18;
  uint64_t v33 = a1 + v18;
  *(void *)(a1 + 128) = v15;
  uint64_t v19 = sub_2562E2FD0();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v33, v32, v19);
  uint64_t v20 = a3[14];
  uint64_t v21 = a3[15];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a1 + v21;
  uint64_t v26 = a2 + v21;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  uint64_t v27 = a3[16];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetPenetrationData(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v8)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2562B6B60(a1 + 16);
      long long v9 = *(_OWORD *)(a2 + 32);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 32) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 32);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 32) = v10;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = a3[13];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[15];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[16];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  return a1;
}

uint64_t sub_2562B6B60(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for AssetPenetrationData(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v11 = a3[13];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 128) = v10;
  uint64_t v14 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  uint64_t v18 = a3[16];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  return a1;
}

uint64_t assignWithTake for AssetPenetrationData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  if (!v7)
  {
    sub_2562B6B60(a1 + 16);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v15 = a3[13];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[14];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[15];
  uint64_t v25 = a3[16];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = a2 + v25;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetPenetrationData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2562B6E70);
}

uint64_t sub_2562B6E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_2562E2FD0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 52);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for AssetPenetrationData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2562B6F40);
}

uint64_t sub_2562B6F40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_2562E2FD0();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2562B6FE8()
{
  uint64_t result = sub_2562E2FD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AssetPenetrationData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetPenetrationData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2562B7208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetPenetrationData.CodingKeys()
{
  return &type metadata for AssetPenetrationData.CodingKeys;
}

uint64_t sub_2562B7240()
{
  return sub_25626AA80(&qword_269F55620, &qword_269F55628);
}

unint64_t sub_2562B7280()
{
  unint64_t result = qword_269F55630;
  if (!qword_269F55630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55630);
  }
  return result;
}

unint64_t sub_2562B72D8()
{
  unint64_t result = qword_269F55638;
  if (!qword_269F55638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55638);
  }
  return result;
}

unint64_t sub_2562B7330()
{
  unint64_t result = qword_269F55640;
  if (!qword_269F55640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55640);
  }
  return result;
}

uint64_t sub_2562B7384()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2562B7390(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_2562B74A4(result, v5, 0);
  }
  return result;
}

uint64_t sub_2562B7408()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_2562B74A4(0, v3, 1);
  }
  return result;
}

uint64_t sub_2562B7464(uint64_t result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1)) {
    return sub_2562B74A4(v2 > 1, result + 1, 1);
  }
  return result;
}

uint64_t sub_2562B748C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_2562B74A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2562B7544(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2562B74C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2562B76B0(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_2562B74E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2562B7904(a1, a2, a3, (void *)*v3, &qword_269F55658, &qword_269F54E70);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_2562B7514(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2562B7904(a1, a2, a3, (void *)*v3, &qword_269F55660, &qword_269F54E80);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_2562B7544(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54C00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_2562B76B0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BD8);
  uint64_t v10 = *(void *)(type metadata accessor for SpeakerIdSamplingData(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SpeakerIdSamplingData(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_2562B78F0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_2562B7904(a1, a2, a3, a4, &qword_269F54BA8, &qword_269F54BB0);
}

uint64_t sub_2562B7904(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_2562E3B10();
  __break(1u);
  return result;
}

uint64_t sub_2562B7A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = ~v4;
  *(void *)a3 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v7 = v8;
  uint64_t v9 = -v4;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  *(void *)(a3 + 8) = result;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = v10 & v7;
  char v11 = *(unsigned char *)(a2 + 32);
  *(void *)(a3 + 40) = a2;
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v12 = a2 + 64;
  uint64_t v13 = v14;
  uint64_t v15 = -1 << v11;
  if (-v15 < 64) {
    uint64_t v3 = ~(-1 << -(char)v15);
  }
  *(void *)(a3 + 48) = v12;
  *(void *)(a3 + 56) = ~v15;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = v3 & v13;
  *(unsigned char *)(a3 + 80) = 0;
  return result;
}

void sub_2562B7B00(uint64_t a1@<X8>)
{
  if (*((unsigned char *)v1 + 80) == 1)
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  int64_t v6 = v1[3];
  unint64_t v7 = v1[4];
  if (v7)
  {
    uint64_t v8 = (v7 - 1) & v7;
    unint64_t v9 = __clz(__rbit64(v7)) | (v6 << 6);
    goto LABEL_5;
  }
  int64_t v20 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  int64_t v21 = (unint64_t)(v5 + 64) >> 6;
  int64_t v22 = v1[3];
  if (v20 >= v21) {
    goto LABEL_38;
  }
  unint64_t v23 = *(void *)(v4 + 8 * v20);
  if (!v23)
  {
    int64_t v28 = v6 + 2;
    int64_t v22 = v6 + 1;
    if (v6 + 2 < v21)
    {
      unint64_t v23 = *(void *)(v4 + 8 * v28);
      if (v23)
      {
LABEL_20:
        int64_t v20 = v28;
        goto LABEL_13;
      }
      int64_t v22 = v6 + 2;
      if (v6 + 3 < v21)
      {
        unint64_t v23 = *(void *)(v4 + 8 * (v6 + 3));
        if (v23)
        {
          int64_t v20 = v6 + 3;
          goto LABEL_13;
        }
        int64_t v28 = v6 + 4;
        int64_t v22 = v6 + 3;
        if (v6 + 4 < v21)
        {
          unint64_t v23 = *(void *)(v4 + 8 * v28);
          if (v23) {
            goto LABEL_20;
          }
          int64_t v20 = v6 + 5;
          int64_t v22 = v6 + 4;
          if (v6 + 5 < v21)
          {
            unint64_t v23 = *(void *)(v4 + 8 * v20);
            if (v23) {
              goto LABEL_13;
            }
            int64_t v22 = v21 - 1;
            int64_t v30 = v6 + 6;
            while (v21 != v30)
            {
              unint64_t v23 = *(void *)(v4 + 8 * v30++);
              if (v23)
              {
                int64_t v20 = v30 - 1;
                goto LABEL_13;
              }
            }
          }
        }
      }
    }
LABEL_38:
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    uint64_t *v1 = v3;
    v1[1] = v4;
    v1[2] = v5;
    v1[3] = v22;
    v1[4] = 0;
    goto LABEL_39;
  }
LABEL_13:
  uint64_t v8 = (v23 - 1) & v23;
  unint64_t v9 = __clz(__rbit64(v23)) + (v20 << 6);
  int64_t v6 = v20;
LABEL_5:
  sub_256257824(*(void *)(v3 + 48) + 40 * v9, (uint64_t)&v36);
  uint64_t v10 = *((void *)&v37 + 1);
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v8;
  if (v10)
  {
    long long v39 = v36;
    long long v40 = v37;
    uint64_t v41 = v38;
    uint64_t v11 = v1[5];
    uint64_t v12 = v1[6];
    uint64_t v13 = v1[7];
    int64_t v14 = v1[8];
    unint64_t v15 = v1[9];
    if (v15)
    {
      uint64_t v16 = (v15 - 1) & v15;
      unint64_t v17 = __clz(__rbit64(v15)) | (v14 << 6);
      goto LABEL_8;
    }
    int64_t v24 = v14 + 1;
    if (!__OFADD__(v14, 1))
    {
      int64_t v25 = (unint64_t)(v13 + 64) >> 6;
      int64_t v26 = v1[8];
      if (v24 < v25)
      {
        unint64_t v27 = *(void *)(v12 + 8 * v24);
        if (v27)
        {
LABEL_17:
          uint64_t v16 = (v27 - 1) & v27;
          unint64_t v17 = __clz(__rbit64(v27)) + (v24 << 6);
          int64_t v14 = v24;
LABEL_8:
          sub_256229CD0(*(void *)(v11 + 56) + 32 * v17, (uint64_t)&v34);
          uint64_t v18 = *((void *)&v35 + 1);
          v1[5] = v11;
          v1[6] = v12;
          v1[7] = v13;
          v1[8] = v14;
          v1[9] = v16;
          if (v18)
          {
            sub_256248F84(&v34, &v36);
            long long v19 = v40;
            *(_OWORD *)a1 = v39;
            *(_OWORD *)(a1 + 16) = v19;
            *(void *)(a1 + 32) = v41;
            sub_256248F84(&v36, (_OWORD *)(a1 + 40));
            return;
          }
          goto LABEL_49;
        }
        int64_t v29 = v14 + 2;
        int64_t v26 = v14 + 1;
        if (v14 + 2 < v25)
        {
          unint64_t v27 = *(void *)(v12 + 8 * v29);
          if (v27)
          {
LABEL_23:
            int64_t v24 = v29;
            goto LABEL_17;
          }
          int64_t v26 = v14 + 2;
          if (v14 + 3 < v25)
          {
            unint64_t v27 = *(void *)(v12 + 8 * (v14 + 3));
            if (v27)
            {
              int64_t v24 = v14 + 3;
              goto LABEL_17;
            }
            int64_t v29 = v14 + 4;
            int64_t v26 = v14 + 3;
            if (v14 + 4 < v25)
            {
              unint64_t v27 = *(void *)(v12 + 8 * v29);
              if (v27) {
                goto LABEL_23;
              }
              int64_t v24 = v14 + 5;
              int64_t v26 = v14 + 4;
              if (v14 + 5 < v25)
              {
                unint64_t v27 = *(void *)(v12 + 8 * v24);
                if (v27) {
                  goto LABEL_17;
                }
                int64_t v26 = v25 - 1;
                int64_t v33 = v14 + 6;
                while (v25 != v33)
                {
                  unint64_t v27 = *(void *)(v12 + 8 * v33++);
                  if (v27)
                  {
                    int64_t v24 = v33 - 1;
                    goto LABEL_17;
                  }
                }
              }
            }
          }
        }
      }
      long long v34 = 0u;
      long long v35 = 0u;
      v1[5] = v11;
      v1[6] = v12;
      v1[7] = v13;
      v1[8] = v26;
      v1[9] = 0;
LABEL_49:
      sub_2562571A0((uint64_t)&v39);
      uint64_t v31 = (uint64_t *)&unk_269F543D8;
      uint64_t v32 = &v34;
      goto LABEL_50;
    }
LABEL_53:
    __break(1u);
    return;
  }
LABEL_39:
  uint64_t v31 = (uint64_t *)&unk_269F55650;
  uint64_t v32 = &v36;
LABEL_50:
  sub_25622F3C4((uint64_t)v32, v31);
  *((unsigned char *)v1 + 80) = 1;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
}

uint64_t sub_2562B7E4C()
{
  unint64_t v0 = sub_2562E3B20();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_2562B7E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetPenetrationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562B7EFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2562B7F10(a1, a2);
  }
  return a1;
}

uint64_t sub_2562B7F10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t SpeakerIdSelectionBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework31SpeakerIdSelectionBiomeReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SpeakerIdSelectionBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MetricsFramework31SpeakerIdSelectionBiomeReporter_logger;
  uint64_t v5 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_2562B8070(uint64_t a1)
{
  v2[2] = v1;
  uint64_t v4 = type metadata accessor for SpeakerIdSamplingData(0);
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *(void *)(a1 + 16);
  v2[5] = v5;
  v2[6] = v6;
  return MEMORY[0x270FA2498](sub_2562B8138, 0, 0);
}

uint64_t sub_2562B8138()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Reporter invoked: SpeakerIdSelectionBiomeReporter", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = v0[6];

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    uint64_t v8 = v0[6] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v9 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = v0[5];
      sub_256231958(v8, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
      uint64_t v14 = swift_task_alloc();
      sub_256231A18(v13 + *(int *)(v7 + 120), v14);
      uint64_t v15 = sub_2562E2FD0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_2562344DC(v14);
        swift_task_dealloc();
      }
      else
      {
        uint64_t v17 = sub_2562E2FA0();
        uint64_t v19 = v18;
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
        swift_task_dealloc();
        int64_t v20 = sub_25626B9CC(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1) {
          int64_t v20 = sub_25626B9CC((void *)(v21 > 1), v22 + 1, 1, v20);
        }
        v20[2] = v22 + 1;
        unint64_t v23 = &v20[2 * v22];
        unsigned char v23[4] = v17;
        v23[5] = v19;
      }
      uint64_t v24 = *(void *)(v0[5] + *(int *)(v7 + 112) + 8);
      swift_bridgeObjectRetain();
      int64_t v25 = (void *)sub_2562E36F0();
      swift_bridgeObjectRelease();
      if (v24)
      {
        uint64_t v10 = (void *)sub_2562E3550();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = 0;
      }
      uint64_t v11 = v0[5];
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A4E0]), sel_initWithTimestamp_onDeviceSampleIdentifiers_enrollmentIdentifier_, 0, v25, v10);

      sub_2562E30D0();
      sub_2562319BC(v11);
      v8 += v9;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  int64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

id static SpeakerIdSelectionBiomeReporter.createBiomeEvent(result:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SpeakerIdSamplingData(0);
  sub_256231A18(a1 + *(int *)(v5 + 120), (uint64_t)v4);
  uint64_t v6 = sub_2562E2FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_2562344DC((uint64_t)v4);
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v9 = sub_2562E2FA0();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    uint64_t v8 = sub_25626B9CC(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v13 = v8[2];
    unint64_t v12 = v8[3];
    if (v13 >= v12 >> 1) {
      uint64_t v8 = sub_25626B9CC((void *)(v12 > 1), v13 + 1, 1, v8);
    }
    v8[2] = v13 + 1;
    uint64_t v14 = &v8[2 * v13];
    void v14[4] = v9;
    v14[5] = v11;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2562E2F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (uint64_t *)(a1 + *(int *)(v5 + 112));
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  objc_allocWithZone(MEMORY[0x263F2A4E0]);
  swift_bridgeObjectRetain();
  return sub_25626B878((uint64_t)v17, (uint64_t)v8, v20, v21);
}

uint64_t sub_2562B86D0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework31SpeakerIdSelectionBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t SpeakerIdSelectionBiomeReporter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework31SpeakerIdSelectionBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SpeakerIdSelectionBiomeReporter.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework31SpeakerIdSelectionBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2562B8858()
{
  return type metadata accessor for SpeakerIdSelectionBiomeReporter();
}

uint64_t type metadata accessor for SpeakerIdSelectionBiomeReporter()
{
  uint64_t result = qword_269F55678;
  if (!qword_269F55678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSelectionBiomeReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSelectionBiomeReporter);
}

uint64_t dispatch thunk of SpeakerIdSelectionBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t SiriSegmentCohortBiomeReporter.__allocating_init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t SiriSegmentCohortBiomeReporter.init(biomeDonator:logger:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  uint64_t v5 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_2562B89E0(uint64_t a1)
{
  v2[2] = v1;
  v2[3] = *(void *)(type metadata accessor for DeviceSegmentsCohorts(0) - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *(void *)(a1 + 16);
  v2[4] = v4;
  v2[5] = v5;
  return MEMORY[0x270FA2498](sub_2562B8AA4, 0, 0);
}

uint64_t sub_2562B8AA4()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "Reporter invoked: SiriDigestMetricsBiomeReporter", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }
  uint64_t v4 = v0[5];

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = v0[5] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v0[4];
      sub_2562B9224(v7, v9);
      id v10 = _s16MetricsFramework30SiriSegmentCohortBiomeReporterC06createF34OnDeviceDigestSegmentsCohortsEvent08segmentsmA0So06BMSiriijklM0CAA0jlM0V_tFZ_0(v9);
      sub_2562E30D0();

      sub_2562B9288(v9);
      v7 += v8;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2562B8C08()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t SiriSegmentCohortBiomeReporter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SiriSegmentCohortBiomeReporter.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SiriSegmentCohortBiomeReporter_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id _s16MetricsFramework30SiriSegmentCohortBiomeReporterC06createF34OnDeviceDigestSegmentsCohortsEvent08segmentsmA0So06BMSiriijklM0CAA0jlM0V_tFZ_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F556A8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t v5 = type metadata accessor for DeviceSegmentsCohorts(0);
  uint64_t v6 = *(void *)(a1 + *(int *)(v5 + 20));
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v38 = v5;
      uint64_t v39 = a1;
      long long v40 = v4;
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v8 = (char *)(v37 + 60);
      while (1)
      {
        char v9 = *(v8 - 16);
        char v10 = *(v8 - 8);
        char v11 = *v8;
        if (*(v8 - 24))
        {
          unint64_t v12 = 0;
          if ((*(v8 - 16) & 1) == 0) {
            goto LABEL_6;
          }
        }
        else
        {
          unint64_t v12 = (void *)sub_2562E3D30();
          if ((v9 & 1) == 0)
          {
LABEL_6:
            uint64_t v13 = (void *)sub_2562E3D30();
            if ((v10 & 1) == 0) {
              goto LABEL_7;
            }
            goto LABEL_11;
          }
        }
        uint64_t v13 = 0;
        if ((v10 & 1) == 0)
        {
LABEL_7:
          uint64_t v14 = (void *)sub_2562E3DA0();
          if (v11) {
            goto LABEL_12;
          }
          goto LABEL_8;
        }
LABEL_11:
        uint64_t v14 = 0;
        if (v11)
        {
LABEL_12:
          uint64_t v15 = 0;
          goto LABEL_13;
        }
LABEL_8:
        uint64_t v15 = (void *)sub_2562E3DA0();
LABEL_13:
        id v16 = objc_allocWithZone(MEMORY[0x263F2A448]);
        objc_msgSend(v16, sel_initWithSegmentType_segmentDataAvailabilityState_daysWithTwoValidAssistantTurnsPerWeek_daysWithTwoAssistantSpeechRequestsPerWeek_, v12, v13, v14, v15, v37);

        MEMORY[0x25A2A4400]();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2562E3730();
        }
        sub_2562E3750();
        sub_2562E3720();
        v8 += 32;
        if (!--v7)
        {
          swift_bridgeObjectRelease();
          a1 = v39;
          uint64_t v4 = v40;
          uint64_t v5 = v38;
          break;
        }
      }
    }
  }
  uint64_t v17 = *(void *)(a1 + *(int *)(v5 + 24));
  if (v17)
  {
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v38 = v5;
      uint64_t v39 = a1;
      long long v40 = v4;
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v19 = (void **)(v37 + 48);
      while (1)
      {
        char v20 = *((unsigned char *)v19 - 12);
        char v21 = *((unsigned char *)v19 - 4);
        unint64_t v22 = *v19;
        if (*v19)
        {
          id v23 = v22;
          objc_msgSend(v23, sel_startTimestampInSecondsSince1970, v37);
          objc_msgSend(v23, sel_numberOfSeconds);
          uint64_t v24 = (void *)sub_2562E3DB0();
          int64_t v25 = (void *)sub_2562E3DA0();
        }
        else
        {
          int64_t v25 = 0;
          uint64_t v24 = 0;
        }
        id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2A458]), sel_initWithStartTimestampInSecondsSince1970_numberOfSeconds_, v24, v25);

        if (v20)
        {
          unint64_t v27 = 0;
          if (v21) {
            goto LABEL_27;
          }
        }
        else
        {
          unint64_t v27 = (void *)sub_2562E3D30();
          if (v21)
          {
LABEL_27:
            uint64_t v28 = 0;
            goto LABEL_28;
          }
        }
        uint64_t v28 = (void *)sub_2562E3D30();
LABEL_28:
        id v29 = objc_allocWithZone(MEMORY[0x263F2A440]);
        id v30 = v26;
        objc_msgSend(v29, sel_initWithTimeInterval_cohortType_cohortDataAvailabilityState_, v30, v27, v28);

        MEMORY[0x25A2A4400]();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2562E3730();
        }
        v19 += 3;
        sub_2562E3750();
        sub_2562E3720();

        if (!--v18)
        {
          swift_bridgeObjectRelease();
          a1 = v39;
          uint64_t v4 = v40;
          uint64_t v5 = v38;
          break;
        }
      }
    }
  }
  sub_2562B9224(a1, (uint64_t)v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  id v31 = _s16MetricsFramework13EventMetadataV07toBiomeC021deviceSegmentsCohortsSo020BMSiriOnDeviceDigesthicD0CAA0lhI0VSg_tFZ_0((uint64_t)v4);
  sub_2562B9364((uint64_t)v4);
  id v32 = objc_allocWithZone(MEMORY[0x263F2A438]);
  sub_256231B4C(0, &qword_269F556B0);
  int64_t v33 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  sub_256231B4C(0, &qword_269F556B8);
  long long v34 = (void *)sub_2562E36F0();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v32, sel_initWithEventMetadata_deviceSegmentsReported_deviceCohortsReported_, v31, v33, v34);

  return v35;
}

uint64_t sub_2562B9224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceSegmentsCohorts(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562B9288(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeviceSegmentsCohorts(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2562B92E4()
{
  return type metadata accessor for SiriSegmentCohortBiomeReporter();
}

uint64_t type metadata accessor for SiriSegmentCohortBiomeReporter()
{
  uint64_t result = qword_269F55698;
  if (!qword_269F55698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SiriSegmentCohortBiomeReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriSegmentCohortBiomeReporter);
}

uint64_t dispatch thunk of SiriSegmentCohortBiomeReporter.__allocating_init(biomeDonator:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_2562B9364(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F556A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SpeakerIdSelectionDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSelectionDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SpeakerIdSelectionDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSelectionDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_2562B94C0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2562B94E0, 0, 0);
}

uint64_t sub_2562B94E0()
{
  uint64_t v1 = sub_2562E3410();
  os_log_type_t v2 = sub_2562E37F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_256226000, v1, v2, "no-op data provider invoked: SpeakerIdSelectionDataDataRecord", v3, 2u);
    MEMORY[0x25A2A5190](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t SpeakerIdSelectionDataProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSelectionDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SpeakerIdSelectionDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework30SpeakerIdSelectionDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2562B96C4()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_2562B94E0, 0, 0);
}

ValueMetadata *type metadata accessor for SpeakerIdSelectionDataRecord()
{
  return &type metadata for SpeakerIdSelectionDataRecord;
}

uint64_t sub_2562B96F8()
{
  return type metadata accessor for SpeakerIdSelectionDataProvider();
}

uint64_t type metadata accessor for SpeakerIdSelectionDataProvider()
{
  uint64_t result = qword_269F556D8;
  if (!qword_269F556D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for SpeakerIdSelectionDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SpeakerIdSelectionDataProvider);
}

uint64_t dispatch thunk of SpeakerIdSelectionDataProvider.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SpeakerIdSelectionDataProvider.loadData()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t AssetPenetrationReporter.deinit()
{
  return v0;
}

uint64_t sub_2562B9888()
{
  return MEMORY[0x270FA2498](sub_2562B98A4, 0, 0);
}

uint64_t sub_2562B98A4()
{
  return sub_2562E3AC0();
}

uint64_t AssetPenetrationReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2562B9934(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t type metadata accessor for AssetPenetrationReporter()
{
  return self;
}

uint64_t method lookup function for AssetPenetrationReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssetPenetrationReporter);
}

uint64_t dispatch thunk of AssetPenetrationReporter.report(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 80) + **(int **)(*(void *)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t BootToAssetResults.eventStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BootToAssetResults.eventStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*BootToAssetResults.eventStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t BootToAssetResults.conversationStreamMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BootToAssetResults.conversationStreamMetadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*BootToAssetResults.conversationStreamMetadata.modify())()
{
  return nullsub_1;
}

uint64_t BootToAssetResults.combinedBootToAssetData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BootToAssetResults.combinedBootToAssetData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*BootToAssetResults.combinedBootToAssetData.modify())()
{
  return nullsub_1;
}

uint64_t CombinedBootToAssetData.assetAvailabilityData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CombinedBootToAssetData.assetAvailabilityData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*CombinedBootToAssetData.assetAvailabilityData.modify())()
{
  return nullsub_1;
}

uint64_t CombinedBootToAssetData.eventMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CombinedBootToAssetData(0) + 20);

  return sub_25622AD3C(v3, a1);
}

uint64_t type metadata accessor for CombinedBootToAssetData(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F55748);
}

uint64_t CombinedBootToAssetData.eventMetadata.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CombinedBootToAssetData(0) + 20);

  return sub_25622ADE4(a1, v3);
}

uint64_t (*CombinedBootToAssetData.eventMetadata.modify())(void)
{
  return nullsub_1;
}

uint64_t BootToAssetCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:userDefaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_2562E3020();
  uint64_t v11 = v10 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  sub_25622F514(a2, v10 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v10 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_bookmarkService) = a3;
  uint64_t v13 = v10 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_oddId;
  uint64_t v14 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  *(void *)(v10 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_defaults) = a5;
  return v10;
}

uint64_t BootToAssetCalculator.init(logger:sqlFileURL:bookmarkService:oddId:userDefaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2562E3020();
  uint64_t v11 = v5 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_logger;
  uint64_t v12 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  sub_25622F514(a2, v5 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_sqlFileURL, &qword_269F53D10);
  *(void *)(v5 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_bookmarkService) = a3;
  uint64_t v13 = v5 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_oddId;
  uint64_t v14 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  *(void *)(v5 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_defaults) = a5;
  return v5;
}

uint64_t sub_2562BA014(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return MEMORY[0x270FA2498](sub_2562BA05C, 0, 0);
}

uint64_t sub_2562BA05C()
{
  char v57 = v0;
  uint64_t v1 = v0[6] + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_logger;
  swift_retain_n();
  uint64_t v2 = sub_2562E3410();
  os_log_type_t v3 = sub_2562E37F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v56 = v5;
    sub_2562E2FD0();
    sub_25622F318((unint64_t *)&qword_269F53D50, MEMORY[0x270FA95C8]);
    uint64_t v6 = sub_2562E3C80();
    v0[4] = sub_256229738(v6, v7, &v56);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_256226000, v2, v3, "SQL calculator invoked: BootToAssetCalculator %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v5, -1, -1);
    MEMORY[0x25A2A5190](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = v0[6];
  uint64_t v9 = sub_2562E2E30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = v8 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_sqlFileURL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v13 = swift_task_alloc();
  sub_25622F360(v12, v13, &qword_269F53D10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v13, 1, v9) == 1)
  {
    sub_25622F3C4(v13, &qword_269F53D10);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25622CE3C();
    swift_allocError();
    *uint64_t v14 = 9;
    swift_willThrow();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v11, v13, v9);
    swift_task_dealloc();
    id v15 = (id)sub_2562E3110();
    uint64_t v16 = sub_2562BA970(v11, v15);

    char v52 = v15;
    uint64_t v19 = (void *)sub_2562E3290();
    uint64_t v53 = v16;
    if (v19)
    {
      char v20 = v19;
      id v21 = v19;
      id v22 = v20;
      uint64_t v54 = v1;
      id v23 = sub_2562E3410();
      os_log_type_t v24 = sub_2562E3800();
      if (os_log_type_enabled(v23, v24))
      {
        loga = v23;
        int64_t v25 = (uint8_t *)swift_slowAlloc();
        BOOL v48 = (void *)swift_slowAlloc();
        *(_DWORD *)int64_t v25 = 138412290;
        id v26 = v20;
        uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
        v0[3] = v27;
        sub_2562E38F0();
        void *v48 = v27;

        _os_log_impl(&dword_256226000, loga, v24, "%@", v25, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
        swift_arrayDestroy();
        MEMORY[0x25A2A5190](v48, -1, -1);
        uint64_t v28 = v25;
        uint64_t v16 = v53;
        MEMORY[0x25A2A5190](v28, -1, -1);
      }
      else
      {
      }
      uint64_t v1 = v54;
    }
    id v29 = sub_256267F68(v16, v1);
    swift_bridgeObjectRetain();
    id v30 = sub_2562E3410();
    os_log_type_t v31 = sub_2562E37F0();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v32 = 134217984;
      v0[2] = v29[2];
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v30, v31, "BootToAssetCalculator query yielded %ld results", v32, 0xCu);
      MEMORY[0x25A2A5190](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v33 = sub_2562E2F80();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = swift_task_alloc();
    sub_2562E30F0();
    os_log_t log = (os_log_t)sub_2562E30B0();
    uint64_t v55 = v33;
    char v49 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v49(v35, v33);
    swift_task_dealloc();
    uint64_t v36 = swift_task_alloc();
    sub_2562E30A0();
    if (qword_269F53B18 != -1) {
      swift_once();
    }
    uint64_t v44 = v0[7];
    uint64_t v45 = v0[6];
    long long v47 = (os_log_t *)v0[5];
    uint64_t v37 = (void *)qword_269F5E468;
    swift_bridgeObjectRetain();
    uint64_t v38 = (uint64_t)v29;
    id v39 = v37;
    uint64_t v40 = sub_2562BBCF0(v38, v39);

    swift_bridgeObjectRelease();
    uint64_t v41 = swift_task_alloc();
    sub_2562E2E90();
    uint64_t v42 = (void *)swift_task_alloc();
    v42[2] = v45;
    v42[3] = v41;
    v42[4] = v36;
    v42[5] = v44;
    uint64_t v46 = sub_2562BC1BC(v40, (void (*)(char *, uint64_t))sub_2562BC1B0);
    v49(v41, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();

    swift_release();
    v49(v36, v55);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v9);
    uint64_t v43 = MEMORY[0x263F8EE78];
    *long long v47 = log;
    v47[1] = v43;
    v47[2] = (os_log_t)v46;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
  }
  return v17();
}

uint64_t sub_2562BA970(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_2562E35A0();
  MEMORY[0x270FA5388](v4 - 8);
  sub_2562E3590();
  sub_2562E3530();
  if (v2)
  {
    uint64_t v5 = sub_2562E3410();
    os_log_type_t v6 = sub_2562E3800();
    uint64_t v7 = v6;
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_256226000, v5, (os_log_type_t)v7, "SQL file could not be loaded", v8, 2u);
      MEMORY[0x25A2A5190](v8, -1, -1);
    }

    sub_25622CE3C();
    swift_allocError();
    unsigned char *v9 = 10;
    swift_willThrow();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D40);
    sub_2562E3300();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2562E4C90;
    uint64_t v10 = sub_2562E3310();
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v12;
    sub_2562E32F0();
    objc_allocWithZone((Class)sub_2562E3260());
    id v14 = a2;
    id v15 = (void *)sub_2562E3230();
    uint64_t v7 = sub_2562E3250();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)sub_2562E3290();
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = v16;
      id v19 = v17;
      char v20 = sub_2562E3410();
      os_log_type_t v21 = sub_2562E3800();
      if (!os_log_type_enabled(v20, v21))
      {

        return v7;
      }
      id v22 = (uint8_t *)swift_slowAlloc();
      int64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138412290;
      id v23 = v17;
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      sub_2562E38F0();
      *int64_t v25 = v26;

      _os_log_impl(&dword_256226000, v20, v21, "%@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v25, -1, -1);
      MEMORY[0x25A2A5190](v22, -1, -1);
    }
  }
  return v7;
}

uint64_t sub_2562BAD80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t **a6@<X8>)
{
  uint64_t v95 = a5;
  uint64_t v97 = a4;
  uint64_t v98 = a2;
  uint64_t v9 = sub_2562E2F80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v13 = (char *)&v87 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25622F360(a1, (uint64_t)v16, &qword_269F53DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    sub_25622F3C4((uint64_t)v16, &qword_269F53DB0);
    uint64_t v17 = type metadata accessor for CombinedBootToAssetData(0);
    return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a6, 1, 1, v17);
  }
  uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))((char *)&v87 - v12, v16, v9);
  MEMORY[0x270FA5388](v19);
  char v20 = (char *)&v87 - v12;
  uint64_t v96 = a3;
  sub_2562E2E90();
  sub_2562E2F40();
  double v22 = v21;
  double v23 = trunc(v21);
  if (v22 > -1.0 && v22 < 1.84467441e19 && v22 == v23)
  {
    os_log_type_t v31 = v13;
    uint64_t v91 = v10;
    uint64_t v89 = a6;
    sub_25622F318(&qword_269F53DB8, MEMORY[0x270FA9220]);
    uint64_t v90 = v9;
    if (sub_2562E3520())
    {
      id v32 = *(void **)((char *)v96 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_defaults);
      uint64_t v33 = (void *)sub_2562E3550();
      unsigned int v34 = objc_msgSend(v32, sel_BOOLForKey_, v33);

      if (!v34)
      {
        swift_retain_n();
        unint64_t v76 = sub_2562E3410();
        int v77 = sub_2562E37E0();
        if (os_log_type_enabled(v76, (os_log_type_t)v77))
        {
          int v78 = v13;
          uint64_t v79 = (uint8_t *)swift_slowAlloc();
          os_log_type_t v94 = &v87;
          int v80 = v79;
          *(_DWORD *)uint64_t v79 = 67109120;
          unint64_t v81 = (void *)sub_2562E3550();
          unsigned int v82 = objc_msgSend(v32, sel_BOOLForKey_, v81);
          swift_release();

          unsigned int v99 = v82;
          sub_2562E38F0();
          swift_release();
          _os_log_impl(&dword_256226000, v76, (os_log_type_t)v77, "Skipping b2a execution for current date; AssetMetricsWorker.includeCurrentDateForAggregation: %{BOOL}d",
            v80,
            8u);
          MEMORY[0x25A2A5190](v80, -1, -1);
        }
        else
        {

          swift_release_n();
          int v78 = v13;
        }
        uint64_t v84 = v90;
        int v85 = *(void (**)(void, void))(v91 + 8);
        v85(v20, v90);
        v85(v78, v84);
        uint64_t v86 = type metadata accessor for CombinedBootToAssetData(0);
        return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v89, 1, 1, v86);
      }
    }
    os_log_type_t v94 = &v87;
    uint64_t v35 = v98[2];
    unint64_t v92 = v20;
    if (v35)
    {
      uint64_t v36 = (uint64_t *)(swift_bridgeObjectRetain() + 104);
      uint64_t v37 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v39 = *v36;
        if (*v36)
        {
          uint64_t v40 = *(v36 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_25626B9CC(0, v37[2] + 1, 1, v37);
          }
          unint64_t v42 = v37[2];
          unint64_t v41 = v37[3];
          if (v42 >= v41 >> 1) {
            uint64_t v37 = sub_25626B9CC((void *)(v41 > 1), v42 + 1, 1, v37);
          }
          v37[2] = v42 + 1;
          uint64_t v38 = &v37[2 * v42];
          v38[4] = v40;
          v38[5] = v39;
        }
        v36 += 24;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v88 = (uint64_t *)v22;
    if (v37[2]) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
    uint64_t v50 = *(void *)(*(void *)(v49 - 8) + 64);
    MEMORY[0x270FA5388](v49 - 8);
    sub_2562E2F90();
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_2562E2FD0();
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = *(unsigned int (**)(void, void, void))(v52 + 48);
    uint64_t v93 = (uint64_t)&v87 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v53(v93, 1, v51) == 1)
    {
      uint64_t v54 = sub_2562E3410();
      os_log_type_t v55 = sub_2562E37F0();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl(&dword_256226000, v54, v55, "Calculator: Found no device aggregation Id", v56, 2u);
        MEMORY[0x25A2A5190](v56, -1, -1);
      }
    }
    uint64_t v97 = v31;
    id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E780]), sel_init);
    id v58 = objc_msgSend(v57, sel_setStartTimestampInSecondsSince1970_, v88);
    if (v57) {
      id v58 = objc_msgSend(v57, sel_setNumberOfSeconds_, 86400);
    }
    MEMORY[0x270FA5388](v58);
    uint64_t v59 = (char *)&v87 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v59, (uint64_t)v96 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_oddId, v51);
    unint64_t v60 = *(uint64_t (**)(void, void, void, void))(v52 + 56);
    uint64_t v61 = v60(v59, 0, 1, v51);
    uint64_t v96 = &v87;
    MEMORY[0x270FA5388](v61);
    uint64_t v62 = sub_25622F360(v93, (uint64_t)v59, &qword_269F53D68);
    uint64_t v88 = &v87;
    MEMORY[0x270FA5388](v62);
    v60(v59, 1, 1, v51);
    uint64_t result = sub_2562E2F40();
    if ((~*(void *)&v63 & 0x7FF0000000000000) != 0)
    {
      uint64_t v64 = v97;
      uint64_t result = (uint64_t)v92;
      if (v63 > -1.0)
      {
        uint64_t v95 = &v87;
        if (v63 < 1.84467441e19)
        {
          uint64_t v87 = (uint64_t)&v87;
          unint64_t v65 = (unint64_t)v63;
          uint64_t v66 = v90;
          char v67 = *(void (**)(void, void))(v91 + 8);
          v67(v92, v90);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v67)(v64, v66);
          if (is_mul_ok(v65, 0x3E8uLL))
          {
            uint64_t v68 = 1000 * v65;
            uint64_t v69 = type metadata accessor for CombinedBootToAssetData(0);
            unint64_t v70 = v89;
            uint64_t v71 = (uint64_t)v89 + *(int *)(v69 + 20);
            sub_25622F514((uint64_t)v59, v71, &qword_269F53D68);
            char v72 = (int *)type metadata accessor for EventMetadata(0);
            sub_25622F514((uint64_t)v59, v71 + v72[5], &qword_269F53D68);
            sub_25622F514((uint64_t)v59, v71 + v72[6], &qword_269F53D68);
            uint64_t v73 = v71 + v72[7];
            *(void *)uint64_t v73 = v68;
            *(unsigned char *)(v73 + 8) = 0;
            *(void *)(v71 + v72[8]) = v57;
            uint64_t v74 = v71 + v72[9];
            *(void *)uint64_t v74 = 0;
            *(unsigned char *)(v74 + 8) = 1;
            uint64_t v75 = v71 + v72[10];
            *(void *)uint64_t v75 = 0;
            *(unsigned char *)(v75 + 8) = 1;
            *unint64_t v70 = v98;
            swift_bridgeObjectRetain();
            sub_25622F3C4(v93, &qword_269F53D68);
            return (*(uint64_t (**)(uint64_t **, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v70, 0, 1, v69);
          }
          goto LABEL_50;
        }
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v26 = sub_2562E2F40();
  uint64_t v27 = a6;
  if (v28 <= 0.0)
  {
    uint64_t v97 = v13;
    uint64_t v98 = &v87;
    MEMORY[0x270FA5388](v26);
    uint64_t v43 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v30 = v9;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v20, v9);
    uint64_t v44 = sub_2562E3410();
    os_log_type_t v45 = sub_2562E3800();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v94 = &v87;
      long long v47 = v46;
      unint64_t v92 = v20;
      *(_DWORD *)uint64_t v46 = 134217984;
      sub_2562E2F40();
      uint64_t v100 = v48;
      char v20 = v92;
      sub_2562E38F0();
      id v29 = *(void (**)(void, void))(v10 + 8);
      v29(v43, v9);
      _os_log_impl(&dword_256226000, v44, v45, "Boot to asset event contains date before 1970 %f", v47, 0xCu);
      MEMORY[0x25A2A5190](v47, -1, -1);
    }
    else
    {

      id v29 = *(void (**)(void, void))(v10 + 8);
      v29(v43, v9);
    }
    uint64_t v13 = v97;
    v29(v20, v9);
  }
  else
  {
    id v29 = *(void (**)(void, void))(v10 + 8);
    uint64_t v30 = v9;
    v29(v20, v9);
  }
  v29(v13, v30);
  uint64_t v83 = type metadata accessor for CombinedBootToAssetData(0);
  return (*(uint64_t (**)(uint64_t **, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v27, 1, 1, v83);
}

uint64_t BootToAssetCalculator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_oddId;
  uint64_t v6 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return v0;
}

uint64_t BootToAssetCalculator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25622F3C4(v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_sqlFileURL, &qword_269F53D10);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_calendar;
  uint64_t v4 = sub_2562E3060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MetricsFramework21BootToAssetCalculator_oddId;
  uint64_t v6 = sub_2562E2FD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_2562BBB94(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25622844C;
  v5[5] = a1;
  v5[6] = v4;
  v5[7] = *v4;
  return MEMORY[0x270FA2498](sub_2562BA05C, 0, 0);
}

uint64_t sub_2562BBC6C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_2562BBC98(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2562BBCC0@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_2562BBCF0(uint64_t a1, void *a2)
{
  id v65 = a2;
  uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  int v80 = (void *)MEMORY[0x263F8EE80];
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (uint64_t)v2;
  }
  long long v4 = *(_OWORD *)(a1 + 176);
  long long v76 = *(_OWORD *)(a1 + 160);
  long long v77 = v4;
  long long v5 = *(_OWORD *)(a1 + 208);
  long long v78 = *(_OWORD *)(a1 + 192);
  long long v79 = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  long long v72 = *(_OWORD *)(a1 + 96);
  long long v73 = v6;
  long long v7 = *(_OWORD *)(a1 + 144);
  long long v74 = *(_OWORD *)(a1 + 128);
  long long v75 = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v68 = *(_OWORD *)(a1 + 32);
  long long v69 = v8;
  uint64_t v9 = (long long *)(a1 + 224);
  uint64_t v10 = v3 - 1;
  long long v11 = *(_OWORD *)(a1 + 80);
  long long v70 = *(_OWORD *)(a1 + 64);
  long long v71 = v11;
  long long v64 = xmmword_2562E4C90;
  while (1)
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    char v67 = v63;
    uint64_t v66 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v14 = &v63[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_256233990((uint64_t)&v68);
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v65, sel_dateFromString_, v15);

    if (v16)
    {
      sub_2562E2F60();

      uint64_t v17 = sub_2562E2F80();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
    }
    else
    {
      uint64_t v18 = sub_2562E2F80();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 1, 1, v18);
    }
    unint64_t v20 = sub_2562562B0((uint64_t)v14);
    uint64_t v21 = v2[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v2[3] < v23)
    {
      sub_256287904(v23, 1);
      uint64_t v2 = v80;
      unint64_t v25 = sub_2562562B0((uint64_t)v14);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_23;
      }
      unint64_t v20 = v25;
    }
    if (v24)
    {
      sub_25622F3C4((uint64_t)v14, &qword_269F53DB0);
      uint64_t v2 = v80;
      uint64_t v27 = v80[7];
      double v28 = *(void **)(v27 + 8 * v20);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v27 + 8 * v20) = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        double v28 = sub_25626C0E4(0, v28[2] + 1, 1, v28);
        *(void *)(v27 + 8 * v20) = v28;
      }
      unint64_t v31 = v28[2];
      unint64_t v30 = v28[3];
      if (v31 >= v30 >> 1)
      {
        double v28 = sub_25626C0E4((void *)(v30 > 1), v31 + 1, 1, v28);
        *(void *)(v27 + 8 * v20) = v28;
      }
      uint64_t v28[2] = v31 + 1;
      id v32 = &v28[24 * v31];
      long long v33 = v68;
      long long v34 = v69;
      long long v35 = v71;
      v32[4] = v70;
      v32[5] = v35;
      void v32[2] = v33;
      v32[3] = v34;
      long long v36 = v72;
      long long v37 = v73;
      long long v38 = v75;
      v32[8] = v74;
      v32[9] = v38;
      v32[6] = v36;
      v32[7] = v37;
      long long v39 = v76;
      long long v40 = v77;
      long long v41 = v79;
      v32[12] = v78;
      v32[13] = v41;
      v32[10] = v39;
      v32[11] = v40;
      if (!v10) {
        return (uint64_t)v2;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F54BD0);
      unint64_t v42 = (_OWORD *)swift_allocObject();
      long long v44 = v74;
      long long v43 = v75;
      long long v45 = v72;
      v42[7] = v73;
      v42[8] = v44;
      long long v46 = v79;
      v42[12] = v78;
      v42[13] = v46;
      long long v47 = v77;
      v42[10] = v76;
      v42[11] = v47;
      v42[9] = v43;
      long long v48 = v68;
      long long v49 = v69;
      v42[1] = v64;
      v42[2] = v48;
      long long v50 = v70;
      long long v51 = v71;
      v42[3] = v49;
      v42[4] = v50;
      v42[5] = v51;
      v42[6] = v45;
      v2[(v20 >> 6) + 8] |= 1 << v20;
      sub_25622F514((uint64_t)v14, v2[6] + *(void *)(v66 + 72) * v20, &qword_269F53DB0);
      *(void *)(v2[7] + 8 * v20) = v42;
      uint64_t v52 = v2[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_22;
      }
      v2[2] = v54;
      if (!v10) {
        return (uint64_t)v2;
      }
    }
    long long v55 = v9[9];
    long long v76 = v9[8];
    long long v77 = v55;
    long long v56 = v9[11];
    long long v78 = v9[10];
    long long v79 = v56;
    long long v57 = v9[5];
    long long v72 = v9[4];
    long long v73 = v57;
    long long v58 = v9[7];
    long long v74 = v9[6];
    long long v75 = v58;
    long long v59 = v9[1];
    long long v68 = *v9;
    long long v69 = v59;
    long long v60 = v9[2];
    long long v61 = v9[3];
    v9 += 12;
    --v10;
    long long v70 = v60;
    long long v71 = v61;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:

  uint64_t result = sub_2562E3CD0();
  __break(1u);
  return result;
}

uint64_t sub_2562BC1B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  return sub_2562BAD80(a1, a2, *(uint64_t **)(v3 + 16), *(char **)(v3 + 24), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_2562BC1BC(uint64_t a1, void (*a2)(char *, uint64_t))
{
  long long v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F55770);
  MEMORY[0x270FA5388](v3 - 8);
  long long v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CombinedBootToAssetData(0);
  uint64_t v6 = *(void *)(v42 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v42);
  uint64_t v36 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (uint64_t)&v33 - v9;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v38 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F55778);
  uint64_t v33 = (uint64_t)&v33;
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v6;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  long long v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  unint64_t v37 = MEMORY[0x263F8EE78];
  uint64_t v19 = v44;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v20 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v18 << 6))
  {
    uint64_t v22 = *(void *)(v19 + 48);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
    sub_25622F360(v22 + *(void *)(*(void *)(v23 - 8) + 72) * i, (uint64_t)v16, &qword_269F53DB0);
    uint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * i);
    *(void *)&v16[*(int *)(v41 + 48)] = v24;
    swift_bridgeObjectRetain();
    v43(v16, v24);
    sub_25622F3C4((uint64_t)v16, &qword_269F55778);
    if ((*v40)(v5, 1, v42) == 1)
    {
      uint64_t result = sub_25622F3C4((uint64_t)v5, &qword_269F55770);
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v28 = v34;
      sub_2562BC914((uint64_t)v5, v34);
      sub_2562BC914(v28, v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v37 = sub_25626C3EC(0, *(void *)(v37 + 16) + 1, 1, v37);
      }
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1) {
        unint64_t v37 = sub_25626C3EC(v29 > 1, v30 + 1, 1, v37);
      }
      uint64_t v31 = v36;
      unint64_t v32 = v37;
      *(void *)(v37 + 16) = v30 + 1;
      uint64_t result = sub_2562BC914(v31, v32+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30);
      if (v13) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v25 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v25);
    ++v18;
    if (!v26)
    {
      int64_t v18 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v18);
      if (!v26)
      {
        int64_t v18 = v25 + 2;
        if (v25 + 2 >= v39) {
          goto LABEL_29;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v18);
        if (!v26)
        {
          int64_t v18 = v25 + 3;
          if (v25 + 3 >= v39) {
            goto LABEL_29;
          }
          unint64_t v26 = *(void *)(v38 + 8 * v18);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v13 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v39)
  {
LABEL_29:
    swift_release();
    return v37;
  }
  unint64_t v26 = *(void *)(v38 + 8 * v27);
  if (v26)
  {
    int64_t v18 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v18 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v18);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for BootToAssetResults()
{
  return &type metadata for BootToAssetResults;
}

uint64_t getEnumTagSinglePayload for CombinedBootToAssetData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2562BC644);
}

uint64_t sub_2562BC644(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for EventMetadata(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CombinedBootToAssetData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2562BC708);
}

void *sub_2562BC708(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventMetadata(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2562BC7B0()
{
  return type metadata accessor for BootToAssetCalculator(0);
}

uint64_t type metadata accessor for BootToAssetCalculator(uint64_t a1)
{
  return sub_25622EF90(a1, (uint64_t *)&unk_269F55758);
}

uint64_t method lookup function for BootToAssetCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BootToAssetCalculator);
}

uint64_t dispatch thunk of BootToAssetCalculator.__allocating_init(logger:sqlFileURL:bookmarkService:oddId:userDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of BootToAssetCalculator.doWork(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25622844C;
  return v8(a1, a2);
}

uint64_t sub_2562BC914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CombinedBootToAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2562BC978()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2562BC9B0(uint64_t result, void *a2)
{
  if (*(void *)(result + 16))
  {
    sub_256229CD0(result + 32, (uint64_t)v17);
    uint64_t v3 = MEMORY[0x263F8D310];
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (a2)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54338);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
        *(void *)(inited + 32) = sub_2562E3560();
        *(void *)(inited + 40) = v11;
        *(void *)(inited + 72) = v3;
        *(void *)(inited + 48) = 0xD00000000000002DLL;
        *(void *)(inited + 56) = 0x80000002562EF7F0;
        sub_256246C4C(inited);
        id v12 = objc_allocWithZone(MEMORY[0x263F087E0]);
        uint64_t v7 = (void *)sub_2562E3550();
        uint64_t v8 = (void *)sub_2562E3490();
        swift_bridgeObjectRelease();
        id v9 = objc_msgSend(v12, sel_initWithDomain_code_userInfo_, v7, -1, v8);
        goto LABEL_8;
      }
      return 0;
    }
    type metadata accessor for SiriUserDefinedFunctions();
    static SiriUserDefinedFunctions.getSiriResponseCategoryUdf(siriResponseId:)(v15, v16, v17);
    swift_bridgeObjectRelease();
    if (v17[0] == 20)
    {
      if (a2)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54338);
        uint64_t v4 = swift_initStackObject();
        *(_OWORD *)(v4 + 16) = xmmword_2562E4C90;
        *(void *)(v4 + 32) = sub_2562E3560();
        *(void *)(v4 + 40) = v5;
        *(void *)(v4 + 72) = v3;
        *(void *)(v4 + 48) = 0xD000000000000046;
        *(void *)(v4 + 56) = 0x80000002562EF820;
        sub_256246C4C(v4);
        id v6 = objc_allocWithZone(MEMORY[0x263F087E0]);
        uint64_t v7 = (void *)sub_2562E3550();
        uint64_t v8 = (void *)sub_2562E3490();
        swift_bridgeObjectRelease();
        id v9 = objc_msgSend(v6, sel_initWithDomain_code_userInfo_, v7, 1, v8);
LABEL_8:
        unint64_t v13 = v9;

        id v14 = v13;
        uint64_t result = 0;
        *a2 = v13;
        return result;
      }
      return 0;
    }
    return SiriReponseCategory.rawValue.getter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static SiriUserDefinedFunctions.getSiriResponseCategoryUdf(siriResponseId:)(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  long long v64 = a3;
  uint64_t v68 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SiriUserDefinedFunctions();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v8 = (void *)sub_2562E3550();
  id v9 = (void *)sub_2562E3550();
  id v10 = objc_msgSend(v7, sel_URLForResource_withExtension_, v8, v9);

  MEMORY[0x270FA5388](v11);
  if (v10)
  {
    sub_2562E2E20();

    uint64_t v12 = sub_2562E2E30();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_2562E2E30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  }
  sub_25626DA70((uint64_t)v5, (uint64_t)v5);
  sub_2562E2E30();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = v14(v5, 1, v12);
  if (v15 == 1)
  {
    sub_2562BD84C();
    id v16 = (void *)swift_allocError();
    *uint64_t v17 = 0;
    swift_willThrow();
  }
  else
  {
    MEMORY[0x270FA5388](v15);
    int64_t v18 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562BDAE4((uint64_t)v5, (uint64_t)v18);
    if (v14(v18, 1, v12) == 1)
    {
      __break(1u);
      return;
    }
    uint64_t v19 = sub_2562E2E40();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    uint64_t v22 = self;
    uint64_t v23 = (void *)sub_2562E2E50();
    *(void *)&long long v66 = 0;
    id v24 = objc_msgSend(v22, sel_JSONObjectWithData_options_error_, v23, 0, &v66);

    if (v24)
    {
      id v25 = (id)v66;
      sub_2562E3970();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F55790);
      if (swift_dynamicCast())
      {
        uint64_t countAndFlagsBits = v65._countAndFlagsBits;
        uint64_t v27 = *(void *)(v65._countAndFlagsBits + 16);
        uint64_t v61 = v19;
        if (v27)
        {
          uint64_t v28 = 0;
          uint64_t v29 = 0x80000002562EBB90;
          unint64_t v60 = 0x80000002562EBB90;
          do
          {
            uint64_t v30 = *(void *)(countAndFlagsBits + 8 * v28 + 32);
            if (*(void *)(v30 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v31 = sub_2562561F4(0xD000000000000010, v29);
              if ((v32 & 1) != 0
                && (sub_256229CD0(*(void *)(v30 + 56) + 32 * v31, (uint64_t)&v66), (swift_dynamicCast() & 1) != 0))
              {
                if (v65._countAndFlagsBits == v63 && v65._object == v62)
                {
                  swift_bridgeObjectRelease();
LABEL_35:
                  swift_bridgeObjectRelease();
                  if (*(void *)(v30 + 16)
                    && (unint64_t v55 = sub_2562561F4(0xD00000000000001BLL, 0x80000002562EBBB0), (v56 & 1) != 0))
                  {
                    sub_256229CD0(*(void *)(v30 + 56) + 32 * v55, (uint64_t)&v66);
                  }
                  else
                  {
                    long long v66 = 0u;
                    long long v67 = 0u;
                  }
                  swift_bridgeObjectRelease();
                  if (*((void *)&v67 + 1))
                  {
                    if (swift_dynamicCast())
                    {
                      SiriReponseCategory.init(rawValue:)(v65);
                      char v57 = v66;
                      if (v66 != 20)
                      {
                        sub_25625B2C0(v61, v21);
                        sub_25622F3C4((uint64_t)v5, &qword_269F53D10);
                        unsigned char *v64 = v57;
                        return;
                      }
                    }
                  }
                  else
                  {
                    sub_25622F3C4((uint64_t)&v66, &qword_269F543D8);
                  }
                  os_log_type_t v58 = sub_2562E37F0();
                  sub_2562BD8A0();
                  unint64_t v59 = (unint64_t)v62;
                  swift_bridgeObjectRetain_n();
                  long long v47 = sub_2562E38B0();
                  os_log_type_t v48 = v58;
                  if (os_log_type_enabled(v47, v58))
                  {
                    long long v49 = (uint8_t *)swift_slowAlloc();
                    uint64_t v50 = swift_slowAlloc();
                    *(void *)&long long v66 = v50;
                    unint64_t v51 = v21;
                    *(_DWORD *)long long v49 = 136315138;
                    swift_bridgeObjectRetain();
                    v65._uint64_t countAndFlagsBits = sub_256229738(v63, v59, (uint64_t *)&v66);
                    sub_2562E38F0();
                    swift_bridgeObjectRelease_n();
                    uint64_t v52 = "Unable to find the SiriReponseCategory for %s";
LABEL_30:
                    _os_log_impl(&dword_256226000, v47, v48, v52, v49, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x25A2A5190](v50, -1, -1);
                    MEMORY[0x25A2A5190](v49, -1, -1);
                    sub_25625B2C0(v61, v51);
LABEL_33:

                    uint64_t v54 = v64;
                    sub_25622F3C4((uint64_t)v5, &qword_269F53D10);
                    *uint64_t v54 = 19;
                    return;
                  }
                  uint64_t v53 = v61;
LABEL_32:
                  sub_25625B2C0(v53, v21);
                  swift_bridgeObjectRelease_n();
                  goto LABEL_33;
                }
                char v33 = sub_2562E3C90();
                swift_bridgeObjectRelease();
                if (v33) {
                  goto LABEL_35;
                }
                swift_bridgeObjectRelease();
                uint64_t v29 = v60;
                uint64_t v19 = v61;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            ++v28;
          }
          while (v27 != v28);
        }
        swift_bridgeObjectRelease();
        os_log_type_t v45 = sub_2562E37F0();
        sub_2562BD8A0();
        unint64_t v46 = (unint64_t)v62;
        swift_bridgeObjectRetain_n();
        long long v47 = sub_2562E38B0();
        os_log_type_t v48 = v45;
        if (os_log_type_enabled(v47, v45))
        {
          long long v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v50 = swift_slowAlloc();
          *(void *)&long long v66 = v50;
          unint64_t v51 = v21;
          *(_DWORD *)long long v49 = 136315138;
          swift_bridgeObjectRetain();
          v65._uint64_t countAndFlagsBits = sub_256229738(v63, v46, (uint64_t *)&v66);
          sub_2562E38F0();
          swift_bridgeObjectRelease_n();
          uint64_t v52 = "Unable to find the %s in the mapping source";
          goto LABEL_30;
        }
        uint64_t v53 = v19;
        goto LABEL_32;
      }
      sub_2562BD84C();
      id v16 = (void *)swift_allocError();
      unsigned char *v35 = 2;
    }
    else
    {
      id v34 = (id)v66;
      id v16 = (void *)sub_2562E2E10();
    }
    swift_willThrow();
    sub_25625B2C0(v19, v21);
  }
  sub_25622F3C4((uint64_t)v5, &qword_269F53D10);
  os_log_type_t v36 = sub_2562E3800();
  sub_2562BD8A0();
  id v37 = v16;
  id v38 = v16;
  int64_t v39 = sub_2562E38B0();
  os_log_type_t v40 = v36;
  if (os_log_type_enabled(v39, v36))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 138412290;
    id v43 = v16;
    uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v66 = v44;
    sub_2562E38F0();
    void *v42 = v44;

    _os_log_impl(&dword_256226000, v39, v40, "unexpected error throws: %@", v41, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v42, -1, -1);
    MEMORY[0x25A2A5190](v41, -1, -1);
  }
  else
  {
  }
  unsigned char *v64 = 20;
}

uint64_t (*static SiriUserDefinedFunctions.getSiriResponseCategory.getter())(uint64_t result, void *a2)
{
  return sub_2562BC9B0;
}

uint64_t sub_2562BD664(uint64_t result, void *a2)
{
  if (*(void *)(result + 16))
  {
    sub_256229CD0(result + 32, (uint64_t)v12);
    uint64_t v3 = MEMORY[0x263F8D310];
    if (swift_dynamicCast())
    {
      uint64_t v4 = _s16MetricsFramework24SiriUserDefinedFunctionsC09convertToC13ResponseIdUdf03rawI0SSSgSS_tFZ_0();
      swift_bridgeObjectRelease();
    }
    else if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269F54338);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2562E4C90;
      *(void *)(inited + 32) = sub_2562E3560();
      *(void *)(inited + 40) = v6;
      *(void *)(inited + 72) = v3;
      *(void *)(inited + 48) = 0xD000000000000018;
      *(void *)(inited + 56) = 0x80000002562EF750;
      sub_256246C4C(inited);
      id v7 = objc_allocWithZone(MEMORY[0x263F087E0]);
      uint64_t v8 = (void *)sub_2562E3550();
      id v9 = (void *)sub_2562E3490();
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, -1, v9);

      id v11 = v10;
      uint64_t v4 = 0;
      *a2 = v10;
    }
    else
    {
      return 0;
    }
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*static SiriUserDefinedFunctions.convertToSiriResponseId.getter())(uint64_t result, void *a2)
{
  return sub_2562BD664;
}

uint64_t type metadata accessor for SiriUserDefinedFunctions()
{
  return self;
}

unint64_t sub_2562BD84C()
{
  unint64_t result = qword_269F55780;
  if (!qword_269F55780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55780);
  }
  return result;
}

unint64_t sub_2562BD8A0()
{
  unint64_t result = qword_269F55788;
  if (!qword_269F55788)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F55788);
  }
  return result;
}

uint64_t sub_2562BD8E0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t result = sub_2562E3620();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        unint64_t result = 15;
        uint64_t v1 = v2;
        return MEMORY[0x270F9D650](result, v1);
      }
    }
    __break(1u);
    return MEMORY[0x270F9D650](result, v1);
  }
  return result;
}

uint64_t SiriUserDefinedFunctions.deinit()
{
  return v0;
}

uint64_t SiriUserDefinedFunctions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static MetricsUtilityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MetricsUtilityError.hash(into:)()
{
  return sub_2562E3D60();
}

uint64_t MetricsUtilityError.hashValue.getter()
{
  return sub_2562E3D90();
}

id sub_2562BDA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = (void *)sub_2562E3550();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_2562E2E10();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_2562BDAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s16MetricsFramework24SiriUserDefinedFunctionsC09convertToC13ResponseIdUdf03rawI0SSSgSS_tFZ_0()
{
  unint64_t v0 = 0x263F08000uLL;
  id v1 = objc_allocWithZone(MEMORY[0x263F08AF0]);
  id v2 = sub_2562BDA08(0xD000000000000021, 0x80000002562EF770, 0);
  uint64_t v3 = (void *)sub_2562E3550();
  uint64_t v4 = sub_2562E3610();
  uint64_t v5 = (void *)sub_2562E3550();
  id v6 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
  id v7 = objc_msgSend(v2, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v3, 0, 0, v4, v5);

  uint64_t v8 = sub_2562E3560();
  uint64_t v10 = v9;

  *(void *)&long long v38 = v8;
  *((void *)&v38 + 1) = v10;
  sub_25624F610();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2562E3960();
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 16) <= 2uLL)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    id v20 = objc_allocWithZone(*(Class *)(v0 + 2800));
    id v21 = sub_2562BDA08(0x2E5D3A2E5C245C5BLL, 0xEA0000000000242ALL, 0);
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)sub_2562E3550();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_2562E3610();
    swift_bridgeObjectRelease();
    id v24 = (void *)sub_2562E3550();
    id v25 = objc_msgSend(v21, v6[320], v22, 0, 0, v23, v24);

    uint64_t v26 = sub_2562E3560();
    uint64_t v28 = v27;

    *(void *)&long long v38 = v26;
    *((void *)&v38 + 1) = v28;
    *(void *)&long long v45 = v26;
    *((void *)&v45 + 1) = v28;
    unint64_t v43 = 0xD000000000000010;
    unint64_t v44 = 0x80000002562EF7D0;
    sub_25622A438();
    sub_2562BE27C();
    if (sub_2562E34E0())
    {
      *(void *)&long long v37 = v2;
      uint64_t v29 = sub_2562E3610();
      sub_2562BD8E0(v29);
      long long v45 = v38;
      unint64_t v43 = 95;
      unint64_t v44 = 0xE100000000000000;
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F557A8);
      MEMORY[0x270FA5388](v30 - 8);
      char v32 = (char *)&v37 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v33 = sub_2562E3000();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
      swift_bridgeObjectRetain();
      sub_2562E3930();
      char v35 = v34;
      sub_25622F3C4((uint64_t)v32, &qword_269F557A8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35)
      {

        return v38;
      }
      long long v45 = v38;
      unint64_t v43 = 95;
      unint64_t v44 = 0xE100000000000000;
      uint64_t v41 = 35;
      unint64_t v42 = 0xE100000000000000;
      uint64_t v26 = sub_2562E3920();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
    return v26;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v11 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(v11 + 48);
  uint64_t v12 = *(void *)(v11 + 56);
  *(void *)&long long v45 = 0;
  *((void *)&v45 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2562E3610();
  uint64_t v15 = sub_2562E38D0();
  BOOL v16 = __OFADD__(v14, v15);
  uint64_t v17 = v14 + v15;
  if (v16)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  MEMORY[0x25A2A4300](v17);
  uint64_t v39 = v13;
  uint64_t v40 = v12;
  sub_2562BE2D0();
  sub_2562E3630();
  *(void *)&long long v38 = 35;
  *((void *)&v38 + 1) = 0xE100000000000000;
  sub_2562E3630();
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 16) >= 2uLL)
  {
    long long v37 = *(_OWORD *)(v11 + 64);
    uint64_t v18 = *(void *)(v11 + 80);
    uint64_t v19 = *(void *)(v11 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v38 = v37;
    uint64_t v39 = v18;
    uint64_t v40 = v19;
    swift_bridgeObjectRetain();
    sub_2562E3630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v6 = (SEL *)&_swift_FORCE_LOAD___swift_time___MetricsFramework;
    unint64_t v0 = 0x263F08000;
    goto LABEL_7;
  }
LABEL_16:
  __break(1u);
  swift_unexpectedError();
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_2562BE10C()
{
  unint64_t result = qword_269F55798;
  if (!qword_269F55798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F55798);
  }
  return result;
}

uint64_t method lookup function for SiriUserDefinedFunctions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SiriUserDefinedFunctions);
}

unsigned char *storeEnumTagSinglePayload for MetricsUtilityError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2562BE244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsUtilityError()
{
  return &type metadata for MetricsUtilityError;
}

unint64_t sub_2562BE27C()
{
  unint64_t result = qword_269F557A0;
  if (!qword_269F557A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F557A0);
  }
  return result;
}

unint64_t sub_2562BE2D0()
{
  unint64_t result = qword_269F557B0;
  if (!qword_269F557B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F557B0);
  }
  return result;
}

void static SamplingUtils.getSelectionDateKey(enrollmentId:)()
{
}

uint64_t static SamplingUtils.getDeviceSelectionDate(forKey:defaults:)@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  unsigned int v4 = (void *)sub_2562E3550();
  id v5 = objc_msgSend(a1, sel_objectForKey_, v4);

  if (v5)
  {
    sub_2562E3970();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_25625B318((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    uint64_t v6 = sub_2562E2F80();
    int v7 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_25622F3C4((uint64_t)v11, &qword_269F543D8);
    uint64_t v9 = sub_2562E2F80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
}

uint64_t sub_2562BE48C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    uint64_t v4 = swift_allocError();
    *id v5 = a2;
    id v6 = a2;
    return MEMORY[0x270FA2410](v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2562BE52C()
{
  uint64_t v0 = sub_2562E3430();
  __swift_allocate_value_buffer(v0, qword_269F557B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269F557B8);
  return sub_2562E3420();
}

uint64_t static SamplingUtils.getSiriLanguage()()
{
  id v0 = objc_msgSend(self, sel_getSiriLanguageWithFallback_, 0);
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  uint64_t v2 = sub_2562E3560();

  return v2;
}

uint64_t static SamplingUtils.setEnrollementStatusToCollecting(siriLanguage:)(uint64_t a1, uint64_t a2)
{
  return sub_2562C3AC8(a1, a2, (uint64_t)&unk_2704CF160, (uint64_t)&unk_269F55810);
}

uint64_t sub_2562BE65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269F557D8 + dword_269F557D8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v8;
  void *v8 = v5;
  v8[1] = sub_25623E4D4;
  return v10(1, a4, a5);
}

uint64_t static SamplingUtils.setEnrollmentStatus(status:siriLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269F557D8 + dword_269F557D8);
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_25622844C;
  return v9(a1, a2, a3);
}

uint64_t sub_2562BE7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2562E37A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2562E3790();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_25622F3C4(a1, &qword_269F557E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2562E3770();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t static SamplingUtils.setEnrollementStatusToFinished(siriLanguage:)(uint64_t a1, uint64_t a2)
{
  return sub_2562C3AC8(a1, a2, (uint64_t)&unk_2704CF110, (uint64_t)&unk_269F557F0);
}

uint64_t sub_2562BE9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269F557D8 + dword_269F557D8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v8;
  void *v8 = v5;
  v8[1] = sub_25623E4D4;
  return v10(2, a4, a5);
}

uint64_t static SamplingUtils.getAudioIdWithRequestId(requestId:siriLanguage:date:)@<X0>(uint64_t a1@<X4>, char *a2@<X8>)
{
  v55[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_2562E3550();
  uint64_t v6 = (void *)sub_2562E3550();
  v55[0] = 0;
  id v7 = objc_msgSend(v4, sel_getAudioIdWithRequestId_languageCode_date_error_, v5, v6, a1, v55);

  id v8 = v55[0];
  if (!v7)
  {
    id v26 = v55[0];
    uint64_t v27 = (void *)sub_2562E2E10();

    swift_willThrow();
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_2562E3430();
    __swift_project_value_buffer(v28, (uint64_t)qword_269F557B8);
    id v29 = v27;
    id v30 = v27;
    uint64_t v22 = sub_2562E3410();
    os_log_type_t v31 = sub_2562E3800();
    if (!os_log_type_enabled(v22, v31))
    {

      goto LABEL_21;
    }
    char v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    *(_DWORD *)char v32 = 138412290;
    id v34 = v27;
    char v35 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v55[0] = v35;
    sub_2562E38F0();
    *uint64_t v33 = v35;

    _os_log_impl(&dword_256226000, v22, v31, "#SamplingUtils: SSRRPISamplingXPCService.getAudioId failed with error: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v33, -1, -1);
    MEMORY[0x25A2A5190](v32, -1, -1);

LABEL_22:
    uint64_t v46 = sub_2562E2FD0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(a2, 1, 1, v46);
  }
  uint64_t v9 = sub_2562E3560();
  unint64_t v11 = v10;
  id v12 = v8;

  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
LABEL_7:
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_2562E3430();
    __swift_project_value_buffer(v21, (uint64_t)qword_269F557B8);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_2562E3410();
    os_log_type_t v23 = sub_2562E3800();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      v55[0] = v25;
      *(_DWORD *)id v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_256229738(v9, v11, (uint64_t *)v55);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v22, v23, "#SamplingUtils: SSRRPISamplingXPCService.getAudioId returned empty or invalid value: %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v25, -1, -1);
      MEMORY[0x25A2A5190](v24, -1, -1);
LABEL_21:

      goto LABEL_22;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  uint64_t v14 = sub_2562E2FD0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D68);
  MEMORY[0x270FA5388](v18 - 8);
  id v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E2F90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    sub_25622F3C4((uint64_t)v20, &qword_269F53D68);
    goto LABEL_7;
  }
  uint64_t v53 = &v48;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v52((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v14);
  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_2562E3430();
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_269F557B8);
  MEMORY[0x270FA5388](v37);
  long long v38 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v38, v38, v14);
  uint64_t v39 = sub_2562E3410();
  os_log_type_t v40 = sub_2562E37F0();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v50 = &v48;
    unint64_t v42 = (uint8_t *)v41;
    long long v49 = (void *)swift_slowAlloc();
    v55[0] = v49;
    unint64_t v51 = a2;
    *(_DWORD *)unint64_t v42 = 136315138;
    os_log_type_t v48 = v42 + 4;
    sub_2562C47DC((unint64_t *)&qword_269F53D50, MEMORY[0x270FA95F8]);
    uint64_t v43 = sub_2562E3C80();
    uint64_t v54 = sub_256229738(v43, v44, (uint64_t *)v55);
    a2 = v51;
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v14);
    _os_log_impl(&dword_256226000, v39, v40, "#SamplingUtils: SSRRPISamplingXPCService.getAudioId is %s", v42, 0xCu);
    long long v45 = v49;
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v45, -1, -1);
    MEMORY[0x25A2A5190](v42, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v14);
  }

  v52(a2, v17, v14);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
}

uint64_t static SamplingUtils.getEnrollementDate(siriLanguage:)@<X0>(char *a1@<X8>)
{
  v45[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_2562E2F80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedManager);
  if (!v8) {
    __break(1u);
  }
  uint64_t v9 = v8;
  unint64_t v10 = (void *)sub_2562E3550();
  v45[0] = 0;
  id v11 = objc_msgSend(v9, sel_getEnrollmentDateWithLocale_error_, v10, v45);

  id v13 = v45[0];
  if (!v11)
  {
    id v17 = v45[0];
    uint64_t v18 = (void *)sub_2562E2E10();

    swift_willThrow();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v16(v7, 1, 1, v2);
    goto LABEL_6;
  }
  uint64_t v43 = a1;
  MEMORY[0x270FA5388](v12);
  sub_2562E2F60();
  id v14 = v13;

  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v15(v7, (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v16(v7, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
  {
    a1 = v43;
LABEL_6:
    sub_25622F3C4((uint64_t)v7, &qword_269F53DB0);
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_2562E3430();
    __swift_project_value_buffer(v19, (uint64_t)qword_269F557B8);
    id v20 = sub_2562E3410();
    os_log_type_t v21 = sub_2562E3800();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_256226000, v20, v21, "SSRSamplingManager.shared().getEnrollmentDate failed", v22, 2u);
      MEMORY[0x25A2A5190](v22, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v16)(a1, 1, 1, v2);
  }
  id v24 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v42 = v15;
  v15(v24, v7, v2);
  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_2562E3430();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_269F557B8);
  uint64_t v41 = v37;
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v27, v27, v2);
  uint64_t v28 = sub_2562E3410();
  os_log_type_t v29 = sub_2562E37F0();
  if (os_log_type_enabled(v28, v29))
  {
    os_log_t v40 = v28;
    id v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = (void *)swift_slowAlloc();
    v45[0] = v39;
    long long v38 = v30;
    *(_DWORD *)id v30 = 136315138;
    v37[1] = v30 + 4;
    sub_2562C47DC((unint64_t *)&qword_269F53E00, MEMORY[0x270FA9338]);
    uint64_t v31 = sub_2562E3C80();
    uint64_t v44 = sub_256229738(v31, v32, (uint64_t *)v45);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
    uint64_t v28 = v40;
    os_log_type_t v33 = v29;
    id v34 = v38;
    _os_log_impl(&dword_256226000, v40, v33, "#SamplingUtils: Current Enrollment Date: %s", v38, 0xCu);
    char v35 = v39;
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v35, -1, -1);
    MEMORY[0x25A2A5190](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
  }

  uint64_t v36 = v43;
  v42(v43, v24, v2);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v16)(v36, 0, 1, v2);
}

void sub_2562BF87C(char a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a1)
  {
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2562E3430();
    __swift_project_value_buffer(v6, (uint64_t)qword_269F557B8);
    swift_bridgeObjectRetain_n();
    id v7 = sub_2562E3410();
    os_log_type_t v8 = sub_2562E37F0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v24 = v10;
      if (a3)
      {
        unint64_t v11 = a3;
      }
      else
      {
        a2 = 0;
        unint64_t v11 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_256229738(a2, v11, &v24);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v7, v8, "#SamplingUtils: Audio file uploaded successfully: %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v10, -1, -1);
      MEMORY[0x25A2A5190](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_2562E3430();
    __swift_project_value_buffer(v13, (uint64_t)qword_269F557B8);
    swift_bridgeObjectRetain();
    id v14 = a4;
    swift_bridgeObjectRetain();
    id v15 = a4;
    osos_log_t log = sub_2562E3410();
    os_log_type_t v16 = sub_2562E3800();
    if (os_log_type_enabled(oslog, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      if (!a3) {
        a2 = 0;
      }
      unint64_t v19 = 0xE000000000000000;
      if (a3) {
        unint64_t v20 = a3;
      }
      else {
        unint64_t v20 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_256229738(a2, v20, &v24);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      if (a4)
      {
        swift_getErrorValue();
        uint64_t v21 = sub_2562E3CE0();
        unint64_t v19 = v22;
      }
      else
      {
        uint64_t v21 = 0;
      }
      sub_256229738(v21, v19, &v24);
      sub_2562E38F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_256226000, oslog, v16, "#SamplingUtils: Audio file upload failed with message: %s and error: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v18, -1, -1);
      MEMORY[0x25A2A5190](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_2562BFC88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    uint64_t v7 = sub_2562E3560();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a4;
  v6(a2, v7, v9, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void static SamplingUtils.getManifestCurrentSamplesUploadedKey(enrollmentId:)()
{
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2562BFD68()
{
}

uint64_t SamplingUtils.deinit()
{
  return v0;
}

uint64_t SamplingUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2562BFE08(uint64_t a1, uint64_t a2)
{
  return sub_2562C3AC8(a1, a2, (uint64_t)&unk_2704CF160, (uint64_t)&unk_269F55810);
}

uint64_t sub_2562BFE40(uint64_t a1, uint64_t a2)
{
  return sub_2562C3AC8(a1, a2, (uint64_t)&unk_2704CF110, (uint64_t)&unk_269F557F0);
}

uint64_t sub_2562BFE78()
{
  id v0 = objc_msgSend(self, sel_getSiriLanguageWithFallback_, 0);
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  uint64_t v2 = sub_2562E3560();

  return v2;
}

uint64_t sub_2562BFEF4@<X0>(uint64_t a1@<X4>, char *a2@<X8>)
{
  return static SamplingUtils.getAudioIdWithRequestId(requestId:siriLanguage:date:)(a1, a2);
}

uint64_t sub_2562BFF1C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2562BFFF8;
  return v6(a1);
}

uint64_t sub_2562BFFF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_2562C00F0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269F53C88);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2562C0158(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2562E36A0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x25A2A4390](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_2562C01D4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_2562C03BC(a1, a2, a3);
}

uint64_t sub_2562C01EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2562E36B0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2562C08B8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_2562E3A40();
  }
LABEL_7:
  uint64_t v11 = sub_2562C03BC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_2562C02D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2562E36B0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2562C08B8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_2562E3A40();
  }
LABEL_7:
  uint64_t v11 = sub_2562C063C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2562C03BC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_2562C063C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2562C08B8()
{
  unint64_t v0 = sub_2562E36C0();
  uint64_t v4 = sub_2562C0938(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2562C0938(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2562C0A90(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_2562C00F0(v9, 0);
      unint64_t v12 = sub_2562C0B90((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_2562E3A40();
LABEL_4:
        JUMPOUT(0x25A2A4310);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A2A4310](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A2A4310]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2562C0A90(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2562C0158(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2562C0158(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_2562C0B90(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_2562C0158(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_2562E3690();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_2562E3A40();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_2562C0158(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2562E3660();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s16MetricsFramework13SamplingUtilsC16getEnrollementId12siriLanguageSSSgSS_tFZ_0()
{
  v21[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_sharedManager);
  if (!v0) {
    __break(1u);
  }
  unint64_t v1 = v0;
  unint64_t v2 = (void *)sub_2562E3550();
  v21[0] = 0;
  id v3 = objc_msgSend(v1, sel_getEnrollmentIdWithLocale_error_, v2, v21);

  id v4 = v21[0];
  if (v3)
  {
    uint64_t v5 = sub_2562E3560();
    unint64_t v7 = v6;
    id v8 = v4;

    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2562E3430();
    __swift_project_value_buffer(v9, (uint64_t)qword_269F557B8);
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_2562E3410();
    os_log_type_t v11 = sub_2562E37F0();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      v21[0] = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_256229738(v5, v7, (uint64_t *)v21);
      sub_2562E38F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_256226000, v10, v11, "#SamplingUtils: Current Enrollment Id: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v13, -1, -1);
      MEMORY[0x25A2A5190](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    id v14 = v21[0];
    uint64_t v15 = (void *)sub_2562E2E10();

    swift_willThrow();
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_2562E3430();
    __swift_project_value_buffer(v16, (uint64_t)qword_269F557B8);
    unint64_t v17 = sub_2562E3410();
    os_log_type_t v18 = sub_2562E3800();
    if (os_log_type_enabled(v17, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v19 = 0;
      _os_log_impl(&dword_256226000, v17, v18, "SSRSamplingManager.shared().getEnrollmentId failed", v19, 2u);
      MEMORY[0x25A2A5190](v19, -1, -1);
    }

    return 0;
  }
  return v5;
}

id _s16MetricsFramework13SamplingUtilsC20getEnrollementStatus12siriLanguageSo022SSREnrollmentSelectionG0VSS_tFZ_0()
{
  v17[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = self;
  unint64_t v1 = (void *)sub_2562E3550();
  v17[0] = 0;
  id v2 = objc_msgSend(v0, sel_getEnrollmentSelectionStatusWithLocale_error_, v1, v17);

  id v3 = v17[0];
  uint64_t v4 = qword_269F53B20;
  if (v17[0])
  {
    id v5 = v17[0];
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2562E3430();
    __swift_project_value_buffer(v6, (uint64_t)qword_269F557B8);
    unint64_t v7 = v5;
    id v8 = sub_2562E3410();
    os_log_type_t v9 = sub_2562E3800();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v10 = 138412290;
      v17[0] = v7;
      unint64_t v12 = v7;
      sub_2562E38F0();
      *os_log_type_t v11 = v3;

      _os_log_impl(&dword_256226000, v8, v9, "#SamplingUtils: getEnrollmentSelectionStatus failed with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v11, -1, -1);
      MEMORY[0x25A2A5190](v10, -1, -1);
    }
    else
    {

      id v8 = v7;
    }
  }
  else
  {
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_2562E3430();
    __swift_project_value_buffer(v13, (uint64_t)qword_269F557B8);
    id v8 = sub_2562E3410();
    os_log_type_t v14 = sub_2562E37F0();
    if (os_log_type_enabled(v8, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 134217984;
      v17[0] = v2;
      sub_2562E38F0();
      _os_log_impl(&dword_256226000, v8, v14, "#SamplingUtils: Current Enrollment Status: %lu", v15, 0xCu);
      MEMORY[0x25A2A5190](v15, -1, -1);
    }
  }

  return v2;
}

uint64_t _s16MetricsFramework13SamplingUtilsC35isEnrollmentDateWithinLastSixMonths12siriLanguageSbSS_tFZ_0()
{
  uint64_t v0 = sub_2562E2F80();
  unint64_t v1 = *(void **)(v0 - 8);
  uint64_t v2 = v1[8];
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v35 = (char *)v25 - v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  type metadata accessor for SamplingUtils();
  static SamplingUtils.getEnrollementDate(siriLanguage:)((char *)v25 - v6);
  unint64_t v7 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v1[6];
  if (v7((uint64_t)v25 - v6, 1, v0) == 1)
  {
    sub_25622F3C4((uint64_t)v25 - v6, &qword_269F53DB0);
  }
  else
  {
    v25[0] = v1[4];
    v25[1] = v1 + 4;
    uint64_t v8 = ((uint64_t (*)(char *, char *, uint64_t))v25[0])(v35, (char *)v25 - v6, v0);
    id v34 = v25;
    uint64_t v9 = MEMORY[0x270FA5388](v8);
    uint64_t v26 = (char *)v25 - v3;
    os_log_type_t v33 = v25;
    MEMORY[0x270FA5388](v9);
    unint64_t v10 = (char *)v25 - v6;
    uint64_t v31 = sub_2562E3060();
    unsigned __int8 v32 = v25;
    uint64_t v30 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    unint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3040();
    uint64_t v13 = sub_2562E3050();
    unsigned int v29 = v25;
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v28 = v7;
    uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = (*(uint64_t (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F078B0], v13);
    unint64_t v27 = v25;
    MEMORY[0x270FA5388](v17);
    sub_2562E2F70();
    sub_2562E3030();
    uint64_t v18 = (uint64_t)v10;
    char v19 = (void (*)(char *, uint64_t))v1[1];
    v19((char *)v25 - v3, v0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
    if (v28(v18, 1, v0) != 1)
    {
      uint64_t v21 = v19;
      uint64_t v22 = v26;
      ((void (*)(char *, uint64_t, uint64_t))v25[0])(v26, v18, v0);
      sub_2562C47DC(qword_269F544C8, MEMORY[0x270FA9338]);
      unint64_t v23 = v35;
      char v20 = sub_2562E3510() ^ 1;
      v21(v22, v0);
      v21(v23, v0);
      return v20 & 1;
    }
    v19(v35, v0);
    sub_25622F3C4(v18, &qword_269F53DB0);
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t _s16MetricsFramework13SamplingUtilsC24writeDeviceSelectionDate6forKey8defaultsySS_So14NSUserDefaultsCtFZ_0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unsigned __int8 v32 = a3;
  uint64_t v5 = sub_2562E3060();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2562E3020();
  uint64_t v8 = sub_2562E2F80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x270FA5388](v11);
  sub_2562E30A0();
  char v35 = v7;
  sub_2562E3010();
  id v34 = *(void (**)(char *, uint64_t))(v9 + 8);
  v34((char *)&v28 - v12, v8);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
  uint64_t v14 = (void *)sub_2562E3550();
  id v33 = v13;
  objc_msgSend(v13, sel_setDateFormat_, v14);

  uint64_t v15 = (void *)sub_2562E2F00();
  uint64_t v31 = a1;
  uint64_t v16 = (void *)sub_2562E3550();
  objc_msgSend(v32, sel_setValue_forKey_, v15, v16);

  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_2562E3430();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_269F557B8);
  unsigned __int8 v32 = &v28;
  MEMORY[0x270FA5388](v18);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v28 - v12, (char *)&v28 - v12, v8);
  swift_bridgeObjectRetain_n();
  char v19 = sub_2562E3410();
  os_log_type_t v20 = sub_2562E37F0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = v29;
    *(_DWORD *)uint64_t v21 = 136315394;
    sub_2562C47DC((unint64_t *)&qword_269F53E00, MEMORY[0x270FA9338]);
    uint64_t v30 = (char *)&v28 - v12;
    uint64_t v22 = sub_2562E3C80();
    uint64_t v38 = sub_256229738(v22, v23, &v39);
    sub_2562E38F0();
    swift_bridgeObjectRelease();
    unsigned __int8 v24 = v34;
    v34((char *)&v28 - v12, v8);
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_256229738(v31, a2, &v39);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v19, v20, "#SamplingUtils: Wrote %s to %s in UserDefaults", (uint8_t *)v21, 0x16u);
    uint64_t v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v25, -1, -1);
    MEMORY[0x25A2A5190](v21, -1, -1);

    v24(v30, v8);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    unint64_t v27 = v34;
    v34((char *)&v28 - v12, v8);
    v27((char *)&v28 - v12, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v37);
}

uint64_t _s16MetricsFramework13SamplingUtilsC30getDonationIdsWithEnrollmentId010enrollmentJ0SaySSGSS_tFZ_0()
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_sharedManager);
  if (!v0) {
    __break(1u);
  }
  unint64_t v1 = v0;
  uint64_t v2 = (void *)sub_2562E3550();
  v18[0] = 0;
  id v3 = objc_msgSend(v1, sel_getDonationIdsWithEnrollmentId_error_, v2, v18);

  id v4 = v18[0];
  if (v3)
  {
    uint64_t v5 = sub_2562E3700();
    id v6 = v4;

    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_2562E3430();
    __swift_project_value_buffer(v7, (uint64_t)qword_269F557B8);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2562E3410();
    os_log_type_t v9 = sub_2562E37F0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134217984;
      v18[0] = *(id *)(v5 + 16);
      sub_2562E38F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_256226000, v8, v9, "#SamplingUtils: getDonationIdsWithEnrollmentId: %ld", v10, 0xCu);
      MEMORY[0x25A2A5190](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v11 = v18[0];
    unint64_t v12 = (void *)sub_2562E2E10();

    swift_willThrow();
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_2562E3430();
    __swift_project_value_buffer(v13, (uint64_t)qword_269F557B8);
    uint64_t v14 = sub_2562E3410();
    os_log_type_t v15 = sub_2562E3800();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_256226000, v14, v15, "SSRSamplingManager.shared().getDonationIds() failed", v16, 2u);
      MEMORY[0x25A2A5190](v16, -1, -1);
    }

    return MEMORY[0x263F8EE78];
  }
  return v5;
}

void _s16MetricsFramework13SamplingUtilsC03getC16CountPerDayLimit4fromSiSo14NSUserDefaultsC_tFZ_0(void *a1)
{
  uint64_t v2 = (void *)sub_2562E3550();
  id v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (v3)
  {
    uint64_t v4 = sub_2562E3560();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = HIBYTE(v6) & 0xF;
  uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v6) & 0xF;
  }
  else {
    uint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (uint64_t)sub_2562C02D4(v4, v6, 10);
    LOBYTE(v4) = v29;
    goto LABEL_47;
  }
  if ((v6 & 0x2000000000000000) != 0)
  {
    v30[0] = v4;
    v30[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v7) {
        goto LABEL_64;
      }
      if (v7 == 1 || (BYTE1(v4) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v11 = (BYTE1(v4) - 48);
      if (v7 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
        uint64_t v13 = v7 - 3;
        if (v13)
        {
          uint64_t v14 = (unsigned __int8 *)v30 + 3;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_34;
            }
            uint64_t v16 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_34;
            }
            uint64_t v11 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              goto LABEL_34;
            }
            LOBYTE(v4) = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u)
          {
            if (v7 == 2)
            {
              LOBYTE(v4) = 0;
              uint64_t v11 = -(uint64_t)(BYTE1(v4) - 48);
              goto LABEL_47;
            }
            if ((BYTE2(v4) - 48) <= 9u)
            {
              uint64_t v11 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
              uint64_t v21 = v7 - 3;
              if (!v21) {
                goto LABEL_46;
              }
              uint64_t v26 = (unsigned __int8 *)v30 + 3;
              while (1)
              {
                unsigned int v27 = *v26 - 48;
                if (v27 > 9) {
                  break;
                }
                uint64_t v28 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
                  break;
                }
                uint64_t v11 = v28 - v27;
                if (__OFSUB__(v28, v27)) {
                  break;
                }
                LOBYTE(v4) = 0;
                ++v26;
                if (!--v21) {
                  goto LABEL_47;
                }
              }
            }
          }
LABEL_34:
          uint64_t v11 = 0;
          LOBYTE(v4) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_64:
        __break(1u);
        return;
      }
      if (!v7 || (v4 - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v11 = (v4 - 48);
      if (v7 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v11 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
        uint64_t v17 = v7 - 2;
        if (v17)
        {
          uint64_t v18 = (unsigned __int8 *)v30 + 2;
          while (1)
          {
            unsigned int v19 = *v18 - 48;
            if (v19 > 9) {
              goto LABEL_34;
            }
            uint64_t v20 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_34;
            }
            uint64_t v11 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              goto LABEL_34;
            }
            LOBYTE(v4) = 0;
            ++v18;
            if (!--v17) {
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v4) = 0;
    goto LABEL_47;
  }
  if ((v4 & 0x1000000000000000) != 0) {
    uint64_t v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v10 = (unsigned __int8 *)sub_2562E3A40();
  }
  uint64_t v11 = (uint64_t)sub_2562C063C(v10, v8, 10);
  LOBYTE(v4) = v12 & 1;
LABEL_47:
  swift_bridgeObjectRelease();
  if (v4) {
LABEL_48:
  }
    uint64_t v11 = 2;
  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_2562E3430();
  __swift_project_value_buffer(v22, (uint64_t)qword_269F557B8);
  unint64_t v23 = sub_2562E3410();
  os_log_type_t v24 = sub_2562E37F0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134217984;
    v30[0] = v11;
    sub_2562E38F0();
    _os_log_impl(&dword_256226000, v23, v24, "#SamplingUtils: getSamplingCountPerDayLimit is %ld ", v25, 0xCu);
    MEMORY[0x25A2A5190](v25, -1, -1);
  }
}

void _s16MetricsFramework13SamplingUtilsC24uploadAudioWithRequestId07requestI005audioI04dateySS_SS10Foundation4DateVtFZ_0()
{
  id v0 = self;
  unint64_t v1 = (void *)sub_2562E3550();
  uint64_t v2 = (void *)sub_2562E3550();
  id v3 = (void *)sub_2562E2F00();
  v5[4] = sub_2562BF87C;
  v5[5] = 0;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_2562BFC88;
  v5[3] = &block_descriptor_6;
  uint64_t v4 = _Block_copy(v5);
  objc_msgSend(v0, sel_uploadAudioFileWithRequestId_audioId_date_completion_, v1, v2, v3, v4);
  _Block_release(v4);
}

uint64_t _s16MetricsFramework13SamplingUtilsC24getSISchemaTriggerPhrase3forSo0fgH0VSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  v8[2] = a1;
  v8[3] = a2;
  v8[0] = 1769105747;
  v8[1] = 0xE400000000000000;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F557A8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2562E3000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_25624F610();
  uint64_t v6 = sub_2562E3940();
  sub_25622F3C4((uint64_t)v4, &qword_269F557A8);
  swift_bridgeObjectRelease();
  if (v6) {
    return 1;
  }
  else {
    return 2;
  }
}

void _s16MetricsFramework13SamplingUtilsC31cleanUpAudioWithOnAndBeforeDate4datey10Foundation0L0V_tFZ_0()
{
  v15[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = self;
  unint64_t v1 = (void *)sub_2562E2F00();
  v15[0] = 0;
  objc_msgSend(v0, sel_cleanUpAudioOnAndBeforeDate_error_, v1, v15);

  id v2 = v15[0];
  uint64_t v3 = qword_269F53B20;
  if (v15[0])
  {
    id v4 = v15[0];
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_2562E3430();
    __swift_project_value_buffer(v5, (uint64_t)qword_269F557B8);
    uint64_t v6 = v4;
    uint64_t v7 = sub_2562E3410();
    os_log_type_t v8 = sub_2562E3800();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v15[0] = v6;
      uint64_t v11 = v6;
      sub_2562E38F0();
      *uint64_t v10 = v2;

      _os_log_impl(&dword_256226000, v7, v8, "#SamplingUtils: SSRRPISampledAudioUploader.cleanUpAudioOnAnd failed with error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
      swift_arrayDestroy();
      MEMORY[0x25A2A5190](v10, -1, -1);
      MEMORY[0x25A2A5190](v9, -1, -1);
    }
    else
    {

      uint64_t v7 = v6;
    }
  }
  else
  {
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_2562E3430();
    __swift_project_value_buffer(v12, (uint64_t)qword_269F557B8);
    uint64_t v7 = sub_2562E3410();
    os_log_type_t v13 = sub_2562E37F0();
    if (os_log_type_enabled(v7, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_256226000, v7, v13, "#SamplingUtils: SSRRPISampledAudioUploader.cleanUpAudioOnAnd completed.", v14, 2u);
      MEMORY[0x25A2A5190](v14, -1, -1);
    }
  }
}

void _s16MetricsFramework13SamplingUtilsC23getManifestCurrentLimit6forKey4fromSiSS_So14NSUserDefaultsCtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (void *)sub_2562E3550();
  id v5 = objc_msgSend(a3, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_2562E3560();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v9 = HIBYTE(v8) & 0xF;
  uint64_t v10 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v8) & 0xF;
  }
  else {
    uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    if ((v8 & 0x1000000000000000) != 0)
    {
      uint64_t v13 = (uint64_t)sub_2562C02D4(v6, v8, 10);
      LOBYTE(v6) = v32;
LABEL_47:
      swift_bridgeObjectRelease();
      if (v6) {
        uint64_t v24 = 0;
      }
      else {
        uint64_t v24 = v13;
      }
      goto LABEL_50;
    }
    if ((v8 & 0x2000000000000000) == 0)
    {
      if ((v6 & 0x1000000000000000) != 0) {
        uint64_t v12 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v12 = (unsigned __int8 *)sub_2562E3A40();
      }
      uint64_t v13 = (uint64_t)sub_2562C063C(v12, v10, 10);
      LOBYTE(v6) = v14 & 1;
      goto LABEL_47;
    }
    v33[0] = v6;
    v33[1] = v8 & 0xFFFFFFFFFFFFFFLL;
    if (v6 == 43)
    {
      if (!v9) {
        goto LABEL_65;
      }
      if (v9 == 1 || (BYTE1(v6) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v13 = (BYTE1(v6) - 48);
      if (v9 != 2)
      {
        if ((BYTE2(v6) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v13 = 10 * (BYTE1(v6) - 48) + (BYTE2(v6) - 48);
        uint64_t v15 = v9 - 3;
        if (v15)
        {
          uint64_t v16 = (unsigned __int8 *)v33 + 3;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              goto LABEL_34;
            }
            uint64_t v18 = 10 * v13;
            if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
              goto LABEL_34;
            }
            uint64_t v13 = v18 + v17;
            if (__OFADD__(v18, v17)) {
              goto LABEL_34;
            }
            LOBYTE(v6) = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      if (v6 == 45)
      {
        if (v9)
        {
          if (v9 != 1 && (BYTE1(v6) - 48) <= 9u)
          {
            if (v9 == 2)
            {
              LOBYTE(v6) = 0;
              uint64_t v13 = -(uint64_t)(BYTE1(v6) - 48);
              goto LABEL_47;
            }
            if ((BYTE2(v6) - 48) <= 9u)
            {
              uint64_t v13 = -10 * (BYTE1(v6) - 48) - (BYTE2(v6) - 48);
              uint64_t v23 = v9 - 3;
              if (!v23) {
                goto LABEL_46;
              }
              char v29 = (unsigned __int8 *)v33 + 3;
              while (1)
              {
                unsigned int v30 = *v29 - 48;
                if (v30 > 9) {
                  break;
                }
                uint64_t v31 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
                  break;
                }
                uint64_t v13 = v31 - v30;
                if (__OFSUB__(v31, v30)) {
                  break;
                }
                LOBYTE(v6) = 0;
                ++v29;
                if (!--v23) {
                  goto LABEL_47;
                }
              }
            }
          }
LABEL_34:
          uint64_t v13 = 0;
          LOBYTE(v6) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_65:
        __break(1u);
        return;
      }
      if (!v9 || (v6 - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v13 = (v6 - 48);
      if (v9 != 1)
      {
        if ((BYTE1(v6) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v13 = 10 * (v6 - 48) + (BYTE1(v6) - 48);
        uint64_t v19 = v9 - 2;
        if (v19)
        {
          uint64_t v20 = (unsigned __int8 *)v33 + 2;
          while (1)
          {
            unsigned int v21 = *v20 - 48;
            if (v21 > 9) {
              goto LABEL_34;
            }
            uint64_t v22 = 10 * v13;
            if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
              goto LABEL_34;
            }
            uint64_t v13 = v22 + v21;
            if (__OFADD__(v22, v21)) {
              goto LABEL_34;
            }
            LOBYTE(v6) = 0;
            ++v20;
            if (!--v19) {
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v6) = 0;
    goto LABEL_47;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = 0;
LABEL_50:
  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_2562E3430();
  __swift_project_value_buffer(v25, (uint64_t)qword_269F557B8);
  uint64_t v26 = sub_2562E3410();
  os_log_type_t v27 = sub_2562E37F0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 134217984;
    v33[0] = v24;
    sub_2562E38F0();
    _os_log_impl(&dword_256226000, v26, v27, "#SamplingUtils: getManifestCurrentLimit is %ld ", v28, 0xCu);
    MEMORY[0x25A2A5190](v28, -1, -1);
  }
}

void _s16MetricsFramework13SamplingUtilsC21getManifestTotalLimit4fromSiSo14NSUserDefaultsC_tFZ_0(void *a1)
{
  id v2 = (void *)sub_2562E3550();
  id v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (v3)
  {
    uint64_t v4 = sub_2562E3560();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = HIBYTE(v6) & 0xF;
  uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v6) & 0xF;
  }
  else {
    uint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (uint64_t)sub_2562C02D4(v4, v6, 10);
    LOBYTE(v4) = v29;
    goto LABEL_47;
  }
  if ((v6 & 0x2000000000000000) != 0)
  {
    v30[0] = v4;
    v30[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v7) {
        goto LABEL_64;
      }
      if (v7 == 1 || (BYTE1(v4) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v11 = (BYTE1(v4) - 48);
      if (v7 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
        uint64_t v13 = v7 - 3;
        if (v13)
        {
          char v14 = (unsigned __int8 *)v30 + 3;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_34;
            }
            uint64_t v16 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_34;
            }
            uint64_t v11 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              goto LABEL_34;
            }
            LOBYTE(v4) = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u)
          {
            if (v7 == 2)
            {
              LOBYTE(v4) = 0;
              uint64_t v11 = -(uint64_t)(BYTE1(v4) - 48);
              goto LABEL_47;
            }
            if ((BYTE2(v4) - 48) <= 9u)
            {
              uint64_t v11 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
              uint64_t v21 = v7 - 3;
              if (!v21) {
                goto LABEL_46;
              }
              uint64_t v26 = (unsigned __int8 *)v30 + 3;
              while (1)
              {
                unsigned int v27 = *v26 - 48;
                if (v27 > 9) {
                  break;
                }
                uint64_t v28 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
                  break;
                }
                uint64_t v11 = v28 - v27;
                if (__OFSUB__(v28, v27)) {
                  break;
                }
                LOBYTE(v4) = 0;
                ++v26;
                if (!--v21) {
                  goto LABEL_47;
                }
              }
            }
          }
LABEL_34:
          uint64_t v11 = 0;
          LOBYTE(v4) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_64:
        __break(1u);
        return;
      }
      if (!v7 || (v4 - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v11 = (v4 - 48);
      if (v7 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v11 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
        uint64_t v17 = v7 - 2;
        if (v17)
        {
          uint64_t v18 = (unsigned __int8 *)v30 + 2;
          while (1)
          {
            unsigned int v19 = *v18 - 48;
            if (v19 > 9) {
              goto LABEL_34;
            }
            uint64_t v20 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_34;
            }
            uint64_t v11 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              goto LABEL_34;
            }
            LOBYTE(v4) = 0;
            ++v18;
            if (!--v17) {
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v4) = 0;
    goto LABEL_47;
  }
  if ((v4 & 0x1000000000000000) != 0) {
    uint64_t v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v10 = (unsigned __int8 *)sub_2562E3A40();
  }
  uint64_t v11 = (uint64_t)sub_2562C063C(v10, v8, 10);
  LOBYTE(v4) = v12 & 1;
LABEL_47:
  swift_bridgeObjectRelease();
  if (v4) {
LABEL_48:
  }
    uint64_t v11 = 150;
  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_2562E3430();
  __swift_project_value_buffer(v22, (uint64_t)qword_269F557B8);
  uint64_t v23 = sub_2562E3410();
  os_log_type_t v24 = sub_2562E37F0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134217984;
    v30[0] = v11;
    sub_2562E38F0();
    _os_log_impl(&dword_256226000, v23, v24, "#SamplingUtils: getManifestTotalLimit is %ld ", v25, 0xCu);
    MEMORY[0x25A2A5190](v25, -1, -1);
  }
}

void _s16MetricsFramework13SamplingUtilsC28getManifestIntermediateLimit4fromSiSo14NSUserDefaultsC_tFZ_0(void *a1)
{
  id v2 = (void *)sub_2562E3550();
  id v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (v3)
  {
    uint64_t v4 = sub_2562E3560();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = HIBYTE(v6) & 0xF;
  uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v6) & 0xF;
  }
  else {
    uint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (uint64_t)sub_2562C02D4(v4, v6, 10);
    LOBYTE(v4) = v29;
    goto LABEL_47;
  }
  if ((v6 & 0x2000000000000000) != 0)
  {
    v30[0] = v4;
    v30[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v7) {
        goto LABEL_64;
      }
      if (v7 == 1 || (BYTE1(v4) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v11 = (BYTE1(v4) - 48);
      if (v7 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
        uint64_t v13 = v7 - 3;
        if (v13)
        {
          char v14 = (unsigned __int8 *)v30 + 3;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_34;
            }
            uint64_t v16 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_34;
            }
            uint64_t v11 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              goto LABEL_34;
            }
            LOBYTE(v4) = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u)
          {
            if (v7 == 2)
            {
              LOBYTE(v4) = 0;
              uint64_t v11 = -(uint64_t)(BYTE1(v4) - 48);
              goto LABEL_47;
            }
            if ((BYTE2(v4) - 48) <= 9u)
            {
              uint64_t v11 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
              uint64_t v21 = v7 - 3;
              if (!v21) {
                goto LABEL_46;
              }
              uint64_t v26 = (unsigned __int8 *)v30 + 3;
              while (1)
              {
                unsigned int v27 = *v26 - 48;
                if (v27 > 9) {
                  break;
                }
                uint64_t v28 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
                  break;
                }
                uint64_t v11 = v28 - v27;
                if (__OFSUB__(v28, v27)) {
                  break;
                }
                LOBYTE(v4) = 0;
                ++v26;
                if (!--v21) {
                  goto LABEL_47;
                }
              }
            }
          }
LABEL_34:
          uint64_t v11 = 0;
          LOBYTE(v4) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_64:
        __break(1u);
        return;
      }
      if (!v7 || (v4 - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v11 = (v4 - 48);
      if (v7 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u) {
          goto LABEL_34;
        }
        uint64_t v11 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
        uint64_t v17 = v7 - 2;
        if (v17)
        {
          uint64_t v18 = (unsigned __int8 *)v30 + 2;
          while (1)
          {
            unsigned int v19 = *v18 - 48;
            if (v19 > 9) {
              goto LABEL_34;
            }
            uint64_t v20 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_34;
            }
            uint64_t v11 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              goto LABEL_34;
            }
            LOBYTE(v4) = 0;
            ++v18;
            if (!--v17) {
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v4) = 0;
    goto LABEL_47;
  }
  if ((v4 & 0x1000000000000000) != 0) {
    uint64_t v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v10 = (unsigned __int8 *)sub_2562E3A40();
  }
  uint64_t v11 = (uint64_t)sub_2562C063C(v10, v8, 10);
  LOBYTE(v4) = v12 & 1;
LABEL_47:
  swift_bridgeObjectRelease();
  if (v4) {
LABEL_48:
  }
    uint64_t v11 = 50;
  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_2562E3430();
  __swift_project_value_buffer(v22, (uint64_t)qword_269F557B8);
  uint64_t v23 = sub_2562E3410();
  os_log_type_t v24 = sub_2562E37F0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134217984;
    v30[0] = v11;
    sub_2562E38F0();
    _os_log_impl(&dword_256226000, v23, v24, "#SamplingUtils: getManifestIntermediateLimit is %ld ", v25, 0xCu);
    MEMORY[0x25A2A5190](v25, -1, -1);
  }
}

uint64_t _s16MetricsFramework13SamplingUtilsC40isDeviceSelectionDateWithinLastSixMonths6forKey8defaultsSbSS_So14NSUserDefaultsCtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_2562E2F80();
  unint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v39 = (char *)v29 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F53DB0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  type metadata accessor for SamplingUtils();
  static SamplingUtils.getDeviceSelectionDate(forKey:defaults:)(a3, (uint64_t)v29 - v10);
  uint64_t v11 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6];
  if (v11((uint64_t)v29 - v10, 1, v4) == 1)
  {
    sub_25622F3C4((uint64_t)v29 - v10, &qword_269F53DB0);
    char v12 = 0;
  }
  else
  {
    v29[0] = v5[4];
    v29[1] = v5 + 4;
    uint64_t v13 = ((uint64_t (*)(char *, char *, uint64_t))v29[0])(v39, (char *)v29 - v10, v4);
    uint64_t v38 = v29;
    uint64_t v14 = MEMORY[0x270FA5388](v13);
    unsigned int v30 = (char *)v29 - v7;
    uint64_t v37 = v29;
    MEMORY[0x270FA5388](v14);
    unsigned int v15 = (char *)v29 - v10;
    uint64_t v35 = sub_2562E3060();
    uint64_t v36 = v29;
    uint64_t v33 = *(void *)(v35 - 8);
    MEMORY[0x270FA5388](v35);
    id v34 = v11;
    uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2562E3040();
    uint64_t v18 = sub_2562E3050();
    char v32 = v29;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18);
    uint64_t v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v22 = (*(uint64_t (**)(char *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F07868], v18);
    uint64_t v31 = v29;
    MEMORY[0x270FA5388](v22);
    sub_2562E2F70();
    sub_2562E3030();
    uint64_t v23 = (uint64_t)v15;
    os_log_type_t v24 = (void (*)(char *, uint64_t))v5[1];
    v24((char *)v29 - v7, v4);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v35);
    if (v34(v23, 1, v4) == 1)
    {
      v24(v39, v4);
      sub_25622F3C4(v23, &qword_269F53DB0);
      char v12 = 0;
    }
    else
    {
      uint64_t v25 = v24;
      uint64_t v26 = v30;
      ((void (*)(char *, uint64_t, uint64_t))v29[0])(v30, v23, v4);
      sub_2562C47DC(qword_269F544C8, MEMORY[0x270FA9338]);
      unsigned int v27 = v39;
      char v12 = sub_2562E3510() ^ 1;
      v25(v26, v4);
      v25(v27, v4);
    }
  }
  return v12 & 1;
}

uint64_t sub_2562C3AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269F557E0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = sub_2562E3460();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unsigned int v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v34 - v16;
  sub_2562E3450();
  MEMORY[0x25A2A4190](v17, 5.0);
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v18, v11);
  uint64_t v20 = sub_2562E37A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
  uint64_t v21 = (void *)swift_allocObject();
  id v21[2] = 0;
  v21[3] = 0;
  v21[4] = a1;
  v21[5] = a2;
  swift_bridgeObjectRetain();
  sub_2562BE7D4((uint64_t)v9, a4, (uint64_t)v21);
  swift_release();
  sub_2562E3840();
  if (sub_2562E3440())
  {
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_2562E3430();
    __swift_project_value_buffer(v22, (uint64_t)qword_269F557B8);
    uint64_t v23 = sub_2562E3410();
    os_log_type_t v24 = sub_2562E3800();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      uint64_t v26 = "#SamplingUtils: SSRRPISamplingXPCService.updateStatus timed out.";
      unsigned int v27 = v23;
      os_log_type_t v28 = v24;
      char v29 = v25;
      uint32_t v30 = 2;
LABEL_10:
      _os_log_impl(&dword_256226000, v27, v28, v26, v29, v30);
      MEMORY[0x25A2A5190](v25, -1, -1);
    }
  }
  else
  {
    if (qword_269F53B20 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_2562E3430();
    __swift_project_value_buffer(v31, (uint64_t)qword_269F557B8);
    uint64_t v23 = sub_2562E3410();
    os_log_type_t v32 = sub_2562E37F0();
    if (os_log_type_enabled(v23, v32))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 134217984;
      v34[1] = 1;
      sub_2562E38F0();
      uint64_t v26 = "#SamplingUtils: Set Enrollment Status to: %lu";
      unsigned int v27 = v23;
      os_log_type_t v28 = v32;
      char v29 = v25;
      uint32_t v30 = 12;
      goto LABEL_10;
    }
  }

  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v11);
}

void _s16MetricsFramework13SamplingUtilsC23setManifestCurrentLimit6forKey_2inySS_SiSo14NSUserDefaultsCtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v5 = (void *)sub_2562E37D0();
  uint64_t v6 = (void *)sub_2562E3550();
  objc_msgSend(a4, sel_setValue_forKey_, v5, v6);

  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_2562E3430();
  __swift_project_value_buffer(v7, (uint64_t)qword_269F557B8);
  id v13 = a4;
  uint64_t v8 = sub_2562E3410();
  os_log_type_t v9 = sub_2562E37F0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    sub_2562E38F0();
    *(_WORD *)(v10 + 12) = 2112;
    id v12 = v13;
    sub_2562E38F0();
    *uint64_t v11 = v13;

    _os_log_impl(&dword_256226000, v8, v9, "#SamplingUtils: Set SpeakerId Sampling Manifest Current Count to %ld in UserDefaults %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v11, -1, -1);
    MEMORY[0x25A2A5190](v10, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_2562C408C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_2562C40B0, 0, 0);
}

uint64_t sub_2562C40B0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithUnsignedInteger_, v0[15]);
  v0[18] = v1;
  id v2 = self;
  id v3 = v1;
  uint64_t v4 = sub_2562E3550();
  v0[19] = v4;
  v0[2] = v0;
  v0[3] = sub_2562C420C;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2562BE48C;
  v0[13] = &block_descriptor_11;
  v0[14] = v5;
  objc_msgSend(v2, sel_updateStatus_languageCode_completion_, v3, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2562C420C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    id v2 = sub_2562C4450;
  }
  else {
    id v2 = sub_2562C431C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562C431C()
{
  uint64_t v1 = *(void **)(v0 + 144);

  if (qword_269F53B20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2562E3430();
  __swift_project_value_buffer(v2, (uint64_t)qword_269F557B8);
  id v3 = sub_2562E3410();
  os_log_type_t v4 = sub_2562E37F0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void **)(v0 + 144);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_256226000, v3, v4, "#SamplingUtils: SSRRPISamplingXPCService.updateStatus completed", v6, 2u);
    MEMORY[0x25A2A5190](v6, -1, -1);
  }
  else
  {

    id v3 = *(NSObject **)(v0 + 144);
  }

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2562C4450()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(void **)(v0 + 144);
  swift_willThrow();

  if (qword_269F53B20 != -1) {
    swift_once();
  }
  id v3 = *(void **)(v0 + 160);
  uint64_t v4 = sub_2562E3430();
  __swift_project_value_buffer(v4, (uint64_t)qword_269F557B8);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = sub_2562E3410();
  os_log_type_t v8 = sub_2562E3800();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void **)(v0 + 160);
  if (v9)
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v10;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v14;
    sub_2562E38F0();
    *id v12 = v14;

    _os_log_impl(&dword_256226000, v7, v8, "#SamplingUtils: SSRRPISamplingXPCService.updateStatus failed with %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F53D48);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v12, -1, -1);
    MEMORY[0x25A2A5190](v11, -1, -1);

    uint64_t v7 = *(NSObject **)(v0 + 144);
  }
  else
  {
  }
  unsigned int v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getEnrollementStatus(siriLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getEnrollementId(siriLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.isEnrollmentDateWithinLastSixMonths(siriLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.setEnrollementStatusToCollecting(siriLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.writeDeviceSelectionDate(forKey:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.setEnrollementStatusToFinished(siriLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getDonationIdsWithEnrollmentId(enrollmentId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getSiriLanguage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.uploadAudioWithRequestId(requestId:audioId:date:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 72))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.cleanUpAudioWithOnAndBeforeDate(date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getAudioIdWithRequestId(requestId:siriLanguage:date:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.isDeviceSelectionDateWithinLastSixMonths(forKey:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getManifestTotalLimit(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getManifestIntermediateLimit(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of static SamplingUtilsProtocol.getManifestCurrentLimit(forKey:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 120))();
}

uint64_t type metadata accessor for SamplingUtils()
{
  return self;
}

uint64_t method lookup function for SamplingUtils(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SamplingUtils);
}

uint64_t sub_2562C47DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_2562C4840()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25623E4D4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269F557D8 + dword_269F557D8);
  id v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *id v5 = v4;
  v5[1] = sub_25623E4D4;
  return v7(2, v2, v3);
}

uint64_t sub_2562C493C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2562C4974(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_25622844C;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F557F8 + dword_269F557F8);
  return v6(a1, v4);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2562C4A70()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25623E4D4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269F557D8 + dword_269F557D8);
  id v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *id v5 = v4;
  v5[1] = sub_25623E4D4;
  return v7(1, v2, v3);
}

uint64_t sub_2562C4B6C(uint64_t a1, void *a2, void *a3)
{
  return sub_2562C5B9C(a1, a2, a3, &qword_269F55858);
}

uint64_t DevicePropertiesDataProvider.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

id DevicePropertiesDataRecord.devicePropertiesEvent.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void DevicePropertiesDataRecord.devicePropertiesEvent.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*DevicePropertiesDataRecord.devicePropertiesEvent.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesDataRecord.assistantId.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DevicePropertiesDataRecord.assistantId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*DevicePropertiesDataRecord.assistantId.modify())()
{
  return nullsub_1;
}

uint64_t DevicePropertiesDataProvider.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  uint64_t v4 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_2562C4D70(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[8] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2562C4E1C;
  v3[16] = v1;
  return MEMORY[0x270FA2498](sub_2562C556C, 0, 0);
}

uint64_t sub_2562C4E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  uint64_t v5 = (void *)*v3;
  v4[9] = a2;
  swift_task_dealloc();
  if (v2)
  {
    id v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v4[10] = v8;
    void *v8 = v5;
    v8[1] = sub_2562C4FB4;
    unsigned char v8[16] = v4[7];
    return MEMORY[0x270FA2498](sub_2562C5190, 0, 0);
  }
}

uint64_t sub_2562C4FB4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2562C510C;
  }
  else
  {
    uint64_t v6 = v4[3];
    v4[12] = a1;
    v4[13] = v6;
    uint64_t v5 = sub_2562C50E0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2562C50E0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 96);
  *(void *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2562C510C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2562C5170()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x270FA2498](sub_2562C5190, 0, 0);
}

uint64_t sub_2562C5190()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F285E0]), sel_init);
  v0[17] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2562C52AC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2562C4B6C;
  v0[13] = &block_descriptor_0;
  v0[14] = v2;
  objc_msgSend(v1, sel_getODDDeviceProperties_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2562C52AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_2562C54DC;
  }
  else {
    uint64_t v2 = sub_2562C53BC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562C53BC()
{
  uint64_t v1 = *(void *)(v0 + 120);

  uint64_t v2 = sub_2562E3410();
  if (v1)
  {
    os_log_type_t v3 = sub_2562E37F0();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_7;
    }
    uint64_t v4 = "Successfully fetched DevicePropertiesEvent";
  }
  else
  {
    os_log_type_t v3 = sub_2562E3800();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_7;
    }
    uint64_t v4 = "Unable to fetch DevicePropertiesEvent";
  }
  uint64_t v5 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v5 = 0;
  _os_log_impl(&dword_256226000, v2, v3, v4, v5, 2u);
  MEMORY[0x25A2A5190](v5, -1, -1);
LABEL_7:

  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v1);
}

uint64_t sub_2562C54DC()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2562C554C()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x270FA2498](sub_2562C556C, 0, 0);
}

uint64_t sub_2562C556C()
{
  id v1 = objc_msgSend(self, sel_sharedPreferences);
  unsigned __int8 v2 = objc_msgSend(v1, sel_longLivedIdentifierUploadingEnabled);

  if (v2)
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F285E0]), sel_init);
    v0[17] = v3;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_2562C577C;
    uint64_t v4 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_2562C5B90;
    v0[13] = &block_descriptor_11_0;
    v0[14] = v4;
    objc_msgSend(v3, sel_fetchActiveAccount_, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v5 = sub_2562E3410();
    os_log_type_t v6 = sub_2562E37F0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_256226000, v5, v6, "RPI enabled, skipping assistantIdentifier fetch", v7, 2u);
      MEMORY[0x25A2A5190](v7, -1, -1);
    }

    uint64_t v8 = (uint64_t (*)(void, void))v0[1];
    return v8(0, 0);
  }
}

uint64_t sub_2562C577C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    unsigned __int8 v2 = sub_2562C54DC;
  }
  else {
    unsigned __int8 v2 = sub_2562C588C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562C588C()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void **)(v0 + 120);

  if (!v1)
  {
    uint64_t v11 = sub_2562E3410();
    uint64_t v12 = sub_2562E3800();
    if (os_log_type_enabled(v11, (os_log_type_t)v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl(&dword_256226000, v11, (os_log_type_t)v12, "Unable to fetch AFAccount", v13, 2u);
      MEMORY[0x25A2A5190](v13, -1, -1);
    }
    goto LABEL_10;
  }
  id v2 = objc_msgSend(v1, sel_assistantIdentifier);
  if (!v2)
  {
    uint64_t v11 = sub_2562E3410();
    os_log_type_t v14 = sub_2562E3800();
    if (os_log_type_enabled(v11, v14))
    {
      unsigned int v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v15 = 0;
      _os_log_impl(&dword_256226000, v11, v14, "assistantIdentifier from fetched AFAccount is nil", v15, 2u);
      MEMORY[0x25A2A5190](v15, -1, -1);
    }

LABEL_10:
    uint64_t v4 = 0;
    unint64_t v6 = 0;
    goto LABEL_12;
  }
  id v3 = v2;
  uint64_t v4 = sub_2562E3560();
  unint64_t v6 = v5;

  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_2562E3410();
  os_log_type_t v8 = sub_2562E37F0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_256229738(v4, v6, &v18);
    sub_2562E38F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_256226000, v7, v8, "Fetched assistantIdentifier: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A5190](v10, -1, -1);
    MEMORY[0x25A2A5190](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_12:
  uint64_t v16 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v16(v4, v6);
}

uint64_t sub_2562C5B90(uint64_t a1, void *a2, void *a3)
{
  return sub_2562C5B9C(a1, a2, a3, &qword_269F55860);
}

uint64_t sub_2562C5B9C(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269F54218);
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = a3;
    id v8 = a3;
    return MEMORY[0x270FA2410](v4, v6);
  }
  else
  {
    id v13 = a2;
    uint64_t v10 = *(void *)(*(void *)(v4 + 64) + 40);
    id v11 = a2;
    sub_25622F514((uint64_t)&v13, v10, a4);
    return swift_continuation_throwingResume();
  }
}

uint64_t DevicePropertiesDataProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DevicePropertiesDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesDataProvider_logger;
  uint64_t v2 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2562C5D6C(uint64_t a1)
{
  uint64_t v3 = *v1;
  v2[6] = a1;
  v2[7] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[8] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2562C4E1C;
  v4[16] = v3;
  return MEMORY[0x270FA2498](sub_2562C556C, 0, 0);
}

uint64_t destroy for DevicePropertiesDataRecord(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s16MetricsFramework26DevicePropertiesDataRecordVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DevicePropertiesDataRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DevicePropertiesDataRecord(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DevicePropertiesDataRecord(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DevicePropertiesDataRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DevicePropertiesDataRecord()
{
  return &type metadata for DevicePropertiesDataRecord;
}

uint64_t sub_2562C6008()
{
  return type metadata accessor for DevicePropertiesDataProvider();
}

uint64_t type metadata accessor for DevicePropertiesDataProvider()
{
  uint64_t result = qword_269F55840;
  if (!qword_269F55840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t method lookup function for DevicePropertiesDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DevicePropertiesDataProvider);
}

uint64_t dispatch thunk of DevicePropertiesDataProvider.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DevicePropertiesDataProvider.loadData()(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *int v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

uint64_t DevicePropertiesSELFReporter.__allocating_init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(void *)(v4 + 16) = a2;
  return v4;
}

uint64_t sub_2562C6220()
{
  return MEMORY[0x270FA2498](sub_2562C623C, 0, 0);
}

uint64_t sub_2562C623C()
{
  return sub_2562E3AC0();
}

uint64_t DevicePropertiesReporter.deinit()
{
  return v0;
}

uint64_t DevicePropertiesReporter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2562C62D4(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(**(void **)v1 + 80) + **(int **)(**(void **)v1 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25622844C;
  return v6(a1);
}

id sub_2562C63DC()
{
  id result = objc_msgSend(self, sel_sharedPreferences);
  qword_269F5E470 = (uint64_t)result;
  return result;
}

uint64_t DevicePropertiesSELFReporter.init(logger:reportingService:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
  uint64_t v6 = sub_2562E3430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(void *)(v2 + 16) = a2;
  return v2;
}

uint64_t sub_2562C6494(_OWORD *a1)
{
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = *a1;
  uint64_t v5 = (uint64_t (*)(int, int))((char *)&dword_269F54DA8 + dword_269F54DA8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2562C6548;
  return v5(3, 1);
}

uint64_t sub_2562C6548(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2562C6648, 0, 0);
}

uint64_t sub_2562C6648()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  if (v1)
  {
    uint64_t v3 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    v0[7] = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    uint64_t v4 = v2 + v3;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_2562C6A40;
    uint64_t v6 = v1;
    uint64_t v7 = v4;
LABEL_21:
    return sub_2562492A0(v6, v7);
  }
  id v8 = sub_2562E3410();
  uint64_t v9 = sub_2562E3800();
  if (os_log_type_enabled(v8, (os_log_type_t)v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_256226000, v8, (os_log_type_t)v9, "Unable to create exection metadata event", v10, 2u);
    MEMORY[0x25A2A5190](v10, -1, -1);
  }

  unint64_t v11 = v0[3];
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2562E3AD0();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v0[10] = v12;
  uint64_t v13 = v0[3];
  if (v12)
  {
    uint64_t v14 = v0[2];
    uint64_t v15 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    v0[11] = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    v0[12] = *(void *)(v14 + 16);
    if ((v13 & 0xC000000000000001) != 0)
    {
      id v16 = (id)MEMORY[0x25A2A4740](0);
      uint64_t v15 = v0[11];
      uint64_t v14 = v0[2];
    }
    else
    {
      id v16 = *(id *)(v13 + 32);
    }
    v0[13] = v16;
    v0[14] = 1;
    uint64_t v22 = (void *)swift_task_alloc();
    v0[15] = v22;
    void *v22 = v0;
    v22[1] = sub_2562C6E78;
    uint64_t v7 = v14 + v15;
LABEL_20:
    uint64_t v6 = (uint64_t)v16;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  if (qword_269F53B28 != -1) {
    swift_once();
  }
  if (objc_msgSend((id)qword_269F5E470, sel_longLivedIdentifierUploadingEnabled))
  {
    unint64_t v17 = v0[4];
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_2562E3AD0();
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v0[17] = v18;
    uint64_t v19 = v0[4];
    if (v18)
    {
      uint64_t v20 = v0[2];
      uint64_t v21 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      v0[18] = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      v0[19] = *(void *)(v20 + 16);
      if ((v19 & 0xC000000000000001) != 0)
      {
        id v16 = (id)MEMORY[0x25A2A4740](0);
        uint64_t v21 = v0[18];
        uint64_t v20 = v0[2];
      }
      else
      {
        id v16 = *(id *)(v19 + 32);
      }
      v0[20] = v16;
      v0[21] = 1;
      os_log_type_t v28 = (void *)swift_task_alloc();
      v0[22] = v28;
      *os_log_type_t v28 = v0;
      v28[1] = sub_2562C7280;
      uint64_t v7 = v20 + v21;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v24 = sub_2562E3410();
    os_log_type_t v25 = sub_2562E37F0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_256226000, v24, v25, "RPI enabled, skipping ODDSiriAccountInformation upload", v26, 2u);
      MEMORY[0x25A2A5190](v26, -1, -1);
    }
  }
  unsigned int v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_2562C6A40()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2562C74D4;
  }
  else {
    uint64_t v2 = sub_2562C6B54;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562C6B54()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2562E3AD0();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  *(void *)(v0 + 80) = v2;
  uint64_t v3 = *(void *)(v0 + 24);
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(void *)(v0 + 88) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(void *)(v0 + 96) = *(void *)(v4 + 16);
    if ((v3 & 0xC000000000000001) != 0)
    {
      id v6 = (id)MEMORY[0x25A2A4740](0);
      uint64_t v5 = *(void *)(v0 + 88);
      uint64_t v4 = *(void *)(v0 + 16);
    }
    else
    {
      id v6 = *(id *)(v3 + 32);
    }
    *(void *)(v0 + 104) = v6;
    *(void *)(v0 + 112) = 1;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_2562C6E78;
    uint64_t v13 = v4 + v5;
LABEL_16:
    return sub_2562492A0((uint64_t)v6, v13);
  }
  swift_bridgeObjectRelease();
  if (qword_269F53B28 != -1) {
    swift_once();
  }
  if (objc_msgSend((id)qword_269F5E470, sel_longLivedIdentifierUploadingEnabled))
  {
    unint64_t v7 = *(void *)(v0 + 32);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2562E3AD0();
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    *(void *)(v0 + 136) = v8;
    uint64_t v9 = *(void *)(v0 + 32);
    if (v8)
    {
      uint64_t v10 = *(void *)(v0 + 16);
      uint64_t v11 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(void *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
      *(void *)(v0 + 152) = *(void *)(v10 + 16);
      if ((v9 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x25A2A4740](0);
        uint64_t v11 = *(void *)(v0 + 144);
        uint64_t v10 = *(void *)(v0 + 16);
      }
      else
      {
        id v6 = *(id *)(v9 + 32);
      }
      *(void *)(v0 + 160) = v6;
      *(void *)(v0 + 168) = 1;
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_2562C7280;
      uint64_t v13 = v10 + v11;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = sub_2562E3410();
    os_log_type_t v16 = sub_2562E37F0();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v17 = 0;
      _os_log_impl(&dword_256226000, v15, v16, "RPI enabled, skipping ODDSiriAccountInformation upload", v17, 2u);
      MEMORY[0x25A2A5190](v17, -1, -1);
    }
  }
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_2562C6E78()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2562C7898;
  }
  else
  {
    uint64_t v2 = sub_2562C6F94;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2562C6F94()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 80);

  if (v1 != v2)
  {
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 24);
    if ((v10 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x25A2A4740](*(void *)(v0 + 112));
    }
    else {
      id v11 = *(id *)(v10 + 8 * v9 + 32);
    }
    uint64_t v15 = (uint64_t)v11;
    *(void *)(v0 + 104) = v11;
    *(void *)(v0 + 112) = v9 + 1;
    if (!__OFADD__(v9, 1))
    {
      uint64_t v16 = *(void *)(v0 + 88);
      uint64_t v17 = *(void *)(v0 + 16);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_2562C6E78;
      uint64_t v19 = v17 + v16;
      uint64_t v20 = v15;
LABEL_24:
      return sub_2562492A0(v20, v19);
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2562E3AD0();
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  if (qword_269F53B28 != -1) {
    swift_once();
  }
  if (!objc_msgSend((id)qword_269F5E470, sel_longLivedIdentifierUploadingEnabled))
  {
    uint64_t v12 = sub_2562E3410();
    os_log_type_t v13 = sub_2562E37F0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_256226000, v12, v13, "RPI enabled, skipping ODDSiriAccountInformation upload", v14, 2u);
      MEMORY[0x25A2A5190](v14, -1, -1);
    }

    goto LABEL_19;
  }
  unint64_t v3 = *(void *)(v0 + 32);
  if (v3 >> 62) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_7:
  *(void *)(v0 + 136) = v4;
  uint64_t v5 = *(void *)(v0 + 32);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v7 = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(void *)(v0 + 144) = OBJC_IVAR____TtC16MetricsFramework28DevicePropertiesSELFReporter_logger;
    *(void *)(v0 + 152) = *(void *)(v6 + 16);
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v8 = (id)MEMORY[0x25A2A4740](0);
      uint64_t v7 = *(void *)(v0 + 144);
      uint64_t v6 = *(void *)(v0 + 16);
    }
    else
    {
      id v8 = *(id *)(v5 + 32);
    }
    *(void *)(v0 + 160) = v8;
    *(void *)(v0 + 168) = 1;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_2562C7280;
    uint64_t v19 = v6 + v7;
    uint64_t v20 = (uint64_t)v8;
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}