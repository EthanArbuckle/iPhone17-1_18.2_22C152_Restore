uint64_t sub_236D15868()
{
  return swift_initClassMetadata2();
}

uint64_t sub_236D158B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for AsyncStreamContainer.Context();
  uint64_t v10 = a4 + *(int *)(v9 + 36);
  uint64_t v11 = sub_236DB9CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v12 = a4 + *(int *)(v9 + 40);
  uint64_t v13 = sub_236DBA090();
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  return v14(v12, a3, v13);
}

uint64_t sub_236D159F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_236D15A58()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for AsyncStreamContainer()
{
  return __swift_instantiateGenericMetadata();
}

void type metadata accessor for NSPersistentHistoryChangeType(uint64_t a1)
{
}

uint64_t sub_236D15ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_236D15AC4()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_236DB9CF0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_236DBA090();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_236D15BD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_236DB9CF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 40);
    uint64_t v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)(a3 + 24);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_236DBA090();
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t sub_236D15DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_236DB9CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_236D15EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_236DB9CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_236DBA090();
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_236D16090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_236DB9CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16((const void *)(a1 + v11), 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_236DBA090();
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_236D16288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_236DB9CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_236DBA090();
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_236D1641C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_236DB9CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16((const void *)(a1 + v11), 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_236DBA090();
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_236D16614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D16628);
}

uint64_t sub_236D16628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_236DB9CF0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_236DBA090();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 40);
  return v15(v17, a2, v16);
}

uint64_t sub_236D1677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D16790);
}

uint64_t sub_236D16790(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_236DB9CF0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_236DBA090();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 40);
  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for AsyncStreamContainer.Context()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_236D1690C()
{
  unint64_t result = qword_2688D15A8;
  if (!qword_2688D15A8)
  {
    sub_236DB9830();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D15A8);
  }
  return result;
}

uint64_t sub_236D16964()
{
  return v0;
}

uint64_t sub_236D16970()
{
  return sub_236D16964();
}

uint64_t sub_236D1698C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v54 = a1;
  v55 = v1 + 14;
  uint64_t v46 = *(void *)(v2 + 88);
  uint64_t v3 = sub_236DBA090();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  v49 = (char *)v41 - v4;
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = type metadata accessor for AsyncStreamContainer.Context();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v48 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (uint64_t)v41 - v9;
  uint64_t v57 = sub_236DB9830();
  uint64_t v10 = *(void *)(v57 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v57);
  v44 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v41 - v13;
  uint64_t v15 = sub_236DB9CD0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v41 - v17;
  uint64_t v43 = sub_236DB9CF0();
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v43);
  v42 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v56 = (char *)v41 - v21;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F580], v15);
  uint64_t v22 = v5;
  v41[1] = v5;
  sub_236DB9CA0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v41[0] = v14;
  sub_236DB9820();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  v24 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v25 = v44;
  uint64_t v26 = v57;
  v24(v44, v14, v57);
  unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = v22;
  *((void *)v28 + 3) = v46;
  *((void *)v28 + 4) = v23;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v28[v27], v25, v26);
  uint64_t v29 = v43;
  v30 = v56;
  sub_236DB9CC0();
  uint64_t v31 = (uint64_t)v25;
  uint64_t v32 = v41[0];
  v24(v25, (char *)v41[0], v26);
  uint64_t v33 = v45;
  uint64_t v34 = (uint64_t)v42;
  uint64_t v35 = v29;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v30, v29);
  uint64_t v36 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v49, v54, v53);
  uint64_t v37 = v47;
  sub_236D158B8(v31, v34, v36, v47);
  uint64_t v39 = v50;
  uint64_t v38 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v48, v37, v51);
  swift_beginAccess();
  sub_236DB9C10();
  sub_236DB9BE0();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v32, v57);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v56, v35);
}

uint64_t sub_236D16F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F8F580];
  uint64_t v3 = sub_236DB9CD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_236D16FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = sub_236DB9C90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
    unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v18 = (char *)swift_allocObject();
    *((void *)v18 + 2) = 0;
    *((void *)v18 + 3) = 0;
    *((void *)v18 + 4) = a4;
    *((void *)v18 + 5) = a5;
    *((void *)v18 + 6) = v15;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    sub_236D795C0((uint64_t)v13, (uint64_t)&unk_2688D15C0, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_236D171D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_236D171F8, a4, 0);
}

uint64_t sub_236D171F8()
{
  sub_236D17258();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D17258()
{
  return swift_endAccess();
}

uint64_t sub_236D17364(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3)
{
  uint64_t v52 = a3;
  uint64_t v51 = a2;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v71 = sub_236DB9CB0();
  uint64_t v65 = *(void *)(v71 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v71);
  v70 = (char *)&v45 - v8;
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  v69 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = *(void *)(v5 + 88);
  uint64_t v60 = sub_236DBA090();
  uint64_t v15 = *(void *)(v60 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v60);
  v61 = (char *)&v45 - v17;
  uint64_t v18 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)&v45 - v19;
  uint64_t v20 = type metadata accessor for AsyncStreamContainer.Context();
  uint64_t v62 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  v64 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v22;
  MEMORY[0x270FA5388](v21);
  v66 = (char *)&v45 - v23;
  swift_beginAccess();
  uint64_t v24 = v3[14];
  uint64_t v25 = swift_bridgeObjectRetain();
  if (!MEMORY[0x237E0EEB0](v25, v20)) {
    return swift_bridgeObjectRelease();
  }
  v58 = (void (**)(char *, char *, uint64_t))(v62 + 32);
  v59 = (void (**)(char *, uint64_t *, uint64_t))(v62 + 16);
  uint64_t v26 = v15;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v15 + 16);
  v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v50 = (void (**)(void))(v18 + 32);
  v48 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v27 = 0;
  uint64_t v54 = (void (**)(char *, uint64_t))(v62 + 8);
  v67 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  v68 = (void (**)(char *, uint64_t *, uint64_t))(v9 + 16);
  v28 = (void (**)(char *, uint64_t))(v65 + 8);
  v49 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v63 = v20;
  uint64_t v47 = v14;
  uint64_t v55 = v24;
  while (1)
  {
    char v30 = sub_236DB9BA0();
    sub_236DB9B70();
    if (v30)
    {
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v62 + 16))(v66, v24+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v27, v20);
      uint64_t v32 = v27;
      uint64_t v33 = v61;
    }
    else
    {
      uint64_t v32 = v27;
      uint64_t result = sub_236DBA2A0();
      uint64_t v33 = v61;
      if (v45 != 8) {
        goto LABEL_29;
      }
      uint64_t v72 = result;
      (*v59)(v66, &v72, v20);
      uint64_t result = swift_unknownObjectRelease();
    }
    BOOL v34 = __OFADD__(v32, 1);
    uint64_t v65 = v32 + 1;
    uint64_t v35 = v60;
    uint64_t v36 = v64;
    if (v34) {
      break;
    }
    uint64_t v20 = v63;
    (*v58)(v64, v66, v63);
    (*v57)(v33, &v36[*(int *)(v20 + 40)], v35);
    if ((*v56)(v33, 1, v14) == 1)
    {
      (*v54)(v36, v20);
      (*v49)(v33, v35);
    }
    else
    {
      uint64_t v37 = v53;
      (*v50)();
      if (v51(v37))
      {
        uint64_t v38 = swift_bridgeObjectRetain();
        if (MEMORY[0x237E0EEB0](v38, v6))
        {
          uint64_t v39 = 0;
          do
          {
            char v40 = sub_236DB9BA0();
            sub_236DB9B70();
            if (v40)
            {
              uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16))(v13, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v39, v6);
              uint64_t v41 = v39 + 1;
              if (__OFADD__(v39, 1)) {
                goto LABEL_26;
              }
            }
            else
            {
              uint64_t result = sub_236DBA2A0();
              if (v46 != 8) {
                goto LABEL_28;
              }
              uint64_t v72 = result;
              (*v68)(v13, &v72, v6);
              uint64_t result = swift_unknownObjectRelease();
              uint64_t v41 = v39 + 1;
              if (__OFADD__(v39, 1))
              {
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
            }
            (*v67)(v69, v13, v6);
            sub_236DB9CF0();
            v42 = v13;
            uint64_t v43 = v70;
            sub_236DB9CE0();
            v44 = v43;
            uint64_t v13 = v42;
            (*v28)(v44, v71);
            ++v39;
          }
          while (v41 != MEMORY[0x237E0EEB0](a1, v6));
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = v47;
        (*v48)(v53, v47);
      }
      else
      {
        (*v48)(v37, v14);
      }
      uint64_t v20 = v63;
      (*v54)(v64, v63);
    }
    uint64_t v24 = v55;
    uint64_t v29 = MEMORY[0x237E0EEB0](v55, v20);
    uint64_t v27 = v65;
    if (v65 == v29) {
      return swift_bridgeObjectRelease();
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_236D17B14()
{
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1;
}

uint64_t sub_236D17B44()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236D17B7C()
{
  uint64_t v1 = sub_236DB9830();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D17C48(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(sub_236DB9830() - 8);
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_236D16FCC(a1, v6, v7, v3, v4);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_236D17D14()
{
  uint64_t v1 = sub_236DB9830();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D17DE8()
{
  uint64_t v2 = *(void *)(sub_236DB9830() - 8);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_236D17ED0;
  return MEMORY[0x270FA2498](sub_236D171F8, v3, 0);
}

uint64_t sub_236D17ED0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_236D18034(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_236D18054(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
}

void sub_236D18094(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_236D180DC(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v42 = a3;
  uint64_t v41 = a2;
  uint64_t v53 = sub_236DBA090();
  uint64_t v8 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v40 = sub_236DBA740();
  uint64_t v58 = *(void *)(v40 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v40);
  v48 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v52 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  v49 = (char *)&v38 - v20;
  uint64_t v38 = v21;
  MEMORY[0x270FA5388](v19);
  uint64_t v50 = (char *)&v38 - v22;
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_236DB9960();
  sub_236DB9C10();
  uint64_t v45 = 0;
  uint64_t v57 = (uint64_t (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  v59 = &v64;
  uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v51 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v24 = a1;
  uint64_t v43 = v13;
  uint64_t v54 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v39 = (void (**)(char *, uint64_t))(v58 + 8);
  uint64_t v58 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    uint64_t v63 = v24;
    swift_getWitnessTable();
    if (sub_236DB9EE0()) {
      break;
    }
    if (MEMORY[0x237E0EEB0](v24, a4))
    {
      uint64_t v27 = 0;
      uint64_t v44 = v24;
      while (1)
      {
        char v29 = sub_236DB9BA0();
        sub_236DB9B70();
        if (v29)
        {
          unint64_t v30 = v24
              + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))
              + *(void *)(v43 + 72) * v27;
          v56 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 16);
          uint64_t result = v56(v50, v30, a4);
          uint64_t v31 = v27;
        }
        else
        {
          uint64_t v47 = v27;
          uint64_t result = sub_236DBA2A0();
          if (v38 != 8) {
            goto LABEL_25;
          }
          uint64_t v63 = result;
          v56 = *v57;
          v56(v50, (unint64_t)&v63, a4);
          uint64_t result = swift_unknownObjectRelease();
          uint64_t v31 = v47;
        }
        BOOL v26 = __OFADD__(v31, 1);
        uint64_t v32 = v31 + 1;
        uint64_t v33 = v49;
        if (v26) {
          break;
        }
        uint64_t v47 = v32;
        BOOL v34 = *v55;
        (*v55)(v49, v50, a4);
        v41(v33, v45);
        if (v5)
        {
          (*v54)(v33, a4);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v46 = 0;
        uint64_t v65 = a4;
        uint64_t v35 = __swift_allocate_boxed_opaque_existential_0(&v63);
        v56((char *)v35, (unint64_t)v33, a4);
        sub_236DBA720();
        sub_236DBA730();
        sub_236DBA3D0();
        swift_release();
        swift_retain();
        while (1)
        {
          sub_236DBA4C0();
          sub_236D18F94((uint64_t)v62, (uint64_t)&v63);
          if (!v66) {
            break;
          }
          swift_bridgeObjectRelease();
          sub_236D18FFC(v59, v62);
          sub_236D1900C((uint64_t)v62, (uint64_t)v61);
          int v36 = swift_dynamicCast();
          uint64_t v37 = *v23;
          if (v36)
          {
            v37(v10, 0, 1, a4);
            v34(v18, v10, a4);
            v56(v52, (unint64_t)v18, a4);
            sub_236DB9BE0();
            (*v54)(v18, a4);
          }
          else
          {
            v37(v10, 1, 1, a4);
            (*v51)(v10, v53);
            sub_236D1900C((uint64_t)v62, (uint64_t)v61);
            if (swift_dynamicCast())
            {
              v61[0] = v60;
              swift_getWitnessTable();
              sub_236DB9BD0();
            }
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
        }
        swift_release_n();
        (*v39)(v48, v40);
        (*v54)(v49, a4);
        uint64_t v24 = v44;
        uint64_t v28 = MEMORY[0x237E0EEB0](v44, a4);
        uint64_t v27 = v47;
        uint64_t v5 = v46;
        if (v47 == v28) {
          goto LABEL_2;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v24 = v67;
    swift_bridgeObjectRetain();
    uint64_t result = sub_236DB9C00();
    BOOL v26 = __OFADD__(v45++, 1);
    if (v26) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D18884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = sub_236DBA090();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v8);
  uint64_t v28 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v26 = sub_236DBA740();
  uint64_t v25 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_236DB9960();
  v36[1] = a3;
  uint64_t v18 = __swift_allocate_boxed_opaque_existential_0(&v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v18, a1, a3);
  sub_236DBA720();
  uint64_t v24 = v17;
  sub_236DBA730();
  uint64_t v19 = sub_236DBA3D0();
  swift_release();
  swift_retain();
  uint64_t v31 = v19;
  sub_236DBA4C0();
  sub_236D18F94((uint64_t)v34, (uint64_t)&v35);
  if (v37)
  {
    unint64_t v30 = v36;
    uint64_t v27 = (void (**)(char *, uint64_t))(v7 + 8);
    do
    {
      swift_bridgeObjectRelease();
      sub_236D18FFC(v30, v34);
      sub_236D1900C((uint64_t)v34, (uint64_t)v33);
      int v20 = swift_dynamicCast();
      uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      if (v20)
      {
        v21(v10, 0, 1, a4);
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, a4);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v15, a4);
        sub_236DB9C10();
        sub_236DB9BE0();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, a4);
      }
      else
      {
        v21(v10, 1, 1, a4);
        (*v27)(v10, v29);
        sub_236D1900C((uint64_t)v34, (uint64_t)v33);
        sub_236DB9C10();
        if (swift_dynamicCast())
        {
          v33[0] = v32;
          swift_getWitnessTable();
          sub_236DB9BD0();
        }
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
      sub_236DBA4C0();
      sub_236D18F94((uint64_t)v34, (uint64_t)&v35);
    }
    while (v37);
  }
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
  return v38;
}

uint64_t sub_236D18D28(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_236D18884(a1, a2, a5, a6);
  sub_236D180DC(v9, a3, a4, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D18D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = sub_236DB9960();
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a7;
  v17[5] = &v18;
  v17[6] = a3;
  v17[7] = a4;
  sub_236D18D28(a1, a2, (void (*)(char *, uint64_t))sub_236D18F0C, (uint64_t)v17, a5, a6);
  uint64_t v15 = v18;
  if (v7) {
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_236D18E5C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t result = v3(v2);
  if (!v1)
  {
    sub_236DB9C10();
    return sub_236DB9BE0();
  }
  return result;
}

uint64_t sub_236D18F0C(uint64_t a1)
{
  return sub_236D18E5C(a1);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_236D18F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_236D18FFC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_236D1900C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_236D190B8()
{
  return sub_236D6156C(MEMORY[0x263F8EE78]);
}

unint64_t sub_236D190C4()
{
  return sub_236D61684(MEMORY[0x263F8EE78]);
}

unint64_t sub_236D190D0()
{
  return sub_236D190C4();
}

unint64_t sub_236D190E8()
{
  return sub_236D190B8();
}

uint64_t sub_236D19100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for AnyModelStateChange.Tombstone(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = type metadata accessor for AnyModelStateChange(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for XPCModelStateChange();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v31 - v17;
  sub_236D1B1FC(a1, (uint64_t)v11, type metadata accessor for AnyModelStateChange);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      long long v19 = *((_OWORD *)v11 + 1);
      v36[0] = *(_OWORD *)v11;
      v36[1] = v19;
      uint64_t v37 = *((void *)v11 + 4);
      sub_236D1B32C((uint64_t)v36, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_1(v33, v34);
      uint64_t v20 = sub_236D76F20();
      uint64_t v22 = v21;
      uint64_t v23 = v34;
      uint64_t v24 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      sub_236D2BCA0(v23, v24);
      sub_236D1B264(a1, type metadata accessor for AnyModelStateChange);
      sub_236D1B3D4((uint64_t)v36);
      *uint64_t v16 = v32;
      *((void *)v16 + 1) = v20;
      *((void *)v16 + 2) = v22;
      swift_storeEnumTagMultiPayload();
      sub_236D1B2C4((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
      goto LABEL_5;
    case 3u:
      sub_236D1B2C4((uint64_t)v11, (uint64_t)v8, type metadata accessor for AnyModelStateChange.Tombstone);
      sub_236D1B1FC((uint64_t)v8, (uint64_t)v6, type metadata accessor for AnyModelStateChange.Tombstone);
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8) + 48);
      uint64_t v28 = sub_236DB9830();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v16, v6, v28);
      char v29 = v6[*(int *)(v3 + 20)];
      sub_236D1B264((uint64_t)v6, type metadata accessor for AnyModelStateChange.Tombstone);
      v16[v27] = v29;
      swift_storeEnumTagMultiPayload();
      sub_236D1B2C4((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      sub_236D1B264(a1, type metadata accessor for AnyModelStateChange);
      sub_236D1B264((uint64_t)v8, type metadata accessor for AnyModelStateChange.Tombstone);
LABEL_5:
      uint64_t v26 = v31;
      sub_236D1B2C4((uint64_t)v18, v31, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      uint64_t v25 = 0;
      break;
    default:
      sub_236D1B264(a1, type metadata accessor for AnyModelStateChange);
      swift_bridgeObjectRelease();
      uint64_t v25 = 1;
      uint64_t v26 = v31;
      break;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v26, v25, 1, v12);
}

BOOL sub_236D19644(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_236D19660()
{
  return sub_236DBA6F0();
}

uint64_t sub_236D19690()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_236D196AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D1C748(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D196D4()
{
  return 0;
}

void sub_236D196E0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_236D196EC(uint64_t a1)
{
  unint64_t v2 = sub_236D1BD38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D19728(uint64_t a1)
{
  unint64_t v2 = sub_236D1BD38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_236D19764(void *a1)
{
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1660);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v42 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_236DB9830();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1668);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1670);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for XPCModelStateChange();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1678);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v49 = v13;
  uint64_t v50 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D1BB94();
  sub_236DBA760();
  sub_236D1B1FC(v51, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      char v18 = *v12;
      uint64_t v19 = *((void *)v12 + 1);
      unint64_t v20 = *((void *)v12 + 2);
      LOBYTE(v52) = 1;
      sub_236D1BC90();
      uint64_t v21 = v49;
      sub_236DBA560();
      LOBYTE(v52) = v18;
      char v54 = 0;
      sub_236D1BDD0();
      uint64_t v22 = v41;
      uint64_t v23 = v48;
      sub_236DBA5A0();
      if (v23)
      {
        sub_236D1B18C(v19, v20);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v22);
        return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v16, v21);
      }
      uint64_t v52 = v19;
      unint64_t v53 = v20;
      char v54 = 1;
      sub_236D1BE24();
      sub_236DBA5A0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v22);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v21);
      return sub_236D1B18C(v19, v20);
    }
    else
    {
      LODWORD(v51) = v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8) + 48)];
      uint64_t v31 = v43;
      char v32 = v47;
      uint64_t v33 = v45;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v47, v12, v45);
      LOBYTE(v52) = 2;
      sub_236D1BBE8();
      uint64_t v34 = v42;
      uint64_t v35 = v49;
      sub_236DBA560();
      LOBYTE(v52) = 0;
      sub_236D1BD8C(&qword_2688D1680);
      uint64_t v36 = v46;
      uint64_t v37 = v48;
      sub_236DBA5A0();
      if (v37)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v36);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
      }
      else
      {
        LOBYTE(v52) = v51;
        char v54 = 1;
        sub_236D1BDD0();
        sub_236DBA5A0();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v36);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v47, v33);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v16, v35);
    }
  }
  else
  {
    uint64_t v24 = v38;
    char v25 = *v12;
    uint64_t v27 = *((void *)v12 + 1);
    unint64_t v26 = *((void *)v12 + 2);
    LOBYTE(v52) = 0;
    sub_236D1BD38();
    uint64_t v21 = v49;
    sub_236DBA560();
    LOBYTE(v52) = v25;
    char v54 = 0;
    sub_236D1BDD0();
    uint64_t v28 = v39;
    uint64_t v29 = v48;
    sub_236DBA5A0();
    if (v29)
    {
      sub_236D1B18C(v27, v26);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v16, v21);
    }
    uint64_t v52 = v27;
    unint64_t v53 = v26;
    char v54 = 1;
    sub_236D1BE24();
    sub_236DBA5A0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v28);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v21);
    return sub_236D1B18C(v27, v26);
  }
}

uint64_t sub_236D19EB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1600);
  uint64_t v60 = *(void *)(v58 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v65 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1608);
  uint64_t v59 = *(void *)(v57 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  char v64 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1610);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v62 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1618);
  uint64_t v61 = *(void *)(v63 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for XPCModelStateChange();
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v50 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = a1[3];
  uint64_t v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_236D1BB94();
  uint64_t v23 = v67;
  sub_236DBA750();
  if (!v23)
  {
    uint64_t v51 = v19;
    uint64_t v52 = v16;
    uint64_t v24 = v62;
    uint64_t v25 = v63;
    unint64_t v53 = v13;
    unint64_t v26 = v64;
    uint64_t v27 = v65;
    uint64_t v67 = v10;
    uint64_t v28 = sub_236DBA540();
    uint64_t v29 = v9;
    if (*(void *)(v28 + 16) == 1)
    {
      if (*(unsigned char *)(v28 + 32))
      {
        if (*(unsigned char *)(v28 + 32) == 1)
        {
          LOBYTE(v68) = 1;
          sub_236D1BC90();
          unint64_t v30 = v26;
          sub_236DBA4E0();
          uint64_t v31 = v25;
          LOBYTE(v68) = 0;
          sub_236D1BC3C();
          uint64_t v32 = v57;
          sub_236DBA530();
          uint64_t v45 = v30;
          LOBYTE(v30) = v70;
          char v69 = 1;
          sub_236D1BCE4();
          sub_236DBA530();
          uint64_t v46 = v61;
          (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v32);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v31);
          uint64_t v49 = (uint64_t)v52;
          *uint64_t v52 = (_BYTE)v30;
          *(_OWORD *)(v49 + 8) = v68;
        }
        else
        {
          char v64 = (char *)v28;
          LOBYTE(v68) = 2;
          sub_236D1BBE8();
          uint64_t v40 = v27;
          sub_236DBA4E0();
          uint64_t v41 = v25;
          uint64_t v42 = sub_236DB9830();
          LOBYTE(v68) = 0;
          sub_236D1BD8C(&qword_2688D1638);
          uint64_t v43 = (uint64_t)v53;
          uint64_t v44 = v58;
          sub_236DBA530();
          uint64_t v62 = (char *)v42;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8);
          LOBYTE(v68) = 1;
          sub_236D1BC3C();
          sub_236DBA530();
          uint64_t v49 = v43;
          uint64_t v48 = v61;
          (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v41);
        }
      }
      else
      {
        LOBYTE(v68) = 0;
        sub_236D1BD38();
        uint64_t v37 = v24;
        sub_236DBA4E0();
        uint64_t v38 = v25;
        LOBYTE(v68) = 0;
        sub_236D1BC3C();
        uint64_t v39 = v55;
        sub_236DBA530();
        char v47 = v70;
        char v69 = 1;
        sub_236D1BCE4();
        sub_236DBA530();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v38);
        uint64_t v49 = (uint64_t)v51;
        *uint64_t v51 = v47;
        *(_OWORD *)(v49 + 8) = v68;
      }
      swift_storeEnumTagMultiPayload();
      sub_236D1B2C4(v49, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      sub_236D1B2C4((uint64_t)v21, v54, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
    }
    else
    {
      uint64_t v33 = sub_236DBA2E0();
      swift_allocError();
      uint64_t v35 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1628);
      *uint64_t v35 = v67;
      sub_236DBA4F0();
      sub_236DBA2D0();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v25);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);
}

BOOL sub_236D1A7FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_236D1A810()
{
  return sub_236DBA710();
}

uint64_t sub_236D1A858()
{
  return sub_236DBA710();
}

uint64_t sub_236D1A89C()
{
  uint64_t v1 = 0x657461647075;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574656C6564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6579297;
  }
}

uint64_t sub_236D1A8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D1C610(a1, a2);
  *a3 = result;
  return result;
}

void sub_236D1A910(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_236D1A91C(uint64_t a1)
{
  unint64_t v2 = sub_236D1BB94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D1A958(uint64_t a1)
{
  unint64_t v2 = sub_236D1BB94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_236D1A994(uint64_t a1)
{
  unint64_t v2 = sub_236D1BBE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D1A9D0(uint64_t a1)
{
  unint64_t v2 = sub_236D1BBE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_236D1AA0C(uint64_t a1)
{
  unint64_t v2 = sub_236D1BC90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D1AA48(uint64_t a1)
{
  unint64_t v2 = sub_236D1BC90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_236D1AA84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D19EB4(a1, a2);
}

uint64_t sub_236D1AA9C(void *a1)
{
  return sub_236D19764(a1);
}

uint64_t sub_236D1AAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for XPCModelStateChange();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v8 = *(uint64_t **)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D1B1FC(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v41 = v8;
      uint64_t v42 = v7;
      uint64_t v43 = a2;
      uint64_t v12 = *((void *)v6 + 1);
      unint64_t v13 = *((void *)v6 + 2);
      LOBYTE(v47[0]) = *v6;
      uint64_t v14 = HomesStore.ModelType.metaType.getter();
      uint64_t v16 = v15;
      uint64_t v17 = sub_236DBA090();
      uint64_t v40 = &v37;
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v20 = (char *)&v37 - v19;
      sub_236D7701C(v12, v13);
      uint64_t v38 = v18;
      unint64_t v39 = v13;
      uint64_t v37 = v17;
      uint64_t v32 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v20, 1, v14) == 1)
      {
        sub_236D1B264(a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
        sub_236D1B18C(v12, v39);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v37);
        uint64_t v8 = v41;
LABEL_11:
        uint64_t v31 = 1;
        uint64_t v7 = v42;
        a2 = v43;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[7])(a2, v31, 1, v7);
      }
      uint64_t v45 = v14;
      uint64_t v46 = v16;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v44);
      (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(boxed_opaque_existential_0, v20, v14);
      sub_236D1B18C(v12, v39);
      sub_236D1B264(a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      sub_236D1B1E4(&v44, (uint64_t)v47);
      sub_236D1B1E4(v47, (uint64_t)v10);
      uint64_t v7 = v42;
      swift_storeEnumTagMultiPayload();
      a2 = v43;
      uint64_t v8 = v41;
    }
    else
    {
      sub_236D1B264(a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      char v29 = v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8) + 48)];
      uint64_t v30 = sub_236DB9830();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v10, v6, v30);
      v10[*(int *)(type metadata accessor for AnyModelStateChange.Tombstone(0) + 20)] = v29;
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    uint64_t v42 = v7;
    uint64_t v43 = a2;
    uint64_t v21 = *((void *)v6 + 1);
    unint64_t v22 = *((void *)v6 + 2);
    LOBYTE(v47[0]) = *v6;
    uint64_t v23 = HomesStore.ModelType.metaType.getter();
    uint64_t v25 = v24;
    uint64_t v26 = sub_236DBA090();
    uint64_t v41 = &v37;
    uint64_t v40 = *(uint64_t **)(v26 - 8);
    MEMORY[0x270FA5388](v26);
    uint64_t v28 = (char *)&v37 - v27;
    sub_236D7701C(v21, v22);
    unint64_t v39 = v26;
    uint64_t v33 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v28, 1, v23) == 1)
    {
      sub_236D1B264(a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      sub_236D1B18C(v21, v22);
      ((void (*)(char *, unint64_t))v40[1])(v28, v39);
      goto LABEL_11;
    }
    uint64_t v45 = v23;
    uint64_t v46 = v25;
    uint64_t v36 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v44);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(v36, v28, v23);
    sub_236D1B18C(v21, v22);
    sub_236D1B264(a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
    sub_236D1B1E4(&v44, (uint64_t)v47);
    sub_236D1B1E4(v47, (uint64_t)v10);
    uint64_t v7 = v42;
    swift_storeEnumTagMultiPayload();
    a2 = v43;
  }
  sub_236D1B2C4((uint64_t)v10, a2, type metadata accessor for AnyModelStateChange);
  uint64_t v31 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8[7])(a2, v31, 1, v7);
}

uint64_t type metadata accessor for XPCModelStateChange()
{
  uint64_t result = qword_2688D15F0;
  if (!qword_2688D15F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_236D1B18C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_236D1B1E4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_236D1B1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D1B264(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236D1B2C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D1B32C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_236D1B3D4(uint64_t a1)
{
  return a1;
}

void *sub_236D1B428(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v9 = sub_236DB9830();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8);
      *((unsigned char *)a1 + *(int *)(v10 + 48)) = *((unsigned char *)a2 + *(int *)(v10 + 48));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = a2[1];
      unint64_t v6 = a2[2];
      sub_236D1B584(v7, v6);
      a1[1] = v7;
      a1[2] = v6;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_236D1B584(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_236D1B5DC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v5 = sub_236DB9830();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(a1, v5);
  }
  else if (result <= 1)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    unint64_t v4 = *(void *)(a1 + 16);
    return sub_236D1B18C(v3, v4);
  }
  return result;
}

uint64_t sub_236D1B684(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_236DB9830();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8);
    *(unsigned char *)(a1 + *(int *)(v7 + 48)) = *(unsigned char *)(a2 + *(int *)(v7 + 48));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    unint64_t v4 = *(void *)(a2 + 16);
    sub_236D1B584(v5, v4);
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v4;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_236D1B790(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_236D1B264(a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_236DB9830();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8);
      *(unsigned char *)(a1 + *(int *)(v7 + 48)) = *(unsigned char *)(a2 + *(int *)(v7 + 48));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      unint64_t v4 = *(void *)(a2 + 16);
      sub_236D1B584(v5, v4);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v4;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_236D1B8C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_236DB9830();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_236D1B990(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_236D1B264((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_236DB9830();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15E8);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyModelStateChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for AnyModelStateChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_236D1BADC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_236D1BAEC()
{
  uint64_t v3 = &unk_236DBD028;
  unint64_t v4 = &unk_236DBD028;
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_236D1BB94()
{
  unint64_t result = qword_2688D1620;
  if (!qword_2688D1620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1620);
  }
  return result;
}

unint64_t sub_236D1BBE8()
{
  unint64_t result = qword_2688D1630;
  if (!qword_2688D1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1630);
  }
  return result;
}

unint64_t sub_236D1BC3C()
{
  unint64_t result = qword_2688D1640;
  if (!qword_2688D1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1640);
  }
  return result;
}

unint64_t sub_236D1BC90()
{
  unint64_t result = qword_2688D1648;
  if (!qword_2688D1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1648);
  }
  return result;
}

unint64_t sub_236D1BCE4()
{
  unint64_t result = qword_2688D1650;
  if (!qword_2688D1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1650);
  }
  return result;
}

unint64_t sub_236D1BD38()
{
  unint64_t result = qword_2688D1658;
  if (!qword_2688D1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1658);
  }
  return result;
}

uint64_t sub_236D1BD8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_236DB9830();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236D1BDD0()
{
  unint64_t result = qword_2688D1688;
  if (!qword_2688D1688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1688);
  }
  return result;
}

unint64_t sub_236D1BE24()
{
  unint64_t result = qword_2688D1690;
  if (!qword_2688D1690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1690);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for XPCModelStateChange.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCModelStateChange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D1BFE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_236D1C008(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_236D1C010(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for XPCModelStateChange.CodingKeys()
{
  return &type metadata for XPCModelStateChange.CodingKeys;
}

unsigned char *sub_236D1C030(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for XPCModelStateChange.AddCodingKeys()
{
  return &type metadata for XPCModelStateChange.AddCodingKeys;
}

ValueMetadata *type metadata accessor for XPCModelStateChange.UpdateCodingKeys()
{
  return &type metadata for XPCModelStateChange.UpdateCodingKeys;
}

uint64_t _s4RoomV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11HomeKitCore19XPCModelStateChangeO13AddCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D1C1B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCModelStateChange.DeleteCodingKeys()
{
  return &type metadata for XPCModelStateChange.DeleteCodingKeys;
}

unint64_t sub_236D1C1F4()
{
  unint64_t result = qword_2688D1698;
  if (!qword_2688D1698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1698);
  }
  return result;
}

unint64_t sub_236D1C24C()
{
  unint64_t result = qword_2688D16A0;
  if (!qword_2688D16A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16A0);
  }
  return result;
}

unint64_t sub_236D1C2A4()
{
  unint64_t result = qword_2688D16A8;
  if (!qword_2688D16A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16A8);
  }
  return result;
}

unint64_t sub_236D1C2FC()
{
  unint64_t result = qword_2688D16B0;
  if (!qword_2688D16B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16B0);
  }
  return result;
}

unint64_t sub_236D1C354()
{
  unint64_t result = qword_2688D16B8;
  if (!qword_2688D16B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16B8);
  }
  return result;
}

unint64_t sub_236D1C3AC()
{
  unint64_t result = qword_2688D16C0;
  if (!qword_2688D16C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16C0);
  }
  return result;
}

unint64_t sub_236D1C404()
{
  unint64_t result = qword_2688D16C8;
  if (!qword_2688D16C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16C8);
  }
  return result;
}

unint64_t sub_236D1C45C()
{
  unint64_t result = qword_2688D16D0;
  if (!qword_2688D16D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16D0);
  }
  return result;
}

unint64_t sub_236D1C4B4()
{
  unint64_t result = qword_2688D16D8;
  if (!qword_2688D16D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16D8);
  }
  return result;
}

unint64_t sub_236D1C50C()
{
  unint64_t result = qword_2688D16E0;
  if (!qword_2688D16E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16E0);
  }
  return result;
}

unint64_t sub_236D1C564()
{
  unint64_t result = qword_2688D16E8;
  if (!qword_2688D16E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16E8);
  }
  return result;
}

unint64_t sub_236D1C5BC()
{
  unint64_t result = qword_2688D16F0;
  if (!qword_2688D16F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D16F0);
  }
  return result;
}

uint64_t sub_236D1C610(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579297 && a2 == 0xE300000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657461647075 && a2 == 0xE600000000000000 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656C6564 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_236D1C748(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236D1C824(int a1)
{
  int v48 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v45 = v1 - 8;
  uint64_t v52 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v1 - 8);
  char v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v42 - v5;
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17B8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17C0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v43 = v16;
  uint64_t v44 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F580], v12);
  sub_236DB9CA0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_236DB9820();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  unint64_t v22 = v50;
  v21(v50, v11, v6);
  unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v20;
  unint64_t v25 = v24 + v23;
  uint64_t v26 = v6;
  uint64_t v27 = (uint64_t)v46;
  uint64_t v51 = v7;
  uint64_t v28 = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v25, v22, v26);
  uint64_t v29 = v43;
  sub_236DB9CC0();
  uint64_t v30 = v44;
  uint64_t v49 = v28;
  v21((char *)v27, v28, v26);
  uint64_t v31 = v45;
  uint64_t v32 = v27 + *(int *)(v45 + 44);
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  uint64_t v50 = v19;
  v33(v32, v19, v29);
  uint64_t v34 = (uint64_t)v47;
  *(unsigned char *)(v27 + *(int *)(v31 + 48)) = v48 & 1;
  sub_236D26704(v27, v34, &qword_2688D17B0);
  uint64_t v35 = v42;
  uint64_t v36 = (unint64_t *)(v42 + 112);
  swift_beginAccess();
  unint64_t v37 = *(void *)(v35 + 112);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v35 + 112) = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v37 = sub_236D559DC(0, *(void *)(v37 + 16) + 1, 1, v37);
    *uint64_t v36 = v37;
  }
  unint64_t v40 = *(void *)(v37 + 16);
  unint64_t v39 = *(void *)(v37 + 24);
  if (v40 >= v39 >> 1)
  {
    unint64_t v37 = sub_236D559DC(v39 > 1, v40 + 1, 1, v37);
    *uint64_t v36 = v37;
  }
  *(void *)(v37 + 16) = v40 + 1;
  sub_236D26768(v34, v37+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v40, &qword_2688D17B0);
  swift_endAccess();
  sub_236D267CC(v27, &qword_2688D17B0);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v50, v29);
}

uint64_t sub_236D1CD48(int a1)
{
  int v48 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1938);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v46 = v1 - 8;
  uint64_t v52 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v1 - 8);
  char v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)&v42 - v5;
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1940);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1948);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v43 = v16;
  uint64_t v44 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F580], v12);
  sub_236DB9CA0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_236DB9820();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  unint64_t v22 = v50;
  v21(v50, v11, v6);
  unint64_t v23 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v20;
  unint64_t v25 = v24 + v23;
  uint64_t v26 = v6;
  uint64_t v27 = (uint64_t)v45;
  uint64_t v51 = v7;
  uint64_t v28 = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v25, v22, v26);
  uint64_t v29 = v43;
  sub_236DB9CC0();
  uint64_t v30 = v44;
  uint64_t v49 = v28;
  v21((char *)v27, v28, v26);
  uint64_t v31 = v46;
  uint64_t v32 = v27 + *(int *)(v46 + 44);
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  uint64_t v50 = v19;
  v33(v32, v19, v29);
  uint64_t v34 = (uint64_t)v47;
  *(unsigned char *)(v27 + *(int *)(v31 + 48)) = v48 & 1;
  sub_236D26704(v27, v34, &qword_2688D1938);
  uint64_t v35 = v42;
  uint64_t v36 = (unint64_t *)(v42 + 112);
  swift_beginAccess();
  unint64_t v37 = *(void *)(v35 + 112);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v35 + 112) = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v37 = sub_236D55F0C(0, *(void *)(v37 + 16) + 1, 1, v37);
    *uint64_t v36 = v37;
  }
  unint64_t v40 = *(void *)(v37 + 16);
  unint64_t v39 = *(void *)(v37 + 24);
  if (v40 >= v39 >> 1)
  {
    unint64_t v37 = sub_236D55F0C(v39 > 1, v40 + 1, 1, v37);
    *uint64_t v36 = v37;
  }
  *(void *)(v37 + 16) = v40 + 1;
  sub_236D26768(v34, v37+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v40, &qword_2688D1938);
  swift_endAccess();
  sub_236D267CC(v27, &qword_2688D1938);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v50, v29);
}

uint64_t sub_236D1D268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_236DB9830();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = sub_236DB9C90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
    unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v17 = (char *)swift_allocObject();
    *((void *)v17 + 2) = 0;
    *((void *)v17 + 3) = 0;
    *((void *)v17 + 4) = v14;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    sub_236D795C0((uint64_t)v12, a5, (uint64_t)v17);
    return swift_release();
  }
  return result;
}

uint64_t sub_236D1D45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_236D1D47C, a4, 0);
}

uint64_t sub_236D1D47C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  swift_beginAccess();
  uint64_t result = sub_236D235D4((uint64_t (*)(unint64_t))sub_236D26BEC, v3, &qword_2688D17B0, (uint64_t (*)(uint64_t))sub_236D243CC);
  uint64_t v5 = *(void *)(*(void *)(v2 + 112) + 16);
  if (v5 < result)
  {
    __break(1u);
  }
  else
  {
    sub_236D24474(result, v5, (uint64_t (*)(void))sub_236D559DC, &qword_2688D17B0);
    swift_endAccess();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  return result;
}

uint64_t sub_236D1D594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_236D1D5B4, a4, 0);
}

uint64_t sub_236D1D5B4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  swift_beginAccess();
  uint64_t result = sub_236D235D4((uint64_t (*)(unint64_t))sub_236D269E8, v3, &qword_2688D1938, (uint64_t (*)(uint64_t))sub_236D24460);
  uint64_t v5 = *(void *)(*(void *)(v2 + 112) + 16);
  if (v5 < result)
  {
    __break(1u);
  }
  else
  {
    sub_236D24474(result, v5, (uint64_t (*)(void))sub_236D55F0C, &qword_2688D1938);
    swift_endAccess();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  return result;
}

uint64_t sub_236D1D6CC()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D16F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D16F8);
  return sub_236DB9940();
}

void sub_236D1D750()
{
}

void sub_236D1D770()
{
}

uint64_t sub_236D1D7FC()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t _s3XPCCMa()
{
  return self;
}

uint64_t sub_236D1D868()
{
  uint64_t v1 = v0;
  if (qword_2688D1240 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_236DB9950();
  __swift_project_value_buffer(v2, (uint64_t)qword_2688D16F8);
  uint64_t v3 = sub_236DB9930();
  os_log_type_t v4 = sub_236DB9F30();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_236D14000, v3, v4, "Connection interrupted, cancelling subscriptions", v5, 2u);
    MEMORY[0x237E101A0](v5, -1, -1);
  }

  uint64_t result = swift_beginAccess();
  unint64_t v7 = *(void *)(v1 + 152);
  *(void *)(v1 + 152) = MEMORY[0x263F8EE78];
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_236DBA460();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8) {
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        MEMORY[0x237E0F570](v9, v7);
      }
      else {
        swift_retain();
      }
      ++v9;
      sub_236D23FB8();
      uint64_t v10 = (void *)swift_allocError();
      *uint64_t v11 = 0;
      id v12 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
      sub_236DB9D90();

      swift_release();
    }
    while (v8 != v9);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_236D1DA84(uint64_t a1)
{
  if (qword_2688D1240 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_236DB9950();
  __swift_project_value_buffer(v3, (uint64_t)qword_2688D16F8);
  swift_retain_n();
  os_log_type_t v4 = sub_236DB9930();
  os_log_type_t v5 = sub_236DB9F30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v14[0] = v7;
    sub_236DB9830();
    sub_236D260DC((unint64_t *)&qword_2688D1900, MEMORY[0x263F07508]);
    uint64_t v8 = sub_236DBA5C0();
    sub_236DB6880(v8, v9, v14);
    sub_236DBA0B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v4, v5, "Removing subscription %s after invalidation", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v7, -1, -1);
    MEMORY[0x237E101A0](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  swift_retain();
  uint64_t v10 = sub_236D24AEC((unint64_t *)(v1 + 152), a1);
  uint64_t result = swift_release();
  unint64_t v12 = *(void *)(v1 + 152);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_236DBA460();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13 >= v10) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13 >= v10)
    {
LABEL_8:
      sub_236D24E08(v10, v13);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_236D1DD2C(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  return MEMORY[0x270FA2498](sub_236D1DD50, v2, 0);
}

uint64_t sub_236D1DD50()
{
  if (qword_2688D1240 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_236DB9950();
  __swift_project_value_buffer(v1, (uint64_t)qword_2688D16F8);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_236DB9930();
  os_log_type_t v3 = sub_236DB9F30();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[14];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    v0[12] = *(void *)(v5 + 16);
    sub_236DBA0B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v2, v3, "Registering for model updates for %ld model types", v6, 0xCu);
    MEMORY[0x237E101A0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v7 = v0[14];
  sub_236D1B32C(v0[15] + 112, (uint64_t)(v0 + 2));
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v9 = swift_allocObject();
  v0[16] = v9;
  *(void *)(v9 + 16) = v7;
  uint64_t v10 = *v8;
  v0[17] = v10;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_236D1DF1C, v10, 0);
}

uint64_t sub_236D1DF1C()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = sub_236D260DC(&qword_2688D1760, (void (*)(uint64_t))type metadata accessor for XPCConnectionWrapper);
  BOOL v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  v4[2] = v1;
  v4[3] = &unk_2688D18B8;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18C0);
  *uint64_t v5 = v0;
  v5[1] = sub_236D1E078;
  return MEMORY[0x270FA2360](v0 + 10, v1, v3, 0xD000000000000019, 0x8000000236DBB510, sub_236D25DF0, v4, v6);
}

uint64_t sub_236D1E078()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    BOOL v4 = sub_236D1E30C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 120);
    swift_release();
    swift_task_dealloc();
    *(_OWORD *)(v2 + 168) = *(_OWORD *)(v2 + 80);
    BOOL v4 = sub_236D1E1B8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D1E1B8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = swift_retain();
  MEMORY[0x237E0EDD0](v2);
  if (*(void *)((*(void *)(v1 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_236DB9B80();
  uint64_t v3 = *(void *)(v0 + 120);
  long long v7 = *(_OWORD *)(v0 + 168);
  sub_236DB9BC0();
  sub_236DB9B50();
  swift_endAccess();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = v7;
  *(void *)(v4 + 32) = v3;
  type metadata accessor for AnyModelStateChange(0);
  swift_retain();
  sub_236DB9DD0();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_236D1E30C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D1E378, v1, 0);
}

uint64_t sub_236D1E378()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D1E3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918);
  v3[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[12] = v5;
  v3[13] = *(void *)(v5 + 64);
  v3[14] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1930);
  v3[15] = v6;
  v3[16] = *(void *)(v6 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  v3[18] = v7;
  v3[19] = *(void *)(v7 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  v3[21] = v8;
  v3[22] = *(void *)(v8 - 8);
  v3[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D1E5D8, 0, 0);
}

uint64_t sub_236D1E5D8()
{
  uint64_t v1 = v0[10];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_236D56428(0, v2, 0);
    uint64_t v3 = (unsigned __int8 *)(v1 + 32);
    unint64_t v4 = *(void *)(v30 + 16);
    do
    {
      unsigned int v6 = *v3++;
      uint64_t v5 = v6;
      unint64_t v7 = *(void *)(v30 + 24);
      if (v4 >= v7 >> 1) {
        sub_236D56428(v7 > 1, v4 + 1, 1);
      }
      *(void *)(v30 + 16) = v4 + 1;
      *(void *)(v30 + 8 * v4++ + 32) = v5;
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[20];
  uint64_t v23 = v0[22];
  uint64_t v24 = v0[21];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[15];
  uint64_t v27 = v0[14];
  uint64_t v28 = v0[13];
  uint64_t v21 = v0[12];
  uint64_t v22 = v0[18];
  uint64_t v25 = v0[9];
  uint64_t v26 = v0[11];
  id v29 = (id)v0[8];
  type metadata accessor for XPCSubscription();
  uint64_t v14 = swift_allocObject();
  sub_236DB9820();
  type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v12, *MEMORY[0x263F8F680], v13);
  sub_236DB9D70();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14 + OBJC_IVAR____TtC11HomeKitCore15XPCSubscription_continuation, v9, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v14 + OBJC_IVAR____TtC11HomeKitCore15XPCSubscription_changes, v8, v24);
  swift_retain();
  uint64_t v15 = (void *)sub_236DB9B20();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v27, v25, v26);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v17 + v16, v27, v26);
  *(void *)(v17 + ((v28 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  v0[6] = sub_236D264AC;
  v0[7] = v17;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_236D1EA28;
  v0[5] = &block_descriptor_122;
  uint64_t v18 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  objc_msgSend(v29, sel_registerObserver_modelTypes_completionHandler_, v14, v15, v18);
  _Block_release(v18);

  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_236D1E978(uint64_t a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918);
    return sub_236DB9C40();
  }
  if (!a1)
  {
    sub_236D23FB8();
    swift_allocError();
    *unint64_t v4 = 1;
    goto LABEL_3;
  }
  swift_unknownObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918);
  return sub_236DB9C50();
}

uint64_t sub_236D1EA28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_236D1EAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_236D1EACC, 0, 0);
}

uint64_t sub_236D1EACC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  *uint64_t v3 = v0;
  v3[1] = sub_236D1EBC8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  return MEMORY[0x270FA2338](v5, &unk_2688D18E0, v6, sub_236D25FDC, v2, 0, 0, v4);
}

uint64_t sub_236D1EBC8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D1ED04, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_236D1ED04()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D1ED68(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D1EE2C, 0, 0);
}

uint64_t sub_236D1EE2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  sub_236DB9D00();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D1EEF8;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return MEMORY[0x270FA2100](v3, v2);
}

uint64_t sub_236D1EEF8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D1F08C;
  }
  else {
    uint64_t v2 = sub_236D1F00C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D1F00C()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D1F08C()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D1F10C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2688D1240 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_236DB9950();
  __swift_project_value_buffer(v8, (uint64_t)qword_2688D16F8);
  uint64_t v9 = sub_236DB9930();
  os_log_type_t v10 = sub_236DB9F30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_236D14000, v9, v10, "Stream has been cancelled, cleaning up...", v11, 2u);
    MEMORY[0x237E101A0](v11, -1, -1);
  }

  objc_msgSend(a1, sel_cancel);
  uint64_t v12 = sub_236DB9C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  uint64_t v14[3] = 0;
  v14[4] = v13;
  v14[5] = a3;
  swift_retain();
  sub_236D795C0((uint64_t)v7, (uint64_t)&unk_2688D18F8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_236D1F30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_236D1F32C, 0, 0);
}

uint64_t sub_236D1F32C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_236D1F3E8, Strong, 0);
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_236D1F3E8()
{
  sub_236D1DA84(*(void *)(v0 + 48));
  return MEMORY[0x270FA2498](sub_236D1F450, 0, 0);
}

uint64_t sub_236D1F450()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D1F4B0()
{
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  v1[3] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1780);
  v1[4] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[5] = v3;
  v1[6] = *(void *)(v3 + 64);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D1F5BC, v0, 0);
}

uint64_t sub_236D1F5BC()
{
  uint64_t v1 = (void *)v0[2];
  if (v1[20])
  {
    sub_236D23FB8();
    swift_allocError();
    *uint64_t v2 = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v1 + 14, v1[17]);
    uint64_t v6 = *v5;
    v0[9] = *v5;
    return MEMORY[0x270FA2498](sub_236D1F6D4, v6, 0);
  }
}

uint64_t sub_236D1F6D4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 120);
  *(void *)(v0 + 80) = v1;
  return MEMORY[0x270FA2498](sub_236D1F6F8, v1, 0);
}

uint64_t sub_236D1F6F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_236D1C824(1);
  return MEMORY[0x270FA2498](sub_236D1F76C, v1, 0);
}

uint64_t sub_236D1F76C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v17 = v5;
  uint64_t v7 = v0[2];
  uint64_t v8 = sub_236DB9C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v12 = (v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v13 + v11, v10, v6);
  *(void *)(v13 + v12) = v9;
  uint64_t v14 = sub_236D795C0(v17, (uint64_t)&unk_2688D1798, v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v6);
  *(void *)(v7 + 160) = v14;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_236D1F940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A0);
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D1FA04, 0, 0);
}

uint64_t sub_236D1FA04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1780);
  sub_236DB9D00();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D1FAF8;
  uint64_t v2 = *(void *)(v0 + 56);
  return MEMORY[0x270FA1F68](v0 + 96, 0, 0, v2);
}

uint64_t sub_236D1FAF8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D1FBF4, 0, 0);
}

uint64_t sub_236D1FBF4()
{
  if ((*(unsigned char *)(v0 + 96) & 1) != 0 || (uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 88) = Strong) == 0))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_236D1FCC4, Strong, 0);
  }
}

uint64_t sub_236D1FCC4()
{
  sub_236D1D868();
  return MEMORY[0x270FA2498](sub_236D1FD2C, 0, 0);
}

uint64_t sub_236D1FD2C()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D1FAF8;
  uint64_t v2 = *(void *)(v0 + 56);
  return MEMORY[0x270FA1F68](v0 + 96, 0, 0, v2);
}

uint64_t sub_236D1FDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a2;
  v4[9] = a3;
  v4[7] = a1;
  return MEMORY[0x270FA2498](sub_236D1FE04, v3, 0);
}

uint64_t sub_236D1FE04()
{
  uint64_t v1 = (void (*)(void *))v0[8];
  v0[5] = &_s3XPCC5ProxyVN;
  v0[6] = &off_26E9FE160;
  v1(v0 + 2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_236D1FEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1888);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(void *)(v6 + 64);
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D1FF7C, 0, 0);
}

uint64_t sub_236D1FF7C()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = (void *)v0[8];
  uint64_t v5 = v0[9];
  (*(void (**)(uint64_t *__return_ptr))(v0[11] + 48))(&v12);
  uint64_t v6 = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v1, v2);
  v0[6] = sub_236D25CBC;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_236D2011C;
  v0[5] = &block_descriptor_80;
  uint64_t v9 = _Block_copy(v0 + 2);
  swift_release();
  objc_msgSend(v4, sel_fetchModelsWithType_completionHandler_, v6, v9);
  _Block_release(v9);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_236D2011C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_236DB9B30();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_236D201B4(uint64_t a1)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & v1;
  int64_t v45 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v51 = *MEMORY[0x263F081D0];
  uint64_t v52 = a1;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  id v6 = (void *)MEMORY[0x263F8EE78];
  if (v4) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v5++, 1))
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v5 < v45)
  {
    unint64_t v9 = *(void *)(v44 + 8 * v5);
    if (v9)
    {
LABEL_17:
      uint64_t v55 = (v9 - 1) & v9;
      for (unint64_t i = __clz(__rbit64(v9)) + (v5 << 6); ; unint64_t i = __clz(__rbit64(v4)) | (v5 << 6))
      {
        uint64_t v11 = 16 * i;
        uint64_t v12 = *(void *)(*(void *)(v52 + 48) + v11 + 8);
        uint64_t v13 = (uint64_t *)(*(void *)(v52 + 56) + v11);
        uint64_t v15 = *v13;
        unint64_t v14 = v13[1];
        id v16 = objc_allocWithZone(MEMORY[0x263F08928]);
        sub_236D1B584(v15, v14);
        sub_236D1B584(v15, v14);
        swift_bridgeObjectRetain();
        uint64_t v17 = (void *)sub_236DB9790();
        id v57 = 0;
        id v18 = objc_msgSend(v16, sel_initForReadingFromData_error_, v17, &v57);

        if (!v18) {
          break;
        }
        int64_t v54 = v5;
        id v19 = v57;
        sub_236D1B18C(v15, v14);
        sub_236DB9A10();
        sub_236D24728();
        uint64_t v20 = v56;
        sub_236DB9F80();
        uint64_t v56 = v20;
        if (v20)
        {
          swift_bridgeObjectRelease();

          goto LABEL_51;
        }

        swift_bridgeObjectRelease();
        if (v58 == 8)
        {
          long long v61 = 0u;
          long long v62 = 0u;
          uint64_t v63 = 0;
          swift_bridgeObjectRelease();
          sub_236D1B18C(v15, v14);
        }
        else
        {
          unint64_t v48 = v14;
          uint64_t v22 = v59;
          unint64_t v21 = v60;
          uint64_t v50 = v6;
          uint64_t v49 = v12;
          uint64_t v46 = v58;
          switch((char)v58)
          {
            case 1:
              uint64_t v53 = type metadata accessor for HomesStore.Room();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
              uint64_t v24 = (unint64_t *)&unk_2688D1820;
              break;
            case 2:
              uint64_t v53 = type metadata accessor for HomesStore.Home();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
              uint64_t v24 = (unint64_t *)&unk_2688D1818;
              break;
            case 3:
              uint64_t v53 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
              uint64_t v24 = (unint64_t *)&unk_2688D1810;
              break;
            case 4:
              uint64_t v53 = type metadata accessor for HomesStore.User();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
              uint64_t v24 = (unint64_t *)&unk_2688D1808;
              break;
            case 5:
              uint64_t v53 = type metadata accessor for HomesStore.Zone();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
              uint64_t v24 = (unint64_t *)&unk_2688D1800;
              break;
            case 6:
              uint64_t v53 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
              uint64_t v24 = (unint64_t *)&unk_2688D17F8;
              break;
            case 7:
              uint64_t v53 = type metadata accessor for HomesStore.User.SharedSettings();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
              uint64_t v24 = (unint64_t *)&unk_2688D17F0;
              break;
            default:
              uint64_t v53 = type metadata accessor for HomesStore.Accessory();
              uint64_t v23 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
              uint64_t v24 = (unint64_t *)&unk_2688D1828;
              break;
          }
          uint64_t v25 = sub_236D260DC(v24, v23);
          uint64_t v26 = sub_236DBA090();
          char v47 = &v43;
          uint64_t v27 = *(void *)(v26 - 8);
          MEMORY[0x270FA5388](v26);
          id v29 = (char *)&v43 - v28;
          sub_236D1B584(v22, v21);
          uint64_t v30 = v25;
          uint64_t v31 = v56;
          sub_236D7701C(v22, v21);
          uint64_t v56 = v31;
          if (v31)
          {
            uint64_t v41 = v46;
            sub_236D2477C(v46, v22, v21);
            sub_236D2477C(v41, v22, v21);
            swift_bridgeObjectRelease();
            sub_236D1B18C(v15, v48);
            id v6 = v50;
            swift_bridgeObjectRelease();
            swift_release();
            return v6;
          }
          uint64_t v32 = v46;
          sub_236D2477C(v46, v22, v21);
          uint64_t v33 = *(void *)(v53 - 8);
          if ((*(unsigned int (**)(char *, uint64_t))(v33 + 48))(v29, 1) == 1)
          {
            sub_236D2477C(v32, v22, v21);
            (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
            uint64_t v63 = 0;
            long long v61 = 0u;
            long long v62 = 0u;
          }
          else
          {
            uint64_t v34 = v53;
            *((void *)&v62 + 1) = v53;
            uint64_t v63 = v30;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v61);
            (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(boxed_opaque_existential_0, v29, v34);
            sub_236D2477C(v32, v22, v21);
          }
          swift_bridgeObjectRelease();
          sub_236D1B18C(v15, v48);
          id v6 = v50;
        }
        int64_t v5 = v54;
        if (*((void *)&v62 + 1))
        {
          sub_236D1B1E4(&v61, (uint64_t)v64);
          sub_236D1B1E4(v64, (uint64_t)&v61);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v6 = sub_236D559F0(0, v6[2] + 1, 1, v6);
          }
          unint64_t v37 = v6[2];
          unint64_t v36 = v6[3];
          if (v37 >= v36 >> 1) {
            id v6 = sub_236D559F0((void *)(v36 > 1), v37 + 1, 1, v6);
          }
          v6[2] = v37 + 1;
          sub_236D1B1E4(&v61, (uint64_t)&v6[5 * v37 + 4]);
          unint64_t v4 = v55;
          if (!v55) {
            goto LABEL_7;
          }
        }
        else
        {
          sub_236D267CC((uint64_t)&v61, &qword_2688D17E8);
          unint64_t v4 = v55;
          if (!v55) {
            goto LABEL_7;
          }
        }
LABEL_6:
        uint64_t v55 = (v4 - 1) & v4;
      }
      id v39 = v57;
      uint64_t v40 = sub_236DB9730();

      uint64_t v56 = v40;
      swift_willThrow();
      sub_236D1B18C(v15, v14);
LABEL_51:
      swift_bridgeObjectRelease();
      sub_236D1B18C(v15, v14);
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    int64_t v10 = v5 + 1;
    if (v5 + 1 < v45)
    {
      unint64_t v9 = *(void *)(v44 + 8 * v10);
      if (v9) {
        goto LABEL_16;
      }
      int64_t v10 = v5 + 2;
      if (v5 + 2 >= v45) {
        goto LABEL_52;
      }
      unint64_t v9 = *(void *)(v44 + 8 * v10);
      if (v9)
      {
LABEL_16:
        int64_t v5 = v10;
        goto LABEL_17;
      }
      int64_t v10 = v5 + 3;
      if (v5 + 3 < v45)
      {
        unint64_t v9 = *(void *)(v44 + 8 * v10);
        if (v9) {
          goto LABEL_16;
        }
        int64_t v38 = v5 + 4;
        if (v5 + 4 < v45)
        {
          unint64_t v9 = *(void *)(v44 + 8 * v38);
          v5 += 4;
          if (v9) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v5 = v38 + 1;
            if (__OFADD__(v38, 1)) {
              break;
            }
            if (v5 >= v45) {
              goto LABEL_52;
            }
            unint64_t v9 = *(void *)(v44 + 8 * v5);
            ++v38;
            if (v9) {
              goto LABEL_17;
            }
          }
LABEL_56:
          __break(1u);
        }
      }
    }
  }
LABEL_52:
  swift_release();
  return v6;
}

uint64_t sub_236D20AE4(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1748);
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D20BA8, v1, 0);
}

uint64_t sub_236D20BA8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(void *)(v1 + 160))
  {
    return MEMORY[0x270FA2498](sub_236D20DC4, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_236D20C78;
    return sub_236D1F4B0();
  }
}

uint64_t sub_236D20C78()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 112);
    return MEMORY[0x270FA2498](sub_236D20DC4, v6, 0);
  }
}

uint64_t sub_236D20DC4()
{
  uint64_t v1 = v0[13];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_236D56428(0, v2, 0);
    uint64_t v3 = v13;
    uint64_t v4 = (unsigned __int8 *)(v1 + 32);
    unint64_t v5 = *(void *)(v13 + 16);
    do
    {
      unsigned int v7 = *v4++;
      uint64_t v6 = v7;
      unint64_t v8 = *(void *)(v13 + 24);
      if (v5 >= v8 >> 1) {
        sub_236D56428(v8 > 1, v5 + 1, 1);
      }
      *(void *)(v13 + 16) = v5 + 1;
      *(void *)(v13 + 8 * v5++ + 32) = v6;
      --v2;
    }
    while (v2);
  }
  sub_236D1B32C(v0[14] + 112, (uint64_t)(v0 + 2));
  unint64_t v9 = __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v10 = swift_allocObject();
  v0[19] = v10;
  *(void *)(v10 + 16) = v3;
  uint64_t v11 = *v9;
  v0[20] = *v9;
  return MEMORY[0x270FA2498](sub_236D20F0C, v11, 0);
}

uint64_t sub_236D20F0C()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = sub_236D260DC(&qword_2688D1760, (void (*)(uint64_t))type metadata accessor for XPCConnectionWrapper);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  v4[2] = v1;
  v4[3] = &unk_2688D1758;
  v4[4] = v2;
  unint64_t v5 = (void *)swift_task_alloc();
  v0[22] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1768);
  *unint64_t v5 = v0;
  v5[1] = sub_236D21068;
  return MEMORY[0x270FA2360](v0 + 12, v1, v3, 0xD000000000000019, 0x8000000236DBB510, sub_236D23A10, v4, v6);
}

uint64_t sub_236D21068()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[20];
    uint64_t v4 = sub_236D21490;
  }
  else
  {
    uint64_t v5 = v2[14];
    swift_release();
    swift_task_dealloc();
    v2[24] = v2[12];
    uint64_t v4 = sub_236D211AC;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D211AC()
{
  unint64_t v21 = v0;
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  uint64_t v3 = sub_236D201B4(v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  int64_t v6 = v3[2];
  if (v6)
  {
    uint64_t v7 = v0[16];
    uint64_t v19 = v0[15];
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_236D56448(0, v6, 0);
    uint64_t v8 = v20;
    uint64_t v9 = (uint64_t)(v3 + 4);
    do
    {
      uint64_t v10 = v0[17];
      sub_236D1B32C(v9, (uint64_t)(v0 + 7));
      uint64_t v11 = v10 + *(int *)(v19 + 48);
      __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
      sub_236DBA280();
      sub_236D1B1E4((long long *)(v0 + 7), v11);
      uint64_t v20 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_236D56448(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v20;
      }
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_236D56448(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v20;
      }
      uint64_t v14 = v0[17];
      *(void *)(v8 + 16) = v13 + 1;
      sub_236D26768(v14, v8+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v13, &qword_2688D1748);
      v9 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 16)) {
      goto LABEL_13;
    }
LABEL_15:
    uint64_t v15 = MEMORY[0x263F8EE80];
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
    goto LABEL_15;
  }
LABEL_13:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1770);
  uint64_t v15 = sub_236DBA490();
LABEL_16:
  uint64_t v20 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_236D23A54(v16, 1, &v20);
  swift_bridgeObjectRelease();
  uint64_t v17 = v20;
  swift_task_dealloc();
  id v18 = (uint64_t (*)(uint64_t))v0[1];
  return v18(v17);
}

uint64_t sub_236D21490()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D214FC, v1, 0);
}

uint64_t sub_236D214FC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D21574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1830);
  v3[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[12] = v5;
  v3[13] = *(void *)(v5 + 64);
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D21644, 0, 0);
}

uint64_t sub_236D21644()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v5 = (void *)v0[8];
  int64_t v6 = (void *)sub_236DB9B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v1, v2);
  v0[6] = sub_236D24974;
  v0[7] = v8;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_236D21878;
  v0[5] = &block_descriptor_52;
  uint64_t v9 = _Block_copy(v0 + 2);
  swift_release();
  objc_msgSend(v5, sel_fetchModelsWithTypes_completionHandler_, v6, v9);
  _Block_release(v9);

  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_236D217D8(uint64_t a1, id a2, uint64_t a3, uint64_t *a4)
{
  if (a2)
  {
    id v5 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(a4);
    return sub_236DB9C40();
  }
  if (!a1)
  {
    sub_236D23FB8();
    swift_allocError();
    *unint64_t v7 = 1;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_236DB9C50();
}

uint64_t sub_236D21878(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_236DB9990();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_236D21920(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_236D21944, v2, 0);
}

uint64_t sub_236D21944()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (*(void *)(v1 + 160))
  {
    return MEMORY[0x270FA2498](sub_236D21B58, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_236D21A14;
    return sub_236D1F4B0();
  }
}

uint64_t sub_236D21A14()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 32);
    return MEMORY[0x270FA2498](sub_236D21B58, v6, 0);
  }
}

uint64_t sub_236D21B58()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[3];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_236D56478(0, v2, 0);
    uint64_t v3 = v12;
    uint64_t v4 = v1 + 40;
    do
    {
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 48))(&v13);
      char v5 = v13;
      unint64_t v7 = *(void *)(v12 + 16);
      unint64_t v6 = *(void *)(v12 + 24);
      if (v7 >= v6 >> 1) {
        sub_236D56478(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v12 + 16) = v7 + 1;
      *(unsigned char *)(v12 + v7 + 32) = v5;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  v0[6] = v3;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_236D21CCC;
  uint64_t v9 = v0[4];
  uint64_t v10 = v0[2];
  v8[14] = v3;
  v8[15] = v9;
  v8[13] = v10;
  return MEMORY[0x270FA2498](sub_236D1DD50, v9, 0);
}

uint64_t sub_236D21CCC()
{
  int64_t v2 = (void *)*v1;
  v2[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[4];
    return MEMORY[0x270FA2498](sub_236D21E08, v3, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_236D21E08()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D21E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_236D17ED0;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_236D21944, v6, 0);
}

uint64_t sub_236D21F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2688D1860 + dword_2688D1860);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *unint64_t v7 = v4;
  v7[1] = sub_236D26C0C;
  return v9(a3, a4);
}

uint64_t sub_236D21FE4()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2688D1858 + dword_2688D1858);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D220A0;
  return v3();
}

uint64_t sub_236D220A0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  char v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_236D221A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_236D26C0C;
  return sub_236D20AE4(a1);
}

uint64_t sub_236D22238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_236D26C08;
  v9[8] = a2;
  v9[9] = a3;
  v9[7] = a1;
  return MEMORY[0x270FA2498](sub_236D1FE04, v8, 0);
}

uint64_t sub_236D222FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a3;
  uint64_t v23 = a7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_236DB9C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  uint64_t v17 = sub_236D260DC(&qword_2688D1760, (void (*)(uint64_t))type metadata accessor for XPCConnectionWrapper);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = v17;
  *((void *)v19 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v18], (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v20 = &v19[(v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = a4;
  swift_retain_n();
  swift_retain();
  sub_236D795C0((uint64_t)v15, v23, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_236D22530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918);
  v7[18] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[19] = v10;
  v7[20] = *(void *)(v10 + 64);
  v7[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D22604, a4, 0);
}

uint64_t sub_236D22604()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[15], v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v2);
  uint64_t v7 = *(void **)(v4 + 112);
  if (v7)
  {
    id v8 = *(id *)(v4 + 112);
  }
  else
  {
    id v9 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v10 = (void *)sub_236DB9A00();
    id v11 = objc_msgSend(v9, sel_initWithMachServiceName_options_, v10, 4096);

    id v8 = v11;
    sub_236D6F448(v8);

    uint64_t v7 = 0;
  }
  v0[6] = sub_236D263F8;
  v0[7] = v6;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_236D2356C;
  v0[5] = &block_descriptor_115;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v7;
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v8, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);

  sub_236DBA0E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1848);
  if (swift_dynamicCast())
  {
    uint64_t v15 = (int *)v0[16];
    uint64_t v16 = v0[12];
    v0[22] = v16;
    swift_release();
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v15 + *v15);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[23] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_236D2296C;
    uint64_t v18 = v0[15];
    return v22(v16, v18);
  }
  else
  {
    sub_236D24914();
    uint64_t v20 = swift_allocError();
    swift_willThrow();
    swift_release();
    v0[13] = v20;
    sub_236DB9C40();
    swift_task_dealloc();
    unint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_236D2296C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_236D22B00;
  }
  else {
    uint64_t v4 = sub_236D22A98;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D22A98()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D22B00()
{
  swift_unknownObjectRelease();
  v0[13] = v0[24];
  sub_236DB9C40();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D22B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1888);
  v7[18] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[19] = v10;
  v7[20] = *(void *)(v10 + 64);
  v7[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D22C54, a4, 0);
}

uint64_t sub_236D22C54()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[15], v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v2);
  uint64_t v7 = *(void **)(v4 + 112);
  if (v7)
  {
    id v8 = *(id *)(v4 + 112);
  }
  else
  {
    id v9 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v10 = (void *)sub_236DB9A00();
    id v11 = objc_msgSend(v9, sel_initWithMachServiceName_options_, v10, 4096);

    id v8 = v11;
    sub_236D6F448(v8);

    uint64_t v7 = 0;
  }
  v0[6] = sub_236D25C30;
  v0[7] = v6;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_236D2356C;
  v0[5] = &block_descriptor_73;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v7;
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v8, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);

  sub_236DBA0E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1848);
  if (swift_dynamicCast())
  {
    uint64_t v15 = (int *)v0[16];
    uint64_t v16 = v0[12];
    v0[22] = v16;
    swift_release();
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v15 + *v15);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[23] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_236D22FBC;
    uint64_t v18 = v0[15];
    return v22(v16, v18);
  }
  else
  {
    sub_236D24914();
    uint64_t v20 = swift_allocError();
    swift_willThrow();
    swift_release();
    v0[13] = v20;
    sub_236DB9C40();
    swift_task_dealloc();
    unint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_236D22FBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_236D26BE8;
  }
  else {
    uint64_t v4 = sub_236D26C44;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D230E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1830);
  v7[18] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[19] = v10;
  v7[20] = *(void *)(v10 + 64);
  v7[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D231BC, a4, 0);
}

uint64_t sub_236D231BC()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[15], v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v2);
  uint64_t v7 = *(void **)(v4 + 112);
  if (v7)
  {
    id v8 = *(id *)(v4 + 112);
  }
  else
  {
    id v9 = objc_allocWithZone(MEMORY[0x263F08D68]);
    uint64_t v10 = (void *)sub_236DB9A00();
    id v11 = objc_msgSend(v9, sel_initWithMachServiceName_options_, v10, 4096);

    id v8 = v11;
    sub_236D6F448(v8);

    uint64_t v7 = 0;
  }
  v0[6] = sub_236D248F0;
  v0[7] = v6;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_236D2356C;
  v0[5] = &block_descriptor;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v7;
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v8, sel_remoteObjectProxyWithErrorHandler_, v12);
  _Block_release(v12);

  sub_236DBA0E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1848);
  if (swift_dynamicCast())
  {
    uint64_t v15 = (int *)v0[16];
    uint64_t v16 = v0[12];
    v0[22] = v16;
    swift_release();
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v15 + *v15);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[23] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_236D22FBC;
    uint64_t v18 = v0[15];
    return v22(v16, v18);
  }
  else
  {
    sub_236D24914();
    uint64_t v20 = swift_allocError();
    swift_willThrow();
    swift_release();
    v0[13] = v20;
    sub_236DB9C40();
    swift_task_dealloc();
    unint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_236D23524(void *a1, uint64_t a2, uint64_t *a3)
{
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_236DB9C40();
}

void sub_236D2356C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_236D235D4(uint64_t (*a1)(unint64_t), uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v43 = a1;
  uint64_t v41 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3) - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v39 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v38 = (uint64_t)&v35 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (uint64_t)&v35 - v14;
  uint64_t v15 = *v4;
  uint64_t v16 = *(void *)(*v4 + 16);
  if (!v16) {
    return 0;
  }
  unint64_t v36 = a4;
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  unint64_t v37 = v17;
  while (1)
  {
    char v20 = v43(v15 + v17);
    if (v5)
    {
      swift_bridgeObjectRelease();
      return v19;
    }
    if (v20) {
      break;
    }
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v19, 1))
  {
    unint64_t v22 = *(void *)(v15 + 16);
    if (v19 + 1 == v22) {
      return v19;
    }
    uint64_t v23 = v18 + v17;
    unint64_t v24 = v19 + 1;
    uint64_t v35 = v4;
    while (v24 < v22)
    {
      uint64_t v25 = v18;
      uint64_t v26 = v7;
      uint64_t v42 = v23;
      uint64_t v27 = v40;
      uint64_t v28 = v41;
      sub_236D26704(v15 + v23, v40, v41);
      char v29 = v43(v27);
      uint64_t result = sub_236D267CC(v27, v28);
      if (v29)
      {
        uint64_t v7 = v26;
        uint64_t v18 = v25;
      }
      else
      {
        uint64_t v7 = v26;
        uint64_t v18 = v25;
        if (v24 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          uint64_t v30 = *v26;
          unint64_t v31 = *(void *)(*v26 + 16);
          if (v19 >= v31) {
            goto LABEL_33;
          }
          uint64_t v32 = v41;
          uint64_t result = sub_236D26704(v30 + v37 + v19 * v25, v38, v41);
          if (v24 >= v31) {
            goto LABEL_34;
          }
          sub_236D26704(v30 + v42, v39, v32);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v7 = v35;
          *uint64_t v35 = v30;
          if ((result & 1) == 0)
          {
            uint64_t result = v36(v30);
            uint64_t v30 = result;
            *uint64_t v7 = result;
          }
          if (v19 >= *(void *)(v30 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_236D26A18(v39, v30 + v37 + v19 * v25, v32);
          if (v24 >= *(void *)(*v7 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_236D26A18(v38, *v7 + v42, v32);
        }
        if (__OFADD__(v19++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v34 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_30;
      }
      uint64_t v15 = *v7;
      unint64_t v22 = *(void *)(*v7 + 16);
      ++v24;
      uint64_t v23 = v42 + v18;
      if (v34 == v22) {
        return v19;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_236D2392C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236D23964(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_236D26C08;
  return sub_236D21574(a1, a2, v6);
}

uint64_t sub_236D23A10(uint64_t a1)
{
  return sub_236D222FC(a1, v1[2], v1[3], v1[4], &qword_2688D1830, (uint64_t)&unk_26E9FDD50, (uint64_t)&unk_2688D1840);
}

void sub_236D23A54(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_236DB9830();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1748);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v53 = v3;
  uint64_t v54 = v16;
  unint64_t v17 = (long long *)&v15[*(int *)(v12 + 48)];
  unint64_t v52 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v52;
  uint64_t v59 = *(void *)(v13 + 72);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  sub_236D26704(v18, (uint64_t)v15, &qword_2688D1748);
  uint64_t v55 = v8;
  unint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v60 = v7;
  long long v61 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v58 = v17;
  sub_236D1B1E4(v17, (uint64_t)v64);
  char v20 = (void *)*a3;
  unint64_t v22 = sub_236D8584C((uint64_t)v10);
  uint64_t v23 = v20[2];
  BOOL v24 = (v21 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24)) {
    goto LABEL_24;
  }
  char v26 = v21;
  if (v20[3] >= v25)
  {
    if (a2)
    {
      if (v21) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_236D95850();
      if (v26) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v31 = (void *)*a3;
    *(void *)(*a3 + 8 * (v22 >> 6) + 64) |= 1 << v22;
    uint64_t v32 = v31[6];
    uint64_t v57 = *(void *)(v55 + 72);
    uint64_t v33 = v60;
    v61(v32 + v57 * v22, v10, v60);
    sub_236D1B1E4(v64, v31[7] + 40 * v22);
    uint64_t v34 = v31[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v31[2] = v36;
    uint64_t v37 = v54 - 1;
    if (v54 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v38 = v56 + v59 + v52;
    while (1)
    {
      sub_236D26704(v38, (uint64_t)v15, &qword_2688D1748);
      v61((unint64_t)v10, v15, v33);
      sub_236D1B1E4(v58, (uint64_t)v64);
      uint64_t v39 = (void *)*a3;
      unint64_t v41 = sub_236D8584C((uint64_t)v10);
      uint64_t v42 = v39[2];
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43)) {
        break;
      }
      char v45 = v40;
      if (v39[3] < v44)
      {
        sub_236D96CEC(v44, 1);
        unint64_t v46 = sub_236D8584C((uint64_t)v10);
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_26;
        }
        unint64_t v41 = v46;
      }
      if (v45) {
        goto LABEL_10;
      }
      unint64_t v48 = (void *)*a3;
      *(void *)(*a3 + 8 * (v41 >> 6) + 64) |= 1 << v41;
      uint64_t v33 = v60;
      v61(v48[6] + v57 * v41, v10, v60);
      sub_236D1B1E4(v64, v48[7] + 40 * v41);
      uint64_t v49 = v48[2];
      BOOL v35 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (v35) {
        goto LABEL_25;
      }
      v48[2] = v50;
      v38 += v59;
      if (!--v37) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_236D96CEC(v25, a2 & 1);
  unint64_t v27 = sub_236D8584C((uint64_t)v10);
  if ((v26 & 1) == (v28 & 1))
  {
    unint64_t v22 = v27;
    if ((v26 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    char v29 = (void *)swift_allocError();
    swift_willThrow();
    id v65 = v29;
    id v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v60);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_236DBA650();
  __break(1u);
LABEL_27:
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DBA3F0();
  sub_236DB9A70();
  sub_236DBA450();
  __break(1u);
}

unint64_t sub_236D23FB8()
{
  unint64_t result = qword_2688D1788;
  if (!qword_2688D1788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2688D1788);
  }
  return result;
}

uint64_t sub_236D2400C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1780);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D240F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D1780) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_236D17ED0;
  return sub_236D1F940(a1, v6, v7, v8, v9);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_236D242C0(uint64_t a1)
{
  return sub_236D26684(a1, (uint64_t)&unk_26E9FDD28, (uint64_t)&unk_2688D17D0);
}

uint64_t sub_236D242E4()
{
  uint64_t v2 = *(void *)(sub_236DB9830() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *unint64_t v5 = v1;
  v5[1] = sub_236D26C08;
  v5[5] = v3;
  v5[6] = v4;
  return MEMORY[0x270FA2498](sub_236D1D47C, v3, 0);
}

uint64_t sub_236D243CC(unint64_t a1)
{
  return sub_236D559DC(0, *(void *)(a1 + 16), 0, a1);
}

void sub_236D243E4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x237E0F580);
}

uint64_t sub_236D24460(unint64_t a1)
{
  return sub_236D55F0C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_236D24474(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a4) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

id sub_236D24668()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_236DB9790();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_236DB9730();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_236D24728()
{
  unint64_t result = qword_2688D17E0;
  if (!qword_2688D17E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D17E0);
  }
  return result;
}

uint64_t sub_236D2477C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 8) {
    return sub_236D1B18C(a2, a3);
  }
  return result;
}

uint64_t sub_236D24798()
{
  return objectdestroy_40Tm(&qword_2688D1830);
}

uint64_t sub_236D247A4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D1830) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_236D26C08;
  return sub_236D230E8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_236D248E4()
{
  return objectdestroy_44Tm(&qword_2688D1830);
}

uint64_t sub_236D248F0(void *a1)
{
  return sub_236D25C3C(a1, &qword_2688D1830);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_236D24914()
{
  unint64_t result = qword_2688D1850;
  if (!qword_2688D1850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1850);
  }
  return result;
}

uint64_t sub_236D24968()
{
  return objectdestroy_44Tm(&qword_2688D1830);
}

uint64_t sub_236D24974(uint64_t a1, void *a2)
{
  return sub_236D25CC8(a1, a2, &qword_2688D1830);
}

void sub_236D24980()
{
}

uint64_t sub_236D249FC(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x237E0F570](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_236D24AEC(unint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_236D249FC(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_236DBA460();
      swift_bridgeObjectRelease();
      if (v9 != v24) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        unint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0) {
          break;
        }
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        if (*(void *)(v12 + 8 * i) != a2) {
          goto LABEL_11;
        }
LABEL_31:
        unint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_236DBA460();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v20 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v20) {
          return v6;
        }
      }
      uint64_t v21 = MEMORY[0x237E0F570](i - 4);
      swift_unknownObjectRelease();
      if (v21 == a2) {
        goto LABEL_31;
      }
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_31;
      }
      unint64_t v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = MEMORY[0x237E0F570](v6, *a1);
        unint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v14 = *(void *)(v9 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)(v9 + 8 * v6 + 32);
        swift_retain();
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_16;
        }
      }
      uint64_t v14 = MEMORY[0x237E0F570](i - 4, v9);
      unint64_t v9 = *a1;
LABEL_19:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        sub_236D243E4(v9);
        unint64_t v9 = v16;
        *a1 = v16;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      sub_236DB9B50();
      unint64_t v9 = *a1;
      int v17 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v17 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
      {
        sub_236D243E4(v9);
        unint64_t v9 = v18;
        *a1 = v18;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      sub_236DB9B50();
      goto LABEL_30;
    }
    return v6;
  }
  unint64_t v22 = *a1;
  if (!(v22 >> 62)) {
    return *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_236DBA460();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_236D24E08(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_236DBA460();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_236DBA460();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_236DBA460();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x237E0F580](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *id v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for XPCSubscription();
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_236DBA460();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_236DBA4A0();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_236DBA460();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_236DB9B50();
}

uint64_t sub_236D250E8(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  return MEMORY[0x270FA2498](sub_236D2510C, v2, 0);
}

uint64_t sub_236D2510C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if (*(void *)(v1 + 160))
  {
    return MEMORY[0x270FA2498](sub_236D25320, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_236D251DC;
    return sub_236D1F4B0();
  }
}

uint64_t sub_236D251DC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 88);
    return MEMORY[0x270FA2498](sub_236D25320, v6, 0);
  }
}

uint64_t sub_236D25320()
{
  long long v5 = *(_OWORD *)(v0 + 72);
  sub_236D1B32C(*(void *)(v0 + 88) + 112, v0 + 16);
  uint64_t v1 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  uint64_t v3 = *v1;
  *(void *)(v0 + 112) = *v1;
  return MEMORY[0x270FA2498](sub_236D253D0, v3, 0);
}

uint64_t sub_236D253D0()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = sub_236D260DC(&qword_2688D1760, (void (*)(uint64_t))type metadata accessor for XPCConnectionWrapper);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15] = v4;
  v4[2] = v1;
  v4[3] = &unk_2688D1870;
  v4[4] = v2;
  long long v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1878);
  v0[17] = v6;
  *long long v5 = v0;
  v5[1] = sub_236D25530;
  return MEMORY[0x270FA2360](v0 + 7, v1, v3, 0xD000000000000019, 0x8000000236DBB510, sub_236D259BC, v4, v6);
}

uint64_t sub_236D25530()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[14];
    uint64_t v4 = sub_236D25768;
  }
  else
  {
    uint64_t v5 = v2[11];
    swift_release();
    swift_task_dealloc();
    v2[19] = v2[7];
    uint64_t v4 = sub_236D25674;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D25674()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  long long v7 = *(_OWORD *)(v0 + 72);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  *(void *)(v0 + 64) = v2;
  *(_OWORD *)(swift_task_alloc() + 16) = v7;
  sub_236D25A34();
  uint64_t v3 = sub_236DB9AD0();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  if (!v1) {
    uint64_t v4 = v3;
  }
  return v5(v4);
}

uint64_t sub_236D25768()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D257D4, v1, 0);
}

uint64_t sub_236D257D4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D25844()
{
  return MEMORY[0x270FA2498](sub_236D25860, v0, 0);
}

uint64_t sub_236D25860()
{
  return sub_236DBA450();
}

uint64_t sub_236D258FC()
{
  return swift_deallocObject();
}

uint64_t sub_236D2590C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_236D17ED0;
  return sub_236D1FEAC(a1, a2, v7, v6);
}

uint64_t sub_236D259BC(uint64_t a1)
{
  return sub_236D222FC(a1, v1[2], v1[3], v1[4], &qword_2688D1888, (uint64_t)&unk_26E9FDE40, (uint64_t)&unk_2688D1898);
}

uint64_t sub_236D25A00(uint64_t a1)
{
  return sub_236D7701C(*(void *)a1, *(void *)(a1 + 8));
}

unint64_t sub_236D25A34()
{
  unint64_t result = qword_2688D1880;
  if (!qword_2688D1880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D1878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1880);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_236D25AD8()
{
  return objectdestroy_40Tm(&qword_2688D1888);
}

uint64_t sub_236D25AE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D1888) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_236D26C08;
  return sub_236D22B80(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_236D25C24()
{
  return objectdestroy_44Tm(&qword_2688D1888);
}

uint64_t sub_236D25C30(void *a1)
{
  return sub_236D25C3C(a1, &qword_2688D1888);
}

uint64_t sub_236D25C3C(void *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_236D23524(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_236D25CB0()
{
  return objectdestroy_44Tm(&qword_2688D1888);
}

uint64_t sub_236D25CBC(uint64_t a1, void *a2)
{
  return sub_236D25CC8(a1, a2, &qword_2688D1888);
}

uint64_t sub_236D25CC8(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  return sub_236D217D8(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3);
}

uint64_t sub_236D25D44(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_236D26C08;
  return sub_236D1E3E8(a1, a2, v6);
}

uint64_t sub_236D25DF0(uint64_t a1)
{
  return sub_236D222FC(a1, v1[2], v1[3], v1[4], &qword_2688D1918, (uint64_t)&unk_26E9FDF80, (uint64_t)&unk_2688D1928);
}

uint64_t sub_236D25E34()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D25E7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_236D26C08;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x270FA2498](sub_236D1EACC, 0, 0);
}

uint64_t sub_236D25F40(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_236D26C08;
  return sub_236D1ED68(a1, v1);
}

uint64_t sub_236D25FDC()
{
  return sub_236D1F10C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_236D25FE8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D26030()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_236D26C08;
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_236D1F32C, 0, 0);
}

uint64_t sub_236D260DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D26124()
{
  return objectdestroy_40Tm(&qword_2688D1918);
}

uint64_t objectdestroy_40Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D26220(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_236D26C08;
  return sub_236D22530(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_236D26360()
{
  return objectdestroy_44Tm(&qword_2688D1918);
}

uint64_t objectdestroy_44Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_236D263F8(void *a1)
{
  return sub_236D25C3C(a1, &qword_2688D1918);
}

uint64_t sub_236D26404()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D264AC(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1918);
  return sub_236D1E978(a1, a2);
}

uint64_t sub_236D2655C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v1 = sub_236DB9830();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D26664(uint64_t a1)
{
  return sub_236D26684(a1, (uint64_t)&unk_26E9FE098, (uint64_t)&unk_2688D1958);
}

uint64_t sub_236D26684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_236DB9830() - 8);
  return sub_236D1D268(a1, *(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t sub_236D26704(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D26768(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D267CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_36Tm()
{
  uint64_t v1 = sub_236DB9830();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D26900()
{
  uint64_t v2 = *(void *)(sub_236DB9830() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_236D26C08;
  v5[5] = v3;
  v5[6] = v4;
  return MEMORY[0x270FA2498](sub_236D1D5B4, v3, 0);
}

uint64_t sub_236D269E8()
{
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1;
}

uint64_t sub_236D26A18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unsigned char *_s3XPCC5ErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D26B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3XPCC5ErrorOMa()
{
  return &_s3XPCC5ErrorON;
}

ValueMetadata *_s3XPCC5ProxyVMa()
{
  return &_s3XPCC5ProxyVN;
}

unint64_t sub_236D26B94()
{
  unint64_t result = qword_2688D1960;
  if (!qword_2688D1960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1960);
  }
  return result;
}

uint64_t sub_236D26BEC()
{
  return sub_236D269E8() & 1;
}

uint64_t sub_236D26C48()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D1968);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D1968);
  return sub_236DB9940();
}

id sub_236D26DE0()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_2688D1248 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_236DB9950();
  __swift_project_value_buffer(v3, (uint64_t)qword_2688D1968);
  unsigned int v4 = sub_236DB9930();
  os_log_type_t v5 = sub_236DB9F30();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl(&dword_236D14000, v4, v5, "Publisher deinit", v6, 2u);
    MEMORY[0x237E101A0](v6, -1, -1);
  }

  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

uint64_t type metadata accessor for XPCPublisher()
{
  return self;
}

uint64_t sub_236D27064(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v8 << 6))
  {
    uint64_t v12 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v13 = v12;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v25 = v9;
      id v17 = objc_msgSend(v13, sel_name);
      uint64_t v18 = sub_236DB9A10();
      uint64_t v23 = v19;
      uint64_t v24 = v18;

      swift_bridgeObjectRelease();
      uint64_t v9 = v25;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_236D55B14(0, v25[2] + 1, 1, v25);
        uint64_t v9 = (void *)result;
      }
      unint64_t v21 = v9[2];
      unint64_t v20 = v9[3];
      if (v21 >= v20 >> 1)
      {
        uint64_t result = (uint64_t)sub_236D55B14((void *)(v20 > 1), v21 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v21 + 1;
      unint64_t v22 = &v9[2 * v21];
      v22[4] = v24;
      v22[5] = v23;
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {

      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v6) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v15 = *(void *)(v2 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t static HomesStore.CoreData.CLIController.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t HomesStore.CoreData.CLIController.Error.hash(into:)()
{
  return sub_236DBA6F0();
}

uint64_t HomesStore.CoreData.CLIController.Error.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t sub_236D27330()
{
  return 1;
}

uint64_t sub_236D27338()
{
  return sub_236DBA710();
}

uint64_t sub_236D2737C()
{
  return sub_236DBA6F0();
}

uint64_t sub_236D273A4()
{
  return sub_236DBA710();
}

uint64_t HomesStore.CoreData.CLIController.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t HomesStore.CoreData.CLIController.Options.rawValue.getter()
{
  return *(void *)v0;
}

void static HomesStore.CoreData.CLIController.Options.faultObjects.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static HomesStore.CoreData.CLIController.Options.prefetchRelationships.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void *sub_236D2740C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_236D27418(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_236D27420@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_236D27434@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_236D27448@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_236D2745C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_236D2748C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_236D274B8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_236D274DC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_236D274F0(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_236D27504(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_236D27518@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_236D2752C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_236D27540(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_236D27554(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_236D27568()
{
  return *v0 == 0;
}

uint64_t sub_236D27578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_236D27590(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_236D275A4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_236D275B4(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_236D275C0(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_236D275D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t HomesStore.CoreData.CLIController.__allocating_init()()
{
  uint64_t v0 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  uint64_t v1 = v0 - 8;
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = swift_allocObject();
  *uint64_t v3 = 0x746C7561666544;
  v3[1] = 0xE700000000000000;
  sub_236D80FB0((uint64_t)v3 + *(int *)(v1 + 28));
  uint64_t v5 = (void *)((char *)v3 + *(int *)(v1 + 32));
  *uint64_t v5 = 0xD00000000000001ELL;
  v5[1] = 0x8000000236DBB820;
  type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  swift_storeEnumTagMultiPayload();
  *(void *)(v4 + 16) = _s11HomeKitCore10HomesStoreC0C4DataO19PersistentContainerC13configurationAgE13ConfigurationV_tcfC_0((uint64_t)v3);
  return v4;
}

uint64_t HomesStore.CoreData.CLIController.init()()
{
  uint64_t v1 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v4 = 0x746C7561666544;
  v4[1] = 0xE700000000000000;
  sub_236D80FB0((uint64_t)v4 + *(int *)(v2 + 28));
  uint64_t v5 = (void *)((char *)v4 + *(int *)(v2 + 32));
  *uint64_t v5 = 0xD00000000000001ELL;
  v5[1] = 0x8000000236DBB820;
  type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 16) = _s11HomeKitCore10HomesStoreC0C4DataO19PersistentContainerC13configurationAgE13ConfigurationV_tcfC_0((uint64_t)v4);
  return v0;
}

uint64_t sub_236D27804()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_236D27824, 0, 0);
}

uint64_t sub_236D27824()
{
  v0[3] = *(void *)(v0[2] + 16);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_2688D1A58 + dword_2688D1A58);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D278F8;
  return v3();
}

uint64_t sub_236D278F8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_236D27A40;
  }
  else {
    uint64_t v2 = sub_236D27A28;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D27A28()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236D27A40()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_236D27A58(void *a1)
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for HMCDHomeModel();
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  sub_236DB4678();
  type metadata accessor for HMCDAccessoryModel();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  sub_236DB4678();
  type metadata accessor for HMCDRoomModel();
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  sub_236DB4678();
  objc_msgSend(v3, sel_setHome_, v2);
  objc_msgSend(v3, sel_setRoom_, v4);
  type metadata accessor for HMCDHomesTopologyModel();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(ObjCClassFromMetadata, sel_entityName);
  sub_236DB9A10();

  id v7 = objc_allocWithZone(MEMORY[0x263EFF260]);
  int64_t v8 = (void *)sub_236DB9A00();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  unint64_t v10 = sub_236DB9FF0();
  if (v17)
  {

    return;
  }
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_236DBA460();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v10 & 0xC000000000000001) != 0)
    {
      id v11 = (id)MEMORY[0x237E0F570](0, v10);
    }
    else
    {
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        __break(1u);
      }
      id v11 = *(id *)(v10 + 32);
    }
    id v12 = v11;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(objc_allocWithZone((Class)ObjCClassFromMetadata), sel_initWithContext_, a1);
LABEL_11:
  objc_msgSend(v12, sel_addHomesObject_, v2);
  id v14 = v12;
  sub_236DB4678();

  v18[0] = 0;
  if (objc_msgSend(a1, sel_save_, v18))
  {
    id v15 = v18[0];
  }
  else
  {
    id v16 = v18[0];
    sub_236DB9730();

    swift_willThrow();
  }
}

uint64_t sub_236D27D4C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  uint64_t v8 = *a3;
  v7[8] = *v6;
  v7[9] = v8;
  return MEMORY[0x270FA2498](sub_236D27DA0, 0, 0);
}

uint64_t sub_236D27DA0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  id v7 = (void *)swift_allocObject();
  v0[10] = v7;
  v7[2] = v4;
  v7[3] = v5;
  v7[4] = v1;
  v7[5] = v6;
  v7[6] = v3;
  v7[7] = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = swift_task_alloc();
  v0[11] = v8;
  *(void *)uint64_t v8 = v0;
  *(void *)(v8 + 8) = sub_236D27EC8;
  uint64_t v9 = v0[2];
  *(_OWORD *)(v8 + 48) = *((_OWORD *)v0 + 3);
  *(void *)(v8 + 32) = sub_236D28B80;
  *(void *)(v8 + 40) = v7;
  *(void *)(v8 + 24) = v9;
  return MEMORY[0x270FA2498](sub_236D283D4, 0, 0);
}

uint64_t sub_236D27EC8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D28004, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_236D28004()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D28068(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v6 = a4;
  unint64_t v7 = MEMORY[0x263F8EE78];
  unint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    id v12 = (uint64_t *)(a2 + 40);
    uint64_t v13 = a3;
    while (1)
    {
      uint64_t v14 = *(v12 - 1);
      uint64_t v15 = *v12;
      swift_bridgeObjectRetain_n();
      if ((v13 & 2) == 0) {
        goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      id v16 = objc_msgSend(a1, sel_persistentStoreCoordinator);
      if (v16)
      {
        uint64_t v17 = v16;
        id v18 = objc_msgSend(v16, sel_managedObjectModel);

        id v19 = objc_msgSend(v18, sel_entitiesByName);
        sub_236D291DC(0, (unint64_t *)&qword_2688D1AB0);
        uint64_t v20 = sub_236DB9990();

        if (*(void *)(v20 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v21 = sub_236D85920(v14, v15);
          if (v22)
          {
            id v31 = *(id *)(*(void *)(v20 + 56) + 8 * v21);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v23 = objc_msgSend(v31, sel_relationshipsByName);
            sub_236D291DC(0, (unint64_t *)&qword_2688D1AB8);
            uint64_t v24 = v13;
            uint64_t v25 = sub_236DB9990();

            sub_236D27064(v25);
            swift_bridgeObjectRelease();
            uint64_t v13 = v24;
            swift_bridgeObjectRelease();

            goto LABEL_12;
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_236D3CBB4();
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      unint64_t v27 = v26;
      v12 += 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_236D5AF40(v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        unint64_t v7 = v32;
        uint64_t v6 = a4;
        break;
      }
    }
  }
  uint64_t v28 = sub_236DB54A8(v7);
  swift_bridgeObjectRelease();
  v6(v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D283AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x270FA2498](sub_236D283D4, 0, 0);
}

uint64_t sub_236D283D4()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  v0[2] = *(void *)(v0[7] + 16);
  uint64_t v4 = (void *)swift_allocObject();
  v0[8] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  swift_retain();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  uint64_t v6 = type metadata accessor for HomesStore.CoreData.PersistentContainer();
  unint64_t v7 = sub_236D29184();
  *uint64_t v5 = v0;
  v5[1] = sub_236D284F8;
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[3];
  return sub_236D867E8(v9, (uint64_t)sub_236D29158, (uint64_t)v4, v6, v8, v7);
}

uint64_t sub_236D284F8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D2865C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_236D2865C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236D28674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_236DB9FE0();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D28738, 0, 0);
}

uint64_t sub_236D28738()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v7 = *(void **)(v4 + 32);
  v0[9] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[10] = v8;
  v8[2] = v6;
  v8[3] = v5;
  v8[4] = v4;
  uint64_t v9 = *MEMORY[0x263EFEFA8];
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  v7;
  swift_retain();
  swift_retain();
  v10(v1, v9, v3);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[11] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_236D28894;
  uint64_t v12 = v0[8];
  uint64_t v13 = v0[2];
  uint64_t v14 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270EE4240](v13, v12, sub_236D29258, v8, v14);
}

uint64_t sub_236D28894()
{
  uint64_t v2 = *(void *)(*v1 + 64);
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *v1;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D28A54, 0, 0);
  }
  else
  {

    swift_release();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_236D28A54()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t HomesStore.CoreData.CLIController.deinit()
{
  swift_release();
  return v0;
}

uint64_t HomesStore.CoreData.CLIController.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

void sub_236D28B24(void **a1)
{
}

uint64_t sub_236D28B40()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D28B80(void *a1)
{
  return sub_236D28068(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40));
}

unint64_t sub_236D28BA8()
{
  unint64_t result = qword_2688D1A70;
  if (!qword_2688D1A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1A70);
  }
  return result;
}

unint64_t sub_236D28C00()
{
  unint64_t result = qword_2688D1A78;
  if (!qword_2688D1A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1A78);
  }
  return result;
}

unint64_t sub_236D28C58()
{
  unint64_t result = qword_2688D1A80;
  if (!qword_2688D1A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1A80);
  }
  return result;
}

unint64_t sub_236D28CB0()
{
  unint64_t result = qword_2688D1A88;
  if (!qword_2688D1A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1A88);
  }
  return result;
}

unint64_t sub_236D28D08()
{
  unint64_t result = qword_2688D1A90;
  if (!qword_2688D1A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1A90);
  }
  return result;
}

uint64_t type metadata accessor for HomesStore.CoreData.CLIController()
{
  return self;
}

uint64_t method lookup function for HomesStore.CoreData.CLIController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HomesStore.CoreData.CLIController);
}

uint64_t dispatch thunk of HomesStore.CoreData.CLIController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of HomesStore.CoreData.CLIController.saveRandomModels()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 96) + **(int **)(*(void *)v0 + 96));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_236D17ED0;
  return v4();
}

uint64_t dispatch thunk of HomesStore.CoreData.CLIController.withManagedObjects<A>(matchingEntityNames:options:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 104)
                                                                                     + **(int **)(*(void *)v6 + 104));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  void *v14 = v7;
  v14[1] = sub_236D26C08;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t _s13CLIControllerC5ErrorOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s13CLIControllerC5ErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x236D290D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_236D290F8()
{
  return 0;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.CLIController.Error()
{
  return &type metadata for HomesStore.CoreData.CLIController.Error;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.CLIController.Options()
{
  return &type metadata for HomesStore.CoreData.CLIController.Options;
}

uint64_t sub_236D29120()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D29158(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1);
}

unint64_t sub_236D29184()
{
  unint64_t result = qword_2688D1AA8;
  if (!qword_2688D1AA8)
  {
    type metadata accessor for HomesStore.CoreData.PersistentContainer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AA8);
  }
  return result;
}

uint64_t sub_236D291DC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_236D29218()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_236D29258()
{
  uint64_t v1 = *(void (**)(id *))(v0 + 16);
  id v3 = *(id *)(*(void *)(v0 + 32) + 32);
  id v2 = v3;
  v1(&v3);
}

uint64_t static HomesStoreComposableModelDataSourceError.== infix(_:_:)()
{
  return 1;
}

uint64_t HomesStoreComposableModelDataSourceError.hash(into:)()
{
  return sub_236DBA6F0();
}

uint64_t HomesStoreComposableModelDataSourceError.hashValue.getter()
{
  return sub_236DBA710();
}

unint64_t sub_236D2934C()
{
  unint64_t result = qword_2688D1AC0;
  if (!qword_2688D1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HomesStoreComposableModelDataSourceError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x236D2943CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomesStoreComposableModelDataSourceError()
{
  return &type metadata for HomesStoreComposableModelDataSourceError;
}

uint64_t dispatch thunk of HomesStoreComposableModelDataSource.fetchModels<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of HomesStoreComposableModelDataSource.fetchModels<A>(_:where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

{
  return (*(uint64_t (**)(void))(a6 + 72))();
}

uint64_t dispatch thunk of HomesStoreComposableModelDataSource.fetchModels<A, B>(_:as:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t dispatch thunk of HomesStoreComposableModelDataSource.fetchModels<A, B>(_:as:where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 104))();
}

{
  return (*(uint64_t (**)(void))(a8 + 112))();
}

{
  return (*(uint64_t (**)(void))(a8 + 120))();
}

uint64_t HomesStore.ModelType.metaType.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t v1 = type metadata accessor for HomesStore.Room();
      id v2 = &qword_2688D1820;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
      break;
    case 2:
      uint64_t v1 = type metadata accessor for HomesStore.Home();
      id v2 = (unint64_t *)&unk_2688D1818;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
      break;
    case 3:
      uint64_t v1 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
      id v2 = (unint64_t *)&unk_2688D1810;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
      break;
    case 4:
      uint64_t v1 = type metadata accessor for HomesStore.User();
      id v2 = &qword_2688D1808;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
      break;
    case 5:
      uint64_t v1 = type metadata accessor for HomesStore.Zone();
      id v2 = (unint64_t *)&unk_2688D1800;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
      break;
    case 6:
      uint64_t v1 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
      id v2 = &qword_2688D17F8;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
      break;
    case 7:
      uint64_t v1 = type metadata accessor for HomesStore.User.SharedSettings();
      id v2 = (unint64_t *)&unk_2688D17F0;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
      break;
    default:
      uint64_t v1 = type metadata accessor for HomesStore.Accessory();
      id v2 = &qword_2688D1828;
      int v3 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
      break;
  }
  sub_236D29FBC(v2, v3);
  return v1;
}

uint64_t HomesStore.ModelType.rawValue.getter()
{
  return *v0;
}

unint64_t HomesStore.ModelType.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 8;
  if (result < 8) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

void *static HomesStore.ModelType.allCases.getter()
{
  return &unk_26E9FD5F0;
}

unint64_t sub_236D298C8@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return HomesStore.ModelType.init(rawValue:)(*a1, a2);
}

void sub_236D298D0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_236D298DC()
{
  return sub_236DB9B00();
}

uint64_t sub_236D2993C()
{
  return sub_236DB9AF0();
}

void sub_236D2998C(void *a1@<X8>)
{
  *a1 = &unk_26E9FD5F0;
}

unint64_t HomesStore.ModelType.description.getter()
{
  unint64_t result = 0x726F737365636341;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1836019538;
      break;
    case 2:
      unint64_t result = 1701670728;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 1919251285;
      break;
    case 5:
      unint64_t result = 1701736282;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_236D29A90()
{
  unint64_t result = qword_2688D1AC8;
  if (!qword_2688D1AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AC8);
  }
  return result;
}

unint64_t sub_236D29AE8()
{
  unint64_t result = qword_2688D1AD0;
  if (!qword_2688D1AD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D1AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AD0);
  }
  return result;
}

uint64_t _s9ModelTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9ModelTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D29CA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomesStore.ModelType()
{
  return &type metadata for HomesStore.ModelType;
}

uint64_t sub_236D29CDC()
{
  switch(*v0)
  {
    case 1:
      uint64_t v1 = type metadata accessor for HMCDRoomModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1B10, (void (*)(uint64_t))type metadata accessor for HMCDRoomModel);
      break;
    case 2:
      uint64_t v1 = type metadata accessor for HMCDHomeModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1B08, (void (*)(uint64_t))type metadata accessor for HMCDHomeModel);
      break;
    case 3:
      uint64_t v1 = type metadata accessor for HMCDHomesTopologyModel();
      sub_236D29FBC(&qword_2688D1B00, (void (*)(uint64_t))type metadata accessor for HMCDHomesTopologyModel);
      break;
    case 4:
      uint64_t v1 = type metadata accessor for HMCDUserModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1AF8, (void (*)(uint64_t))type metadata accessor for HMCDUserModel);
      break;
    case 5:
      uint64_t v1 = type metadata accessor for HMCDZoneModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1AF0, (void (*)(uint64_t))type metadata accessor for HMCDZoneModel);
      break;
    case 6:
      uint64_t v1 = type metadata accessor for HMCDAppleMediaDeviceModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1AE8, (void (*)(uint64_t))type metadata accessor for HMCDAppleMediaDeviceModel);
      break;
    case 7:
      uint64_t v1 = type metadata accessor for HMCDUserSharedSettingsModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1AE0, (void (*)(uint64_t))type metadata accessor for HMCDUserSharedSettingsModel);
      break;
    default:
      uint64_t v1 = type metadata accessor for HMCDAccessoryModel();
      sub_236D29FBC((unint64_t *)&qword_2688D1B18, (void (*)(uint64_t))type metadata accessor for HMCDAccessoryModel);
      break;
  }
  return v1;
}

uint64_t sub_236D29FBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236D2A004()
{
  unint64_t result = qword_2688D1B20;
  if (!qword_2688D1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1B20);
  }
  return result;
}

ValueMetadata *_s10DataSourceOMa()
{
  return &_s10DataSourceON;
}

void sub_236D2A068(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_modelID);
  sub_236DB9810();
}

id sub_236D2A0C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_user);
  *a2 = result;
  return result;
}

id sub_236D2A104(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUser_, *a1);
}

id HMCDUserSharedSettingsModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDUserSharedSettingsModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDUserSharedSettingsModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDUserSharedSettingsModel()
{
  return self;
}

id HMCDUserSharedSettingsModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDUserSharedSettingsModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static HMCDUserSharedSettingsModel.entityName.getter()
{
  return 0xD00000000000001BLL;
}

void sub_236D2A2A0()
{
  id v1 = objc_msgSend(v0, sel_modelID);
  sub_236DB9810();
}

uint64_t sub_236D2A300(uint64_t a1)
{
  objc_super v2 = v1;
  unsigned int v4 = (void *)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v4);

  uint64_t v5 = sub_236DB9830();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

void (*sub_236D2A390(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_236D2A430(v2);
  return sub_236D2A3E8;
}

void sub_236D2A3E8(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_236D2A430(void *a1))(void ***a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  *int v3 = v1;
  uint64_t v4 = sub_236DB9830();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[2] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[3] = malloc(v7);
  int v8 = malloc(v7);
  v3[4] = v8;
  uint64_t v9 = malloc(v7);
  v3[5] = v9;
  id v10 = objc_msgSend(v1, sel_modelID);
  sub_236DB9810();

  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v9, v8, v4);
  return sub_236D2A560;
}

void sub_236D2A560(void ***a1, char a2)
{
  objc_super v2 = *a1;
  int v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v6 = (void (**)(void *, void *, void *))(*a1)[2];
  uint64_t v5 = (*a1)[3];
  int v8 = **a1;
  size_t v7 = (*a1)[1];
  if (a2)
  {
    v6[2]((*a1)[3], v4, v7);
    uint64_t v9 = (void *)sub_236DB97F0();
    id v10 = v6[1];
    ((void (*)(void *, void *))v10)(v5, v7);
    objc_msgSend(v8, sel_setModelID_, v9);

    ((void (*)(void *, void *))v10)(v4, v7);
  }
  else
  {
    uint64_t v11 = (void *)sub_236DB97F0();
    objc_msgSend(v8, sel_setModelID_, v11);

    ((void (*)(void *, void *))v6[1])(v4, v7);
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

unint64_t sub_236D2A68C()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_236D2A6A8(uint64_t a1)
{
  unint64_t result = sub_236D2A6D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D2A6D0()
{
  unint64_t result = qword_2688D1B28;
  if (!qword_2688D1B28)
  {
    type metadata accessor for HMCDUserSharedSettingsModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1B28);
  }
  return result;
}

uint64_t sub_236D2A724()
{
  return MEMORY[0x263F8D1F8];
}

uint64_t sub_236D2A730@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDUserSharedSettingsModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

char *keypath_get_selector_modelID()
{
  return sel_modelID;
}

void sub_236D2A780(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

char *keypath_get_selector_isExplicitContentAllowed()
{
  return sel_isExplicitContentAllowed;
}

id sub_236D2A7E8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isExplicitContentAllowed);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D2A81C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsExplicitContentAllowed_, *a1);
}

char *keypath_get_selector_isiTunesAccountAllowed()
{
  return sel_isiTunesAccountAllowed;
}

id sub_236D2A83C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isiTunesAccountAllowed);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D2A870(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsiTunesAccountAllowed_, *a1);
}

char *keypath_get_selector_isDolbyAtmosEnabled()
{
  return sel_isDolbyAtmosEnabled;
}

id sub_236D2A890@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isDolbyAtmosEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D2A8C4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsDolbyAtmosEnabled_, *a1);
}

char *keypath_get_selector_isLosslessMusicEnabled()
{
  return sel_isLosslessMusicEnabled;
}

id sub_236D2A8E4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isLosslessMusicEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D2A918(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsLosslessMusicEnabled_, *a1);
}

char *keypath_get_selector_isPlaybackInfluencesEnabled()
{
  return sel_isPlaybackInfluencesEnabled;
}

id sub_236D2A938@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isPlaybackInfluencesEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D2A96C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsPlaybackInfluencesEnabled_, *a1);
}

char *keypath_get_selector_isSiriIdentifyVoiceEnabled()
{
  return sel_isSiriIdentifyVoiceEnabled;
}

id sub_236D2A98C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isSiriIdentifyVoiceEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D2A9C0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsSiriIdentifyVoiceEnabled_, *a1);
}

char *keypath_get_selector_user()
{
  return sel_user;
}

id sub_236D2A9E0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_user);
  *a2 = result;
  return result;
}

id sub_236D2AA1C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUser_, *a1);
}

void sub_236D2AA30(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  uint64_t v4 = sub_236DB9A10();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_236D2AA88(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_rooms);
  type metadata accessor for HMCDRoomModel();
  sub_236D2AF70(&qword_2688D1B38, 255, (void (*)(uint64_t))type metadata accessor for HMCDRoomModel);
  uint64_t v4 = sub_236DB9E10();

  *a2 = v4;
}

void sub_236D2AB2C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  type metadata accessor for HMCDRoomModel();
  sub_236D2AF70(&qword_2688D1B38, 255, (void (*)(uint64_t))type metadata accessor for HMCDRoomModel);
  id v3 = (id)sub_236DB9E00();
  objc_msgSend(v2, sel_setRooms_, v3);
}

id HMCDZoneModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDZoneModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDZoneModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDZoneModel()
{
  return self;
}

id HMCDZoneModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDZoneModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static HMCDZoneModel.entityName.getter()
{
  return 0x656E6F5A44434D48;
}

uint64_t sub_236D2AD70()
{
  return 0x656E6F5A44434D48;
}

uint64_t sub_236D2AD94(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_236D2AF70(&qword_2688D1B30, a2, (void (*)(uint64_t))type metadata accessor for HMCDZoneModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D2ADEC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDZoneModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236D2AE30(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_236D2AE9C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB9A00();
  objc_msgSend(v2, sel_setName_, v3);
}

char *keypath_get_selector_home()
{
  return sel_home;
}

id sub_236D2AF0C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_home);
  *a2 = result;
  return result;
}

id sub_236D2AF48(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHome_, *a1);
}

char *keypath_get_selector_rooms()
{
  return sel_rooms;
}

uint64_t sub_236D2AF70(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D2AFB8()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D1B40);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D1B40);
  return sub_236DB9940();
}

void sub_236D2B03C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BC0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  id v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  objc_super v7 = (char *)&v38 - v6;
  uint64_t v8 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void **)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = 0x746C7561666544;
  v11[1] = 0xE700000000000000;
  unint64_t v41 = (char *)v11 + *(int *)(v9 + 28);
  sub_236D80FB0((uint64_t)v41);
  uint64_t v12 = *(int *)(v9 + 32);
  uint64_t v38 = v11;
  uint64_t v13 = (void *)((char *)v11 + v12);
  *uint64_t v13 = 0xD00000000000001ELL;
  v13[1] = 0x8000000236DBB820;
  type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBDD80;
  *(void *)(inited + 32) = sub_236DB9A10();
  *(void *)(inited + 40) = v15;
  uint64_t v16 = MEMORY[0x263F8D4F8];
  *(void *)(inited + 72) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 80) = sub_236DB9A10();
  *(void *)(inited + 88) = v17;
  *(void *)(inited + 120) = v16;
  *(unsigned char *)(inited + 96) = 1;
  *(void *)(inited + 128) = sub_236DB9A10();
  *(void *)(inited + 136) = v18;
  *(void *)(inited + 168) = v16;
  *(unsigned char *)(inited + 144) = 1;
  *(void *)(inited + 176) = sub_236DB9A10();
  *(void *)(inited + 184) = v19;
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_236D564B8(0, 1, 0);
  uint64_t v20 = v42;
  unint64_t v22 = *(void *)(v42 + 16);
  unint64_t v21 = *(void *)(v42 + 24);
  if (v22 >= v21 >> 1)
  {
    sub_236D564B8(v21 > 1, v22 + 1, 1);
    uint64_t v20 = v42;
  }
  *(void *)(v20 + 16) = v22 + 1;
  uint64_t v23 = v20 + 16 * v22;
  *(void *)(v23 + 32) = 0xD000000000000019;
  *(void *)(v23 + 40) = 0x8000000236DBB260;
  *(void *)(inited + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BD0);
  *(void *)(inited + 192) = v20;
  *(void *)(inited + 224) = sub_236DB9A10();
  *(void *)(inited + 232) = v24;
  *(void *)(inited + 264) = MEMORY[0x263F8D310];
  *(void *)(inited + 240) = 0xD00000000000001ELL;
  *(void *)(inited + 248) = 0x8000000236DBB820;
  unint64_t v25 = sub_236D61790(inited);
  uint64_t v26 = sub_236DB9770();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v39 = a1;
  v28(v7, a1, v26);
  char v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
  v29(v7, 0, 1, v26);
  v28(v5, (uint64_t)v41, v26);
  unint64_t v41 = v5;
  v29(v5, 0, 1, v26);
  sub_236D2B528(v25);
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(objc_allocWithZone((Class)_s21RequestHandlingPolicyCMa()), sel_init);
  id v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  unint64_t v32 = 0;
  if (v31(v7, 1, v26) != 1)
  {
    unint64_t v32 = (void *)sub_236DB9750();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
  }
  uint64_t v33 = (uint64_t)v41;
  if (v31(v41, 1, v26) == 1)
  {
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v34 = (void *)sub_236DB9750();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v33, v26);
  }
  id v35 = objc_allocWithZone(MEMORY[0x263EFF358]);
  uint64_t v36 = (void *)sub_236DB9980();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v35, sel_initForStoreWithURL_usingModelAtURL_options_policy_, v32, v34, v36, v30);

  if (v37)
  {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v39, v26);
    sub_236D2BC3C((uint64_t)v38);
    *(void *)(v40 + 16) = v37;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_236D2B528(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2688D1BD8);
    uint64_t v2 = sub_236DBA490();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_236D1900C(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_236D18FFC(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_236D18FFC(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_236D18FFC(v36, v37);
    sub_236D18FFC(v37, &v33);
    uint64_t result = sub_236DBA1F0();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_236D18FFC(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_236D2BC98();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_236D2B8F0()
{
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t _s14XPCStoreServerCMa()
{
  return self;
}

uint64_t sub_236D2B9C0(void *a1, void *a2)
{
  if (qword_2688D1250 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_236DB9950();
  __swift_project_value_buffer(v4, (uint64_t)qword_2688D1B40);
  id v5 = a1;
  id v6 = a2;
  id v7 = a1;
  id v8 = v6;
  unint64_t v9 = sub_236DB9930();
  os_log_type_t v10 = sub_236DB9F50();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    unint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412546;
    if (a1)
    {
      id v13 = a1;
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_236DBA0B0();
    }
    else
    {
      sub_236DBA0B0();
      uint64_t v14 = 0;
    }
    *unint64_t v12 = v14;

    *(_WORD *)(v11 + 12) = 2112;
    if (a2) {
      id v15 = v8;
    }
    sub_236DBA0B0();
    v12[1] = a2;

    _os_log_impl(&dword_236D14000, v9, v10, "XPC store requested recovery for error: %@, context: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v12, -1, -1);
    MEMORY[0x237E101A0](v11, -1, -1);
  }
  else
  {
  }
  return 0;
}

uint64_t sub_236D2BC3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236D2BC98()
{
  return swift_release();
}

uint64_t sub_236D2BCA0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t ModelIdentifierDescriptor.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ModelIdentifierDescriptor.hash(into:)()
{
  sub_236DB9830();
  sub_236D1BD8C((unint64_t *)&qword_2688D15A8);
  return sub_236DB99C0();
}

uint64_t sub_236D2BDB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_236DBA600();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_236D2BE20()
{
  return 25705;
}

uint64_t sub_236D2BE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D2BDB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_236D2BE60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_236D27330();
  *a1 = result & 1;
  return result;
}

uint64_t sub_236D2BE90(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_236D2BEE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t ModelIdentifierDescriptor.encode(to:)(void *a1)
{
  type metadata accessor for ModelIdentifierDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_236DBA5B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v7 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DBA760();
  sub_236DB9830();
  sub_236D1BD8C(&qword_2688D1680);
  sub_236DBA5A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t type metadata accessor for ModelIdentifierDescriptor.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ModelIdentifierDescriptor.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t ModelIdentifierDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_236DB9830();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  BOOL v25 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModelIdentifierDescriptor.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_236DBA550();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for ModelIdentifierDescriptor();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v26;
  sub_236DBA750();
  if (!v11)
  {
    uint64_t v18 = v10;
    uint64_t v26 = v8;
    uint64_t v12 = v21;
    uint64_t v13 = v23;
    sub_236D1BD8C(&qword_2688D1638);
    uint64_t v14 = v24;
    uint64_t v15 = v22;
    sub_236DBA530();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v15);
    int64_t v16 = v18;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v25, v14);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v20, v16, v26);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_236D2C468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelIdentifierDescriptor.init(from:)(a1, a2);
}

uint64_t sub_236D2C488(void *a1)
{
  return ModelIdentifierDescriptor.encode(to:)(a1);
}

uint64_t sub_236D2C4A8()
{
  return sub_236DBA710();
}

uint64_t type metadata accessor for ModelIdentifierDescriptor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D2C4FC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_236D2C504(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_236D2C5A4()
{
  return sub_236D1BD8C((unint64_t *)&qword_2688D15A8);
}

uint64_t sub_236D2C5D8()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of static HomesStore.Model.modelType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_236D2C60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_236D2C614()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_236D2C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t keypath_destroyTm(uint64_t a1)
{
  uint64_t v2 = sub_236DB9830();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_236D2C770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D2C7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D2C838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D2C89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D2C900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D2C914);
}

uint64_t sub_236D2C914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_236D2C980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D2C994);
}

uint64_t sub_236D2C994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_236D2CA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unsigned char *sub_236D2CA0C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x236D2CAA8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_236D2CAD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_236D2CAEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_236D2CB08()
{
  return swift_getWitnessTable();
}

uint64_t sub_236D2CB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v9 = type metadata accessor for RelationshipResolver();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v23 = a4;
  uint64_t v16 = _s17DescriptorVisitorVMa();
  uint64_t v24 = *(void *)(v16 - 8);
  uint64_t v25 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v23 - v17);
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v15, a1, v9);
  v20(v13, a2, v9);
  sub_236D2CD4C(KeyPath, (uint64_t)v15, (uint64_t)v13, v18);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v21(a2, v9);
  v21(a1, v9);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v24 + 32))(v26, v18, v25);
}

uint64_t sub_236D2CD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = (int *)_s17DescriptorVisitorVMa();
  uint64_t v9 = v8[13];
  sub_236DBA320();
  *(void *)((char *)a4 + v9) = sub_236DB9970();
  *a4 = a1;
  uint64_t v10 = (char *)a4 + v8[11];
  uint64_t v11 = type metadata accessor for RelationshipResolver();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t))v14)((void *)(v11 - 8), v10, a2, v11);
  uint64_t v12 = (char *)a4 + v8[12];
  return v14(v12, a3, v11);
}

uint64_t sub_236D2CE8C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_236D2EE08(a1, a2, a3);
  return swift_release();
}

uint64_t sub_236D2CEB4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = _s17DescriptorVisitorVMa();
  a4(a1, v7, a3);
  return swift_release();
}

uint64_t sub_236D2CF18(void *a1, uint64_t a2, uint64_t a3)
{
  sub_236D2F0C4(a1, a2, a3);
  return swift_release();
}

uint64_t sub_236D2CF40(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *a1;
  uint64_t v56 = sub_236DB9830();
  unint64_t v46 = *(void (***)(uint64_t, char *, uint64_t))(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v47 = v8;
  uint64_t v55 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2[2];
  uint64_t v54 = *(void *)(*MEMORY[0x263F8EA20] + v7 + 8);
  uint64_t v10 = *(void *)(v54 + 16);
  uint64_t v11 = a2[4];
  v66[0] = v9;
  v66[1] = v10;
  v66[2] = v11;
  v66[3] = a3;
  uint64_t v63 = v11;
  uint64_t v64 = v10;
  uint64_t v12 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = a2[3];
  sub_236DBA770();
  uint64_t v57 = a1;
  uint64_t v18 = (uint64_t *)sub_236DBA330();
  uint64_t v19 = type metadata accessor for RelationshipResolver();
  uint64_t v20 = RelationshipResolver.models<A>(at:)(v18, v19, a3);
  uint64_t v60 = a2;
  uint64_t v61 = v3;
  uint64_t v44 = v18;
  uint64_t v21 = v18;
  uint64_t v22 = v20;
  uint64_t v23 = RelationshipResolver.models<A>(at:)(v21, v19, a3);
  uint64_t v58 = a3;
  uint64_t v59 = v9;
  uint64_t v52 = v17;
  char v24 = sub_236D35D60(v22, v23, v9, v17, v64, v63, a3);
  swift_bridgeObjectRelease();
  if (!MEMORY[0x237E0EEB0](v22, v12))
  {
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_12;
    }
    return swift_release();
  }
  uint64_t v25 = 0;
  char v26 = v24 ^ 1;
  uint64_t v27 = v62;
  uint64_t v51 = (void (**)(char *, void *, uint64_t))(v62 + 16);
  unint64_t v48 = (void (**)(char *, char *, uint64_t))(v62 + 32);
  v47 += 40;
  v46 += 4;
  char v45 = (void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v49 = v16;
  uint64_t v50 = v12;
  uint64_t v28 = v53;
  while (1)
  {
    char v29 = sub_236DB9BA0();
    sub_236DB9B70();
    if ((v29 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v16, v22+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v25, v12);
    uint64_t v30 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      goto LABEL_10;
    }
LABEL_5:
    (*v48)(v28, v16, v12);
    uint64_t v31 = v55;
    uint64_t v32 = RelationshipResolver.ModelProxy.id.getter();
    MEMORY[0x270FA5388](v32);
    long long v34 = (uint64_t *)((char *)&v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v35 = v52;
    *long long v34 = v59;
    v34[1] = v35;
    uint64_t v36 = v63;
    v34[2] = v64;
    _OWORD v34[3] = v36;
    uint64_t v37 = v22;
    uint64_t v38 = v58;
    v34[4] = v58;
    (*v46)((uint64_t)(v34 + 5), v31, v56);
    swift_getKeyPath();
    sub_236DBA770();
    long long v39 = (void *)sub_236DBA330();
    swift_release();
    uint64_t v40 = v38;
    uint64_t v22 = v37;
    sub_236D2F0C4(v39, (uint64_t)v60, v40);
    LOBYTE(v31) = v41;
    uint64_t v27 = v62;
    uint64_t v16 = v49;
    uint64_t v12 = v50;
    swift_release();
    (*v45)(v28, v12);
    swift_release();
    v26 |= v31;
    ++v25;
    if (v30 == MEMORY[0x237E0EEB0](v22, v12)) {
      goto LABEL_11;
    }
  }
  uint64_t result = sub_236DBA2A0();
  if (v43 != 8)
  {
    __break(1u);
    return result;
  }
  v66[0] = result;
  (*v51)(v16, v66, v12);
  swift_unknownObjectRelease();
  uint64_t v30 = v25 + 1;
  if (!__OFADD__(v25, 1)) {
    goto LABEL_5;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0) {
    return swift_release();
  }
LABEL_12:
  id v65 = v44;
  sub_236DBA320();
  sub_236DB9E90();
  sub_236DB9E40();
  return swift_release();
}

uint64_t sub_236D2D4E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = _s17DescriptorVisitorVMa();
  sub_236D2FAE8(a1, a2, v7, a4);
  return swift_release();
}

uint64_t sub_236D2D548(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_236D2FAE8(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_236D2D570(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = _s17DescriptorVisitorVMa();
  return sub_236D2D5E0(a1, a2, v9, a4, a5);
}

uint64_t sub_236D2D5E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a4;
  uint64_t v9 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a2 + 8) + 16);
  uint64_t v54 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v53 = (char *)&v52 - v10;
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t v14 = type metadata accessor for RelationshipResolver();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  long long v68 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v64 = v13;
  id v65 = (char *)&v52 - v18;
  uint64_t v66 = _s17DescriptorVisitorVMa();
  uint64_t v69 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v63 = (char *)&v52 - v19;
  uint64_t v57 = v12;
  uint64_t v73 = v12;
  uint64_t v74 = v9;
  uint64_t v55 = v9;
  uint64_t v75 = v13;
  uint64_t v76 = a5;
  uint64_t v62 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v71 = sub_236DBA090();
  uint64_t v61 = *(void *)(v71 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v71);
  uint64_t v60 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v52 - v22;
  uint64_t v59 = a1;
  char v24 = a2;
  uint64_t v25 = a5;
  uint64_t v26 = a5;
  uint64_t v27 = v70;
  uint64_t v28 = sub_236D2FAE8(a1, v24, a3, v25);
  uint64_t v29 = v27 + *(int *)(a3 + 44);
  RelationshipResolver.model<A>(at:)(v28, v14, v26, (uint64_t)v23);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v31 = (uint64_t)v65;
  uint64_t v32 = v14;
  v30(v65, v29, v14);
  uint64_t v58 = a3;
  uint64_t v33 = *(int *)(a3 + 48);
  long long v34 = v60;
  uint64_t v35 = v61;
  uint64_t v36 = v27 + v33;
  uint64_t v37 = (uint64_t)v68;
  v30(v68, v36, v32);
  uint64_t v38 = v63;
  uint64_t v39 = swift_retain();
  uint64_t v67 = v28;
  uint64_t v40 = v62;
  sub_236D2CD4C(v39, v31, v37, v38);
  char v41 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  long long v68 = v23;
  v41(v34, v23, v71);
  uint64_t v42 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v34, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v71);
    uint64_t v43 = v66;
  }
  else
  {
    uint64_t v44 = v54;
    char v45 = v53;
    uint64_t v46 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v34, v55);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v40);
    uint64_t v47 = v56;
    unint64_t v48 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 16);
    uint64_t v49 = v66;
    uint64_t WitnessTable = swift_getWitnessTable();
    v48(v38, v49, WitnessTable, v46, v47);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    uint64_t v43 = v49;
  }
  sub_236DBA320();
  if ((sub_236DB9E50() & 1) == 0)
  {
    uint64_t v73 = *(void *)((char *)v38 + *(int *)(v43 + 52));
    sub_236DBA320();
    sub_236DB9E90();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_236DB9E80();
    uint64_t v72 = (uint64_t)v67;
    swift_retain();
    sub_236DB9E40();
    swift_release();
    sub_236DBA770();
    uint64_t v72 = sub_236DBA330();
    sub_236DB9E40();
    swift_release();
  }
  swift_release();
  (*(void (**)(void *, uint64_t))(v69 + 8))(v38, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v68, v71);
}

uint64_t sub_236D2DC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = _s17DescriptorVisitorVMa();
  return a4(a1, v6, a3);
}

uint64_t sub_236D2DCB4(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[2];
  uint64_t v6 = *a1;
  uint64_t v17 = a2[3];
  sub_236DBA770();
  uint64_t v7 = (uint64_t *)sub_236DBA330();
  uint64_t v8 = a2[4];
  uint64_t v9 = type metadata accessor for RelationshipResolver();
  uint64_t v18 = v7;
  uint64_t v10 = RelationshipResolver.models<A>(at:)(v7, v9, a3);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (void *)MEMORY[0x263F8EA20];
    uint64_t v13 = v6;
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EA20];
    uint64_t v13 = v6;
    type metadata accessor for RelationshipResolver.ModelProxy();
    uint64_t v11 = sub_236DB9B90();
  }
  uint64_t v14 = RelationshipResolver.models<A>(at:)(v18, v9, a3);
  if (!v14)
  {
    type metadata accessor for RelationshipResolver.ModelProxy();
    uint64_t v14 = sub_236DB9B90();
  }
  char v15 = sub_236D35D60(v11, v14, v5, v17, *(void *)(*(void *)(*(void *)(*v12 + v13 + 8) + 16) + 16), v8, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    sub_236DBA320();
    sub_236DB9E90();
    sub_236DB9E40();
  }
  return swift_release();
}

uint64_t sub_236D2DED0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *a1;
  uint64_t v11 = type metadata accessor for RelationshipResolver();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v42 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (char *)&v37 - v15;
  uint64_t v16 = *(void *)(*MEMORY[0x263F8EA20] + v10 + 8);
  uint64_t v17 = v8;
  uint64_t v44 = v8;
  uint64_t v18 = v16;
  uint64_t v41 = v16;
  uint64_t v39 = v9;
  uint64_t v43 = _s17DescriptorVisitorVMa();
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v20 = (uint64_t *)((char *)&v37 - v19);
  uint64_t v49 = v17;
  uint64_t v50 = v18;
  uint64_t v51 = v9;
  uint64_t v52 = a4;
  uint64_t v21 = a4;
  uint64_t v22 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v45 = *(void *)(v22 - 8);
  uint64_t v46 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v38 = (char *)&v37 - v23;
  uint64_t v24 = sub_236D2EE08(a1, a2, a4);
  uint64_t v25 = v4 + *(int *)(a2 + 44);
  uint64_t v26 = v4;
  RelationshipResolver.model<A>(at:)(v24, v11, v21);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v28 = (uint64_t)v40;
  v27(v40, v25, v11);
  uint64_t v29 = (uint64_t)v42;
  v27(v42, v26 + *(int *)(a2 + 48), v11);
  uint64_t v30 = swift_retain();
  sub_236D2CD4C(v30, v28, v29, v20);
  uint64_t v31 = v47;
  uint64_t v32 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8);
  uint64_t v33 = v43;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = v38;
  v32(v20, v33, WitnessTable, v41, v31);
  uint64_t v49 = *(void *)((char *)v20 + *(int *)(v33 + 52));
  sub_236DBA320();
  sub_236DB9E90();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_236DB9E80();
  swift_release();
  (*(void (**)(void *, uint64_t))(v48 + 8))(v20, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v35, v46);
}

uint64_t sub_236D2E2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = _s17DescriptorVisitorVMa();
  return a5(a1, v8, a3, a4);
}

uint64_t sub_236D2E328(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *a1;
  uint64_t v12 = type metadata accessor for RelationshipResolver();
  uint64_t v98 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  v85 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v84 = (char *)&v62 - v15;
  uint64_t v83 = *(void *)(*MEMORY[0x263F8EA20] + v11 + 8);
  uint64_t v100 = *(void *)(v83 + 16);
  uint64_t v16 = v100;
  sub_236DBA090();
  uint64_t v92 = v10;
  uint64_t v82 = _s17DescriptorVisitorVMa();
  uint64_t v97 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  v101 = (uint64_t *)((char *)&v62 - v17);
  uint64_t v81 = sub_236DB9830();
  uint64_t v94 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v93 = v18;
  v80 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103[0] = v9;
  v103[1] = v16;
  v103[2] = v10;
  v103[3] = a4;
  uint64_t v91 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v89 = *(void *)(v91 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v91);
  v90 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v20;
  MEMORY[0x270FA5388](v19);
  v99 = (char *)&v62 - v21;
  uint64_t v22 = *(void *)(a2 + 24);
  sub_236DBA770();
  v87 = a1;
  uint64_t v23 = (uint64_t *)sub_236DBA330();
  uint64_t v24 = a4;
  uint64_t v78 = v4 + *(int *)(a2 + 44);
  uint64_t v25 = RelationshipResolver.models<A>(at:)(v23, v12, a4);
  uint64_t v95 = a2;
  uint64_t v96 = v4;
  uint64_t v26 = v4 + *(int *)(a2 + 48);
  uint64_t v64 = v23;
  uint64_t v86 = v12;
  uint64_t v77 = v26;
  uint64_t v27 = RelationshipResolver.models<A>(at:)(v23, v12, v24);
  uint64_t v79 = v22;
  uint64_t v28 = v91;
  uint64_t v88 = v24;
  int v29 = sub_236D35D60(v25, v27, v9, v22, v100, v92, v24);
  swift_bridgeObjectRelease();
  if (!MEMORY[0x237E0EEB0](v25, v28))
  {
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      goto LABEL_14;
    }
    return swift_release();
  }
  uint64_t v30 = 0;
  uint64_t v72 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16);
  uint64_t v73 = a3 + 16;
  int v31 = v29 ^ 1;
  uint64_t v32 = v89;
  uint64_t v76 = (void (**)(char *, void *, uint64_t))(v89 + 16);
  uint64_t v71 = (void (**)(char *, char *, uint64_t))(v89 + 32);
  uint64_t v70 = v93 + 48;
  uint64_t v69 = (void (**)(uint64_t, char *, uint64_t))(v94 + 32);
  long long v68 = (void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  uint64_t v66 = (void (**)(void *, uint64_t))(v97 + 8);
  id v65 = (void (**)(char *, uint64_t))(v89 + 8);
  uint64_t v75 = v9;
  uint64_t v33 = v9;
  long long v34 = v90;
  uint64_t v35 = v95;
  uint64_t v74 = a3;
  uint64_t v67 = v25;
  while (1)
  {
    LODWORD(v94) = v31;
    LOBYTE(v31) = sub_236DB9BA0();
    sub_236DB9B70();
    if ((v31 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v99, v25+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v30, v28);
    uint64_t v38 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_12;
    }
LABEL_7:
    uint64_t v97 = v38;
    uint64_t v98 = v30;
    (*v71)(v34, v99, v28);
    uint64_t v39 = v80;
    uint64_t v40 = RelationshipResolver.ModelProxy.id.getter();
    uint64_t v41 = v35;
    MEMORY[0x270FA5388](v40);
    uint64_t v43 = (uint64_t *)((char *)&v62 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v44 = v79;
    *uint64_t v43 = v33;
    v43[1] = v44;
    uint64_t v45 = v92;
    v43[2] = v100;
    v43[3] = v45;
    uint64_t v46 = v88;
    v43[4] = a3;
    v43[5] = v46;
    (*v69)((uint64_t)(v43 + 6), v39, v81);
    swift_getKeyPath();
    uint64_t v47 = a3;
    sub_236DBA770();
    uint64_t v48 = (void *)sub_236DBA330();
    swift_release();
    uint64_t v49 = sub_236D2F0C4(v48, v41, v46);
    LODWORD(v93) = v50;
    uint64_t v51 = *v68;
    uint64_t v52 = (uint64_t)v84;
    uint64_t v53 = v86;
    (*v68)(v84, v78, v86);
    uint64_t v54 = (uint64_t)v85;
    uint64_t v55 = v53;
    uint64_t v56 = v82;
    v51(v85, v77, v55);
    uint64_t v57 = swift_retain();
    long long v34 = v90;
    sub_236D2CD4C(v57, v52, v54, v101);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v59 = v47;
    uint64_t v60 = v101;
    v72(v101, v56, WitnessTable, v100, v59);
    sub_236DBA320();
    if (sub_236DB9E50())
    {
      swift_release();
      swift_release();
      int v31 = v93 | v94;
      (*v66)(v60, v56);
      uint64_t v28 = v91;
      (*v65)(v34, v91);
    }
    else
    {
      v103[0] = *(void *)((char *)v60 + *(int *)(v56 + 52));
      sub_236DBA320();
      sub_236DB9E90();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      sub_236DB9E80();
      v102 = v49;
      swift_retain();
      sub_236DB9E40();
      swift_release();
      swift_release();
      swift_release();
      (*v66)(v60, v56);
      uint64_t v28 = v91;
      (*v65)(v34, v91);
      int v31 = 1;
    }
    uint64_t v32 = v89;
    uint64_t v25 = v67;
    uint64_t v36 = v98;
    uint64_t v37 = MEMORY[0x237E0EEB0](v67, v28);
    uint64_t v30 = v36 + 1;
    uint64_t v33 = v75;
    uint64_t v35 = v95;
    a3 = v74;
    if (v97 == v37) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_236DBA2A0();
  if (v63 != 8)
  {
    __break(1u);
    return result;
  }
  LOBYTE(v31) = result;
  v103[0] = result;
  (*v76)(v99, v103, v28);
  swift_unknownObjectRelease();
  uint64_t v38 = v30 + 1;
  if (!__OFADD__(v30, 1)) {
    goto LABEL_7;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0) {
    return swift_release();
  }
LABEL_14:
  v102 = v64;
  sub_236DBA320();
  sub_236DB9E90();
  sub_236DB9E40();
  return swift_release();
}

uint64_t sub_236D2ECD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D2CEB4(a1, a4, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_236D2EE08);
}

uint64_t sub_236D2ED08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D2E2B4(a1, a5, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_236D2DED0);
}

uint64_t sub_236D2ED38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D2CEB4(a1, a4, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_236D2F0C4);
}

uint64_t sub_236D2ED68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D2DC48(a1, a4, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_236D2CF40);
}

uint64_t sub_236D2ED98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D2E2B4(a1, a5, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_236D2E328);
}

uint64_t sub_236D2EDC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D2D4E4(a1, a2, a5, a4);
}

uint64_t sub_236D2EDD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_236D2D570(a1, a2, a6, a4, a5);
}

uint64_t sub_236D2EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D2DC48(a1, a4, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_236D2DCB4);
}

uint64_t sub_236D2EE08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v20 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v24 = v5;
  uint64_t v25 = v20;
  uint64_t v26 = v6;
  uint64_t v27 = a3;
  uint64_t v7 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  sub_236DBA770();
  uint64_t v13 = sub_236DBA330();
  uint64_t v18 = v5;
  uint64_t v14 = type metadata accessor for RelationshipResolver();
  RelationshipResolver.model<A>(at:)(v13, v14, a3);
  uint64_t v19 = v3;
  RelationshipResolver.model<A>(at:)(v13, v14, a3);
  uint64_t v22 = v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if ((sub_236DB99F0() & 1) == 0)
  {
    uint64_t v23 = v13;
    sub_236DBA320();
    sub_236DB9E90();
    swift_retain();
    sub_236DB9E40();
    swift_release();
  }
  uint64_t v15 = v22;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v21 + 8);
  v16(v10, v22);
  v16(v12, v15);
  return v13;
}

void *sub_236D2F0C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8) + 16);
  uint64_t v95 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v98 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v80 = (char *)&v79 - v8;
  uint64_t v94 = v9;
  uint64_t v10 = sub_236DBA090();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v82 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v92 = (char *)&v79 - v12;
  uint64_t v93 = v10;
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v88 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)&v79 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v100 = (char *)&v79 - v17;
  uint64_t v19 = *(void *)(a2 + 32);
  uint64_t v104 = *(void *)(a2 + 16);
  uint64_t v18 = v104;
  uint64_t v105 = v5;
  uint64_t v81 = v5;
  uint64_t v106 = v19;
  uint64_t v107 = a3;
  uint64_t v20 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v99 = sub_236DBA090();
  uint64_t v102 = *(void *)(v99 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v99);
  v87 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v79 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v79 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v79 - v29;
  sub_236DBA770();
  int v31 = (void *)sub_236DBA330();
  uint64_t v83 = v18;
  uint64_t v32 = type metadata accessor for RelationshipResolver();
  uint64_t v33 = v95;
  RelationshipResolver.model<A>(at:)(v31, v32, v95, (uint64_t)v30);
  uint64_t v84 = a2;
  uint64_t v85 = v3;
  v101 = v28;
  uint64_t v34 = (uint64_t)v28;
  uint64_t v35 = v102;
  uint64_t v89 = v31;
  uint64_t v36 = v33;
  uint64_t v37 = v99;
  RelationshipResolver.model<A>(at:)(v31, v32, v36, v34);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v90 = v30;
  v38(v25, v30, v37);
  uint64_t v39 = *(void *)(v20 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v40(v25, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v37);
    uint64_t v41 = v100;
    uint64_t v42 = v94;
    uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t, char *))(v98 + 56);
    v86(v100, 1, 1, v94);
  }
  else
  {
    uint64_t v43 = &v25[*(int *)(v20 + 52)];
    uint64_t v44 = v98;
    uint64_t v45 = *(void (**)(char *, char *, char *))(v98 + 16);
    uint64_t v79 = v38;
    uint64_t v46 = v100;
    uint64_t v47 = v94;
    v45(v100, v43, v94);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v20);
    uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t, char *))(v44 + 56);
    v86(v46, 0, 1, v47);
    uint64_t v42 = v47;
    uint64_t v41 = v46;
    uint64_t v38 = v79;
  }
  uint64_t v48 = v87;
  v38(v87, v101, v37);
  uint64_t v49 = 1;
  if (v40(v48, 1, v20) == 1)
  {
    uint64_t v39 = v102;
    uint64_t v20 = v37;
    uint64_t v50 = v98;
    uint64_t v51 = v96;
    uint64_t v52 = v42;
  }
  else
  {
    uint64_t v50 = v98;
    uint64_t v51 = v96;
    uint64_t v52 = v42;
    (*(void (**)(char *, char *, char *))(v98 + 16))(v96, &v48[*(int *)(v20 + 52)], v42);
    uint64_t v49 = 0;
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v48, v20);
  v86(v51, v49, 1, v52);
  uint64_t v54 = v91;
  uint64_t v53 = v92;
  uint64_t v55 = &v92[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v56 = v52;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  uint64_t v58 = v41;
  uint64_t v59 = v93;
  v57(v92, v58, v93);
  uint64_t v94 = v55;
  v57(v55, v51, v59);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, char *))(v50 + 48);
  if (v60(v53, 1, v56) != 1)
  {
    v57(v88, v53, v59);
    int v66 = v60(v94, 1, v56);
    uint64_t v67 = v56;
    uint64_t v63 = v102;
    id v65 = v53;
    if (v66 != 1)
    {
      uint64_t v69 = v80;
      (*(void (**)(char *, char *, char *))(v50 + 32))(v80, v94, v56);
      swift_getAssociatedConformanceWitness();
      uint64_t v70 = v88;
      char v71 = sub_236DB99F0();
      uint64_t v72 = *(void (**)(char *, char *))(v50 + 8);
      v72(v69, v67);
      uint64_t v73 = *(void (**)(char *, uint64_t))(v54 + 8);
      v73(v96, v59);
      v73(v100, v59);
      v72(v70, v67);
      v73(v65, v59);
      uint64_t v64 = v89;
      if (v71) {
        goto LABEL_14;
      }
LABEL_15:
      v103 = v64;
      sub_236DBA320();
      sub_236DB9E90();
      swift_retain();
      sub_236DB9E40();
      swift_release();
      uint64_t v76 = *(void (**)(char *, uint64_t))(v63 + 8);
      uint64_t v77 = v99;
      v76(v101, v99);
      v76(v90, v77);
      return v64;
    }
    long long v68 = *(void (**)(char *, uint64_t))(v54 + 8);
    v68(v96, v59);
    v68(v100, v59);
    (*(void (**)(char *, char *))(v50 + 8))(v88, v56);
    uint64_t v64 = v89;
LABEL_12:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v65, TupleTypeMetadata2);
    goto LABEL_15;
  }
  uint64_t v61 = *(void (**)(char *, uint64_t))(v54 + 8);
  v61(v51, v59);
  v61(v100, v59);
  int v62 = v60(v94, 1, v56);
  uint64_t v63 = v102;
  uint64_t v64 = v89;
  id v65 = v53;
  if (v62 != 1) {
    goto LABEL_12;
  }
  v61(v53, v59);
LABEL_14:
  uint64_t v74 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v75 = v99;
  v74(v101, v99);
  v74(v90, v75);
  return v64;
}

uint64_t sub_236D2FA60()
{
  return sub_236DB99F0() & 1;
}

void *sub_236D2FAE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_236D2F0C4(a2, a3, a4);
  if (v5)
  {
    sub_236DBA770();
    sub_236DBA330();
    sub_236DBA320();
    sub_236DB9E90();
    sub_236DB9E40();
    swift_release();
  }
  return v4;
}

uint64_t sub_236D2FBA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D2CE8C(a1, a4, a3);
}

uint64_t sub_236D2FBB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D2DED0(a1, a5, a3, a4);
}

uint64_t sub_236D2FBB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D2CF18(a1, a4, a3);
}

uint64_t sub_236D2FBC0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_236D2CF40(a1, a4, a3);
}

uint64_t sub_236D2FBC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D2E328(a1, a5, a3, a4);
}

uint64_t sub_236D2FBD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D2D548(a1, a2, a5, a4);
}

uint64_t sub_236D2FBD8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_236D2D5E0(a1, a2, a6, a4, a5);
}

uint64_t sub_236D2FBE0(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_236D2DCB4(a1, a4, a3);
}

uint64_t sub_236D2FBE8(uint64_t a1)
{
  sub_236D36390();
  uint64_t result = sub_236DB9E20();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_236D302FC(&v14, *(unsigned __int8 *)(*(void *)(a1 + 56) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t RelationshipResolver<>.keyPathDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v25 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  unint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)&v25 - v10;
  uint64_t v14 = *(void *)(v12 + 16);
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t v15 = _s34RelationshipModelDescriptorVisitorVMa();
  uint64_t v26 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v18(v11, v4, a2);
  v18(v9, v25, a2);
  sub_236D2CB24((uint64_t)v11, (uint64_t)v9, v14, v13, (uint64_t)v17);
  uint64_t v19 = v27;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  v20(v17, v15, WitnessTable, v14, v19);
  uint64_t v22 = *(void *)&v17[*(int *)(_s17DescriptorVisitorVMa() + 52)];
  uint64_t v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  swift_bridgeObjectRetain();
  v23(v17, v15);
  return sub_236D847A0(v22, v28);
}

uint64_t _s34RelationshipModelDescriptorVisitorVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D2FFB4(uint64_t a1, char *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_236D365E8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_236DB99B0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_236D365E8(&qword_2688D1DE8, MEMORY[0x263F07508]);
      char v21 = sub_236DB99F0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        int64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_236D320F4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *int64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_236D302D8(void *a1, void *a2)
{
  return sub_236D309DC(a1, a2, (void (*)(void))sub_236D363E4, &qword_2688D1E18, (void (*)(void))sub_236D363E4);
}

uint64_t sub_236D302FC(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_236DBA6E0();
  sub_236DBA6F0();
  uint64_t v6 = sub_236DBA710();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_236D32394(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

BOOL sub_236D3041C()
{
  uint64_t v1 = *v0;
  sub_236DBA6E0();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  unint64_t v2 = sub_236DBA710() & ~(-1 << *(unsigned char *)(v1 + 32));
  uint64_t v3 = (1 << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v0;
    *uint64_t v0 = 0x8000000000000000;
    sub_236D324E4(v2, isUniquelyReferenced_nonNull_native);
    *uint64_t v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_236D3050C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_236DBA6D0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_236D325F8(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_236D30608(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = *v4;
  sub_236DBA6E0();
  sub_236DBA6F0();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  if ((a4 & 0x80) != 0) {
    sub_236DBA700();
  }
  uint64_t v9 = sub_236DBA710();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v25;
    uint64_t *v25 = 0x8000000000000000;
    sub_236D366A4();
    sub_236D3271C(a2, a3, a4, v11, isUniquelyReferenced_nonNull_native);
    uint64_t *v25 = v29;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(a1 + 16) = a4;
    return result;
  }
  uint64_t v27 = ~v10;
  uint64_t v28 = v8;
  while (1)
  {
    uint64_t v13 = *(void *)(v8 + 48) + 24 * v11;
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    int v16 = *(char *)(v13 + 16);
    if ((v16 & 0x80000000) == 0) {
      break;
    }
    if ((a4 & 0x80) == 0) {
      goto LABEL_6;
    }
    if (v15 == a2 && v14 == a3)
    {
      sub_236D366A4();
      sub_236D366A4();
      sub_236D366AC();
      sub_236D366AC();
      if (((a4 ^ v16) & 1) == 0) {
        goto LABEL_27;
      }
    }
    else
    {
      char v20 = sub_236DBA600();
      sub_236D366A4();
      sub_236D366A4();
      sub_236D366AC();
      sub_236D366AC();
      if ((v20 & 1) != 0 && ((a4 ^ v16) & 1) == 0) {
        goto LABEL_27;
      }
    }
LABEL_7:
    uint64_t v8 = v28;
    unint64_t v11 = (v11 + 1) & v27;
    if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_25;
    }
  }
  if ((a4 & 0x80) != 0)
  {
LABEL_6:
    sub_236D366A4();
    sub_236D366A4();
    sub_236D366AC();
    sub_236D366AC();
    goto LABEL_7;
  }
  if (v15 != a2 || v14 != a3)
  {
    char v18 = sub_236DBA600();
    sub_236D366A4();
    sub_236D366A4();
    sub_236D366AC();
    sub_236D366AC();
    if (v18) {
      goto LABEL_27;
    }
    goto LABEL_7;
  }
  sub_236D366A4();
  sub_236D366A4();
  sub_236D366AC();
  sub_236D366AC();
LABEL_27:
  swift_bridgeObjectRelease();
  sub_236D366AC();
  uint64_t v23 = *(void *)(*v25 + 48) + 24 * v11;
  uint64_t v24 = *(void *)(v23 + 8);
  *(void *)a1 = *(void *)v23;
  *(void *)(a1 + 8) = v24;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v23 + 16);
  sub_236D366A4();
  return 0;
}

uint64_t sub_236D309B8(void *a1, void *a2)
{
  return sub_236D309DC(a1, a2, (void (*)(void))type metadata accessor for XPCClientProxy, &qword_2688D1E28, (void (*)(void))type metadata accessor for XPCClientProxy);
}

uint64_t sub_236D309DC(void *a1, void *a2, void (*a3)(void), uint64_t *a4, void (*a5)(void))
{
  uint64_t v9 = v5;
  uint64_t v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v5;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v14 = a2;
    uint64_t v15 = sub_236DBA1A0();

    if (v15)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_236DBA190();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = sub_236D30CB8(v13, result + 1, a4, a5);
    uint64_t v38 = v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v14;
      sub_236D31DD4(v33, a4);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = v27;
      id v30 = v14;
    }
    sub_236D32070((uint64_t)v14, v29);
    *uint64_t v9 = v29;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_236DBA020();
    uint64_t v18 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      a3(0);
      id v20 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
      char v21 = sub_236DBA030();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v5 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
        char v24 = sub_236DBA030();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v32 = a2;
    sub_236D32A9C((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a4, a5);
    *uint64_t v5 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

uint64_t sub_236D30C98(uint64_t a1, uint64_t a2)
{
  return sub_236D30CB8(a1, a2, &qword_2688D1E28, (void (*)(void))type metadata accessor for XPCClientProxy);
}

uint64_t sub_236D30CB8(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_236DBA240();
    uint64_t v19 = v6;
    sub_236DBA150();
    if (sub_236DBA1C0())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_236D31DD4(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_236DBA020();
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_236DBA1C0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v6;
}

uint64_t sub_236D30EB4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_236DB9830();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DF0);
  uint64_t v5 = sub_236DBA230();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    char v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_236D365E8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
      uint64_t result = sub_236DB99B0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_236D312B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E08);
  uint64_t result = sub_236DBA230();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_236DBA6E0();
      sub_236DBA6F0();
      uint64_t result = sub_236DBA710();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_236D3155C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E10);
  uint64_t v3 = sub_236DBA230();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (!v8)
      {
        int64_t v14 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v14 >= v9) {
          goto LABEL_31;
        }
        uint64_t v8 = v6[v14];
        ++v12;
        if (!v8)
        {
          int64_t v12 = v14 + 1;
          if (v14 + 1 >= v9) {
            goto LABEL_31;
          }
          uint64_t v8 = v6[v12];
          if (!v8)
          {
            int64_t v12 = v14 + 2;
            if (v14 + 2 >= v9) {
              goto LABEL_31;
            }
            uint64_t v8 = v6[v12];
            if (!v8)
            {
              int64_t v15 = v14 + 3;
              if (v15 >= v9)
              {
LABEL_31:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v23 = 1 << *(unsigned char *)(v2 + 32);
                if (v23 > 63) {
                  bzero(v6, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v23;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              uint64_t v8 = v6[v15];
              if (!v8)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_37;
                  }
                  if (v12 >= v9) {
                    goto LABEL_31;
                  }
                  uint64_t v8 = v6[v12];
                  ++v15;
                  if (v8) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v12 = v15;
            }
          }
        }
      }
LABEL_22:
      sub_236DBA6E0();
      sub_236DB9A50();
      uint64_t result = sub_236DBA710();
      uint64_t v16 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v10 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v17) & ~*(void *)(v10 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v19 = 0;
        unint64_t v20 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v20 && (v19 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v21 = v18 == v20;
          if (v18 == v20) {
            unint64_t v18 = 0;
          }
          v19 |= v21;
          uint64_t v22 = *(void *)(v10 + 8 * v18);
        }
        while (v22 == -1);
        unint64_t v13 = __clz(__rbit64(~v22)) + (v18 << 6);
      }
      v8 &= v8 - 1;
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_236D317FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DF8);
  uint64_t result = sub_236DBA230();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_236DBA6D0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_236D31A80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E30);
  uint64_t v3 = sub_236DBA230();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v31 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v30 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v30) {
          goto LABEL_35;
        }
        unint64_t v16 = v31[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v16 = v31[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v30) {
              goto LABEL_35;
            }
            unint64_t v16 = v31[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v30)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v31 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v31[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v10 >= v30) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v31[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      int v21 = *(char *)(v18 + 16);
      sub_236DBA6E0();
      sub_236DBA6F0();
      sub_236DB9A50();
      if (v21 < 0) {
        sub_236DBA700();
      }
      uint64_t result = sub_236DBA710();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v8 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v19;
      *(void *)(v12 + 8) = v20;
      *(unsigned char *)(v12 + 16) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_236D31DD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_236DBA230();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    int64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_236DBA020();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_236D32070(uint64_t a1, uint64_t a2)
{
  sub_236DBA020();
  unint64_t result = sub_236DBA130();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_236D320F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_236D30EB4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_236D32C28();
      goto LABEL_12;
    }
    sub_236D336C8();
  }
  uint64_t v12 = *v3;
  sub_236D365E8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  uint64_t v13 = sub_236DB99B0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_236D365E8(&qword_2688D1DE8, MEMORY[0x263F07508]);
      char v21 = sub_236DB99F0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_236DBA640();
  __break(1u);
  return result;
}

uint64_t sub_236D32394(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_236D312B0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_236D32ECC();
      goto LABEL_14;
    }
    sub_236D33A78();
  }
  uint64_t v8 = *v3;
  sub_236DBA6E0();
  sub_236DBA6F0();
  uint64_t result = sub_236DBA710();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_236DBA640();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_236D324E4(uint64_t result, char a2)
{
  unint64_t v3 = result;
  unint64_t v4 = *(void *)(*v2 + 16);
  unint64_t v5 = *(void *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if (a2)
    {
      sub_236D3155C();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_236D33CF4();
LABEL_8:
      uint64_t v6 = *v2;
      sub_236DBA6E0();
      sub_236DB9A50();
      uint64_t result = sub_236DBA710();
      unint64_t v3 = result & ~(-1 << *(unsigned char *)(v6 + 32));
      if ((*(void *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v3)) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t result = (uint64_t)sub_236D33060();
  }
LABEL_9:
  uint64_t v7 = *v2;
  *(void *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  uint64_t v8 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (!v9)
  {
    *(void *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  uint64_t result = sub_236DBA640();
  __break(1u);
  return result;
}

uint64_t sub_236D325F8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_236D317FC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_236D331C0();
      goto LABEL_14;
    }
    sub_236D33F5C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_236DBA6D0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_236DBA640();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_236D3271C(uint64_t result, uint64_t a2, int a3, unint64_t a4, char a5)
{
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 <= v10 || (a5 & 1) == 0)
  {
    if (a5)
    {
      sub_236D31A80();
    }
    else
    {
      if (v11 > v10)
      {
        uint64_t result = (uint64_t)sub_236D33358();
        goto LABEL_32;
      }
      sub_236D341C0();
    }
    uint64_t v28 = *v5;
    sub_236DBA6E0();
    sub_236DBA6F0();
    sub_236DB9A50();
    if ((a3 & 0x80) != 0) {
      sub_236DBA700();
    }
    uint64_t result = sub_236DBA710();
    uint64_t v12 = -1 << *(unsigned char *)(v28 + 32);
    a4 = result & ~v12;
    if ((*(void *)(v28 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v13 = ~v12;
      do
      {
        uint64_t v14 = *(void *)(v28 + 48) + 24 * a4;
        uint64_t v16 = *(void *)v14;
        uint64_t v15 = *(void *)(v14 + 8);
        int v17 = *(char *)(v14 + 16);
        if (v17 < 0)
        {
          if ((a3 & 0x80) == 0) {
            goto LABEL_13;
          }
          if (v16 == v9 && v15 == a2)
          {
            sub_236D366A4();
            sub_236D366A4();
            sub_236D366AC();
            uint64_t result = sub_236D366AC();
            if (((a3 ^ v17) & 1) == 0) {
              goto LABEL_36;
            }
          }
          else
          {
            char v21 = sub_236DBA600();
            sub_236D366A4();
            sub_236D366A4();
            sub_236D366AC();
            uint64_t result = sub_236D366AC();
            if ((v21 & 1) != 0 && ((a3 ^ v17) & 1) == 0) {
              goto LABEL_36;
            }
          }
        }
        else
        {
          if ((a3 & 0x80) != 0)
          {
LABEL_13:
            sub_236D366A4();
            sub_236D366A4();
            sub_236D366AC();
            uint64_t result = sub_236D366AC();
            goto LABEL_14;
          }
          if (v16 == v9 && v15 == a2) {
            goto LABEL_35;
          }
          char v19 = sub_236DBA600();
          sub_236D366A4();
          sub_236D366A4();
          sub_236D366AC();
          uint64_t result = sub_236D366AC();
          if (v19) {
            goto LABEL_36;
          }
        }
LABEL_14:
        a4 = (a4 + 1) & v13;
      }
      while (((*(void *)(v28 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_32:
  uint64_t v22 = *v27;
  *(void *)(*v27 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v23 = *(void *)(v22 + 48) + 24 * a4;
  *(void *)uint64_t v23 = v9;
  *(void *)(v23 + 8) = a2;
  *(unsigned char *)(v23 + 16) = a3;
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
LABEL_35:
    sub_236D366A4();
    sub_236D366A4();
    sub_236D366AC();
    sub_236D366AC();
LABEL_36:
    uint64_t result = sub_236DBA640();
    __break(1u);
  }
  else
  {
    *(void *)(v22 + 16) = v26;
  }
  return result;
}

void sub_236D32A9C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_236D31DD4(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_236D33524(a4);
      goto LABEL_14;
    }
    sub_236D344E4(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_236DBA020();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_236DBA030();

    if (v16)
    {
LABEL_13:
      sub_236DBA640();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_236DBA030();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

void *sub_236D32C28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_236DB9830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DF0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_236DBA220();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  BOOL v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_236D32ECC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA220();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236D33060()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA220();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_27:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      int64_t v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13) {
        goto LABEL_27;
      }
      uint64_t v12 = *(void *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        int64_t v9 = v14 + 1;
        if (v14 + 1 >= v13) {
          goto LABEL_27;
        }
        uint64_t v12 = *(void *)(v6 + 8 * v9);
        if (!v12)
        {
          int64_t v9 = v14 + 2;
          if (v14 + 2 >= v13) {
            goto LABEL_27;
          }
          uint64_t v12 = *(void *)(v6 + 8 * v9);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v13) {
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)(v6 + 8 * v15);
  if (v12)
  {
    int64_t v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v9);
    ++v15;
    if (v12) {
      goto LABEL_12;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_236D331C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA220();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236D33358()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA220();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    char v20 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v19 = *(void *)v17;
    *(void *)(v19 + 8) = v18;
    *(unsigned char *)(v19 + 16) = v20;
    uint64_t result = (void *)sub_236D366A4();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_236D33518()
{
  return sub_236D33524(&qword_2688D1E28);
}

id sub_236D33524(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_236DBA220();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_236D336C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_236DB9830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DF0);
  uint64_t v7 = sub_236DBA230();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_236D365E8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
    uint64_t result = sub_236DB99B0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236D33A78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E08);
  uint64_t result = sub_236DBA230();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_236DBA6E0();
    sub_236DBA6F0();
    uint64_t result = sub_236DBA710();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236D33CF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E10);
  uint64_t v3 = sub_236DBA230();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  uint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (!v8)
    {
      int64_t v14 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v14 >= v9) {
        goto LABEL_31;
      }
      uint64_t v8 = *(void *)(v6 + 8 * v14);
      ++v12;
      if (!v8)
      {
        int64_t v12 = v14 + 1;
        if (v14 + 1 >= v9) {
          goto LABEL_31;
        }
        uint64_t v8 = *(void *)(v6 + 8 * v12);
        if (!v8)
        {
          int64_t v12 = v14 + 2;
          if (v14 + 2 >= v9) {
            goto LABEL_31;
          }
          uint64_t v8 = *(void *)(v6 + 8 * v12);
          if (!v8) {
            break;
          }
        }
      }
    }
LABEL_22:
    sub_236DBA6E0();
    sub_236DB9A50();
    uint64_t result = sub_236DBA710();
    uint64_t v16 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v10 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v17) & ~*(void *)(v10 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v19 = 0;
      unint64_t v20 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v21 = v18 == v20;
        if (v18 == v20) {
          unint64_t v18 = 0;
        }
        v19 |= v21;
        uint64_t v22 = *(void *)(v10 + 8 * v18);
      }
      while (v22 == -1);
      unint64_t v13 = __clz(__rbit64(~v22)) + (v18 << 6);
    }
    v8 &= v8 - 1;
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    ++*(void *)(v4 + 16);
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v9)
  {
LABEL_31:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  uint64_t v8 = *(void *)(v6 + 8 * v15);
  if (v8)
  {
    int64_t v12 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_31;
    }
    uint64_t v8 = *(void *)(v6 + 8 * v12);
    ++v15;
    if (v8) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_236D33F5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DF8);
  uint64_t result = sub_236DBA230();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_236DBA6D0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236D341C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E30);
  uint64_t v3 = sub_236DBA230();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v29 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v30) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v30) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v30) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 24 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    int v21 = *(char *)(v18 + 16);
    sub_236DBA6E0();
    sub_236DBA6F0();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    if (v21 < 0) {
      sub_236DBA700();
    }
    uint64_t result = sub_236DBA710();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(unsigned char *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_236D344E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_236DBA230();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_236DBA020();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236D3475C()
{
  uint64_t result = _s17DescriptorVisitorVMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        int64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_236D34A38(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  if (v7 < a2)
  {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    unint64_t v10 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)
        + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + ((v8 + 15) & ~v9) + 40) & ~v9)
        + 48;
    unsigned int v11 = a2 - v7;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *((unsigned __int8 *)a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236D34BA4);
      case 4:
        int v16 = *(_DWORD *)((char *)a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *a1;
        }
        return v7 + (v12 | v18) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v9 + 8) & ~v9);
  }
  uint64_t v19 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_236D34BB8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  size_t v11 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + ((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
        + v10
        + ((v9 + 15) & ~(v9 | 7))
        + 40) & ~v10)
      + 48;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v20 = (unint64_t)&a1[v10 + 8] & ~v10;
              id v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
       + ((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
         + v10
         + ((v9 + 15) & ~(v9 | 7))
         + 40) & ~v10) == -48)
      unsigned int v13 = v12 + 1;
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
     + ((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
       + v10
       + ((v9 + 15) & ~(v9 | 7))
       + 40) & ~v10) == -48)
    int v17 = v16;
  else {
    int v17 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
     + ((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
       + v10
       + ((v9 + 15) & ~(v9 | 7))
       + 40) & ~v10) != -48)
  {
    int v18 = ~v8 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x236D34DBCLL);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t _s17DescriptorVisitorVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D34DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_236D34E04()
{
  uint64_t result = type metadata accessor for RelationshipResolver();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_236D34EB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(v5 + 64) + 7;
  unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 40;
  uint64_t v11 = *a2;
  *a1 = *a2;
  if ((v6 & 0x1000F8) != 0
    || (v9 & 0xFFFFFFFFFFFFFFF8) + ((v10 + v7 + (((v6 & 0xF8) + 15) & ~v7)) & ~v7) + 48 > 0x18)
  {
    a1 = (uint64_t *)(v11 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    uint64_t v13 = ((unint64_t)a1 + 15) & v8;
    uint64_t v14 = ((unint64_t)a2 + 15) & v8;
    int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v15(v13, v14, v4);
    unint64_t v16 = (v9 + v13) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = (v9 + v14) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v16 + 24) = v18;
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
    (**(void (***)(void))(v18 - 8))();
    unint64_t v19 = (v13 + v10) & v8;
    unint64_t v20 = (v14 + v10) & v8;
    v15(v19, v20, v4);
    unint64_t v21 = (v9 + v19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v9 + v20) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = *(void *)(v22 + 24);
    *(void *)(v21 + 24) = v23;
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
    (**(void (***)(void))(v23 - 8))();
    *(void *)(v19 + v10) = *(void *)(v20 + v10);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_236D350C8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v5 + 8;
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v9 = a1 + v8 + 8;
  v6(v9 & ~v8, v4);
  uint64_t v10 = *(void *)(v7 + 56) + 7;
  __swift_destroy_boxed_opaque_existential_0((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8);
  v6(((v9 | v8) + (v10 & 0xFFFFFFFFFFFFFFF8) + 40) & ~v8, v4);
  __swift_destroy_boxed_opaque_existential_0((v10 + (((v9 | v8) + (v10 & 0xFFFFFFFFFFFFFFF8) + 40) & ~v8)) & 0xFFFFFFFFFFFFFFF8);
  return swift_bridgeObjectRelease();
}

void *sub_236D351B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(void *)(v4 - 8) + 16;
  uint64_t v7 = *(_DWORD *)(*(void *)(v4 - 8) + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  v7 += 15;
  unint64_t v9 = ((unint64_t)a1 + v7) & ~v8;
  unint64_t v10 = ((unint64_t)a2 + v7) & ~v8;
  swift_retain();
  v5(v9, v10, v4);
  uint64_t v11 = *(void *)(v6 + 48) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(v13 + 24);
  *(void *)(v12 + 24) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  (**(void (***)(void))(v14 - 8))();
  unint64_t v15 = (v11 & 0xFFFFFFFFFFFFFFF8) + 40;
  unint64_t v16 = (v15 + v8 + v9) & ~v8;
  unint64_t v17 = (v15 + v8 + v10) & ~v8;
  v5(v16, v17, v4);
  unint64_t v18 = (v11 + v16) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(v19 + 24);
  *(void *)(v18 + 24) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  (**(void (***)(void))(v20 - 8))();
  *(void *)(v16 + v15) = *(void *)(v17 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_236D3535C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 24);
  uint64_t v9 = v7 + 24;
  uint64_t v10 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  v10 += 15;
  unint64_t v12 = ((unint64_t)a1 + v10) & ~v11;
  unint64_t v13 = ((unint64_t)a2 + v10) & ~v11;
  v8(v12, v13, v6);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v15 = (v14 & 0xFFFFFFFFFFFFFFF8) + 40;
  unint64_t v16 = (v15 + v11 + v12) & ~v11;
  unint64_t v17 = (v15 + v11 + v13) & ~v11;
  v8(v16, v17, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((v14 + v16) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((v14 + v17) & 0xFFFFFFFFFFFFFFF8));
  *(void *)(v16 + v15) = *(void *)(v17 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_236D35494(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  v8 += 15;
  unint64_t v10 = ((unint64_t)a1 + v8) & ~v9;
  unint64_t v11 = ((unint64_t)a2 + v8) & ~v9;
  v6(v10, v11, v4);
  uint64_t v12 = *(void *)(v7 + 32) + 7;
  unint64_t v13 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v14 + 32);
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(void *)(v13 + 32) = v15;
  unint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 40;
  unint64_t v18 = (v17 + v9 + v10) & ~v9;
  unint64_t v19 = (v17 + v9 + v11) & ~v9;
  v6(v18, v19, v4);
  unint64_t v20 = (v12 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v12 + v19) & 0xFFFFFFFFFFFFFFF8;
  long long v23 = *(_OWORD *)v21;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(_OWORD *)unint64_t v20 = v23;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v18 + v17) = *(void *)(v19 + v17);
  return a1;
}

void *sub_236D355BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 40);
  uint64_t v9 = v7 + 40;
  uint64_t v10 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  v10 += 15;
  unint64_t v12 = ((unint64_t)a1 + v10) & ~v11;
  unint64_t v13 = ((unint64_t)a2 + v10) & ~v11;
  v8(v12, v13, v6);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v15);
  long long v17 = *(_OWORD *)v16;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(_OWORD *)unint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 40;
  unint64_t v20 = (v19 + v11 + v12) & ~v11;
  unint64_t v21 = (v19 + v11 + v13) & ~v11;
  v8(v20, v21, v6);
  unint64_t v22 = (v14 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v14 + v21) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v22);
  long long v24 = *(_OWORD *)v23;
  long long v25 = *(_OWORD *)(v23 + 16);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(_OWORD *)unint64_t v22 = v24;
  *(_OWORD *)(v22 + 16) = v25;
  *(void *)(v20 + v19) = *(void *)(v21 + v19);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236D3570C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  if (v7 < a2)
  {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    unint64_t v10 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)
        + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + ((v8 + 15) & ~v9) + 40) & ~v9)
        + 48;
    unsigned int v11 = a2 - v7;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *((unsigned __int8 *)a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236D35878);
      case 4:
        int v16 = *(_DWORD *)((char *)a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *a1;
        }
        return v7 + (v12 | v18) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v9 + 8) & ~v9);
  }
  uint64_t v19 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_236D3588C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  size_t v11 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
      + ((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
        + v10
        + ((v9 + 15) & ~(v9 | 7))
        + 40) & ~v10)
      + 48;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v20 = (unint64_t)&a1[v10 + 8] & ~v10;
              unint64_t v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v19 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
       + ((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
         + v10
         + ((v9 + 15) & ~(v9 | 7))
         + 40) & ~v10) == -48)
      unsigned int v13 = v12 + 1;
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
     + ((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
       + v10
       + ((v9 + 15) & ~(v9 | 7))
       + 40) & ~v10) == -48)
    int v17 = v16;
  else {
    int v17 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
     + ((((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFF8)
       + v10
       + ((v9 + 15) & ~(v9 | 7))
       + 40) & ~v10) != -48)
  {
    int v18 = ~v8 + a2;
    bzero(a1, v11);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x236D35A90);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_236D35AB8(uint64_t a1)
{
  uint64_t v2 = sub_236DB9830();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  BOOL v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_236D365E8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  uint64_t v29 = sub_236DB9E20();
  if (v10)
  {
    unsigned int v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    long long v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    long long v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    int v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    int v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_236D2FFB4(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_236D35D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  uint64_t v39 = a1;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v35 = a3;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v11 = sub_236DB9C10();
  uint64_t v12 = sub_236DB9830();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = sub_236DB74FC((void (*)(char *, char *))sub_236D35EF8, (uint64_t)v29, v11, v12, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v14);
  uint64_t v16 = sub_236D35AB8(v15);
  swift_bridgeObjectRelease();
  uint64_t v35 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = v7;
  uint64_t v18 = sub_236DB74FC((void (*)(char *, char *))sub_236D35EF8, (uint64_t)v23, v11, v12, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v17);
  uint64_t v19 = sub_236D35AB8(v18);
  swift_bridgeObjectRelease();
  LOBYTE(v7) = sub_236D708BC(v16, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_236D35EF8()
{
  return sub_236D35F10();
}

uint64_t sub_236D35F10()
{
  return RelationshipResolver.ModelProxy.id.getter();
}

uint64_t sub_236D35F7C()
{
  return Array<A>.subscript.getter();
}

unint64_t sub_236D35F98()
{
  return ((*(void *)(*(void *)(sub_236DB9830() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 48;
}

__n128 sub_236D36010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a2, a1, v4);
  unint64_t v6 = (*(void *)(v5 + 48) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v10 = *(_OWORD *)(v7 + 16);
  __n128 result = *(__n128 *)(v7 + 32);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v7;
  *(_OWORD *)(v8 + 16) = v10;
  *(__n128 *)(v8 + 32) = result;
  return result;
}

uint64_t sub_236D3609C()
{
  return sub_236D2FA60() & 1;
}

__n128 sub_236D360BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 32))(a2, a1 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
  uint64_t v7 = a2 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v9 = *(_OWORD *)(a1 + 16);
  __n128 result = *(__n128 *)(a1 + 32);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v9;
  *(__n128 *)(v7 + 32) = result;
  return result;
}

uint64_t sub_236D36150()
{
  return Array<A>.subscript.getter();
}

unint64_t sub_236D3616C()
{
  return ((*(void *)(*(void *)(sub_236DB9830() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
}

__n128 sub_236D361E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a2, a1, v4);
  unint64_t v6 = (*(void *)(v5 + 48) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(v7 + 32);
  __n128 result = *(__n128 *)(v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  *(void *)(v8 + 32) = v9;
  return result;
}

uint64_t sub_236D36270()
{
  return sub_236D2FA60() & 1;
}

uint64_t keypath_hashTm()
{
  return sub_236DB99D0();
}

__n128 sub_236D362FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 32))(a2, a1 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
  uint64_t v7 = a2 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(__n128 *)(v7 + 16) = result;
  *(void *)(v7 + 32) = v8;
  return result;
}

unint64_t sub_236D36390()
{
  unint64_t result = qword_2688D1E00;
  if (!qword_2688D1E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1E00);
  }
  return result;
}

unint64_t sub_236D363E4()
{
  unint64_t result = qword_2688D1AB0;
  if (!qword_2688D1AB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2688D1AB0);
  }
  return result;
}

uint64_t sub_236D36424(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  sub_236D363E4();
  sub_236D365E8(&qword_2688D1E20, (void (*)(uint64_t))sub_236D363E4);
  uint64_t result = sub_236DB9E20();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_236DBA460();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x237E0F570](i, a1);
        sub_236D309DC(&v9, v6, (void (*)(void))sub_236D363E4, &qword_2688D1E18, (void (*)(void))sub_236D363E4);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_236D309DC(&v9, v8, (void (*)(void))sub_236D363E4, &qword_2688D1E18, (void (*)(void))sub_236D363E4);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236D365E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D36630(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_236D36390();
  uint64_t result = sub_236DB9E20();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_236D302FC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_236D366A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_236D366AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D366B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a8;
  uint64_t v20 = a5;
  uint64_t v21 = a2;
  *(void *)&long long v24 = sub_236D4BA20();
  *((void *)&v24 + 1) = v12;
  uint64_t v25 = 0;
  char v26 = 1;
  uint64_t v27 = 0;
  uint64_t v13 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(a6 + 32))(&v24, a3, a6);
  if (v9)
  {
    long long v32 = v24;
    sub_236D369A0((uint64_t)&v32);
    sub_236D26768((uint64_t)&v25, (uint64_t)&v33, &qword_2688D1E38);
    sub_236D369CC(&v33);
    sub_236D26768((uint64_t)&v27, (uint64_t)v31, &qword_2688D1E40);
    sub_236D369F8((uint64_t)v31);
  }
  else
  {
    uint64_t v16 = &v25;
    uint64_t v19 = &v27;
    uint64_t v18 = &v15;
    uint64_t v17 = v13;
    uint64_t v23 = v13;
    MEMORY[0x270FA5388](v13);
    swift_getAssociatedTypeWitness();
    sub_236DB9C10();
    swift_getWitnessTable();
    uint64_t v8 = sub_236DB9AD0();
    long long v30 = v24;
    sub_236D369A0((uint64_t)&v30);
    sub_236D26768((uint64_t)v16, (uint64_t)&v29, &qword_2688D1E38);
    sub_236D369CC(&v29);
    sub_236D26768((uint64_t)v19, (uint64_t)v28, &qword_2688D1E40);
    sub_236D369F8((uint64_t)v28);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_236D369A0(uint64_t a1)
{
  return a1;
}

id *sub_236D369CC(id *a1)
{
  return a1;
}

uint64_t sub_236D369F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_236D36A24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[3];
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, void, void))(v2[8] + 40))(*a1, v5, v5, v2[6], v2[4]);
  if (!v3) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
  }
  return result;
}

uint64_t sub_236D36ABC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_236D36BB4()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D1E48);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D1E48);
  return sub_236DB9940();
}

uint64_t sub_236D36C34(uint64_t a1)
{
  *(void *)(v2 + 64) = v1;
  uint64_t v4 = *v1;
  *(void *)(v2 + 72) = *v1;
  uint64_t v5 = *(void *)(v4 + 88);
  *(void *)(v2 + 80) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v2 + 88) = v6;
  *(void *)(v2 + 96) = *(void *)(v6 + 64);
  *(void *)(v2 + 104) = swift_task_alloc();
  *(_OWORD *)(v2 + 112) = *(_OWORD *)a1;
  *(void *)(v2 + 128) = *(void *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_236D36D4C, v1, 0);
}

uint64_t sub_236D36D4C()
{
  unint64_t v1 = v0;
  uint64_t v22 = (uint64_t)(v0 + 6);
  uint64_t v2 = v0[14];
  uint64_t v20 = v0[15];
  uint64_t v21 = v0[16];
  uint64_t v19 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = (void *)v1[9];
  uint64_t v5 = v1[10];
  uint64_t v6 = v1[8];
  v1[7] = v6;
  (*(void (**)(void))(v3 + 16))();
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = (char *)swift_allocObject();
  v1[17] = v8;
  uint64_t v9 = v4[10];
  v1[18] = v9;
  *((void *)v8 + 2) = v9;
  *((void *)v8 + 3) = v5;
  uint64_t v10 = v5;
  uint64_t v18 = v5;
  uint64_t v11 = v4[12];
  v1[19] = v11;
  *((void *)v8 + 4) = v11;
  uint64_t v12 = v4[13];
  v1[20] = v12;
  *((void *)v8 + 5) = v12;
  *((void *)v8 + 6) = v6;
  *((void *)v8 + 7) = v2;
  *((void *)v8 + 8) = v20;
  *((void *)v8 + 9) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v8[v7], v19, v10);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)swift_task_alloc();
  v1[21] = v13;
  v1[2] = v9;
  v1[3] = v18;
  v1[4] = v11;
  v1[5] = v12;
  uint64_t v14 = type metadata accessor for ModelStateSubscriptionManager();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1FA8);
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v13 = v1;
  v13[1] = sub_236D36F78;
  return sub_236D501D0(v22, (uint64_t)sub_236D38EE4, (uint64_t)v8, v14, v15, WitnessTable);
}

uint64_t sub_236D36F78()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_236D370A4, v1, 0);
}

uint64_t sub_236D370A4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  *(void *)(v0 + 176) = v4;
  uint64_t v5 = *(void *)(v3 + *(void *)(*(void *)v3 + 144));
  *(void *)(v0 + 184) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 192) = v6;
  long long v7 = *(_OWORD *)(v0 + 152);
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(void *)(v6 + 48) = v4;
  return MEMORY[0x270FA2498](sub_236D37158, v5, 0);
}

uint64_t sub_236D37158()
{
  sub_236D17364(v0[22], (uint64_t (*)(char *))sub_236D38F3C, v0[24]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D371FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, void *a7@<X8>)
{
  uint64_t v10 = (void *)*a2;
  *a7 = MEMORY[0x263F8EE78];
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v13 = v10[10];
  uint64_t v14 = v10[11];
  uint64_t v15 = v10[12];
  uint64_t v16 = v10[13];
  uint64_t v17 = sub_236D39F78(&v25, a1, (uint64_t)a6, v13, v14, v15, v16);
  sub_236D5AF58(v17);
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  sub_236D3A538((uint64_t)&v25, a1, (uint64_t)a6, v13, v14, v15, v16);
  sub_236D5AF58(v18);
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v19 = sub_236D3AB90((uint64_t)&v25, a1, (uint64_t)a6, v13, v14, v15, v16);
  sub_236D5AF58(v19);
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v20 = sub_236D3B454((uint64_t)&v25, a1, a6, v13, v14, v15, v16);
  return sub_236D5AF58(v20);
}

uint64_t sub_236D37384(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = *a1;
    uint64_t v5 = *(void *)(type metadata accessor for AnyModelStateChange(0) - 8);
    uint64_t v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v8 = v2 - 1;
    do
    {
      uint64_t v9 = v8;
      LOBYTE(v2) = sub_236D37484(v6, v4);
      if (v2) {
        break;
      }
      uint64_t v8 = v9 - 1;
      v6 += v7;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

BOOL sub_236D37484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyModelStateChange.Tombstone(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AnyModelStateChange(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D3B9A8(a1, (uint64_t)v9, type metadata accessor for AnyModelStateChange);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_236D3BA78((uint64_t)v9, (uint64_t)v6, type metadata accessor for AnyModelStateChange.Tombstone);
      uint64_t v13 = *(void *)(a2 + 16);
      if (v13)
      {
        int v14 = v6[*(int *)(v4 + 20)];
        uint64_t v15 = (unsigned __int8 *)(a2 + 32);
        uint64_t v16 = v13 - 1;
        do
        {
          int v17 = *v15++;
          BOOL v12 = v17 == v14;
        }
        while (v17 != v14 && v16-- != 0);
      }
      else
      {
        BOOL v12 = 0;
      }
      sub_236D3BAE0((uint64_t)v6, type metadata accessor for AnyModelStateChange.Tombstone);
    }
    else
    {
      sub_236D3BAE0((uint64_t)v9, type metadata accessor for AnyModelStateChange);
      return 0;
    }
  }
  else
  {
    long long v11 = *((_OWORD *)v9 + 1);
    v20[0] = *(_OWORD *)v9;
    v20[1] = v11;
    uint64_t v21 = *((void *)v9 + 4);
    BOOL v12 = sub_236D39914(v20, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  return v12;
}

uint64_t sub_236D3765C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ModelStateSubscriptionManager.RelationshipModelSet();
  *(void *)(a4 + *(int *)(v8 + 56)) = MEMORY[0x263F8EE80];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4 + *(int *)(v8 + 52), a2, a3);
}

void sub_236D377B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v47 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v48 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v6 = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v46 = v6;
LABEL_6:
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_22:
    uint64_t v13 = *(void *)(v6 + 56) + 16 * v9;
    uint64_t v14 = *(void *)(v13 + 8);
    if (*(void *)(v14 + 16))
    {
      int64_t v49 = v7;
      uint64_t v15 = *(void **)(*(void *)(v6 + 48) + 8 * v9);
      uint64_t v16 = *(void **)v13;
      swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      uint64_t v18 = swift_getAssociatedConformanceWitness();
      uint64_t v19 = *(void (**)(id, uint64_t, uint64_t))(v18 + 56);
      id v20 = v15;
      id v50 = v16;
      swift_bridgeObjectRetain();
      uint64_t v21 = swift_checkMetadataState();
      uint64_t v51 = v20;
      v19(v20, v21, v18);
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
      uint64_t v23 = swift_checkMetadataState();
      id v54 = (id)v22(v23, AssociatedConformanceWitness);
      uint64_t v24 = v14 + 56;
      uint64_t v25 = 1 << *(unsigned char *)(v14 + 32);
      if (v25 < 64) {
        uint64_t v26 = ~(-1 << v25);
      }
      else {
        uint64_t v26 = -1;
      }
      unint64_t v27 = v26 & *(void *)(v14 + 56);
      int64_t v28 = (unint64_t)(v25 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v29 = 0;
      while (1)
      {
        while (1)
        {
          do
          {
            if (v27)
            {
              unint64_t v30 = __clz(__rbit64(v27));
              v27 &= v27 - 1;
              unint64_t v31 = v30 | (v29 << 6);
            }
            else
            {
              int64_t v32 = v29 + 1;
              if (__OFADD__(v29, 1))
              {
                __break(1u);
LABEL_59:
                __break(1u);
                goto LABEL_60;
              }
              if (v32 >= v28) {
                goto LABEL_5;
              }
              unint64_t v33 = *(void *)(v24 + 8 * v32);
              ++v29;
              if (!v33)
              {
                int64_t v29 = v32 + 1;
                if (v32 + 1 >= v28) {
                  goto LABEL_5;
                }
                unint64_t v33 = *(void *)(v24 + 8 * v29);
                if (!v33)
                {
                  int64_t v29 = v32 + 2;
                  if (v32 + 2 >= v28) {
                    goto LABEL_5;
                  }
                  unint64_t v33 = *(void *)(v24 + 8 * v29);
                  if (!v33)
                  {
                    int64_t v34 = v32 + 3;
                    if (v34 >= v28)
                    {
LABEL_5:

                      swift_release();
                      swift_bridgeObjectRelease();

                      swift_unknownObjectRelease();
                      uint64_t v6 = v46;
                      int64_t v7 = v49;
                      goto LABEL_6;
                    }
                    unint64_t v33 = *(void *)(v24 + 8 * v34);
                    if (!v33)
                    {
                      while (1)
                      {
                        int64_t v29 = v34 + 1;
                        if (__OFADD__(v34, 1)) {
                          goto LABEL_59;
                        }
                        if (v29 >= v28) {
                          goto LABEL_5;
                        }
                        unint64_t v33 = *(void *)(v24 + 8 * v29);
                        ++v34;
                        if (v33) {
                          goto LABEL_43;
                        }
                      }
                    }
                    int64_t v29 = v34;
                  }
                }
              }
LABEL_43:
              unint64_t v27 = (v33 - 1) & v33;
              unint64_t v31 = __clz(__rbit64(v33)) + (v29 << 6);
            }
            uint64_t v35 = *(void *)(v14 + 48) + 24 * v31;
          }
          while ((*(char *)(v35 + 16) & 0x80000000) == 0);
          uint64_t v36 = *(void *)v35;
          uint64_t v37 = *(void *)(v35 + 8);
          swift_bridgeObjectRetain();
          id v38 = objc_msgSend(v54, sel_relationshipsByName);
          sub_236D3B924();
          uint64_t v39 = sub_236DB9990();

          if (*(void *)(v39 + 16))
          {
            unint64_t v40 = sub_236D85920(v36, v37);
            if (v41) {
              break;
            }
          }
          swift_bridgeObjectRelease();
          sub_236D366AC();
        }
        id v53 = *(id *)(*(void *)(v39 + 56) + 8 * v40);
        swift_bridgeObjectRelease();
        sub_236D366AC();
        sub_236D39108(v53, a2);
        if (sub_236D38FF4(a2)) {
          break;
        }
      }
      if (qword_2688D1258 != -1) {
        goto LABEL_62;
      }
      goto LABEL_50;
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_once();
LABEL_50:
    uint64_t v42 = sub_236DB9950();
    __swift_project_value_buffer(v42, (uint64_t)qword_2688D1E48);
    uint64_t v43 = sub_236DB9930();
    os_log_type_t v44 = sub_236DB9F40();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_236D14000, v43, v44, "Change set matched all relationship model types", v45, 2u);
      MEMORY[0x237E101A0](v45, -1, -1);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    swift_unknownObjectRelease();

    return;
  }
  if (v10 >= v48) {
    goto LABEL_55;
  }
  unint64_t v11 = *(void *)(v47 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v48) {
    goto LABEL_55;
  }
  unint64_t v11 = *(void *)(v47 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v48) {
    goto LABEL_55;
  }
  unint64_t v11 = *(void *)(v47 + 8 * v7);
  if (v11)
  {
LABEL_21:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 3;
  if (v12 < v48)
  {
    unint64_t v11 = *(void *)(v47 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v7 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_61;
        }
        if (v7 >= v48) {
          goto LABEL_55;
        }
        unint64_t v11 = *(void *)(v47 + 8 * v7);
        ++v12;
        if (v11) {
          goto LABEL_21;
        }
      }
    }
    int64_t v7 = v12;
    goto LABEL_21;
  }
LABEL_55:
  swift_release();
}

void *sub_236D37DA8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_236D7E464(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t *sub_236D37DE8()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 128));
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_236D37EF4()
{
  sub_236D37DE8();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for ModelStateSubscriptionManager()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ModelStateSubscriptionManager.ObserverContext()
{
  return swift_getGenericMetadata();
}

uint64_t sub_236D37F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a1 + 80) - 8) + 16))(a2, *(void *)v2 + *(void *)(**(void **)v2 + 120));
}

uint64_t sub_236D37F9C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1F88);
  v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[6] = v4;
  v2[7] = *(void *)(v4 + 64);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D380C0, v1, 0);
}

uint64_t sub_236D380C0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  if (!*(void *)(v1 + v2))
  {
    uint64_t v4 = v0[8];
    uint64_t v3 = v0[9];
    uint64_t v5 = v0[6];
    uint64_t v17 = v0[7];
    uint64_t v18 = v3;
    uint64_t v7 = v0[4];
    uint64_t v6 = v0[5];
    uint64_t v8 = v0[2];
    uint64_t v9 = sub_236DB9C90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = v8;
    uint64_t v12 = v6;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v11, v6);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = *(void *)(v7 + 80);
    *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 88);
    *(void *)(v14 + 56) = *(void *)(v7 + 104);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v14 + v13, v4, v12);
    *(void *)(v14 + ((v17 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v10;
    *(void *)(v1 + v2) = sub_236D795C0(v18, (uint64_t)&unk_2688D1F98, v14);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_236D382A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1FA0);
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D38370, 0, 0);
}

uint64_t sub_236D38370()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1F88);
  sub_236DB9D00();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D38464;
  uint64_t v2 = *(void *)(v0 + 104);
  return MEMORY[0x270FA1F68](v0 + 40, 0, 0, v2);
}

uint64_t sub_236D38464()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D38560, 0, 0);
}

uint64_t sub_236D38560()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  v0[17] = v2;
  v0[18] = v1;
  uint64_t v3 = v0[7];
  v0[19] = v3;
  if (v2)
  {
    uint64_t Strong = swift_weakLoadStrong();
    v0[20] = Strong;
    if (Strong)
    {
      v0[8] = v2;
      v0[9] = v1;
      v0[10] = v3;
      uint64_t v5 = (void *)swift_task_alloc();
      v0[21] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_236D386C0;
      return sub_236D36C34((uint64_t)(v0 + 8));
    }
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    sub_236D38DBC(v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  }
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_236D386C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  sub_236D38DBC(v1);
  return MEMORY[0x270FA2498](sub_236D38810, 0, 0);
}

uint64_t sub_236D38810()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D38464;
  uint64_t v2 = *(void *)(v0 + 104);
  return MEMORY[0x270FA1F68](v0 + 40, 0, 0, v2);
}

uint64_t sub_236D388C4(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_236D388E8, v2, 0);
}

uint64_t sub_236D388E8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v0[5] + *(void *)(*(void *)v0[5] + 144));
  v0[6] = v2;
  v0[2] = v1;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_236D38974, v2, 0);
}

uint64_t sub_236D38974()
{
  sub_236D1698C(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D389E4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_236D26C08;
  return sub_236D37F9C(a1);
}

uint64_t sub_236D38A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_236D26C08;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return MEMORY[0x270FA2498](sub_236D388E8, v6, 0);
}

uint64_t sub_236D38B3C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_236D38B44()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236D38B7C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1F88);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D38C68(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D1F88) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_236D17ED0;
  return sub_236D382A8(a1, v6, v7, v8, v9);
}

uint64_t sub_236D38DBC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236D38E08()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D38EE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_236D371FC(a1, *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), (char *)(v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 24) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 24) - 8) + 80))), a2);
}

uint64_t sub_236D38F3C(uint64_t *a1)
{
  return sub_236D37384(a1, *(void *)(v1 + 48));
}

uint64_t sub_236D38F4C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1FB8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_236DBE190;
  uint64_t v1 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
  uint64_t v2 = sub_236D3B964(&qword_2688D1FC0);
  uint64_t v3 = sub_236D3B964(&qword_2688D1FC8);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  return v0;
}

uint64_t sub_236D38FF4(uint64_t a1)
{
  uint64_t v3 = sub_236D38F4C();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(v1 + *(int *)(a1 + 56));
    uint64_t v6 = v3 + 48;
    while (1)
    {
      (*(void (**)(uint64_t *__return_ptr))(*(void *)(*(void *)v6 + 8) + 48))(&v12);
      if (!*(void *)(v5 + 16)) {
        break;
      }
      unint64_t v7 = sub_236D859DC(v12);
      if ((v8 & 1) == 0) {
        break;
      }
      sub_236D1B32C(*(void *)(v5 + 56) + 40 * v7, (uint64_t)v10);
      sub_236D267CC((uint64_t)v10, &qword_2688D1FB0);
      v6 += 24;
      if (!--v4) {
        goto LABEL_6;
      }
    }
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_236D267CC((uint64_t)v10, &qword_2688D1FB0);
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t sub_236D39108(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_236D38F4C();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 48);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      v6 += 3;
      sub_236D3918C(a1, v7, a2, v7, v8, v9);
      --v5;
    }
    while (v5);
  }
  return swift_bridgeObjectRelease();
}

void sub_236D3918C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v55 = a2;
  uint64_t v13 = sub_236DBA090();
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  id v54 = (char *)&v47 - v15;
  uint64_t v16 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v14);
  id v53 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a6 + 8);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v18 + 48))(&v58, a4, v18);
  int v19 = v58;
  uint64_t v51 = (uint64_t *)(v6 + *(int *)(a3 + 56));
  uint64_t v20 = *v51;
  uint64_t v21 = *(void *)(*v51 + 16);
  uint64_t v56 = a6;
  if (!v21) {
    goto LABEL_4;
  }
  uint64_t v22 = v18;
  uint64_t v23 = a3;
  uint64_t v24 = v13;
  uint64_t v25 = a4;
  uint64_t v26 = a1;
  uint64_t v27 = v16;
  uint64_t v28 = v7;
  uint64_t v29 = a5;
  int v30 = v58;
  unint64_t v31 = sub_236D859DC(v58);
  int v19 = v30;
  a5 = v29;
  uint64_t v7 = v28;
  uint64_t v16 = v27;
  a1 = v26;
  a4 = v25;
  uint64_t v13 = v24;
  a3 = v23;
  uint64_t v18 = v22;
  if (v32)
  {
    sub_236D1B32C(*(void *)(v20 + 56) + 40 * v31, (uint64_t)&v58);
    sub_236D267CC((uint64_t)&v58, &qword_2688D1FB0);
  }
  else
  {
LABEL_4:
    int v50 = v19;
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    sub_236D267CC((uint64_t)&v58, &qword_2688D1FB0);
    if (sub_236D49000(a1))
    {
      uint64_t v47 = v13;
      uint64_t v48 = v16;
      uint64_t v49 = v7 + *(int *)(a3 + 52);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v34 = *(void *)(a3 + 24);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      *(void *)&long long v58 = sub_236D366B4(v55, v49, AssociatedTypeWitness, a4, v34, AssociatedConformanceWitness, a5, v18);
      sub_236DB9C10();
      swift_getWitnessTable();
      uint64_t v36 = v54;
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
      uint64_t v37 = v48;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v36, 1, a4) == 1)
      {
        (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v47);
        if (qword_2688D1258 != -1) {
          swift_once();
        }
        uint64_t v38 = sub_236DB9950();
        __swift_project_value_buffer(v38, (uint64_t)qword_2688D1E48);
        uint64_t v39 = sub_236DB9930();
        os_log_type_t v40 = sub_236DB9F50();
        if (os_log_type_enabled(v39, v40))
        {
          char v41 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(void *)&long long v58 = v42;
          *(_DWORD *)char v41 = 136315138;
          uint64_t v43 = sub_236DBA7A0();
          uint64_t v57 = sub_236DB6880(v43, v44, (uint64_t *)&v58);
          sub_236DBA0B0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_236D14000, v39, v40, "Relationship model is not present: %s", v41, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x237E101A0](v42, -1, -1);
          MEMORY[0x237E101A0](v41, -1, -1);
        }
      }
      else
      {
        uint64_t v45 = v53;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v53, v36, a4);
        *((void *)&v59 + 1) = a4;
        uint64_t v60 = v56;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v58);
        (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(boxed_opaque_existential_0, v45, a4);
        sub_236D94E34((uint64_t)&v58, v50);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v45, a4);
      }
    }
  }
}

BOOL sub_236D39914(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_236D2BCA0(v3, v4);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (unsigned __int8 *)(a2 + 32);
  uint64_t v7 = v5 - 1;
  do
  {
    int v8 = *v6++;
    BOOL result = v8 == v11;
  }
  while (v8 != v11 && v7-- != 0);
  return result;
}

uint64_t sub_236D3999C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_236D39B00((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_236D39B00((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x237E101A0](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_236D39B00(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if ((*(char *)(*(void *)(a3 + 48) + 24 * v14 + 16) & 0x80000000) == 0)
    {
      *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_236D39C7C(v5, a2, v6, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_236D39C7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_38:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E30);
  uint64_t result = sub_236DBA250();
  uint64_t v9 = result;
  unint64_t v33 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  uint64_t v34 = result;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v35 = v11;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_41;
    }
    if (v15 >= a2) {
      goto LABEL_38;
    }
    unint64_t v16 = v33[v15];
    uint64_t v17 = v11 + 1;
    if (!v16)
    {
      uint64_t v17 = v11 + 2;
      if (v11 + 2 >= a2) {
        goto LABEL_38;
      }
      unint64_t v16 = v33[v17];
      if (!v16)
      {
        uint64_t v17 = v11 + 3;
        if (v11 + 3 >= a2) {
          goto LABEL_38;
        }
        unint64_t v16 = v33[v17];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    uint64_t v35 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v4 + 48) + 24 * v14;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    int v22 = *(char *)(v19 + 16);
    sub_236DBA6E0();
    sub_236DBA6F0();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    if (v22 < 0)
    {
      uint64_t v9 = v34;
      sub_236DBA700();
    }
    uint64_t result = sub_236DBA710();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = *(void *)(v9 + 48) + 24 * v26;
    *(void *)uint64_t v31 = v20;
    *(void *)(v31 + 8) = v21;
    *(unsigned char *)(v31 + 16) = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t v11 = v35;
    if (!v5) {
      goto LABEL_38;
    }
  }
  uint64_t v18 = v11 + 4;
  if (v11 + 4 >= a2) {
    goto LABEL_38;
  }
  unint64_t v16 = v33[v18];
  if (v16)
  {
    uint64_t v17 = v11 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= a2) {
      goto LABEL_38;
    }
    unint64_t v16 = v33[v17];
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_236D39F78(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v62 = a6;
  uint64_t v63 = a7;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v8 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  long long v58 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v12 = MEMORY[0x270FA5388](v56);
  uint64_t v50 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = v14;
  uint64_t v49 = (uint64_t)&v48 - v15;
  uint64_t v16 = *a1;
  uint64_t v17 = *(void *)(*a1 + 64);
  uint64_t v52 = *a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  int64_t v53 = (unint64_t)(v18 + 63) >> 6;
  id v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  uint64_t v64 = v16;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  unint64_t v51 = MEMORY[0x263F8EE78];
  if (!v20) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  int64_t v65 = v22;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v39)) + (v40 << 6))
  {
    uint64_t v25 = 8 * i;
    unint64_t v26 = *(void **)(*(void *)(v64 + 48) + v25);
    char v27 = *(void **)(*(void *)(v64 + 56) + v25);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    BOOL v29 = *(uint64_t (**)(id, uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
    id v30 = v26;
    id v31 = v27;
    uint64_t v32 = swift_checkMetadataState();
    uint64_t v33 = v29(v30, v32, AssociatedConformanceWitness);
    id v66 = v31;
    uint64_t v34 = (uint64_t)v58;
    uint64_t v35 = v61;
    (*v55)(v58, v59, v61);
    id v36 = v31;
    swift_unknownObjectRetain();
    swift_checkMetadataState();
    uint64_t v37 = v57;
    sub_236D5F504(&v66, v33, v34, v35, v63, v57);
    if ((*v54)(v37, 1, v56) == 1)
    {

      swift_unknownObjectRelease();
      uint64_t result = sub_236D267CC(v37, &qword_2688D18E8);
      int64_t v22 = v65;
      if (v20) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v42 = v37;
      uint64_t v43 = v49;
      sub_236D3BA78(v42, v49, type metadata accessor for AnyModelStateChange);
      sub_236D3B9A8(v43, v50, type metadata accessor for AnyModelStateChange);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v51 = sub_236D55C58(0, *(void *)(v51 + 16) + 1, 1, v51);
      }
      unint64_t v45 = *(void *)(v51 + 16);
      unint64_t v44 = *(void *)(v51 + 24);
      if (v45 >= v44 >> 1) {
        unint64_t v51 = sub_236D55C58(v44 > 1, v45 + 1, 1, v51);
      }
      uint64_t v46 = v50;
      unint64_t v47 = v51;
      *(void *)(v51 + 16) = v45 + 1;
      sub_236D3BA78(v46, v47+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v45, type metadata accessor for AnyModelStateChange);

      swift_unknownObjectRelease();
      uint64_t result = sub_236D3BAE0(v49, type metadata accessor for AnyModelStateChange);
      int64_t v22 = v65;
      if (v20) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v38 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v38 >= v53) {
      goto LABEL_27;
    }
    unint64_t v39 = *(void *)(v52 + 8 * v38);
    int64_t v40 = v22 + 1;
    if (!v39)
    {
      int64_t v40 = v22 + 2;
      if (v22 + 2 >= v53) {
        goto LABEL_27;
      }
      unint64_t v39 = *(void *)(v52 + 8 * v40);
      if (!v39)
      {
        int64_t v40 = v22 + 3;
        if (v22 + 3 >= v53) {
          goto LABEL_27;
        }
        unint64_t v39 = *(void *)(v52 + 8 * v40);
        if (!v39) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v20 = (v39 - 1) & v39;
    int64_t v65 = v40;
  }
  uint64_t v41 = v22 + 4;
  if (v22 + 4 >= v53)
  {
LABEL_27:
    swift_release();
    return v51;
  }
  unint64_t v39 = *(void *)(v52 + 8 * v41);
  if (v39)
  {
    int64_t v40 = v22 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v40 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v40 >= v53) {
      goto LABEL_27;
    }
    unint64_t v39 = *(void *)(v52 + 8 * v40);
    ++v41;
    if (v39) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_236D3A538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a6;
  uint64_t v62 = a7;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v8 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v57 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v13 = MEMORY[0x270FA5388](v56);
  uint64_t v51 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v50 = (uint64_t)&v48 - v16;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v63 = v17 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v64 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v15;
  id v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  uint64_t v65 = v17;
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v23 = 0;
  unint64_t v52 = MEMORY[0x263F8EE78];
  int64_t v53 = v12;
  while (v21)
  {
    unint64_t v24 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v25 = v24 | (v22 << 6);
LABEL_18:
    BOOL v29 = *(void **)(*(void *)(v65 + 48) + 8 * v25);
    long long v68 = *(_OWORD *)(*(void *)(v65 + 56) + 16 * v25);
    id v30 = v29;
    id v31 = (id)v68;
    uint64_t v32 = *((void *)&v68 + 1);
    swift_bridgeObjectRetain_n();
    uint64_t v33 = *(void *)(sub_236D3999C(v32) + 16);
    swift_release();
    if (v33)
    {
      uint64_t v66 = v23;
      int64_t v34 = v22;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      id v67 = v30;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      id v36 = *(uint64_t (**)(id, uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
      id v37 = v67;
      uint64_t v38 = swift_checkMetadataState();
      uint64_t v39 = v36(v37, v38, AssociatedConformanceWitness);
      long long v69 = v68;
      uint64_t v40 = (uint64_t)v57;
      uint64_t v41 = v60;
      (*v55)(v57, v58, v60);
      id v42 = v31;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v43 = (uint64_t)v53;
      swift_checkMetadataState();
      sub_236D5F88C((void **)&v69, v39, v40, v41, v62, v43);
      if ((*v54)(v43, 1, v56) == 1)
      {
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        sub_236D267CC(v43, &qword_2688D18E8);
        int64_t v22 = v34;
        uint64_t v23 = v66;
      }
      else
      {
        uint64_t v44 = v50;
        sub_236D3BA78(v43, v50, type metadata accessor for AnyModelStateChange);
        sub_236D3B9A8(v44, v51, type metadata accessor for AnyModelStateChange);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v52 = sub_236D55C58(0, *(void *)(v52 + 16) + 1, 1, v52);
        }
        int64_t v22 = v34;
        unint64_t v46 = *(void *)(v52 + 16);
        unint64_t v45 = *(void *)(v52 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v52 = sub_236D55C58(v45 > 1, v46 + 1, 1, v52);
        }
        unint64_t v47 = v52;
        *(void *)(v52 + 16) = v46 + 1;
        sub_236D3BA78(v51, v47+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v46, type metadata accessor for AnyModelStateChange);
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        sub_236D3BAE0(v50, type metadata accessor for AnyModelStateChange);
        uint64_t v23 = v66;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v22++, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v22 >= v64) {
    goto LABEL_30;
  }
  unint64_t v27 = *(void *)(v63 + 8 * v22);
  if (v27)
  {
LABEL_17:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
    goto LABEL_18;
  }
  int64_t v28 = v22 + 1;
  if (v22 + 1 >= v64) {
    goto LABEL_30;
  }
  unint64_t v27 = *(void *)(v63 + 8 * v28);
  if (v27) {
    goto LABEL_16;
  }
  int64_t v28 = v22 + 2;
  if (v22 + 2 >= v64) {
    goto LABEL_30;
  }
  unint64_t v27 = *(void *)(v63 + 8 * v28);
  if (v27) {
    goto LABEL_16;
  }
  int64_t v28 = v22 + 3;
  if (v22 + 3 >= v64)
  {
LABEL_30:
    swift_release();
    return;
  }
  unint64_t v27 = *(void *)(v63 + 8 * v28);
  if (v27)
  {
LABEL_16:
    int64_t v22 = v28;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v22 >= v64) {
      goto LABEL_30;
    }
    unint64_t v27 = *(void *)(v63 + 8 * v22);
    ++v28;
    if (v27) {
      goto LABEL_17;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_236D3AB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v85 = a6;
  uint64_t v86 = a7;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v8 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v81 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v13 = *(void *)(v80 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v80);
  uint64_t v70 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (uint64_t)&v64 - v16;
  uint64_t v17 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v79 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v64 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1FD0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  unint64_t v25 = (uint64_t *)((char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v23);
  unint64_t v27 = (void **)((char *)&v64 - v26);
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v72 = v28 + 64;
  uint64_t v30 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v88 = v31 & v29;
  unint64_t v32 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v68 = v13;
  uint64_t v76 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v77 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  unint64_t v65 = v32 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v34 = 0;
  int64_t v73 = v32;
  unint64_t v66 = v32 - 5;
  uint64_t v75 = result;
  uint64_t v67 = result + 104;
  unint64_t v71 = MEMORY[0x263F8EE78];
  uint64_t v78 = v25;
  while (1)
  {
    if (v88)
    {
      unint64_t v35 = __clz(__rbit64(v88));
      v88 &= v88 - 1;
      unint64_t v36 = v35 | (v34 << 6);
      goto LABEL_6;
    }
    int64_t v42 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v42 >= v73)
    {
      unint64_t v44 = v34;
    }
    else
    {
      unint64_t v43 = *(void *)(v72 + 8 * v42);
      if (v43) {
        goto LABEL_10;
      }
      unint64_t v44 = v34 + 1;
      if ((uint64_t)(v34 + 2) < v73)
      {
        unint64_t v43 = *(void *)(v72 + 8 * (v34 + 2));
        if (v43)
        {
          int64_t v42 = v34 + 2;
          goto LABEL_10;
        }
        unint64_t v44 = v34 + 2;
        if ((uint64_t)(v34 + 3) < v73)
        {
          unint64_t v43 = *(void *)(v72 + 8 * (v34 + 3));
          if (v43)
          {
            int64_t v42 = v34 + 3;
LABEL_10:
            unint64_t v88 = (v43 - 1) & v43;
            unint64_t v36 = __clz(__rbit64(v43)) + (v42 << 6);
            unint64_t v34 = v42;
LABEL_6:
            uint64_t v37 = *(void *)(v75 + 56);
            uint64_t v38 = *(void **)(*(void *)(v75 + 48) + 8 * v36);
            void *v25 = v38;
            uint64_t v39 = v37 + *(void *)(v74 + 72) * v36;
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(qword_2688D1FD8);
            sub_236D3B9A8(v39, (uint64_t)v25 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);
            (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v25, 0, 1, v40);
            id v41 = v38;
            goto LABEL_13;
          }
          int64_t v42 = v34 + 4;
          unint64_t v44 = v34 + 3;
          if ((uint64_t)(v34 + 4) < v73)
          {
            unint64_t v43 = *(void *)(v72 + 8 * v42);
            if (v43) {
              goto LABEL_10;
            }
            while (v66 != v34)
            {
              unint64_t v43 = *(void *)(v67 + 8 * v34++);
              if (v43)
              {
                int64_t v42 = v34 + 4;
                goto LABEL_10;
              }
            }
            unint64_t v44 = v65;
          }
        }
      }
    }
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(qword_2688D1FD8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v25, 1, 1, v45);
    unint64_t v88 = 0;
    unint64_t v34 = v44;
LABEL_13:
    sub_236D3BA10((uint64_t)v25, (uint64_t)v27);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(qword_2688D1FD8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v27, 1, v46) == 1)
    {
      swift_release();
      return v71;
    }
    unint64_t v87 = v34;
    unint64_t v47 = *v27;
    uint64_t v48 = v27;
    sub_236D3BA78((uint64_t)v27 + *(int *)(v46 + 48), (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    uint64_t v49 = (uint64_t)v21;
    uint64_t v50 = v12;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
    uint64_t v53 = swift_checkMetadataState();
    uint64_t v54 = AssociatedConformanceWitness;
    uint64_t v12 = v50;
    uint64_t v55 = v52(v47, v53, v54);
    uint64_t v56 = v79;
    sub_236D3B9A8(v49, v79, (uint64_t (*)(void))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);
    uint64_t v57 = (uint64_t)v81;
    uint64_t v58 = v84;
    (*v77)(v81, v82, v84);
    swift_unknownObjectRetain();
    swift_checkMetadataState();
    sub_236D5FC14(v56, v55, v57, v58, v86, (uint64_t)v12);
    if ((*v76)(v12, 1, v80) == 1)
    {
      sub_236D3BAE0(v49, (uint64_t (*)(void))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);

      swift_unknownObjectRelease();
      uint64_t result = sub_236D267CC((uint64_t)v12, &qword_2688D18E8);
      unint64_t v21 = (char *)v49;
      unint64_t v25 = v78;
      unint64_t v27 = v48;
      unint64_t v34 = v87;
    }
    else
    {
      uint64_t v59 = v69;
      sub_236D3BA78((uint64_t)v12, v69, type metadata accessor for AnyModelStateChange);
      sub_236D3B9A8(v59, v70, type metadata accessor for AnyModelStateChange);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v71 = sub_236D55C58(0, *(void *)(v71 + 16) + 1, 1, v71);
      }
      unint64_t v21 = (char *)v49;
      unint64_t v27 = v48;
      unint64_t v61 = *(void *)(v71 + 16);
      unint64_t v60 = *(void *)(v71 + 24);
      unint64_t v34 = v87;
      if (v61 >= v60 >> 1) {
        unint64_t v71 = sub_236D55C58(v60 > 1, v61 + 1, 1, v71);
      }
      uint64_t v62 = v70;
      unint64_t v63 = v71;
      *(void *)(v71 + 16) = v61 + 1;
      sub_236D3BA78(v62, v63+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v61, type metadata accessor for AnyModelStateChange);
      swift_unknownObjectRelease();

      sub_236D3BAE0(v69, type metadata accessor for AnyModelStateChange);
      uint64_t result = sub_236D3BAE0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);
      unint64_t v25 = v78;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_236D3B454(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v44 = a7;
  uint64_t v41 = a2;
  int64_t v42 = a3;
  *(void *)&long long v40 = a1;
  uint64_t v10 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (void *)((char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38[0] = a5;
  uint64_t v39 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v38[1] = a4;
  _OWORD v38[2] = a6;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v20 = (char *)v38 - v19;
  *(void *)&long long v45 = a4;
  *((void *)&v45 + 1) = a5;
  uint64_t v46 = a6;
  uint64_t v47 = v44;
  uint64_t v21 = type metadata accessor for ModelStateSubscriptionManager.RelationshipModelSet();
  uint64_t v43 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v38 - v22;
  uint64_t v24 = *(void *)(v40 + 16);
  unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  long long v40 = *(_OWORD *)v40;
  v25(v20, v41, AssociatedTypeWitness);
  uint64_t v26 = v38[0];
  (*(void (**)(char *, char *, void))(v39 + 16))(v16, v42, v38[0]);
  sub_236D3765C((uint64_t)v20, (uint64_t)v16, v26, (uint64_t)v23);
  long long v45 = v40;
  uint64_t v46 = v24;
  sub_236D377B0((uint64_t)&v45, v21);
  uint64_t v44 = v21;
  int64_t v42 = v23;
  unint64_t v27 = sub_236D37DA8();
  int64_t v28 = v27[2];
  if (v28)
  {
    uint64_t v49 = MEMORY[0x263F8EE78];
    sub_236D564D8(0, v28, 0);
    uint64_t v29 = (uint64_t)(v27 + 4);
    do
    {
      sub_236D1B32C(v29, (uint64_t)&v45);
      uint64_t v30 = v47;
      uint64_t v31 = v48;
      unint64_t v32 = __swift_project_boxed_opaque_existential_1(&v45, v47);
      uint64_t v14[3] = v30;
      v14[4] = *(void *)(v31 + 8);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(boxed_opaque_existential_0, v32, v30);
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
      uint64_t v34 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_236D564D8(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v49;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_236D564D8(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v49;
      }
      *(void *)(v34 + 16) = v36 + 1;
      sub_236D3BA78((uint64_t)v14, v34+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v36, type metadata accessor for AnyModelStateChange);
      v29 += 40;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  return v34;
}

uint64_t type metadata accessor for ModelStateSubscriptionManager.RelationshipModelSet()
{
  return swift_getGenericMetadata();
}

unint64_t sub_236D3B924()
{
  unint64_t result = qword_2688D1AB8;
  if (!qword_2688D1AB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2688D1AB8);
  }
  return result;
}

uint64_t sub_236D3B964(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HomesStore.HomesRelationshipModel(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D3B9A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D3BA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D3BA78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D3BAE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236D3BB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_236D3BB48()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_236D3BC94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64) + 7;
  unint64_t v14 = ((v13 + ((v8 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v15 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v20 = ((unint64_t)a2 + v12) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v19, v20, v9);
    *(void *)((v13 + (((unint64_t)a1 + v12) & v19)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + v20) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_236D3BE9C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v5 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D3BFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v13, v14);
  *(void *)((*(void *)(v10 + 48) + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v10 + 48)
                                                                                       + 7
                                                                                       + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_236D3C12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v13, v14);
  *(void *)((*(void *)(v10 + 40) + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v10 + 40)
                                                                                       + 7
                                                                                       + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236D3C290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v13, v14);
  *(void *)((*(void *)(v10 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v10 + 32)
                                                                                       + 7
                                                                                       + v14) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_236D3C3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v13, v14);
  *(void *)((*(void *)(v10 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v10 + 24)
                                                                                       + 7
                                                                                       + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236D3C540(int *a1, unsigned int a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v11;
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236D3C80CLL);
      case 4:
        int v20 = *(int *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_24:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v8 == v12)
  {
    uint64_t v24 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v7 + 48);
    return v24(a1, v8, AssociatedTypeWitness);
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)((v14 + v25) & 0xFFFFFFFFFFFFFFF8);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
}

void sub_236D3C820(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 24) - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v13;
  uint64_t v16 = *(void *)(v11 + 64) + 7;
  unint64_t v17 = ((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v18 = a3 - v14 + 1;
  }
  else {
    unsigned int v18 = 2;
  }
  if (v18 >= 0x10000) {
    int v19 = 4;
  }
  else {
    int v19 = 2;
  }
  if (v18 < 0x100) {
    int v19 = 1;
  }
  if (v18 >= 2) {
    unsigned int v20 = v19;
  }
  else {
    unsigned int v20 = 0;
  }
  if (v14 < a3) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (a2 > v14)
  {
    if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v22 = a2 - v14;
    }
    else {
      int v22 = 1;
    }
    if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v23 = ~v14 + a2;
      bzero(a1, ((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v23;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)a1 + v17) = v22;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v17) = v22;
        return;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)((char *)a1 + v17) = v22;
        return;
      default:
        return;
    }
  }
  uint64_t v24 = ~v13;
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)((char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x236D3CB30);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if (v10 == v14)
        {
          unint64_t v25 = *(void (**)(_DWORD *, uint64_t))(v9 + 56);
          v25(a1, a2);
        }
        else
        {
          unint64_t v26 = ((unint64_t)a1 + v15) & v24;
          if (v12 == v14)
          {
            unint64_t v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 56);
            v27(v26, a2, v12);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v28 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v28 = (a2 - 1);
            }
            *(void *)((v16 + v26) & 0xFFFFFFFFFFFFFFF8) = v28;
          }
        }
      }
      return;
  }
}

unint64_t sub_236D3CB5C()
{
  unint64_t result = qword_2688D2060;
  if (!qword_2688D2060)
  {
    _s5ProxyCMa_0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2060);
  }
  return result;
}

uint64_t sub_236D3CBB4()
{
  id v2 = sub_236D50054();
  sub_236D291DC(0, &qword_2688D2078);
  unint64_t v3 = sub_236DB9FF0();

  if (v1) {
    return v0;
  }
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_236DBA460();
  swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_4:
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t result = sub_236DBA370();
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = v6 + 1;
        uint64_t v8 = MEMORY[0x237E0F570]();
        _s5ProxyCMa_0();
        *(void *)(swift_allocObject() + 16) = v8;
        sub_236DBA340();
        sub_236DBA380();
        sub_236DBA390();
        sub_236DBA350();
        uint64_t v6 = v7;
      }
      while (v4 != v7);
    }
    else
    {
      uint64_t v9 = (void **)(v3 + 32);
      _s5ProxyCMa_0();
      do
      {
        unsigned int v10 = *v9++;
        *(void *)(swift_allocObject() + 16) = v10;
        id v11 = v10;
        sub_236DBA340();
        sub_236DBA380();
        sub_236DBA390();
        sub_236DBA350();
        --v4;
      }
      while (v4);
    }
    uint64_t v0 = v12;
    swift_bridgeObjectRelease();
    return v0;
  }
  __break(1u);
  return result;
}

void *sub_236D3CDB0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  id v6 = objc_msgSend(v3, sel_persistentStoreCoordinator);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_managedObjectModel);

  id v9 = objc_msgSend(v8, sel_entitiesByName);
  sub_236D291DC(0, (unint64_t *)&qword_2688D1AB0);
  uint64_t v10 = sub_236DB9990();

  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_236D85920(a1, a2);
    if (v12)
    {
      uint64_t v13 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
      id v14 = v13;
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_236D3CEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_236DB9FE0();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D3CFA4, 0, 0);
}

uint64_t sub_236D3CFA4()
{
  (*(void (**)(void, void, void))(v0[8] + 104))(v0[9], *MEMORY[0x263EFEFA8], v0[7]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D3D06C;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return MEMORY[0x270EE4240](v6, v2, v4, v5, v3);
}

uint64_t sub_236D3D06C()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *v1;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D3D214, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_236D3D214()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D3D278()
{
  return sub_236D3CBB4();
}

id sub_236D3D29C(uint64_t a1)
{
  return sub_236D3D2C0(a1);
}

id sub_236D3D2C0(uint64_t a1)
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  v6[0] = 0;
  id v2 = objc_msgSend(v1, sel_executeRequest_error_, a1, v6);
  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_236DB9730();

    swift_willThrow();
  }
  return v2;
}

void *sub_236D3D37C(uint64_t a1, uint64_t a2)
{
  return sub_236D3CDB0(a1, a2);
}

uint64_t sub_236D3D3A0(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_objectWithID_, a1);
  _s5ProxyCMa_0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  return result;
}

uint64_t sub_236D3D3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *id v9 = v4;
  v9[1] = sub_236D17ED0;
  return sub_236D3CEDC(a1, a2, a3, a4);
}

id sub_236D3D4B8(uint64_t a1)
{
  return sub_236D3D4DC(a1);
}

id sub_236D3D4DC(uint64_t a1)
{
  v4[1] = *(id *)MEMORY[0x263EF8340];
  v4[0] = 0;
  if (objc_msgSend(v1, sel_setQueryGenerationFromToken_error_, a1, v4)) {
    return v4[0];
  }
  id v3 = v4[0];
  sub_236DB9730();

  return (id)swift_willThrow();
}

unint64_t sub_236D3D58C()
{
  unint64_t result = qword_2688D1AE0;
  if (!qword_2688D1AE0)
  {
    type metadata accessor for HMCDUserSharedSettingsModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AE0);
  }
  return result;
}

_UNKNOWN **sub_236D3D5E4()
{
  return &off_26E9FE7E0;
}

uint64_t sub_236D3D5F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  unsigned __int8 v5 = objc_msgSend(a1, sel_isExplicitContentAllowed);
  uint64_t v6 = (int *)type metadata accessor for HomesStore.User.SharedSettings();
  *(unsigned char *)(a2 + v6[5]) = v5;
  *(unsigned char *)(a2 + v6[6]) = objc_msgSend(a1, sel_isiTunesAccountAllowed);
  *(unsigned char *)(a2 + v6[7]) = objc_msgSend(a1, sel_isDolbyAtmosEnabled);
  *(unsigned char *)(a2 + v6[8]) = objc_msgSend(a1, sel_isLosslessMusicEnabled);
  *(unsigned char *)(a2 + v6[9]) = objc_msgSend(a1, sel_isPlaybackInfluencesEnabled);
  unsigned __int8 v7 = objc_msgSend(a1, sel_isSiriIdentifyVoiceEnabled);

  *(unsigned char *)(a2 + v6[10]) = v7;
  uint64_t v8 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v6 - 1) + 56);
  return v8(a2, 0, 1, v6);
}

unint64_t sub_236D3D730()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBE340;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 0xD000000000000018;
  *(void *)(inited + 72) = 0x8000000236DBB940;
  *(void *)(inited + 80) = swift_getKeyPath();
  *(void *)(inited + 88) = 0xD000000000000016;
  *(void *)(inited + 96) = 0x8000000236DBB960;
  *(void *)(inited + 104) = swift_getKeyPath();
  *(void *)(inited + 112) = 0xD000000000000013;
  *(void *)(inited + 120) = 0x8000000236DBB980;
  *(void *)(inited + 128) = swift_getKeyPath();
  *(void *)(inited + 136) = 0xD000000000000016;
  *(void *)(inited + 144) = 0x8000000236DBB9A0;
  *(void *)(inited + 152) = swift_getKeyPath();
  *(void *)(inited + 160) = 0xD00000000000001BLL;
  *(void *)(inited + 168) = 0x8000000236DBB9C0;
  *(void *)(inited + 176) = swift_getKeyPath();
  *(void *)(inited + 184) = 0xD00000000000001ALL;
  *(void *)(inited + 192) = 0x8000000236DBB9E0;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE720 = result;
  return result;
}

uint64_t sub_236D3D8A0()
{
  if (qword_2688D1260 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_236D3D8FC(uint64_t a1)
{
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2538);
  uint64_t v3 = MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)v48 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v55 = (uint64_t)v48 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)v48 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)v48 - v11;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  v48[1] = v1;
  uint64_t v65 = MEMORY[0x263F8EE78];
  sub_236D56478(0, v12, 0);
  uint64_t result = sub_236D7E9D4(a1);
  unint64_t v16 = result;
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  uint64_t v59 = a1 + 80;
  uint64_t v51 = a1 + 64;
  uint64_t v52 = a1;
  int64_t v49 = v12;
  uint64_t v50 = v15;
  while ((v16 & 0x8000000000000000) == 0 && (uint64_t)v16 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = v16 >> 6;
    if ((*(void *)(v18 + 8 * (v16 >> 6)) & (1 << v16)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v60 = v17;
    uint64_t v61 = 1 << v16;
    uint64_t v21 = v58;
    uint64_t v22 = (uint64_t)v53;
    uint64_t v23 = (uint64_t)&v53[*(int *)(v58 + 48)];
    uint64_t v24 = *(void *)(a1 + 48);
    uint64_t v25 = sub_236DB9830();
    uint64_t v62 = *(void *)(v25 - 8);
    uint64_t v26 = v24 + *(void *)(v62 + 72) * v16;
    uint64_t v27 = a1;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
    v28(v22, v26, v25);
    uint64_t v29 = *(void *)(v27 + 56);
    unint64_t v63 = v16;
    sub_236D1B32C(v29 + 40 * v16, v23);
    uint64_t v30 = v54;
    v28((uint64_t)v54, v22, v25);
    sub_236D1B32C(v23, (uint64_t)&v30[*(int *)(v21 + 48)]);
    uint64_t v31 = (uint64_t)v30;
    uint64_t v32 = v55;
    sub_236D26768(v31, v55, &qword_2688D2538);
    sub_236D267CC(v22, &qword_2688D2538);
    uint64_t v33 = *(int *)(v21 + 48);
    uint64_t v34 = v56;
    unint64_t v35 = (long long *)&v56[v33];
    uint64_t v36 = v32 + v33;
    v28((uint64_t)v56, v32, v25);
    sub_236D1B32C(v36, (uint64_t)v35);
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = &v57[*(int *)(v21 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v57, v34, v25);
    sub_236D1B1E4(v35, (uint64_t)v38);
    __swift_project_boxed_opaque_existential_1(v38, *((void *)v38 + 3));
    sub_236D9E5D4();
    char v39 = v64;
    sub_236D267CC(v37, &qword_2688D2538);
    sub_236D267CC(v32, &qword_2688D2538);
    uint64_t v13 = v65;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_236D56478(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = v65;
    }
    unint64_t v41 = *(void *)(v13 + 16);
    unint64_t v40 = *(void *)(v13 + 24);
    a1 = v52;
    int64_t v42 = v63;
    if (v41 >= v40 >> 1)
    {
      uint64_t result = sub_236D56478(v40 > 1, v41 + 1, 1);
      uint64_t v13 = v65;
    }
    *(void *)(v13 + 16) = v41 + 1;
    *(unsigned char *)(v13 + v41 + 32) = v39;
    unint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v42 >= (uint64_t)v16) {
      goto LABEL_27;
    }
    uint64_t v18 = v51;
    uint64_t v43 = *(void *)(v51 + 8 * v20);
    if ((v43 & v61) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v50;
    if (*(_DWORD *)(a1 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v44 = v43 & (-2 << (v42 & 0x3F));
    if (v44)
    {
      unint64_t v16 = __clz(__rbit64(v44)) | v42 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v49;
    }
    else
    {
      unint64_t v45 = v20 + 1;
      unint64_t v46 = (v16 + 63) >> 6;
      int64_t v19 = v49;
      if (v20 + 1 < v46)
      {
        unint64_t v47 = *(void *)(v51 + 8 * v45);
        if (v47)
        {
LABEL_22:
          unint64_t v16 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v20)
          {
            unint64_t v47 = *(void *)(v59 + 8 * v20++);
            if (v47)
            {
              unint64_t v45 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v17 = v60 + 1;
    if (v60 + 1 == v19) {
      return v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_236D3DDD0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_236D56514(0, v1, 0);
    uint64_t v2 = v20;
    uint64_t v4 = sub_236D47144(a1);
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    do
    {
      if (v4 < 0 || v4 >= 1 << *(unsigned char *)(a1 + 32))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D3E160);
      }
      if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v4))
      {
        case 1:
          uint64_t v19 = type metadata accessor for HomesStore.Room();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
          uint64_t v10 = &qword_2688D1820;
          break;
        case 2:
          uint64_t v19 = type metadata accessor for HomesStore.Home();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
          uint64_t v10 = (unint64_t *)&unk_2688D1818;
          break;
        case 3:
          uint64_t v19 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
          uint64_t v10 = (unint64_t *)&unk_2688D1810;
          break;
        case 4:
          uint64_t v19 = type metadata accessor for HomesStore.User();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
          uint64_t v10 = (unint64_t *)&unk_2688D1808;
          break;
        case 5:
          uint64_t v19 = type metadata accessor for HomesStore.Zone();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
          uint64_t v10 = (unint64_t *)&unk_2688D1800;
          break;
        case 6:
          uint64_t v19 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
          uint64_t v10 = &qword_2688D17F8;
          break;
        case 7:
          uint64_t v19 = type metadata accessor for HomesStore.User.SharedSettings();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
          uint64_t v10 = (unint64_t *)&unk_2688D17F0;
          break;
        default:
          uint64_t v19 = type metadata accessor for HomesStore.Accessory();
          uint64_t v9 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
          uint64_t v10 = (unint64_t *)&unk_2688D1828;
          break;
      }
      uint64_t v11 = sub_236D4847C(v10, v9);
      unint64_t v13 = *(void *)(v20 + 16);
      unint64_t v12 = *(void *)(v20 + 24);
      if (v13 >= v12 >> 1) {
        sub_236D56514(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v20 + 16) = v13 + 1;
      uint64_t v14 = v20 + 16 * v13;
      *(void *)(v14 + 32) = v19;
      *(void *)(v14 + 40) = v11;
      uint64_t v15 = sub_236D78E74(v4, v6, v8 & 1, a1);
      uint64_t v4 = v15;
      uint64_t v6 = v16;
      char v8 = v17 & 1;
      --v1;
    }
    while (v1);
    sub_236D48470(v15, v16, v17 & 1);
  }
  return v2;
}

uint64_t sub_236D3E180(uint64_t a1)
{
  uint64_t v58 = sub_236DB9830();
  uint64_t v3 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2538);
  uint64_t v5 = MEMORY[0x270FA5388](v56);
  uint64_t v55 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v42 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v42 - v9;
  uint64_t v10 = type metadata accessor for AnyModelStateChange.Tombstone(0);
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (!v13) {
    return v14;
  }
  uint64_t v15 = v12;
  uint64_t v42 = v1;
  uint64_t v63 = MEMORY[0x263F8EE78];
  sub_236D56554(0, v13, 0);
  uint64_t result = sub_236D7E9D4(a1);
  uint64_t v18 = result;
  uint64_t v19 = 0;
  uint64_t v20 = a1 + 64;
  uint64_t v61 = v3;
  uint64_t v47 = v3 + 32;
  uint64_t v48 = v3 + 16;
  uint64_t v43 = a1 + 80;
  int64_t v44 = v13;
  uint64_t v49 = (uint64_t)v15;
  uint64_t v50 = a1;
  uint64_t v45 = v17;
  uint64_t v46 = a1 + 64;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v23 = (unint64_t)v18 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_26;
    }
    uint64_t v59 = v19;
    uint64_t v60 = 1 << v18;
    uint64_t v24 = v56;
    uint64_t v25 = (uint64_t)v53;
    uint64_t v26 = (uint64_t)&v53[*(int *)(v56 + 48)];
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    uint64_t v28 = v58;
    v27(v53, *(void *)(a1 + 48) + *(void *)(v61 + 72) * v18, v58);
    sub_236D1B32C(*(void *)(a1 + 56) + 40 * v18, v26);
    uint64_t v29 = v54;
    v27(v54, v25, v28);
    sub_236D1B32C(v26, (uint64_t)&v29[*(int *)(v24 + 48)]);
    uint64_t v30 = (uint64_t)v29;
    uint64_t v31 = v55;
    sub_236D26768(v30, v55, &qword_2688D2538);
    sub_236D267CC(v25, &qword_2688D2538);
    uint64_t v32 = (void *)(v31 + *(int *)(v24 + 48));
    __swift_project_boxed_opaque_existential_1(v32, v32[3]);
    uint64_t v33 = v57;
    sub_236DBA280();
    __swift_project_boxed_opaque_existential_1(v32, v32[3]);
    sub_236D9E5D4();
    LOBYTE(v26) = v62;
    uint64_t v34 = v49;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v49, v33, v28);
    *(unsigned char *)(v34 + *(int *)(v52 + 20)) = v26;
    sub_236D267CC(v31, &qword_2688D2538);
    uint64_t v14 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236D56554(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = v63;
    }
    unint64_t v36 = *(void *)(v14 + 16);
    unint64_t v35 = *(void *)(v14 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_236D56554(v35 > 1, v36 + 1, 1);
      uint64_t v14 = v63;
    }
    *(void *)(v14 + 16) = v36 + 1;
    uint64_t result = sub_236D483D4(v34, v14+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v36, type metadata accessor for AnyModelStateChange.Tombstone);
    a1 = v50;
    int64_t v21 = 1 << *(unsigned char *)(v50 + 32);
    if (v18 >= v21) {
      goto LABEL_27;
    }
    uint64_t v20 = v46;
    uint64_t v37 = *(void *)(v46 + 8 * v23);
    if ((v37 & v60) == 0) {
      goto LABEL_28;
    }
    LODWORD(v17) = v45;
    if (*(_DWORD *)(v50 + 36) != v45) {
      goto LABEL_29;
    }
    unint64_t v38 = v37 & (-2 << (v18 & 0x3F));
    if (v38)
    {
      int64_t v21 = __clz(__rbit64(v38)) | v18 & 0xFFFFFFFFFFFFFFC0;
      int64_t v22 = v44;
    }
    else
    {
      unint64_t v39 = v23 + 1;
      unint64_t v40 = (unint64_t)(v21 + 63) >> 6;
      int64_t v22 = v44;
      if (v23 + 1 < v40)
      {
        unint64_t v41 = *(void *)(v46 + 8 * v39);
        if (v41)
        {
LABEL_22:
          int64_t v21 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v23)
          {
            unint64_t v41 = *(void *)(v43 + 8 * v23++);
            if (v41)
            {
              unint64_t v39 = v23 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v19 = v59 + 1;
    uint64_t v18 = v21;
    if (v59 + 1 == v22) {
      return v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_236D3E6C8()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2088);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2088);
  return sub_236DB9940();
}

void RelationshipObserver.resolver.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  type metadata accessor for RelationshipResolver();
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_236D3E958(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_236D3E800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v9 = *(void *)v6;
  uint64_t v10 = *(void *)v6 + *(void *)(**(void **)v6 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v10, a2);
  uint64_t v11 = v9 + *(void *)(*(void *)v9 + 112);
  swift_beginAccess();
  sub_236D1B32C(v11, (uint64_t)v14);
  return sub_236DB7D74((uint64_t)v8, v14, a2, a3);
}

uint64_t sub_236D3E958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D3E800(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for RelationshipObserver.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D3E98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void (*v31)(unsigned char *__return_ptr, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unsigned char v77[25];
  long long v78[3];

  uint64_t v74 = a3;
  uint64_t v75 = a6;
  uint64_t v76 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v67 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1930);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  uint64_t v63 = *(void *)(v64 - 8);
  char v62 = *(void *)(v63 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v64);
  uint64_t v59 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  uint64_t v70 = *(void *)(v20 - 8);
  unint64_t v71 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v57 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for HomesStore.AnyChanges(0);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v66 = v22 - 8;
  uint64_t v72 = v23;
  uint64_t v69 = *(void *)(v23 + 64);
  uint64_t v24 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v68 = (uint64_t)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v61 = (char *)&v56 - v26;
  uint64_t v27 = a5;
  type metadata accessor for RelationshipObserver.State();
  sub_236D1B32C(a3, (uint64_t)v78);
  int64_t v73 = a1;
  *(void *)&v78[0] = sub_236D4779C(a1, v78);
  uint64_t v65 = sub_236D477F0();
  swift_release();
  swift_retain();
  uint64_t v60 = a5;
  uint64_t v28 = sub_236D498E8(a4);
  uint64_t v29 = sub_236D3D8FC(v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_236D36630(v29);
  swift_bridgeObjectRelease();
  *(void *)&v77[17] = v30;
  uint64_t v31 = *(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(v27 + 8) + 48);
  uint64_t v58 = a4;
  v31(v77, a4);
  sub_236D302FC(v78, v77[0]);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_236D3DDD0(v32);
  swift_bridgeObjectRelease_n();
  type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F680], v12);
  sub_236DB9D70();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v34 = v76 + 16;
  unint64_t v35 = sub_236DB9C90();
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  unint64_t v36 = (uint64_t)v67;
  v56(v67, 1, 1, v35);
  sub_236D1B32C(v34, (uint64_t)v78);
  uint64_t v37 = v63;
  unint64_t v38 = v59;
  unint64_t v39 = v19;
  unint64_t v40 = v19;
  unint64_t v41 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v59, v39, v64);
  uint64_t v42 = (*(unsigned __int8 *)(v37 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v43 = (char *)swift_allocObject();
  *((void *)v43 + 2) = 0;
  *((void *)v43 + 3) = 0;
  *((void *)v43 + 4) = v33;
  sub_236D1B1E4(v78, (uint64_t)(v43 + 40));
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v43[v42], v38, v41);
  swift_bridgeObjectRetain();
  int64_t v44 = sub_236D795C0(v36, (uint64_t)&unk_2688D2550, (uint64_t)v43);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v41);
  uint64_t v45 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v61, v57, v71);
  swift_bridgeObjectRelease();
  *(void *)(v45 + *(int *)(v66 + 28)) = v44;
  v56((char *)v36, 1, 1, v35);
  uint64_t v46 = v68;
  sub_236D480C4(v45, v68, type metadata accessor for HomesStore.AnyChanges);
  uint64_t v47 = (*(unsigned __int8 *)(v72 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v48 = (v69 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = (void *)swift_allocObject();
  v49[2] = 0;
  v49[3] = 0;
  uint64_t v50 = v58;
  uint64_t v51 = v60;
  v49[4] = v58;
  v49[5] = v51;
  sub_236D483D4(v46, (uint64_t)v49 + v47, type metadata accessor for HomesStore.AnyChanges);
  uint64_t v52 = v65;
  *(void *)((char *)v49 + v48) = v65;
  swift_retain();
  uint64_t v53 = sub_236D8C018(v36, (uint64_t)&unk_2688D2560, (uint64_t)v49);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v74);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v73, v50);
  uint64_t result = sub_236D48374(v45, type metadata accessor for HomesStore.AnyChanges);
  uint64_t v55 = v75;
  *uint64_t v75 = v53;
  v55[1] = v52;
  return result;
}

uint64_t sub_236D3F0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  uint64_t v8 = type metadata accessor for AnyModelStateChange(0);
  v7[7] = v8;
  v7[8] = *(void *)(v8 - 8);
  v7[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  v7[12] = type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0);
  v7[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D3F210, 0, 0);
}

uint64_t sub_236D3F210()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  sub_236DB9D00();
  uint64_t v4 = *(void *)(v3 + *(int *)(type metadata accessor for HomesStore.AnyChanges(0) + 20));
  uint64_t v5 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 128) = v5;
  *(void *)(v1 + v5) = v4;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  *uint64_t v6 = v0;
  v6[1] = sub_236D3F304;
  uint64_t v8 = *(void *)(v0 + 80);
  return MEMORY[0x270FA2100](v8, v7);
}

uint64_t sub_236D3F304()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D3F4BC;
  }
  else {
    uint64_t v2 = sub_236D3F418;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D3F418()
{
  if (sub_236DB9D60()) {
    sub_236DB9D50();
  }
  sub_236D26768(*(void *)(v0 + 80), *(void *)(v0 + 88), &qword_2688D18E8);
  return MEMORY[0x270FA2498](sub_236D3F610, 0, 0);
}

uint64_t sub_236D3F4BC()
{
  return MEMORY[0x270FA2498](sub_236D3F4D8, 0, 0);
}

uint64_t sub_236D3F4D8()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_236D3F564, 0, 0);
}

uint64_t sub_236D3F564()
{
  sub_236D48374(*(void *)(v0 + 104), type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D3F610()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 64) + 48))(v1, 1, *(void *)(v0 + 56)) == 1)
  {
    sub_236D48374(*(void *)(v0 + 104), type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 32);
    long long v11 = *(_OWORD *)(v0 + 40);
    sub_236D483D4(v1, v4, type metadata accessor for AnyModelStateChange);
    uint64_t v6 = swift_task_alloc();
    *(_OWORD *)(v6 + 16) = v11;
    *(void *)(v6 + 32) = v4;
    uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v7);
    sub_236D4843C();
    os_unfair_lock_unlock(v7);
    swift_task_dealloc();
    sub_236D48374(v4, type metadata accessor for AnyModelStateChange);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
    *uint64_t v8 = v0;
    v8[1] = sub_236D3F304;
    uint64_t v10 = *(void *)(v0 + 80);
    return MEMORY[0x270FA2100](v10, v9);
  }
}

uint64_t sub_236D3F848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for RelationshipObserver.ObserverState() + 36);
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v8 = sub_236DB9CF0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a2, v8);
}

uint64_t sub_236D3F938(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v35 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = sub_236DB9830();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 88);
  uint64_t v7 = *(void *)(v3 + 80);
  v27[1] = v6;
  v27[2] = v7;
  uint64_t v32 = type metadata accessor for RelationshipObserver.ObserverState();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v32);
  uint64_t v28 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)v27 - v10;
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v12 = sub_236DB9CD0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v27 - v14;
  uint64_t v16 = sub_236DB9CF0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v27 - v21;
  swift_checkMetadataState();
  sub_236D16F54((uint64_t)v15);
  sub_236DB9CA0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v23 = (uint64_t)v29;
  sub_236DB9820();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  sub_236D3F848(v23, (uint64_t)v20, (uint64_t)v11);
  uint64_t v24 = v30;
  uint64_t v25 = v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v28, v11, v32);
  swift_beginAccess();
  sub_236DB9C10();
  sub_236DB9BE0();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v35, v11, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v25);
}

BOOL sub_236D3FD48(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DBA280();
  uint64_t v8 = *(void *)(v2 + *(void *)(*(void *)v2 + 104));
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_236D8584C((uint64_t)v7);
    if (v10)
    {
      sub_236D1B32C(*(void *)(v8 + 56) + 40 * v9, (uint64_t)&v13);
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  BOOL v11 = *((void *)&v14 + 1) != 0;
  sub_236D267CC((uint64_t)&v13, &qword_2688D2540);
  return v11;
}

uint64_t sub_236D3FED0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)&v25 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v25 - v11;
  if (qword_2688D1268 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_236DB9950();
  __swift_project_value_buffer(v13, (uint64_t)qword_2688D2088);
  sub_236D480C4(a1, (uint64_t)v12, type metadata accessor for AnyModelStateChange);
  long long v14 = sub_236DB9930();
  os_log_type_t v15 = sub_236DB9F40();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v26 = a1;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    *(void *)&long long v29 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    sub_236D480C4((uint64_t)v12, (uint64_t)v10, type metadata accessor for AnyModelStateChange);
    uint64_t v19 = sub_236DB9A20();
    uint64_t v28 = sub_236DB6880(v19, v20, (uint64_t *)&v29);
    a1 = v26;
    sub_236DBA0B0();
    swift_bridgeObjectRelease();
    sub_236D48374((uint64_t)v12, type metadata accessor for AnyModelStateChange);
    _os_log_impl(&dword_236D14000, v14, v15, "Got change: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v18, -1, -1);
    MEMORY[0x237E101A0](v17, -1, -1);
  }
  else
  {
    sub_236D48374((uint64_t)v12, type metadata accessor for AnyModelStateChange);
  }

  sub_236D480C4(a1, (uint64_t)v7, type metadata accessor for AnyModelStateChange);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v23 = *((_OWORD *)v7 + 1);
    long long v29 = *(_OWORD *)v7;
    long long v30 = v23;
    uint64_t v31 = *((void *)v7 + 4);
    sub_236D4060C(&v29);
    return sub_236D1B3D4((uint64_t)&v29);
  }
  if (EnumCaseMultiPayload == 1)
  {
    long long v22 = *((_OWORD *)v7 + 1);
    long long v29 = *(_OWORD *)v7;
    long long v30 = v22;
    uint64_t v31 = *((void *)v7 + 4);
    sub_236D40214((uint64_t)&v29);
    return sub_236D1B3D4((uint64_t)&v29);
  }
  return sub_236D48374((uint64_t)v7, type metadata accessor for AnyModelStateChange);
}

uint64_t sub_236D40214(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RelationshipObserver.State.ChangeState();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - v5;
  uint64_t updated = type metadata accessor for RelationshipObserver.State.PendingRelationshipUpdateState();
  uint64_t v8 = *(void *)(updated - 8);
  MEMORY[0x270FA5388](updated);
  unint64_t v36 = (char *)&v35 - v9;
  sub_236D1B32C(a1, (uint64_t)v39);
  uint64_t v10 = v40;
  uint64_t v11 = v41;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v39, v40);
  uint64_t v13 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
  swift_beginAccess();
  uint64_t v15 = v13[3];
  uint64_t v14 = v13[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v15);
  uint64_t v16 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 32);
  uint64_t v17 = v11;
  uint64_t v18 = v8;
  uint64_t v19 = v14;
  uint64_t v20 = v37;
  v16(v12, v10, v17, v15, v19);
  swift_endAccess();
  uint64_t v21 = v2 + *(void *)(*(void *)v2 + 128);
  swift_beginAccess();
  uint64_t v22 = v21;
  uint64_t v23 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v6, v22, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, updated) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v23);
  }
  else
  {
    uint64_t v24 = (uint64_t)v36;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v36, v6, updated);
    uint64_t v25 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    uint64_t v26 = *(void *)(v24 + *(int *)(updated + 36));
    uint64_t v27 = *v25;
    uint64_t v28 = swift_bridgeObjectRetain();
    LOBYTE(v27) = sub_236D9534C(v28, v27);
    swift_bridgeObjectRelease();
    uint64_t v29 = v24;
    if (v27)
    {
      swift_bridgeObjectRetain();
      sub_236D40DA0(v24, v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_2688D1268 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_236DB9950();
      __swift_project_value_buffer(v30, (uint64_t)qword_2688D2088);
      uint64_t v31 = sub_236DB9930();
      os_log_type_t v32 = sub_236DB9F40();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_236D14000, v31, v32, "Received model during pending relationship change, waiting for remaining models", v33, 2u);
        MEMORY[0x237E101A0](v33, -1, -1);
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v29, updated);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
}

uint64_t sub_236D4060C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (uint64_t)&v56 - v6;
  uint64_t v7 = type metadata accessor for RelationshipObserver.State.ChangeState();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)&v56 - v10;
  uint64_t updated = type metadata accessor for RelationshipObserver.State.PendingRelationshipUpdateState();
  uint64_t v57 = *(void *)(updated - 8);
  uint64_t v58 = updated;
  MEMORY[0x270FA5388](updated);
  uint64_t v56 = (char *)&v56 - v12;
  uint64_t v13 = sub_236DBA090();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v56 - v22;
  sub_236D1B32C((uint64_t)a1, (uint64_t)v66);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
  int v24 = swift_dynamicCast();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v24)
  {
    v25(v17, 0, 1, v4);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v26(v23, v17, v4);
    uint64_t v27 = v2 + *(void *)(*(void *)v2 + 96);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v27, v4);
    LOBYTE(v27) = sub_236DB99F0();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v18 + 8);
    v28(v21, v4);
    if (v27) {
      return ((uint64_t (*)(char *, uint64_t))v28)(v23, v4);
    }
    uint64_t v29 = sub_236D498E8(v4);
    uint64_t v30 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
    swift_beginAccess();
    uint64_t v31 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    if (sub_236D9534C(v29, *v31))
    {
      sub_236D40DA0((uint64_t)v23, v29);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(char *, uint64_t))v28)(v23, v4);
    }
    if (qword_2688D1268 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_236DB9950();
    __swift_project_value_buffer(v41, (uint64_t)qword_2688D2088);
    uint64_t v42 = sub_236DB9930();
    os_log_type_t v43 = sub_236DB9F30();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = v29;
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_236D14000, v42, v43, "Pending relationship update since we don't have all models yet", v45, 2u);
      uint64_t v46 = v45;
      uint64_t v29 = v44;
      MEMORY[0x237E101A0](v46, -1, -1);
    }

    v26(v21, v23, v4);
    uint64_t v47 = v56;
    v26(v56, v21, v4);
    uint64_t v49 = v57;
    uint64_t v48 = v58;
    *(void *)&v47[*(int *)(v58 + 36)] = v29;
    uint64_t v50 = v59;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v59, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
    uint64_t v52 = v60;
    uint64_t v51 = v61;
    uint64_t v53 = v50;
    uint64_t v54 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v53, v62);
    uint64_t v55 = v2 + *(void *)(*(void *)v2 + 128);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 40))(v55, v52, v54);
    return swift_endAccess();
  }
  else
  {
    v25(v17, 1, 1, v4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t result = sub_236D3FD48(a1);
    if (result)
    {
      uint64_t v33 = a1[3];
      uint64_t v34 = a1[4];
      uint64_t v35 = __swift_project_boxed_opaque_existential_1(a1, v33);
      uint64_t v36 = v2 + *(void *)(*(void *)v2 + 112);
      swift_beginAccess();
      uint64_t v37 = *(void *)(v36 + 24);
      uint64_t v38 = *(void *)(v36 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v36, v37);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 32))(v35, v33, v34, v37, v38);
      swift_endAccess();
      uint64_t v39 = v63;
      sub_236D475C0((uint64_t)a1, v63);
      type metadata accessor for AnyModelStateChange(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v65;
      swift_storeEnumTagMultiPayload();
      sub_236D41998(v39);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v39, v40);
    }
  }
  return result;
}

uint64_t sub_236D40DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = a1;
  uint64_t v5 = (void *)*v2;
  uint64_t v6 = v5[10];
  uint64_t v7 = v5[11];
  uint64_t v8 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v52 = (char *)&v42 - v10;
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)&v42 - v11;
  uint64_t v12 = type metadata accessor for RelationshipResolver();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v47 = (uint64_t)&v42 - v13;
  uint64_t v51 = v7;
  uint64_t v14 = type metadata accessor for RelationshipObserver.State.ChangeState();
  uint64_t v43 = *(void *)(v14 - 8);
  uint64_t v44 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v42 = (char *)&v42 - v15;
  uint64_t v16 = v5[13];
  uint64_t v17 = *(void *)((char *)v3 + v16);
  swift_bridgeObjectRetain();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_236D47CD0(v18, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_236D47CD0(v20, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_2688D1268 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_236DB9950();
  __swift_project_value_buffer(v22, (uint64_t)qword_2688D2088);
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_236DB9930();
  os_log_type_t v24 = sub_236DB9F30();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218240;
    *(void *)&v55[0] = *(void *)(v19 + 16);
    sub_236DBA0B0();
    swift_release();
    *(_WORD *)(v25 + 12) = 2048;
    *(void *)&v55[0] = *(void *)(v21 + 16);
    sub_236DBA0B0();
    swift_release();
    _os_log_impl(&dword_236D14000, v23, v24, "Processing relationship update(s), added: %ld, removed: %ld", (uint8_t *)v25, 0x16u);
    MEMORY[0x237E101A0](v25, -1, -1);
  }
  else
  {

    swift_release();
    swift_release();
  }
  uint64_t v26 = (uint64_t)v3 + *(void *)(*v3 + 112);
  swift_beginAccess();
  uint64_t v27 = *(void *)(v26 + 24);
  uint64_t v28 = *(void *)(v26 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v26, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 24))(a2, v27, v28);
  swift_endAccess();
  uint64_t v29 = (char *)v3 + *(void *)(*v3 + 96);
  swift_beginAccess();
  uint64_t v30 = v45;
  uint64_t v31 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 24))(v29, v50, v6);
  swift_endAccess();
  *(void *)((char *)v3 + v16) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t updated = type metadata accessor for RelationshipObserver.State.PendingRelationshipUpdateState();
  uint64_t v33 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v42, 1, 1, updated);
  uint64_t v34 = (char *)v3 + *(void *)(*v3 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v34, v33, v44);
  swift_endAccess();
  sub_236D41418(v19);
  swift_release();
  sub_236D417C4(v21);
  swift_release();
  uint64_t v35 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v46, v31, v6);
  sub_236D1B32C(v26, (uint64_t)v55);
  uint64_t v36 = v47;
  sub_236DB7D74(v35, v55, v6, v47);
  uint64_t v38 = v48;
  uint64_t v37 = v49;
  uint64_t v39 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v52, v36, v49);
  uint64_t v40 = v54;
  swift_storeEnumTagMultiPayload();
  sub_236D41998(v39);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v39, v40);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
}

uint64_t sub_236D41418(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v12[-v5];
  uint64_t v7 = sub_236D471EC(a1, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t))sub_236D471E4, v1);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + 32;
    uint64_t v10 = (void (**)(unsigned char *, uint64_t))(v4 + 8);
    do
    {
      sub_236D475C0(v9, (uint64_t)v6);
      type metadata accessor for AnyModelStateChange(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_236D41998((uint64_t)v6);
      (*v10)(v6, v3);
      v9 += 40;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D4159C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(a3 + *(void *)(*(void *)a3 + 112));
  swift_beginAccess();
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_236D95218(a2, *v13, (uint64_t)&v16);
  if (v17)
  {
    sub_236D1B1E4(&v16, (uint64_t)v18);
    return sub_236D1B1E4(v18, a4);
  }
  else
  {
    sub_236D267CC((uint64_t)&v16, &qword_2688D17E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    *(void *)&v18[0] = 0;
    *((void *)&v18[0] + 1) = 0xE000000000000000;
    sub_236DBA260();
    swift_bridgeObjectRelease();
    *(void *)&v18[0] = 0xD000000000000017;
    *((void *)&v18[0] + 1) = 0x8000000236DBBB90;
    sub_236D4847C((unint64_t *)&qword_2688D1900, MEMORY[0x263F07508]);
    sub_236DBA5C0();
    sub_236DB9A70();
    swift_bridgeObjectRelease();
    uint64_t result = sub_236DBA450();
    __break(1u);
  }
  return result;
}

uint64_t sub_236D417C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v13[-v4];
  uint64_t v6 = sub_236D3E180(a1);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(type metadata accessor for AnyModelStateChange.Tombstone(0) - 8);
    uint64_t v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    uint64_t v11 = (void (**)(unsigned char *, uint64_t))(v3 + 8);
    do
    {
      sub_236D480C4(v9, (uint64_t)v5, type metadata accessor for AnyModelStateChange.Tombstone);
      type metadata accessor for AnyModelStateChange(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_236D41998((uint64_t)v5);
      (*v11)(v5, v2);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D41998(uint64_t a1)
{
  uint64_t v37 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v24 - v5;
  uint64_t v34 = sub_236DB9CF0();
  uint64_t v6 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v24 - v7;
  uint64_t v36 = v3;
  uint64_t v32 = sub_236DB9CB0();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v31 = (char *)&v24 - v9;
  uint64_t v10 = type metadata accessor for RelationshipObserver.ObserverState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v24 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v24 - v12;
  uint64_t v13 = (uint64_t *)((char *)v1 + *(void *)(v2 + 120));
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = swift_bridgeObjectRetain();
  if (!MEMORY[0x237E0EEB0](v15, v10)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = 0;
  uint64_t v29 = &v38[*(int *)(v10 + 36)];
  uint64_t v30 = (void (**)(char *, uint64_t *, uint64_t))(v11 + 16);
  uint64_t v27 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v28 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v25 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v26 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v19 = v33;
  uint64_t v18 = v34;
  uint64_t v20 = v31;
  while (1)
  {
    char v21 = sub_236DB9BA0();
    sub_236DB9B70();
    if (v21)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v38, v14+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v16, v10);
      uint64_t v22 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_10;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_236DBA2A0();
    if (v24 != 8) {
      break;
    }
    uint64_t v39 = result;
    (*v30)(v38, &v39, v10);
    swift_unknownObjectRelease();
    uint64_t v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_10:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*v28)(v19, v29, v18);
    (*v27)(v38, v10);
    (*v26)(v35, v37, v36);
    sub_236DB9CE0();
    (*v25)(v19, v18);
    (*v17)(v20, v32);
    ++v16;
    if (v22 == MEMORY[0x237E0EEB0](v14, v10)) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_236D41E14()
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96), *(void *)(*(void *)v0 + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + *(void *)(*(void *)v0 + 112));
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  uint64_t v2 = type metadata accessor for RelationshipObserver.State.ChangeState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_236D41F54()
{
  sub_236D41E14();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_236D41FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_236DB9830();
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v11 = sub_236DB9D40();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = TupleTypeMetadata2 - 8;
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v15 = &v19[-v14];
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v16 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v16);
  sub_236D4855C((uint64_t)v15);
  os_unfair_lock_unlock(v16);
  uint64_t v17 = &v15[*(int *)(v13 + 56)];
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v15, v10);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a2, v17, v11);
}

uint64_t sub_236D42168@<X0>(uint64_t a1@<X8>)
{
  sub_236DB9830();
  type metadata accessor for RelationshipObserver.Change();
  sub_236DB9D40();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return sub_236D3F938(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t RelationshipObserver.Changes.AsyncIterator.next()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  *uint64_t v3 = v1;
  v3[1] = sub_236D26C08;
  return MEMORY[0x270FA1F70](a1, v4);
}

uint64_t type metadata accessor for RelationshipObserver.Change()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D422DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_236D42354(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_236D423FC;
  return RelationshipObserver.Changes.AsyncIterator.next()(a1);
}

uint64_t sub_236D423FC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_236D424F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_236D425C0;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_236D425C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_236D426BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for RelationshipObserver.Changes();
  sub_236D41FAC(a4, a4 + *(int *)(v8 + 36), a1, a2, a3);
  return swift_release();
}

uint64_t RelationshipObserver.Changes.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v2 = sub_236DB9D30();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  sub_236DB9D40();
  sub_236DB9D00();
  return sub_236D422DC((uint64_t)v4, a1);
}

uint64_t sub_236D427F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  RelationshipObserver.Changes.makeAsyncIterator()(a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t RelationshipObserver.changes()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = swift_retain();
  return sub_236D426BC(v5, v3, v4, a2);
}

uint64_t sub_236D428A8()
{
  return MEMORY[0x263F8E658];
}

uint64_t sub_236D428B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_236D428D4()
{
  swift_release();
  return swift_release();
}

void *sub_236D42910(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_236D42948(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_236D429B4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV6UpdateVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22ManagedObjectChangeSetV6UpdateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for RelationshipObserver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D42A90()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for RelationshipObserver.State.ChangeState();
    if (v2 <= 0x3F)
    {
      uint64_t inited = swift_initClassMetadata2();
      if (inited) {
        return inited;
      }
      else {
        return 0;
      }
    }
  }
  return v0;
}

uint64_t type metadata accessor for RelationshipObserver.State.ChangeState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D42BA8()
{
  uint64_t result = type metadata accessor for AnyModelStateChange(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RelationshipResolver();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_236D42C70(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  if ((unint64_t)(v8 + 1) > 0x28) {
    uint64_t v9 = v8 + 1;
  }
  else {
    uint64_t v9 = 40;
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  int v13 = *(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80);
  if ((v13 & 0x1000F8) != 0 || v12 + 1 > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v12];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v18 = v12;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v12 >= 4) {
            goto LABEL_27;
          }
          goto LABEL_21;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v12 < 4) {
            goto LABEL_21;
          }
          goto LABEL_27;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v12 < 4) {
            goto LABEL_21;
          }
          goto LABEL_27;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v12 < 4)
          {
LABEL_21:
            unsigned int v16 = (v19 | (v17 << (8 * v12))) + 2;
            break;
          }
LABEL_27:
          if (v19 != -1) {
            goto LABEL_28;
          }
          goto LABEL_23;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
LABEL_23:
      (*(void (**)(uint64_t, unsigned __int8 *))(v10 + 16))(a1, a2);
      unint64_t v20 = (a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v21 = (unint64_t)&a2[v11 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v22 = *(void *)(v21 + 24);
      *(void *)(v20 + 24) = v22;
      *(void *)(v20 + 32) = *(void *)(v21 + 32);
      (**(void (***)(void))(v22 - 8))();
      *(unsigned char *)(a1 + v12) = 1;
    }
    else
    {
LABEL_28:
      unsigned int v23 = a2[v9];
      unsigned int v24 = v23 - 4;
      if (v23 >= 4)
      {
        if (v9 <= 3) {
          uint64_t v25 = v9;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *a2;
            goto LABEL_37;
          case 2:
            int v26 = *(unsigned __int16 *)a2;
            goto LABEL_37;
          case 3:
            int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_37;
          case 4:
            int v26 = *(_DWORD *)a2;
LABEL_37:
            int v27 = (v26 | (v24 << (8 * v9))) + 4;
            unsigned int v23 = v26 + 4;
            if (v9 < 4) {
              unsigned int v23 = v27;
            }
            break;
          default:
            break;
        }
      }
      switch(v23)
      {
        case 1u:
          long long v28 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 24) = v28;
          (**(void (***)(uint64_t, unsigned __int8 *))(v28 - 8))(a1, a2);
          char v29 = 1;
          goto LABEL_44;
        case 2u:
          long long v30 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 24) = v30;
          (**(void (***)(uint64_t, unsigned __int8 *))(v30 - 8))(a1, a2);
          char v29 = 2;
          goto LABEL_44;
        case 3u:
          (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
          *(unsigned char *)(v8 + a1) = a2[v8];
          char v29 = 3;
LABEL_44:
          *(unsigned char *)(a1 + v9) = v29;
          break;
        default:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + v9) = 0;
          swift_bridgeObjectRetain();
          break;
      }
      *(unsigned char *)(a1 + v12) = 0;
    }
  }
  return a1;
}

uint64_t sub_236D43078(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v6 = 40;
  if ((unint64_t)(v5 + 1) > 0x28) {
    uint64_t v6 = v5 + 1;
  }
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  if (((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6 + 1) {
    unint64_t v9 = v6 + 1;
  }
  else {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  unsigned int v10 = a1[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        goto LABEL_15;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v13 = *(_DWORD *)a1;
LABEL_15:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    (*(void (**)(unsigned __int8 *))(v7 + 8))(a1);
    unint64_t v15 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_32:
    return __swift_destroy_boxed_opaque_existential_0(v15);
  }
  else
  {
    unsigned int v16 = a1[v6];
    unsigned int v17 = v16 - 4;
    if (v16 >= 4)
    {
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          goto LABEL_28;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          goto LABEL_28;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_28;
        case 4:
          int v19 = *(_DWORD *)a1;
LABEL_28:
          int v20 = (v19 | (v17 << (8 * v6))) + 4;
          unsigned int v16 = v19 + 4;
          if (v6 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    switch(v16)
    {
      case 1u:
      case 2u:
        unint64_t v15 = (unint64_t)a1;
        goto LABEL_32;
      case 3u:
        uint64_t v22 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8);
        uint64_t result = v22(a1, v4);
        break;
      default:
        uint64_t result = swift_bridgeObjectRelease();
        break;
    }
  }
  return result;
}

uint64_t sub_236D43338(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  if ((unint64_t)(v7 + 1) > 0x28) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 40;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  if (((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_16;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_16:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    (*(void (**)(uint64_t, unsigned __int8 *))(v9 + 16))(a1, a2);
    unint64_t v17 = (a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = (unint64_t)&a2[v10 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = *(void *)(v18 + 24);
    *(void *)(v17 + 24) = v19;
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    (**(void (***)(void))(v19 - 8))();
    char v20 = 1;
  }
  else
  {
    unsigned int v22 = a2[v8];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v8 <= 3) {
        uint64_t v24 = v8;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_30;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_30:
          int v26 = (v25 | (v23 << (8 * v8))) + 4;
          unsigned int v22 = v25 + 4;
          if (v8 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 1u:
        long long v27 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v27;
        (**(void (***)(uint64_t, unsigned __int8 *))(v27 - 8))(a1, a2);
        char v20 = 0;
        *(unsigned char *)(a1 + v8) = 1;
        break;
      case 2u:
        long long v28 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v28;
        (**(void (***)(uint64_t, unsigned __int8 *))(v28 - 8))(a1, a2);
        char v20 = 0;
        *(unsigned char *)(a1 + v8) = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        char v20 = 0;
        *(unsigned char *)(v7 + a1) = a2[v7];
        *(unsigned char *)(a1 + v8) = 3;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + v8) = 0;
        swift_bridgeObjectRetain();
        char v20 = 0;
        break;
    }
  }
  *(unsigned char *)(a1 + v11) = v20;
  return a1;
}

unsigned __int8 *sub_236D436F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_236DB9830();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    if ((unint64_t)(v8 + 1) > 0x28) {
      uint64_t v9 = v8 + 1;
    }
    else {
      uint64_t v9 = 40;
    }
    uint64_t v10 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void *)(v11 + 64);
    if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v9 + 1) {
      unint64_t v13 = v9 + 1;
    }
    else {
      unint64_t v13 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    }
    unsigned int v14 = a1[v13];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          if (v13 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_18;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          if (v13 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_18;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v13 < 4) {
            goto LABEL_18;
          }
          goto LABEL_22;
        case 4:
          int v17 = *(_DWORD *)a1;
          if (v13 < 4)
          {
LABEL_18:
            unsigned int v14 = (v17 | (v15 << (8 * v13))) + 2;
            break;
          }
LABEL_22:
          if (v17 != -1) {
            goto LABEL_23;
          }
          goto LABEL_20;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
LABEL_20:
      (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(a1, v10);
      unint64_t v18 = (unint64_t)&a1[v12 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_38:
      __swift_destroy_boxed_opaque_existential_0(v18);
    }
    else
    {
LABEL_23:
      unsigned int v19 = a1[v9];
      unsigned int v20 = v19 - 4;
      if (v19 >= 4)
      {
        if (v9 <= 3) {
          uint64_t v21 = v9;
        }
        else {
          uint64_t v21 = 4;
        }
        switch(v21)
        {
          case 1:
            int v22 = *a1;
            if (v9 < 4) {
              goto LABEL_33;
            }
            goto LABEL_35;
          case 2:
            int v22 = *(unsigned __int16 *)a1;
            if (v9 >= 4) {
              goto LABEL_35;
            }
            goto LABEL_33;
          case 3:
            int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v9 < 4) {
              goto LABEL_33;
            }
            goto LABEL_35;
          case 4:
            int v22 = *(_DWORD *)a1;
            if (v9 < 4) {
LABEL_33:
            }
              unsigned int v19 = (v22 | (v20 << (8 * v9))) + 4;
            else {
LABEL_35:
            }
              unsigned int v19 = v22 + 4;
            break;
          default:
            break;
        }
      }
      switch(v19)
      {
        case 1u:
        case 2u:
          unint64_t v18 = (unint64_t)a1;
          goto LABEL_38;
        case 3u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
    }
    unsigned int v23 = a2[v13];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v25 = v13;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v13 >= 4) {
            goto LABEL_57;
          }
          goto LABEL_51;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v13 >= 4) {
            goto LABEL_57;
          }
          goto LABEL_51;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v13 < 4) {
            goto LABEL_51;
          }
          goto LABEL_57;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v13 < 4)
          {
LABEL_51:
            unsigned int v23 = (v26 | (v24 << (8 * v13))) + 2;
            break;
          }
LABEL_57:
          if (v26 != -1) {
            goto LABEL_58;
          }
          goto LABEL_53;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
LABEL_53:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v11 + 16))(a1, a2, v10);
      unint64_t v27 = (unint64_t)&a1[v12 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = (unint64_t)&a2[v12 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v29 = *(void *)(v28 + 24);
      *(void *)(v27 + 24) = v29;
      *(void *)(v27 + 32) = *(void *)(v28 + 32);
      (**(void (***)(void))(v29 - 8))();
      char v30 = 1;
    }
    else
    {
LABEL_58:
      unsigned int v32 = a2[v9];
      unsigned int v33 = v32 - 4;
      if (v32 >= 4)
      {
        if (v9 <= 3) {
          uint64_t v34 = v9;
        }
        else {
          uint64_t v34 = 4;
        }
        switch(v34)
        {
          case 1:
            int v35 = *a2;
            if (v9 < 4) {
              goto LABEL_68;
            }
            goto LABEL_70;
          case 2:
            int v35 = *(unsigned __int16 *)a2;
            if (v9 >= 4) {
              goto LABEL_70;
            }
            goto LABEL_68;
          case 3:
            int v35 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v9 < 4) {
              goto LABEL_68;
            }
            goto LABEL_70;
          case 4:
            int v35 = *(_DWORD *)a2;
            if (v9 < 4) {
LABEL_68:
            }
              unsigned int v32 = (v35 | (v33 << (8 * v9))) + 4;
            else {
LABEL_70:
            }
              unsigned int v32 = v35 + 4;
            break;
          default:
            break;
        }
      }
      switch(v32)
      {
        case 1u:
          uint64_t v36 = *((void *)a2 + 3);
          *((void *)a1 + 3) = v36;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v36 - 8))(a1, a2);
          char v30 = 0;
          a1[v9] = 1;
          break;
        case 2u:
          uint64_t v37 = *((void *)a2 + 3);
          *((void *)a1 + 3) = v37;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v37 - 8))(a1, a2);
          char v30 = 0;
          a1[v9] = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
          char v30 = 0;
          a1[v8] = a2[v8];
          a1[v9] = 3;
          break;
        default:
          *(void *)a1 = *(void *)a2;
          a1[v9] = 0;
          swift_bridgeObjectRetain();
          char v30 = 0;
          break;
      }
    }
    a1[v13] = v30;
  }
  return a1;
}

uint64_t sub_236D43CE8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  if ((unint64_t)(v7 + 1) > 0x28) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 40;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  if (((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_16;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_16:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    (*(void (**)(uint64_t, unsigned __int8 *))(v9 + 32))(a1, a2);
    unint64_t v17 = (unint64_t)&a2[v10 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)(v17 + 32);
    long long v19 = *(_OWORD *)(v17 + 16);
    unint64_t v20 = (a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v17;
    *(_OWORD *)(v20 + 16) = v19;
    *(void *)(v20 + 32) = v18;
    char v21 = 1;
  }
  else
  {
    unsigned int v22 = a2[v8];
    unsigned int v23 = v22 - 4;
    if (v22 >= 4)
    {
      if (v8 <= 3) {
        uint64_t v24 = v8;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_29;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_29:
          int v26 = (v25 | (v23 << (8 * v8))) + 4;
          unsigned int v22 = v25 + 4;
          if (v8 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 1u:
        long long v28 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v28;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        char v27 = 1;
        break;
      case 2u:
        long long v29 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v29;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        char v27 = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        *(unsigned char *)(v7 + a1) = a2[v7];
        char v27 = 3;
        break;
      default:
        char v27 = 0;
        *(void *)a1 = *(void *)a2;
        break;
    }
    char v21 = 0;
    *(unsigned char *)(a1 + v8) = v27;
  }
  *(unsigned char *)(a1 + v11) = v21;
  return a1;
}

unsigned __int8 *sub_236D43FF4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_236DB9830();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    if ((unint64_t)(v8 + 1) > 0x28) {
      uint64_t v9 = v8 + 1;
    }
    else {
      uint64_t v9 = 40;
    }
    uint64_t v10 = *(void *)(a3 + 16);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void *)(v11 + 64);
    if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v9 + 1) {
      unint64_t v13 = v9 + 1;
    }
    else {
      unint64_t v13 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    }
    unsigned int v14 = a1[v13];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          if (v13 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_18;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          if (v13 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_18;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v13 < 4) {
            goto LABEL_18;
          }
          goto LABEL_22;
        case 4:
          int v17 = *(_DWORD *)a1;
          if (v13 < 4)
          {
LABEL_18:
            unsigned int v14 = (v17 | (v15 << (8 * v13))) + 2;
            break;
          }
LABEL_22:
          if (v17 != -1) {
            goto LABEL_23;
          }
          goto LABEL_20;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
LABEL_20:
      (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(a1, v10);
      unint64_t v18 = (unint64_t)&a1[v12 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_38:
      __swift_destroy_boxed_opaque_existential_0(v18);
    }
    else
    {
LABEL_23:
      unsigned int v19 = a1[v9];
      unsigned int v20 = v19 - 4;
      if (v19 >= 4)
      {
        if (v9 <= 3) {
          uint64_t v21 = v9;
        }
        else {
          uint64_t v21 = 4;
        }
        switch(v21)
        {
          case 1:
            int v22 = *a1;
            if (v9 < 4) {
              goto LABEL_33;
            }
            goto LABEL_35;
          case 2:
            int v22 = *(unsigned __int16 *)a1;
            if (v9 >= 4) {
              goto LABEL_35;
            }
            goto LABEL_33;
          case 3:
            int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v9 < 4) {
              goto LABEL_33;
            }
            goto LABEL_35;
          case 4:
            int v22 = *(_DWORD *)a1;
            if (v9 < 4) {
LABEL_33:
            }
              unsigned int v19 = (v22 | (v20 << (8 * v9))) + 4;
            else {
LABEL_35:
            }
              unsigned int v19 = v22 + 4;
            break;
          default:
            break;
        }
      }
      switch(v19)
      {
        case 1u:
        case 2u:
          unint64_t v18 = (unint64_t)a1;
          goto LABEL_38;
        case 3u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
    }
    unsigned int v23 = a2[v13];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v25 = v13;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v13 >= 4) {
            goto LABEL_55;
          }
          goto LABEL_51;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v13 >= 4) {
            goto LABEL_55;
          }
          goto LABEL_51;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v13 < 4) {
            goto LABEL_51;
          }
          goto LABEL_55;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v13 < 4)
          {
LABEL_51:
            unsigned int v23 = (v26 | (v24 << (8 * v13))) + 2;
            break;
          }
LABEL_55:
          if (v26 != -1) {
            goto LABEL_56;
          }
          goto LABEL_53;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
LABEL_53:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v11 + 32))(a1, a2, v10);
      unint64_t v27 = (unint64_t)&a2[v12 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v28 = *(void *)(v27 + 32);
      long long v29 = *(_OWORD *)(v27 + 16);
      unint64_t v30 = (unint64_t)&a1[v12 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v30 = *(_OWORD *)v27;
      *(_OWORD *)(v30 + 16) = v29;
      *(void *)(v30 + 32) = v28;
      char v31 = 1;
    }
    else
    {
LABEL_56:
      unsigned int v32 = a2[v9];
      unsigned int v33 = v32 - 4;
      if (v32 >= 4)
      {
        if (v9 <= 3) {
          uint64_t v34 = v9;
        }
        else {
          uint64_t v34 = 4;
        }
        switch(v34)
        {
          case 1:
            int v35 = *a2;
            if (v9 < 4) {
              goto LABEL_66;
            }
            goto LABEL_68;
          case 2:
            int v35 = *(unsigned __int16 *)a2;
            if (v9 >= 4) {
              goto LABEL_68;
            }
            goto LABEL_66;
          case 3:
            int v35 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v9 < 4) {
              goto LABEL_66;
            }
            goto LABEL_68;
          case 4:
            int v35 = *(_DWORD *)a2;
            if (v9 < 4) {
LABEL_66:
            }
              unsigned int v32 = (v35 | (v33 << (8 * v9))) + 4;
            else {
LABEL_68:
            }
              unsigned int v32 = v35 + 4;
            break;
          default:
            break;
        }
      }
      switch(v32)
      {
        case 1u:
          long long v37 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v37;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          char v36 = 1;
          break;
        case 2u:
          long long v38 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v38;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          char v36 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
          a1[v8] = a2[v8];
          char v36 = 3;
          break;
        default:
          char v36 = 0;
          *(void *)a1 = *(void *)a2;
          break;
      }
      char v31 = 0;
      a1[v9] = v36;
    }
    a1[v13] = v31;
  }
  return a1;
}

uint64_t sub_236D44538(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
  if ((unint64_t)(v6 + 1) > 0x28) {
    uint64_t v7 = v6 + 1;
  }
  else {
    uint64_t v7 = 40;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  if (((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v7 + 1) {
    unint64_t v9 = v7 + 1;
  }
  else {
    unint64_t v9 = ((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_26;
  }
  unint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 254) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (v14 < 2)
    {
LABEL_26:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 2) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_26;
  }
LABEL_18:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 255;
}

void sub_236D446D0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
  if ((unint64_t)(v8 + 1) > 0x28) {
    uint64_t v9 = v8 + 1;
  }
  else {
    uint64_t v9 = 40;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  if (((*(void *)(v10 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v9 + 1) {
    unint64_t v11 = v9 + 1;
  }
  else {
    unint64_t v11 = ((*(void *)(v10 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  size_t v12 = v11 + 1;
  if (a3 < 0xFF)
  {
    int v13 = 0;
  }
  else if (v12 <= 3)
  {
    unsigned int v16 = ((a3 + ~(-1 << (8 * v12)) - 254) >> (8 * v12)) + 1;
    if (HIWORD(v16))
    {
      int v13 = 4;
    }
    else if (v16 >= 0x100)
    {
      int v13 = 2;
    }
    else
    {
      int v13 = v16 > 1;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v14 = a2 - 255;
    if (v12 < 4)
    {
      int v15 = (v14 >> (8 * v12)) + 1;
      if (v11 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v12] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v15;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x236D448DCLL);
      case 4:
        *(_DWORD *)&a1[v12] = v15;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v13)
    {
      case 1:
        a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v11] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_236D44904(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
  if ((unint64_t)(v4 + 1) > 0x28) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 40;
  }
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  if (((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v5 + 1) {
    unint64_t v7 = v5 + 1;
  }
  else {
    unint64_t v7 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  uint64_t result = a1[v7];
  if (result >= 2)
  {
    if (v7 <= 3) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_16;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_16:
        unsigned int v11 = (v10 | ((result - 2) << (8 * v7))) + 2;
        unsigned int v12 = v10 + 2;
        if (v7 >= 4) {
          uint64_t result = v12;
        }
        else {
          uint64_t result = v11;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_236D44A10(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_236DB9830() - 8);
  uint64_t v7 = v6;
  if (a2 > 1)
  {
    uint64_t v12 = *(void *)(v6 + 64);
    if ((unint64_t)(v12 + 1) > 0x28) {
      uint64_t v13 = v12 + 1;
    }
    else {
      uint64_t v13 = 40;
    }
    uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
    if (((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v13 + 1) {
      size_t v15 = v13 + 1;
    }
    else {
      size_t v15 = ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    }
    unsigned int v16 = a2 - 2;
    if (v15 < 4)
    {
      unsigned int v17 = v16 >> (8 * v15);
      int v18 = v16 & ~(-1 << (8 * v15));
      a1[v15] = v17 + 2;
      bzero(a1, v15);
      if (v15 == 3)
      {
        *(_WORD *)a1 = v18;
        a1[2] = BYTE2(v18);
      }
      else if (v15 == 2)
      {
        *(_WORD *)a1 = v18;
      }
      else
      {
        *a1 = v18;
      }
    }
    else
    {
      a1[v15] = 2;
      bzero(a1, v15);
      *(_DWORD *)a1 = v16;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v9 = *(void *)(v7 + 64);
    if ((unint64_t)(v9 + 1) > 0x28) {
      uint64_t v10 = v9 + 1;
    }
    else {
      uint64_t v10 = 40;
    }
    if (((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v10 + 1) {
      unint64_t v11 = v10 + 1;
    }
    else {
      unint64_t v11 = ((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    }
    a1[v11] = a2;
  }
}

uint64_t sub_236D44B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D45164(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t *sub_236D44B9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_236D4525C(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44BB4(uint64_t a1, uint64_t a2)
{
  return sub_236D4539C(a1, a2, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4547C(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4556C(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4565C(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4574C(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D44C40);
}

uint64_t sub_236D44C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F8F5B8]);
}

uint64_t sub_236D44C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D44C6C);
}

uint64_t sub_236D44C6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F8F5B8]);
}

uint64_t type metadata accessor for RelationshipObserver.Changes()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D44C9C()
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t result = sub_236DB9D30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_236D44D38(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_236D44DC8(uint64_t a1)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v2 = sub_236DB9D30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_236D44E40(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D44EB4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D44F28(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D44F9C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_236D45010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D45024);
}

uint64_t sub_236D45024(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_236D450A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D450B4);
}

uint64_t sub_236D450B4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for RelationshipObserver.Change();
  uint64_t v4 = sub_236DB9D30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RelationshipObserver.Changes.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D4514C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D45164(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t sub_236D45164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = sub_236DB9830();
  if (v6 <= 0x3F)
  {
    uint64_t v7 = type metadata accessor for RelationshipObserver.Change();
    uint64_t result = a4(319, v7);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_236D45244(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_236D4525C(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t *sub_236D4525C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  int v6 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v9 = sub_236DB9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(a3 + 36);
    unint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for RelationshipObserver.Change();
    uint64_t v14 = a4(0, v13);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
  }
  return a1;
}

uint64_t sub_236D45384(uint64_t a1, uint64_t a2)
{
  return sub_236D4539C(a1, a2, MEMORY[0x263F8F590]);
}

uint64_t sub_236D4539C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t v8 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v9 = a3(0, v8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v7, v9);
}

uint64_t sub_236D45464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4547C(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t sub_236D4547C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  uint64_t v8 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v13 = a4(0, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
  return a1;
}

uint64_t sub_236D45554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4556C(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t sub_236D4556C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  uint64_t v8 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v13 = a4(0, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v10, v11, v13);
  return a1;
}

uint64_t sub_236D45644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4565C(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t sub_236D4565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  uint64_t v8 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v13 = a4(0, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
  return a1;
}

uint64_t sub_236D45734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D4574C(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t sub_236D4574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  uint64_t v8 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RelationshipObserver.Change();
  uint64_t v13 = a4(0, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v10, v11, v13);
  return a1;
}

uint64_t sub_236D45824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D45838);
}

uint64_t sub_236D45838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F8F590]);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v10(a1, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for RelationshipObserver.Change();
    uint64_t v13 = a4(0, v12);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + *(int *)(a3 + 36);
    return v14(v16, a2, v15);
  }
}

uint64_t sub_236D45960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D45974);
}

uint64_t sub_236D45974(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F8F590]);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  uint64_t v10 = sub_236DB9830();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v12(a1, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = type metadata accessor for RelationshipObserver.Change();
    uint64_t v15 = a5(0, v14);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + *(int *)(a4 + 36);
    return v16(v18, a2, a2, v17);
  }
}

uint64_t type metadata accessor for RelationshipObserver.ObserverState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D45ACC()
{
  uint64_t result = type metadata accessor for RelationshipObserver.State.PendingRelationshipUpdateState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_236D45B48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  if ((v8 & 0x1000F8) == 0 && ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18)
  {
    if (*(_DWORD *)(v6 + 84) < 0x7FFFFFFFu)
    {
      unint64_t v11 = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v11 >= 0xFFFFFFFF) {
        LODWORD(v11) = -1;
      }
      if (v11 != -1) {
        goto LABEL_9;
      }
    }
    else if ((*(unsigned int (**)(uint64_t *))(v6 + 48))(a2))
    {
LABEL_9:
      memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      return a1;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  swift_retain();
  return a1;
}

uint64_t sub_236D45CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84) >= 0x7FFFFFFFu)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v6 = *(void *)((a1 + *(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v6 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  uint64_t result = (v6 + 1);
  if (v6 == -1)
  {
LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_236D45DC0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v8 = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v8 >= 0xFFFFFFFF) {
      LODWORD(v8) = -1;
    }
    if (v8 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v6 + 48))(a2)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

void *sub_236D45EF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 >= 0x7FFFFFFF)
  {
    uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
    int v10 = v9(a1, v7, v5);
    int v11 = v9(a2, v7, v5);
    if (v10) {
      goto LABEL_3;
    }
LABEL_8:
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v11 = v13 + 1;
  if (v12 >= 0xFFFFFFFF) {
    goto LABEL_8;
  }
LABEL_3:
  if (v11)
  {
LABEL_10:
    memcpy(a1, a2, ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
  *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_236D460EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v8 = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v8 >= 0xFFFFFFFF) {
      LODWORD(v8) = -1;
    }
    if (v8 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v6 + 48))(a2)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

void *sub_236D46218(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 >= 0x7FFFFFFF)
  {
    uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
    int v10 = v9(a1, v7, v5);
    int v11 = v9(a2, v7, v5);
    if (v10) {
      goto LABEL_3;
    }
LABEL_8:
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v11 = v13 + 1;
  if (v12 >= 0xFFFFFFFF) {
    goto LABEL_8;
  }
LABEL_3:
  if (v11)
  {
LABEL_10:
    memcpy(a1, a2, ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
  *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_236D46408(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 - 1 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    unsigned int v11 = v9 + 2;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236D46580);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_21:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return (v10 | v16) + v7;
      default:
        break;
    }
  }
  if (v5 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    unsigned int v17 = v18 + 1;
  }
  else
  {
    unsigned int v17 = (*(uint64_t (**)(void))(v4 + 48))();
  }
  if (v17 >= 2) {
    return v17 - 1;
  }
  else {
    return 0;
  }
}

void sub_236D46594(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v9 = v8 - 1;
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v11 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v12 = a3 - v8 + 2;
  if (((v10 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8) {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v13 = 1;
  }
  if (v12 >= 2) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v9 < a3) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = a2 - v8;
    if (((v10 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v17 = v16 + 1;
    }
    else {
      int v17 = 1;
    }
    if (((v10 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      bzero(a1, ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x236D467ACLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (a2 + 1 <= v8)
        {
          if (a2 != -1)
          {
            if (v7 < 0x7FFFFFFF)
            {
              unsigned int v20 = (void *)((unint64_t)&a1[v10 + 7] & 0xFFFFFFFFFFFFFFF8);
              if (((a2 + 1) & 0x80000000) != 0) {
                uint64_t v21 = a2 - 0x7FFFFFFF;
              }
              else {
                uint64_t v21 = a2;
              }
              *unsigned int v20 = v21;
            }
            else
            {
              unsigned int v19 = *(void (**)(void))(v6 + 56);
              v19();
            }
          }
        }
        else if (((v10 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
        {
          unsigned int v18 = a2 - v8;
          bzero(a1, ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
          *(_DWORD *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_236D467D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84) >= 0x7FFFFFFFu) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  unint64_t v4 = *(void *)((a1 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v4 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  return (v4 + 1);
}

void sub_236D4684C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (v7 >= a2)
  {
    if (a2)
    {
      if (v5 < 0x7FFFFFFF)
      {
        unint64_t v11 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0) {
          uint64_t v12 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v12 = a2 - 1;
        }
        *unint64_t v11 = v12;
      }
      else
      {
        uint64_t v10 = *(void (**)(void))(v4 + 56);
        v10();
      }
    }
  }
  else
  {
    size_t v8 = ((v6 + 7) & 0xFFFFFFF8) + 8;
    if (v8)
    {
      int v9 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v9;
    }
  }
}

uint64_t type metadata accessor for RelationshipObserver.State.PendingRelationshipUpdateState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D4696C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_236D46A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_236D46B04(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D46B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_236D46BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236D46C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_236D46CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236D46D80(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236D46ECCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_236D46EE0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x236D470BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unsigned int v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *unsigned int v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for RelationshipObserver.Context()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D470FC()
{
  return sub_236D4847C((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D47144(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_236D471E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_236D4159C(a1, a2, v3, a3);
}

uint64_t sub_236D471EC(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t, uint64_t), uint64_t a3)
{
  void (*v51)(_OWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _OWORD v56[2];
  uint64_t v57;
  uint64_t v58;

  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2538);
  uint64_t v5 = MEMORY[0x270FA5388](v50);
  uint64_t v49 = (uint64_t)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)v41 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)v41 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  v41[1] = v3;
  uint64_t v58 = MEMORY[0x263F8EE78];
  sub_236D56534(0, v10, 0);
  uint64_t result = sub_236D7E9D4(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v42 = a1 + 80;
  int64_t v43 = v10;
  uint64_t v45 = a1 + 64;
  uint64_t v46 = a1;
  uint64_t v44 = v13;
  uint64_t v17 = v50;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v53 = v15;
    uint64_t v54 = 1 << v14;
    uint64_t v21 = (uint64_t)v47;
    uint64_t v55 = &v47[*(int *)(v17 + 48)];
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = a1;
    uint64_t v24 = sub_236DB9830();
    uint64_t v25 = *(void *)(v24 - 8);
    int v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v26(v21, v22 + *(void *)(v25 + 72) * v14, v24);
    uint64_t v27 = (uint64_t)v55;
    sub_236D1B32C(*(void *)(v23 + 56) + 40 * v14, (uint64_t)v55);
    uint64_t v28 = v48;
    v26((uint64_t)v48, v21, v24);
    sub_236D1B32C(v27, (uint64_t)&v28[*(int *)(v17 + 48)]);
    uint64_t v29 = (uint64_t)v28;
    uint64_t v30 = v49;
    sub_236D26768(v29, v49, &qword_2688D2538);
    sub_236D267CC(v21, &qword_2688D2538);
    v51(v56, v30, v30 + *(int *)(v17 + 48));
    sub_236D267CC(v30, &qword_2688D2538);
    uint64_t v11 = v58;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_236D56534(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v58;
    }
    unint64_t v32 = *(void *)(v11 + 16);
    unint64_t v31 = *(void *)(v11 + 24);
    if (v32 >= v31 >> 1)
    {
      uint64_t result = sub_236D56534(v31 > 1, v32 + 1, 1);
      uint64_t v11 = v58;
    }
    *(void *)(v11 + 16) = v32 + 1;
    uint64_t v33 = v11 + 40 * v32;
    long long v34 = v56[0];
    long long v35 = v56[1];
    *(void *)(v33 + 64) = v57;
    *(_OWORD *)(v33 + 32) = v34;
    *(_OWORD *)(v33 + 48) = v35;
    a1 = v46;
    int64_t v18 = 1 << *(unsigned char *)(v46 + 32);
    if (v14 >= v18) {
      goto LABEL_27;
    }
    uint64_t v16 = v45;
    uint64_t v36 = *(void *)(v45 + 8 * v20);
    if ((v36 & v54) == 0) {
      goto LABEL_28;
    }
    LODWORD(v13) = v44;
    if (*(_DWORD *)(v46 + 36) != v44) {
      goto LABEL_29;
    }
    unint64_t v37 = v36 & (-2 << (v14 & 0x3F));
    if (v37)
    {
      int64_t v18 = __clz(__rbit64(v37)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v43;
    }
    else
    {
      unint64_t v38 = v20 + 1;
      unint64_t v39 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v43;
      if (v20 + 1 < v39)
      {
        unint64_t v40 = *(void *)(v45 + 8 * v38);
        if (v40)
        {
LABEL_22:
          int64_t v18 = __clz(__rbit64(v40)) + (v38 << 6);
        }
        else
        {
          while (v39 - 2 != v20)
          {
            unint64_t v40 = *(void *)(v42 + 8 * v20++);
            if (v40)
            {
              unint64_t v38 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v15 = v53 + 1;
    uint64_t v14 = v18;
    if (v53 + 1 == v19) {
      return v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_236D475C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_236D4761C(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*(void *)v3 + 120);
  uint64_t v7 = *(void *)(*(void *)v3 + 80);
  type metadata accessor for RelationshipObserver.ObserverState();
  *(void *)(v3 + v6) = sub_236DB9960();
  uint64_t v8 = v3 + *(void *)(*(void *)v3 + 128);
  uint64_t updated = type metadata accessor for RelationshipObserver.State.PendingRelationshipUpdateState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v8, 1, 1, updated);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v3 + *(void *)(*(void *)v3 + 96), a1, v7);
  *(void *)(v3 + *(void *)(*(void *)v3 + 104)) = sub_236D498E8(v7);
  sub_236D1B1E4(a2, v3 + *(void *)(*(void *)v3 + 112));
  return v3;
}

uint64_t sub_236D4779C(uint64_t a1, long long *a2)
{
  return sub_236D4761C(a1, a2);
}

uint64_t sub_236D477F0()
{
  return sub_236DBA2F0();
}

uint64_t sub_236D4786C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a2;
  unint64_t v39 = a1;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2538);
  uint64_t v6 = MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v37 - v8;
  uint64_t v9 = sub_236DB9830();
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = 0;
  int64_t v14 = 0;
  uint64_t v49 = (void *)a3;
  uint64_t v15 = *(void *)(a3 + 64);
  uint64_t v41 = a3 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v45 = v11 + 16;
  uint64_t v46 = v11;
  int64_t v42 = (unint64_t)(v16 + 63) >> 6;
  int64_t v43 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v44 = v13;
  while (1)
  {
    if (v18)
    {
      uint64_t v50 = (v18 - 1) & v18;
      int64_t v51 = v14;
      unint64_t v21 = __clz(__rbit64(v18)) | (v14 << 6);
      goto LABEL_19;
    }
    BOOL v22 = __OFADD__(v14, 1);
    int64_t v23 = v14 + 1;
    if (v22)
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v42) {
      return sub_236D9B090(v39, v38, v40, v49);
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    uint64_t v50 = (v24 - 1) & v24;
    int64_t v51 = v23;
    unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_19:
    int v26 = v49;
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
    v27(v13, v49[6] + *(void *)(v46 + 72) * v21, v9);
    sub_236D1B32C(v26[7] + 40 * v21, (uint64_t)v55);
    uint64_t v28 = v48;
    uint64_t v29 = v9;
    uint64_t v30 = (uint64_t)v56;
    uint64_t v31 = (uint64_t)&v56[*(int *)(v48 + 48)];
    v27(v56, (unint64_t)v13, v29);
    sub_236D1B32C((uint64_t)v55, v31);
    uint64_t v32 = (uint64_t)v47;
    uint64_t v33 = (uint64_t)&v47[*(int *)(v28 + 48)];
    uint64_t v34 = v30;
    uint64_t v9 = v29;
    v27(v47, v34, v29);
    sub_236D1B32C(v31, v33);
    if (*(void *)(a4 + 16) && (unint64_t v35 = sub_236D8584C(v32), (v36 & 1) != 0))
    {
      sub_236D1B32C(*(void *)(a4 + 56) + 40 * v35, (uint64_t)&v52);
    }
    else
    {
      uint64_t v54 = 0;
      long long v52 = 0u;
      long long v53 = 0u;
    }
    unint64_t v18 = v50;
    int64_t v14 = v51;
    sub_236D267CC((uint64_t)v56, &qword_2688D2538);
    uint64_t v19 = *((void *)&v53 + 1);
    sub_236D267CC((uint64_t)&v52, &qword_2688D2540);
    __swift_destroy_boxed_opaque_existential_0(v33);
    unint64_t v20 = *v43;
    (*v43)(v32, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    uint64_t v13 = v44;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v44, v9);
    if (!v19)
    {
      *(unint64_t *)((char *)v39 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      BOOL v22 = __OFADD__(v40++, 1);
      if (v22)
      {
        __break(1u);
        return sub_236D9B090(v39, v38, v40, v49);
      }
    }
  }
  int64_t v25 = v23 + 1;
  if (v23 + 1 >= v42) {
    return sub_236D9B090(v39, v38, v40, v49);
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v42) {
    return sub_236D9B090(v39, v38, v40, v49);
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v23 + 3;
  if (v23 + 3 >= v42) {
    return sub_236D9B090(v39, v38, v40, v49);
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v42) {
      return sub_236D9B090(v39, v38, v40, v49);
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_236D47CD0(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_236D4786C((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_236D4786C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x237E101A0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_236D47EDC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D47FBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)(v1 + 5);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_236D17ED0;
  return sub_236D7AA3C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_236D480C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D4812C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for HomesStore.AnyChanges(0) - 8) + 80);
  uint64_t v2 = (v1 + 48) & ~v1;
  swift_unknownObjectRelease();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D4823C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for HomesStore.AnyChanges(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = (uint64_t)v1 + v7;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_236D17ED0;
  return sub_236D3F0DC(a1, v8, v9, v10, v11, v4, v5);
}

uint64_t sub_236D48374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236D483D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D4843C()
{
  return sub_236D3FED0(*(void *)(v0 + 32));
}

uint64_t sub_236D48470(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236D4847C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D484C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2, v3);
}

uint64_t sub_236D4855C@<X0>(uint64_t a1@<X8>)
{
  return sub_236D42168(a1);
}

id HomesStore.CoreData.PersistentContainer.coordinator.getter()
{
  return *(id *)(v0 + 16);
}

id HomesStore.CoreData.PersistentContainer.store.getter()
{
  return *(id *)(v0 + 24);
}

id HomesStore.CoreData.PersistentContainer.managedObjectContext.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t sub_236D48594(int a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    sub_236DBA260();
    sub_236DB9A70();
    swift_getErrorValue();
    sub_236DBA5E0();
    uint64_t result = sub_236DBA450();
    __break(1u);
  }
  return result;
}

void sub_236D48644(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id *HomesStore.CoreData.PersistentContainer.deinit()
{
  return v0;
}

uint64_t HomesStore.CoreData.PersistentContainer.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 40, 7);
}

id sub_236D48748@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)(*(void *)v1 + 16);
  *a1 = v2;
  return v2;
}

id sub_236D48758@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)(*(void *)v1 + 24);
  *a1 = v2;
  return v2;
}

id sub_236D48768@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)(*(void *)v1 + 32);
  *a1 = v2;
  return v2;
}

uint64_t _s11HomeKitCore10HomesStoreC0C4DataO19PersistentContainerC13configurationAgE13ConfigurationV_tcfC_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_236DB9770();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_allocWithZone(MEMORY[0x263EFF298]);
  uint64_t v12 = (void *)sub_236DB9750();
  id v13 = objc_msgSend(v11, sel_initWithContentsOfURL_, v12);

  if (!v13)
  {
LABEL_17:
    sub_236D48F80(a1, (uint64_t)v4, type metadata accessor for HomesStore.CoreData.Configuration);
    uint64_t aBlock = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_236DBA260();
    sub_236DB9A70();
    sub_236D48F38(&qword_2688D2568, MEMORY[0x263F06EA8]);
    sub_236DBA5C0();
    sub_236DB9A70();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  id v14 = objc_allocWithZone(MEMORY[0x263EFF320]);
  id v38 = v13;
  uint64_t v4 = (char *)objc_msgSend(v14, sel_initWithManagedObjectModel_, v13);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF328]), sel_init);
  sub_236D291DC(0, &qword_2688D2570);
  uint64_t v16 = (void *)sub_236DBA010();
  objc_msgSend(v15, sel_setOption_forKey_, v16, *MEMORY[0x263EFF0B0]);

  uint64_t v17 = (void *)sub_236DBA010();
  objc_msgSend(v15, sel_setOption_forKey_, v17, *MEMORY[0x263EFF108]);

  unint64_t v18 = (void *)sub_236DB9A00();
  objc_msgSend(v15, sel_setConfiguration_, v18);

  objc_msgSend(v15, sel_setShouldInferMappingModelAutomatically_, 1);
  objc_msgSend(v15, sel_setShouldMigrateStoreAutomatically_, 1);
  objc_msgSend(v15, sel_setShouldAddStoreAsynchronously_, 0);
  sub_236D48F80(a1 + *(int *)(v2 + 24), (uint64_t)v10, type metadata accessor for HomesStore.CoreData.Configuration.StoreType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = v36;
      uint64_t v20 = v37;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v7, v10, v37);
      BOOL v22 = (void *)sub_236DB9750();
      objc_msgSend(v15, sel_setURL_, v22);

      objc_msgSend(v15, sel_setType_, *MEMORY[0x263EFF168]);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
    }
    else
    {
      objc_msgSend(v15, sel_setType_, *MEMORY[0x263EFF000]);
    }
  }
  else
  {
    objc_msgSend(v15, sel_setType_, *MEMORY[0x263EFF1C0]);
    int64_t v23 = (void *)sub_236DB9A00();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setOption_forKey_, v23, *MEMORY[0x263EFF1B8]);

    unint64_t v24 = (void *)sub_236DBA010();
    objc_msgSend(v15, sel_setOption_forKey_, v24, *MEMORY[0x263EFF1A0]);
  }
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF288]), sel_initWithConcurrencyType_, 1);
  objc_msgSend(v25, sel_setPersistentStoreCoordinator_, v4);
  int v26 = (void *)sub_236DB9A00();
  objc_msgSend(v25, sel_setName_, v26);

  int64_t v43 = sub_236D48594;
  uint64_t v44 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v40 = 1107296256;
  uint64_t v41 = sub_236D48644;
  int64_t v42 = &block_descriptor_0;
  uint64_t v27 = _Block_copy(&aBlock);
  objc_msgSend(v4, sel_addPersistentStoreWithDescription_completionHandler_, v15, v27);
  _Block_release(v27);
  id v28 = objc_msgSend(v4, sel_persistentStores);
  sub_236D291DC(0, (unint64_t *)&qword_2688D2578);
  unint64_t v29 = sub_236DB9B30();

  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_236DBA460();
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_9;
    }
  }
  else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v30 = (id)MEMORY[0x237E0F570](0, v29);
      goto LABEL_12;
    }
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v30 = *(id *)(v29 + 32);
LABEL_12:
      id v31 = v30;

      swift_bridgeObjectRelease();
      type metadata accessor for HomesStore.CoreData.PersistentContainer();
      uint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = v4;
      v32[3] = v31;
      v32[4] = v25;
      sub_236D2BC3C(a1);
      return (uint64_t)v32;
    }
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236D48EA8()
{
  return sub_236D48F38((unint64_t *)&qword_2688D2060, (void (*)(uint64_t))_s5ProxyCMa_0);
}

_UNKNOWN **sub_236D48EF0()
{
  return &off_26B814A40;
}

uint64_t type metadata accessor for HomesStore.CoreData.PersistentContainer()
{
  return self;
}

uint64_t method lookup function for HomesStore.CoreData.PersistentContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HomesStore.CoreData.PersistentContainer);
}

uint64_t sub_236D48F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D48F80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_236D49000(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25B0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_236DBE720;
  *(void *)(v2 + 32) = objc_msgSend(a1, sel_entity);
  uint64_t v80 = v2;
  sub_236DB9B50();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBE720;
  uint64_t v69 = a1;
  *(void *)(inited + 32) = objc_msgSend(a1, sel_entity);
  sub_236DB9B50();
  uint64_t v4 = sub_236D36424(inited);
  swift_bridgeObjectRelease();
  uint64_t v79 = v4;
  unint64_t v5 = sub_236D49AC8();
  if (!v5)
  {
LABEL_75:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = (void *)v5;
  id v7 = (SEL *)&property descriptor for HMCDAppleMediaDeviceModel.isCurrentDevice;
  while (1)
  {
    id v8 = objc_msgSend(v6, sel_name);
    uint64_t v70 = v6;
    if (!v8)
    {
      sub_236D4BA20();
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    uint64_t v9 = v8;
    uint64_t v10 = sub_236DB9A10();
    uint64_t v12 = v11;

    uint64_t v13 = sub_236D4BA20();
    if (!v12) {
      goto LABEL_13;
    }
    if (v10 == v13 && v12 == v14)
    {
      swift_bridgeObjectRelease_n();
LABEL_78:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_2688D1270 != -1) {
        goto LABEL_86;
      }
      goto LABEL_79;
    }
    char v16 = sub_236DBA600();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_78;
    }
LABEL_14:
    id v17 = objc_msgSend(v6, sel_relationshipsByName);
    sub_236D291DC(0, (unint64_t *)&qword_2688D1AB8);
    uint64_t v18 = sub_236DB9990();

    int64_t v19 = 0;
    unint64_t v78 = MEMORY[0x263F8EE78];
    uint64_t v20 = v18 + 64;
    uint64_t v21 = 1 << *(unsigned char *)(v18 + 32);
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v23 = v22 & *(void *)(v18 + 64);
    int64_t v24 = (unint64_t)(v21 + 63) >> 6;
    while (v23)
    {
      while (1)
      {
        unint64_t v25 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        unint64_t v26 = v25 | (v19 << 6);
LABEL_39:
        id v30 = *(id *)(*(void *)(v18 + 56) + 8 * v26);
        if ([v30 v7[80]]) {
          break;
        }
        sub_236DBA340();
        sub_236DBA380();
        sub_236DBA390();
        sub_236DBA350();
        if (!v23) {
          goto LABEL_21;
        }
      }
    }
LABEL_21:
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    if (v27 < v24)
    {
      unint64_t v28 = *(void *)(v20 + 8 * v27);
      ++v19;
      if (v28) {
        goto LABEL_38;
      }
      int64_t v19 = v27 + 1;
      if (v27 + 1 < v24)
      {
        unint64_t v28 = *(void *)(v20 + 8 * v19);
        if (v28) {
          goto LABEL_38;
        }
        int64_t v19 = v27 + 2;
        if (v27 + 2 < v24)
        {
          unint64_t v28 = *(void *)(v20 + 8 * v19);
          if (v28) {
            goto LABEL_38;
          }
          int64_t v19 = v27 + 3;
          if (v27 + 3 < v24)
          {
            unint64_t v28 = *(void *)(v20 + 8 * v19);
            if (v28) {
              goto LABEL_38;
            }
            int64_t v19 = v27 + 4;
            if (v27 + 4 < v24)
            {
              unint64_t v28 = *(void *)(v20 + 8 * v19);
              if (v28) {
                goto LABEL_38;
              }
              int64_t v29 = v27 + 5;
              if (v29 < v24) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_42:
    swift_release();
    unint64_t v31 = v78;
    if ((v78 & 0x8000000000000000) != 0 || (v78 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_236DBA460();
      swift_release();
      uint64_t v33 = (SEL *)&property descriptor for HMCDAppleMediaDeviceModel.isCurrentDevice;
      if (!v32) {
        goto LABEL_3;
      }
LABEL_45:
      unint64_t v34 = 0;
      uint64_t v75 = v32;
      unint64_t v76 = v31 & 0xC000000000000001;
      unint64_t v74 = v31 + 32;
      unint64_t v71 = v31;
      while (1)
      {
        if (v76)
        {
          id v35 = (id)MEMORY[0x237E0F570](v34, v31);
        }
        else
        {
          if (v34 >= *(void *)(v31 + 16)) {
            goto LABEL_84;
          }
          id v35 = *(id *)(v74 + 8 * v34);
        }
        uint64_t v36 = v35;
        if (__OFADD__(v34++, 1)) {
          goto LABEL_83;
        }
        id v38 = v7;
        id v39 = [v35 v33[129]];
        if (v39)
        {
          unint64_t v40 = v39;
          uint64_t v41 = v79;
          if ((v79 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            id v42 = v40;
            char v43 = sub_236DBA1D0();
            swift_bridgeObjectRelease();

            if ((v43 & 1) == 0) {
              goto LABEL_70;
            }

            uint64_t v32 = v75;
          }
          else
          {
            if (!*(void *)(v79 + 16)) {
              goto LABEL_70;
            }
            swift_bridgeObjectRetain();
            uint64_t v44 = sub_236DBA020();
            uint64_t v45 = -1 << *(unsigned char *)(v41 + 32);
            unint64_t v46 = v44 & ~v45;
            uint64_t v73 = v41 + 56;
            if (((*(void *)(v41 + 56 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
              goto LABEL_69;
            }
            sub_236D291DC(0, (unint64_t *)&qword_2688D1AB0);
            id v47 = *(id *)(*(void *)(v41 + 48) + 8 * v46);
            char v48 = sub_236DBA030();

            if (v48)
            {

              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v72 = ~v45;
              unint64_t v49 = (v46 + 1) & ~v45;
              if (((*(void *)(v73 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
                goto LABEL_69;
              }
              id v50 = *(id *)(*(void *)(v41 + 48) + 8 * v49);
              char v51 = sub_236DBA030();

              if ((v51 & 1) == 0)
              {
                for (unint64_t i = v49 + 1; ; unint64_t i = v53 + 1)
                {
                  unint64_t v53 = i & v72;
                  if (((*(void *)(v73 + (((i & v72) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v72)) & 1) == 0) {
                    break;
                  }
                  id v54 = *(id *)(*(void *)(v41 + 48) + 8 * v53);
                  char v55 = sub_236DBA030();

                  if (v55) {
                    goto LABEL_63;
                  }
                }
LABEL_69:
                swift_bridgeObjectRelease();
                uint64_t v33 = (SEL *)&property descriptor for HMCDAppleMediaDeviceModel.isCurrentDevice;
                unint64_t v31 = v71;
LABEL_70:
                id v56 = v40;
                sub_236D302D8(&v78, v56);

                id v57 = v56;
                MEMORY[0x237E0EDD0]();
                if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_236DB9B80();
                }
                sub_236DB9BC0();
                sub_236DB9B50();

                uint64_t v32 = v75;
                goto LABEL_47;
              }
LABEL_63:

              swift_bridgeObjectRelease();
            }
            uint64_t v33 = (SEL *)&property descriptor for HMCDAppleMediaDeviceModel.isCurrentDevice;
            unint64_t v31 = v71;
            uint64_t v32 = v75;
          }
        }
        else
        {
        }
LABEL_47:
        id v7 = v38;
        if (v34 == v32) {
          goto LABEL_3;
        }
      }
    }
    uint64_t v32 = *(void *)(v78 + 16);
    uint64_t v33 = (SEL *)&property descriptor for HMCDAppleMediaDeviceModel.isCurrentDevice;
    if (v32) {
      goto LABEL_45;
    }
LABEL_3:

    swift_release();
    uint64_t v6 = (void *)sub_236D49AC8();
    if (!v6) {
      goto LABEL_75;
    }
  }
  unint64_t v28 = *(void *)(v20 + 8 * v29);
  if (v28)
  {
    int64_t v19 = v29;
LABEL_38:
    unint64_t v23 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v19 << 6);
    goto LABEL_39;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v24) {
      goto LABEL_42;
    }
    unint64_t v28 = *(void *)(v20 + 8 * v19);
    ++v29;
    if (v28) {
      goto LABEL_38;
    }
  }
LABEL_85:
  __break(1u);
LABEL_86:
  swift_once();
LABEL_79:
  uint64_t v60 = sub_236DB9950();
  __swift_project_value_buffer(v60, (uint64_t)qword_2688D2580);
  id v61 = v69;
  uint64_t v62 = sub_236DB9930();
  os_log_type_t v63 = sub_236DB9F40();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v65 = (void *)swift_slowAlloc();
    unint64_t v77 = swift_slowAlloc();
    unint64_t v78 = v77;
    *(_DWORD *)uint64_t v64 = 138412546;
    id v66 = v61;
    sub_236DBA0B0();
    *uint64_t v65 = v61;

    *(_WORD *)(v64 + 12) = 2080;
    uint64_t v67 = sub_236DBA7A0();
    sub_236DB6880(v67, v68, (uint64_t *)&v78);
    sub_236DBA0B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v62, v63, "Relationship %@ is contained by %s", (uint8_t *)v64, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    uint64_t v58 = 1;
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v65, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v77, -1, -1);
    MEMORY[0x237E101A0](v64, -1, -1);
  }
  else
  {

    return 1;
  }
  return v58;
}

uint64_t sub_236D498E8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2598);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25A0);
  uint64_t v5 = sub_236D18D98(v1, v3, (uint64_t)sub_236D49A48, 0, a1, v3, v4);
  if (*(void *)(v5 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25A8);
    uint64_t v6 = sub_236DBA490();
  }
  else
  {
    uint64_t v6 = MEMORY[0x263F8EE80];
  }
  uint64_t v8 = v6;
  sub_236D49CF0(v5, 1, &v8);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_236D499C8()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2580);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2580);
  return sub_236DB9940();
}

uint64_t sub_236D49A48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D25A0) + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DBA280();
  return sub_236D1B32C((uint64_t)a1, v3);
}

unint64_t sub_236D49AC8()
{
  if (!(*v0 >> 62))
  {
    if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_236DBA460();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
LABEL_3:
  unint64_t result = sub_236D49C80();
  if (!result)
  {
    if (*v0 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_236DBA460();
      swift_bridgeObjectRelease();
      unint64_t result = v4 - 1;
      if (!__OFSUB__(v4, 1)) {
        return sub_236D49B94(result);
      }
    }
    else
    {
      uint64_t v2 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = v2 - 1;
      if (!__OFSUB__(v2, 1)) {
        return sub_236D49B94(result);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_236D49B94(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_236D243E0(v3);
    *uint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      sub_236DB9B50();
      return v10;
    }
  }
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D49C80()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v0 = v1;
  if (!result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_236D243E0(v1);
    uint64_t v1 = result;
    *uint64_t v0 = result;
  }
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(void *)(v3 + 16) = v5;
    sub_236DB9B50();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_236D49CF0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v44 = a3;
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25A0);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return result;
  }
  v34[1] = a1;
  v34[2] = v3;
  id v39 = (long long *)&v13[*(int *)(result + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v16 = *(void *)(v11 + 72);
  uint64_t v36 = v7;
  uint64_t v37 = v16;
  unint64_t v40 = (void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  id v35 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  id v38 = v13;
  uint64_t v17 = (uint64_t)v41;
  while (1)
  {
    sub_236D4A04C(v15, (uint64_t)v13);
    int64_t v19 = *v40;
    uint64_t v20 = v6;
    (*v40)(v17, v13, v6);
    sub_236D1B1E4(v39, (uint64_t)v43);
    uint64_t v21 = *v44;
    unint64_t v23 = sub_236D8584C(v17);
    uint64_t v24 = *(void *)(v21 + 16);
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (*(void *)(v21 + 24) >= v26)
    {
      if (a2)
      {
        if (v22) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_236D95A34();
        if (v27) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_236D96FEC(v26, a2 & 1);
      unint64_t v28 = sub_236D8584C((uint64_t)v41);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_20;
      }
      unint64_t v23 = v28;
      if (v27)
      {
LABEL_3:
        sub_236D1B1E4(v43, (uint64_t)v42);
        uint64_t v6 = v20;
        (*v35)((uint64_t)v41, v20);
        uint64_t v18 = *(void *)(*v44 + 56) + 40 * v23;
        __swift_destroy_boxed_opaque_existential_0(v18);
        sub_236D1B1E4(v42, v18);
        goto LABEL_4;
      }
    }
    id v30 = (void *)*v44;
    *(void *)(*v44 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v6 = v20;
    v19(v30[6] + *(void *)(v36 + 72) * v23, v41, v20);
    sub_236D1B1E4(v43, v30[7] + 40 * v23);
    uint64_t v31 = v30[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_19;
    }
    v30[2] = v33;
LABEL_4:
    uint64_t v13 = v38;
    v15 += v37;
    a2 = 1;
    if (!--v14) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_236DBA650();
  __break(1u);
  return result;
}

uint64_t sub_236D4A04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HomesStore.Room.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.Room.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Room() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HomesStore.Room()
{
  uint64_t result = qword_2688D2620;
  if (!qword_2688D2620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void static HomesStore.Room.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t HomesStore.Room.hash(into:)()
{
  sub_236DB9830();
  sub_236D4B114((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  type metadata accessor for HomesStore.Room();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.Room.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for HomesStore.Room() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_236DBA600();
}

uint64_t sub_236D4A2EC()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 25705;
  }
}

uint64_t sub_236D4A314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D4B924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D4A33C(uint64_t a1)
{
  unint64_t v2 = sub_236D4A56C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D4A378(uint64_t a1)
{
  unint64_t v2 = sub_236D4A56C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.Room.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D4A56C();
  sub_236DBA760();
  v8[15] = 0;
  sub_236DB9830();
  sub_236D4B114(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.Room();
    v8[14] = 1;
    sub_236DBA580();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_236D4A56C()
{
  unint64_t result = qword_2688D25D8;
  if (!qword_2688D25D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D25D8);
  }
  return result;
}

uint64_t HomesStore.Room.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.Room.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_236DB9830();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25E0);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HomesStore.Room();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D4A56C();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v22 = v11;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  char v29 = 0;
  sub_236D4B114(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v14 = v26;
  sub_236DBA530();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v6, v14);
  char v28 = 1;
  uint64_t v15 = sub_236DBA510();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v27);
  uint64_t v19 = (uint64_t)v22;
  uint64_t v18 = v23;
  uint64_t v20 = (uint64_t *)&v22[*(int *)(v9 + 20)];
  *uint64_t v20 = v15;
  v20[1] = v17;
  sub_236D4AC14(v19, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236D4AC78(v19);
}

void sub_236D4A9A8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_236D4A9B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.Room.init(from:)(a1, a2);
}

uint64_t sub_236D4A9CC(void *a1)
{
  return HomesStore.Room.encode(to:)(a1);
}

uint64_t sub_236D4A9E4()
{
  return sub_236DBA710();
}

uint64_t sub_236D4AAA4()
{
  sub_236DB9830();
  sub_236D4B114((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D4AB58()
{
  return sub_236DBA710();
}

uint64_t sub_236D4AC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Room();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D4AC78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.Room();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236D4ACD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }
  return sub_236DBA600();
}

uint64_t static PartialModelRelationshipDescriptor<>.room.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25E8);
  return MEMORY[0x270FA0480](v0, &unk_2688D1390);
}

{
  return sub_236D4AEF4(&qword_2688D12F8);
}

uint64_t sub_236D4AD94(uint64_t a1)
{
  return sub_236D4AE6C(a1, (uint64_t)&unk_236DBEA30, &qword_2688D2658, sub_236DAF5F8, &qword_2688D25B8);
}

uint64_t static PartialModelRelationshipDescriptor<>.accessories.getter()
{
  return sub_236D4AEF4(&qword_2688D1278);
}

{
  return sub_236D4AEF4(&qword_2688D1330);
}

uint64_t sub_236D4ADE8(uint64_t a1)
{
  return sub_236D4AE6C(a1, (uint64_t)&unk_236DBE9F8, &qword_2688D2650, sub_236DAFA4C, &qword_2688D25C0);
}

uint64_t static PartialModelRelationshipDescriptor<>.zones.getter()
{
  return sub_236D4AEF4(&qword_2688D1280);
}

{
  return sub_236D4AEF4(&qword_2688D1348);
}

uint64_t sub_236D4AE3C(uint64_t a1)
{
  return sub_236D4AE6C(a1, (uint64_t)&unk_236DBE9C8, &qword_2688D2648, sub_236DAFEA4, &qword_2688D25C8);
}

uint64_t sub_236D4AE6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_allocObject();
  uint64_t result = a4(KeyPath);
  *a5 = result;
  return result;
}

uint64_t static PartialModelRelationshipDescriptor<>.home.getter()
{
  return sub_236D4AEF4(&qword_2688D1288);
}

{
  return sub_236D4AEF4(&qword_2688D12C0);
}

{
  return sub_236D4AEF4(&qword_2688D12F0);
}

{
  uint64_t v0;
  uint64_t vars8;

  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D34C0);
  return MEMORY[0x270FA0480](v0, &unk_2688D1430);
}

uint64_t sub_236D4AEF4(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_236D4AF40(void *a1)
{
  a1[1] = sub_236D4B114(&qword_2688D25F0, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
  a1[2] = sub_236D4B114(&qword_2688D25F8, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
  a1[3] = sub_236D4B114(&qword_2688D2600, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
  a1[4] = sub_236D4B114(&qword_2688D2608, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
  uint64_t result = sub_236D4B114(&qword_2688D2610, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
  a1[5] = result;
  return result;
}

uint64_t sub_236D4B03C()
{
  return sub_236D4B114((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D4B084()
{
  return sub_236D4B114(&qword_2688D2618, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
}

uint64_t sub_236D4B0CC()
{
  return sub_236D4B114(&qword_2688D1820, (void (*)(uint64_t))type metadata accessor for HomesStore.Room);
}

uint64_t sub_236D4B114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *_s4RoomVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s4RoomVwxx(uint64_t a1)
{
  uint64_t v2 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s4RoomVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4RoomVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4RoomVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s4RoomVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4RoomVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D4B4EC);
}

uint64_t sub_236D4B4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s4RoomVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D4B5C4);
}

uint64_t sub_236D4B5C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_236D4B684()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s4RoomV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D4B7E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4RoomV10CodingKeysOMa()
{
  return &_s4RoomV10CodingKeysON;
}

unint64_t sub_236D4B820()
{
  unint64_t result = qword_2688D2630;
  if (!qword_2688D2630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2630);
  }
  return result;
}

unint64_t sub_236D4B878()
{
  unint64_t result = qword_2688D2638;
  if (!qword_2688D2638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2638);
  }
  return result;
}

unint64_t sub_236D4B8D0()
{
  unint64_t result = qword_2688D2640;
  if (!qword_2688D2640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2640);
  }
  return result;
}

uint64_t sub_236D4B924(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

char *keypath_get_selector_zones()
{
  return sel_zones;
}

char *keypath_get_selector_accessories()
{
  return sel_accessories;
}

uint64_t sub_236D4BA20()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

void sub_236D4BAAC()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_26EA062F8);
  id v2 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_26EA051D0);
  id v3 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_26EA06268);
  objc_msgSend(v3, sel_setInterface_forSelector_argumentIndex_ofReply_, v1, sel_registerObserver_modelTypes_completionHandler_, 0, 0);
  objc_msgSend(v3, sel_setInterface_forSelector_argumentIndex_ofReply_, v2, sel_registerObserver_modelTypes_completionHandler_, 0, 1);

  qword_2688DE728 = (uint64_t)v3;
}

uint64_t HomesStore.Accessory.AppleMediaDevice.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.Accessory.AppleMediaDevice.isCurrentDevice.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.Accessory.AppleMediaDevice() + 20));
}

uint64_t type metadata accessor for HomesStore.Accessory.AppleMediaDevice()
{
  uint64_t result = qword_2688D26B8;
  if (!qword_2688D26B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HomesStore.Accessory.AppleMediaDevice.idsDestination.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Accessory.AppleMediaDevice() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

void static HomesStore.Accessory.AppleMediaDevice.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t HomesStore.Accessory.AppleMediaDevice.hash(into:)()
{
  sub_236DB9830();
  sub_236D4CBC4((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v1 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  sub_236DBA700();
  if (!*(void *)(v0 + *(int *)(v1 + 24) + 8)) {
    return sub_236DBA700();
  }
  sub_236DBA700();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D4BDC4()
{
  uint64_t v1 = 0x6E65727275437369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6974736544736469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_236D4BE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D4D418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D4BE54(uint64_t a1)
{
  unint64_t v2 = sub_236D4C8DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D4BE90(uint64_t a1)
{
  unint64_t v2 = sub_236D4C8DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.Accessory.AppleMediaDevice.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2668);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D4C8DC();
  sub_236DBA760();
  v8[15] = 0;
  sub_236DB9830();
  sub_236D4CBC4(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
    v8[14] = 1;
    sub_236DBA590();
    v8[13] = 2;
    sub_236DBA570();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HomesStore.Accessory.AppleMediaDevice.hashValue.getter()
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236D4CBC4((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v1 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  sub_236DBA700();
  if (*(void *)(v0 + *(int *)(v1 + 24) + 8))
  {
    sub_236DBA700();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_236DBA700();
  }
  return sub_236DBA710();
}

uint64_t HomesStore.Accessory.AppleMediaDevice.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_236DB9830();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2678);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D4C8DC();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v12 = v23;
  uint64_t v11 = v24;
  char v29 = 0;
  sub_236D4CBC4(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v13 = v25;
  sub_236DBA530();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v21, v26, v4);
  char v28 = 1;
  v21[*(int *)(v8 + 20)] = sub_236DBA520() & 1;
  char v27 = 2;
  uint64_t v14 = sub_236DBA500();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  uint64_t v18 = (uint64_t)v21;
  uint64_t v17 = v22;
  uint64_t v19 = (uint64_t *)&v21[*(int *)(v8 + 24)];
  *uint64_t v19 = v14;
  v19[1] = v16;
  sub_236D4C930(v18, v17);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236D4C994(v18);
}

void sub_236D4C51C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_236D4C528@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.Accessory.AppleMediaDevice.init(from:)(a1, a2);
}

uint64_t sub_236D4C540(void *a1)
{
  return HomesStore.Accessory.AppleMediaDevice.encode(to:)(a1);
}

uint64_t sub_236D4C55C(uint64_t a1, uint64_t a2)
{
  sub_236DB9830();
  sub_236D4CBC4((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  sub_236DBA700();
  if (!*(void *)(v2 + *(int *)(a2 + 24) + 8)) {
    return sub_236DBA700();
  }
  sub_236DBA700();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D4C660(uint64_t a1, uint64_t a2)
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236D4CBC4((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  sub_236DBA700();
  if (*(void *)(v2 + *(int *)(a2 + 24) + 8))
  {
    sub_236DBA700();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_236DBA700();
  }
  return sub_236DBA710();
}

uint64_t static PartialModelRelationshipDescriptor<>.appleMediaDevice.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2680);
  return MEMORY[0x270FA0480](v0, &unk_2688D13B8);
}

{
  return sub_236D4AEF4(&qword_2688D1300);
}

uint64_t sub_236D4C790()
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D26E0);
  swift_allocObject();
  uint64_t result = sub_236DB02DC(KeyPath);
  qword_2688D2660 = result;
  return result;
}

uint64_t static PartialModelRelationshipDescriptor<>.accessory.getter()
{
  if (qword_2688D1298 != -1) {
    swift_once();
  }
  return swift_retain();
}

{
  uint64_t v0;
  uint64_t vars8;

  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2DA0);
  return MEMORY[0x270FA0480](v0, &unk_2688D1408);
}

uint64_t _s11HomeKitCore10HomesStoreC9AccessoryV16AppleMediaDeviceV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  uint64_t v10 = v9[1];
  if (v8)
  {
    if (!v10) {
      return 0;
    }
    BOOL v11 = *v7 == *v9 && v8 == v10;
    if (!v11 && (sub_236DBA600() & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_236D4C8DC()
{
  unint64_t result = qword_2688D2670;
  if (!qword_2688D2670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2670);
  }
  return result;
}

uint64_t sub_236D4C930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D4C994(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236D4C9F0(void *a1)
{
  a1[1] = sub_236D4CBC4(&qword_2688D2688, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
  a1[2] = sub_236D4CBC4(&qword_2688D2690, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
  a1[3] = sub_236D4CBC4(&qword_2688D2698, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
  a1[4] = sub_236D4CBC4(&qword_2688D26A0, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
  uint64_t result = sub_236D4CBC4(&qword_2688D26A8, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
  a1[5] = result;
  return result;
}

uint64_t sub_236D4CAEC()
{
  return sub_236D4CBC4((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D4CB34()
{
  return sub_236D4CBC4(&qword_2688D26B0, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
}

uint64_t sub_236D4CB7C()
{
  return sub_236D4CBC4(&qword_2688D17F8, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice);
}

uint64_t sub_236D4CBC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s16AppleMediaDeviceVwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s16AppleMediaDeviceVwxx(uint64_t a1)
{
  uint64_t v2 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s16AppleMediaDeviceVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16AppleMediaDeviceVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AppleMediaDeviceVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t _s16AppleMediaDeviceVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AppleMediaDeviceVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D4CFC8);
}

uint64_t sub_236D4CFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t _s16AppleMediaDeviceVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D4D0AC);
}

uint64_t sub_236D4D0AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_236D4D16C()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s16AppleMediaDeviceV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D4D2D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16AppleMediaDeviceV10CodingKeysOMa()
{
  return &_s16AppleMediaDeviceV10CodingKeysON;
}

unint64_t sub_236D4D314()
{
  unint64_t result = qword_2688D26C8;
  if (!qword_2688D26C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D26C8);
  }
  return result;
}

unint64_t sub_236D4D36C()
{
  unint64_t result = qword_2688D26D0;
  if (!qword_2688D26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D26D0);
  }
  return result;
}

unint64_t sub_236D4D3C4()
{
  unint64_t result = qword_2688D26D8;
  if (!qword_2688D26D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D26D8);
  }
  return result;
}

uint64_t sub_236D4D418(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65727275437369 && a2 == 0xEF65636976654474 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974736544736469 && a2 == 0xEE006E6F6974616ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

char *keypath_get_selector_accessory()
{
  return sel_accessory;
}

void sub_236D4D5B4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_handle);
  uint64_t v4 = sub_236DB9A10();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id sub_236D4D60C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_home);
  *a2 = result;
  return result;
}

id sub_236D4D648(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHome_, *a1);
}

id sub_236D4D65C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_userSharedSettings);
  *a2 = result;
  return result;
}

id sub_236D4D698(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUserSharedSettings_, *a1);
}

id HMCDUserModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDUserModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDUserModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDUserModel()
{
  return self;
}

id HMCDUserModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDUserModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static HMCDUserModel.entityName.getter()
{
  return 0x7265735544434D48;
}

uint64_t sub_236D4D83C()
{
  return 0x7265735544434D48;
}

unint64_t sub_236D4D860(uint64_t a1)
{
  unint64_t result = sub_236D4D888();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D4D888()
{
  unint64_t result = qword_2688D26E8;
  if (!qword_2688D26E8)
  {
    type metadata accessor for HMCDUserModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D26E8);
  }
  return result;
}

uint64_t sub_236D4D8DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDUserModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236D4D920(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

char *keypath_get_selector_handle()
{
  return sel_handle;
}

void sub_236D4D98C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB9A00();
  objc_msgSend(v2, sel_setHandle_, v3);
}

id sub_236D4D9F0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_home);
  *a2 = result;
  return result;
}

id sub_236D4DA2C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHome_, *a1);
}

char *keypath_get_selector_userSharedSettings()
{
  return sel_userSharedSettings;
}

id sub_236D4DA4C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_userSharedSettings);
  *a2 = result;
  return result;
}

id sub_236D4DA88(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUserSharedSettings_, *a1);
}

uint64_t sub_236D4DA9C()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D26F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D26F0);
  return sub_236DB9940();
}

id sub_236D4DBB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s21RequestHandlingPolicyCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s21RequestHandlingPolicyCMa()
{
  return self;
}

id sub_236D4DC08(id result)
{
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v1 = result;
  id result = objc_msgSend(result, sel_entitlements);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  objc_super v2 = result;
  uint64_t v3 = sub_236DB9990();

  uint64_t v4 = sub_236D871C4(v3);
  char v5 = sub_236D94AC0(v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    if (qword_2688D12A0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_236DB9950();
    __swift_project_value_buffer(v6, (uint64_t)qword_2688D26F0);
    id v7 = v1;
    uint64_t v8 = sub_236DB9930();
    os_log_type_t v9 = sub_236DB9F50();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      int v11 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v10 = 138412290;
      id v12 = v7;
      sub_236DBA0B0();
      *int v11 = v1;

      _os_log_impl(&dword_236D14000, v8, v9, "Denying access to XPC store server for client context: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v11, -1, -1);
      MEMORY[0x237E101A0](v10, -1, -1);
    }
    else
    {
    }
  }
  return (id)(v5 & 1);
}

uint64_t HomesStore.makeRelationshipResolver<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v7 = sub_236DBA090();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v5[2] = a3;
  v5[12] = sub_236DB9860();
  uint64_t v8 = sub_236DBA090();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = *(void *)(a3 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D4DFC0, 0, 0);
}

uint64_t sub_236D4DFC0()
{
  uint64_t v1 = v0[7];
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0[12] - 8) + 56))(v0[15], 1, 1);
  objc_super v2 = (void *)swift_task_alloc();
  v0[19] = v2;
  uint64_t v3 = *(void *)(v1 + 8);
  v0[20] = v3;
  *objc_super v2 = v0;
  v2[1] = sub_236D4E0A0;
  uint64_t v4 = v0[15];
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  return sub_236D798D0(v6, v4, v5, v3);
}

uint64_t sub_236D4E0A0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 112);
  v4[21] = v1;
  swift_task_dealloc();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v4[15];
  uint64_t v8 = v4[13];
  if (v1)
  {
    (*v6)(v7, v8);
    os_log_type_t v9 = sub_236D5004C;
  }
  else
  {
    v4[22] = a1;
    (*v6)(v7, v8);
    os_log_type_t v9 = sub_236D4E22C;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_236D4E22C()
{
  uint64_t v14 = v0;
  v0[3] = v0[22];
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  sub_236DB9C10();
  swift_getWitnessTable();
  sub_236DB9ED0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v4 = v0[20];
    uint64_t v5 = v0[6];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    type metadata accessor for HomesStore.Error(0);
    sub_236D4FC40();
    swift_allocError();
    uint64_t v7 = v6;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v13, v5, v4);
    *uint64_t v7 = v13;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[18], v0[11], v0[6]);
    uint64_t v10 = swift_task_alloc();
    v0[23] = v10;
    *(void *)uint64_t v10 = v0;
    *(void *)(v10 + 8) = sub_236D4E498;
    uint64_t v11 = v0[18];
    long long v12 = *((_OWORD *)v0 + 3);
    *(void *)(v10 + 40) = v0[8];
    *(_OWORD *)(v10 + 24) = v12;
    *(void *)(v10 + 16) = v11;
    return MEMORY[0x270FA2498](sub_236D4E700, 0, 0);
  }
}

uint64_t sub_236D4E498(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_236D50050;
  }
  else
  {
    *(void *)(v4 + 200) = a1;
    uint64_t v5 = sub_236D4E5C0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_236D4E5C0()
{
  long long v12 = v0;
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v5);
  uint64_t v10 = &type metadata for ModelProvider;
  uint64_t v11 = &off_26EA00A28;
  *(void *)&long long v9 = v1;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_236DB7D74(v2, &v9, v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_236D4E6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  id v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_236D4E700, 0, 0);
}

uint64_t sub_236D4E700()
{
  uint64_t v1 = sub_236D498E8(v0[3]);
  v0[6] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_236D4E7A8;
  return sub_236D4F370(v1);
}

uint64_t sub_236D4E7A8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_236D4E900, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_236D4E900()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t HomesStore.makeRelationshipObserver<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v7 = sub_236DBA090();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v5[2] = a3;
  v5[12] = sub_236DB9860();
  uint64_t v8 = sub_236DBA090();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = *(void *)(a3 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D4EB0C, 0, 0);
}

uint64_t sub_236D4EB0C()
{
  uint64_t v1 = v0[7];
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0[12] - 8) + 56))(v0[15], 1, 1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[19] = v2;
  uint64_t v3 = *(void *)(v1 + 8);
  v0[20] = v3;
  *uint64_t v2 = v0;
  v2[1] = sub_236D4EBEC;
  uint64_t v4 = v0[15];
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  return sub_236D798D0(v6, v4, v5, v3);
}

uint64_t sub_236D4EBEC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 112);
  v4[21] = v1;
  swift_task_dealloc();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v4[15];
  uint64_t v8 = v4[13];
  if (v1)
  {
    (*v6)(v7, v8);
    long long v9 = sub_236D4F23C;
  }
  else
  {
    v4[22] = a1;
    (*v6)(v7, v8);
    long long v9 = sub_236D4ED78;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_236D4ED78()
{
  uint64_t v14 = v0;
  v0[3] = v0[22];
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  sub_236DB9C10();
  swift_getWitnessTable();
  sub_236DB9ED0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v4 = v0[20];
    uint64_t v5 = v0[6];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    type metadata accessor for HomesStore.Error(0);
    sub_236D4FC40();
    swift_allocError();
    uint64_t v7 = v6;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v13, v5, v4);
    *uint64_t v7 = v13;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[18], v0[11], v0[6]);
    uint64_t v10 = swift_task_alloc();
    v0[23] = v10;
    *(void *)uint64_t v10 = v0;
    *(void *)(v10 + 8) = sub_236D4EFE4;
    uint64_t v11 = v0[18];
    long long v12 = *((_OWORD *)v0 + 3);
    *(void *)(v10 + 40) = v0[8];
    *(_OWORD *)(v10 + 24) = v12;
    *(void *)(v10 + 16) = v11;
    return MEMORY[0x270FA2498](sub_236D4E700, 0, 0);
  }
}

uint64_t sub_236D4EFE4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_236D4F2C8;
  }
  else
  {
    *(void *)(v4 + 200) = a1;
    uint64_t v5 = sub_236D4F10C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_236D4F10C()
{
  long long v12 = v0;
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = (uint64_t *)v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v7);
  v11[3] = &type metadata for ModelProvider;
  v11[4] = &off_26EA00A28;
  v11[0] = v1;
  swift_retain();
  sub_236D3E98C(v2, v5, (uint64_t)v11, v7, v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_236D4F23C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D4F2C8()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D4F370(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = sub_236DB9830();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2730);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D4F470, 0, 0);
}

uint64_t sub_236D4F470()
{
  uint64_t v1 = sub_236D4FC98(v0[12]);
  v0[19] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_236D4F520;
  return sub_236D7BD88(v1);
}

uint64_t sub_236D4F520(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_236D4F684, 0, 0);
  }
}

void sub_236D4F684()
{
  int64_t v38 = 0;
  uint64_t v36 = (long long *)(v0 + 7);
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[19];
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  uint64_t v35 = v3;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v35 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  uint64_t v37 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  int64_t v34 = (unint64_t)(63 - v6) >> 6;
  if ((v5 & v4) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v9 = v8 | (v38 << 6);
LABEL_5:
  uint64_t v10 = v0[17];
  (*(void (**)(uint64_t, unint64_t, void))(v2 + 16))(v10, *(void *)(v35 + 48) + *(void *)(v2 + 72) * v9, v0[14]);
  uint64_t v11 = *(void *)(v35 + 56);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2738);
  *(unsigned char *)(v10 + *(int *)(v12 + 48)) = *(unsigned char *)(v11 + v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  while (1)
  {
    uint64_t v18 = v0[18];
    sub_236D4FFE4(v0[17], v18);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2738);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19) == 1)
    {
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v28 = (void (*)(uint64_t))v0[1];
      uint64_t v29 = v0[21];
      v28(v29);
      return;
    }
    int v20 = *(unsigned __int8 *)(v0[18] + *(int *)(v19 + 48));
    (*(void (**)(void))(v2 + 32))(v0[16]);
    if (!*(void *)(v1 + 16) || (unint64_t v21 = sub_236D8584C(v0[16]), (v22 & 1) == 0))
    {
      uint64_t v25 = v0[16];
      uint64_t v26 = v0[14];
      swift_bridgeObjectRelease();
      type metadata accessor for HomesStore.Error(0);
      sub_236D4FC40();
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v27, v25, v26);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*v37)(v25, v26);
      swift_release();
      goto LABEL_35;
    }
    sub_236D1B32C(*(void *)(v1 + 56) + 40 * v21, (uint64_t)v36);
    sub_236D1B1E4(v36, (uint64_t)(v0 + 2));
    uint64_t v23 = v0[5];
    uint64_t v24 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v23);
    sub_236D2BCA0(v23, v24);
    if (v39 != v20) {
      break;
    }
    (*v37)(v0[16], v0[14]);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    if (v7) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v13 < v34)
    {
      unint64_t v14 = *(void *)(v33 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v38 + 2;
      ++v38;
      if (v13 + 1 < v34)
      {
        unint64_t v14 = *(void *)(v33 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v38 = v13 + 1;
        if (v13 + 2 < v34)
        {
          unint64_t v14 = *(void *)(v33 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v38 = v13 + 2;
          if (v13 + 3 < v34)
          {
            unint64_t v14 = *(void *)(v33 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v13 >= v34)
                {
                  int64_t v38 = v34 - 1;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v33 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
LABEL_39:
              __break(1u);
              return;
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v7 = (v14 - 1) & v14;
            unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v38 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v16 = v0[17];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2738);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    unint64_t v7 = 0;
  }
  uint64_t v30 = v0[16];
  uint64_t v31 = v0[14];
  swift_bridgeObjectRelease();
  type metadata accessor for HomesStore.Error(0);
  sub_236D4FC40();
  swift_allocError();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  sub_236DBA280();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  (*v37)(v30, v31);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v32 = (void (*)(void))v0[1];
  v32();
}

unint64_t sub_236D4FC40()
{
  unint64_t result = qword_2688D2710;
  if (!qword_2688D2710)
  {
    type metadata accessor for HomesStore.Error(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2688D2710);
  }
  return result;
}

uint64_t sub_236D4FC98(uint64_t a1)
{
  uint64_t v41 = sub_236DB9830();
  uint64_t v2 = *(void *)(v41 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v41);
  unsigned __int8 v39 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  int64_t v38 = (char *)&v31 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2740);
  uint64_t result = sub_236DBA470();
  unint64_t v7 = (void *)result;
  int64_t v8 = 0;
  uint64_t v42 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = a1 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v32 = v10;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v40 = v2;
  uint64_t v36 = v2 + 32;
  uint64_t v37 = v2 + 16;
  uint64_t v34 = result + 64;
  uint64_t v35 = (void *)result;
  uint64_t v15 = v41;
  uint64_t v16 = v39;
  if ((v13 & v9) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  int64_t v43 = v8;
  for (unint64_t i = v17 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    uint64_t v23 = v42;
    uint64_t v24 = v40;
    unint64_t v25 = *(void *)(v40 + 72) * i;
    uint64_t v26 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v38, *(void *)(v42 + 48) + v25, v15);
    sub_236D1B32C(*(void *)(v23 + 56) + 40 * i, (uint64_t)v44);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v27(v16, v26, v15);
    __swift_project_boxed_opaque_existential_1(v44, v44[3]);
    sub_236D9E5D4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
    unint64_t v7 = v35;
    *(void *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v7[6] + v25, v16, v15);
    *(unsigned char *)(v7[7] + i) = v45;
    uint64_t v28 = v7[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v7[2] = v30;
    int64_t v8 = v43;
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_24;
    }
    if (v19 >= v33) {
      return (uint64_t)v7;
    }
    unint64_t v20 = *(void *)(v32 + 8 * v19);
    int64_t v21 = v8 + 1;
    if (!v20)
    {
      int64_t v21 = v8 + 2;
      if (v8 + 2 >= v33) {
        return (uint64_t)v7;
      }
      unint64_t v20 = *(void *)(v32 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v8 + 3;
        if (v8 + 3 >= v33) {
          return (uint64_t)v7;
        }
        unint64_t v20 = *(void *)(v32 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v14 = (v20 - 1) & v20;
    int64_t v43 = v21;
  }
  uint64_t v22 = v8 + 4;
  if (v8 + 4 >= v33) {
    return (uint64_t)v7;
  }
  unint64_t v20 = *(void *)(v32 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v8 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v33) {
      return (uint64_t)v7;
    }
    unint64_t v20 = *(void *)(v32 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236D4FFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_236D50054()
{
  id v1 = objc_allocWithZone(MEMORY[0x263EFF260]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_236DB9A00();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  objc_msgSend(v3, sel_setResultType_, 0);
  objc_msgSend(v3, sel_setPredicate_, *(void *)(v0 + 16));
  objc_msgSend(v3, sel_setReturnsObjectsAsFaults_, *(unsigned __int8 *)(v0 + 24));
  sub_236D50168(v0 + 32, (uint64_t)&v6);
  sub_236D50168((uint64_t)&v6, (uint64_t)&v7);
  if (v7) {
    uint64_t v4 = (void *)sub_236DB9B20();
  }
  else {
    uint64_t v4 = 0;
  }
  objc_msgSend(v3, sel_setRelationshipKeyPathsForPrefetching_, v4);

  return v3;
}

uint64_t sub_236D50168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D501D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[9] = AssociatedTypeWitness;
  v7[10] = *(void *)(AssociatedTypeWitness - 8);
  v7[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D502B8, 0, 0);
}

uint64_t sub_236D502B8()
{
  (*(void (**)(void, void))(v0[7] + 24))(v0[5], v0[7]);
  id v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *id v1 = v0;
  v1[1] = sub_236D503BC;
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return sub_236D867E8(v7, v5, v6, v3, v4, AssociatedConformanceWitness);
}

uint64_t sub_236D503BC()
{
  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *v1;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D50564, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_236D50564()
{
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_236D505CC()
{
  unint64_t result = qword_2688D1B10;
  if (!qword_2688D1B10)
  {
    type metadata accessor for HMCDRoomModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1B10);
  }
  return result;
}

_UNKNOWN **sub_236D50624()
{
  return &off_26E9FED80;
}

uint64_t sub_236D50630@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  id v7 = objc_msgSend(a1, sel_name);
  uint64_t v8 = sub_236DB9A10();
  uint64_t v10 = v9;

  uint64_t v11 = (uint64_t *)(a3 + *(int *)(a2 + 20));
  *uint64_t v11 = v8;
  v11[1] = v10;
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v12(a3, 0, 1, a2);
}

unint64_t sub_236D5070C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBEEE0;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 1701667182;
  *(void *)(inited + 72) = 0xE400000000000000;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE730 = result;
  return result;
}

uint64_t sub_236D507AC()
{
  if (qword_2688D12A8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_236D50808()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_236D508C0()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2750);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2750);
  return sub_236DB9940();
}

uint64_t sub_236D50944()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  __swift_destroy_boxed_opaque_existential_0(v0 + *(void *)(*(void *)v0 + 112));
  __swift_destroy_boxed_opaque_existential_0(v0 + *(void *)(*(void *)v0 + 120));
  __swift_destroy_boxed_opaque_existential_0(v0 + *(void *)(*(void *)v0 + 128));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_236D50A10()
{
  sub_236D50944();
  return MEMORY[0x270FA2418](v0);
}

uint64_t _s8CoreDataCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D50A54(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_236D50A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a1 + 80) - 8) + 16))(a2, *(void *)v2 + *(void *)(**(void **)v2 + 104));
}

uint64_t sub_236D50AA8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D50AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  id v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_236D50B0C, v5, 0);
}

uint64_t sub_236D50B0C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 64) = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 48) = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_236D50C24;
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 16);
  return sub_236D50F50(v7, (uint64_t)sub_236D57F3C, v4, v6);
}

uint64_t sub_236D50C24()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    return MEMORY[0x270FA2498](sub_236D50D60, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_236D50D60()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D50DC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_236D1B32C(a1, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2840);
  _s5ProxyCMa();
  if (swift_dynamicCast())
  {
    uint64_t v6 = v10 + *(void *)(*(void *)v10 + 96);
    _s8CoreDataCMa();
    swift_getWitnessTable();
    sub_236DB7160(a3, v6, a4);
    return swift_release();
  }
  else
  {
    sub_236D57F60();
    swift_allocError();
    *uint64_t v8 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_236D50F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = *v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[9] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_236D51010;
  return sub_236D52258();
}

uint64_t sub_236D51010()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D51120, v1, 0);
}

uint64_t sub_236D51120()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  v0[2] = v1;
  uint64_t v5 = (void *)swift_allocObject();
  v0[10] = v5;
  v5[2] = v3;
  v5[3] = v1;
  v5[4] = v4;
  v5[5] = v2;
  swift_retain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  uint64_t v7 = _s8CoreDataCMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v6 = v0;
  v6[1] = sub_236D51268;
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[3];
  return sub_236D501D0(v10, (uint64_t)sub_236D559BC, (uint64_t)v5, v7, v9, WitnessTable);
}

uint64_t sub_236D51268()
{
  uint64_t v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    return MEMORY[0x270FA2498](sub_236D28004, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_236D513A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  v8[12] = *v7;
  v8[2] = a6;
  sub_236DB9860();
  uint64_t v9 = sub_236DBA090();
  v8[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[14] = v10;
  v8[15] = *(void *)(v10 + 64);
  unsigned char v8[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D514B8, v7, 0);
}

uint64_t sub_236D514B8()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v15 = v0[16];
  uint64_t v16 = v0[10];
  uint64_t v21 = v0[8];
  uint64_t v19 = v0[11];
  uint64_t v20 = v0[7];
  uint64_t v18 = v0[5];
  uint64_t v17 = v0[4];
  (*(void (**)(void))(v2 + 16))();
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v7 = (v1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (char *)swift_allocObject();
  v0[17] = v9;
  *((void *)v9 + 2) = *(void *)(v4 + 80);
  *((void *)v9 + 3) = v5;
  *((void *)v9 + 4) = *(void *)(v4 + 88);
  *((void *)v9 + 5) = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v9[v6], v15, v3);
  *(void *)&v9[v7] = v19;
  uint64_t v10 = &v9[v8];
  *(void *)uint64_t v10 = v17;
  *((void *)v10 + 1) = v18;
  uint64_t v11 = &v9[(v8 + 23) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v11 = v20;
  *((void *)v11 + 1) = v21;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[18] = v12;
  uint64_t v13 = sub_236DB9C10();
  *uint64_t v12 = v0;
  v12[1] = sub_236D51690;
  return sub_236D50F50((uint64_t)(v0 + 3), (uint64_t)sub_236D58418, (uint64_t)v9, v13);
}

uint64_t sub_236D51690()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = sub_236D51824;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 88);
    swift_release();
    uint64_t v4 = sub_236D517B8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D517B8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_236D51824()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D51890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v72 = a9;
  uint64_t v77 = a6;
  uint64_t v78 = a7;
  uint64_t v79 = a4;
  uint64_t v80 = a5;
  uint64_t v75 = a2;
  uint64_t v12 = *(void *)(*a3 + 88);
  uint64_t v13 = *a3;
  uint64_t v82 = (uint64_t)a3;
  uint64_t v14 = *(void *)(v13 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v71 = (char *)&v65 - v15;
  int64_t v81 = a8;
  v85[7] = a8;
  uint64_t v16 = sub_236DB9860();
  uint64_t v17 = sub_236DBA090();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v65 - v20;
  uint64_t v22 = *(void *)(v16 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v19);
  unint64_t v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  unint64_t v76 = (char *)&v65 - v26;
  sub_236D1B32C(a1, (uint64_t)v85);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2840);
  _s5ProxyCMa();
  if (swift_dynamicCast())
  {
    uint64_t v69 = v12;
    uint64_t v27 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v75, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v16) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      v85[0] = v82;
      uint64_t v28 = v27 + *(void *)(*(void *)v27 + 96);
      BOOL v29 = (void *)swift_allocObject();
      int64_t v30 = v81;
      v29[2] = v14;
      v29[3] = v30;
      v29[4] = v69;
      v29[5] = a10;
      uint64_t v31 = v78;
      v29[6] = v77;
      v29[7] = v31;
      _s8CoreDataCMa();
      sub_236DB9C10();
      swift_retain();
      swift_getWitnessTable();
      sub_236DB6F80(v79, v80, v28, 0, (void (*)(void))sub_236D5854C);
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v34 = v76;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v76, v21, v16);
      v85[0] = v82;
      uint64_t v35 = *(void *)(*(void *)v27 + 96);
      uint64_t v75 = v27;
      uint64_t v36 = v27 + v35;
      uint64_t v37 = v70;
      uint64_t v38 = (uint64_t)v71;
      unsigned __int8 v39 = *(void (**)(char *))(v70 + 16);
      uint64_t v66 = v36;
      v39(v71);
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v34, v16);
      uint64_t v40 = (uint64_t)v25;
      int64_t v41 = v81;
      uint64_t v42 = v73;
      uint64_t v65 = (void *)sub_236D61C14(v40, v81, a10);
      uint64_t v73 = (uint64_t (**)(char *, void))v22;
      uint64_t v68 = v16;
      uint64_t v67 = a10;
      if (v42)
      {
        uint64_t v43 = 0;
        uint64_t v44 = (void (**)(uint64_t, uint64_t))(v37 + 8);
        uint64_t v48 = v69;
        (*v44)(v38, AssociatedTypeWitness);
        if (qword_2688D12B0 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_236DB9950();
        __swift_project_value_buffer(v49, (uint64_t)qword_2688D2750);
        id v50 = v42;
        id v51 = v42;
        long long v52 = sub_236DB9930();
        os_log_type_t v53 = sub_236DB9F30();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t AssociatedTypeWitness = 0;
          id v54 = (uint8_t *)swift_slowAlloc();
          char v55 = (void *)swift_slowAlloc();
          *(_DWORD *)id v54 = 138412290;
          id v56 = v42;
          uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v84 = v57;
          uint64_t v58 = v73;
          int64_t v41 = v81;
          sub_236DBA0B0();
          void *v55 = v57;
          uint64_t v43 = AssociatedTypeWitness;

          _os_log_impl(&dword_236D14000, v52, v53, "Failed to fetch models with error: %@, filtering in-memory instead.", v54, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
          swift_arrayDestroy();
          MEMORY[0x237E101A0](v55, -1, -1);
          uint64_t v59 = v54;
          uint64_t v48 = v69;
          MEMORY[0x237E101A0](v59, -1, -1);
        }
        else
        {

          uint64_t v58 = v73;
        }

        uint64_t v83 = v82;
        uint64_t v60 = (void *)swift_allocObject();
        v60[2] = v14;
        v60[3] = v41;
        uint64_t v61 = v67;
        v60[4] = v48;
        v60[5] = v61;
        uint64_t v62 = v78;
        v60[6] = v77;
        v60[7] = v62;
        _s8CoreDataCMa();
        sub_236DB9C10();
        swift_retain();
        swift_getWitnessTable();
        sub_236DB6F80(v79, v80, v66, 0, (void (*)(void))sub_236D5854C);
        if (v43)
        {

          swift_release();
          swift_release();
          return v58[1](v76, v68);
        }
        else
        {
          swift_release();
          uint64_t v83 = v84;
          swift_getWitnessTable();
          os_log_type_t v63 = v76;
          uint64_t v64 = sub_236DB9AA0();
          swift_release();

          swift_bridgeObjectRelease();
          uint64_t result = v58[1](v63, v68);
          *uint64_t v72 = v64;
        }
      }
      else
      {
        char v45 = (void *)swift_allocObject();
        v45[2] = v14;
        v45[3] = v41;
        v45[4] = v69;
        v45[5] = a10;
        uint64_t v46 = v78;
        v45[6] = v77;
        v45[7] = v46;
        _s8CoreDataCMa();
        sub_236DB9C10();
        swift_retain();
        swift_getWitnessTable();
        id v47 = v65;
        sub_236DB6F80(v79, v80, v38, v65, (void (*)(void))sub_236D5854C);
        swift_release();

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, AssociatedTypeWitness);
        return v73[1](v76, v68);
      }
    }
  }
  else
  {
    sub_236D57F60();
    swift_allocError();
    *int64_t v33 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_236D52258()
{
  v1[2] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1F88);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D5231C, v0, 0);
}

uint64_t sub_236D5231C()
{
  uint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 136);
  v0[6] = v3;
  if (*((unsigned char *)v1 + v3))
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 120);
    v0[7] = v6;
    uint64_t v7 = *(uint64_t *)((char *)v1 + v6 + 24);
    uint64_t v8 = *(uint64_t *)((char *)v1 + v6 + 32);
    __swift_project_boxed_opaque_existential_1((uint64_t *)((char *)v1 + v6), v7);
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[8] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_236D524B8;
    uint64_t v10 = v0[5];
    return v11(v10, v7, v8);
  }
}

uint64_t sub_236D524B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D525C8, v1, 0);
}

uint64_t sub_236D525C8()
{
  uint64_t v1 = (void *)(v0[2] + *(void *)(*(void *)v0[2] + 112));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_236D526E8;
  uint64_t v5 = v0[5];
  return v7(v5, v2, v3);
}

uint64_t sub_236D526E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D527F8, v1, 0);
}

uint64_t sub_236D527F8()
{
  uint64_t v1 = (void *)(v0[2] + v0[7]);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_236D52900;
  return v6(v2, v3);
}

uint64_t sub_236D52900()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D52A10, v1, 0);
}

uint64_t sub_236D52A10()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  *(unsigned char *)(v2 + v1) = 1;
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_236D52A94(uint64_t a1, uint64_t *a2, void (*a3)(long long *))
{
  uint64_t v4 = *a2;
  uint64_t v5 = _s5ProxyCMa();
  uint64_t v6 = v4;
  uint64_t v7 = (uint64_t)a2 + *(void *)(v4 + 104);
  sub_236D1B32C((uint64_t)a2 + *(void *)(v6 + 128), (uint64_t)&v20);
  uint64_t v8 = sub_236D9D0A8(v7, &v20);
  id v9 = objc_msgSend(self, sel_currentQueryGenerationToken);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = *(void (**)(id, uint64_t, uint64_t))(AssociatedConformanceWitness + 80);
  uint64_t v12 = swift_checkMetadataState();
  uint64_t v13 = v23;
  v11(v9, v12, AssociatedConformanceWitness);
  if (v13)
  {

    if (qword_2688D12B0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_236DB9950();
    __swift_project_value_buffer(v14, (uint64_t)qword_2688D2750);
    uint64_t v15 = sub_236DB9930();
    os_log_type_t v16 = sub_236DB9F50();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_236D14000, v15, v16, "Failed to pin managed object context.", v17, 2u);
      MEMORY[0x237E101A0](v17, -1, -1);
    }

    swift_willThrow();
  }
  else
  {

    uint64_t v21 = v5;
    uint64_t v22 = &off_26EA00B30;
    *(void *)&long long v20 = v8;
    swift_retain();
    a3(&v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v20);
    sub_236D52D9C();
  }
  return swift_release();
}

uint64_t sub_236D52D9C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(void, uint64_t, uint64_t))(AssociatedConformanceWitness + 80);
  uint64_t v2 = swift_checkMetadataState();
  return v1(0, v2, AssociatedConformanceWitness);
}

uint64_t sub_236D52F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = *v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[13] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_236D53048;
  return sub_236D52258();
}

uint64_t sub_236D53048()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D53158, v1, 0);
}

uint64_t sub_236D53158()
{
  uint64_t v1 = dynamic_cast_existential_2_conditional(*(void *)(v0 + 56));
  if (v1)
  {
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    uint64_t v6 = v3;
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 88) + *(void *)(**(void **)(v0 + 88) + 128);
    uint64_t v21 = sub_236D4BA20();
    uint64_t v11 = v10;
    *(void *)(v0 + 112) = v10;
    sub_236D1B32C(v9, v0 + 16);
    uint64_t v12 = (void *)swift_allocObject();
    *(void *)(v0 + 120) = v12;
    v12[2] = *(void *)(v7 + 80);
    v12[3] = v8;
    v12[4] = *(void *)(v7 + 88);
    v12[5] = v20;
    sub_236D1B1E4((long long *)(v0 + 16), (uint64_t)(v12 + 6));
    v12[11] = v4;
    v12[12] = v5;
    v12[13] = v6;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_236D53350;
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 72);
    return sub_236D513A4(v21, v11, v15, (uint64_t)sub_236D58270, (uint64_t)v12, v16, v14);
  }
  else
  {
    sub_236D57F60();
    swift_allocError();
    *uint64_t v18 = 0;
    swift_willThrow();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_236D53350(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[17] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[11];
    swift_release();
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_236D534C0, v5, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v6 = (uint64_t (*)(uint64_t))v4[1];
    return v6(a1);
  }
}

uint64_t sub_236D534C0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236D534D8()
{
  return sub_236DB9AD0();
}

uint64_t sub_236D535A0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v12 = a2[3];
  uint64_t v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 40);
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  __swift_allocate_boxed_opaque_existential_0(v19);
  uint64_t v14 = v19[7];
  v13(v10, a3, a3, a4, v12, v11);
  if (v14) {
    return __swift_deallocate_boxed_opaque_existential_2((uint64_t)v19);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2870);
  int v16 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(a7, v16 ^ 1u, 1, a6);
}

uint64_t sub_236D536C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = *v4;
  v5[2] = swift_getAssociatedTypeWitness();
  sub_236DB9860();
  uint64_t v6 = sub_236DBA090();
  v5[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[11] = v7;
  v5[12] = *(void *)(v7 + 64);
  v5[13] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[14] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_236D53824;
  return sub_236D52258();
}

uint64_t sub_236D53824()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D53934, v1, 0);
}

uint64_t sub_236D53934()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[5], v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = (char *)swift_allocObject();
  v0[15] = v8;
  *((void *)v8 + 2) = *(void *)(v5 + 80);
  *((void *)v8 + 3) = v6;
  *((void *)v8 + 4) = *(void *)(v5 + 88);
  *((void *)v8 + 5) = v13;
  *((void *)v8 + 6) = v4;
  *((void *)v8 + 7) = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v8[v7], v1, v2);
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[16] = v9;
  uint64_t v10 = sub_236DB9C10();
  *uint64_t v9 = v0;
  v9[1] = sub_236D53ABC;
  return sub_236D50F50((uint64_t)(v0 + 3), (uint64_t)sub_236D58104, (uint64_t)v8, v10);
}

uint64_t sub_236D53ABC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = sub_236D53C50;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 64);
    swift_release();
    uint64_t v4 = sub_236D53BE4;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D53BE4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_236D53C50()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D53CC0@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  unint64_t v25 = a6;
  uint64_t v9 = (void *)*a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v9[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = v9[11];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = v13;
  uint64_t v29 = AssociatedTypeWitness;
  uint64_t v30 = v15;
  uint64_t v31 = AssociatedConformanceWitness;
  _s15ComposableProxyCMa();
  uint64_t v17 = (uint64_t)a1 + v9[13];
  uint64_t v18 = (uint64_t)a1 + v9[16];
  uint64_t v19 = sub_236DB9830();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  sub_236D94BF8(v17, v18, MEMORY[0x263F8EE88], (uint64_t)v12);
  uint64_t v20 = v32;
  sub_236D930D4(v26, 0, v27, a4, a5);
  uint64_t v22 = v21;
  uint64_t result = swift_release();
  if (!v20) {
    void *v25 = v22;
  }
  return result;
}

uint64_t sub_236D53EB8(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  v2[11] = *v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[12] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_236D53F70;
  return sub_236D52258();
}

uint64_t sub_236D53F70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D54080, v1, 0);
}

uint64_t sub_236D54080()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v40 = v0;
  uint64_t v41 = v0 + 72;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (unsigned __int8 *)(v2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    do
    {
      int v6 = *v4++;
      switch(v6)
      {
        case 1:
          uint64_t v7 = type metadata accessor for HomesStore.Room();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
          uint64_t v9 = &qword_2688D1820;
          break;
        case 2:
          uint64_t v7 = type metadata accessor for HomesStore.Home();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
          uint64_t v9 = (unint64_t *)&unk_2688D1818;
          break;
        case 3:
          uint64_t v7 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
          uint64_t v9 = (unint64_t *)&unk_2688D1810;
          break;
        case 4:
          uint64_t v7 = type metadata accessor for HomesStore.User();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
          uint64_t v9 = (unint64_t *)&unk_2688D1808;
          break;
        case 5:
          uint64_t v7 = type metadata accessor for HomesStore.Zone();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
          uint64_t v9 = (unint64_t *)&unk_2688D1800;
          break;
        case 6:
          uint64_t v7 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
          uint64_t v9 = &qword_2688D17F8;
          break;
        case 7:
          uint64_t v7 = type metadata accessor for HomesStore.User.SharedSettings();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
          uint64_t v9 = (unint64_t *)&unk_2688D17F0;
          break;
        default:
          uint64_t v7 = type metadata accessor for HomesStore.Accessory();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
          uint64_t v9 = (unint64_t *)&unk_2688D1828;
          break;
      }
      uint64_t v10 = sub_236D57EA8(v9, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_236D5618C(0, v5[2] + 1, 1, v5);
      }
      unint64_t v12 = v5[2];
      unint64_t v11 = v5[3];
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_236D5618C((void *)(v11 > 1), v12 + 1, 1, v5);
      }
      v5[2] = v12 + 1;
      uint64_t v13 = &v5[2 * v12];
      v13[4] = v7;
      v13[5] = v10;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v1 = v40;
    uint64_t v14 = v5[2];
    if (v14) {
      goto LABEL_18;
    }
LABEL_31:
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_32;
  }
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v14) {
    goto LABEL_31;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  uint64_t v16 = 4;
  do
  {
    uint64_t v18 = v5[v16];
    if (swift_conformsToProtocol2()) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (v19)
    {
      uint64_t v20 = sub_236D4BA20();
      uint64_t v22 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_236D55B14(0, v15[2] + 1, 1, v15);
      }
      unint64_t v24 = v15[2];
      unint64_t v23 = v15[3];
      if (v24 >= v23 >> 1) {
        uint64_t v15 = sub_236D55B14((void *)(v23 > 1), v24 + 1, 1, v15);
      }
      v15[2] = v24 + 1;
      uint64_t v17 = &v15[2 * v24];
      v17[4] = v20;
      v17[5] = v22;
    }
    v16 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
LABEL_32:
  *(void *)(v1 + 104) = v15;
  swift_bridgeObjectRelease();
  if (qword_2688D12B0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_236DB9950();
  __swift_project_value_buffer(v25, (uint64_t)qword_2688D2750);
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_236DB9930();
  os_log_type_t v27 = sub_236DB9F30();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v42 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = MEMORY[0x237E0EE00](v30, MEMORY[0x263F8D310]);
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    *(void *)(v41 - 8) = sub_236DB6880(v31, v33, &v42);
    uint64_t v1 = v40;
    sub_236DBA0B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_236D14000, v26, v27, "Fetching entities: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v29, -1, -1);
    MEMORY[0x237E101A0](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v34 = *(void *)(v1 + 88);
  sub_236D1B32C(*(void *)(v1 + 80) + *(void *)(**(void **)(v1 + 80) + 128), v1 + 16);
  uint64_t v35 = swift_allocObject();
  *(void *)(v1 + 112) = v35;
  *(void *)(v35 + 16) = *(void *)(v34 + 80);
  *(void *)(v35 + 24) = *(void *)(v34 + 88);
  sub_236D1B1E4((long long *)(v1 + 16), v35 + 32);
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v1 + 120) = v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2830);
  *uint64_t v36 = v1;
  v36[1] = sub_236D54764;
  uint64_t v38 = *(void *)(v1 + 80);
  v36[6] = v37;
  v36[7] = v38;
  v36[4] = sub_236D57E88;
  v36[5] = v35;
  _OWORD v36[2] = v1 + 56;
  void v36[3] = v15;
  return MEMORY[0x270FA2498](sub_236D50B0C, v38, 0);
}

uint64_t sub_236D54764()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_236D54900;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = sub_236D548E4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_236D548E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 56));
}

uint64_t sub_236D54900()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236D54918@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v40 = a2;
  uint64_t v41 = sub_236DB9830();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x237E0EEB0](v10, AssociatedTypeWitness))
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = MEMORY[0x263F8EE80];
    return result;
  }
  uint64_t v36 = a3;
  uint64_t v37 = v7 + 16;
  uint64_t v38 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  unint64_t v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = 4;
  uint64_t v39 = AssociatedTypeWitness;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    char v16 = sub_236DB9BA0();
    sub_236DB9B70();
    if ((v16 & 1) == 0) {
      break;
    }
    uint64_t v43 = *(void *)(a1 + 8 * v12);
    swift_unknownObjectRetain();
    uint64_t v17 = v12 - 3;
    if (__OFADD__(v15, 1)) {
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v42 = v17;
    uint64_t v18 = v40[3];
    uint64_t v19 = v40[4];
    __swift_project_boxed_opaque_existential_1(v40, v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v19 + 32))(v46, v43, v18, v19);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    uint64_t v20 = a1;
    __swift_project_boxed_opaque_existential_1(v46, v46[3]);
    uint64_t v21 = v44;
    sub_236DBA280();
    sub_236D1B32C((uint64_t)v46, (uint64_t)v45);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v47 = v11;
    unint64_t v24 = sub_236D8584C(v21);
    uint64_t v25 = v11[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      goto LABEL_24;
    }
    char v28 = v23;
    if (v11[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_236D95850();
      }
    }
    else
    {
      sub_236D96CEC(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_236D8584C(v44);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_26;
      }
      unint64_t v24 = v29;
    }
    a1 = v20;
    unint64_t v11 = v47;
    uint64_t v4 = 0;
    if (v28)
    {
      uint64_t v13 = v47[7] + 40 * v24;
      __swift_destroy_boxed_opaque_existential_0(v13);
      sub_236D1B1E4(v45, v13);
    }
    else
    {
      v47[(v24 >> 6) + 8] |= 1 << v24;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v11[6] + *(void *)(v7 + 72) * v24, v44, v41);
      sub_236D1B1E4(v45, v11[7] + 40 * v24);
      uint64_t v31 = v11[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_25;
      }
      v11[2] = v33;
      unint64_t v11 = v47;
    }
    swift_bridgeObjectRelease();
    (*v38)(v44, v41);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
    uint64_t v14 = MEMORY[0x237E0EEB0](a1, v39);
    ++v12;
    if (v42 == v14)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v36 = v11;
      return result;
    }
  }
  uint64_t v43 = sub_236DBA2A0();
  uint64_t v17 = v12 - 3;
  if (!__OFADD__(v15, 1)) {
    goto LABEL_7;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_236DBA650();
  __break(1u);
  return result;
}

uint64_t sub_236D54D14(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2880);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[10] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_236D54E20;
  return sub_236D52258();
}

uint64_t sub_236D54E20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D54F30, v1, 0);
}

uint64_t sub_236D54F30()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0[3];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_236D56478(0, v2, 0);
    uint64_t v3 = v15;
    uint64_t v4 = v1 + 40;
    do
    {
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 48))(&v16);
      char v5 = v16;
      unint64_t v7 = *(void *)(v15 + 16);
      unint64_t v6 = *(void *)(v15 + 24);
      if (v7 >= v6 >> 1) {
        sub_236D56478(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v15 + 16) = v7 + 1;
      *(unsigned char *)(v15 + v7 + 32) = v5;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  v0[11] = v3;
  uint64_t v8 = (void *)(v0[4] + *(void *)(*(void *)v0[4] + 112));
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 16) + **(int **)(v10 + 16));
  unint64_t v11 = (void *)swift_task_alloc();
  v0[12] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_236D55110;
  uint64_t v12 = v0[9];
  return v14(v12, v3, v9, v10);
}

uint64_t sub_236D55110()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_236D5523C, v1, 0);
}

uint64_t sub_236D5523C()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v2, v4);
  type metadata accessor for AnyModelStateChange(0);
  sub_236DB9DD0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_236D55378(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2898);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D5543C, 0, 0);
}

uint64_t sub_236D5543C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2880);
  sub_236DB9D00();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D554F8;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return MEMORY[0x270FA1F70](v3, v2);
}

uint64_t sub_236D554F8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_236D1F00C, 0, 0);
}

uint64_t sub_236D555F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_236D17ED0;
  return sub_236D54D14(a1, a2);
}

uint64_t sub_236D556A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_236D26C0C;
  return sub_236D52F88(a1, a2, a3, a4);
}

uint64_t sub_236D55760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_236D220A0;
  return sub_236D536C8(a1, a2, a3, a4);
}

uint64_t sub_236D55820(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_236D26C0C;
  return sub_236D53EB8(a1);
}

uint64_t sub_236D558B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_236D26C08;
  return sub_236D50F50(a1, a2, a3, a4);
}

uint64_t sub_236D5597C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D559BC(uint64_t a1)
{
  return sub_236D52A94(a1, *(uint64_t **)(v1 + 24), *(void (**)(long long *))(v1 + 32));
}

uint64_t sub_236D559DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236D55F20(a1, a2, a3, a4, &qword_2688D28A8, &qword_2688D17B0);
}

void *sub_236D559F0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_236D5790C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_236D55B14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2838);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_236D57A1C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236D55C24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236D55C8C(a1, a2, a3, a4, &qword_2688D2908, type metadata accessor for HomesStore.HomesRelationshipModel.Home, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
}

uint64_t sub_236D55C58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236D55C8C(a1, a2, a3, a4, &qword_2688D28D0, type metadata accessor for AnyModelStateChange, type metadata accessor for AnyModelStateChange);
}

uint64_t sub_236D55C8C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_236DBA440();
    __break(1u);
    return result;
  }
  long long v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_236D57B10(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_236D55F0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236D55F20(a1, a2, a3, a4, &qword_2688D28C8, &qword_2688D1938);
}

uint64_t sub_236D55F20(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_236DBA440();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_236D577B4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_236D5618C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2850);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_236D57D64(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_236D5629C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2930);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_236D57C6C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236D563C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236D55C8C(a1, a2, a3, a4, &qword_2688D2910, type metadata accessor for HomesStore.HomesRelationshipModel.Zone, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
}

uint64_t sub_236D563F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236D55C8C(a1, a2, a3, a4, &qword_2688D2928, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
}

uint64_t sub_236D56428(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56620(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D56448(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D5727C(a1, a2, a3, (void *)*v3, &qword_2688D28B0, &qword_2688D1748);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_236D56478(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56780(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D56498(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D568D0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_236D564B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56A74(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D564D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56EC4(a1, a2, a3, (void *)*v3, &qword_2688D28D0, type metadata accessor for AnyModelStateChange);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_236D56514(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56BE0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D56534(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56D40(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D56554(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D56EC4(a1, a2, a3, (void *)*v3, &qword_2688D28F0, type metadata accessor for AnyModelStateChange.Tombstone);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_236D56590(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D5710C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D565B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D5727C(a1, a2, a3, (void *)*v3, &qword_2688D2918, &qword_2688D2920);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_236D565E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D574BC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_236D56600(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_236D57628(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_236D56620(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D56780(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D568D0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2938);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2688D2940);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D56A74(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2838);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D56BE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2850);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D56D40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D56EC4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D5710C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2900);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D5727C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D574BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28E8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D57628(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28D8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D577B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D5790C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D57A1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D57B10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D57C6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

char *sub_236D57D64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    int64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D57E50()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_236D57E88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_236D54918(a1, (void *)(v2 + 32), a2);
}

uint64_t sub_236D57EA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D57EF4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D57F3C(uint64_t a1)
{
  return sub_236D50DC4(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

unint64_t sub_236D57F60()
{
  unint64_t result = qword_2688D2848;
  if (!qword_2688D2848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2848);
  }
  return result;
}

uint64_t sub_236D57FB4()
{
  swift_getAssociatedTypeWitness();
  uint64_t v1 = sub_236DB9860();
  uint64_t v2 = *(void *)(sub_236DBA090() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  uint64_t v4 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, v1)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
  }
  return swift_deallocObject();
}

uint64_t sub_236D58104@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 40);
  sub_236DB9860();
  uint64_t v5 = *(void *)(sub_236DBA090() - 8);
  return sub_236D53CC0(*(void **)(v1 + 48), *(uint64_t **)(v1 + 56), v1 + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v3, v4, a1);
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_236D58238()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_236D58270()
{
  return sub_236D534D8();
}

uint64_t sub_236D582A8()
{
  uint64_t v1 = sub_236DB9860();
  uint64_t v2 = *(void *)(sub_236DBA090() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, v1)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D58418@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  sub_236DB9860();
  uint64_t v7 = *(void *)(sub_236DBA090() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_236D51890(a1, v2 + v8, *(uint64_t **)(v2 + v9), *(void *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v5, a2, v6);
}

uint64_t sub_236D58514()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D5854C@<X0>(uint64_t *a1@<X8>)
{
  return sub_236D58564(a1);
}

uint64_t sub_236D58564@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 48))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_236D58598@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D535A0(a1, *(void **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 24), a2);
}

uint64_t __swift_deallocate_boxed_opaque_existential_2(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x237E101A0);
  }
  return result;
}

uint64_t sub_236D58620()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2880);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_236D586B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D2880) - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_236D17ED0;
  return sub_236D55378(a1, v5);
}

uint64_t sub_236D58790()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_236D5882C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(unint64_t, unint64_t))(v12 - 8))(v10, v11);
    unint64_t v13 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v15 = *(void *)(v14 + 24);
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
    (**(void (***)(unint64_t, unint64_t))(v15 - 8))(v13, v14);
    unint64_t v16 = (v13 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v16 + 24) = v18;
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
    (**(void (***)(void))(v18 - 8))();
  }
  return v4;
}

uint64_t sub_236D58A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v4);
  unint64_t v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v5);
  return __swift_destroy_boxed_opaque_existential_0((v5 + 47) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_236D58ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  unint64_t v10 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v11 + 24);
  *(void *)(v10 + 24) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  (**(void (***)(unint64_t, unint64_t))(v12 - 8))(v10, v11);
  unint64_t v13 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v13 + 24) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  (**(void (***)(void))(v15 - 8))();
  return a1;
}

uint64_t sub_236D58C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v7, v8);
  uint64_t v9 = (uint64_t *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (uint64_t *)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v9, v10);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(((unint64_t)v9 + 47) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v10 + 47) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_236D58D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  unint64_t v11 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  long long v13 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 16);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(_OWORD *)unint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  unint64_t v15 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v12 + 47) & 0xFFFFFFFFFFFFFFF8;
  long long v17 = *(_OWORD *)v16;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(_OWORD *)unint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  return a1;
}

uint64_t sub_236D58DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  unint64_t v11 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v11);
  long long v13 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 16);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(_OWORD *)unint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  unint64_t v15 = (v11 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v12 + 47) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v15);
  long long v17 = *(_OWORD *)v16;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(_OWORD *)unint64_t v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  return a1;
}

uint64_t sub_236D58EA4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236D59000);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_236D59014(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v20 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if ((a2 & 0x80000000) != 0)
              {
                double result = 0.0;
                *(_OWORD *)(v20 + 8) = 0u;
                *(_OWORD *)(v20 + 24) = 0u;
                *(void *)unint64_t v20 = a2 ^ 0x80000000;
              }
              else
              {
                *(void *)(v20 + 24) = a2 - 1;
              }
            }
            else
            {
              uint64_t v19 = *(void (**)(void))(v6 + 56);
              v19();
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 40);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x236D5921CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s8CoreDataC13ConfigurationVMa()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_236D59268()
{
  unint64_t result = qword_2688D1B18;
  if (!qword_2688D1B18)
  {
    type metadata accessor for HMCDAccessoryModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1B18);
  }
  return result;
}

_UNKNOWN **sub_236D592C0()
{
  return &off_26E9FF090;
}

uint64_t sub_236D592CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for HomesStore.Accessory();
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  id v9 = objc_msgSend(a1, sel_name);
  uint64_t v10 = sub_236DB9A10();
  uint64_t v12 = v11;

  int v13 = (uint64_t *)&v7[v4[5]];
  *int v13 = v10;
  v13[1] = v12;
  sub_236D5EF90();
  HomesStore.Accessory.Category.init(rawValue:)((uint64_t)objc_msgSend(a1, sel_category), &v29);
  char v14 = v29;
  if (v29 == 36) {
    char v14 = 0;
  }
  v7[v4[6]] = v14;
  id v15 = objc_msgSend(a1, sel_model);
  if (v15)
  {
    int v16 = v15;
    uint64_t v17 = sub_236DB9A10();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  unint64_t v20 = (uint64_t *)&v7[v4[8]];
  *unint64_t v20 = v17;
  v20[1] = v19;
  id v21 = objc_msgSend(a1, sel_firmwareVersion);
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v23 = sub_236DB9A10();
    uint64_t v25 = v24;
  }
  else
  {

    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  BOOL v26 = (uint64_t *)&v7[v4[9]];
  *BOOL v26 = v23;
  v26[1] = v25;
  sub_236D59664((uint64_t)v7, a2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v5 + 56))(a2, 0, 1, v4);
}

unint64_t sub_236D594E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBDD80;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 1701667182;
  *(void *)(inited + 72) = 0xE400000000000000;
  *(void *)(inited + 80) = swift_getKeyPath();
  *(void *)(inited + 88) = 0x79726F6765746163;
  *(void *)(inited + 96) = 0xE800000000000000;
  *(void *)(inited + 104) = swift_getKeyPath();
  *(void *)(inited + 112) = 0x6C65646F6DLL;
  *(void *)(inited + 120) = 0xE500000000000000;
  *(void *)(inited + 128) = swift_getKeyPath();
  *(void *)(inited + 136) = 0x657261776D726966;
  *(void *)(inited + 144) = 0xEF6E6F6973726556;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE738 = result;
  return result;
}

uint64_t sub_236D59608()
{
  if (qword_2688D12B8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_236D59664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Accessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t HomesStore.User.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.User.handle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.User() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HomesStore.User()
{
  uint64_t result = qword_2688D2A28;
  if (!qword_2688D2A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void static HomesStore.User.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t HomesStore.User.hash(into:)()
{
  sub_236DB9830();
  sub_236D5A604((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  type metadata accessor for HomesStore.User();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.User.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for HomesStore.User() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  unsigned int v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_236DBA600();
}

uint64_t sub_236D59900()
{
  if (*v0) {
    return 0x656C646E6168;
  }
  else {
    return 25705;
  }
}

uint64_t sub_236D5992C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D5AA98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D59954(uint64_t a1)
{
  unint64_t v2 = sub_236D59B84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D59990(uint64_t a1)
{
  unint64_t v2 = sub_236D59B84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.User.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D29D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D59B84();
  sub_236DBA760();
  v8[15] = 0;
  sub_236DB9830();
  sub_236D5A604(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.User();
    v8[14] = 1;
    sub_236DBA580();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_236D59B84()
{
  unint64_t result = qword_2688D29E0;
  if (!qword_2688D29E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D29E0);
  }
  return result;
}

uint64_t HomesStore.User.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.User.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_236DB9830();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D29E8);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HomesStore.User();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D59B84();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  unint64_t v22 = v11;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  char v29 = 0;
  sub_236D5A604(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v14 = v26;
  sub_236DBA530();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v6, v14);
  char v28 = 1;
  uint64_t v15 = sub_236DBA510();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v27);
  uint64_t v19 = (uint64_t)v22;
  uint64_t v18 = v23;
  unint64_t v20 = (uint64_t *)&v22[*(int *)(v9 + 20)];
  *unint64_t v20 = v15;
  v20[1] = v17;
  sub_236D5A22C(v19, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236D5A290(v19);
}

void sub_236D59FC0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_236D59FCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.User.init(from:)(a1, a2);
}

uint64_t sub_236D59FE4(void *a1)
{
  return HomesStore.User.encode(to:)(a1);
}

uint64_t sub_236D59FFC()
{
  return sub_236DBA710();
}

uint64_t sub_236D5A0BC()
{
  sub_236DB9830();
  sub_236D5A604((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D5A170()
{
  return sub_236DBA710();
}

uint64_t sub_236D5A22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.User();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D5A290(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.User();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static PartialModelRelationshipDescriptor<>.user.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D29F0);
  return MEMORY[0x270FA0480](v0, &unk_2688D13E0);
}

{
  uint64_t vars8;

  if (qword_2688D1378 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_236D5A324(uint64_t a1)
{
  return sub_236D5A3A8(a1, (uint64_t)&unk_236DBF438, &qword_2688D2A58, sub_236DB0740, &qword_2688D29C8);
}

uint64_t sub_236D5A378(uint64_t a1)
{
  return sub_236D5A3A8(a1, (uint64_t)&unk_236DBF408, &qword_2688D2A50, sub_236DB0B78, &qword_2688D29D0);
}

uint64_t sub_236D5A3A8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_allocObject();
  uint64_t result = a4(KeyPath);
  *a5 = result;
  return result;
}

uint64_t static PartialModelRelationshipDescriptor<>.userSharedSettings.getter()
{
  return sub_236D4AEF4(&qword_2688D12C8);
}

{
  uint64_t v0;
  uint64_t vars8;

  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3CF0);
  return MEMORY[0x270FA0480](v0, &unk_2688D1480);
}

uint64_t sub_236D5A430(void *a1)
{
  a1[1] = sub_236D5A604(&qword_2688D29F8, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
  a1[2] = sub_236D5A604(&qword_2688D2A00, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
  a1[3] = sub_236D5A604(&qword_2688D2A08, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
  a1[4] = sub_236D5A604(&qword_2688D2A10, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
  uint64_t result = sub_236D5A604(&qword_2688D2A18, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
  a1[5] = result;
  return result;
}

uint64_t sub_236D5A52C()
{
  return sub_236D5A604((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D5A574()
{
  return sub_236D5A604(&qword_2688D2A20, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
}

uint64_t sub_236D5A5BC()
{
  return sub_236D5A604(&qword_2688D1808, (void (*)(uint64_t))type metadata accessor for HomesStore.User);
}

uint64_t sub_236D5A604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s4UserVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D5A660);
}

uint64_t sub_236D5A660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s4UserVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D5A738);
}

uint64_t sub_236D5A738(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_236D5A7F8()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s4UserV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D5A958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4UserV10CodingKeysOMa()
{
  return &_s4UserV10CodingKeysON;
}

unint64_t sub_236D5A994()
{
  unint64_t result = qword_2688D2A38;
  if (!qword_2688D2A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2A38);
  }
  return result;
}

unint64_t sub_236D5A9EC()
{
  unint64_t result = qword_2688D2A40;
  if (!qword_2688D2A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2A40);
  }
  return result;
}

unint64_t sub_236D5AA44()
{
  unint64_t result = qword_2688D2A48;
  if (!qword_2688D2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2A48);
  }
  return result;
}

uint64_t sub_236D5AA98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C646E6168 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236D5AB7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_236D5AC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v30 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1948);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B60);
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1938);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v36 = (uint64_t)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = *(void *)(v4 + 112);
  uint64_t v17 = *(void *)(result + 16);
  if (v17)
  {
    uint64_t v35 = v36 + *(int *)(v13 + 36);
    uint64_t v18 = result + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v19 = *(void *)(v14 + 72);
    uint64_t v33 = a3;
    uint64_t v34 = v19;
    uint64_t v31 = v10;
    BOOL v32 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v20 = v28;
    id v21 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v22 = v30;
    uint64_t v23 = v12;
    uint64_t v24 = (void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v29 = result;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v25 = v9;
      uint64_t v26 = v36;
      sub_236D5E7AC(v18, v36);
      (*v32)(v25, v35, v6);
      sub_236D267CC(v26, &qword_2688D1938);
      uint64_t v37 = v22;
      uint64_t v38 = v20;
      uint64_t v39 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = v25;
      sub_236DB9CE0();
      (*v21)(v25, v6);
      (*v24)(v23, v31);
      v18 += v34;
      --v17;
    }
    while (v17);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236D5AF40(unint64_t a1)
{
  return sub_236D5B0FC(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_236D5EAA8);
}

uint64_t sub_236D5AF58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_236D55C58(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for AnyModelStateChange(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D5B0FC(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_236DBA460();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x237E0F580](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_236DB9B50();
}

uint64_t sub_236D5B2D0()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2A60);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2A60);
  return sub_236DB9940();
}

uint64_t *sub_236D5B34C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  if (*(uint64_t *)((char *)v0 + *(void *)(*v0 + 128)))
  {
    swift_retain();
    sub_236DB9D50();
    swift_release();
    uint64_t v1 = *v0;
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(v1 + 104));

  swift_release();
  swift_release();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_236D5B498()
{
  sub_236D5B34C();
  return MEMORY[0x270FA2418](v0);
}

uint64_t _s21ManagedObjectListenerCMa()
{
  return __swift_instantiateGenericMetadata();
}

void sub_236D5B4DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v32 - v7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v4, v3);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  sub_236D5E690(v10, v10);
  swift_allocObject();
  uint64_t v11 = sub_236DB9B60();
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v4, v3);
  sub_236DB9C10();
  unint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v11, AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  if (v12)
  {
    uint64_t v13 = *(void *)(*v1 + 136);
    uint64_t v14 = *(void **)((char *)v1 + v13);
    *(void *)((char *)v1 + v13) = v12;
    id v15 = v12;

    if (qword_2688D12D0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_236DB9950();
    __swift_project_value_buffer(v16, (uint64_t)qword_2688D2A60);
    swift_retain_n();
    unint64_t v17 = sub_236DB9930();
    os_log_type_t v18 = sub_236DB9F30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      id v32 = *(id *)((char *)v1 + v13);
      uint64_t v33 = v20;
      id v21 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B50);
      uint64_t v22 = sub_236DB9A20();
      id v32 = (id)sub_236DB6880(v22, v23, &v33);
      sub_236DBA0B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236D14000, v17, v18, "Setting current token to %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v20, -1, -1);
      MEMORY[0x237E101A0](v19, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_2688D12D0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_236DB9950();
    __swift_project_value_buffer(v24, (uint64_t)qword_2688D2A60);
    swift_retain_n();
    uint64_t v25 = sub_236DB9930();
    os_log_type_t v26 = sub_236DB9F30();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v33 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      id v32 = *(id *)((char *)v1 + *(void *)(*v1 + 136));
      id v29 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B50);
      uint64_t v30 = sub_236DB9A20();
      id v32 = (id)sub_236DB6880(v30, v31, &v33);
      sub_236DBA0B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236D14000, v25, v26, "Unable to update current token, leaving as %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v28, -1, -1);
      MEMORY[0x237E101A0](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_236D5BA98(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  uint64_t v3 = *v1;
  v2[11] = *(void *)(*v1 + 88);
  v2[12] = *(void *)(v3 + 80);
  v2[13] = swift_getAssociatedTypeWitness();
  v2[14] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[15] = AssociatedTypeWitness;
  v2[16] = *(void *)(AssociatedTypeWitness - 8);
  v2[17] = swift_task_alloc();
  uint64_t v5 = sub_236DB9950();
  v2[18] = v5;
  v2[19] = *(void *)(v5 - 8);
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D5BC5C, v1, 0);
}

uint64_t sub_236D5BC5C()
{
  uint64_t v48 = v0;
  if (qword_2688D12D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2688D2A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_retain_n();
  uint64_t v5 = sub_236DB9930();
  os_log_type_t v6 = sub_236DB9F40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[16];
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[15];
    uint64_t v10 = v0[12];
    uint64_t v11 = v0[11];
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    uint64_t v47 = v45;
    *(_DWORD *)unint64_t v12 = 136315138;
    (*(void (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v9, AssociatedConformanceWitness);
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    if (!v16)
    {
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v18 = v0[19];
    uint64_t v17 = v0[20];
    uint64_t v46 = v0[18];
    v0[8] = sub_236DB6880(v14, v16, &v47);
    sub_236DBA0B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v5, v6, "Persistent store changed: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v45, -1, -1);
    MEMORY[0x237E101A0](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v46);
  }
  else
  {
    uint64_t v20 = v0[19];
    uint64_t v19 = v0[20];
    uint64_t v21 = v0[18];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  uint64_t v22 = (void *)v0[9];
  uint64_t v23 = v0[10];
  uint64_t v24 = *(void *)(*(void *)v23 + 136);
  uint64_t v25 = *(void **)(v23 + v24);
  v0[21] = v25;
  *(void *)(v23 + v24) = v22;
  id v26 = v22;
  if (v25)
  {
    uint64_t v28 = v0[11];
    uint64_t v27 = v0[12];
    v0[7] = v0[10];
    id v29 = (void *)swift_allocObject();
    v0[22] = v29;
    v29[2] = v27;
    v29[3] = v28;
    v29[4] = v25;
    id v30 = v25;
    unint64_t v31 = (void *)swift_task_alloc();
    v0[23] = v31;
    uint64_t v32 = _s21ManagedObjectListenerCMa();
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B58);
    uint64_t WitnessTable = swift_getWitnessTable();
    *unint64_t v31 = v0;
    v31[1] = sub_236D5C220;
    return sub_236D501D0((uint64_t)(v0 + 2), (uint64_t)sub_236D5E78C, (uint64_t)v29, v32, v33, WitnessTable);
  }
  else
  {
    swift_retain_n();
    uint64_t v36 = sub_236DB9930();
    os_log_type_t v37 = sub_236DB9F60();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v47 = v39;
      uint64_t v40 = *(void **)(v23 + v24);
      v0[5] = v40;
      id v41 = v40;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B50);
      uint64_t v42 = sub_236DB9A20();
      v0[6] = sub_236DB6880(v42, v43, &v47);
      sub_236DBA0B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236D14000, v36, v37, "No previous CoreData token - ignoring change notification (current token: %s.", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v39, -1, -1);
      MEMORY[0x237E101A0](v38, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = (uint64_t (*)(void))v0[1];
    return v44();
  }
}

uint64_t sub_236D5C220()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_236D5C34C, v1, 0);
}

uint64_t sub_236D5C34C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 192) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 80);
    *(int8x16_t *)(v0 + 200) = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    uint64_t v3 = *(void *)(v2 + *(void *)(*(void *)v2 + 120));
    *(void *)(v0 + 216) = v3;
    return MEMORY[0x270FA2498](sub_236D5C438, v3, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 168);

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_236D5C438()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[10];
  sub_236D5AC44(v1, v0[26], v0[25]);
  sub_236D38DBC(v1);
  return MEMORY[0x270FA2498](sub_236D5C4D4, v2, 0);
}

uint64_t sub_236D5C4D4()
{
  uint64_t v1 = *(void **)(v0 + 168);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_236D5C550(uint8_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v8 = sub_236D5CA00(a2, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v3)
  {

LABEL_3:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_6;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_236DBA460();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_32;
  }
LABEL_6:
  *(void *)&long long v27 = MEMORY[0x263F8EE80];
  *((void *)&v27 + 1) = MEMORY[0x263F8EE80];
  uint64_t v28 = MEMORY[0x263F8EE80];
  uint64_t v29 = v10 - 1;
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    if ((v9 & 0xC000000000000001) == 0) {
      goto LABEL_9;
    }
LABEL_8:
    for (id i = (id)MEMORY[0x237E0F570](v11, v9); ; id i = *(id *)(v9 + 8 * v11 + 32))
    {
      uint64_t v13 = i;
      if (qword_2688D12D0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_236DB9950();
      __swift_project_value_buffer(v14, (uint64_t)qword_2688D2A60);
      unint64_t v15 = v13;
      unint64_t v16 = sub_236DB9930();
      os_log_type_t v17 = sub_236DB9F40();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 138412290;
        *(void *)(v18 + 4) = v15;
        *uint64_t v19 = v15;
        _os_log_impl(&dword_236D14000, v16, v17, "Processing change: %@", (uint8_t *)v18, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
        swift_arrayDestroy();
        MEMORY[0x237E101A0](v19, -1, -1);
        MEMORY[0x237E101A0](v18, -1, -1);
      }
      else
      {

        unint64_t v16 = v15;
      }

      id v20 = [v15 changeType];
      if (v20 == (id)2)
      {
        sub_236D72AB4(v15);
      }
      else if (v20 == (id)1)
      {
        sub_236D72844(v15);
      }
      else if (v20)
      {
        if (qword_2688D12E8 != -1) {
          swift_once();
        }
        __swift_project_value_buffer(v14, (uint64_t)qword_2688D2CE8);
        uint64_t v21 = v15;
        uint64_t v22 = sub_236DB9930();
        os_log_type_t v23 = sub_236DB9F50();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v25 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 134218242;
          *(void *)(v24 + 4) = [v21 changeType];
          *(_WORD *)(v24 + 12) = 2112;
          *(void *)(v24 + 14) = v21;
          void *v25 = v21;
          _os_log_impl(&dword_236D14000, v22, v23, "Skipping change with unknown change type %ld: %@", (uint8_t *)v24, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
          swift_arrayDestroy();
          MEMORY[0x237E101A0](v25, -1, -1);
          MEMORY[0x237E101A0](v24, -1, -1);

          goto LABEL_27;
        }
      }
      else
      {
        sub_236D7254C(v15);
      }

LABEL_27:
      if (v29 == v11)
      {
        swift_bridgeObjectRelease();
        *(_OWORD *)a3 = v27;
        a3[2] = v28;
        return;
      }
      ++v11;
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_8;
      }
LABEL_9:
      ;
    }
  }
  __break(1u);
}

uint64_t sub_236D5CA00(void *a1, uint8_t *a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(self, sel_fetchHistoryAfterToken_, a1);
  objc_msgSend(v8, sel_setResultType_, 5);
  unint64_t v9 = v8;
  objc_msgSend(v8, sel_setFetchBatchSize_, 20);
  if (qword_2688D12D0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_236DB9950();
  __swift_project_value_buffer(v10, (uint64_t)qword_2688D2A60);
  id v11 = a1;
  unint64_t v12 = sub_236DB9930();
  os_log_type_t v13 = sub_236DB9F30();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v36 = a2;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    unint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    v39[0] = v11;
    id v16 = v11;
    sub_236DBA0B0();
    *unint64_t v15 = a1;

    _os_log_impl(&dword_236D14000, v12, v13, "Fetching history since %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v15, -1, -1);
    os_log_type_t v17 = v14;
    a2 = v36;
    MEMORY[0x237E101A0](v17, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, uint64_t, uint64_t))(a4 + 80))(0, a3, a4);
  if (v37)
  {
    uint64_t v18 = sub_236DB9930();
    os_log_type_t v19 = sub_236DB9F50();
    uint64_t v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_236D14000, v18, (os_log_type_t)v20, "Failed to unpin managed object context.", v21, 2u);
      MEMORY[0x237E101A0](v21, -1, -1);
    }

    swift_willThrow();
    return v20;
  }
  uint64_t v22 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(a4 + 40))(v9, a3, a4);
  self;
  os_log_type_t v23 = (void *)swift_dynamicCastObjCClass();
  if (!v23) {
    goto LABEL_22;
  }
  if (objc_msgSend(v23, sel_result))
  {
    sub_236DBA0E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  sub_236D5EA40((uint64_t)v38, (uint64_t)v39);
  if (!v39[3])
  {
    sub_236D267CC((uint64_t)v39, &qword_2688D2B40);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B68);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:

    return MEMORY[0x263F8EE78];
  }
  unint64_t v25 = v39[5];
  swift_bridgeObjectRetain_n();
  id v26 = sub_236DB9930();
  LOBYTE(v27) = sub_236DB9F30();
  unint64_t v28 = v25 >> 62;
  if (!os_log_type_enabled(v26, (os_log_type_t)v27))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  a2 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)a2 = 134217984;
  if (v28) {
    goto LABEL_40;
  }
  uint64_t v29 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v39[0] = v29;
    sub_236DBA0B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v26, (os_log_type_t)v27, "Found %ld transactions since last token.", a2, 0xCu);
    MEMORY[0x237E101A0](a2, -1, -1);

LABEL_24:
    v39[0] = MEMORY[0x263F8EE78];
    if (v28)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_236DBA460();
      if (!v27)
      {
LABEL_37:

        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x263F8EE78];
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v27) {
        goto LABEL_37;
      }
    }
    if (v27 >= 1) {
      break;
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((v25 & 0xC000000000000001) != 0) {
      id v34 = (id)MEMORY[0x237E0F570](i, v25);
    }
    else {
      id v34 = *(id *)(v25 + 8 * i + 32);
    }
    uint64_t v33 = v34;
    id v35 = objc_msgSend(v34, sel_changes);
    if (v35)
    {
      id v31 = v35;
      sub_236D291DC(0, &qword_2688D2B70);
      unint64_t v32 = sub_236DB9B30();

      uint64_t v33 = v31;
    }
    else
    {
      unint64_t v32 = MEMORY[0x263F8EE78];
    }

    sub_236D5B0FC(v32, (uint64_t (*)(uint64_t, void, unint64_t))sub_236D5ECB8);
  }

  swift_bridgeObjectRelease();
  uint64_t v20 = v39[0];
LABEL_38:
  swift_bridgeObjectRelease();

  return v20;
}

uint64_t sub_236D5D194()
{
  v1[2] = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  v1[3] = swift_task_alloc();
  v1[4] = *(void *)(v2 + 88);
  v1[5] = *(void *)(v2 + 80);
  v1[6] = swift_getAssociatedTypeWitness();
  v1[7] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[8] = AssociatedTypeWitness;
  v1[9] = *(void *)(AssociatedTypeWitness - 8);
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D5D32C, v0, 0);
}

uint64_t sub_236D5D32C()
{
  uint64_t v2 = v0[4].i64[1];
  uint64_t v1 = v0[5].i64[0];
  uint64_t v3 = v0[4].i64[0];
  uint64_t v4 = v0[2].i64[1];
  uint64_t v5 = v0[2].i64[0];
  sub_236D5B4DC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 48))(v4, v5);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v3, AssociatedConformanceWitness);
  uint64_t v9 = v8;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v9)
  {
    uint64_t v12 = v0[1].i64[0];
    uint64_t v11 = v0[1].i64[1];
    int8x16_t v18 = v0[2];
    uint64_t v13 = sub_236DB9FD0();
    uint64_t v14 = sub_236DB9C90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    id v16 = (int8x16_t *)swift_allocObject();
    v16[1].i64[0] = 0;
    v16[1].i64[1] = 0;
    v16[2] = vextq_s8(v18, v18, 8uLL);
    v16[3].i64[0] = v13;
    v16[3].i64[1] = v15;
    v16[4].i64[0] = v7;
    v16[4].i64[1] = v9;
    *(void *)(v12 + *(void *)(*(void *)v12 + 128)) = sub_236D795C0(v11, (uint64_t)&unk_2688D2B28, (uint64_t)v16);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v17 = (uint64_t (*)(void))v0->i64[1];
    return v17();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_236D5D580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[33] = a6;
  v7[34] = a7;
  v7[31] = a4;
  v7[32] = a5;
  uint64_t v8 = sub_236DB9300();
  v7[35] = v8;
  v7[36] = *(void *)(v8 - 8);
  v7[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B30);
  v7[38] = swift_task_alloc();
  uint64_t v9 = sub_236DB9FC0();
  v7[39] = v9;
  v7[40] = *(void *)(v9 - 8);
  v7[41] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D5D6D4, 0, 0);
}

uint64_t sub_236D5D6D4()
{
  swift_retain();
  sub_236DB9FB0();
  swift_beginAccess();
  uint64_t v1 = *MEMORY[0x263EFF098];
  v0[42] = *MEMORY[0x263EFF170];
  v0[43] = v1;
  unint64_t v2 = sub_236D5E638();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[44] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_236D5D7D4;
  uint64_t v4 = v0[38];
  uint64_t v5 = v0[39];
  return MEMORY[0x270FA1E80](v4, v5, v2);
}

uint64_t sub_236D5D7D4()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_236D5E050;
  }
  else {
    unint64_t v2 = sub_236D5D8E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D5D8E8()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 296), v1, v2);
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 368) = Strong;
    if (Strong)
    {
      uint64_t v5 = (_OWORD *)(v0 + 96);
      uint64_t v6 = sub_236DB92F0();
      if (v6)
      {
        uint64_t v7 = v6;
        *(void *)(v0 + 200) = sub_236DB9A10();
        *(void *)(v0 + 208) = v8;
        sub_236DBA210();
        if (*(void *)(v7 + 16) && (unint64_t v9 = sub_236D85998(v0 + 56), (v10 & 1) != 0))
        {
          sub_236D1900C(*(void *)(v7 + 56) + 32 * v9, v0 + 96);
        }
        else
        {
          *uint64_t v5 = 0u;
          *(_OWORD *)(v0 + 112) = 0u;
        }
        swift_bridgeObjectRelease();
        sub_236D5E700(v0 + 56);
        if (*(void *)(v0 + 120))
        {
          if (swift_dynamicCast())
          {
            uint64_t v14 = *(void *)(v0 + 184);
            unint64_t v13 = *(void *)(v0 + 192);
            if ((v14 != *(void *)(v0 + 264) || v13 != *(void *)(v0 + 272)) && (sub_236DBA600() & 1) == 0)
            {
              if (qword_2688D12D0 != -1) {
                swift_once();
              }
              uint64_t v37 = sub_236DB9950();
              __swift_project_value_buffer(v37, (uint64_t)qword_2688D2A60);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v38 = sub_236DB9930();
              os_log_type_t v39 = sub_236DB9F40();
              BOOL v40 = os_log_type_enabled(v38, v39);
              uint64_t v41 = *(void *)(v0 + 288);
              uint64_t v42 = *(void *)(v0 + 296);
              unint64_t v43 = *(void *)(v0 + 272);
              uint64_t v48 = *(void *)(v0 + 280);
              if (v40)
              {
                uint64_t v45 = *(void *)(v0 + 264);
                uint64_t v47 = *(void *)(v0 + 296);
                uint64_t v44 = swift_slowAlloc();
                uint64_t v46 = swift_slowAlloc();
                uint64_t v49 = v46;
                *(_DWORD *)uint64_t v44 = 136315394;
                swift_bridgeObjectRetain();
                *(void *)(v44 + 4) = sub_236DB6880(v45, v43, &v49);
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v44 + 12) = 2080;
                swift_bridgeObjectRetain();
                *(void *)(v44 + 14) = sub_236DB6880(v14, v13, &v49);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_236D14000, v38, v39, "Persistent store identifier mismatch: expected %s, got %s", (uint8_t *)v44, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x237E101A0](v46, -1, -1);
                MEMORY[0x237E101A0](v44, -1, -1);
                swift_release();

                (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v47, v48);
              }
              else
              {
                swift_release();

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v48);
              }
              goto LABEL_29;
            }
            uint64_t v15 = (_OWORD *)(v0 + 128);
            swift_bridgeObjectRelease();
            uint64_t v16 = sub_236DB92F0();
            if (v16)
            {
              uint64_t v17 = v16;
              *(void *)(v0 + 216) = sub_236DB9A10();
              *(void *)(v0 + 224) = v18;
              sub_236DBA210();
              if (*(void *)(v17 + 16) && (unint64_t v19 = sub_236D85998(v0 + 16), (v20 & 1) != 0))
              {
                sub_236D1900C(*(void *)(v17 + 56) + 32 * v19, v0 + 128);
              }
              else
              {
                *uint64_t v15 = 0u;
                *(_OWORD *)(v0 + 144) = 0u;
              }
              swift_bridgeObjectRelease();
              sub_236D5E700(v0 + 16);
              if (*(void *)(v0 + 152))
              {
                sub_236D291DC(0, &qword_2688D2B48);
                if (swift_dynamicCast())
                {
                  uint64_t v33 = *(void **)(v0 + 240);
                  *(void *)(v0 + 376) = v33;
                  id v34 = v33;
                  id v35 = (void *)swift_task_alloc();
                  *(void *)(v0 + 384) = v35;
                  *id v35 = v0;
                  v35[1] = sub_236D5E0D4;
                  return sub_236D5BA98((uint64_t)v34);
                }
                goto LABEL_40;
              }
            }
            else
            {
              *uint64_t v15 = 0u;
              *(_OWORD *)(v0 + 144) = 0u;
            }
            sub_236D267CC(v0 + 128, &qword_2688D2B40);
LABEL_40:
            if (qword_2688D12D0 != -1) {
              swift_once();
            }
            uint64_t v36 = sub_236DB9950();
            __swift_project_value_buffer(v36, (uint64_t)qword_2688D2A60);
            uint64_t v22 = sub_236DB9930();
            os_log_type_t v23 = sub_236DB9F40();
            if (!os_log_type_enabled(v22, v23)) {
              goto LABEL_28;
            }
            uint64_t v24 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v24 = 0;
            unint64_t v25 = "NSPersistentStoreRemoteChange notification missing history token";
LABEL_27:
            _os_log_impl(&dword_236D14000, v22, v23, v25, v24, 2u);
            MEMORY[0x237E101A0](v24, -1, -1);
LABEL_28:
            uint64_t v27 = *(void *)(v0 + 288);
            uint64_t v26 = *(void *)(v0 + 296);
            uint64_t v28 = *(void *)(v0 + 280);
            swift_release();

            (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_29:
            unint64_t v29 = sub_236D5E638();
            id v30 = (void *)swift_task_alloc();
            *(void *)(v0 + 352) = v30;
            void *v30 = v0;
            v30[1] = sub_236D5D7D4;
            uint64_t v31 = *(void *)(v0 + 304);
            uint64_t v32 = *(void *)(v0 + 312);
            return MEMORY[0x270FA1E80](v31, v32, v29);
          }
LABEL_23:
          if (qword_2688D12D0 != -1) {
            swift_once();
          }
          uint64_t v21 = sub_236DB9950();
          __swift_project_value_buffer(v21, (uint64_t)qword_2688D2A60);
          uint64_t v22 = sub_236DB9930();
          os_log_type_t v23 = sub_236DB9F40();
          if (!os_log_type_enabled(v22, v23)) {
            goto LABEL_28;
          }
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          unint64_t v25 = "No store identifier in persistent store changed notification.";
          goto LABEL_27;
        }
      }
      else
      {
        *uint64_t v5 = 0u;
        *(_OWORD *)(v0 + 112) = 0u;
      }
      sub_236D267CC(v0 + 96, &qword_2688D2B40);
      goto LABEL_23;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 296), *(void *)(v0 + 280));
  }
  (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_236D5E050()
{
  *(void *)(v0 + 232) = *(void *)(v0 + 360);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_236D5E0D4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 376);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_236D5E1E8, 0, 0);
}

uint64_t sub_236D5E1E8()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v3 = v0[36];
  uint64_t v2 = v0[37];
  uint64_t v4 = v0[35];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  unint64_t v5 = sub_236D5E638();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[44] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_236D5D7D4;
  uint64_t v7 = v0[38];
  uint64_t v8 = v0[39];
  return MEMORY[0x270FA1E80](v7, v8, v5);
}

uint64_t sub_236D5E2C4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_236D5E2E4, v1, 0);
}

uint64_t sub_236D5E2E4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + *(void *)(**(void **)(v0 + 24) + 120));
  *(void *)(v0 + 32) = v1;
  return MEMORY[0x270FA2498](sub_236D5E31C, v1, 0);
}

uint64_t sub_236D5E31C()
{
  sub_236D1CD48(1);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D5E384()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_236D26C08;
  return sub_236D5D194();
}

uint64_t sub_236D5E414(uint64_t a1)
{
  uint64_t v4 = *v1;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_236D26C08;
  return MEMORY[0x270FA2498](sub_236D5E2E4, v4, 0);
}

uint64_t sub_236D5E4C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236D5E4FC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236D5E54C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_236D17ED0;
  return sub_236D5D580(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_236D5E638()
{
  unint64_t result = qword_2688D2B38;
  if (!qword_2688D2B38)
  {
    sub_236DB9FC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2B38);
  }
  return result;
}

uint64_t sub_236D5E690(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25B0);
  }
  else
  {
    return MEMORY[0x270F9F4F8](0, a2);
  }
}

uint64_t sub_236D5E700(uint64_t a1)
{
  return a1;
}

uint64_t sub_236D5E754()
{
  return swift_deallocObject();
}

void sub_236D5E78C(uint8_t *a1@<X0>, void *a2@<X8>)
{
  sub_236D5C550(a1, *(void **)(v2 + 32), a2);
}

uint64_t sub_236D5E7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_236D5E814(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_236D5E930(v6, a2, a3);
  return sub_236D5E87C;
}

uint64_t (*sub_236D5E880(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_236D5E9B8(v6, a2, a3);
  return sub_236D5E87C;
}

void sub_236D5E8E8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_236D5E930(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x237E0F570](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_236D5E9B0;
  }
  __break(1u);
  return result;
}

uint64_t sub_236D5E9B0()
{
  return swift_release();
}

void (*sub_236D5E9B8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x237E0F570](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_236D5EA38;
  }
  __break(1u);
  return result;
}

void sub_236D5EA38(id *a1)
{
}

uint64_t sub_236D5EA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D5EAA8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_236DBA460();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_236DBA460();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_236D5EED8(&qword_2688D2B90, &qword_2688D2B88);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B88);
          uint64_t v12 = sub_236D5E814(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s5ProxyCMa_0();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D5ECB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_236DBA460();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_236DBA460();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_236D5EED8(&qword_2688D2B80, &qword_2688D2B78);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B78);
          uint64_t v12 = sub_236D5E880(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_236D291DC(0, &qword_2688D2B70);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_236DBA4A0();
  __break(1u);
  return result;
}

uint64_t sub_236D5EED8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236D5EF2C()
{
  unint64_t result = qword_2688D1B08;
  if (!qword_2688D1B08)
  {
    type metadata accessor for HMCDHomeModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1B08);
  }
  return result;
}

_UNKNOWN **sub_236D5EF84()
{
  return &off_26E9FF2B8;
}

void sub_236D5EF94()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_236DB9830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_managedObjectContext);
  if (!v6) {
    goto LABEL_15;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_persistentStoreCoordinator);

  if (!v8) {
    goto LABEL_15;
  }
  id v9 = objc_msgSend(v8, sel_persistentStores);

  sub_236D5F4B0();
  unint64_t v10 = sub_236DB9B30();

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_236DBA460();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x237E0F570](0, v10);
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_15;
    }
    id v11 = *(id *)(v10 + 32);
  }
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  sub_236DB5D04(&v21);
  unint64_t v13 = *((void *)&v21 + 1);
  if (*((void *)&v21 + 1) >> 60 != 15)
  {
    uint64_t v14 = v21;
    uint64_t v15 = self;
    id v16 = objc_msgSend(v1, sel_modelID);
    sub_236DB9810();

    uint64_t v17 = (void *)sub_236DB97F0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v18 = (void *)sub_236DB9790();
    id v19 = objc_msgSend(v15, sel_hmf_UUIDWithNamespace_data_salts_, v17, v18, 0);

    sub_236DB9810();
    sub_236D5F4F0(v14, v13);

    return;
  }
LABEL_15:
  sub_236DBA450();
  __break(1u);
}

uint64_t sub_236D5F2D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  id v7 = objc_msgSend(a1, sel_name);
  uint64_t v8 = sub_236DB9A10();
  uint64_t v10 = v9;

  id v11 = (uint64_t *)(a3 + *(int *)(a2 + 20));
  *id v11 = v8;
  v11[1] = v10;
  sub_236D5EF94();

  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v12(a3, 0, 1, a2);
}

unint64_t sub_236D5F3B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBEEE0;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 1701667182;
  *(void *)(inited + 72) = 0xE400000000000000;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE740 = result;
  return result;
}

uint64_t sub_236D5F454()
{
  if (qword_2688D12D8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_236D5F4B0()
{
  unint64_t result = qword_2688D2578;
  if (!qword_2688D2578)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2688D2578);
  }
  return result;
}

uint64_t sub_236D5F4F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_236D1B18C(a1, a2);
  }
  return a1;
}

uint64_t sub_236D5F504@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(a5 + 32))(&v13, a2, a4, a5);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a3, a4);
  sub_236D1B1E4(&v13, (uint64_t)v14);
  sub_236D1B1E4(v14, a6);
  uint64_t v11 = type metadata accessor for AnyModelStateChange(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a6, 0, 1, v11);
}

uint64_t sub_236D5F88C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a1;
  swift_bridgeObjectRelease();

  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(a5 + 32))(&v14, a2, a4, a5);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a3, a4);
  sub_236D1B1E4(&v14, (uint64_t)v15);
  sub_236D1B1E4(v15, a6);
  uint64_t v12 = type metadata accessor for AnyModelStateChange(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a6, 0, 1, v12);
}

uint64_t sub_236D5FC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v24 = a6;
  uint64_t v10 = sub_236DB9830();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v23 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a5 + 24))(&v25, a2, a4, a5);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a3, a4);
  LOBYTE(a5) = v25;
  uint64_t v17 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  uint64_t v18 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v22 + *(int *)(v17 + 20), v10);
  sub_236D60FC4(v18, (uint64_t (*)(void))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
  v16[*(int *)(type metadata accessor for AnyModelStateChange.Tombstone(0) + 20)] = a5;
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = v24;
  sub_236D61024((uint64_t)v16, v24);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v14);
}

uint64_t sub_236D5FF24()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2B98);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2B98);
  return sub_236DB9940();
}

uint64_t AnyModelState.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_236D1B32C(v1, a1);
}

uint64_t AnyModelStateChange.Tombstone.modelID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AnyModelStateChange.Tombstone.modelType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AnyModelStateChange.Tombstone(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AnyModelStateChange.Tombstone(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D2BC0);
}

uint64_t initializeBufferWithCopyOfBuffer for AnyModelState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for AnyModelState(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyModelState(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyModelState(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyModelState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyModelState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyModelState()
{
  return &type metadata for AnyModelState;
}

uint64_t initializeBufferWithCopyOfBuffer for AnyModelStateChange(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *(void *)a1 = *a2;
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        long long v9 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v9;
        (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
        break;
      case 3u:
        uint64_t v7 = sub_236DB9830();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for AnyModelStateChange.Tombstone(0);
        *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
        break;
      default:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AnyModelStateChange(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
      uint64_t result = __swift_destroy_boxed_opaque_existential_0(a1);
      break;
    case 3:
      uint64_t v3 = sub_236DB9830();
      long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for AnyModelStateChange(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      break;
    case 3u:
      uint64_t v4 = sub_236DB9830();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for AnyModelStateChange.Tombstone(0);
      *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
      break;
    default:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for AnyModelStateChange(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_236D60FC4((uint64_t)a1, type metadata accessor for AnyModelStateChange);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v4 = a2[3];
        a1[3] = v4;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v4 - 8))(a1, a2);
        break;
      case 3u:
        uint64_t v5 = sub_236DB9830();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        uint64_t v6 = type metadata accessor for AnyModelStateChange.Tombstone(0);
        *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for AnyModelStateChange(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D2BB0);
}

uint64_t sub_236D6083C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *initializeWithTake for AnyModelStateChange(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_236DB9830();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for AnyModelStateChange.Tombstone(0);
    a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for AnyModelStateChange(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_236D60FC4((uint64_t)a1, type metadata accessor for AnyModelStateChange);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_236DB9830();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for AnyModelStateChange.Tombstone(0);
      a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_236D60A30()
{
  uint64_t result = type metadata accessor for AnyModelStateChange.Tombstone(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AnyModelStateChange.Tombstone(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for AnyModelStateChange.Tombstone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for AnyModelStateChange.Tombstone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for AnyModelStateChange.Tombstone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AnyModelStateChange.Tombstone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyModelStateChange.Tombstone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D60DA4);
}

uint64_t sub_236D60DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 8) {
      return v10 - 7;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AnyModelStateChange.Tombstone(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D60E74);
}

uint64_t sub_236D60E74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  }
  return result;
}

uint64_t sub_236D60F30()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_236D60FC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236D61024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D61088(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static HomesStore.CoreData.Constants.modelIDKey.getter()
{
  return 0x44496C65646F6DLL;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.Constants()
{
  return &type metadata for HomesStore.CoreData.Constants;
}

uint64_t sub_236D61110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 8);
}

void sub_236D6111C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_homes);
  type metadata accessor for HMCDHomeModel();
  sub_236D61524(&qword_2688D2BD8, 255, (void (*)(uint64_t))type metadata accessor for HMCDHomeModel);
  uint64_t v4 = sub_236DB9E10();

  *a2 = v4;
}

void sub_236D611C0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  type metadata accessor for HMCDHomeModel();
  sub_236D61524(&qword_2688D2BD8, 255, (void (*)(uint64_t))type metadata accessor for HMCDHomeModel);
  id v3 = (id)sub_236DB9E00();
  objc_msgSend(v2, sel_setHomes_, v3);
}

id HMCDHomesTopologyModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDHomesTopologyModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDHomesTopologyModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDHomesTopologyModel()
{
  return self;
}

id HMCDHomesTopologyModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDHomesTopologyModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static HMCDHomesTopologyModel.entityName.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_236D613FC()
{
  return 0xD000000000000016;
}

uint64_t sub_236D61418(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_236D61524(&qword_2688D2BD0, a2, (void (*)(uint64_t))type metadata accessor for HMCDHomesTopologyModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D61470@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDHomesTopologyModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236D614B4(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

char *keypath_get_selector_homes()
{
  return sel_homes;
}

uint64_t sub_236D61524(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236D6156C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C50);
  objc_super v2 = (void *)sub_236DBA490();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_236D857D8(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    unsigned int v10 = (void *)(v2[7] + 16 * result);
    *unsigned int v10 = v6;
    v10[1] = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236D61684(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C48);
  objc_super v2 = (void *)sub_236DBA490();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 1);
    uint64_t v6 = *v4;
    swift_retain();
    id v7 = v6;
    unint64_t result = sub_236D857D8(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v5;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236D61790(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2CA0);
  uint64_t v2 = sub_236DBA490();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236D26704(v6, (uint64_t)&v15, &qword_2688D2CA8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_236D85920(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_236D18FFC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236D618C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2BF0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C40);
  uint64_t v6 = sub_236DBA490();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_236D26704(v12, (uint64_t)v5, &qword_2688D2BF0);
    unint64_t result = sub_236D85A48((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_236DB9420();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 24 * v16;
    long long v20 = *(_OWORD *)(v9 + 8);
    *(void *)uint64_t v19 = *(void *)v9;
    *(_OWORD *)(v19 + 8) = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236D61AD0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2688D1BD8);
  uint64_t v2 = sub_236DBA490();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236D26704(v6, (uint64_t)v15, &qword_2688D2CB0);
    unint64_t result = sub_236D85998((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_236D18FFC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_236D61C14(uint64_t a1, int64_t a2, uint64_t a3)
{
  void (*v7)(uint64_t *__return_ptr);
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  int64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  int *v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void v95[2];
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t *__return_ptr);
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void v114[3];
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  char *v123;

  uint64_t v105 = a1;
  uint64_t v98 = sub_236DB9420();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v96 = (char *)v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_236DB9710();
  uint64_t v106 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v107 = (char *)v95 - v6;
  v123 = (char *)v95 - v6;
  v122 = a2;
  uint64_t v104 = sub_236DB9860();
  sub_236DB9850();
  uint64_t v7 = *(void (**)(uint64_t *__return_ptr))(a3 + 48);
  uint64_t v102 = a2;
  v103 = a3;
  v101 = a3 + 48;
  uint64_t v100 = v7;
  ((void (*)(uint64_t *__return_ptr, int64_t, uint64_t))v7)(&v117, a2, a3);
  sub_236D29CDC();
  unint64_t result = (*(uint64_t (**)(void))(v8 + 8))();
  long long v10 = 0;
  long long v11 = *(void *)(result + 64);
  v109 = result + 64;
  uint64_t v12 = 1 << *(unsigned char *)(result + 32);
  BOOL v13 = -1;
  if (v12 < 64) {
    BOOL v13 = ~(-1 << v12);
  }
  uint64_t v14 = v13 & v11;
  v110 = (unint64_t)(v12 + 63) >> 6;
  v111 = result;
  char v15 = MEMORY[0x263F8EE80];
  while (1)
  {
    v113 = v15;
    if (v14)
    {
      long long v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v112 = v10;
      uint64_t v18 = v17 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_74;
    }
    if (v19 >= v110) {
      goto LABEL_28;
    }
    long long v20 = *(void *)(v109 + 8 * v19);
    uint64_t v21 = v10 + 1;
    if (!v20)
    {
      uint64_t v21 = v10 + 2;
      if ((uint64_t)(v10 + 2) >= v110) {
        goto LABEL_28;
      }
      long long v20 = *(void *)(v109 + 8 * v21);
      if (!v20)
      {
        uint64_t v21 = v10 + 3;
        if ((uint64_t)(v10 + 3) >= v110) {
          goto LABEL_28;
        }
        long long v20 = *(void *)(v109 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v14 = (v20 - 1) & v20;
    v112 = v21;
    uint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = *(void *)(*(void *)(v111 + 48) + 8 * v18);
    uint64_t v24 = (uint64_t *)(*(void *)(v111 + 56) + 16 * v18);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    v114[0] = v23;
    sub_236DBA100();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_236DB9A20();
    unint64_t v29 = v28;
    v117 = v27;
    v118 = v28;
    swift_bridgeObjectRetain();
    sub_236D6E0F0(46, 0xE100000000000000, v27, v29);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    if (v31)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v117 = v23;
      swift_retain();
      uint64_t v37 = sub_236DB9A20();
      os_log_type_t v39 = v38;
      sub_236D6E1E0();
      swift_allocError();
      *(void *)BOOL v40 = v37;
      *(void *)(v40 + 8) = v39;
      *(unsigned char *)(v40 + 16) = 0;
      swift_willThrow();
      swift_release();
      (*(void (**)(uint64_t))(*(void *)(v104 - 8) + 8))(v105);
LABEL_27:
      swift_bridgeObjectRelease();
      swift_release();
LABEL_68:
      (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v108);
      return v14;
    }
    sub_236DB9A60();
    sub_236DB9A40();
    swift_release();
    uint64_t v32 = v117;
    uint64_t v33 = v118;
    id v34 = v113;
    if (*(void *)(v113 + 16))
    {
      swift_bridgeObjectRetain();
      sub_236D85920(v32, v33);
      if (v35)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_236D6E1E0();
        swift_allocError();
        *(void *)uint64_t v36 = v32;
        *(void *)(v36 + 8) = v33;
        *(unsigned char *)(v36 + 16) = 0;
        swift_willThrow();
        swift_release();
        (*(void (**)(uint64_t))(*(void *)(v104 - 8) + 8))(v105);
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v117 = v34;
    sub_236D9A680(v26, v25, v32, v33, isUniquelyReferenced_nonNull_native);
    char v15 = v117;
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    long long v10 = v112;
  }
  BOOL v22 = v10 + 4;
  if ((uint64_t)(v10 + 4) < v110)
  {
    long long v20 = *(void *)(v109 + 8 * v22);
    if (!v20)
    {
      while (1)
      {
        uint64_t v21 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          break;
        }
        if (v21 >= v110) {
          goto LABEL_28;
        }
        long long v20 = *(void *)(v109 + 8 * v21);
        ++v22;
        if (v20) {
          goto LABEL_21;
        }
      }
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      return result;
    }
    uint64_t v21 = v10 + 4;
    goto LABEL_21;
  }
LABEL_28:
  swift_release();
  v100(&v117);
  sub_236D29CDC();
  unint64_t result = (*(uint64_t (**)(void))(v41 + 16))();
  uint64_t v42 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    unint64_t result = sub_236DBA420();
    v103 = 0;
    unint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v42 = result | 0x8000000000000000;
  }
  else
  {
    uint64_t v45 = -1 << *(unsigned char *)(result + 32);
    uint64_t v46 = *(void *)(result + 64);
    v103 = result + 64;
    unint64_t v43 = ~v45;
    uint64_t v47 = -v45;
    if (v47 < 64) {
      uint64_t v48 = ~(-1 << v47);
    }
    else {
      uint64_t v48 = -1;
    }
    uint64_t v44 = v48 & v46;
  }
  uint64_t v49 = 0;
  v101 = v42 & 0x7FFFFFFFFFFFFFFFLL;
  v95[1] = v43;
  uint64_t v50 = MEMORY[0x263F8EE80];
  uint64_t v102 = (unint64_t)(v43 + 64) >> 6;
  uint64_t v100 = (void (*)(uint64_t *__return_ptr))(MEMORY[0x263F8EE50] + 8);
  v111 = v42;
  while (2)
  {
    if ((v42 & 0x8000000000000000) == 0)
    {
      if (v44)
      {
        os_log_type_t v53 = (v44 - 1) & v44;
        id v54 = __clz(__rbit64(v44)) | (v49 << 6);
        char v55 = v49;
      }
      else
      {
        uint64_t v61 = v49 + 1;
        uint64_t v62 = v107;
        os_log_type_t v63 = v113;
        if (__OFADD__(v49, 1)) {
          goto LABEL_75;
        }
        if (v61 >= v102) {
          goto LABEL_63;
        }
        uint64_t v64 = *(void *)(v103 + 8 * v61);
        char v55 = v49 + 1;
        if (!v64)
        {
          char v55 = v49 + 2;
          if (v49 + 2 >= v102) {
            goto LABEL_62;
          }
          uint64_t v64 = *(void *)(v103 + 8 * v55);
          if (!v64)
          {
            char v55 = v49 + 3;
            if (v49 + 3 >= v102) {
              goto LABEL_62;
            }
            uint64_t v64 = *(void *)(v103 + 8 * v55);
            if (!v64)
            {
              char v55 = v49 + 4;
              if (v49 + 4 >= v102) {
                goto LABEL_62;
              }
              uint64_t v64 = *(void *)(v103 + 8 * v55);
              if (!v64)
              {
                uint64_t v65 = v49 + 5;
                os_log_type_t v63 = v113;
                while (v102 != v65)
                {
                  uint64_t v64 = *(void *)(v103 + 8 * v65++);
                  if (v64)
                  {
                    char v55 = v65 - 1;
                    goto LABEL_55;
                  }
                }
                goto LABEL_63;
              }
            }
          }
        }
LABEL_55:
        os_log_type_t v53 = (v64 - 1) & v64;
        id v54 = __clz(__rbit64(v64)) + (v55 << 6);
      }
      uint64_t v66 = 8 * v54;
      uint64_t v59 = *(void *)(*(void *)(v42 + 48) + v66);
      uint64_t v67 = *(void **)(*(void *)(v42 + 56) + v66);
      swift_retain();
      uint64_t v60 = v67;
      if (!v59) {
        goto LABEL_61;
      }
LABEL_57:
      v112 = v53;
      v109 = v49;
      v110 = v44;
      v114[0] = v59;
      sub_236DBA100();
      swift_retain_n();
      uint64_t v68 = sub_236DB9A20();
      uint64_t v70 = v69;
      v117 = v68;
      v118 = v69;
      swift_bridgeObjectRetain();
      sub_236D6E0F0(46, 0xE100000000000000, v68, v70);
      uint64_t v72 = v71;
      swift_bridgeObjectRelease();
      if (v72)
      {
        swift_release();
        swift_bridgeObjectRelease();
        v117 = v59;
        swift_retain();
        uint64_t v14 = sub_236DB9A20();
        uint64_t v93 = v92;
        sub_236D6E1E0();
        swift_allocError();
        *(void *)uint64_t v94 = v14;
        *(void *)(v94 + 8) = v93;
        *(unsigned char *)(v94 + 16) = 0;
        swift_willThrow();

        swift_release();
      }
      else
      {
        sub_236DB9A60();
        sub_236DB9A40();
        swift_release();
        unint64_t v74 = v117;
        uint64_t v73 = v118;
        if (!*(void *)(v50 + 16)
          || (swift_bridgeObjectRetain(), sub_236D85920(v74, v73),
                                          uint64_t v14 = v75,
                                          swift_bridgeObjectRelease(),
                                          (v14 & 1) == 0))
        {
          uint64_t v51 = v60;
          long long v52 = swift_isUniquelyReferenced_nonNull_native();
          v117 = v50;
          sub_236D9A510((uint64_t)v51, v74, v73, v52);
          uint64_t v50 = v117;
          swift_release();

          swift_bridgeObjectRelease();
          unint64_t result = swift_bridgeObjectRelease();
          uint64_t v49 = v55;
          uint64_t v42 = v111;
          uint64_t v44 = v112;
          continue;
        }
        sub_236D6E1E0();
        swift_allocError();
        *(void *)unint64_t v76 = v74;
        *(void *)(v76 + 8) = v73;
        *(unsigned char *)(v76 + 16) = 0;
        swift_willThrow();
        swift_release();
      }
      (*(void (**)(uint64_t))(*(void *)(v104 - 8) + 8))(v105);
      sub_236D2BC98();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    break;
  }
  id v56 = sub_236DBA430();
  if (v56)
  {
    uint64_t v58 = v57;
    v114[0] = v56;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2BF8);
    swift_dynamicCast();
    uint64_t v59 = v117;
    swift_unknownObjectRelease();
    v114[0] = v58;
    sub_236D291DC(0, (unint64_t *)&qword_2688D2C00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v60 = (id)v117;
    swift_unknownObjectRelease();
    char v55 = v49;
    os_log_type_t v53 = v44;
    if (v59) {
      goto LABEL_57;
    }
  }
LABEL_61:
  uint64_t v62 = v107;
LABEL_62:
  os_log_type_t v63 = v113;
LABEL_63:
  sub_236D2BC98();
  uint64_t v77 = v96;
  sub_236DB9700();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2BE8);
  uint64_t v78 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2688D2BF0) - 8);
  uint64_t v79 = (*(unsigned __int8 *)(*(void *)v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v78 + 80);
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_236DBE190;
  int64_t v81 = (void *)(v80 + v79 + v78[14]);
  uint64_t v82 = v97;
  uint64_t v83 = v98;
  (*(void (**)(void))(v97 + 16))();
  uint64_t v84 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v85 = objc_msgSend(v84, sel_expressionForEvaluatedObject);
  v81[1] = 0;
  v81[2] = 0;
  *int64_t v81 = v85;
  uint64_t v86 = sub_236D618C8(v80);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v77, v83);
  v117 = 1;
  v118 = v86;
  v119 = v63;
  v120 = v50;
  v121 = 0;
  unint64_t v88 = v104;
  unint64_t v87 = v105;
  sub_236DB9840();
  uint64_t v14 = v115;
  uint64_t v89 = v116;
  __swift_project_boxed_opaque_existential_1(v114, v115);
  v90 = v99;
  uint64_t v91 = sub_236D64444((uint64_t)&v117, v14, *(void *)(v89 + 8));
  if (v90)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v87, v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
    swift_bridgeObjectRelease();
LABEL_67:
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
  uint64_t v14 = (uint64_t)v91;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v87, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v62, v108);
  return v14;
}

uint64_t sub_236D629C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_236DB9420();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0x5F6C61636F6C5FLL;
  unint64_t v17 = 0xE700000000000000;
  uint64_t v15 = *v1;
  uint64_t v8 = v15;
  sub_236DBA5C0();
  sub_236DB9A70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v16;
    *unint64_t v1 = v8 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    swift_bridgeObjectRetain();
    long long v11 = (void *)sub_236DB9A00();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(self, sel_expressionForVariable_, v11);

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v2[1];
    v2[1] = 0x8000000000000000;
    sub_236D9A340((uint64_t)v12, 0, 0, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    v2[1] = v16;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v10;
  }
  return result;
}

id sub_236D62BAC()
{
  uint64_t v1 = sub_236D291DC(0, &qword_2688D2C58);
  v10[3] = v1;
  v10[0] = v0;
  uint64_t v2 = self;
  id v3 = v0;
  uint64_t v4 = (void *)sub_236DB9A00();
  id v5 = objc_msgSend(v2, sel__newKeyPathExpressionForString_, v4);

  if (v5)
  {
    *((void *)&v9 + 1) = v1;
    *(void *)&long long v8 = v5;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F08908]);
  id result = sub_236D6E234(v10, &v8);
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_236D62C88(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6 = v5;
  if (objc_msgSend(v5, sel_expressionType) == (id)1)
  {
    uint64_t v12 = (uint64_t)a1;
    if ((a5 & 1) == 0) {
      goto LABEL_46;
    }
    if (*(void *)(a3 + 16))
    {
      swift_bridgeObjectRetain();
      sub_236D85920((uint64_t)a1, a2);
      char v14 = v13;
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_46;
      }
    }
    if (*(void *)(a4 + 16))
    {
      swift_bridgeObjectRetain();
      sub_236D85920((uint64_t)a1, a2);
      char v16 = v15;
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_46:
        if (*(void *)(a3 + 16))
        {
          swift_bridgeObjectRetain();
          sub_236D85920((uint64_t)a1, a2);
          if (v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_25:
            uint64_t v36 = (void *)sub_236DB9A00();
            swift_bridgeObjectRelease();
            uint64_t v37 = self;
            a1 = objc_msgSend(v37, sel_expressionForKeyPath_, v36);

            swift_bridgeObjectRetain();
            uint64_t v38 = (void *)sub_236DB9A00();
            swift_bridgeObjectRelease();
            objc_msgSend(v37, sel_expressionForKeyPath_, v38);

            if (!*(void *)(a4 + 16)) {
              return a1;
            }
            swift_bridgeObjectRetain();
            unint64_t v39 = sub_236D85920(v12, a2);
            if ((v40 & 1) == 0) {
              goto LABEL_40;
            }
            uint64_t v41 = *(void *)(a4 + 56);
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
    }
    goto LABEL_29;
  }
  uint64_t v57 = a3;
  uint64_t v51 = a4;
  if (objc_msgSend(v5, sel_expressionType) == (id)3)
  {
    id v18 = objc_msgSend(v5, sel_keyPath);
    uint64_t v19 = sub_236DB9A10();
    uint64_t v21 = v20;

    uint64_t v54 = v19;
    uint64_t v55 = v21;
    *(void *)&long long v52 = 64;
    *((void *)&v52 + 1) = 0xE100000000000000;
    sub_236D6E834();
    LOBYTE(v18) = sub_236DBA0D0();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      id v27 = objc_msgSend(v6, sel_keyPath);
      uint64_t v28 = sub_236DB9A10();
      uint64_t v30 = v29;

      uint64_t v54 = v28;
      uint64_t v55 = v30;
      sub_236DB9A70();
      sub_236DB9A70();
      uint64_t v31 = v28;
      if (a5)
      {
        if (!*(void *)(v57 + 16) || (sub_236D85920(v54, v55), (v32 & 1) == 0))
        {
          if (!*(void *)(v51 + 16)
            || (swift_bridgeObjectRetain(),
                sub_236D85920(v28, v30),
                char v34 = v33,
                swift_bridgeObjectRelease(),
                (v34 & 1) == 0))
          {
            sub_236D6E1E0();
            swift_allocError();
            *(void *)uint64_t v50 = v28;
            *(void *)(v50 + 8) = v30;
            *(unsigned char *)(v50 + 16) = 0;
            goto LABEL_30;
          }
        }
      }
      if (*(void *)(v57 + 16))
      {
        swift_bridgeObjectRetain();
        sub_236D85920(v28, v30);
        if (v35)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
LABEL_36:
      uint64_t v45 = (void *)sub_236DB9A00();
      swift_bridgeObjectRelease();
      uint64_t v46 = self;
      a1 = objc_msgSend(v46, sel_expressionForKeyPath_, v45);

      swift_bridgeObjectRetain();
      uint64_t v47 = (void *)sub_236DB9A00();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_expressionForKeyPath_, v47);

      if (!*(void *)(v51 + 16)) {
        goto LABEL_40;
      }
      unint64_t v39 = sub_236D85920(v31, v30);
      if ((v48 & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v41 = *(void *)(v51 + 56);
LABEL_39:
      id v49 = *(id *)(v41 + 8 * v39);
LABEL_40:
      swift_bridgeObjectRelease();
      return a1;
    }
  }
  if (objc_msgSend(v6, sel_expressionType) == (id)20)
  {
LABEL_29:
    sub_236D6E1E0();
    swift_allocError();
    *(void *)uint64_t v42 = a1;
    *(void *)(v42 + 8) = a2;
    *(unsigned char *)(v42 + 16) = 0;
    swift_bridgeObjectRetain();
LABEL_30:
    swift_willThrow();
    return a1;
  }
  uint64_t v22 = sub_236D291DC(0, &qword_2688D2C58);
  uint64_t v56 = v22;
  uint64_t v54 = (uint64_t)v6;
  uint64_t v23 = self;
  id v24 = v6;
  uint64_t v25 = (void *)sub_236DB9A00();
  id v26 = objc_msgSend(v23, sel__newKeyPathExpressionForString_, v25);

  if (v26)
  {
    *((void *)&v53 + 1) = v22;
    *(void *)&long long v52 = v26;
  }
  else
  {
    long long v52 = 0u;
    long long v53 = 0u;
  }
  id v43 = objc_allocWithZone(MEMORY[0x263F08908]);
  id result = sub_236D6E234(&v54, &v52);
  if (result) {
    return result;
  }
  __break(1u);
  return result;
}

id sub_236D63244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = v4;
  uint64_t v36 = a1;
  uint64_t v8 = sub_236DB9360();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_236DBA090();
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v38 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  uint64_t v19 = (char *)&v33 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v41 = v3;
  v23(v21, v3, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C08);
  if (swift_dynamicCast())
  {
    char v34 = v19;
    uint64_t v35 = v16;
    sub_236D1B1E4(&v44, (uint64_t)&v47);
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    __swift_project_boxed_opaque_existential_1(&v47, v48);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v36, v24, v25);
    if (!v4)
    {
      id v5 = (id)v26;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v47);
      return v5;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v47);
    id v5 = 0;
    id v27 = v4;
    uint64_t v16 = v35;
    uint64_t v19 = v34;
  }
  else
  {
    uint64_t v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    sub_236D267CC((uint64_t)&v44, &qword_2688D2C10);
    id v27 = 0;
  }
  sub_236DB9370();
  sub_236DB9380();
  if (v5)
  {

    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v15, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
    if (v27) {
      goto LABEL_11;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v15, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, AssociatedTypeWitness);
    v43[3] = AssociatedTypeWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_0, v19, AssociatedTypeWitness);
    sub_236D637F0(v43, (uint64_t)&v44);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    if (*((void *)&v45 + 1))
    {
      sub_236D18FFC(&v44, &v47);
      __swift_project_boxed_opaque_existential_1(&v47, v48);
      uint64_t v30 = v27;
      uint64_t v31 = sub_236DBA5F0();
      id v5 = objc_msgSend(self, sel_expressionForConstantValue_, v31);
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v47);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
      return v5;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
    sub_236D267CC((uint64_t)&v44, &qword_2688D2B40);
    if (v27) {
      goto LABEL_11;
    }
  }
  sub_236D6E1E0();
  swift_allocError();
  *(void *)uint64_t v29 = 0;
  *(void *)(v29 + 8) = 0;
  *(unsigned char *)(v29 + 16) = 3;
LABEL_11:
  swift_willThrow();
  return v5;
}

uint64_t sub_236D637F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_236DB97D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D1900C((uint64_t)a1, (uint64_t)v64);
  sub_236D1900C((uint64_t)v64, (uint64_t)&v58);
  *(void *)&long long v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B40);
  swift_dynamicCast();
  if (v63)
  {
    sub_236D267CC((uint64_t)v62, &qword_2688D2B40);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
LABEL_11:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
      return sub_236D1900C((uint64_t)a1, a2);
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      goto LABEL_11;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_11;
    }
    if (swift_dynamicCast())
    {
      sub_236D1B18C(*(uint64_t *)v62, *(unint64_t *)&v62[8]);
      goto LABEL_11;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C18);
    if (swift_dynamicCast())
    {
      sub_236D1B1E4((long long *)v62, (uint64_t)&v58);
      uint64_t v13 = *(unsigned __int8 *)__swift_project_boxed_opaque_existential_1(&v58, v60) + 1;
      *(void *)(a2 + 24) = MEMORY[0x263F8D6C8];
      *(void *)a2 = v13;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v58);
    }
    else
    {
      type metadata accessor for Decimal(0);
      if (swift_dynamicCast())
      {
        int v14 = *(_DWORD *)v62;
        long long v50 = *(_OWORD *)&v62[4];
        id v15 = objc_allocWithZone(MEMORY[0x263F087B0]);
        int v58 = v14;
        long long v59 = v50;
        id v16 = objc_msgSend(v15, sel_initWithDecimal_, &v58);
        objc_msgSend(v16, sel_floatValue);
        int v18 = v17;

        *(void *)(a2 + 24) = MEMORY[0x263F8D5C8];
        *(_DWORD *)a2 = v18;
      }
      else
      {
        uint64_t v19 = MEMORY[0x263F8D6C8];
        if ((swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || (swift_dynamicCast() & 1) != 0
          || swift_dynamicCast())
        {
          goto LABEL_11;
        }
        type metadata accessor for ComparisonResult(0);
        if (swift_dynamicCast())
        {
          uint64_t v20 = *(void *)v62;
          *(void *)(a2 + 24) = v19;
          *(void *)a2 = v20;
        }
        else
        {
          if (!swift_dynamicCast())
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C20);
            if (swift_dynamicCast())
            {
              sub_236D1B1E4((long long *)v62, (uint64_t)&v58);
              uint64_t v23 = v60;
              uint64_t v22 = v61;
              uint64_t v24 = __swift_project_boxed_opaque_existential_1(&v58, v60);
              uint64_t v25 = MEMORY[0x270FA5388](v24);
              *((void *)&v50 - 4) = v23;
              *((void *)&v50 - 3) = v22;
              *((void *)&v50 - 2) = sub_236D637F0;
              *((void *)&v50 - 1) = 0;
              MEMORY[0x270FA5388](v25);
              *((void *)&v50 - 4) = v23;
              *((void *)&v50 - 3) = v22;
              *((void *)&v50 - 2) = sub_236D6E4C0;
              *((void *)&v50 - 1) = v26;
              uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
              uint64_t v28 = v51;
              uint64_t v29 = sub_236D64A88((void (*)(char *, char *))sub_236D6E4E0, (uint64_t)(&v50 - 3), v23, (char *)v50, v27, v22, MEMORY[0x263F8E4E0], (uint64_t)v56);
              if (!v28)
              {
                uint64_t v44 = v29;
                *(void *)(a2 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C38);
                *(void *)a2 = v44;
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C28);
              if (!swift_dynamicCast())
              {
                uint64_t v37 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
                MEMORY[0x270FA5388](v37);
                (*(void (**)(char *))(v39 + 16))((char *)&v50 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
                uint64_t v40 = sub_236DB9A30();
                uint64_t v42 = v41;
                sub_236D6E1E0();
                swift_allocError();
                *(void *)uint64_t v43 = v40;
                *(void *)(v43 + 8) = v42;
                *(unsigned char *)(v43 + 16) = 1;
                swift_willThrow();
                return __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
              }
              sub_236D1B1E4((long long *)v62, (uint64_t)&v58);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C30);
              uint64_t v30 = swift_allocObject();
              *(_OWORD *)(v30 + 16) = xmmword_236DBEEE0;
              uint64_t v31 = v60;
              uint64_t v32 = v61;
              __swift_project_boxed_opaque_existential_1(&v58, v60);
              (*(void (**)(void *, void *, uint64_t, uint64_t))(v32 + 8))(v56, v54, v31, v32);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
              uint64_t v33 = v57;
              char v34 = __swift_project_boxed_opaque_existential_1(v56, v57);
              uint64_t v53 = v33;
              boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(boxed_opaque_existential_0, v34, v33);
              uint64_t v36 = v51;
              sub_236D637F0(v52);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
              if (v36)
              {
                *(void *)(v30 + 16) = 0;
                swift_release();
              }
              else
              {
                uint64_t v45 = v60;
                uint64_t v46 = v61;
                __swift_project_boxed_opaque_existential_1(&v58, v60);
                (*(void (**)(void *, void *, uint64_t, uint64_t))(v46 + 8))(v56, v54, v45, v46);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
                uint64_t v47 = v55;
                uint64_t v48 = __swift_project_boxed_opaque_existential_1(v54, v55);
                uint64_t v53 = v47;
                uint64_t v49 = __swift_allocate_boxed_opaque_existential_0(v52);
                (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v49, v48, v47);
                sub_236D637F0(v52);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
                __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
                *(void *)(a2 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C38);
                *(void *)a2 = v30;
              }
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v58);
            return __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
          }
          long long v21 = *(_OWORD *)v62;
          *(void *)(a2 + 24) = MEMORY[0x263F8D310];
          *(_OWORD *)a2 = v21;
        }
      }
    }
  }
  else
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
}

id sub_236D642D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = sub_236D63244(a1, a2, a3);
  uint64_t v8 = v4;
  if (v3 || !v7) {
    return v8;
  }
  uint64_t v10 = v5;
  long long v11 = v6;
  if (v7 != 1)
  {

    return v8;
  }
  id v17 = v4;
  uint64_t v12 = sub_236DBA630();
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_expressionForConstantValue_, v12);
  swift_unknownObjectRelease();
  id v15 = objc_msgSend(v13, sel_expressionForConstantValue_, sub_236DBA630());
  swift_unknownObjectRelease();
  id v16 = objc_msgSend(v13, sel_expressionForConditional_trueExpression_falseExpression_, v17, v14, v15);

  sub_236D6E464(v8, v10, v11, 1u);
  sub_236D6E464(v8, v10, v11, 1u);
  return v16;
}

id sub_236D64444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_236D63244(a1, a2, a3);
  if (!v3)
  {
    uint64_t v10 = v5;
    long long v11 = v6;
    uint64_t v12 = v7;
    if (v8)
    {
      if (v8 == 1)
      {
        return v5;
      }
      else
      {
        id v16 = v5;
        uint64_t v17 = sub_236DBA630();
        id v18 = objc_msgSend(self, sel_expressionForConstantValue_, v17);
        swift_unknownObjectRelease();
        id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v16, v18, 0, 4, 0);
      }
    }
    else
    {
      id v13 = v5;
      uint64_t v14 = sub_236DBA630();
      id v15 = objc_msgSend(self, sel_expressionForConstantValue_, v14);
      swift_unknownObjectRelease();
      id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v13, v15, 0, 4, 0);

      sub_236D6E464(v10, v11, v12, 0);
      sub_236D6E464(v10, v11, v12, 0);
    }
  }
  return v4;
}

id sub_236D64600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_236D63244(a1, a2, a3);
  if (!v4)
  {
    uint64_t v3 = v5;
    if (v8)
    {
      uint64_t v10 = v6;
      long long v11 = v7;
      if (v8 == 1)
      {
        id v17 = v5;
        uint64_t v12 = sub_236DBA630();
        id v13 = self;
        id v14 = objc_msgSend(v13, sel_expressionForConstantValue_, v12);
        swift_unknownObjectRelease();
        id v15 = objc_msgSend(v13, sel_expressionForConstantValue_, sub_236DBA630());
        swift_unknownObjectRelease();
        id v16 = objc_msgSend(v13, sel_expressionForConditional_trueExpression_falseExpression_, v17, v14, v15);

        sub_236D6E464(v3, v10, v11, 1u);
        sub_236D6E464(v3, v10, v11, 1u);
        return v16;
      }
    }
  }
  return v3;
}

unint64_t sub_236D64780(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t result = 0xD000000000000037;
  switch(a3)
  {
    case 3:
      return result;
    default:
      sub_236DBA260();
      sub_236DB9A70();
      sub_236DB9A70();
      sub_236DB9A70();
      unint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_236D648C4()
{
  return sub_236D64780(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_236D648DC(uint64_t a1, uint64_t a2)
{
  return sub_236D6E578(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_236D648F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  a1[3] = v6;
  a1[4] = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v12(boxed_opaque_existential_0, v3, v6);
  uint64_t v9 = v3 + *(int *)(a3 + 36);
  a2[3] = v6;
  a2[4] = v7;
  uint64_t v10 = __swift_allocate_boxed_opaque_existential_0(a2);
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v12)(v10, v9, v6);
}

uint64_t sub_236D649B4(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_0, a1, AssociatedTypeWitness);
  a2(v7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_236D64A88(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  long long v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  id v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_236DBA090();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  long long v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_236DB9AC0();
  uint64_t v61 = sub_236DB9960();
  uint64_t v56 = sub_236DBA3C0();
  sub_236DBA360();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  long long v59 = v30;
  uint64_t result = sub_236DB9AB0();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    char v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_236DBA0A0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_236DBA3A0();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_236DBA0A0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    long long v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_236DBA3A0();
      sub_236DBA0A0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

id sub_236D65184(uint64_t a1, uint64_t a2)
{
  v12[3] = *(void *)(a2 + 16);
  __swift_allocate_boxed_opaque_existential_0(v12);
  MEMORY[0x237E0E910](a2);
  sub_236D637F0(v12, (uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  if (!v3)
  {
    uint64_t v5 = v14;
    if (v14)
    {
      uint64_t v6 = __swift_project_boxed_opaque_existential_1(v13, v14);
      uint64_t v7 = *(void *)(v5 - 8);
      MEMORY[0x270FA5388](v6);
      uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      uint64_t v10 = sub_236DBA5F0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v2 = objc_msgSend(self, sel_expressionForConstantValue_, v10);
    swift_unknownObjectRelease();
  }
  return v2;
}

uint64_t sub_236D65324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D65184);
}

uint64_t sub_236D65350(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D6538C(uint64_t a1)
{
  uint64_t v2 = sub_236DB9420();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sub_236DB9700();
  uint64_t v7 = *(void *)(a1 + 8);
  if (*(void *)(v7 + 16))
  {
    unint64_t result = sub_236D85A48((uint64_t)v5);
    if (v8)
    {
      uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v10 = *(id *)(*(void *)(v7 + 56) + 24 * result);
      v9(v5, v2);
      return (unint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_236D654B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6538C);
}

uint64_t sub_236D654E4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D65520(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  char v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_236DB9420();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v34);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - v13;
  unint64_t result = sub_236DB9700();
  uint64_t v16 = *(void *)(a1 + 8);
  if (!*(void *)(v16 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t result = sub_236D85A48((uint64_t)v14);
  if ((v17 & 1) == 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v33 = a1;
  uint64_t v18 = *(void **)(*(void *)(v16 + 56) + 24 * result + 8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  id v20 = v18;
  uint64_t v21 = v14;
  uint64_t v22 = v34;
  v19(v21, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
    return (unint64_t)v20;
  }
  unint64_t result = sub_236DB9700();
  uint64_t v23 = *(void *)(v33 + 8);
  if (!*(void *)(v23 + 16)) {
    goto LABEL_11;
  }
  unint64_t result = sub_236D85A48((uint64_t)v12);
  if ((v24 & 1) == 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v25 = *(void *)(v23 + 56) + 24 * result;
  uint64_t v26 = *(void **)v25;
  uint64_t v27 = *(void **)(v25 + 8);
  id v28 = *(id *)(v25 + 16);
  id v29 = v26;
  uint64_t v30 = v22;
  id v31 = v29;
  id v32 = v27;
  v19(v12, v30);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);

  return (unint64_t)v31;
}

void sub_236D657BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = sub_236DB96A0();
  uint64_t v9 = sub_236DBA090();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v78 = (char *)&v72 - v11;
  uint64_t v80 = v8;
  uint64_t v79 = *(void *)(v8 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v77 = (char *)&v72 - v14;
  uint64_t v15 = *(void *)(v6 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v22 = a1[4];
  BOOL v23 = __CFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v74 = v21;
  uint64_t v75 = v19;
  uint64_t v81 = v7;
  unint64_t v76 = v20;
  a1[4] = v24;
  uint64_t v25 = v2;
  MEMORY[0x237E0E980](a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C88);
  if (swift_dynamicCast())
  {
    uint64_t v85 = v3;
    uint64_t v26 = *((void *)&v83 + 1);
    uint64_t v27 = v84;
    __swift_project_boxed_opaque_existential_1(&v82, *((uint64_t *)&v83 + 1));
    id v28 = (void *)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v27 + 8))(a1, v26, v27);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v82);
    uint64_t v29 = v79;
    uint64_t v30 = v80;
  }
  else
  {
    uint64_t v84 = 0;
    long long v82 = 0u;
    long long v83 = 0u;
    sub_236D267CC((uint64_t)&v82, &qword_2688D2C90);
    MEMORY[0x237E0E980](a2);
    id v73 = sub_236D64600((uint64_t)a1, v6, v81);
    uint64_t v31 = a2;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v6);
    uint64_t v85 = v3;
    if (v3) {
      return;
    }
    uint64_t v72 = v31;
    id v36 = v73;
    uint64_t v30 = v80;
    if (v33)
    {

      uint64_t v29 = v79;
      id v28 = v33;
    }
    else
    {

      id v28 = v36;
      uint64_t v29 = v79;
    }
  }
  uint64_t v37 = a1[4];
  BOOL v23 = v37 != 0;
  uint64_t v38 = v37 - 1;
  if (!v23) {
    goto LABEL_28;
  }
  a1[4] = v38;
  id v39 = v28;
  uint64_t v80 = v25;
  uint64_t v40 = v78;
  sub_236DB96B0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v40, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v40, v75);
    if (!objc_msgSend(v39, sel_expressionType))
    {

      return;
    }
    uint64_t v41 = v39;
    sub_236DB9690();
    uint64_t v42 = (void *)sub_236D6603C();
    uint64_t v44 = v43;
    swift_release();
    if (v44)
    {
      uint64_t v45 = v85;
      sub_236D62C88(v42, v44, a1[2], a1[3], a1[4] == 0);
      swift_bridgeObjectRelease();

      uint64_t v85 = v45;
      return;
    }
    *(void *)&long long v82 = sub_236DB9690();
    uint64_t v55 = sub_236DB9A20();
    uint64_t v57 = v56;
    sub_236D6E1E0();
    uint64_t v58 = swift_allocError();
    *(void *)uint64_t v59 = v55;
    *(void *)(v59 + 8) = v57;
    *(unsigned char *)(v59 + 16) = 0;
    uint64_t v85 = v58;
    swift_willThrow();
  }
  else
  {
    uint64_t v41 = v39;
    uint64_t v46 = v77;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v77, v40, v30);
    swift_getAssociatedTypeWitness();
    uint64_t v47 = v76;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v76, v46, v30);
    int v48 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v47, v30);
    if (v48 == *MEMORY[0x263F06C88])
    {
      sub_236D62BAC();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v46, v30);
      return;
    }
    int v49 = v48;
    if (v48 == *MEMORY[0x263F06C98])
    {
      uint64_t v50 = v39;
      id v51 = sub_236D62BAC();
      swift_bridgeObjectRelease();
      *(void *)&long long v82 = 0;
      uint64_t v52 = sub_236DBA630();
      uint64_t v53 = v29;
      id v54 = objc_msgSend(self, sel_expressionForConstantValue_, v52);
      swift_unknownObjectRelease();
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v51, v54, 0, 4, 0);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v30);
      return;
    }
    if (v48 == *MEMORY[0x263F06C90])
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      int v60 = *MEMORY[0x263F06CA0];
      swift_bridgeObjectRelease();
      if (v49 != v60)
      {
        *(void *)&long long v82 = sub_236DB9690();
        uint64_t v66 = sub_236DB9A20();
        uint64_t v68 = v67;
        sub_236D6E1E0();
        uint64_t v69 = swift_allocError();
        *(void *)uint64_t v70 = v66;
        *(void *)(v70 + 8) = v68;
        *(unsigned char *)(v70 + 16) = 0;
        uint64_t v85 = v69;
        swift_willThrow();

        unint64_t v71 = *(void (**)(char *, uint64_t))(v29 + 8);
        v71(v46, v30);

        v71(v47, v30);
        return;
      }
    }
    *(void *)&long long v82 = sub_236DB9690();
    uint64_t v61 = sub_236DB9A20();
    uint64_t v63 = v62;
    sub_236D6E1E0();
    uint64_t v64 = swift_allocError();
    *(void *)uint64_t v65 = v61;
    *(void *)(v65 + 8) = v63;
    *(unsigned char *)(v65 + 16) = 0;
    uint64_t v85 = v64;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v46, v30);
  }
}

uint64_t sub_236D6603C()
{
  sub_236DBA100();
  swift_retain();
  uint64_t v0 = sub_236DB9A20();
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_236D6E0F0(46, 0xE100000000000000, v0, v2);
  char v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_236DB9A60();
    sub_236DB9A40();
    return v0;
  }
}

uint64_t sub_236D66100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D657BC);
}

uint64_t sub_236D6612C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D66168(uint64_t a1, uint64_t *a2)
{
  uint64_t v149 = a1;
  uint64_t v150 = sub_236DB9420();
  uint64_t v137 = *(void *)(v150 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v150);
  v151 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  v152 = (char *)&v121 - v6;
  unint64_t v7 = a2[2];
  uint64_t v8 = 8 * v7;
  unint64_t v148 = v7;
  if (v7 == 1)
  {
    uint64_t TupleTypeMetadata = *(void *)(a2[4] & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    MEMORY[0x270FA5388](v5);
    uint64_t v10 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
    {
      unint64_t v11 = 0;
      unint64_t v12 = a2[4] & 0xFFFFFFFFFFFFFFFELL;
      if (v148 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)&v10[-v12] < 0x20) {
        goto LABEL_9;
      }
      unint64_t v11 = v148 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v13 = (long long *)(v12 + 16);
      uint64_t v14 = v10 + 16;
      unint64_t v15 = v148 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v16 = *v13;
        *(v14 - 1) = *(v13 - 1);
        _OWORD *v14 = v16;
        v13 += 2;
        v14 += 2;
        v15 -= 4;
      }
      while (v15);
      if (v148 != v11)
      {
LABEL_9:
        unint64_t v17 = v148 - v11;
        uint64_t v18 = 8 * v11;
        uint64_t v19 = &v10[8 * v11];
        id v20 = (uint64_t *)(v12 + v18);
        do
        {
          uint64_t v21 = *v20++;
          *(void *)uint64_t v19 = v21;
          v19 += 8;
          --v17;
        }
        while (v17);
      }
    }
    unint64_t v7 = v148;
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v139 = TupleTypeMetadata;
  uint64_t v125 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v22 = MEMORY[0x270FA5388](TupleTypeMetadata);
  v142 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = a2;
  uint64_t v134 = v24;
  if (v7 == 1)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v25 = sub_236DB9710();
  }
  else
  {
    MEMORY[0x270FA5388](v22);
    if (v26)
    {
      unint64_t v27 = v146[4] & 0xFFFFFFFFFFFFFFFELL;
      unint64_t v28 = v146[6] & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v29 = (uint64_t *)((char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v30 = v148;
      do
      {
        v27 += 8;
        v28 += 8;
        swift_getAssociatedTypeWitness();
        *v29++ = sub_236DB9710();
        --v30;
      }
      while (v30);
    }
    unint64_t v31 = v148;
    uint64_t v25 = swift_getTupleTypeMetadata();
    unint64_t v7 = v31;
    a2 = v146;
  }
  v133 = &v121;
  uint64_t v138 = v25;
  uint64_t v124 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  v141 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_236DB9360();
  v132 = &v121;
  uint64_t v143 = *(void *)(v33 - 8);
  v144 = (void *)v33;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  v135 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = &v121;
  v140 = (void (**)(char *, uint64_t))a2[3];
  uint64_t v136 = (uint64_t)*(v140 - 1);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v121 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = &v121;
  MEMORY[0x270FA5388](v36);
  uint64_t v126 = v8;
  if (v7)
  {
    unint64_t v39 = v146[4] & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v40 = v146[6] & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v41 = (uint64_t *)((char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v42 = v148;
    do
    {
      v39 += 8;
      v40 += 8;
      *v41++ = swift_getAssociatedTypeWitness();
      --v42;
    }
    while (v42);
  }
  uint64_t v43 = v148;
  uint64_t v44 = sub_236DB9860();
  uint64_t v128 = sub_236DBA090();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v128);
  uint64_t v47 = (char *)&v121 - v46;
  v129 = &v121;
  uint64_t v48 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v50 = (char *)&v121 - v49;
  sub_236DB93A0();
  id v51 = v135;
  sub_236DB9370();
  uint64_t v52 = v147;
  uint64_t v53 = v140;
  sub_236DB9380();
  if (v52)
  {

    (*(void (**)(char *, void *))(v143 + 8))(v51, v144);
    (*(void (**)(char *, void))(v136 + 8))(v38, v53);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v47, 1, 1, v44);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v47, v128);
    sub_236D6E1E0();
    swift_allocError();
    *(void *)uint64_t v54 = 0;
    *(void *)(v54 + 8) = 0;
    *(unsigned char *)(v54 + 16) = 3;
    swift_willThrow();
    return v43;
  }
  v147 = 0;
  (*(void (**)(char *, void *))(v143 + 8))(v51, v144);
  (*(void (**)(char *, void))(v136 + 8))(v38, v53);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v47, 0, 1, v44);
  uint64_t v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v48 + 32))(v50, v47, v44);
  MEMORY[0x270FA5388](v55);
  uint64_t v57 = (char *)&v121 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = v44;
  uint64_t v122 = v48;
  v121 = v50;
  uint64_t v136 = v58;
  if (!v43)
  {
    sub_236DB9850();
    sub_236DB9390();
    uint64_t v62 = v141;
LABEL_53:
    uint64_t v115 = v123;
    v116 = v121;
    sub_236DB9840();
    uint64_t v117 = v154;
    uint64_t v43 = v155;
    __swift_project_boxed_opaque_existential_1(&v153, v154);
    v118 = v147;
    id v119 = sub_236D63244(v149, v117, *(void *)(v43 + 8));
    if (!v118) {
      uint64_t v43 = (uint64_t)v119;
    }
    (*(void (**)(char *, uint64_t))(v122 + 8))(v116, v115);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v153);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v142, v139);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v62, v138);
    return v43;
  }
  uint64_t v59 = 0;
  uint64_t v60 = 32;
  uint64_t v61 = v138;
  uint64_t v62 = v141;
  uint64_t v63 = v146;
  do
  {
    if (v43 == 1) {
      int v64 = 0;
    }
    else {
      int v64 = *(_DWORD *)(v61 + v60);
    }
    *(void *)&v57[8 * v59++] = &v62[v64];
    v60 += 16;
  }
  while (v43 != v59);
  uint64_t v65 = sub_236DB9850();
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (char *)&v121 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = 0;
  uint64_t v69 = 32;
  uint64_t v70 = v139;
  unint64_t v71 = v142;
  do
  {
    if (v43 == 1) {
      int v72 = 0;
    }
    else {
      int v72 = *(_DWORD *)(v70 + v69);
    }
    *(void *)&v67[8 * v68++] = &v71[v72];
    v69 += 16;
  }
  while (v43 != v68);
  sub_236DB9390();
  id v73 = (uint64_t *)(v63[4] & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v74 = (uint64_t *)(v63[6] & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v143 = v137 + 16;
  v140 = (void (**)(char *, uint64_t))(v137 + 8);
  uint64_t v75 = 32;
  uint64_t v76 = v43;
  while (1)
  {
    uint64_t v145 = v76;
    if (v43 == 1) {
      int v82 = 0;
    }
    else {
      int v82 = *(_DWORD *)(v138 + v75);
    }
    v146 = v73;
    uint64_t v83 = *v73;
    uint64_t v84 = *v74;
    uint64_t v85 = &v62[v82];
    swift_getAssociatedTypeWitness();
    uint64_t v86 = sub_236DB9710();
    v144 = &v121;
    uint64_t v87 = *(void *)(v86 - 8);
    MEMORY[0x270FA5388](v86);
    uint64_t v89 = (char *)&v121 - v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))((char *)&v121 - v88, v85, v86);
    sub_236DB9700();
    uint64_t v90 = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v89, v86);
    uint64_t v91 = *(void *)(v83 - 8);
    MEMORY[0x270FA5388](v90);
    uint64_t v93 = (char *)&v121 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v91 + 16))(v93);
    uint64_t v43 = v149;
    uint64_t v94 = v147;
    id v95 = sub_236D642D4(v149, v83, v84);
    v147 = v94;
    if (v94)
    {
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v83);
      (*v140)(v152, v150);
      (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v142, v139);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v141, v138);
      return v43;
    }
    uint64_t v96 = v95;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v83);
    uint64_t v97 = *(void (**)(uint64_t, char *, uint64_t))v143;
    uint64_t v98 = (uint64_t)v151;
    (*(void (**)(char *, char *, uint64_t))v143)(v151, v152, v150);
    id v99 = v96;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v153 = *(void **)(v43 + 8);
    v101 = v153;
    *(void *)(v43 + 8) = 0x8000000000000000;
    unint64_t v103 = sub_236D85A48(v98);
    uint64_t v104 = v101[2];
    BOOL v105 = (v102 & 1) == 0;
    uint64_t v106 = v104 + v105;
    if (__OFADD__(v104, v105)) {
      break;
    }
    char v107 = v102;
    if (v101[3] >= v106)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        v110 = v153;
        if (v102) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_236D95D08();
        v110 = v153;
        if (v107) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_236D97470(v106, isUniquelyReferenced_nonNull_native);
      unint64_t v108 = sub_236D85A48((uint64_t)v151);
      if ((v107 & 1) != (v109 & 1)) {
        goto LABEL_60;
      }
      unint64_t v103 = v108;
      v110 = v153;
      if (v107)
      {
LABEL_35:
        uint64_t v77 = v110[7] + 24 * v103;
        uint64_t v78 = *(void **)(v77 + 8);
        uint64_t v79 = *(void **)(v77 + 16);

        *(void *)(v77 + 8) = 0;
        *(void *)(v77 + 16) = 0;
        *(void *)uint64_t v77 = v99;
        goto LABEL_36;
      }
    }
    v110[(v103 >> 6) + 8] |= 1 << v103;
    v97(v110[6] + *(void *)(v137 + 72) * v103, v151, v150);
    v111 = (void *)(v110[7] + 24 * v103);
    void *v111 = v99;
    v111[1] = 0;
    v111[2] = 0;
    uint64_t v112 = v110[2];
    BOOL v113 = __OFADD__(v112, 1);
    uint64_t v114 = v112 + 1;
    if (v113) {
      goto LABEL_59;
    }
    v110[2] = v114;
LABEL_36:
    *(void *)(v149 + 8) = v110;
    swift_bridgeObjectRelease();
    uint64_t v80 = *v140;
    uint64_t v81 = v150;
    (*v140)(v151, v150);

    v80(v152, v81);
    v75 += 16;
    ++v74;
    id v73 = v146 + 1;
    uint64_t v76 = v145 - 1;
    uint64_t v43 = v148;
    uint64_t v62 = v141;
    if (v145 == 1) {
      goto LABEL_53;
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  uint64_t result = sub_236DBA650();
  __break(1u);
  return result;
}

uint64_t sub_236D671AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D66168);
}

uint64_t sub_236D671D8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

_OWORD *sub_236D67214(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_236D6759C(a1, a2, a3, MEMORY[0x263F06AE0], MEMORY[0x263F06AE8], (SEL *)&selRef_andPredicateWithSubpredicates_);
}

uint64_t sub_236D6725C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

_OWORD *sub_236D67298(uint64_t a1, void *a2, void (*a3)(void *), void (*a4)(void *), SEL *a5)
{
  uint64_t v9 = a2[3];
  unint64_t v30 = a4;
  uint64_t v31 = v9;
  uint64_t v27 = *(void *)(v9 - 8);
  unint64_t v28 = a5;
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  unint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25B0);
  uint64_t v18 = (_OWORD *)swift_allocObject();
  v18[1] = xmmword_236DBF770;
  uint64_t v29 = v5;
  a3(a2);
  uint64_t v19 = v32;
  id v20 = sub_236D64444(a1, v14, a2[4]);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v19)
  {
    *((void *)v18 + 2) = 0;
    swift_release();
  }
  else
  {
    uint64_t v22 = v27;
    uint64_t v21 = v28;
    *((void *)v18 + 4) = v20;
    v30(a2);
    uint64_t v23 = v31;
    id v25 = sub_236D64444(a1, v31, a2[5]);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
    *((void *)v18 + 5) = v25;
    uint64_t v33 = v18;
    sub_236DB9B50();
    sub_236D291DC(0, (unint64_t *)&qword_2688D2C00);
    uint64_t v26 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    uint64_t v18 = objc_msgSend(self, *v21, v26);
  }
  return v18;
}

_OWORD *sub_236D67554(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_236D6759C(a1, a2, a3, MEMORY[0x263F06B00], MEMORY[0x263F06B08], (SEL *)&selRef_orPredicateWithSubpredicates_);
}

_OWORD *sub_236D6759C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *), void (*a5)(void *), SEL *a6)
{
  uint64_t result = sub_236D67298(a1, a2, a4, a5, a6);
  if (v6) {
    return (_OWORD *)v8;
  }
  return result;
}

uint64_t sub_236D675D0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6760C(uint64_t a1, void *a2)
{
  uint64_t v38 = a2[3];
  uint64_t v35 = *(void *)(v38 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  unint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236DB9610();
  uint64_t v13 = a2[4];
  uint64_t v36 = a1;
  id v14 = sub_236D64600(a1, v9, v13);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  id v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  id v19 = (id)(v10 + 8);
  v20(v12, v9);
  if (!v2)
  {
    uint64_t v21 = v35;
    uint64_t v34 = v16;
    sub_236DB9620();
    uint64_t v22 = v38;
    id v24 = sub_236D64600(v36, v38, a2[5]);
    uint64_t v26 = v25;
    unint64_t v28 = v27;
    uint64_t v36 = 0;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    if (!objc_msgSend(v14, sel_expressionType))
    {
      uint64_t v29 = v28;
      if (!objc_msgSend(v14, sel_constantValue)) {
        goto LABEL_11;
      }
      sub_236DBA0E0();
      swift_unknownObjectRelease();
      sub_236D267CC((uint64_t)v37, &qword_2688D2B40);
    }
    if (objc_msgSend(v24, sel_expressionType))
    {
LABEL_10:
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v14, v24, 0, 4, 0);

      uint64_t v26 = v34;
LABEL_16:

      return v19;
    }
    uint64_t v29 = v28;
    if (objc_msgSend(v24, sel_constantValue))
    {
      sub_236DBA0E0();
      swift_unknownObjectRelease();
      sub_236D267CC((uint64_t)v37, &qword_2688D2B40);
      goto LABEL_10;
    }
LABEL_11:
    memset(v37, 0, sizeof(v37));
    sub_236D267CC((uint64_t)v37, &qword_2688D2B40);
    unint64_t v28 = v29;
    if (v18)
    {
      id v30 = v29;
      unint64_t v28 = v18;
    }
    else
    {
      if (!v29) {
        goto LABEL_10;
      }
      id v30 = v29;
      uint64_t v18 = 0;
      unint64_t v28 = v30;
    }
    uint64_t v31 = self;
    id v32 = v18;
    id v19 = objc_msgSend(v31, sel_notPredicateWithSubpredicate_, v28);

    uint64_t v18 = v34;
    goto LABEL_16;
  }
  return v19;
}

uint64_t sub_236D67A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6760C);
}

uint64_t sub_236D67A30(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D67A6C(uint64_t a1, void *a2)
{
  uint64_t v34 = a2[3];
  uint64_t v30 = *(void *)(v34 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v2;
  sub_236DB96E0();
  uint64_t v14 = a2[4];
  uint64_t v32 = a1;
  id v15 = sub_236D64600(a1, v10, v14);
  unint64_t v17 = v16;
  id v19 = v18;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!v3)
  {
    id v29 = v19;
    uint64_t v20 = v30;
    sub_236DB96F0();
    uint64_t v21 = v34;
    id v23 = sub_236D64600(v32, v34, a2[5]);
    id v25 = v24;
    id v27 = v26;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
    unint64_t v28 = v15;
    if (!objc_msgSend(v15, sel_expressionType))
    {
      if (!objc_msgSend(v15, sel_constantValue)) {
        goto LABEL_11;
      }
      sub_236DBA0E0();
      swift_unknownObjectRelease();
      sub_236D267CC((uint64_t)v33, &qword_2688D2B40);
    }
    if (objc_msgSend(v23, sel_expressionType))
    {
LABEL_10:
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v28, v23, 0, 5, 0);

      id v23 = v27;
      id v25 = v17;
LABEL_15:

      return v15;
    }
    if (objc_msgSend(v23, sel_constantValue))
    {
      sub_236DBA0E0();
      swift_unknownObjectRelease();
      sub_236D267CC((uint64_t)v33, &qword_2688D2B40);
      goto LABEL_10;
    }
LABEL_11:
    memset(v33, 0, sizeof(v33));
    sub_236D267CC((uint64_t)v33, &qword_2688D2B40);
    id v15 = v29;
    if (!v29)
    {
      if (!v27) {
        goto LABEL_10;
      }
      id v27 = v27;
      id v15 = v27;
    }

    id v29 = v17;
    goto LABEL_15;
  }
  return v15;
}

uint64_t sub_236D67DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D67A6C);
}

uint64_t sub_236D67DFC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_236D67E38(uint64_t a1, void *a2)
{
  uint64_t v38 = a1;
  uint64_t v35 = a2[3];
  uint64_t v34 = *(void *)(v35 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v33 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_236DB9510();
  uint64_t v12 = *(v11 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)v32 - v14;
  uint64_t v39 = v2;
  sub_236DB93B0();
  int v16 = (*(uint64_t (**)(char *, void *))(v12 + 88))(v15, v11);
  if (v16 == *MEMORY[0x263F06B78])
  {
    unint64_t v36 = 0xE700000000000000;
    uint64_t v17 = 0x3A6F743A646461;
  }
  else if (v16 == *MEMORY[0x263F06B88])
  {
    unint64_t v36 = 0xEE003A7463617274;
    uint64_t v17 = 0x6275733A6D6F7266;
  }
  else
  {
    if (v16 != *MEMORY[0x263F06B80])
    {
      sub_236DB93B0();
      uint64_t v25 = sub_236DB9A20();
      uint64_t v27 = v26;
      sub_236D6E1E0();
      swift_allocError();
      *(void *)uint64_t v28 = v25;
      *(void *)(v28 + 8) = v27;
      *(unsigned char *)(v28 + 16) = 2;
      swift_willThrow();
      (*(void (**)(char *, void *))(v12 + 8))(v15, v11);
      return v11;
    }
    unint64_t v36 = 0xEC0000003A79623ALL;
    uint64_t v17 = 0x796C7069746C756DLL;
  }
  v32[1] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2900);
  uint64_t v11 = (void *)swift_allocObject();
  *((_OWORD *)v11 + 1) = xmmword_236DBEEE0;
  sub_236DB93C0();
  uint64_t v18 = v37;
  uint64_t v19 = v38;
  id v20 = sub_236D642D4(v38, v7, a2[4]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v18)
  {
    swift_bridgeObjectRelease();
    v11[2] = 0;
    swift_release();
  }
  else
  {
    uint64_t v21 = sub_236D291DC(0, &qword_2688D2C58);
    v11[7] = v21;
    v11[4] = v20;
    uint64_t v22 = v33;
    sub_236DB93D0();
    uint64_t v23 = v35;
    id v29 = sub_236D642D4(v19, v35, a2[5]);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v23);
    v11[11] = v21;
    v11[8] = v29;
    uint64_t v30 = (void *)sub_236DB9A00();
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    uint64_t v11 = objc_msgSend(self, sel_expressionForFunction_arguments_, v30, v31);
  }
  return v11;
}

uint64_t sub_236D68310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D67E38);
}

uint64_t sub_236D6833C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

char *sub_236D68378(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2900);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_236DBEEE0;
  sub_236DB9410();
  uint64_t v10 = v8;
  id v11 = sub_236D642D4(a1, v5, *(void *)(a2 + 24));
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v9 + 16) = 0;
    swift_release();
  }
  else
  {
    id v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = sub_236D291DC(0, &qword_2688D2C58);
    *(void *)(v9 + 56) = v13;
    *(void *)(v9 + 32) = v12;
    v20[1] = -1;
    uint64_t v14 = sub_236DBA630();
    id v15 = self;
    id v16 = objc_msgSend(v15, sel_expressionForConstantValue_, v14);
    swift_unknownObjectRelease();
    *(void *)(v9 + 88) = v13;
    *(void *)(v9 + 64) = v16;
    uint64_t v17 = (void *)sub_236DB9A00();
    uint64_t v18 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    uint64_t v10 = (char *)objc_msgSend(v15, sel_expressionForFunction_arguments_, v17, v18);
  }
  return v10;
}

uint64_t sub_236D685C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D68378);
}

uint64_t sub_236D685F4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_236D68630(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v39 = a1;
  uint64_t v36 = *(void *)(a2[3] - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v35 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236DB9520();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v32[1] = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)v32 - v14;
  sub_236DB93E0();
  uint64_t v33 = v11;
  uint64_t v34 = v10;
  uint64_t v16 = v10;
  uint64_t v17 = v39;
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v15, v16);
  uint64_t v19 = 0;
  if (v18 != *MEMORY[0x263F06BA8])
  {
    if (v18 == *MEMORY[0x263F06B98])
    {
      uint64_t v19 = 1;
    }
    else if (v18 == *MEMORY[0x263F06B90])
    {
      uint64_t v19 = 2;
    }
    else
    {
      if (v18 != *MEMORY[0x263F06BA0])
      {
        sub_236DB93E0();
        uint64_t v27 = v34;
        uint64_t v28 = sub_236DB9A20();
        uint64_t v2 = v29;
        sub_236D6E1E0();
        swift_allocError();
        *(void *)uint64_t v30 = v28;
        *(void *)(v30 + 8) = v2;
        *(unsigned char *)(v30 + 16) = 2;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v27);
        return v2;
      }
      uint64_t v19 = 3;
    }
  }
  uint64_t v39 = v19;
  sub_236DB93F0();
  uint64_t v20 = v38;
  id v21 = sub_236D642D4(v17, v6, v2[4]);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v20)
  {
    uint64_t v22 = v35;
    sub_236DB9400();
    uint64_t v23 = v2[5];
    uint64_t v24 = v37;
    id v25 = sub_236D642D4(v17, v37, v23);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v24);
    id v26 = objc_allocWithZone(MEMORY[0x263F08720]);
    uint64_t v2 = objc_msgSend(v26, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v21, v25, 0, v39, 0);
  }
  return v2;
}

uint64_t sub_236D68A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D68630);
}

uint64_t sub_236D68A44(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_236D68A80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = a2[2];
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236DB96D0();
  id v9 = sub_236D64444(a1, v5, v3[3]);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v2)
  {
    uint64_t v3 = (uint64_t *)objc_msgSend(self, sel_notPredicateWithSubpredicate_, v9);
  }
  return v3;
}

uint64_t sub_236D68BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D68A80);
}

uint64_t sub_236D68BEC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D68C28(uint64_t a1, void *a2)
{
  uint64_t v36 = a1;
  uint64_t v32 = a2[3];
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v31 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_236DB9420();
  uint64_t v8 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_236DB9710();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v29 - v13;
  sub_236DB9680();
  sub_236DB9700();
  id v15 = v14;
  uint64_t v16 = v34;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t v17 = v36;
  v29[1] = sub_236D629C0((uint64_t)v10);
  id v19 = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
  sub_236DB9670();
  id v20 = v38;
  id v21 = sub_236D642D4(v17, v6, v33);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v21;
    id v38 = v19;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v6);
    uint64_t v23 = v31;
    sub_236DB9660();
    uint64_t v24 = v17;
    uint64_t v25 = v32;
    id v27 = sub_236D64444(v24, v32, a2[5]);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v25);
    uint64_t v28 = (void *)sub_236DB9A00();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_expressionForSubquery_usingIteratorVariable_predicate_, v22, v28, v27);
  }
  return v19;
}

uint64_t sub_236D69074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D68C28);
}

uint64_t sub_236D690A0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D690DC(uint64_t a1, void *a2)
{
  uint64_t v28 = a2[3];
  uint64_t v25 = *(void *)(v28 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2900);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_236DBEEE0;
  uint64_t v26 = v2;
  MEMORY[0x237E0E760](a2);
  uint64_t v15 = a2[4];
  uint64_t v27 = a1;
  id v16 = sub_236D642D4(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(void *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v17 = v25;
    uint64_t v18 = sub_236D291DC(0, &qword_2688D2C58);
    *(void *)(v14 + 56) = v18;
    *(void *)(v14 + 32) = v16;
    MEMORY[0x237E0E770](a2);
    uint64_t v19 = v28;
    id v21 = sub_236D642D4(v27, v28, a2[5]);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v19);
    *(void *)(v14 + 88) = v18;
    *(void *)(v14 + 64) = v21;
    uint64_t v22 = (void *)sub_236DB9A00();
    uint64_t v23 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_expressionForFunction_arguments_, v22, v23);
  }
  return v16;
}

uint64_t sub_236D693C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D690DC);
}

uint64_t sub_236D693EC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D69428(uint64_t a1, void *a2)
{
  uint64_t v25 = a2[3];
  uint64_t v22 = *(void *)(v25 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_236DBF770;
  uint64_t v23 = v2;
  MEMORY[0x237E0E6F0](a2);
  uint64_t v15 = a2[4];
  uint64_t v24 = a1;
  id v16 = sub_236D642D4(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(void *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    *(void *)(v14 + 32) = v16;
    uint64_t v17 = v22;
    MEMORY[0x237E0E700](a2);
    uint64_t v18 = v25;
    id v20 = sub_236D642D4(v24, v25, a2[5]);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
    *(void *)(v14 + 40) = v20;
    uint64_t v26 = v14;
    sub_236DB9B50();
    sub_236D291DC(0, &qword_2688D2C58);
    id v21 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_expressionForAggregate_, v21);
  }
  return v16;
}

uint64_t sub_236D696D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D69428);
}

uint64_t sub_236D69700(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6973C(uint64_t a1, void *a2)
{
  uint64_t v25 = a2[2];
  uint64_t v24 = *(void *)(v25 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236DB94F0();
  id v13 = sub_236D642D4(a1, v9, a2[5]);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v10 + 8);
  id v14 = (id)(v10 + 8);
  v15(v12, v9);
  if (!v2)
  {
    id v16 = v13;
    MEMORY[0x237E0E7C0](a2);
    uint64_t v17 = v25;
    id v18 = sub_236D642D4(a1, v25, a2[4]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v17);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (swift_conformsToProtocol2()) {
      uint64_t v21 = AssociatedTypeWitness;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v21) {
      uint64_t v22 = 100;
    }
    else {
      uint64_t v22 = 10;
    }
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v16, v18, 0, v22, 0);
  }
  return v14;
}

uint64_t sub_236D699BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6973C);
}

uint64_t sub_236D699E8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D69A24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  a2[3] = *(void *)(a1 + 16);
  a2[4] = v3;
  __swift_allocate_boxed_opaque_existential_0(a2);
  return MEMORY[0x237E0E8F0](a1);
}

uint64_t sub_236D69A64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  a2[3] = *(void *)(a1 + 24);
  a2[4] = v3;
  __swift_allocate_boxed_opaque_existential_0(a2);
  return MEMORY[0x237E0E900](a1);
}

uint64_t sub_236D69AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = sub_236DBA410();
  uint64_t v56 = *(void *)(v61 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v61);
  uint64_t v57 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v55 - v7;
  uint64_t v65 = sub_236DBA4B0();
  uint64_t v58 = *(void *)(v65 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v65);
  uint64_t v59 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v64 = (char *)&v55 - v10;
  uint64_t v69 = sub_236DBA400();
  uint64_t v62 = *(void *)(v69 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v69);
  uint64_t v63 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (char *)&v55 - v13;
  uint64_t v14 = sub_236DB99E0();
  uint64_t v66 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v67 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v55 - v17;
  uint64_t v19 = sub_236DB9F10();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v55 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (uint64_t *)((char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = v29;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v28, v70, a1);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v26, v19);
    uint64_t v70 = v28;
    uint64_t v30 = v71;
    *(void *)(v71 + 24) = AssociatedTypeWitness;
    *(void *)(v30 + 32) = AssociatedConformanceWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v30);
    uint64_t v32 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
    v32(boxed_opaque_existential_0, v23, AssociatedTypeWitness);
    uint64_t v33 = &v23[*(int *)(v19 + 36)];
    *(void *)(v30 + 64) = AssociatedTypeWitness;
    *(void *)(v30 + 72) = AssociatedConformanceWitness;
    uint64_t v34 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v30 + 40));
    v32(v34, v33, AssociatedTypeWitness);
    *(unsigned char *)(v30 + 80) = 0;
    uint64_t v28 = v70;
  }
  else
  {
    uint64_t v35 = v71;
    if (swift_dynamicCast())
    {
      uint64_t v36 = v67;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v67, v18, v14);
      uint64_t v70 = (uint64_t *)(v35 + 40);
      *(void *)(v35 + 24) = AssociatedTypeWitness;
      *(void *)(v35 + 32) = AssociatedConformanceWitness;
      uint64_t v37 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
      id v38 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
      v38(v37, v36, AssociatedTypeWitness);
      uint64_t v39 = &v36[*(int *)(v14 + 36)];
      *(void *)(v35 + 64) = AssociatedTypeWitness;
      *(void *)(v35 + 72) = AssociatedConformanceWitness;
      unint64_t v40 = __swift_allocate_boxed_opaque_existential_0(v70);
      v38(v40, v39, AssociatedTypeWitness);
      char v41 = 1;
    }
    else
    {
      uint64_t v43 = v68;
      uint64_t v42 = v69;
      if (swift_dynamicCast())
      {
        uint64_t v44 = v63;
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v63, v43, v42);
        *(void *)(v35 + 24) = AssociatedTypeWitness;
        *(void *)(v35 + 32) = AssociatedConformanceWitness;
        uint64_t v45 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v45, v44, AssociatedTypeWitness);
        char v41 = 2;
      }
      else
      {
        uint64_t v47 = v64;
        uint64_t v46 = v65;
        if (swift_dynamicCast())
        {
          uint64_t v48 = v59;
          (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v59, v47, v46);
          *(void *)(v35 + 24) = AssociatedTypeWitness;
          *(void *)(v35 + 32) = AssociatedConformanceWitness;
          uint64_t v49 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v49, v48, AssociatedTypeWitness);
          char v41 = 3;
        }
        else
        {
          id v51 = v60;
          uint64_t v50 = v61;
          if (swift_dynamicCast())
          {
            uint64_t v52 = v57;
            (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v57, v51, v50);
            *(void *)(v35 + 24) = AssociatedTypeWitness;
            *(void *)(v35 + 32) = AssociatedConformanceWitness;
            uint64_t v53 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v35);
            (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v53, v52, AssociatedTypeWitness);
            char v41 = 4;
          }
          else
          {
            *(_OWORD *)(v35 + 48) = 0u;
            *(_OWORD *)(v35 + 64) = 0u;
            *(_OWORD *)(v35 + 16) = 0u;
            *(_OWORD *)(v35 + 32) = 0u;
            *(_OWORD *)uint64_t v35 = 0u;
            char v41 = -1;
          }
        }
      }
    }
    *(unsigned char *)(v35 + 80) = v41;
  }
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v72 + 8))(v28, a1);
}

uint64_t sub_236D6A234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x237E0E910](v5);
  sub_236D69AAC(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_236D6A310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D6A234(a1, a2);
}

char *sub_236D6A318(uint64_t a1, void *a2)
{
  uint64_t v30 = a2[2];
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v28 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)v26 - v9;
  uint64_t v11 = *(void *)(v10 + 24);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v2;
  MEMORY[0x237E0E880](v15);
  uint64_t v16 = a2[5];
  uint64_t v29 = a1;
  uint64_t v17 = v14;
  id v18 = v34;
  id v19 = sub_236D642D4(a1, v11, v16);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v26[0] = v16;
    id v34 = v19;
    uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26[1] = v11;
    v21(v14, v11);
    MEMORY[0x237E0E870](a2);
    uint64_t v22 = v30;
    uint64_t v27 = a2[4];
    id v23 = sub_236D642D4(v29, v30, v27);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v22);
    id v24 = objc_allocWithZone(MEMORY[0x263F08720]);
    uint64_t v25 = v34;
    uint64_t v17 = (char *)objc_msgSend(v24, sel_initWithLeftExpression_rightExpression_modifier_type_options_, v34, v23, 0, 100, 0);
  }
  return v17;
}

uint64_t sub_236D6AF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6A318);
}

uint64_t sub_236D6AF9C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6AFD8(void *a1, void *a2)
{
  uint64_t v39 = a1;
  uint64_t v35 = a2[3];
  uint64_t v33 = *(void *)(v35 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  id v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(void *)(v5 + 16);
  uint64_t v40 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_236DB9420();
  uint64_t v8 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a2[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_236DB9710();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - v13;
  sub_236DB9550();
  sub_236DB9700();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v15 = v39;
  uint64_t v16 = sub_236D629C0((uint64_t)v10);
  uint64_t v17 = v10;
  uint64_t v18 = v36;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v38);
  MEMORY[0x237E0E830](a2);
  id v19 = v41;
  id v20 = sub_236D642D4((uint64_t)v15, v18, v37);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v16;
    id v41 = v20;
    uint64_t v21 = v33;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v18);
    uint64_t v22 = v34;
    MEMORY[0x237E0E820](a2);
    uint64_t v23 = v35;
    id v25 = sub_236D64444((uint64_t)v15, v35, a2[5]);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    uint64_t v26 = (void *)sub_236DB9A00();
    swift_bridgeObjectRelease();
    uint64_t v27 = self;
    uint64_t v28 = v41;
    id v29 = objc_msgSend(v27, sel_expressionForSubquery_usingIteratorVariable_predicate_, v41, v26, v25);

    id v30 = sub_236D62BAC();
    uint64_t v42 = 0;
    id v31 = objc_msgSend(v27, sel_expressionForConstantValue_, sub_236DBA630());
    swift_unknownObjectRelease();
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v30, v31, 0, 5, 0);
  }
  return v15;
}

uint64_t sub_236D6B4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6AFD8);
}

uint64_t sub_236D6B4E8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6B524(uint64_t a1, void *a2)
{
  uint64_t v44 = a1;
  uint64_t v3 = a2[2];
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(v6 + 24);
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_236DB9420();
  uint64_t v9 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a2[4];
  uint64_t v41 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_236DB9710();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v37 - v14;
  sub_236DB9550();
  sub_236DB9700();
  uint64_t v16 = v15;
  uint64_t v17 = v44;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v18 = v43;
  uint64_t v37 = sub_236D629C0((uint64_t)v11);
  id v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v42);
  MEMORY[0x237E0E7F0](a2);
  id v21 = v45;
  id v22 = sub_236D64444(v17, v18, a2[5]);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v22;
    id v45 = v20;
    uint64_t v24 = v39;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v18);
    id v25 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, v23);

    uint64_t v26 = v40;
    MEMORY[0x237E0E800](a2);
    uint64_t v27 = v17;
    uint64_t v28 = v41;
    id v30 = sub_236D642D4(v27, v41, v38);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v28);
    id v31 = v25;
    uint64_t v32 = (void *)sub_236DB9A00();
    swift_bridgeObjectRelease();
    uint64_t v33 = self;
    id v34 = objc_msgSend(v33, sel_expressionForSubquery_usingIteratorVariable_predicate_, v30, v32, v31);

    id v35 = sub_236D62BAC();
    uint64_t v47 = 0;
    id v36 = objc_msgSend(v33, sel_expressionForConstantValue_, sub_236DBA630());
    swift_unknownObjectRelease();
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v35, v36, 0, 4, 0);
  }
  return v20;
}

uint64_t sub_236D6BA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6B524);
}

uint64_t sub_236D6BA64(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6BAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6BADC(a1, a2, a3, MEMORY[0x263F06B48], (void *)0x6C65732E78616D40);
}

id sub_236D6BADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id result = sub_236D6BB48(a1, a2, a4, a5);
  if (v5) {
    return (id)v7;
  }
  return result;
}

uint64_t sub_236D6BB0C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6BB48(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v12);
  id v14 = sub_236D642D4(a1, v8, *(void *)(a2 + 24));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v4)
  {
    a4 = sub_236D62BAC();
  }
  return a4;
}

id sub_236D6BC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6BADC(a1, a2, a3, MEMORY[0x263F06B58], (void *)0x6C65732E6E696D40);
}

uint64_t sub_236D6BCB8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_236D6BCF4(uint64_t a1, void *a2)
{
  uint64_t v32 = a2[4];
  uint64_t v31 = *(void *)(v32 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)(v13 + 16);
  uint64_t v15 = *(v14 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v2;
  sub_236DB9470();
  uint64_t v18 = a2[5];
  uint64_t v34 = a1;
  id v19 = v36;
  id v20 = sub_236D64444(a1, (uint64_t)v14, v18);
  (*(void (**)(char *, void *))(v15 + 8))(v17, v14);
  if (!v19)
  {
    id v36 = v20;
    uint64_t v21 = v31;
    uint64_t v22 = v32;
    sub_236DB9450();
    uint64_t v23 = v34;
    id v24 = sub_236D642D4(v34, v9, a2[6]);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
    id v25 = v24;
    sub_236DB9460();
    id v26 = sub_236D642D4(v23, v22, a2[7]);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    uint64_t v28 = self;
    id v29 = v36;
    id v14 = objc_msgSend(v28, sel_expressionForConditional_trueExpression_falseExpression_, v36, v25, v26);
  }
  return v14;
}

uint64_t sub_236D6BFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6BCF4);
}

uint64_t sub_236D6C028(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6C064(uint64_t a1, void *a2)
{
  uint64_t v25 = a2[3];
  uint64_t v28 = *(void *)(v25 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x237E0E740](v13);
  uint64_t v14 = a2[4];
  uint64_t v26 = a1;
  id v15 = sub_236D642D4(a1, v9, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!v2)
  {
    uint64_t v16 = v15;
    sub_236DB9490();
    uint64_t v17 = v25;
    id v15 = sub_236D642D4(v26, v25, a2[5]);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v17);
    if (!objc_msgSend(v16, sel_expressionType))
    {
      if (!objc_msgSend(v16, sel_constantValue))
      {
        memset(v27, 0, sizeof(v27));
        sub_236D267CC((uint64_t)v27, &qword_2688D2B40);

        return v15;
      }
      sub_236DBA0E0();
      swift_unknownObjectRelease();
      sub_236D267CC((uint64_t)v27, &qword_2688D2B40);
    }
    id v19 = self;
    id v20 = v16;
    id v21 = objc_msgSend(v19, sel_expressionForConstantValue_, 0);
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v20, v21, 0, 5, 0);

    id v23 = v22;
    id v24 = objc_msgSend(v19, sel_expressionForConditional_trueExpression_falseExpression_, v23, v20, v15);

    return v24;
  }
  return v15;
}

uint64_t sub_236D6C37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6C064);
}

uint64_t sub_236D6C3A8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D6C3E4(uint64_t a1, void *a2)
{
  uint64_t v71 = a2[4];
  uint64_t v4 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v70 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_236DB9420();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v67 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)&v63 - v9;
  uint64_t v10 = sub_236DB9710();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v63 - v12;
  uint64_t v14 = a2[2];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  id v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 32);
  BOOL v21 = __CFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (!v21)
  {
    uint64_t v64 = result;
    uint64_t v65 = v17;
    uint64_t v66 = v4;
    *(void *)(a1 + 32) = v22;
    MEMORY[0x237E0E780](a2);
    id v23 = v73;
    id v24 = sub_236D64600(a1, v14, a2[6]);
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    id v29 = v19;
    id v30 = v23;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v29, v14);
    id v73 = v23;
    if (!v23)
    {
      uint64_t v31 = *(void *)(a1 + 32);
      BOOL v21 = v31 != 0;
      uint64_t v32 = v31 - 1;
      if (!v21) {
        goto LABEL_13;
      }
      uint64_t v33 = v24;
      uint64_t v34 = v26;
      id v63 = v28;
      *(void *)(a1 + 32) = v32;
      sub_236DB94D0();
      uint64_t v35 = v72;
      uint64_t v36 = v64;
      sub_236DB9700();
      v65[1](v13, v36);
      uint64_t v37 = (uint64_t)v67;
      uint64_t v38 = v68;
      uint64_t v39 = v35;
      uint64_t v40 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v67, v39, v69);
      id v41 = v34;
      id v42 = v33;
      uint64_t v65 = (void (**)(char *, void))v41;
      id v43 = v42;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v75 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = 0x8000000000000000;
      sub_236D9A340((uint64_t)v43, (uint64_t)v34, 0, v37, isUniquelyReferenced_nonNull_native);
      *(void *)(a1 + 8) = v75;
      swift_bridgeObjectRelease();
      id v45 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      id v30 = (id)(v38 + 8);
      uint64_t v46 = v37;
      id v47 = v65;
      v45(v46, v40);
      v45((uint64_t)v72, v40);

      uint64_t v48 = v70;
      sub_236DB94E0();
      uint64_t v49 = v71;
      uint64_t v50 = v73;
      id v51 = sub_236D64600(a1, v71, a2[7]);
      id v73 = v50;
      if (v50)
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v49);
      }
      else
      {
        uint64_t v53 = v51;
        id v74 = v52;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v49);
        uint64_t v54 = self;
        id v55 = v43;
        id v56 = objc_msgSend(v54, sel_expressionForConstantValue_, 0);
        id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v55, v56, 0, 5, 0);

        id v58 = v63;
        if (v63)
        {
          id v59 = v63;
        }
        else
        {
          id v59 = v57;
          id v58 = 0;
        }
        id v60 = v58;
        id v61 = v53;
        id v62 = objc_msgSend(v54, sel_expressionForConstantValue_, 0);
        id v30 = objc_msgSend(v54, sel_expressionForConditional_trueExpression_falseExpression_, v59, v61, v62);
      }
    }
    return (uint64_t)v30;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_236D6C984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6C3E4);
}

uint64_t sub_236D6C9B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D6C9EC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

char *sub_236D6CA28(uint64_t a1, void *a2)
{
  uint64_t v39 = a2[3];
  uint64_t v33 = *(void *)(v39 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2900);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_236DBEEE0;
  uint64_t v34 = v2;
  MEMORY[0x237E0E8A0](a2);
  uint64_t v15 = a2[4];
  uint64_t v35 = a1;
  id v16 = sub_236D642D4(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(void *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v17 = v33;
    uint64_t v18 = sub_236D291DC(0, &qword_2688D2C58);
    *(void *)(v14 + 56) = v18;
    *(void *)(v14 + 32) = v16;
    MEMORY[0x237E0E890](a2);
    uint64_t v19 = v39;
    id v21 = sub_236D642D4(v35, v39, a2[5]);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v19);
    *(void *)(v14 + 88) = v18;
    *(void *)(v14 + 64) = v21;
    uint64_t v22 = (void *)sub_236DB9A00();
    id v23 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)self;
    id v24 = objc_msgSend(v13, sel_expressionForFunction_arguments_, v22, v23);

    if (objc_msgSend(v24, sel_expressionValueWithObject_context_, 0, 0))
    {
      sub_236DBA0E0();
      swift_unknownObjectRelease();
      sub_236D18FFC(&v36, v38);
      sub_236D637F0(v38, (uint64_t)&v36);
      uint64_t v26 = v37;
      if (v37)
      {
        uint64_t v27 = __swift_project_boxed_opaque_existential_1(&v36, v37);
        uint64_t v28 = *(void *)(v26 - 8);
        MEMORY[0x270FA5388](v27);
        id v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v28 + 16))(v30);
        uint64_t v31 = sub_236DBA5F0();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v36);
      }
      else
      {
        uint64_t v31 = 0;
      }
      uint64_t v13 = (char *)objc_msgSend(v13, sel_expressionForConstantValue_, v31);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    }
    else
    {
      sub_236D6E1E0();
      swift_allocError();
      *(void *)uint64_t v25 = 0;
      *(void *)(v25 + 8) = 0;
      *(unsigned char *)(v25 + 16) = 3;
      swift_willThrow();
    }
  }
  return v13;
}

char *sub_236D6CEC8(uint64_t a1, void *a2)
{
  uint64_t result = sub_236D6CA28(a1, a2);
  if (v2) {
    return (char *)v4;
  }
  return result;
}

uint64_t sub_236D6CEF4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6CF30(uint64_t a1, void *a2)
{
  uint64_t v29 = a2[3];
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2900);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_236DBEEE0;
  uint64_t v27 = v2;
  MEMORY[0x237E0E860](a2);
  uint64_t v15 = a2[5];
  uint64_t v28 = a1;
  id v16 = sub_236D642D4(a1, v10, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v3)
  {
    *(void *)(v14 + 16) = 0;
    swift_release();
  }
  else
  {
    uint64_t v17 = v26;
    uint64_t v18 = sub_236D291DC(0, &qword_2688D2C58);
    *(void *)(v14 + 56) = v18;
    *(void *)(v14 + 32) = v16;
    sub_236DB9590();
    uint64_t v19 = v29;
    id v21 = sub_236D642D4(v28, v29, a2[6]);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v19);
    *(void *)(v14 + 88) = v18;
    *(void *)(v14 + 64) = v21;
    uint64_t v22 = (void *)sub_236DB9A00();
    id v23 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_expressionForFunction_arguments_, v22, v23);

    if (objc_msgSend(v16, sel_expressionType))
    {
      sub_236D6E1E0();
      swift_allocError();
      *(void *)uint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      *(unsigned char *)(v24 + 16) = 3;
      swift_willThrow();
    }
  }
  return v16;
}

uint64_t sub_236D6D264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6CF30);
}

uint64_t sub_236D6D290(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6D2CC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_236D6D5D0(a1, a2, a3, MEMORY[0x263F06A58], MEMORY[0x263F06A60], 99);
}

uint64_t sub_236D6D310(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6D34C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v31 = a6;
  uint64_t v10 = a2[3];
  uint64_t v28 = a7;
  uint64_t v29 = v10;
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20(v19);
  uint64_t v21 = a2[4];
  uint64_t v30 = a1;
  id v22 = sub_236D642D4(a1, v15, v21);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v7)
  {
    id v23 = v22;
    uint64_t v24 = v28;
    v31(a2);
    uint64_t v25 = v29;
    id v26 = sub_236D642D4(v30, v29, a2[5]);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v25);
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v22, v26, 0, v24, 0);
  }
  return v22;
}

id sub_236D6D58C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_236D6D5D0(a1, a2, a3, MEMORY[0x263F06BC0], MEMORY[0x263F06BC8], 8);
}

id sub_236D6D5D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  id result = sub_236D6D34C(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16), a4, a5, a6);
  if (v6) {
    return (id)v8;
  }
  return result;
}

uint64_t sub_236D6D60C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6D648()
{
  return objc_msgSend(self, sel_expressionForConstantValue_, 0);
}

uint64_t sub_236D6D69C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D6D6D8(uint64_t a1)
{
  type metadata accessor for ComparisonResult(0);
  v12[3] = v3;
  v12[0] = a1;
  sub_236D637F0(v12, (uint64_t)v13);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  if (!v1)
  {
    uint64_t v5 = v14;
    if (v14)
    {
      uint64_t v6 = __swift_project_boxed_opaque_existential_1(v13, v14);
      uint64_t v7 = *(void *)(v5 - 8);
      MEMORY[0x270FA5388](v6);
      uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      uint64_t v10 = sub_236DBA5F0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v11 = objc_msgSend(self, sel_expressionForConstantValue_, v10);
    swift_unknownObjectRelease();
    return (uint64_t)v11;
  }
  return result;
}

id sub_236D6D85C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v16 = sub_236D642D4(a3, a5, a7);
  if (!v8)
  {
    uint64_t v30 = v16;
    id v17 = sub_236D642D4(a3, a6, a8);
    id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v30, v17, 0, 4, a4);

    id v19 = sub_236D642D4(a3, a5, a7);
    id v20 = sub_236D642D4(a3, a6, a8);
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), (SEL)&off_264CC21A0 + 6, v19, v20, 0, 0, a4);

    id v22 = (void *)sub_236D6D6D8(-1);
    id v23 = (void *)sub_236D6D6D8(1);
    uint64_t v24 = self;
    id v25 = v21;
    id v26 = objc_msgSend(v24, sel_expressionForConditional_trueExpression_falseExpression_, v25, v22, v23);

    uint64_t v27 = (void *)sub_236D6D6D8(0);
    id v28 = v29;
    a1 = objc_msgSend(v24, sel_expressionForConditional_trueExpression_falseExpression_, v28, v27, v26);
  }
  return a1;
}

uint64_t sub_236D6DAFC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_236D6DB40(a1, a2, a3, MEMORY[0x263F06C18], MEMORY[0x263F06C20], 1);
}

uint64_t sub_236D6DB40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t result = sub_236D6DBB0(a1, a2, a4, a5, a6);
  if (v6) {
    return v8;
  }
  return result;
}

uint64_t sub_236D6DB74(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D6DBB0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v23 = a1;
  uint64_t v24 = a5;
  uint64_t v7 = a2[3];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v9);
  id v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v17);
  a4(a2);
  id v19 = v25;
  id v20 = sub_236D6D85C(v16, (uint64_t)v11, v23, v24, v13, v7, a2[4], a2[5]);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    id v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    id v25 = v20;
    v22(v11, v7);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (uint64_t)v25;
  }
}

uint64_t sub_236D6DDB4(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_236D6DB40(a1, a2, a3, MEMORY[0x263F06BF0], MEMORY[0x263F06BF8], 8);
}

uint64_t sub_236D6DDF8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_236D6DE34(void *a1, void *a2)
{
  id v4 = a1;
  uint64_t v20 = a2[3];
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x237E0E8B0](v13);
  uint64_t v14 = a2[4];
  uint64_t v21 = (uint64_t)v4;
  id v15 = sub_236D642D4((uint64_t)v4, v9, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!v2)
  {
    id v16 = v15;
    MEMORY[0x237E0E8C0](a2);
    uint64_t v17 = v20;
    id v18 = sub_236D642D4(v21, v20, a2[5]);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v17);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08720]), sel_initWithLeftExpression_rightExpression_modifier_type_options_, v16, v18, 0, 99, 11);
  }
  return v4;
}

uint64_t sub_236D6E05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D6E088(a1, a2, a3, (uint64_t (*)(void))sub_236D6DE34);
}

uint64_t sub_236D6E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_236D6E0B4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D6E0F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_236DB9A90() != a1 || v9 != a2)
  {
    char v10 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_236DB9A60();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_236D6E1E0()
{
  unint64_t result = qword_2688D2BE0;
  if (!qword_2688D2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2BE0);
  }
  return result;
}

id sub_236D6E234(void *a1, void *a2)
{
  uint64_t v4 = a1[3];
  if (!v4)
  {
    uint64_t v10 = 0;
    uint64_t v11 = a2[3];
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = sub_236DBA5F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  uint64_t v11 = a2[3];
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a2, v11);
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  uint64_t v16 = sub_236DBA5F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
LABEL_6:
  id v17 = objc_msgSend(v2, sel_initWithOperand_andKeyPath_, v10, v16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

void sub_236D6E464(void *a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2) {
      return;
    }

    a1 = a3;
  }
}

uint64_t sub_236D6E4C0(uint64_t a1)
{
  return sub_236D649B4(a1, *(void (**)(uint64_t *))(v1 + 32));
}

uint64_t sub_236D6E4E0(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 32))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_236D6E518(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(a2 + 80) = *(unsigned char *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

uint64_t sub_236D6E540(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_236D6E578(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_17;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_17;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_18;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 3 || a5 | a4) {
        goto LABEL_17;
      }
      uint64_t result = 1;
      break;
    default:
      if (a6)
      {
LABEL_17:
        uint64_t result = 0;
      }
      else if (a1 == a4 && a2 == a5)
      {
        uint64_t result = 1;
      }
      else
      {
LABEL_18:
        uint64_t result = sub_236DBA600();
      }
      break;
  }
  return result;
}

uint64_t sub_236D6E648(void *a1)
{
  uint64_t v2 = a1[3];
  long long v3 = __swift_project_boxed_opaque_existential_1(a1, v2);
  void v13[3] = v2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v2 - 8) + 16))(boxed_opaque_existential_0, v3, v2);
  sub_236D637F0(v13, (uint64_t)v14);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  if (!v1)
  {
    uint64_t v6 = v15;
    if (v15)
    {
      uint64_t v7 = __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v8 = *(void *)(v6 - 8);
      MEMORY[0x270FA5388](v7);
      uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v10);
      uint64_t v11 = sub_236DBA5F0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
    }
    else
    {
      uint64_t v11 = 0;
    }
    id v12 = objc_msgSend(self, sel_expressionForConstantValue_, v11);
    swift_unknownObjectRelease();
    return (uint64_t)v12;
  }
  return result;
}

uint64_t sub_236D6E804(uint64_t a1)
{
  return a1;
}

unint64_t sub_236D6E834()
{
  unint64_t result = qword_2688D2C98;
  if (!qword_2688D2C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2C98);
  }
  return result;
}

uint64_t destroy for AnyRange(uint64_t a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)a1 + 5;
  }
  if (v2 <= 1)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t initializeWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 80);
  if (v4 >= 5) {
    unsigned int v4 = *(_DWORD *)a2 + 5;
  }
  switch(v4)
  {
    case 1u:
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      long long v9 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
      char v7 = 1;
      break;
    case 2u:
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1, a2);
      char v7 = 2;
      break;
    case 3u:
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      char v7 = 3;
      break;
    case 4u:
      long long v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
      char v7 = 4;
      break;
    default:
      long long v5 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      long long v6 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
      char v7 = 0;
      break;
  }
  *(unsigned char *)(a1 + 80) = v7;
  return a1;
}

uint64_t assignWithCopy for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned int v5 = *(unsigned __int8 *)(a2 + 80);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 1u:
        uint64_t v9 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v9;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v2, a2);
        uint64_t v10 = *(void *)(a2 + 64);
        *(void *)(v2 + 64) = v10;
        *(void *)(v2 + 72) = *(void *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v2 + 40, a2 + 40);
        char v8 = 1;
        break;
      case 2u:
        uint64_t v11 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v11;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v2, a2);
        char v8 = 2;
        break;
      case 3u:
        uint64_t v12 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v12;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v2, a2);
        char v8 = 3;
        break;
      case 4u:
        uint64_t v13 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v13;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v2, a2);
        char v8 = 4;
        break;
      default:
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(v2 + 24) = v6;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v2, a2);
        uint64_t v7 = *(void *)(a2 + 64);
        *(void *)(v2 + 64) = v7;
        *(void *)(v2 + 72) = *(void *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v2 + 40, a2 + 40);
        char v8 = 0;
        break;
    }
    *(unsigned char *)(v2 + 80) = v8;
  }
  return v2;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AnyRange(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 80);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if (v4 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
      a1 = v2 + 40;
    }
    __swift_destroy_boxed_opaque_existential_0(a1);
    unsigned int v5 = *(unsigned __int8 *)(a2 + 80);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 1u:
        long long v9 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(v2 + 48) = v9;
        *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v10;
        char v6 = 1;
        break;
      case 2u:
        long long v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v11;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        char v6 = 2;
        break;
      case 3u:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v12;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        char v6 = 3;
        break;
      case 4u:
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v13;
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        char v6 = 4;
        break;
      default:
        char v6 = 0;
        long long v7 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(v2 + 48) = v7;
        *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(_OWORD *)(v2 + 16) = v8;
        break;
    }
    *(unsigned char *)(v2 + 80) = v6;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for AnyRange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 >= 5) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnyRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_236D6EFE4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 80);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_236D6F000(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyRange()
{
  return &type metadata for AnyRange;
}

void *initializeBufferWithCopyOfBuffer for KeyPathConvertibleContext(void *a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  unsigned int v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for KeyPathConvertibleContext(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for KeyPathConvertibleContext(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  unsigned int v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  long long v10 = *(void **)(a1 + 16);
  long long v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for KeyPathConvertibleContext(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  unsigned int v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t _s22ManagedObjectChangeSetVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22ManagedObjectChangeSetVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyPathConvertibleContext()
{
  return &type metadata for KeyPathConvertibleContext;
}

uint64_t sub_236D6F234(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FetchablePredicateConversionError(uint64_t a1)
{
  return sub_236D6F25C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_236D6F25C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11HomeKitCore33FetchablePredicateConversionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_236D6F234(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FetchablePredicateConversionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_236D6F234(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_236D6F25C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FetchablePredicateConversionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_236D6F25C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchablePredicateConversionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchablePredicateConversionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_236D6F400(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_236D6F418(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FetchablePredicateConversionError()
{
  return &type metadata for FetchablePredicateConversionError;
}

void sub_236D6F448(void *a1)
{
  uint64_t v2 = qword_2688D1290;
  id v3 = a1;
  if (v2 != -1) {
    swift_once();
  }
  objc_msgSend(v3, sel_setRemoteObjectInterface_, qword_2688DE728);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  long long v13 = sub_236D6FC00;
  uint64_t v14 = v4;
  uint64_t v9 = MEMORY[0x263EF8330];
  uint64_t v10 = 1107296256;
  long long v11 = sub_236D6F6C0;
  id v12 = &block_descriptor_1;
  uint64_t v5 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(v3, sel_setInvalidationHandler_, v5);
  _Block_release(v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  long long v13 = sub_236D6FC50;
  uint64_t v14 = v6;
  uint64_t v9 = MEMORY[0x263EF8330];
  uint64_t v10 = 1107296256;
  long long v11 = sub_236D6F6C0;
  id v12 = &block_descriptor_19;
  uint64_t v7 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(v3, sel_setInterruptionHandler_, v7);
  _Block_release(v7);
  objc_msgSend(v3, sel_resume);
  unsigned __int8 v8 = *(void **)(v1 + 112);
  *(void *)(v1 + 112) = v3;
}

uint64_t sub_236D6F638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_236D6F658, a4, 0);
}

uint64_t sub_236D6F658()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 112);
  *(void *)(v1 + 112) = 0;

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_236D6F6C0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_236D6F704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = sub_236DB9C90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    _OWORD v10[2] = 0;
    v10[3] = 0;
    void v10[4] = v8;
    sub_236D795C0((uint64_t)v6, a3, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_236D6F818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17C0);
  v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2CC8);
  v4[9] = v7;
  v4[10] = *(void *)(v7 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17B0);
  v4[12] = v8;
  v4[13] = *(void *)(v8 - 8);
  v4[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D6F9A0, a4, 0);
}

uint64_t sub_236D6F9A0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 120);
  *(void *)(v0 + 120) = v1;
  return MEMORY[0x270FA2498](sub_236D6F9C4, v1, 0);
}

uint64_t sub_236D6F9C4()
{
  uint64_t v1 = v0[15];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[7];
    uint64_t v18 = v0[14] + *(int *)(v0[12] + 36);
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v17 = *(void *)(v4 + 72);
    uint64_t v7 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v8 = (void (**)(uint64_t, uint64_t))(v0[10] + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v0[14];
      uint64_t v10 = v0[11];
      uint64_t v12 = v0[8];
      uint64_t v11 = v0[9];
      uint64_t v13 = v0[6];
      sub_236D6FD40(v6, v9);
      (*v16)(v12, v18, v13);
      sub_236D6FDA8(v9);
      sub_236DB9CE0();
      (*v7)(v12, v13);
      (*v8)(v10, v11);
      v6 += v17;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_236D6FB64()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for XPCConnectionWrapper()
{
  return self;
}

uint64_t sub_236D6FBC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236D6FC00()
{
  return sub_236D6F704(v0, (uint64_t)&unk_26E9FF970, (uint64_t)&unk_2688D2CD8);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_236D6FC50()
{
  return sub_236D6F704(v0, (uint64_t)&unk_26E9FF948, (uint64_t)&unk_2688D2CC0);
}

uint64_t sub_236D6FC8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_236D17ED0;
  return sub_236D6F818(a1, v4, v5, v6);
}

uint64_t sub_236D6FD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D6FDA8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_21Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D6FE4C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_236D26C08;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_236D6F658, v2, 0);
}

unsigned char *storeEnumTagSinglePayload for XPCConnectionWrapper.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x236D6FF90);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionWrapper.Error()
{
  return &type metadata for XPCConnectionWrapper.Error;
}

unint64_t sub_236D6FFCC()
{
  unint64_t result = qword_2688D2CE0;
  if (!qword_2688D2CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2CE0);
  }
  return result;
}

void sub_236D70028(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_236DBA150();
    sub_236D291DC(0, (unint64_t *)&qword_2688D2D50);
    sub_236D745C8();
    sub_236DB9E60();
    uint64_t v1 = v35;
    uint64_t v2 = v36;
    uint64_t v3 = v37;
    uint64_t v4 = v38;
    unint64_t v5 = v39;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v2 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v34 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v33 = (void *)MEMORY[0x263F8EE78];
  uint64_t v32 = v2;
  while (1)
  {
    uint64_t v9 = v4;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_236DBA1C0()) {
      goto LABEL_41;
    }
    sub_236D291DC(0, (unint64_t *)&qword_2688D2D50);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v40;
    swift_unknownObjectRelease();
    if (!v40) {
      goto LABEL_41;
    }
LABEL_31:
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16)
    {
      uint64_t v18 = (void *)v16;
      id v19 = v12;
      id v20 = objc_msgSend(v18, sel_name);
      uint64_t v21 = sub_236DB9A10();
      uint64_t v23 = v22;

      char v24 = 0;
      goto LABEL_36;
    }
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      id v25 = (void *)v17;
      id v26 = v12;
      id v27 = objc_msgSend(v25, sel_name);
      uint64_t v21 = sub_236DB9A10();
      uint64_t v23 = v28;

      LOBYTE(v27) = objc_msgSend(v25, sel_isToMany);
      char v24 = v27 | 0x80;
LABEL_36:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_236D5629C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v30 = v33[2];
      unint64_t v29 = v33[3];
      if (v30 >= v29 >> 1) {
        uint64_t v33 = sub_236D5629C((void *)(v29 > 1), v30 + 1, 1, v33);
      }
      _OWORD v33[2] = v30 + 1;
      uint64_t v31 = &v33[3 * v30];
      v31[4] = v21;
      v31[5] = v23;
      *((unsigned char *)v31 + 48) = v24;
      uint64_t v2 = v32;
    }
    else
    {
    }
  }
  if (v5)
  {
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_30:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_41;
    }
    goto LABEL_31;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v34) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v4;
    if (!v14)
    {
      uint64_t v4 = v9 + 2;
      if (v9 + 2 >= v34) {
        goto LABEL_41;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v4);
      if (!v14)
      {
        uint64_t v4 = v9 + 3;
        if (v9 + 3 >= v34) {
          goto LABEL_41;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v4);
        if (!v14)
        {
          uint64_t v4 = v9 + 4;
          if (v9 + 4 >= v34) {
            goto LABEL_41;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v4);
          if (!v14)
          {
            uint64_t v4 = v9 + 5;
            if (v9 + 5 >= v34) {
              goto LABEL_41;
            }
            unint64_t v14 = *(void *)(v2 + 8 * v4);
            if (!v14)
            {
              uint64_t v15 = v9 + 6;
              while (v34 != v15)
              {
                unint64_t v14 = *(void *)(v2 + 8 * v15++);
                if (v14)
                {
                  uint64_t v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_41:
              sub_236D2BC98();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_236D70430(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v28 = result;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v33 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v31 = (v6 - 1) & v6;
    int64_t v32 = v3;
    unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_24:
    uint64_t v12 = *(void *)(result + 48) + 24 * v7;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    int v15 = *(char *)(v12 + 16);
    sub_236DBA6E0();
    sub_236DBA6F0();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    if (v15 < 0) {
      sub_236DBA700();
    }
    uint64_t v16 = sub_236DBA710();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v33 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    {
LABEL_52:
      sub_236D366AC();
      return 0;
    }
    uint64_t v19 = ~v17;
    while (1)
    {
      uint64_t v20 = *(void *)(a2 + 48) + 24 * v18;
      uint64_t v22 = *(void *)v20;
      uint64_t v21 = *(void *)(v20 + 8);
      int v23 = *(char *)(v20 + 16);
      if ((v23 & 0x80000000) == 0) {
        break;
      }
      if ((v15 & 0x80000000) == 0) {
        goto LABEL_29;
      }
      if (v22 == v13 && v21 == v14)
      {
        sub_236D366A4();
        sub_236D366A4();
        sub_236D366AC();
        sub_236D366AC();
        if (((v15 ^ v23) & 1) == 0) {
          goto LABEL_49;
        }
      }
      else
      {
        char v27 = sub_236DBA600();
        sub_236D366A4();
        sub_236D366A4();
        sub_236D366AC();
        sub_236D366AC();
        if ((v27 & 1) != 0 && ((v15 ^ v23) & 1) == 0) {
          goto LABEL_49;
        }
      }
LABEL_30:
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v33 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_52;
      }
    }
    if (v15 < 0)
    {
LABEL_29:
      sub_236D366A4();
      sub_236D366A4();
      sub_236D366AC();
      sub_236D366AC();
      goto LABEL_30;
    }
    if (v22 != v13 || v21 != v14)
    {
      char v25 = sub_236DBA600();
      sub_236D366A4();
      sub_236D366A4();
      sub_236D366AC();
      sub_236D366AC();
      if (v25) {
        goto LABEL_49;
      }
      goto LABEL_30;
    }
    sub_236D366A4();
    sub_236D366A4();
    sub_236D366AC();
    sub_236D366AC();
LABEL_49:
    sub_236D366AC();
    unint64_t result = v28;
    unint64_t v6 = v31;
    int64_t v3 = v32;
    if (v31) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v8 >= v30) {
    return 1;
  }
  unint64_t v9 = *(void *)(v29 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (v9) {
    goto LABEL_23;
  }
  int64_t v10 = v8 + 1;
  if (v8 + 1 >= v30) {
    return 1;
  }
  unint64_t v9 = *(void *)(v29 + 8 * v10);
  if (v9) {
    goto LABEL_23;
  }
  int64_t v10 = v8 + 2;
  if (v8 + 2 >= v30) {
    return 1;
  }
  unint64_t v9 = *(void *)(v29 + 8 * v10);
  if (v9) {
    goto LABEL_23;
  }
  int64_t v10 = v8 + 3;
  if (v8 + 3 >= v30) {
    return 1;
  }
  unint64_t v9 = *(void *)(v29 + 8 * v10);
  if (v9) {
    goto LABEL_23;
  }
  int64_t v11 = v8 + 4;
  if (v11 >= v30) {
    return 1;
  }
  unint64_t v9 = *(void *)(v29 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v11;
LABEL_23:
    uint64_t v31 = (v9 - 1) & v9;
    int64_t v32 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v9 = *(void *)(v29 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_23;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_236D708BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  int64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    id v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_236D73808((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
    uint64_t v27 = sub_236DB99B0();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_236D73808(&qword_2688D1DE8, MEMORY[0x263F07508]);
      char v32 = sub_236DB99F0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void HomesStore.CoreData.ManagedObjectChangeSet.init()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE80];
  *a1 = MEMORY[0x263F8EE80];
  a1[1] = v1;
  a1[2] = v1;
}

Swift::Void __swiftcall HomesStore.CoreData.ManagedObjectChangeSet.processChange(_:)(NSPersistentHistoryChange a1)
{
  id v2 = [(objc_class *)a1.super.isa changeType];
  if (v2 == (id)2)
  {
    sub_236D72AB4(a1.super.isa);
  }
  else if (v2 == (id)1)
  {
    sub_236D72844(a1.super.isa);
  }
  else if (v2)
  {
    if (qword_2688D12E8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_236DB9950();
    __swift_project_value_buffer(v3, (uint64_t)qword_2688D2CE8);
    uint64_t v9 = a1.super.isa;
    uint64_t v4 = sub_236DB9930();
    os_log_type_t v5 = sub_236DB9F50();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134218242;
      [(objc_class *)v9 changeType];
      sub_236DBA0B0();
      *(_WORD *)(v6 + 12) = 2112;
      int64_t v8 = v9;
      sub_236DBA0B0();
      *uint64_t v7 = v9;

      _os_log_impl(&dword_236D14000, v4, v5, "Skipping change with unknown change type %ld: %@", (uint8_t *)v6, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v7, -1, -1);
      MEMORY[0x237E101A0](v6, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    sub_236D7254C(a1.super.isa);
  }
}

uint64_t sub_236D70FBC()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2CE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2CE8);
  return sub_236DB9940();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.AttributeDescription.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.AttributeDescription.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.CoreData.ManagedObjectChangeSet.AttributeDescription.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_236DBA600();
  }
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.AttributeDescription.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t sub_236D71140()
{
  return sub_236DBA710();
}

uint64_t sub_236D7118C()
{
  return sub_236DB9A50();
}

uint64_t sub_236D71194()
{
  return sub_236DBA710();
}

uint64_t sub_236D711DC(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_236DBA600();
  }
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription.toMany.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription.hash(into:)()
{
  return sub_236DBA700();
}

uint64_t static HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_236DBA600();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t sub_236D71364()
{
  return sub_236DBA710();
}

uint64_t sub_236D713C8()
{
  return sub_236DBA700();
}

uint64_t sub_236D71400()
{
  return sub_236DBA710();
}

uint64_t sub_236D71460(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_236DBA600();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.PropertyDescription.hash(into:)()
{
  if (*(char *)(v0 + 16) < 0)
  {
    sub_236DBA6F0();
    sub_236DB9A50();
    return sub_236DBA700();
  }
  else
  {
    sub_236DBA6F0();
    return sub_236DB9A50();
  }
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.PropertyDescription.hashValue.getter()
{
  int v1 = *(char *)(v0 + 16);
  sub_236DBA6E0();
  sub_236DBA6F0();
  sub_236DB9A50();
  if (v1 < 0) {
    sub_236DBA700();
  }
  return sub_236DBA710();
}

uint64_t sub_236D715FC()
{
  int v1 = *(char *)(v0 + 16);
  sub_236DBA6E0();
  sub_236DBA6F0();
  sub_236DB9A50();
  if (v1 < 0) {
    sub_236DBA700();
  }
  return sub_236DBA710();
}

uint64_t sub_236D71694()
{
  if (*(char *)(v0 + 16) < 0)
  {
    sub_236DBA6F0();
    sub_236DB9A50();
    return sub_236DBA700();
  }
  else
  {
    sub_236DBA6F0();
    return sub_236DB9A50();
  }
}

uint64_t sub_236D71734()
{
  int v1 = *(char *)(v0 + 16);
  sub_236DBA6E0();
  sub_236DBA6F0();
  sub_236DB9A50();
  if (v1 < 0) {
    sub_236DBA700();
  }
  return sub_236DBA710();
}

id HomesStore.CoreData.ManagedObjectChangeSet.Insert.objectID.getter()
{
  return *v0;
}

void HomesStore.CoreData.ManagedObjectChangeSet.Insert.objectID.setter(void *a1)
{
  *int v1 = a1;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.Insert.objectID.modify())()
{
  return nullsub_1;
}

void HomesStore.CoreData.ManagedObjectChangeSet.Insert.hash(into:)()
{
  id v1 = *v0;
  sub_236DBA040();
}

uint64_t static HomesStore.CoreData.ManagedObjectChangeSet.Insert.== infix(_:_:)()
{
  return sub_236DBA030() & 1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Insert.hashValue.getter()
{
  id v1 = *v0;
  sub_236DBA6E0();
  id v2 = v1;
  sub_236DBA040();

  return sub_236DBA710();
}

uint64_t sub_236D7191C()
{
  id v1 = *v0;
  sub_236DBA6E0();
  id v2 = v1;
  sub_236DBA040();

  return sub_236DBA710();
}

void sub_236D7196C()
{
  id v1 = *v0;
  sub_236DBA040();
}

uint64_t sub_236D719C4()
{
  id v1 = *v0;
  sub_236DBA6E0();
  id v2 = v1;
  sub_236DBA040();

  return sub_236DBA710();
}

uint64_t sub_236D71A10()
{
  return sub_236DBA030() & 1;
}

id HomesStore.CoreData.ManagedObjectChangeSet.Update.objectID.getter()
{
  return *v0;
}

void HomesStore.CoreData.ManagedObjectChangeSet.Update.objectID.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.Update.objectID.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Update.updatedProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Update.updatedProperties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.Update.updatedProperties.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Update.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  id v4 = *(id *)v1;
  sub_236DBA040();

  swift_bridgeObjectRetain();
  sub_236D731C8(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.CoreData.ManagedObjectChangeSet.Update.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  sub_236D291DC(0, &qword_2688D2D00);
  if ((sub_236DBA030() & 1) == 0) {
    return 0;
  }
  return sub_236D70430(v2, v3);
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Update.hashValue.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  sub_236DBA6E0();
  id v3 = v2;
  sub_236DBA040();

  swift_bridgeObjectRetain();
  sub_236D731C8((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t sub_236D71C70()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  sub_236DBA6E0();
  id v3 = v2;
  sub_236DBA040();

  swift_bridgeObjectRetain();
  sub_236D731C8((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t sub_236D71CE4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  id v4 = *(id *)v1;
  sub_236DBA040();

  swift_bridgeObjectRetain();
  sub_236D731C8(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D71D4C()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  sub_236DBA6E0();
  id v3 = v2;
  sub_236DBA040();

  swift_bridgeObjectRetain();
  sub_236D731C8((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t sub_236D71DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  sub_236D291DC(0, &qword_2688D2D00);
  if ((sub_236DBA030() & 1) == 0) {
    return 0;
  }
  return sub_236D70430(v2, v3);
}

id HomesStore.CoreData.ManagedObjectChangeSet.Delete.objectID.getter()
{
  return *v0;
}

void HomesStore.CoreData.ManagedObjectChangeSet.Delete.objectID.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.Delete.objectID.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Delete.modelID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete() + 20);
  uint64_t v4 = sub_236DB9830();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Delete.modelID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete() + 20);
  uint64_t v4 = sub_236DB9830();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.Delete.modelID.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Delete.hash(into:)()
{
  id v1 = *v0;
  sub_236DBA040();

  type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  sub_236DB9830();
  sub_236D73808((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  return sub_236DB99C0();
}

uint64_t static HomesStore.CoreData.ManagedObjectChangeSet.Delete.== infix(_:_:)()
{
  sub_236D291DC(0, &qword_2688D2D00);
  if ((sub_236DBA030() & 1) == 0) {
    return 0;
  }
  type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.Delete.hashValue.getter()
{
  sub_236DBA6E0();
  id v1 = *v0;
  sub_236DBA040();

  type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  sub_236DB9830();
  sub_236D73808((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  return sub_236DBA710();
}

uint64_t sub_236D721B8()
{
  sub_236DBA6E0();
  id v1 = *v0;
  sub_236DBA040();

  sub_236DB9830();
  sub_236D73808((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  return sub_236DBA710();
}

uint64_t sub_236D72270()
{
  id v1 = *v0;
  sub_236DBA040();

  sub_236DB9830();
  sub_236D73808((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  return sub_236DB99C0();
}

uint64_t sub_236D72310()
{
  sub_236DBA6E0();
  id v1 = *v0;
  sub_236DBA040();

  sub_236DB9830();
  sub_236D73808((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  return sub_236DBA710();
}

uint64_t sub_236D723C4()
{
  sub_236D291DC(0, &qword_2688D2D00);
  if ((sub_236DBA030() & 1) == 0) {
    return 0;
  }
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.insertsByObjectID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.insertsByObjectID.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.insertsByObjectID.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.updatesByObjectID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.updatesByObjectID.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.updatesByObjectID.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.deletesByObjectID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.CoreData.ManagedObjectChangeSet.deletesByObjectID.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*HomesStore.CoreData.ManagedObjectChangeSet.deletesByObjectID.modify())()
{
  return nullsub_1;
}

void sub_236D7254C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2D48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_changedObjectID);
  int64_t v8 = v7;
  uint64_t v9 = *v2;
  if (*(void *)(*v2 + 16))
  {
    id v10 = v7;
    unint64_t v11 = sub_236D85B1C((uint64_t)v10);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);

      if (!v13) {
        goto LABEL_6;
      }
      __break(1u);
    }
  }
LABEL_6:
  uint64_t v14 = v2[2];
  if (!*(void *)(v14 + 16))
  {
    uint64_t v22 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
    sub_236D267CC((uint64_t)v6, &qword_2688D2D48);
LABEL_12:
    id v24 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = (void *)*v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_236D9A980((uint64_t)v24, v24, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v27;

    swift_bridgeObjectRelease();
    id v26 = v24;
    sub_236D98F88((uint64_t)v26, (uint64_t)&v27);

    sub_236D74524(v27);
    return;
  }
  id v15 = v8;
  unint64_t v16 = sub_236D85B1C((uint64_t)v15);
  if (v17)
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(v14 + 56);
    uint64_t v20 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
    uint64_t v21 = *(void *)(v20 - 8);
    sub_236D74564(v19 + *(void *)(v21 + 72) * v18, (uint64_t)v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v20);
  }
  else
  {
    uint64_t v20 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  }

  type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v6, 1, v20);
  sub_236D267CC((uint64_t)v6, &qword_2688D2D48);
  if (v23 == 1) {
    goto LABEL_12;
  }
  __break(1u);
}

void sub_236D72844(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_changedObjectID);
  uint64_t v5 = v4;
  if (!*(void *)(*(void *)v1 + 16))
  {

    goto LABEL_5;
  }
  sub_236D85B1C((uint64_t)v4);
  char v7 = v6;

  if ((v7 & 1) == 0)
  {
LABEL_5:
    id v8 = objc_msgSend(a1, sel_changedObjectID);
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v2 + 8);
    if (*(void *)(v10 + 16) && (unint64_t v11 = sub_236D85B1C((uint64_t)v8), (v12 & 1) != 0))
    {
      uint64_t v13 = *(void *)(v10 + 56) + 16 * v11;
      uint64_t v14 = *(void *)(v13 + 8);
      id v15 = *(id *)v13;
      swift_bridgeObjectRetain();
    }
    else
    {

      id v15 = objc_msgSend(a1, sel_changedObjectID);
      uint64_t v14 = MEMORY[0x263F8EE88];
    }
    id v30 = v15;
    uint64_t v31 = v14;
    id v16 = objc_msgSend(a1, sel_updatedProperties);
    if (v16)
    {
      char v17 = v16;
      sub_236D291DC(0, (unint64_t *)&qword_2688D2D50);
      sub_236D745C8();
      uint64_t v18 = sub_236DB9E10();

      sub_236D70028(v18);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v20 = MEMORY[0x263F8EE78];
      uint64_t v21 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v21)
      {
LABEL_11:
        uint64_t v22 = (unsigned __int8 *)(v20 + 48);
        do
        {
          uint64_t v23 = *((void *)v22 - 2);
          uint64_t v24 = *((void *)v22 - 1);
          int v25 = *v22;
          v22 += 24;
          sub_236D366A4();
          sub_236D30608((uint64_t)&v29, v23, v24, v25);
          sub_236D366AC();
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        id v15 = v30;
        uint64_t v14 = v31;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_16:
    id v26 = objc_msgSend(a1, sel_changedObjectID);
    id v27 = v15;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *(void *)(v2 + 8);
    *(void *)(v2 + 8) = 0x8000000000000000;
    sub_236D9A808((uint64_t)v27, v14, v26, isUniquelyReferenced_nonNull_native);
    *(void *)(v2 + 8) = v29;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_236D72AB4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2D48);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = (int *)v6;
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_236DB9830();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(a1, sel_changedObjectID);
  char v17 = v16;
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_236D85B1C((uint64_t)v16);
    char v19 = v18;

    if (v19)
    {
      id v20 = objc_msgSend(a1, sel_changedObjectID);
      sub_236D99078((uint64_t)v20, &v47);

      return;
    }
  }
  else
  {
  }
  id v21 = objc_msgSend(a1, sel_changedObjectID);
  sub_236D98F88((uint64_t)v21, (uint64_t)&v47);

  sub_236D74524(v47);
  id v22 = objc_msgSend(a1, sel_tombstone);
  if (v22)
  {
    uint64_t v23 = v22;
    unint64_t v24 = sub_236DB9990();
  }
  else
  {
    unint64_t v24 = sub_236D61AD0(MEMORY[0x263F8EE78]);
  }
  uint64_t v45 = 0x44496C65646F6DLL;
  unint64_t v46 = 0xE700000000000000;
  sub_236DBA210();
  if (*(void *)(v24 + 16) && (unint64_t v25 = sub_236D85998((uint64_t)&v47), (v26 & 1) != 0))
  {
    sub_236D1900C(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  sub_236D5E700((uint64_t)&v47);
  if (*((void *)&v49 + 1))
  {
    int v27 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, v27 ^ 1u, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      id v28 = objc_msgSend(a1, sel_changedObjectID);
      uint64_t v29 = v44;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(&v8[v44[5]], v15, v12);
      *(void *)id v8 = v28;
      id v30 = objc_msgSend(a1, sel_changedObjectID);
      sub_236D74564((uint64_t)v8, (uint64_t)v5);
      (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))(v5, 0, 1, v29);
      sub_236D95070((uint64_t)v5, v30);
      sub_236D74630((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return;
    }
  }
  else
  {
    sub_236D267CC((uint64_t)&v48, &qword_2688D2B40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_236D267CC((uint64_t)v11, &qword_2688D1DE0);
  if (qword_2688D12E8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_236DB9950();
  __swift_project_value_buffer(v31, (uint64_t)qword_2688D2CE8);
  id v32 = a1;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_236DB9930();
  os_log_type_t v34 = sub_236DB9F50();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    uint64_t v44 = (int *)swift_slowAlloc();
    id v47 = v44;
    *(_DWORD *)uint64_t v35 = 138412546;
    id v37 = objc_msgSend(v32, sel_changedObjectID);
    *(void *)&long long v48 = v37;
    sub_236DBA0B0();
    *uint64_t v36 = v37;

    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_236DB99A0();
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = sub_236DB6880(v38, v40, (uint64_t *)&v47);
    sub_236DBA0B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v33, v34, "Could not find model ID in tombstoned properties for deleted managed object ID %@: %s", (uint8_t *)v35, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v36, -1, -1);
    int64_t v41 = v44;
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v41, -1, -1);
    MEMORY[0x237E101A0](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_236D731C8(uint64_t a1, uint64_t a2)
{
  sub_236DBA710();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v17 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_22;
    }
    if (v9 >= v17)
    {
LABEL_20:
      swift_release();
      return sub_236DBA6F0();
    }
    unint64_t v14 = *(void *)(v3 + 8 * v9);
    if (!v14) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_18:
    int v16 = *(char *)(*(void *)(a2 + 48) + 24 * v12 + 16);
    sub_236DBA6E0();
    sub_236DBA6F0();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    if (v16 < 0) {
      sub_236DBA700();
    }
    uint64_t v10 = sub_236DBA710();
    uint64_t result = sub_236D366AC();
    v8 ^= v10;
  }
  int64_t v15 = v9 + 1;
  if (v9 + 1 >= v17) {
    goto LABEL_20;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    ++v9;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v17) {
      goto LABEL_20;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t _s11HomeKitCore10HomesStoreC0C4DataO22ManagedObjectChangeSetV19PropertyDescriptionO2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  int v4 = *((char *)a1 + 16);
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  int v7 = *((char *)a2 + 16);
  if (v4 < 0)
  {
    if (v7 < 0)
    {
      if (v3 == v6 && v2 == v5)
      {
        sub_236D366A4();
        sub_236D366A4();
        sub_236D366AC();
        sub_236D366AC();
        if ((v4 & 1) != (v7 & 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        char v12 = sub_236DBA600();
        sub_236D366A4();
        sub_236D366A4();
        sub_236D366AC();
        sub_236D366AC();
        if (v12 & 1) == 0 || ((v4 ^ v7)) {
          goto LABEL_10;
        }
      }
      char v9 = 1;
      return v9 & 1;
    }
LABEL_9:
    sub_236D366A4();
    sub_236D366A4();
    sub_236D366AC();
    sub_236D366AC();
LABEL_10:
    char v9 = 0;
    return v9 & 1;
  }
  if (v7 < 0) {
    goto LABEL_9;
  }
  if (v3 == v6 && v2 == v5) {
    char v9 = 1;
  }
  else {
    char v9 = sub_236DBA600();
  }
  sub_236D366A4();
  sub_236D366A4();
  sub_236D366AC();
  sub_236D366AC();
  return v9 & 1;
}

uint64_t type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete()
{
  uint64_t result = qword_2688D2D38;
  if (!qword_2688D2D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_236D7360C()
{
  unint64_t result = qword_2688D2D08;
  if (!qword_2688D2D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D08);
  }
  return result;
}

unint64_t sub_236D73664()
{
  unint64_t result = qword_2688D2D10;
  if (!qword_2688D2D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D10);
  }
  return result;
}

unint64_t sub_236D736BC()
{
  unint64_t result = qword_2688D2D18;
  if (!qword_2688D2D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D18);
  }
  return result;
}

unint64_t sub_236D73714()
{
  unint64_t result = qword_2688D2D20;
  if (!qword_2688D2D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D20);
  }
  return result;
}

unint64_t sub_236D7376C()
{
  unint64_t result = qword_2688D2D28;
  if (!qword_2688D2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D28);
  }
  return result;
}

uint64_t sub_236D737C0()
{
  return sub_236D73808(&qword_2688D2D30, (void (*)(uint64_t))type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete);
}

uint64_t sub_236D73808(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s22ManagedObjectChangeSetVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s22ManagedObjectChangeSetVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s22ManagedObjectChangeSetVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet()
{
  return &type metadata for HomesStore.CoreData.ManagedObjectChangeSet;
}

void *_s22ManagedObjectChangeSetV20AttributeDescriptionVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV20AttributeDescriptionVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s22ManagedObjectChangeSetV20AttributeDescriptionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s22ManagedObjectChangeSetV20AttributeDescriptionVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV20AttributeDescriptionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22ManagedObjectChangeSetV20AttributeDescriptionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.AttributeDescription()
{
  return &type metadata for HomesStore.CoreData.ManagedObjectChangeSet.AttributeDescription;
}

uint64_t sub_236D73B08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV23RelationshipDescriptionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV23RelationshipDescriptionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV23RelationshipDescriptionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22ManagedObjectChangeSetV23RelationshipDescriptionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription()
{
  return &type metadata for HomesStore.CoreData.ManagedObjectChangeSet.RelationshipDescription;
}

uint64_t _s22ManagedObjectChangeSetV19PropertyDescriptionOwxx()
{
  return sub_236D366AC();
}

uint64_t _s22ManagedObjectChangeSetV19PropertyDescriptionOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_236D366A4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV19PropertyDescriptionOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_236D366A4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_236D366AC();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV19PropertyDescriptionOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_236D366AC();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV19PropertyDescriptionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s22ManagedObjectChangeSetV19PropertyDescriptionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_236D73E14(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_236D73E20(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_236D73E30(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.PropertyDescription()
{
  return &type metadata for HomesStore.CoreData.ManagedObjectChangeSet.PropertyDescription;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Insert()
{
  return &type metadata for HomesStore.CoreData.ManagedObjectChangeSet.Insert;
}

void *_s22ManagedObjectChangeSetV6UpdateVwCP(void *a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV6UpdateVwxx(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s22ManagedObjectChangeSetV6UpdateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *_s22ManagedObjectChangeSetV6UpdateVwta(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Update()
{
  return &type metadata for HomesStore.CoreData.ManagedObjectChangeSet.Update;
}

void **_s22ManagedObjectChangeSetV6DeleteVwCP(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    int v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_236DB9830();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    unint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t _s22ManagedObjectChangeSetV6DeleteVwxx(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_236DB9830();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void **_s22ManagedObjectChangeSetV6DeleteVwcp(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  int v7 = (char *)a2 + v5;
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **_s22ManagedObjectChangeSetV6DeleteVwca(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  int v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  unint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_236DB9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *_s22ManagedObjectChangeSetV6DeleteVwtk(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_236DB9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **_s22ManagedObjectChangeSetV6DeleteVwta(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_236DB9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s22ManagedObjectChangeSetV6DeleteVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D7431C);
}

uint64_t sub_236D7431C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_236DB9830();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s22ManagedObjectChangeSetV6DeleteVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D743E0);
}

void *sub_236D743E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_236D74488()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_236D74524(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236D74564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_236D745C8()
{
  unint64_t result = qword_2688D2D58;
  if (!qword_2688D2D58)
  {
    sub_236D291DC(255, (unint64_t *)&qword_2688D2D50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D58);
  }
  return result;
}

uint64_t sub_236D74630(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HomesStore.Accessory.Category.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 0;
  char v3 = 18;
  switch(result)
  {
    case 1:
      goto LABEL_20;
    case 2:
      char v2 = 1;
      goto LABEL_20;
    case 3:
      char v2 = 2;
      goto LABEL_20;
    case 4:
      char v2 = 3;
      goto LABEL_20;
    case 5:
      char v2 = 4;
      goto LABEL_20;
    case 6:
      char v2 = 5;
      goto LABEL_20;
    case 7:
      char v2 = 6;
      goto LABEL_20;
    case 8:
      char v2 = 7;
      goto LABEL_20;
    case 9:
      char v2 = 8;
      goto LABEL_20;
    case 10:
      char v2 = 9;
      goto LABEL_20;
    case 11:
      char v2 = 10;
      goto LABEL_20;
    case 12:
      char v2 = 11;
      goto LABEL_20;
    case 13:
      char v2 = 12;
      goto LABEL_20;
    case 14:
      char v2 = 13;
      goto LABEL_20;
    case 15:
      char v2 = 14;
      goto LABEL_20;
    case 16:
      char v2 = 15;
      goto LABEL_20;
    case 17:
      char v2 = 16;
      goto LABEL_20;
    case 18:
      char v2 = 17;
LABEL_20:
      char v3 = v2;
      goto LABEL_21;
    case 19:
LABEL_21:
      *a2 = v3;
      break;
    case 20:
      *a2 = 19;
      break;
    case 21:
      *a2 = 20;
      break;
    case 22:
      *a2 = 21;
      break;
    case 23:
      *a2 = 22;
      break;
    case 24:
      *a2 = 23;
      break;
    case 25:
      *a2 = 24;
      break;
    case 26:
      *a2 = 25;
      break;
    case 27:
      *a2 = 26;
      break;
    case 28:
      *a2 = 27;
      break;
    case 29:
      *a2 = 28;
      break;
    case 30:
      *a2 = 29;
      break;
    case 31:
      *a2 = 30;
      break;
    case 32:
      *a2 = 31;
      break;
    case 33:
      *a2 = 32;
      break;
    case 34:
      *a2 = 33;
      break;
    case 35:
      *a2 = 34;
      break;
    case 36:
      *a2 = 35;
      break;
    default:
      *a2 = 36;
      break;
  }
  return result;
}

uint64_t HomesStore.Accessory.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.Accessory.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Accessory() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HomesStore.Accessory()
{
  uint64_t result = qword_2688D2DE0;
  if (!qword_2688D2DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HomesStore.Accessory.category.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for HomesStore.Accessory();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t HomesStore.Accessory.legacyUniqueIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.Accessory() + 28);
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t HomesStore.Accessory.model.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Accessory() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HomesStore.Accessory.firmwareVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Accessory() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

void static HomesStore.Accessory.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t HomesStore.Accessory.hash(into:)()
{
  sub_236DB9830();
  sub_236D75F18((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v1 = type metadata accessor for HomesStore.Accessory();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  swift_bridgeObjectRelease();
  sub_236DBA6F0();
  sub_236DB99C0();
  if (*(void *)(v0 + *(int *)(v1 + 32) + 8))
  {
    sub_236DBA700();
    swift_bridgeObjectRetain();
    sub_236DB9A50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_236DBA700();
  }
  if (!*(void *)(v0 + *(int *)(v1 + 36) + 8)) {
    return sub_236DBA700();
  }
  sub_236DBA700();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

unint64_t sub_236D74CA4()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x79726F6765746163;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 5:
      unint64_t result = 0x657261776D726966;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_236D74D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D76C28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D74D8C(uint64_t a1)
{
  unint64_t v2 = sub_236D75B88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D74DC8(uint64_t a1)
{
  unint64_t v2 = sub_236D75B88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.Accessory.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2D78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D75B88();
  sub_236DBA760();
  char v18 = 0;
  sub_236DB9830();
  sub_236D75F18(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for HomesStore.Accessory();
    char v17 = 1;
    sub_236DBA580();
    char v16 = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    char v15 = 2;
    sub_236D75BDC();
    sub_236DBA5A0();
    char v14 = 3;
    sub_236DBA5A0();
    char v13 = 4;
    sub_236DBA570();
    char v12 = 5;
    sub_236DBA570();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t HomesStore.Accessory.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.Accessory.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v40 = sub_236DB9830();
  uint64_t v37 = *(void *)(v40 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v40);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2D90);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for HomesStore.Accessory();
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D75B88();
  int64_t v41 = v10;
  uint64_t v14 = (uint64_t)v42;
  sub_236DBA750();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v42 = a1;
  char v15 = v13;
  char v49 = 0;
  uint64_t v16 = sub_236D75F18(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v17 = v39;
  sub_236DBA530();
  uint64_t v34 = v16;
  uint64_t v35 = v13;
  char v18 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  char v19 = v7;
  uint64_t v20 = v40;
  v18(v15, v19, v40);
  char v48 = 1;
  uint64_t v21 = sub_236DBA510();
  id v22 = (uint64_t *)&v35[v11[5]];
  *id v22 = v21;
  v22[1] = v23;
  char v46 = 2;
  sub_236D75C30();
  sub_236DBA530();
  v35[v11[6]] = v47;
  char v45 = 3;
  sub_236DBA530();
  uint64_t v34 = 0;
  v18(&v35[v11[7]], v5, v20);
  char v44 = 4;
  uint64_t v24 = sub_236DBA500();
  uint64_t v25 = (uint64_t)v35;
  char v26 = (uint64_t *)&v35[v11[8]];
  *char v26 = v24;
  v26[1] = v27;
  char v43 = 5;
  uint64_t v28 = sub_236DBA500();
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v17);
  uint64_t v31 = (uint64_t *)(v25 + v11[9]);
  *uint64_t v31 = v28;
  v31[1] = v30;
  sub_236D75C84(v25, v36);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return sub_236D75CE8(v25);
}

void sub_236D7566C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_236D75674@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.Accessory.init(from:)(a1, a2);
}

uint64_t sub_236D7568C(void *a1)
{
  return HomesStore.Accessory.encode(to:)(a1);
}

uint64_t sub_236D756A4()
{
  return sub_236DBA710();
}

uint64_t sub_236D756E8()
{
  return sub_236DBA710();
}

uint64_t sub_236D75760(uint64_t a1)
{
  return sub_236D75838(a1, (uint64_t)&unk_236DC06D8, &qword_2688D2E20, sub_236DB0FCC, &qword_2688D2D60);
}

uint64_t sub_236D757B4(uint64_t a1)
{
  return sub_236D75838(a1, (uint64_t)&unk_236DC06A8, &qword_2688D2E18, sub_236DB1420, &qword_2688D2D68);
}

uint64_t sub_236D75808(uint64_t a1)
{
  return sub_236D75838(a1, (uint64_t)&unk_236DC0678, &qword_2688D2E10, sub_236DB189C, &qword_2688D2D70);
}

uint64_t sub_236D75838(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_allocObject();
  uint64_t result = a4(KeyPath);
  *a5 = result;
  return result;
}

uint64_t HomesStore.Accessory.Category.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_236D758CC()
{
  return sub_236DBA710();
}

uint64_t sub_236D75914()
{
  return sub_236DBA6F0();
}

uint64_t sub_236D75944()
{
  return sub_236DBA710();
}

uint64_t sub_236D75988@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return HomesStore.Accessory.Category.init(rawValue:)(*a1, a2);
}

void sub_236D75990(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_236D759A0()
{
  return sub_236DB9B00();
}

uint64_t sub_236D75A00()
{
  return sub_236DB9AF0();
}

uint64_t _s11HomeKitCore10HomesStoreC9AccessoryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for HomesStore.Accessory();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_236DBA600(), result = 0, (v10 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6])
      || (_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0)
    {
      return 0;
    }
    uint64_t v12 = v4[8];
    char v13 = (void *)(a1 + v12);
    uint64_t v14 = *(void *)(a1 + v12 + 8);
    char v15 = (void *)(a2 + v12);
    uint64_t v16 = v15[1];
    if (v14)
    {
      if (!v16) {
        return 0;
      }
      if (*v13 != *v15 || v14 != v16)
      {
        char v18 = sub_236DBA600();
        uint64_t result = 0;
        if ((v18 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    uint64_t v19 = v4[9];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = *(void *)(a1 + v19 + 8);
    id v22 = (void *)(a2 + v19);
    uint64_t v23 = v22[1];
    if (v21)
    {
      if (v23 && (*v20 == *v22 && v21 == v23 || (sub_236DBA600() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v23)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_236D75B88()
{
  unint64_t result = qword_2688D2D80;
  if (!qword_2688D2D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D80);
  }
  return result;
}

unint64_t sub_236D75BDC()
{
  unint64_t result = qword_2688D2D88;
  if (!qword_2688D2D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D88);
  }
  return result;
}

unint64_t sub_236D75C30()
{
  unint64_t result = qword_2688D2D98;
  if (!qword_2688D2D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2D98);
  }
  return result;
}

uint64_t sub_236D75C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Accessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D75CE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.Accessory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236D75D44(void *a1)
{
  a1[1] = sub_236D75F18(&qword_2688D2DA8, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
  a1[2] = sub_236D75F18(&qword_2688D2DB0, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
  a1[3] = sub_236D75F18(&qword_2688D2DB8, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
  a1[4] = sub_236D75F18(&qword_2688D2DC0, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
  uint64_t result = sub_236D75F18(&qword_2688D2DC8, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
  a1[5] = result;
  return result;
}

uint64_t sub_236D75E40()
{
  return sub_236D75F18((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D75E88()
{
  return sub_236D75F18(&qword_2688D2DD0, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
}

uint64_t sub_236D75ED0()
{
  return sub_236D75F18(&qword_2688D1828, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
}

uint64_t sub_236D75F18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236D75F64()
{
  unint64_t result = qword_2688D2DD8;
  if (!qword_2688D2DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2DD8);
  }
  return result;
}

char *_s9AccessoryVwCP(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)&a2[v9];
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    LOBYTE(v12) = a2[v10];
    *(void *)uint64_t v11 = v14;
    *((void *)v11 + 1) = v13;
    a1[v10] = (char)v12;
    uint64_t v15 = a3[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    swift_bridgeObjectRetain();
    v8(v16, v17, v7);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = &a1[v18];
    uint64_t v21 = &a2[v18];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = &a1[v19];
    uint64_t v24 = &a2[v19];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s9AccessoryVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 28), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s9AccessoryVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (uint64_t *)(a2 + v8);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  LOBYTE(v11) = *(unsigned char *)(a2 + v9);
  *uint64_t v10 = v13;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = (_BYTE)v11;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  swift_bridgeObjectRetain();
  v7(v15, v16, v6);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)(a1 + v18);
  uint64_t v23 = (void *)(a2 + v18);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9AccessoryVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AccessoryVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v9 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t _s9AccessoryVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v7(a1 + v13, a2 + v13, v6);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AccessoryVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D765B4);
}

uint64_t sub_236D765B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s9AccessoryVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D7668C);
}

uint64_t sub_236D7668C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_236D7674C()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s9AccessoryV8CategoryOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDD) {
    goto LABEL_17;
  }
  if (a2 + 35 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 35) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 35;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x24;
  int v8 = v6 - 36;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9AccessoryV8CategoryOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 35 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 35) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDC)
  {
    unsigned int v6 = ((a2 - 221) >> 8) + 1;
    *uint64_t result = a2 + 35;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D76954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 35;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomesStore.Accessory.Category()
{
  return &type metadata for HomesStore.Accessory.Category;
}

uint64_t _s9AccessoryV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9AccessoryV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D76AE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9AccessoryV10CodingKeysOMa()
{
  return &_s9AccessoryV10CodingKeysON;
}

unint64_t sub_236D76B24()
{
  unint64_t result = qword_2688D2DF0;
  if (!qword_2688D2DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2DF0);
  }
  return result;
}

unint64_t sub_236D76B7C()
{
  unint64_t result = qword_2688D2DF8;
  if (!qword_2688D2DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2DF8);
  }
  return result;
}

unint64_t sub_236D76BD4()
{
  unint64_t result = qword_2688D2E00;
  if (!qword_2688D2E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2E00);
  }
  return result;
}

uint64_t sub_236D76C28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000236DBC2F0 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657261776D726966 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_236D76E98()
{
  unint64_t result = qword_2688D2E08;
  if (!qword_2688D2E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D2E08);
  }
  return result;
}

char *keypath_get_selector_appleMediaDevice()
{
  return sel_appleMediaDevice;
}

char *keypath_get_selector_room()
{
  return sel_room;
}

uint64_t sub_236D76F20()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  sub_236DB9A10();
  sub_236DB9F70();
  if (v0)
  {

    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_finishEncoding);
    id v3 = objc_msgSend(v1, sel_encodedData);
    uint64_t v4 = sub_236DB97A0();

    return v4;
  }
}

uint64_t sub_236D7701C(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(MEMORY[0x263F08928]);
  sub_236D1B584(a1, a2);
  id v6 = sub_236D24668();
  uint64_t result = sub_236D1B18C(a1, a2);
  if (!v2)
  {
    sub_236DB9A10();
    sub_236DB9F80();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236D770F8()
{
  return sub_236D7921C(&qword_2688D1B00, (void (*)(uint64_t))type metadata accessor for HMCDHomesTopologyModel);
}

_UNKNOWN **sub_236D77140()
{
  return &off_26E9FFE40;
}

uint64_t sub_236D7714C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E28);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v34 = *(void *)(v37 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v37);
  uint64_t v35 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (uint64_t)v30 - v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_236DBA150();
    type metadata accessor for HMCDHomeModel();
    sub_236D7921C(&qword_2688D2BD8, (void (*)(uint64_t))type metadata accessor for HMCDHomeModel);
    uint64_t result = sub_236DB9E60();
    a1 = v40;
    uint64_t v33 = v41;
    uint64_t v11 = v42;
    int64_t v12 = v43;
    unint64_t v13 = v44;
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v33 = a1 + 56;
    uint64_t v11 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v13 = v17 & v15;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v12 = 0;
  }
  v30[0] = v11;
  int64_t v31 = (unint64_t)(v11 + 64) >> 6;
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v30[1] = MEMORY[0x263F8EE50] + 8;
  uint64_t v38 = a1;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v19 = sub_236DBA1C0();
  if (v19)
  {
    uint64_t v39 = v19;
    type metadata accessor for HMCDHomeModel();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v20 = v45;
    swift_unknownObjectRelease();
    int64_t v21 = v12;
    uint64_t v22 = v13;
    while (v20)
    {
      id v45 = v20;
      sub_236D783C8(&v45, (uint64_t)v6);
      if (v2)
      {

        sub_236D2BC98();
        swift_bridgeObjectRelease();
        return v18;
      }

      if ((*v36)(v6, 1, v37) == 1)
      {
        uint64_t result = sub_236D267CC((uint64_t)v6, &qword_2688D2E28);
        int64_t v12 = v21;
        unint64_t v13 = v22;
        a1 = v38;
        if (v38 < 0) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v26 = v32;
        sub_236D792EC((uint64_t)v6, v32, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
        sub_236D792EC(v26, v35, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v18 = sub_236D55C24(0, *(void *)(v18 + 16) + 1, 1, v18);
        }
        unint64_t v28 = *(void *)(v18 + 16);
        unint64_t v27 = *(void *)(v18 + 24);
        a1 = v38;
        if (v28 >= v27 >> 1) {
          unint64_t v18 = sub_236D55C24(v27 > 1, v28 + 1, 1, v18);
        }
        *(void *)(v18 + 16) = v28 + 1;
        uint64_t result = sub_236D792EC(v35, v18+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v28, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
        int64_t v12 = v21;
        unint64_t v13 = v22;
        if (a1 < 0) {
          goto LABEL_8;
        }
      }
LABEL_11:
      if (v13)
      {
        uint64_t v22 = (v13 - 1) & v13;
        unint64_t v23 = __clz(__rbit64(v13)) | (v12 << 6);
        int64_t v21 = v12;
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return result;
        }
        if (v21 >= v31) {
          break;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v21);
        if (!v24)
        {
          int64_t v25 = v12 + 2;
          if (v12 + 2 >= v31) {
            break;
          }
          unint64_t v24 = *(void *)(v33 + 8 * v25);
          if (v24) {
            goto LABEL_22;
          }
          int64_t v25 = v12 + 3;
          if (v12 + 3 >= v31) {
            break;
          }
          unint64_t v24 = *(void *)(v33 + 8 * v25);
          if (v24) {
            goto LABEL_22;
          }
          int64_t v25 = v12 + 4;
          if (v12 + 4 >= v31) {
            break;
          }
          unint64_t v24 = *(void *)(v33 + 8 * v25);
          if (v24)
          {
LABEL_22:
            int64_t v21 = v25;
          }
          else
          {
            int64_t v21 = v12 + 5;
            if (v12 + 5 >= v31) {
              break;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v21);
            if (!v24)
            {
              int64_t v29 = v12 + 6;
              while (v31 != v29)
              {
                unint64_t v24 = *(void *)(v33 + 8 * v29++);
                if (v24)
                {
                  int64_t v21 = v29 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v22 = (v24 - 1) & v24;
        unint64_t v23 = __clz(__rbit64(v24)) + (v21 << 6);
      }
      id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v23);
    }
  }
  sub_236D2BC98();
  return v18;
}

uint64_t sub_236D77688(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_236DB9830();
  uint64_t v5 = *(void *)(v75 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v75);
  uint64_t v69 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v63 = (char *)&v57 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E50);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v60 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v57 = (uint64_t)&v57 - v16;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_236DBA150();
    type metadata accessor for HMCDAccessoryModel();
    sub_236D7921C(&qword_2688D2E30, (void (*)(uint64_t))type metadata accessor for HMCDAccessoryModel);
    uint64_t result = sub_236DB9E60();
    a1 = v78;
    uint64_t v67 = v79;
    uint64_t v19 = v80;
    uint64_t v18 = v81;
    unint64_t v20 = v82;
  }
  else
  {
    uint64_t v21 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v67 = a1 + 56;
    uint64_t v19 = ~v21;
    uint64_t v23 = -v21;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v20 = v24 & v22;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v18 = 0;
  }
  uint64_t v65 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v59 = v19;
  int64_t v66 = (unint64_t)(v19 + 64) >> 6;
  uint64_t v71 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  int64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  id v73 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v58 = v13;
  uint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  unint64_t v61 = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE50] + 8;
  uint64_t v74 = a1;
  id v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_8:
  uint64_t v26 = v18;
  unint64_t v27 = v20;
  if (a1 < 0)
  {
    do
    {
      uint64_t v31 = sub_236DBA1C0();
      if (!v31) {
        goto LABEL_44;
      }
      uint64_t v77 = v31;
      type metadata accessor for HMCDAccessoryModel();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v32 = v83;
      swift_unknownObjectRelease();
      uint64_t v30 = v26;
      uint64_t v28 = v27;
      if (!v32) {
        goto LABEL_44;
      }
LABEL_31:
      unint64_t v76 = v28;
      id v36 = objc_msgSend(v32, sel_room, v57);
      if (v36)
      {
        uint64_t v37 = v36;
        id v38 = objc_msgSend(v36, sel_modelID);

        uint64_t v39 = v69;
        sub_236DB9810();

        uint64_t v40 = *v71;
        uint64_t v41 = v39;
        uint64_t v42 = v75;
        (*v71)(v4, v41, v75);
        (*v25)(v4, 0, 1, v42);
        if ((*v68)(v4, 1, v42) != 1)
        {
          uint64_t v70 = v30;
          uint64_t v43 = v12;
          unint64_t v44 = v4;
          id v45 = v63;
          uint64_t v46 = v75;
          v40(v63, v44, v75);
          id v47 = objc_msgSend(v32, sel_modelID);
          sub_236DB9810();

          char v48 = &v11[*(int *)(v43 + 20)];
          char v49 = v45;
          uint64_t v4 = v44;
          uint64_t v12 = v43;
          uint64_t v30 = v70;
          v40(v48, v49, v46);
          int64_t v25 = v62;
          (*v73)(v11, 0, 1, v12);
          goto LABEL_36;
        }
      }
      else
      {
        (*v25)(v4, 1, 1, v75);
      }
      sub_236D267CC((uint64_t)v4, &qword_2688D1DE0);
      (*v73)(v11, 1, 1, v12);
LABEL_36:

      if ((*v72)(v11, 1, v12) != 1)
      {
        uint64_t v70 = v30;
        uint64_t v50 = v57;
        sub_236D792EC((uint64_t)v11, v57, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
        sub_236D792EC(v50, v60, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
        unint64_t v51 = v61;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a1 = v74;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v51 = sub_236D563F4(0, *(void *)(v51 + 16) + 1, 1, v51);
        }
        uint64_t v53 = v58;
        unint64_t v55 = *(void *)(v51 + 16);
        unint64_t v54 = *(void *)(v51 + 24);
        if (v55 >= v54 >> 1) {
          unint64_t v51 = sub_236D563F4(v54 > 1, v55 + 1, 1, v51);
        }
        *(void *)(v51 + 16) = v55 + 1;
        unint64_t v56 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        unint64_t v61 = v51;
        uint64_t result = sub_236D792EC(v60, v51 + v56 + *(void *)(v53 + 72) * v55, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
        uint64_t v18 = v70;
        unint64_t v20 = v76;
        goto LABEL_8;
      }
      uint64_t result = sub_236D267CC((uint64_t)v11, &qword_2688D2E50);
      uint64_t v26 = v30;
      unint64_t v27 = v76;
      a1 = v74;
    }
    while (v74 < 0);
  }
  if (v27)
  {
    uint64_t v28 = (v27 - 1) & v27;
    unint64_t v29 = __clz(__rbit64(v27)) | (v26 << 6);
    uint64_t v30 = v26;
    goto LABEL_30;
  }
  int64_t v33 = v26 + 1;
  if (!__OFADD__(v26, 1))
  {
    if (v33 < v66)
    {
      unint64_t v34 = *(void *)(v67 + 8 * v33);
      uint64_t v30 = v26 + 1;
      if (v34) {
        goto LABEL_29;
      }
      uint64_t v30 = v26 + 2;
      if (v26 + 2 >= v66) {
        goto LABEL_44;
      }
      unint64_t v34 = *(void *)(v67 + 8 * v30);
      if (v34) {
        goto LABEL_29;
      }
      uint64_t v30 = v26 + 3;
      if (v26 + 3 >= v66) {
        goto LABEL_44;
      }
      unint64_t v34 = *(void *)(v67 + 8 * v30);
      if (v34) {
        goto LABEL_29;
      }
      uint64_t v30 = v26 + 4;
      if (v26 + 4 >= v66) {
        goto LABEL_44;
      }
      unint64_t v34 = *(void *)(v67 + 8 * v30);
      if (v34)
      {
LABEL_29:
        uint64_t v28 = (v34 - 1) & v34;
        unint64_t v29 = __clz(__rbit64(v34)) + (v30 << 6);
LABEL_30:
        id v32 = *(id *)(*(void *)(a1 + 48) + 8 * v29);
        if (v32) {
          goto LABEL_31;
        }
        goto LABEL_44;
      }
      uint64_t v30 = v26 + 5;
      if (v26 + 5 < v66)
      {
        unint64_t v34 = *(void *)(v67 + 8 * v30);
        if (!v34)
        {
          uint64_t v35 = v26 + 6;
          while (v66 != v35)
          {
            unint64_t v34 = *(void *)(v67 + 8 * v35++);
            if (v34)
            {
              uint64_t v30 = v35 - 1;
              a1 = v74;
              goto LABEL_29;
            }
          }
          goto LABEL_44;
        }
        goto LABEL_29;
      }
    }
LABEL_44:
    sub_236D2BC98();
    return v61;
  }
  __break(1u);
  return result;
}

uint64_t sub_236D77E8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  uint64_t v34 = *(void *)(v37 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v37);
  uint64_t v35 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (uint64_t)v30 - v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_236DBA150();
    type metadata accessor for HMCDZoneModel();
    sub_236D7921C(&qword_2688D2E40, (void (*)(uint64_t))type metadata accessor for HMCDZoneModel);
    uint64_t result = sub_236DB9E60();
    a1 = v40;
    uint64_t v33 = v41;
    uint64_t v11 = v42;
    int64_t v12 = v43;
    unint64_t v13 = v44;
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v33 = a1 + 56;
    uint64_t v11 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v13 = v17 & v15;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v12 = 0;
  }
  v30[0] = v11;
  int64_t v31 = (unint64_t)(v11 + 64) >> 6;
  unint64_t v18 = MEMORY[0x263F8EE78];
  id v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v30[1] = MEMORY[0x263F8EE50] + 8;
  uint64_t v38 = a1;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v19 = sub_236DBA1C0();
  if (v19)
  {
    uint64_t v39 = v19;
    type metadata accessor for HMCDZoneModel();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v20 = v45;
    swift_unknownObjectRelease();
    int64_t v21 = v12;
    uint64_t v22 = v13;
    while (v20)
    {
      id v45 = v20;
      sub_236D7890C(&v45, (uint64_t)v6);
      if (v2)
      {

        sub_236D2BC98();
        swift_bridgeObjectRelease();
        return v18;
      }

      if ((*v36)(v6, 1, v37) == 1)
      {
        uint64_t result = sub_236D267CC((uint64_t)v6, &qword_2688D2E48);
        int64_t v12 = v21;
        unint64_t v13 = v22;
        a1 = v38;
        if (v38 < 0) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v26 = v32;
        sub_236D792EC((uint64_t)v6, v32, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
        sub_236D792EC(v26, v35, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v18 = sub_236D563C0(0, *(void *)(v18 + 16) + 1, 1, v18);
        }
        unint64_t v28 = *(void *)(v18 + 16);
        unint64_t v27 = *(void *)(v18 + 24);
        a1 = v38;
        if (v28 >= v27 >> 1) {
          unint64_t v18 = sub_236D563C0(v27 > 1, v28 + 1, 1, v18);
        }
        *(void *)(v18 + 16) = v28 + 1;
        uint64_t result = sub_236D792EC(v35, v18+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v28, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
        int64_t v12 = v21;
        unint64_t v13 = v22;
        if (a1 < 0) {
          goto LABEL_8;
        }
      }
LABEL_11:
      if (v13)
      {
        uint64_t v22 = (v13 - 1) & v13;
        unint64_t v23 = __clz(__rbit64(v13)) | (v12 << 6);
        int64_t v21 = v12;
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return result;
        }
        if (v21 >= v31) {
          break;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v21);
        if (!v24)
        {
          int64_t v25 = v12 + 2;
          if (v12 + 2 >= v31) {
            break;
          }
          unint64_t v24 = *(void *)(v33 + 8 * v25);
          if (v24) {
            goto LABEL_22;
          }
          int64_t v25 = v12 + 3;
          if (v12 + 3 >= v31) {
            break;
          }
          unint64_t v24 = *(void *)(v33 + 8 * v25);
          if (v24) {
            goto LABEL_22;
          }
          int64_t v25 = v12 + 4;
          if (v12 + 4 >= v31) {
            break;
          }
          unint64_t v24 = *(void *)(v33 + 8 * v25);
          if (v24)
          {
LABEL_22:
            int64_t v21 = v25;
          }
          else
          {
            int64_t v21 = v12 + 5;
            if (v12 + 5 >= v31) {
              break;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v21);
            if (!v24)
            {
              int64_t v29 = v12 + 6;
              while (v31 != v29)
              {
                unint64_t v24 = *(void *)(v33 + 8 * v29++);
                if (v24)
                {
                  int64_t v21 = v29 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v22 = (v24 - 1) & v24;
        unint64_t v23 = __clz(__rbit64(v24)) + (v21 << 6);
      }
      id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v23);
    }
  }
  sub_236D2BC98();
  return v18;
}

uint64_t sub_236D783C8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *a1;
  id v8 = objc_msgSend(*a1, sel_accessories);
  type metadata accessor for HMCDAccessoryModel();
  sub_236D7921C(&qword_2688D2E30, (void (*)(uint64_t))type metadata accessor for HMCDAccessoryModel);
  uint64_t v9 = sub_236DB9E10();

  uint64_t v10 = sub_236D77688(v9);
  uint64_t v42 = v2;
  uint64_t v43 = v10;
  swift_bridgeObjectRelease();
  id v44 = v7;
  id v11 = objc_msgSend(v7, sel_rooms);
  type metadata accessor for HMCDRoomModel();
  sub_236D7921C(&qword_2688D1B38, (void (*)(uint64_t))type metadata accessor for HMCDRoomModel);
  uint64_t v12 = sub_236DB9E10();

  unint64_t v48 = v12 & 0xC000000000000001;
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = sub_236DBA190();
    if (v13) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
LABEL_23:
    id v35 = v44;
    id v36 = objc_msgSend(v44, sel_zones);
    type metadata accessor for HMCDZoneModel();
    sub_236D7921C(&qword_2688D2E40, (void (*)(uint64_t))type metadata accessor for HMCDZoneModel);
    uint64_t v37 = sub_236DB9E10();

    uint64_t v38 = sub_236D77E8C(v37);
    swift_bridgeObjectRelease();
    id v39 = objc_msgSend(v35, sel_modelID);
    uint64_t v40 = v45;
    sub_236DB9810();

    uint64_t v41 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
    *(void *)(v40 + v41[5]) = v43;
    *(void *)(v40 + v41[6]) = v17;
    *(void *)(v40 + v41[7]) = v38;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v41 - 1) + 56))(v40, 0, 1, v41);
  }
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_236D565B0(0, v13 & ~(v13 >> 63), 0);
  if (v48)
  {
    uint64_t result = sub_236DBA140();
    char v16 = 1;
  }
  else
  {
    uint64_t result = sub_236D79264(v12);
    char v16 = v18 & 1;
  }
  uint64_t v50 = result;
  uint64_t v51 = v15;
  char v52 = v16;
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v12 < 0) {
      uint64_t v19 = v12;
    }
    uint64_t v46 = v19;
    do
    {
      while (1)
      {
        int64_t v25 = v50;
        uint64_t v26 = v51;
        char v27 = v52;
        sub_236D78F5C(v50, v51, v52, v12);
        int64_t v29 = v28;
        id v30 = objc_msgSend(v28, sel_modelID);
        sub_236DB9810();

        uint64_t v31 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236D565B0(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v53;
        }
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v32 = *(void *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_236D565B0(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v53;
        }
        *(void *)(v31 + 16) = v33 + 1;
        uint64_t result = sub_236D791B4((uint64_t)v6, v31+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v33);
        if (v48) {
          break;
        }
        int64_t v20 = sub_236D78E78(v25, v26, v27, v12);
        uint64_t v22 = v21;
        char v24 = v23;
        sub_236D48470(v25, v26, v27);
        uint64_t v50 = v20;
        uint64_t v51 = v22;
        char v52 = v24 & 1;
        if (!--v13) {
          goto LABEL_22;
        }
      }
      if ((v27 & 1) == 0) {
        goto LABEL_25;
      }
      if (sub_236DBA160()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E38);
      uint64_t v34 = (void (*)(unsigned char *, void))sub_236DB9E30();
      sub_236DBA1E0();
      v34(v49, 0);
      --v13;
    }
    while (v13);
LABEL_22:
    sub_236D48470(v50, v51, v52);
    swift_bridgeObjectRelease();
    uint64_t v17 = v53;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236D7890C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v36 = *a1;
  id v7 = objc_msgSend(v36, sel_rooms);
  type metadata accessor for HMCDRoomModel();
  sub_236D7921C(&qword_2688D1B38, (void (*)(uint64_t))type metadata accessor for HMCDRoomModel);
  uint64_t v8 = sub_236DB9E10();

  unint64_t v41 = v8 & 0xC000000000000001;
  if ((v8 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = sub_236DBA190();
    if (v9) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
LABEL_23:
    id v33 = objc_msgSend(v36, sel_modelID);
    uint64_t v34 = v37;
    sub_236DB9810();

    uint64_t v35 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
    *(void *)(v34 + *(int *)(v35 + 20)) = v13;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v46 = MEMORY[0x263F8EE78];
  sub_236D565B0(0, v9 & ~(v9 >> 63), 0);
  if (v41)
  {
    uint64_t result = sub_236DBA140();
    char v12 = 1;
  }
  else
  {
    uint64_t result = sub_236D79264(v8);
    char v12 = v14 & 1;
  }
  uint64_t v43 = result;
  uint64_t v44 = v11;
  char v45 = v12;
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v8 < 0) {
      uint64_t v15 = v8;
    }
    uint64_t v39 = v15;
    uint64_t v40 = v8;
    uint64_t v38 = v6;
    do
    {
      while (1)
      {
        int64_t v23 = v43;
        uint64_t v24 = v44;
        char v25 = v45;
        sub_236D78F5C(v43, v44, v45, v8);
        char v27 = v26;
        id v28 = objc_msgSend(v26, sel_modelID);
        sub_236DB9810();

        uint64_t v29 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236D565B0(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v46;
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_236D565B0(v30 > 1, v31 + 1, 1);
          uint64_t v29 = v46;
        }
        *(void *)(v29 + 16) = v31 + 1;
        uint64_t result = sub_236D791B4((uint64_t)v6, v29+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v31);
        if (v41) {
          break;
        }
        uint64_t v8 = v40;
        int64_t v16 = sub_236D78E78(v23, v24, v25, v40);
        uint64_t v18 = v17;
        uint64_t v19 = v4;
        char v21 = v20;
        sub_236D48470(v23, v24, v25);
        uint64_t v43 = v16;
        uint64_t v44 = v18;
        char v22 = v21 & 1;
        uint64_t v4 = v19;
        uint64_t v6 = v38;
        char v45 = v22;
        if (!--v9) {
          goto LABEL_22;
        }
      }
      uint64_t v8 = v40;
      if ((v25 & 1) == 0) {
        goto LABEL_25;
      }
      if (sub_236DBA160()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E38);
      unint64_t v32 = (void (*)(unsigned char *, void))sub_236DB9E30();
      sub_236DBA1E0();
      v32(v42, 0);
      --v9;
    }
    while (v9);
LABEL_22:
    sub_236D48470(v43, v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v13 = v46;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236D78D34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  id v7 = objc_msgSend(a1, sel_homes);
  type metadata accessor for HMCDHomeModel();
  sub_236D7921C(&qword_2688D2BD8, (void (*)(uint64_t))type metadata accessor for HMCDHomeModel);
  uint64_t v8 = sub_236DB9E10();

  uint64_t v9 = sub_236D7714C(v8);
  swift_bridgeObjectRelease();

  *(void *)(a3 + *(int *)(a2 + 20)) = v9;
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v10(a3, 0, 1, a2);
}

int64_t sub_236D78E78(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_236D78F5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x237E0F470](a1, a2, v7);
      type metadata accessor for HMCDRoomModel();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_236DBA170() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_236DBA180();
  type metadata accessor for HMCDRoomModel();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_236DBA020();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_236DBA030();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_236DBA030();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);
  id v16 = v15;
}

uint64_t sub_236D791B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D7921C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D79264(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_236D792EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of ComposableModel.init(source:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_236D79380()
{
  unint64_t result = qword_2688D1AF8;
  if (!qword_2688D1AF8)
  {
    type metadata accessor for HMCDUserModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AF8);
  }
  return result;
}

_UNKNOWN **sub_236D793D8()
{
  return &off_26E9FFE58;
}

uint64_t sub_236D793E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  id v7 = objc_msgSend(a1, sel_handle);
  uint64_t v8 = sub_236DB9A10();
  uint64_t v10 = v9;

  char v11 = (uint64_t *)(a3 + *(int *)(a2 + 20));
  *char v11 = v8;
  v11[1] = v10;
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v12(a3, 0, 1, a2);
}

unint64_t sub_236D794C0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBEEE0;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 0x656C646E6168;
  *(void *)(inited + 72) = 0xE600000000000000;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE748 = result;
  return result;
}

uint64_t sub_236D79564()
{
  if (qword_2688D1308 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_236D795C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9C90();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_236DB9C80();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_236D267CC(a1, &qword_2688D15B0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_236DB9C30();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t HomesStore.AnyChanges.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  sub_236DB9D00();
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for HomesStore.AnyChanges(0) + 20));
  *(void *)(a1 + *(int *)(type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0) + 20)) = v3;
  return swift_retain();
}

uint64_t type metadata accessor for HomesStore.AnyChanges(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D2F08);
}

uint64_t type metadata accessor for HomesStore.AnyChanges.AsyncIterator(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D2F20);
}

uint64_t sub_236D79814()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D2E58);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D2E58);
  return sub_236DB9940();
}

uint64_t HomesStore.__allocating_init()()
{
  unsigned __int8 v1 = 0;
  return sub_236D7EECC(&v1);
}

uint64_t HomesStore.__allocating_init(dataSourceType:)(unsigned __int8 *a1)
{
  return sub_236D7EECC(a1);
}

uint64_t sub_236D798D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_236DB98A0();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D79998, 0, 0);
}

uint64_t sub_236D79998()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = (void *)v0[6];
  uint64_t v3 = v0[7];
  sub_236DB9FA0();
  v0[10] = sub_236D7EFC0();
  uint64_t v5 = (void *)sub_236DBA080();
  sub_236DB9890();
  sub_236DB9870();

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[11] = v6;
  v0[12] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  uint64_t v7 = v4[5];
  uint64_t v8 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v7);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 16)
                                                                                     + **(int **)(v8 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_236D79B34;
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[5];
  uint64_t v13 = v0[2];
  uint64_t v12 = v0[3];
  return v15(v13, v12, v10, v11, v7, v8);
}

uint64_t sub_236D79B34(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    return MEMORY[0x270FA2498](sub_236D79C88, 0, 0);
  }
}

uint64_t sub_236D79C88()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  sub_236DB9F90();
  uint64_t v4 = (void *)sub_236DBA080();
  sub_236DB9890();
  sub_236DB9870();

  v1(v2, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v6 = v0[14];
  return v5(v6);
}

uint64_t sub_236D79D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_236DB98A0();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D79E24, 0, 0);
}

uint64_t sub_236D79E24()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = (void *)v0[6];
  uint64_t v3 = v0[7];
  sub_236DB9FA0();
  v0[10] = sub_236D7EFC0();
  uint64_t v5 = (void *)sub_236DBA080();
  sub_236DB9890();
  sub_236DB9870();

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[11] = v6;
  v0[12] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  uint64_t v7 = v4[5];
  uint64_t v8 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v7);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 40)
                                                                                     + **(int **)(v8 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_236D79FC0;
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[2];
  uint64_t v13 = v0[3];
  return v15(v12, v13, v10, v11, v7, v8);
}

uint64_t sub_236D79FC0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_236D7A10C, 0, 0);
  }
}

uint64_t sub_236D7A10C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  sub_236DB9F90();
  uint64_t v4 = (void *)sub_236DBA080();
  sub_236DB9890();
  sub_236DB9870();

  v1(v2, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_236D7A1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_236DB98A0();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D7A2A4, 0, 0);
}

uint64_t sub_236D7A2A4()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = (void *)v0[6];
  uint64_t v3 = v0[7];
  sub_236DB9FA0();
  v0[10] = sub_236D7EFC0();
  uint64_t v5 = (void *)sub_236DBA080();
  sub_236DB9890();
  sub_236DB9870();

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[11] = v6;
  v0[12] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  uint64_t v7 = v4[5];
  uint64_t v8 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v7);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 24)
                                                                                     + **(int **)(v8 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_236D7A440;
  uint64_t v10 = v0[4];
  uint64_t v11 = v0[5];
  uint64_t v13 = v0[2];
  uint64_t v12 = v0[3];
  return v15(v13, v12, v10, v11, v7, v8);
}

uint64_t sub_236D7A440(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    return MEMORY[0x270FA2498](sub_236D7A594, 0, 0);
  }
}

uint64_t sub_236D7A594()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  sub_236DB9F90();
  uint64_t v4 = (void *)sub_236DBA080();
  sub_236DB9890();
  sub_236DB9870();

  v1(v2, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v6 = v0[14];
  return v5(v6);
}

uint64_t sub_236D7A668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v2 - 8);
  char v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1930);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v26 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  uint64_t v29 = *(void *)(v15 - 8);
  uint64_t v30 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F680], v4);
  sub_236DB9D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v18 = v28 + 16;
  uint64_t v19 = sub_236DB9C90();
  uint64_t v20 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v27, 1, 1, v19);
  sub_236D1B32C(v18, (uint64_t)v33);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  char v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v31;
  sub_236D1B1E4(v33, (uint64_t)(v22 + 40));
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v22[v21], v12, v8);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_236D795C0(v20, (uint64_t)&unk_2688D2550, (uint64_t)v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  uint64_t v24 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v32, v17, v30);
  uint64_t result = type metadata accessor for HomesStore.AnyChanges(0);
  *(void *)(v24 + *(int *)(result + 20)) = v23;
  return result;
}

uint64_t sub_236D7AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  v6[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3050);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  v6[18] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AnyModelStateChange(0);
  v6[22] = v8;
  v6[23] = *(void *)(v8 - 8);
  v6[24] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3058);
  v6[25] = v9;
  v6[26] = *(void *)(v9 - 8);
  v6[27] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  v6[28] = v10;
  v6[29] = *(void *)(v10 - 8);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D7ACBC, 0, 0);
}

uint64_t sub_236D7ACBC()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[10];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_236D56478(0, v2, 0);
    uint64_t v3 = v16;
    uint64_t v4 = v1 + 40;
    do
    {
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 48))(&v17);
      char v5 = v17;
      unint64_t v7 = *(void *)(v16 + 16);
      unint64_t v6 = *(void *)(v16 + 24);
      if (v7 >= v6 >> 1) {
        sub_236D56478(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v16 + 16) = v7 + 1;
      *(unsigned char *)(v16 + v7 + 32) = v5;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = (void *)v0[11];
  uint64_t v9 = sub_236D36630(v3);
  swift_bridgeObjectRelease();
  uint64_t v10 = v8[3];
  uint64_t v11 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v10);
  uint64_t v12 = sub_236D7E558(v9);
  v0[32] = v12;
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 32) + **(int **)(v11 + 32));
  uint64_t v13 = (void *)swift_task_alloc();
  v0[33] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_236D7AEA8;
  return v15(v12, v10, v11);
}

uint64_t sub_236D7AEA8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_236D7BA30;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_236D7AFC4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_236D7AFC4()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_236D7B0D0;
  uint64_t v5 = v0[30];
  uint64_t v6 = v0[10];
  return v8(v5, v6, v2, v3);
}

uint64_t sub_236D7B0D0()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_236D7BB40;
  }
  else
  {
    uint64_t v2 = sub_236D7B1EC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D7B1EC()
{
  uint64_t v1 = *(void *)(v0 + 272);
  (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 240), *(void *)(v0 + 224));
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v0 + 272);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8EE78];
LABEL_27:
    uint64_t v37 = *(void *)(v0 + 216);
    uint64_t v39 = *(void *)(v0 + 200);
    uint64_t v38 = *(void *)(v0 + 208);
    **(void **)(v0 + 192) = v25;
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 304) = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
    sub_236DB9D80();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    *(void *)(v0 + 312) = v40;
    *(void *)(v0 + 320) = (v38 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40(v37, v39);
    sub_236DB9D00();
    unint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v41;
    *unint64_t v41 = v0;
    v41[1] = sub_236D7B6E4;
    uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = v0 + 64;
    return MEMORY[0x270FA20F8](isUniquelyReferenced_nonNull_native, v5, v6, v7, v8);
  }
  uint64_t v54 = v0 + 16;
  uint64_t v48 = *(void *)(v0 + 104);
  uint64_t v55 = MEMORY[0x263F8EE78];
  sub_236D56534(0, v2, 0);
  uint64_t isUniquelyReferenced_nonNull_native = sub_236D7E9D8(v3);
  unint64_t v9 = isUniquelyReferenced_nonNull_native;
  uint64_t v10 = 0;
  uint64_t v11 = v3 + 64;
  char v12 = *(unsigned char *)(v3 + 32);
  uint64_t v43 = v3 + 88;
  int64_t v44 = v2;
  uint64_t v45 = v0;
  uint64_t v46 = v5;
  uint64_t v49 = v3;
  uint64_t v47 = v3 + 64;
  while ((v9 & 0x8000000000000000) == 0 && (uint64_t)v9 < 1 << v12)
  {
    if ((*(void *)(v11 + 8 * (v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_32;
    }
    unint64_t v51 = v9 >> 6;
    uint64_t v50 = v10;
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v52 = v15 + *(int *)(v48 + 48);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v53 = *(void *)(v0 + 112);
    uint64_t v18 = *(void *)(v3 + 48);
    uint64_t v19 = sub_236DB9830();
    uint64_t v20 = *(void *)(v19 - 8);
    unint64_t v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16);
    v21(v15, v18 + *(void *)(v20 + 72) * v9, v19);
    sub_236D1B32C(*(void *)(v3 + 56) + 40 * v9, v52);
    v21(v16, v15, v19);
    sub_236D1B32C(v52, v16 + *(int *)(v48 + 48));
    sub_236D26768(v16, v17, &qword_2688D3050);
    sub_236D267CC(v15, &qword_2688D3050);
    uint64_t v22 = *(int *)(v48 + 48);
    uint64_t v23 = (long long *)(v53 + v22);
    uint64_t v24 = v17 + v22;
    v21(v53, v17, v19);
    sub_236D1B32C(v24, (uint64_t)v23);
    sub_236D1B1E4(v23, v54);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v53, v19);
    sub_236D267CC(v17, &qword_2688D3050);
    uint64_t v25 = v55;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = sub_236D56534(0, *(void *)(v55 + 16) + 1, 1);
      uint64_t v25 = v55;
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    uint64_t v3 = v49;
    if (v27 >= v26 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = sub_236D56534(v26 > 1, v27 + 1, 1);
      uint64_t v25 = v55;
    }
    *(void *)(v25 + 16) = v27 + 1;
    uint64_t v28 = v25 + 40 * v27;
    long long v29 = *(_OWORD *)v54;
    long long v30 = *(_OWORD *)(v54 + 16);
    *(void *)(v28 + 64) = *(void *)(v54 + 32);
    *(_OWORD *)(v28 + 32) = v29;
    *(_OWORD *)(v28 + 48) = v30;
    char v12 = *(unsigned char *)(v49 + 32);
    unint64_t v13 = 1 << v12;
    if ((uint64_t)v9 >= 1 << v12) {
      goto LABEL_33;
    }
    uint64_t v11 = v47;
    unint64_t v31 = v9 >> 6;
    uint64_t v32 = *(void *)(v47 + 8 * v51);
    if ((v32 & (1 << v9)) == 0) {
      goto LABEL_34;
    }
    uint64_t v5 = v46;
    if (*(_DWORD *)(v49 + 36) != v46) {
      goto LABEL_35;
    }
    unint64_t v33 = v32 & (-2 << (v9 & 0x3F));
    if (v33)
    {
      unint64_t v13 = __clz(__rbit64(v33)) | v9 & 0xFFFFFFFFFFFFFFC0;
      int64_t v14 = v44;
      uint64_t v0 = v45;
    }
    else
    {
      unint64_t v34 = v51 + 1;
      unint64_t v35 = (v13 + 63) >> 6;
      int64_t v14 = v44;
      uint64_t v0 = v45;
      if (v51 + 1 < v35)
      {
        unint64_t v36 = *(void *)(v47 + 8 * v34);
        if (!v36)
        {
          unint64_t v34 = v51 + 2;
          if (v51 + 2 >= v35) {
            goto LABEL_4;
          }
          unint64_t v36 = *(void *)(v47 + 8 * v34);
          if (!v36)
          {
            while (v35 - 3 != v31)
            {
              unint64_t v36 = *(void *)(v43 + 8 * v31++);
              if (v36)
              {
                unint64_t v34 = v31 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v13 = __clz(__rbit64(v36)) + (v34 << 6);
      }
    }
LABEL_4:
    uint64_t v10 = v50 + 1;
    unint64_t v9 = v13;
    if (v50 + 1 == v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return MEMORY[0x270FA20F8](isUniquelyReferenced_nonNull_native, v5, v6, v7, v8);
}

uint64_t sub_236D7B6E4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_236D7BC48;
  }
  else {
    uint64_t v1 = sub_236D7B7F4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_236D7B7F4()
{
  uint64_t v1 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[23] + 48))(v1, 1, v0[22]) == 1)
  {
    uint64_t v2 = v0[31];
    uint64_t v3 = v0[28];
    uint64_t v4 = v0[29];
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    v0[9] = 0;
    sub_236DB9D90();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v8 = v0[27];
    uint64_t v9 = v0[25];
    sub_236D80D14(v1, v0[24], type metadata accessor for AnyModelStateChange);
    sub_236DB9D80();
    v7(v8, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[41] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_236D7B6E4;
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];
    return MEMORY[0x270FA20F8](v11, 0, 0, v12, v0 + 8);
  }
}

uint64_t sub_236D7BA30()
{
  swift_release();
  v0[7] = v0[35];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  sub_236DB9D90();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D7BB40()
{
  v0[7] = v0[37];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  sub_236DB9D90();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D7BC48()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v0[7] = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  sub_236DB9D90();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_236D7BD88(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_236DB98E0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_236DB98A0();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_236DB9950();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v6 = sub_236DB98D0();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D7BF78, 0, 0);
}

uint64_t sub_236D7BF78()
{
  uint64_t v38 = v0;
  if (qword_2688D1310 != -1) {
    swift_once();
  }
  uint64_t v1 = __swift_project_value_buffer(v0[13], (uint64_t)qword_2688D2E58);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_236DB9930();
  os_log_type_t v3 = sub_236DB9F30();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v37 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_236DB9830();
    sub_236D7F1C0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
    uint64_t v36 = v1;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_236DB99A0();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[2] = sub_236DB6880(v6, v8, &v37);
    sub_236DBA0B0();
    swift_bridgeObjectRelease_n();
    uint64_t v1 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236D14000, v2, v3, "Fetching models with model map: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v5, -1, -1);
    MEMORY[0x237E101A0](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = v0[14];
  uint64_t v9 = v0[15];
  uint64_t v11 = v0[13];
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_236D2FBE8(v12);
  uint64_t v14 = sub_236D7E558(v13);
  v0[19] = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v1, v11);
  sub_236DB98B0();
  sub_236DB9890();
  uint64_t v15 = sub_236DB98C0();
  os_signpost_type_t v16 = sub_236DB9FA0();
  if (sub_236DBA070())
  {
    uint64_t v17 = v0[11];
    uint64_t v18 = v0[8];
    uint64_t v19 = v0[9];
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    unint64_t v21 = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v20(v17, v0[12], v18);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v23 = sub_236DB9880();
    _os_signpost_emit_with_name_impl(&dword_236D14000, v15, v16, v23, "FetchModelsByTypeMap", "", v22, 2u);
    MEMORY[0x237E101A0](v22, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  else
  {
    uint64_t v24 = v0[9];

    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    unint64_t v21 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[12];
  uint64_t v27 = v0[8];
  uint64_t v28 = v0[9];
  long long v29 = (void *)v0[4];
  v0[20] = v20;
  v0[21] = v21;
  v20(v25, v26, v27);
  sub_236DB9910();
  swift_allocObject();
  v0[22] = sub_236DB9900();
  long long v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v0[23] = v30;
  v0[24] = (v28 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v30(v26, v27);
  uint64_t v31 = v29[5];
  uint64_t v32 = v29[6];
  __swift_project_boxed_opaque_existential_1(v29 + 2, v31);
  unint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 + 32) + **(int **)(v32 + 32));
  unint64_t v33 = (void *)swift_task_alloc();
  v0[25] = v33;
  *unint64_t v33 = v0;
  v33[1] = sub_236D7C424;
  return v35(v14, v31, v32);
}

uint64_t sub_236D7C424(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 208) = a1;
  *(void *)(v3 + 216) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1) {
    uint64_t v4 = sub_236D7C954;
  }
  else {
    uint64_t v4 = sub_236D7C560;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_236D7C560()
{
  uint64_t v32 = v0;
  uint64_t v1 = (void *)(v0 + 80);
  uint64_t v2 = sub_236DB98C0();
  sub_236DB98F0();
  os_signpost_type_t v3 = sub_236DB9F90();
  if (sub_236DBA070())
  {
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 40);
    swift_retain();
    sub_236DB9920();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x263F90238])
    {
      unint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
      unint64_t v7 = "";
    }
    uint64_t v1 = (void *)(v0 + 88);
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 64);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 160))(*(void *)(v0 + 88), v9, v10);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_signpost_id_t v12 = sub_236DB9880();
    _os_signpost_emit_with_name_impl(&dword_236D14000, v2, v3, v12, "FetchModelsByTypeMap", v7, v11, 2u);
    MEMORY[0x237E101A0](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
  }
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v15 = *(void *)(v0 + 24);
  (*(void (**)(void, void))(v0 + 184))(*v1, *(void *)(v0 + 64));
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v14;
  uint64_t v17 = sub_236D7EA60(v15, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_236D80CF8, v16);
  if (v13)
  {
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 128);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    uint64_t v23 = v17;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (*(void *)(v23 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1770);
      uint64_t v24 = sub_236DBA490();
    }
    else
    {
      uint64_t v24 = MEMORY[0x263F8EE80];
    }
    uint64_t v31 = v24;
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_236D23A54(v25, 1, &v31);
    uint64_t v27 = *(void *)(v0 + 136);
    uint64_t v26 = *(void *)(v0 + 144);
    uint64_t v28 = *(void *)(v0 + 128);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v29 = v31;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v30(v29);
  }
}

uint64_t sub_236D7C954()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_236D7CA28(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  if (*(void *)(a5 + 16) && (int v9 = *a4, v10 = sub_236D8584C(a3), (v11 & 1) != 0))
  {
    sub_236D1B32C(*(void *)(a5 + 56) + 40 * v10, (uint64_t)v22);
    sub_236D1B1E4(v22, (uint64_t)a2);
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v12);
    sub_236D2BCA0(v12, v13);
    if (LOBYTE(v22[0]) == v9)
    {
      uint64_t v14 = sub_236DB9830();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a3, v14);
    }
    else
    {
      type metadata accessor for HomesStore.Error(0);
      sub_236D7F1C0(&qword_2688D2710, (void (*)(uint64_t))type metadata accessor for HomesStore.Error);
      swift_allocError();
      uint64_t v20 = v19;
      uint64_t v21 = sub_236DB9830();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, a3, v21);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
    }
  }
  else
  {
    type metadata accessor for HomesStore.Error(0);
    sub_236D7F1C0(&qword_2688D2710, (void (*)(uint64_t))type metadata accessor for HomesStore.Error);
    swift_allocError();
    uint64_t v17 = v16;
    uint64_t v18 = sub_236DB9830();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a3, v18);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t HomesStore.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t HomesStore.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t HomesStore.AnyChanges.AsyncIterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  *uint64_t v4 = v2;
  v4[1] = sub_236D7CDA4;
  return MEMORY[0x270FA2100](a1, v5);
}

uint64_t sub_236D7CDA4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_236D7CED4, 0, 0);
  }
}

uint64_t sub_236D7CED4()
{
  if (sub_236DB9D60())
  {
    type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0);
    sub_236DB9D50();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D7CF6C(uint64_t a1, uint64_t a2)
{
  v3[2] = v2;
  v3[3] = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v3[4] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  *uint64_t v5 = v3;
  v5[1] = sub_236D7D024;
  return MEMORY[0x270FA2100](a1, v6);
}

uint64_t sub_236D7D024()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_236D7D154, 0, 0);
  }
}

uint64_t sub_236D7D154()
{
  if (sub_236DB9D60()) {
    sub_236DB9D50();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D7D1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2688D35B8 + dword_2688D35B8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_236D7D2B0;
  return v10(a1, a2, a3);
}

uint64_t sub_236D7D2B0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 16) = v0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_236D7D3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  sub_236DB9D00();
  uint64_t v5 = *(void *)(v2 + *(int *)(a1 + 20));
  *(void *)(a2 + *(int *)(type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0) + 20)) = v5;
  swift_retain();
  return sub_236D7FAF8(v2, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t HomesStore.Changes.AsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(void *)(a2 + 16);
  v3[5] = *(void *)(a2 + 24);
  v3[6] = type metadata accessor for ModelStateChange();
  uint64_t v4 = sub_236DBA090();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  uint64_t v5 = swift_task_alloc();
  v3[10] = v5;
  v3[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AnyModelStateChange(0);
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[16] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  *uint64_t v7 = v3;
  v7[1] = sub_236D7D630;
  return MEMORY[0x270FA2100](v5, v8);
}

uint64_t sub_236D7D630()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D7DAA8;
  }
  else {
    uint64_t v2 = sub_236D7D744;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D7D744()
{
  if (sub_236DB9D60())
  {
    type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0);
    sub_236DB9D50();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  sub_236D26768(v0[10], v3, &qword_2688D18E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[6];
    uint64_t v5 = v0[2];
    sub_236D267CC(v0[11], &qword_2688D18E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v5, 1, 1, v4);
  }
  else
  {
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[15];
    uint64_t v8 = v0[9];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v11 = v0[4];
    sub_236D80D14(v0[11], v7, type metadata accessor for AnyModelStateChange);
    sub_236D7F004(v7, v6);
    sub_236DAC268(v6, v11, v10, v8);
    uint64_t v12 = *(void *)(v9 - 8);
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
    uint64_t v14 = v0[15];
    uint64_t v15 = v0[9];
    if (v13 == 1)
    {
      (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
      type metadata accessor for HomesStore.Error(0);
      sub_236D7F1C0(&qword_2688D2710, (void (*)(uint64_t))type metadata accessor for HomesStore.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_236D7FAF8(v14, type metadata accessor for AnyModelStateChange);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v16 = (uint64_t (*)(void))v0[1];
      goto LABEL_9;
    }
    uint64_t v17 = v0[6];
    uint64_t v18 = v0[2];
    sub_236D7FAF8(v0[15], type metadata accessor for AnyModelStateChange);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v18, v15, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
LABEL_9:
  return v16();
}

uint64_t sub_236D7DAA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D7DB44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_236D17ED0;
  return HomesStore.Changes.AsyncIterator.next()(a1, a2);
}

uint64_t sub_236D7DBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_236D7DCCC;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6);
}

uint64_t sub_236D7DCCC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t HomesStore.Changes.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  sub_236DB9D00();
  *(void *)&v6[*(int *)(v4 + 28)] = *(void *)(v1
                                                + *(int *)(type metadata accessor for HomesStore.AnyChanges(0) + 20));
  sub_236D80D14((uint64_t)v6, a1, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
  return swift_retain();
}

uint64_t sub_236D7DEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  HomesStore.Changes.makeAsyncIterator()(a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t HomesStore.changes<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v41 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1930);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  uint64_t v10 = *(void *)(v36 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v36);
  unint64_t v34 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v32 = (char *)&v31 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for HomesStore.AnyChanges(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2850);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_236DBE190;
  *(void *)(v20 + 32) = v35;
  *(void *)(v20 + 40) = a2;
  type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F680], v6);
  uint64_t v21 = v32;
  sub_236DB9D70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v22 = v38 + 16;
  uint64_t v23 = sub_236DB9C90();
  uint64_t v24 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v37, 1, 1, v23);
  sub_236D1B32C(v22, (uint64_t)v42);
  uint64_t v25 = v34;
  uint64_t v26 = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v34, v21, v36);
  unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0;
  *((void *)v28 + 4) = v20;
  sub_236D1B1E4(v42, (uint64_t)(v28 + 40));
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v28[v27], v25, v26);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_236D795C0(v24, (uint64_t)&unk_2688D2EA8, (uint64_t)v28);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v26);
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v19, v33, v40);
  swift_bridgeObjectRelease();
  *(void *)&v19[*(int *)(v17 + 28)] = v29;
  return sub_236D80D14((uint64_t)v19, v41, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D7E388(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_236D423FC;
  return v6(a1);
}

void *sub_236D7E464(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3038);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_236D7E630((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_236D2BC98();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_236D7E558(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28A0);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_236D7E840(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_236D2BC98();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_236D7E630(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_236D1B32C(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_236D1B1E4(v21, (uint64_t)v22);
    uint64_t result = sub_236D1B1E4(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_236D7E840(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_236D7E9D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_236D7EA60(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2738);
  uint64_t v6 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v43 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v51 = (char *)&v43 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1748);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  int64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (!v14) {
    return v15;
  }
  uint64_t v61 = MEMORY[0x263F8EE78];
  sub_236D56448(0, v14, 0);
  uint64_t result = sub_236D7E9D8(a1);
  uint64_t v18 = result;
  uint64_t v19 = 0;
  uint64_t v20 = a1 + 64;
  char v21 = *(unsigned char *)(a1 + 32);
  uint64_t v43 = a1 + 80;
  int64_t v44 = v14;
  uint64_t v47 = a1;
  uint64_t v48 = v13;
  uint64_t v45 = v17;
  uint64_t v46 = a1 + 64;
  uint64_t v22 = (uint64_t)v51;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << v21)
  {
    unint64_t v25 = (unint64_t)v18 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_28;
    }
    uint64_t v57 = v19;
    uint64_t v58 = 1 << v18;
    uint64_t v26 = v54;
    uint64_t v59 = *(int *)(v54 + 48);
    uint64_t v27 = *(void *)(a1 + 48);
    uint64_t v28 = sub_236DB9830();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v60 = v4;
    long long v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v30(v22, v27 + *(void *)(v29 + 72) * v18, v28);
    LOBYTE(v27) = *(unsigned char *)(*(void *)(a1 + 56) + v18);
    *(unsigned char *)(v22 + v59) = v27;
    uint64_t v31 = v52;
    v30((uint64_t)v52, v22, v28);
    v31[*(int *)(v26 + 48)] = v27;
    uint64_t v32 = (uint64_t)v31;
    uint64_t v33 = (uint64_t)v48;
    uint64_t v34 = v53;
    sub_236D26768(v32, v53, &qword_2688D2738);
    sub_236D267CC(v22, &qword_2688D2738);
    uint64_t v35 = v60;
    v55(v33, v33 + *(int *)(v50 + 48), v34, v34 + *(int *)(v26 + 48));
    uint64_t v4 = v35;
    sub_236D267CC(v34, &qword_2688D2738);
    uint64_t v15 = v61;
    if (v35)
    {
      swift_release();
      return v15;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236D56448(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v61;
    }
    a1 = v47;
    unint64_t v37 = *(void *)(v15 + 16);
    unint64_t v36 = *(void *)(v15 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_236D56448(v36 > 1, v37 + 1, 1);
      uint64_t v15 = v61;
    }
    *(void *)(v15 + 16) = v37 + 1;
    uint64_t result = sub_236D26768(v33, v15+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v37, &qword_2688D1748);
    char v21 = *(unsigned char *)(a1 + 32);
    unint64_t v23 = 1 << v21;
    if (v18 >= 1 << v21) {
      goto LABEL_29;
    }
    uint64_t v20 = v46;
    uint64_t v38 = *(void *)(v46 + 8 * v25);
    if ((v38 & v58) == 0) {
      goto LABEL_30;
    }
    LODWORD(v17) = v45;
    if (*(_DWORD *)(a1 + 36) != v45) {
      goto LABEL_31;
    }
    unint64_t v39 = v38 & (-2 << (v18 & 0x3F));
    if (v39)
    {
      unint64_t v23 = __clz(__rbit64(v39)) | v18 & 0xFFFFFFFFFFFFFFC0;
      int64_t v24 = v44;
    }
    else
    {
      unint64_t v40 = v25 + 1;
      unint64_t v41 = (v23 + 63) >> 6;
      int64_t v24 = v44;
      if (v25 + 1 < v41)
      {
        unint64_t v42 = *(void *)(v46 + 8 * v40);
        if (v42)
        {
LABEL_23:
          unint64_t v23 = __clz(__rbit64(v42)) + (v40 << 6);
        }
        else
        {
          while (v41 - 2 != v25)
          {
            unint64_t v42 = *(void *)(v43 + 8 * v25++);
            if (v42)
            {
              unint64_t v40 = v25 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    uint64_t v19 = v57 + 1;
    uint64_t v18 = v23;
    if (v57 + 1 == v24) {
      return v15;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_236D7EECC(unsigned __int8 *a1)
{
  int v2 = *a1;
  _s17DataSourceFactoryCMa();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = 0u;
  *(_OWORD *)(inited + 32) = 0u;
  if (v2 == 1)
  {
    uint64_t v4 = sub_236D84190();
    uint64_t v5 = _s3XPCCMa();
    uint64_t v6 = &off_26E9FDC20;
LABEL_6:
    uint64_t v11 = v5;
    uint64_t v12 = v6;
    swift_release();
    *(void *)&long long v10 = v4;
    sub_236D1B1E4(&v10, (uint64_t)v9);
    type metadata accessor for HomesStore();
    uint64_t inited = swift_allocObject();
    sub_236D1B1E4(v9, inited + 16);
    return inited;
  }
  uint64_t v7 = sub_236D84538();
  if (!v1)
  {
    uint64_t v4 = v7;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3060);
    uint64_t v6 = &off_26E9FEE78;
    goto LABEL_6;
  }
  swift_setDeallocating();
  swift_release();
  return inited;
}

unint64_t sub_236D7EFC0()
{
  unint64_t result = qword_2688D2E78[0];
  if (!qword_2688D2E78[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_2688D2E78);
  }
  return result;
}

uint64_t sub_236D7F004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HomesStore.Error(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D2EF8);
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D7F16C()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_236D7F178()
{
  return sub_236D7F1C0(qword_2688D2EC0, (void (*)(uint64_t))type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D7F1C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D7F208()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for HomesStore()
{
  return self;
}

uint64_t method lookup function for HomesStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HomesStore);
}

uint64_t dispatch thunk of HomesStore.fetchModels<A>(for:where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 96)
                                                                   + **(int **)(*(void *)v4 + 96));
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *long long v10 = v5;
  v10[1] = sub_236D80E6C;
  return v12(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 112)
                                                                   + **(int **)(*(void *)v4 + 112));
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *long long v10 = v5;
  v10[1] = sub_236D7F5D0;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of HomesStore.withTransaction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 104)
                                                                   + **(int **)(*(void *)v4 + 104));
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *long long v10 = v5;
  v10[1] = sub_236D17ED0;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_236D7F5D0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of HomesStore.changes(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t *initializeBufferWithCopyOfBuffer for HomesStore.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_236DB9830();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for HomesStore.Error(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_236DB9830();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for HomesStore.Error(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_236DB9830();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for HomesStore.Error(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_236D7FAF8((uint64_t)a1, type metadata accessor for HomesStore.Error);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_236DB9830();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_236D7FAF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for HomesStore.Error(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_236DB9830();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for HomesStore.Error(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_236D7FAF8((uint64_t)a1, type metadata accessor for HomesStore.Error);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_236DB9830();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_236D7FD94()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HomesStore.AnyChanges(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_236D7FEDC(a1, a2, a3, &qword_2688D1910);
}

uint64_t destroy for HomesStore.AnyChanges(uint64_t a1, uint64_t a2)
{
  return sub_236D7FFB4(a1, a2, &qword_2688D1910);
}

uint64_t initializeWithCopy for HomesStore.AnyChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80034(a1, a2, a3, &qword_2688D1910);
}

uint64_t assignWithCopy for HomesStore.AnyChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D800C0(a1, a2, a3, &qword_2688D1910);
}

uint64_t initializeWithTake for HomesStore.AnyChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80158(a1, a2, a3, &qword_2688D1910);
}

uint64_t assignWithTake for HomesStore.AnyChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D801E0(a1, a2, a3, &qword_2688D1910);
}

uint64_t getEnumTagSinglePayload for HomesStore.AnyChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D7FE84);
}

uint64_t sub_236D7FE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, &qword_2688D1910);
}

uint64_t storeEnumTagSinglePayload for HomesStore.AnyChanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D7FEA4);
}

uint64_t sub_236D7FEA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, &qword_2688D1910);
}

void sub_236D7FEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for HomesStore.AnyChanges.AsyncIterator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_236D7FEDC(a1, a2, a3, &qword_2688D1908);
}

uint64_t *sub_236D7FEDC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  int v6 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2)
{
  return sub_236D7FFB4(a1, a2, &qword_2688D1908);
}

uint64_t sub_236D7FFB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return swift_release();
}

uint64_t initializeWithCopy for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80034(a1, a2, a3, &qword_2688D1908);
}

uint64_t sub_236D80034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D800C0(a1, a2, a3, &qword_2688D1908);
}

uint64_t sub_236D800C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(a1, a2, v7);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80158(a1, a2, a3, &qword_2688D1908);
}

uint64_t sub_236D80158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D801E0(a1, a2, a3, &qword_2688D1908);
}

uint64_t sub_236D801E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(a1, a2, v7);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D80278);
}

uint64_t sub_236D80278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, &qword_2688D1908);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for HomesStore.AnyChanges.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D80358);
}

uint64_t sub_236D80358(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, &qword_2688D1908);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_236D80420(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_236D80440(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, void))
{
  sub_236D804E0(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_236D804E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for AnyModelStateChange(255);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D17D8);
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_236D8055C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D806BC(a1, a2, a3, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t *sub_236D80574(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_236D8076C(a1, a2, a3, type metadata accessor for HomesStore.AnyChanges, &qword_2688D1910);
}

uint64_t sub_236D80594(uint64_t a1, uint64_t a2)
{
  return sub_236D80868(a1, a2, &qword_2688D1910, (void (*)(void))type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D805B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80908(a1, a2, a3, &qword_2688D1910, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D805D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D809B4(a1, a2, a3, &qword_2688D1910, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D805F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80A6C(a1, a2, a3, &qword_2688D1910, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D80614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80B14(a1, a2, a3, &qword_2688D1910, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D80634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D80648);
}

uint64_t sub_236D80648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_27Tm(a1, a2, a3, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t sub_236D80660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D80674);
}

uint64_t sub_236D80674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_28Tm(a1, a2, a3, a4, type metadata accessor for HomesStore.AnyChanges);
}

uint64_t type metadata accessor for HomesStore.Changes()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D806A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D806BC(a1, a2, a3, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D806BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_236D8074C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_236D8076C(a1, a2, a3, type metadata accessor for HomesStore.AnyChanges.AsyncIterator, &qword_2688D1908);
}

uint64_t *sub_236D8076C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = a4(0);
  int v9 = *(_DWORD *)(*(void *)(v8 - 8) + 80);
  if ((v9 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v9 + 16) & ~(unint64_t)v9));
  }
  else
  {
    uint64_t v10 = v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_236D80848(uint64_t a1, uint64_t a2)
{
  return sub_236D80868(a1, a2, &qword_2688D1908, (void (*)(void))type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D80868(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  a4(0);
  return swift_release();
}

uint64_t sub_236D808E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80908(a1, a2, a3, &qword_2688D1908, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D80908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  uint64_t v9 = a5(0);
  *(void *)(a1 + *(int *)(v9 + 20)) = *(void *)(a2 + *(int *)(v9 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_236D80994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D809B4(a1, a2, a3, &qword_2688D1908, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D809B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1, a2, v8);
  uint64_t v9 = a5(0);
  *(void *)(a1 + *(int *)(v9 + 20)) = *(void *)(a2 + *(int *)(v9 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_236D80A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80A6C(a1, a2, a3, &qword_2688D1908, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D80A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  uint64_t v9 = a5(0);
  *(void *)(a1 + *(int *)(v9 + 20)) = *(void *)(a2 + *(int *)(v9 + 20));
  return a1;
}

uint64_t sub_236D80AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D80B14(a1, a2, a3, &qword_2688D1908, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t sub_236D80B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1, a2, v8);
  uint64_t v9 = a5(0);
  *(void *)(a1 + *(int *)(v9 + 20)) = *(void *)(a2 + *(int *)(v9 + 20));
  swift_release();
  return a1;
}

uint64_t sub_236D80BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D80BB8);
}

uint64_t sub_236D80BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_27Tm(a1, a2, a3, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t __swift_get_extra_inhabitant_index_27Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  return v7(a1, a2, v6);
}

uint64_t sub_236D80C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D80C54);
}

uint64_t sub_236D80C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_28Tm(a1, a2, a3, a4, type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
}

uint64_t __swift_store_extra_inhabitant_index_28Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(a1, a2, a2, v7);
}

uint64_t type metadata accessor for HomesStore.Changes.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D80CF8(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4)
{
  return sub_236D7CA28(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_236D80D14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D80D7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D80DB4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_236D26C08;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2688D3040 + dword_2688D3040);
  return v6(a1, v4);
}

uint64_t HomesStore.CoreData.Configuration.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0x746C7561666544;
  a1[1] = 0xE700000000000000;
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  sub_236D80FB0((uint64_t)a1 + *(int *)(v2 + 20));
  uint64_t v3 = (void *)((char *)a1 + *(int *)(v2 + 24));
  *uint64_t v3 = 0xD00000000000001ELL;
  v3[1] = 0x8000000236DBB820;
  type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for HomesStore.CoreData.Configuration(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D3068);
}

uint64_t HomesStore.CoreData.Configuration.modelConfigurationName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HomesStore.CoreData.Configuration.modelConfigurationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HomesStore.CoreData.Configuration.modelConfigurationName.modify())()
{
  return nullsub_1;
}

uint64_t sub_236D80FB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_236DB9770();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HomesStore();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v11 = (void *)sub_236DB9A00();
  uint64_t v12 = (void *)sub_236DB9A00();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (v13)
  {
    sub_236DB9760();

    int64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v14(v8, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  sub_236D82778((uint64_t)v8);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_236DBA260();
  sub_236DB9A70();
  id v16 = objc_msgSend(v10, sel_description);
  sub_236DB9A10();

  sub_236DB9A70();
  swift_bridgeObjectRelease();
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HomesStore.CoreData.Configuration.StoreType(uint64_t a1)
{
  return sub_236D6083C(a1, qword_2688D3078);
}

uint64_t HomesStore.CoreData.Configuration.modelFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.CoreData.Configuration(0) + 20);
  uint64_t v4 = sub_236DB9770();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t HomesStore.CoreData.Configuration.modelFileURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.CoreData.Configuration(0) + 20);
  uint64_t v4 = sub_236DB9770();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*HomesStore.CoreData.Configuration.modelFileURL.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.Configuration.storeType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.CoreData.Configuration(0) + 24);
  return sub_236D81468(v3, a1);
}

uint64_t sub_236D81468(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HomesStore.CoreData.Configuration.storeType.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.CoreData.Configuration(0) + 24);
  return sub_236D81510(a1, v3);
}

uint64_t sub_236D81510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*HomesStore.CoreData.Configuration.storeType.modify())()
{
  return nullsub_1;
}

uint64_t HomesStore.CoreData.Configuration.init(storeType:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0x746C7561666544;
  a2[1] = 0xE700000000000000;
  uint64_t v4 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  sub_236D80FB0((uint64_t)a2 + *(int *)(v4 + 20));
  uint64_t v5 = (void *)((char *)a2 + *(int *)(v4 + 24));
  *uint64_t v5 = 0xD00000000000001ELL;
  v5[1] = 0x8000000236DBB820;
  type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  swift_storeEnumTagMultiPayload();
  return sub_236D81510(a1, (uint64_t)v5);
}

uint64_t *_s13ConfigurationVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_236DB9770();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    int64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12(v14, v15, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = *((void *)v15 + 1);
      *(void *)int64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v18;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t _s13ConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_236DB9770();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v8(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s13ConfigurationVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_236DB9770();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  int64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11(v13, v14, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v17 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v17;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s13ConfigurationVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_236DB9770();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_236D81BD0((uint64_t)a1 + v11);
    uint64_t v14 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v12, v13, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_236D81BD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *_s13ConfigurationVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_236DB9770();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10(v12, v13, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

void *_s13ConfigurationVwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_236DB9770();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_236D81BD0((uint64_t)a1 + v12);
    uint64_t v15 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v14, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D81E94);
}

uint64_t sub_236D81E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_236DB9770();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t _s13ConfigurationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D81FD4);
}

uint64_t sub_236D81FD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_236DB9770();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_236D82100()
{
  uint64_t result = sub_236DB9770();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HomesStore.CoreData.Configuration.StoreType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *_s13ConfigurationV9StoreTypeOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_236DB9770();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s13ConfigurationV9StoreTypeOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_236DB9770();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s13ConfigurationV9StoreTypeOwcp(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_236DB9770();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s13ConfigurationV9StoreTypeOwca(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_236D81BD0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_236DB9770();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *_s13ConfigurationV9StoreTypeOwtk(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_236DB9770();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s13ConfigurationV9StoreTypeOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_236D81BD0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_236DB9770();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_236D826E4()
{
  uint64_t result = sub_236DB9770();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_236D82778(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236D827D8()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D3090);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3090);
  return sub_236DB9940();
}

id XPCServer.__allocating_init(persistentContainer:storeFileURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_236DB9770();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(MEMORY[0x263F08D88]);
  uint64_t v8 = (void *)sub_236DB9A00();
  id v9 = objc_msgSend(v7, sel_initWithMachServiceName_, v8);

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  _s14XPCStoreServerCMa();
  swift_allocObject();
  sub_236D2B03C((uint64_t)v6);
  uint64_t v11 = v10;
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_236D834E0(v12);
  swift_release();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3060);
  unint64_t v23 = &off_26E9FEE78;
  *(void *)&long long v21 = v13;
  type metadata accessor for HomesStore();
  uint64_t v14 = swift_allocObject();
  sub_236D1B1E4(&v21, v14 + 16);
  uint64_t v15 = (objc_class *)type metadata accessor for XPCServer();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC11HomeKitCore9XPCServer_proxies] = MEMORY[0x263F8EE88];
  *(void *)&v16[OBJC_IVAR____TtC11HomeKitCore9XPCServer_listener] = v9;
  *(void *)&v16[OBJC_IVAR____TtC11HomeKitCore9XPCServer_storeServer] = v11;
  *(void *)&v16[OBJC_IVAR____TtC11HomeKitCore9XPCServer_homesStore] = v14;
  v20.receiver = v16;
  v20.super_class = v15;
  swift_retain();
  id v17 = objc_msgSendSuper2(&v20, sel_init);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  return v17;
}

id XPCServer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void XPCServer.init()()
{
}

id XPCServer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall XPCServer.start()()
{
  objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC11HomeKitCore9XPCServer_storeServer) + 16), sel_startListening);
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11HomeKitCore9XPCServer_listener);
  objc_msgSend(v1, sel_setDelegate_, v0);
  objc_msgSend(v1, sel_resume);
  if (qword_2688D1318 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_236DB9950();
  __swift_project_value_buffer(v2, (uint64_t)qword_2688D3090);
  oslog = sub_236DB9930();
  os_log_type_t v3 = sub_236DB9F30();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_236D14000, oslog, v3, "Started XPC server", v4, 2u);
    MEMORY[0x237E101A0](v4, -1, -1);
  }
}

Swift::Bool __swiftcall XPCServer.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  return sub_236D83708(shouldAcceptNewConnection.super.isa);
}

void sub_236D82D50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x237E102A0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = a2 + 16;
    if (qword_2688D1318 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_236DB9950();
    __swift_project_value_buffer(v7, (uint64_t)qword_2688D3090);
    uint64_t v8 = v5;
    id v9 = sub_236DB9930();
    os_log_type_t v10 = sub_236DB9F30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v17 = v6;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      uint64_t v13 = v8;
      sub_236DBA0B0();
      *uint64_t v12 = v5;

      uint64_t v6 = v17;
      _os_log_impl(&dword_236D14000, v9, v10, "Client proxy invalidated: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v12, -1, -1);
      MEMORY[0x237E101A0](v11, -1, -1);
    }
    else
    {

      id v9 = v8;
    }

    swift_beginAccess();
    uint64_t v14 = MEMORY[0x237E102A0](v6);
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      swift_beginAccess();
      uint64_t v16 = sub_236D82FE8(v8);
      swift_endAccess();

      uint64_t v8 = v16;
    }
  }
}

uint64_t sub_236D82FE8(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_236DBA1D0();

    if (v5)
    {
      uint64_t v6 = sub_236D831B0();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_236DBA020();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for XPCClientProxy();
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_236DBA030();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_236DBA030();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_236D33518();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_236D8333C(v9);
  *id v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_236D831B0()
{
  id v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_236DBA190();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_236D30C98(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_236DBA020();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    type metadata accessor for XPCClientProxy();
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_236DBA030();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_236D8333C(v7);
      if (sub_236DBA030())
      {
        *id v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_236DBA030();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_236D8333C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_236DBA120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_236DBA020();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_236D834E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3140);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = self;
  swift_retain_n();
  id v5 = objc_msgSend(v4, sel_defaultCenter);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3148);
  uint64_t v7 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3150);
  uint64_t v8 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v8 + 112) = MEMORY[0x263F8EE78];
  v7[17] = 0;
  v7[18] = 0;
  v7[15] = v5;
  v7[16] = v8;
  v7[14] = a1;
  v19[4] = v6;
  v19[5] = &off_26E9FF228;
  v19[1] = v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3158);
  uint64_t v11 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_defaultActor_initialize();
  v11[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3160);
  uint64_t v12 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v12 + 112) = v9;
  v11[17] = v12;
  v11[14] = a1;
  v11[15] = v3;
  v19[9] = v10;
  v19[10] = &off_26E9FE6F8;
  v19[6] = v11;
  v19[14] = v2;
  v19[15] = sub_236D83B64();
  v19[11] = v3;
  v19[0] = a1;
  sub_236D83BC0((uint64_t)v19, (uint64_t)&v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3060);
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v13 + 240) = 0;
  *(void *)(v13 + 112) = v15;
  sub_236D1B1E4(&v17, v13 + 120);
  sub_236D1B1E4(&v16, v13 + 160);
  sub_236D1B1E4(&v18, v13 + 200);
  sub_236D83C28((uint64_t)v19);
  return v13;
}

uint64_t type metadata accessor for XPCServer()
{
  return self;
}

uint64_t sub_236D83708(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC11HomeKitCore9XPCServer_homesStore);
  id v5 = (objc_class *)type metadata accessor for XPCClientProxy();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC11HomeKitCore14XPCClientProxy_connection] = a1;
  *(void *)&v6[OBJC_IVAR____TtC11HomeKitCore14XPCClientProxy_homesStore] = v4;
  v26.receiver = v6;
  v26.super_class = v5;
  id v7 = a1;
  swift_retain();
  id v8 = objc_msgSendSuper2(&v26, sel_init);
  if (qword_2688D1318 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_236DB9950();
  __swift_project_value_buffer(v9, (uint64_t)qword_2688D3090);
  uint64_t v10 = v8;
  uint64_t v11 = sub_236DB9930();
  os_log_type_t v12 = sub_236DB9F30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = v2;
    char v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412290;
    aBlock[0] = v10;
    uint64_t v15 = v10;
    sub_236DBA0B0();
    void *v14 = v10;

    _os_log_impl(&dword_236D14000, v11, v12, "Accepting client: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v14, -1, -1);
    MEMORY[0x237E101A0](v13, -1, -1);
  }
  else
  {

    uint64_t v11 = v10;
  }

  if (qword_2688D1290 != -1) {
    swift_once();
  }
  objc_msgSend(v7, sel_setExportedInterface_, qword_2688DE728, v23);
  objc_msgSend(v7, sel_setExportedObject_, v10);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_236D83B44;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236D6F6C0;
  aBlock[3] = &block_descriptor_2;
  BOOL v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_setInvalidationHandler_, v19);
  _Block_release(v19);
  swift_beginAccess();
  uint64_t v20 = v10;
  sub_236D309B8(&v24, v20);
  long long v21 = v24;
  swift_endAccess();

  objc_msgSend(v7, sel_resume);
  return 1;
}

uint64_t method lookup function for XPCServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCServer);
}

uint64_t sub_236D83ACC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236D83B04()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_236D83B44()
{
  sub_236D82D50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_236D83B64()
{
  unint64_t result = qword_2688D3168;
  if (!qword_2688D3168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3168);
  }
  return result;
}

uint64_t sub_236D83BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688D3170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D83C28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2688D3170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t destroy for XPCServer.Error(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11HomeKitCore9XPCServerC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for XPCServer.Error(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for XPCServer.Error(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCServer.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for XPCServer.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_236D83EA8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_236D83EC0(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCServer.Error()
{
  return &type metadata for XPCServer.Error;
}

uint64_t sub_236D83EF4()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D3180);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3180);
  return sub_236DB9940();
}

HomeKitCore::DataSourceType_optional __swiftcall DataSourceType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *unint64_t v1 = v2;
  return (HomeKitCore::DataSourceType_optional)rawValue;
}

void *static DataSourceType.allCases.getter()
{
  return &unk_26E9FD650;
}

uint64_t DataSourceType.rawValue.getter()
{
  return *v0;
}

unint64_t sub_236D83FA8()
{
  unint64_t result = qword_2688D3198;
  if (!qword_2688D3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3198);
  }
  return result;
}

void *sub_236D83FFC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

unint64_t sub_236D84020()
{
  unint64_t result = qword_2688D31A0;
  if (!qword_2688D31A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D31A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D31A0);
  }
  return result;
}

void sub_236D8407C(void *a1@<X8>)
{
  *a1 = &unk_26E9FD678;
}

unsigned char *storeEnumTagSinglePayload for DataSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D84158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSourceType()
{
  return &type metadata for DataSourceType;
}

uint64_t sub_236D84190()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    if (qword_2688D1320 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_236DB9950();
    __swift_project_value_buffer(v3, (uint64_t)qword_2688D3180);
    unsigned int v4 = sub_236DB9930();
    os_log_type_t v5 = sub_236DB9F40();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v6 = 0;
      _os_log_impl(&dword_236D14000, v4, v5, "Creating XPC tunnel data source", v6, 2u);
      MEMORY[0x237E101A0](v6, -1, -1);
    }

    uint64_t v7 = sub_236D843D8();
    uint64_t v8 = type metadata accessor for XPCConnectionWrapper();
    v18[3] = v8;
    v18[4] = &off_26E9FF8A0;
    v18[0] = v7;
    _s3XPCCMa();
    uint64_t v1 = swift_allocObject();
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v8);
    MEMORY[0x270FA5388](v9);
    uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    uint64_t v16 = v8;
    uint64_t v17 = &off_26E9FF8A0;
    *(void *)&long long v15 = v13;
    swift_retain();
    swift_defaultActor_initialize();
    *(void *)(v1 + 152) = MEMORY[0x263F8EE78];
    *(void *)(v1 + 160) = 0;
    sub_236D1B1E4(&v15, v1 + 112);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
    swift_release();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_236D843D8()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    if (qword_2688D1320 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_236DB9950();
    __swift_project_value_buffer(v3, (uint64_t)qword_2688D3180);
    unsigned int v4 = sub_236DB9930();
    os_log_type_t v5 = sub_236DB9F40();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v6 = 0;
      _os_log_impl(&dword_236D14000, v4, v5, "Creating XPC connection wrapper", v6, 2u);
      MEMORY[0x237E101A0](v6, -1, -1);
    }

    type metadata accessor for XPCConnectionWrapper();
    uint64_t v1 = swift_allocObject();
    swift_defaultActor_initialize();
    *(void *)(v1 + 112) = 0;
    __swift_instantiateConcreteTypeFromMangledName(qword_2688D31B0);
    uint64_t v7 = swift_allocObject();
    swift_defaultActor_initialize();
    *(void *)(v7 + 112) = MEMORY[0x263F8EE78];
    *(void *)(v1 + 120) = v7;
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_236D84538()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.Configuration(0);
  MEMORY[0x270FA5388](v2);
  unsigned int v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v0 + 32))
  {
    uint64_t v5 = *(void *)(v0 + 32);
  }
  else
  {
    if (qword_2688D1320 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_236DB9950();
    __swift_project_value_buffer(v6, (uint64_t)qword_2688D3180);
    uint64_t v7 = sub_236DB9930();
    os_log_type_t v8 = sub_236DB9F40();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_236D14000, v7, v8, "Creating core data data source", v9, 2u);
      MEMORY[0x237E101A0](v9, -1, -1);
    }

    *unsigned int v4 = 0x746C7561666544;
    v4[1] = 0xE700000000000000;
    sub_236D80FB0((uint64_t)v4 + *(int *)(v2 + 20));
    uint64_t v10 = (void *)((char *)v4 + *(int *)(v2 + 24));
    *uint64_t v10 = 0xD00000000000001ELL;
    v10[1] = 0x8000000236DBB820;
    type metadata accessor for HomesStore.CoreData.Configuration.StoreType(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = _s11HomeKitCore10HomesStoreC0C4DataO19PersistentContainerC13configurationAgE13ConfigurationV_tcfC_0((uint64_t)v4);
    uint64_t v5 = sub_236D834E0(v11);
    swift_release();
    *(void *)(v1 + 32) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_236D8472C()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t _s17DataSourceFactoryCMa()
{
  return self;
}

uint64_t sub_236D847A0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t KeyPathDifference.contains<A>(keyPath:)()
{
  return sub_236DB9E70() & 1;
}

uint64_t type metadata accessor for KeyPathDifference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of DescriptorVisitable.visitKeyPaths<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of DescriptorVisitor.visit<A>(keyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of DescriptorVisitor.visit<A>(keyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of DescriptorVisitor.visit<A>(parentKeyPath:keyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of DescriptorVisitor.visit<A>(parentKeyPath:keyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

void sub_236D848DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D84918(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236D84954(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D84990(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, unint64_t *a4@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t *a6@<X8>)
{
  id v10 = [*a1 *a2];
  a3(0);
  sub_236D85210(a4, 255, a5);
  uint64_t v11 = sub_236DB9E10();

  *a6 = v11;
}

void sub_236D84A34(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236D84A70(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t), SEL *a8)
{
  uint64_t v11 = *a2;
  a5(0);
  sub_236D85210(a6, 255, a7);
  id v12 = (id)sub_236DB9E00();
  objc_msgSend(v11, *a8, v12);
}

void sub_236D84B24(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D84B60(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236D84B9C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D84BD8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id HMCDHomeModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDHomeModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDHomeModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDHomeModel()
{
  return self;
}

id HMCDHomeModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDHomeModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static HMCDHomeModel.entityName.getter()
{
  return 0x656D6F4844434D48;
}

uint64_t sub_236D84DA4()
{
  return 0x656D6F4844434D48;
}

uint64_t sub_236D84DC8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_236D85210(&qword_2688D3238, a2, (void (*)(uint64_t))type metadata accessor for HMCDHomeModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236D84E20@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDHomeModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236D84E64(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

void sub_236D84EC4(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB9A00();
  objc_msgSend(v2, sel_setName_, v3);
}

char *keypath_get_selector_homesTopology()
{
  return sel_homesTopology;
}

id sub_236D84F34@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_homesTopology);
  *a2 = result;
  return result;
}

id sub_236D84F70(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHomesTopology_, *a1);
}

void sub_236D84F84(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D84FD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_users()
{
  return sel_users;
}

void sub_236D85030(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D85080(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236D850D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D85120(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236D85170(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D851C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_236D85210(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D85258()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_236DB9A10();

  return v3;
}

uint64_t NSPersistentStore.ClientStoreMetadataKey.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_236DBA4D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t NSPersistentStore.ClientStoreMetadataKey.rawValue.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_236D85334()
{
  return sub_236DBA710();
}

uint64_t sub_236D8538C()
{
  return sub_236DB9A50();
}

uint64_t sub_236D853A8()
{
  return sub_236DBA710();
}

uint64_t sub_236D853FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_236DBA4D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_236D85450(void *a1@<X8>)
{
  *a1 = 0xD000000000000032;
  a1[1] = 0x8000000236DBB280;
}

id NSPersistentStore.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(v2, sel_metadata);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_236DB9990();

    if (*(void *)(v7 + 16) && (unint64_t v8 = sub_236D85920(0xD000000000000032, 0x8000000236DBB280), (v9 & 1) != 0)) {
      sub_236D1900C(*(void *)(v7 + 56) + 32 * v8, (uint64_t)v11);
    }
    else {
      memset(v11, 0, sizeof(v11));
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B40);
    int v10 = swift_dynamicCast();
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v10 ^ 1u, 1, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NSPersistentStore.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_236D86128(a1, a2, a3);
  uint64_t v4 = sub_236DBA090();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(a1, v4);
}

void (*NSPersistentStore.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  *uint64_t v6 = a3;
  v6[1] = v3;
  uint64_t v7 = sub_236DBA090();
  id v6[2] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[3] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v6[4] = malloc(v9);
  int v10 = malloc(v9);
  v6[5] = v10;
  NSPersistentStore.subscript.getter(a3, (uint64_t)v10);
  return sub_236D856EC;
}

void sub_236D856EC(uint64_t **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_236D86128((uint64_t)v3, v8, v7);
    size_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    sub_236D86128((*a1)[5], a2, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

unint64_t sub_236D857D8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2BF8);
  uint64_t v2 = sub_236DB99B0();
  return sub_236D85B60(a1, v2);
}

unint64_t sub_236D8584C(uint64_t a1)
{
  sub_236DB9830();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_236D86564((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  uint64_t v3 = sub_236DB99B0();
  return sub_236D85E7C(a1, v3, MEMORY[0x263F07508], &qword_2688D1DE8, v2, MEMORY[0x263F07528]);
}

unint64_t sub_236D85920(uint64_t a1, uint64_t a2)
{
  sub_236DBA6E0();
  sub_236DB9A50();
  uint64_t v4 = sub_236DBA710();
  return sub_236D85C30(a1, a2, v4);
}

unint64_t sub_236D85998(uint64_t a1)
{
  uint64_t v2 = sub_236DBA1F0();
  return sub_236D85D14(a1, v2);
}

unint64_t sub_236D859DC(unsigned __int8 a1)
{
  sub_236DBA6E0();
  sub_236DBA6F0();
  uint64_t v2 = sub_236DBA710();
  return sub_236D85DDC(a1, v2);
}

unint64_t sub_236D85A48(uint64_t a1)
{
  sub_236DB9420();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F06AB8];
  sub_236D86564(&qword_2688D3250, MEMORY[0x263F06AB8]);
  uint64_t v3 = sub_236DB99B0();
  return sub_236D85E7C(a1, v3, MEMORY[0x263F06AB8], &qword_2688D3258, v2, MEMORY[0x263F06AC8]);
}

unint64_t sub_236D85B1C(uint64_t a1)
{
  uint64_t v2 = sub_236DBA020();
  return sub_236D8601C(a1, v2);
}

unint64_t sub_236D85B60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2BF8);
    do
    {
      if (sub_236DB99F0()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_236D85C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    int v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_236DBA600() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_236DBA600() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_236D85D14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_236D865AC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x237E0F4C0](v9, a1);
      sub_236D5E700((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_236D85DDC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_236D85E7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  int64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    long long v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_236D86564(v23, v24);
      char v19 = sub_236DB99F0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_236D8601C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_236D86668();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_236DBA030();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_236DBA030();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

void sub_236D86128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_236DBA090();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v19 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v19 - v9, a1, v7);
  uint64_t v11 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    long long v22 = 0u;
    long long v23 = 0u;
  }
  else
  {
    *((void *)&v23 + 1) = a3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(boxed_opaque_existential_0, v10, a3);
  }
  id v13 = objc_msgSend(v4, sel_metadata);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_236DB9990();

    uint64_t v21 = v15;
    if (*((void *)&v23 + 1))
    {
      sub_236D18FFC(&v22, v20);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = v15;
      sub_236D9AC38(v20, 0xD000000000000032, 0x8000000236DBB280, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = v19;
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_7:
        uint64_t v18 = (void *)sub_236DB9980();
        swift_bridgeObjectRelease();
LABEL_10:
        objc_msgSend(v4, sel_setMetadata_, v18);

        return;
      }
    }
    else
    {
      sub_236D86608((uint64_t)&v22);
      sub_236D992D0(0xD000000000000032, 0x8000000236DBB280, v20);
      sub_236D86608((uint64_t)v20);
      if (v21) {
        goto LABEL_7;
      }
    }
    uint64_t v18 = 0;
    goto LABEL_10;
  }
  __break(1u);
}

unint64_t sub_236D863CC()
{
  unint64_t result = qword_2688D3248;
  if (!qword_2688D3248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3248);
  }
  return result;
}

id sub_236D86420@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return NSPersistentStore.subscript.getter(*(void *)(a2 + a1 - 8), a3);
}

void sub_236D8644C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_236D86478()
{
  return 8;
}

void *sub_236D86484(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unsigned char *_s22ClientStoreMetadataKeyOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x236D8652CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NSPersistentStore.ClientStoreMetadataKey()
{
  return &type metadata for NSPersistentStore.ClientStoreMetadataKey;
}

uint64_t sub_236D86564(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D865AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_236D86608(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_236D86668()
{
  unint64_t result = qword_2688D3260[0];
  if (!qword_2688D3260[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_2688D3260);
  }
  return result;
}

uint64_t sub_236D866A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_236D86748()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for IsolatedObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D867E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  uint64_t v7[4] = a3;
  v7[2] = a1;
  uint64_t v8 = *(void *)(a4 - 8);
  v7[9] = v8;
  v7[10] = *(void *)(v8 + 64);
  v7[11] = swift_task_alloc();
  v7[12] = swift_getAssociatedTypeWitness();
  v7[13] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[14] = AssociatedTypeWitness;
  v7[15] = *(void *)(AssociatedTypeWitness - 8);
  v7[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D86980, 0, 0);
}

uint64_t sub_236D86980()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  long long v16 = *(_OWORD *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t))(v4 + 56))(v7, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 136) = v9;
  *(_OWORD *)(v9 + 16) = v16;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v7);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 64)
                                                                                           + **(int **)(AssociatedConformanceWitness + 64));
  swift_retain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_236D86B90;
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 16);
  return v17(v14, sub_236D8701C, v9, v13, v12, AssociatedConformanceWitness);
}

uint64_t sub_236D86B90()
{
  uint64_t v2 = *(void *)(*v1 + 128);
  uint64_t v3 = *(void *)(*v1 + 120);
  uint64_t v4 = *(void *)(*v1 + 112);
  uint64_t v5 = *v1;
  *(void *)(v5 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_236D86D64, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_236D86D64()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D86DD4(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(uint64_t, uint64_t))(a6 + 56))(a4, a6);
  a1(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
}

uint64_t sub_236D86F58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D8701C()
{
  return sub_236D86DD4(*(void (**)(char *))(v0 + 40), *(void *)(v0 + 48), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_236D87078()
{
  return sub_236DBA710();
}

uint64_t sub_236D870D0()
{
  return sub_236DB9A50();
}

uint64_t sub_236D870EC()
{
  return sub_236DBA710();
}

uint64_t sub_236D87140@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_236DBA4D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_236D87194(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x8000000236DBB260;
}

void sub_236D871B4(void *a1@<X8>)
{
  *a1 = &unk_26E9FD748;
}

uint64_t sub_236D871C4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v25 = MEMORY[0x263F8EE88];
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v14 = result + 64;
  uint64_t v13 = result + 104;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v2 << 6);
      goto LABEL_7;
    }
    int64_t v9 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      break;
    }
    if (v9 >= v6)
    {
      int64_t v11 = v2;
    }
    else
    {
      unint64_t v10 = *(void *)(v14 + 8 * v9);
      if (v10) {
        goto LABEL_11;
      }
      int64_t v11 = v2 + 1;
      if (v2 + 2 < v6)
      {
        unint64_t v10 = *(void *)(v14 + 8 * (v2 + 2));
        if (v10)
        {
          int64_t v9 = v2 + 2;
          goto LABEL_11;
        }
        int64_t v11 = v2 + 2;
        if (v2 + 3 < v6)
        {
          unint64_t v10 = *(void *)(v14 + 8 * (v2 + 3));
          if (v10)
          {
            int64_t v9 = v2 + 3;
LABEL_11:
            unint64_t v5 = (v10 - 1) & v10;
            unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
            int64_t v2 = v9;
LABEL_7:
            sub_236D865AC(*(void *)(v1 + 48) + 40 * v8, (uint64_t)&v17);
            sub_236D1900C(*(void *)(v1 + 56) + 32 * v8, (uint64_t)v19 + 8);
            goto LABEL_14;
          }
          int64_t v9 = v2 + 4;
          int64_t v11 = v2 + 3;
          if (v2 + 4 < v6)
          {
            unint64_t v10 = *(void *)(v14 + 8 * v9);
            if (v10) {
              goto LABEL_11;
            }
            while (v6 - 5 != v2)
            {
              unint64_t v10 = *(void *)(v13 + 8 * v2++);
              if (v10)
              {
                int64_t v9 = v2 + 4;
                goto LABEL_11;
              }
            }
            int64_t v11 = v6 - 1;
          }
        }
      }
    }
    unint64_t v5 = 0;
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
    int64_t v2 = v11;
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_14:
    sub_236D87488((uint64_t)&v17, (uint64_t)&v21);
    if (!*((void *)&v22 + 1))
    {
      swift_release();
      return v25;
    }
    sub_236D18FFC(&v24, v16);
    long long v17 = v21;
    long long v18 = v22;
    *(void *)&v19[0] = v23;
    if (swift_dynamicCast())
    {
      uint64_t v12 = sub_236DBA4D0();
      swift_bridgeObjectRelease();
      if (!v12)
      {
        sub_236D1900C((uint64_t)v16, (uint64_t)&v17);
        if ((swift_dynamicCast() & 1) != 0 && v15 == 1) {
          sub_236D3041C();
        }
      }
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  __break(1u);
  return result;
}

uint64_t sub_236D87488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D32F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for XPCEntitlement(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x236D8758CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCEntitlement()
{
  return &type metadata for XPCEntitlement;
}

unint64_t sub_236D875C8()
{
  unint64_t result = qword_2688D32F8;
  if (!qword_2688D32F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D32F8);
  }
  return result;
}

unint64_t sub_236D87628()
{
  unint64_t result = qword_2688D3308;
  if (!qword_2688D3308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3308);
  }
  return result;
}

id sub_236D8767C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_room);
  *a2 = result;
  return result;
}

id sub_236D876B8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRoom_, *a1);
}

id sub_236D876CC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_appleMediaDevice);
  *a2 = result;
  return result;
}

id sub_236D87708(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAppleMediaDevice_, *a1);
}

void sub_236D8771C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_236DB9A10();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_236D87780(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v7 = sub_236DB9A00();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  [v6 *a5];
}

id HMCDAccessoryModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDAccessoryModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDAccessoryModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDAccessoryModel()
{
  return self;
}

id HMCDAccessoryModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDAccessoryModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static HMCDAccessoryModel.entityName.getter()
{
  return 0xD000000000000012;
}

unint64_t sub_236D87978()
{
  return 0xD000000000000012;
}

unint64_t sub_236D87994(uint64_t a1)
{
  unint64_t result = sub_236D879BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D879BC()
{
  unint64_t result = qword_2688D3310;
  if (!qword_2688D3310)
  {
    type metadata accessor for HMCDAccessoryModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3310);
  }
  return result;
}

uint64_t sub_236D87A10@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDAccessoryModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236D87A54(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

void sub_236D87AB4(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB9A00();
  objc_msgSend(v2, sel_setName_, v3);
}

char *keypath_get_selector_category()
{
  return sel_category;
}

id sub_236D87B24@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_category);
  *a2 = result;
  return result;
}

id sub_236D87B58(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategory_, *a1);
}

char *keypath_get_selector_model()
{
  return sel_model;
}

void sub_236D87B78(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D87B98(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_firmwareVersion()
{
  return sel_firmwareVersion;
}

void sub_236D87BC4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236D87BE4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_236D87C04@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_home);
  *a2 = result;
  return result;
}

id sub_236D87C40(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHome_, *a1);
}

id sub_236D87C54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_room);
  *a2 = result;
  return result;
}

id sub_236D87C90(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRoom_, *a1);
}

id sub_236D87CA4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_appleMediaDevice);
  *a2 = result;
  return result;
}

id sub_236D87CE0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAppleMediaDevice_, *a1);
}

uint64_t sub_236D87CF4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_236D87D2C()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D3318);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3318);
  return sub_236DB9940();
}

BOOL sub_236D87DB0(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_236D87DC0()
{
  return sub_236DBA6F0();
}

uint64_t sub_236D87DE8()
{
  return sub_236DBA710();
}

BOOL sub_236D87E30(char *a1, char *a2)
{
  return sub_236D87DB0(*a1, *a2);
}

uint64_t sub_236D87E3C()
{
  return sub_236D87DE8();
}

uint64_t sub_236D87E44()
{
  return sub_236D87DC0();
}

uint64_t sub_236D87E4C()
{
  return sub_236DBA710();
}

uint64_t sub_236D87E8C@<X0>(NSObject *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 88);
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = sub_236DBA090();
  uint64_t v7 = *(void *)(v59 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v59);
  unint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v4 + 48);
  uint64_t v58 = a1;
  v14(v5, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v59);
    _s20ManagedObjectDecoderC5ErrorOMa();
    swift_getWitnessTable();
    swift_allocError();
    *char v15 = 1;
    return swift_willThrow();
  }
  uint64_t v17 = v4;
  uint64_t v18 = v5;
  uint64_t v54 = v11;
  uint64_t v55 = AssociatedTypeWitness;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, AssociatedTypeWitness);
  if (qword_2688D1328 != -1) {
    swift_once();
  }
  uint64_t v59 = (uint64_t)v13;
  uint64_t v19 = sub_236DB9950();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_2688D3318);
  swift_unknownObjectRetain();
  uint64_t v53 = (void *)v20;
  long long v21 = sub_236DB9930();
  os_log_type_t v22 = sub_236DB9F40();
  uint64_t v23 = v17;
  if (os_log_type_enabled(v21, v22))
  {
    long long v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v24 = 138412290;
    uint64_t v57 = v24 + 4;
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v18, v23);
    uint64_t v60 = v26;
    sub_236DBA0B0();
    void *v25 = v26;
    swift_unknownObjectRelease();
    _os_log_impl(&dword_236D14000, v21, v22, "Checking for a match for %@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v25, -1, -1);
    MEMORY[0x237E101A0](v24, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease();
  }
  uint64_t v27 = qword_26E9FD600;
  uint64_t v28 = v55;
  if (!qword_26E9FD600)
  {
LABEL_24:
    _s20ManagedObjectDecoderC5ErrorOMa();
    swift_getWitnessTable();
    swift_allocError();
    unsigned char *v42 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v59, v28);
  }
  uint64_t v29 = &byte_26E9FD610;
  uint64_t v57 = (uint8_t *)(v23 + 40);
  while (1)
  {
    int v31 = *v29++;
    char v30 = v31;
    switch(v31)
    {
      case 1:
        uint64_t v32 = type metadata accessor for HomesStore.Room();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
        uint64_t v34 = &qword_2688D1820;
        break;
      case 2:
        uint64_t v32 = type metadata accessor for HomesStore.Home();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
        uint64_t v34 = (unint64_t *)&unk_2688D1818;
        break;
      case 3:
        uint64_t v32 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
        uint64_t v34 = (unint64_t *)&unk_2688D1810;
        break;
      case 4:
        uint64_t v32 = type metadata accessor for HomesStore.User();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
        uint64_t v34 = &qword_2688D1808;
        break;
      case 5:
        uint64_t v32 = type metadata accessor for HomesStore.Zone();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
        uint64_t v34 = (unint64_t *)&unk_2688D1800;
        break;
      case 6:
        uint64_t v32 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
        uint64_t v34 = &qword_2688D17F8;
        break;
      case 7:
        uint64_t v32 = type metadata accessor for HomesStore.User.SharedSettings();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
        uint64_t v34 = (unint64_t *)&unk_2688D17F0;
        break;
      default:
        uint64_t v32 = type metadata accessor for HomesStore.Accessory();
        uint64_t v33 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
        uint64_t v34 = &qword_2688D1828;
        break;
    }
    sub_236D57EA8(v34, v33);
    if (!dynamic_cast_existential_2_conditional(v32)) {
      goto LABEL_10;
    }
    uint64_t v35 = sub_236D4BA20();
    uint64_t v37 = v36;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    unint64_t v39 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v35, v37, v28, AssociatedConformanceWitness);
    swift_bridgeObjectRelease();
    if (!v39) {
      goto LABEL_10;
    }
    unint64_t v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v18, v23);
    unsigned int v41 = objc_msgSend(v40, sel_isKindOfEntity_, v39);

    if (v41) {
      break;
    }

LABEL_10:
    if (!--v27) {
      goto LABEL_24;
    }
  }
  id v43 = v39;
  int64_t v44 = sub_236DB9930();
  os_log_type_t v45 = sub_236DB9F40();
  uint64_t v58 = v44;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    uint64_t v57 = v46;
    *(_DWORD *)uint64_t v46 = 138412290;
    uint64_t v60 = (uint64_t)v43;
    id v47 = v43;
    sub_236DBA0B0();
    uint64_t v48 = v53;
    *uint64_t v53 = v39;

    uint64_t v49 = v57;
    _os_log_impl(&dword_236D14000, v58, v45, "Found known entity description %@", v57, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v48, -1, -1);
    MEMORY[0x237E101A0](v49, -1, -1);
  }
  else
  {
  }
  uint64_t v50 = v56;
  uint64_t v51 = v54;
  uint64_t v52 = v59;

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v52, v28);
  *uint64_t v50 = v30;
  return result;
}

uint64_t sub_236D88770@<X0>(NSObject *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_236D87E8C(a1, v17);
  if (!v2)
  {
    uint64_t v5 = HomesStore.ModelType.metaType.getter();
    uint64_t v6 = dynamic_cast_existential_2_conditional(v5);
    if (v6)
    {
      uint64_t v9 = v6;
      uint64_t v10 = v7;
      uint64_t v18 = v6;
      uint64_t v19 = v7;
      uint64_t v20 = v8;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
      sub_236D88918(v9, v10, (uint64_t)boxed_opaque_existential_0);
      uint64_t v13 = v18;
      uint64_t v14 = v20;
      char v15 = __swift_project_boxed_opaque_existential_1(v17, v18);
      a2[3] = v13;
      a2[4] = v14;
      long long v16 = __swift_allocate_boxed_opaque_existential_0(a2);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v15, v13);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    }
    else
    {
      _s20ManagedObjectDecoderC5ErrorOMa();
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v12 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_236D88918@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v15 = a3;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_236DBA090();
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, void, void))(*(void *)(v6 + 88) + 56))(&v16, AssociatedTypeWitness, AssociatedTypeWitness, *(void *)(v6 + 80), *(void *)(v6 + 88));
  if (!v16) {
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(v16, a1, a2);
  uint64_t v11 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
LABEL_4:
    _s20ManagedObjectDecoderC5ErrorOMa();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v12 = 0;
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v15, v9, a1);
}

uint64_t sub_236D88B70()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t _s20ManagedObjectDecoderCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D88B98@<X0>(NSObject *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_236D87E8C(a1, a2);
}

uint64_t sub_236D88BBC@<X0>(NSObject *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_236D88770(a1, a2);
}

uint64_t sub_236D88BE0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_236D88918(a1, a2, a3);
}

uint64_t _s20ManagedObjectDecoderC5ErrorOMa()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_236D88C1C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D88CE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_236D88D10()
{
  return swift_getWitnessTable();
}

uint64_t destroy for XPCModelWrapper(uint64_t a1)
{
  return sub_236D1B18C(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s11HomeKitCore15XPCModelWrapperVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_236D1B584(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for XPCModelWrapper(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_236D1B584(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_236D1B18C(v5, v6);
  return a1;
}

uint64_t assignWithTake for XPCModelWrapper(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_236D1B18C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCModelWrapper(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && a1[24]) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 8;
  int v5 = v3 - 8;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCModelWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 7;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCModelWrapper()
{
  return &type metadata for XPCModelWrapper;
}

uint64_t sub_236D88EB0(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3440);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v11 = *((void *)v1 + 2);
  uint64_t v12 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D89338();
  sub_236DBA760();
  LOBYTE(v13) = v8;
  char v15 = 0;
  sub_236D1BDD0();
  sub_236DBA5A0();
  if (!v2)
  {
    uint64_t v13 = v12;
    uint64_t v14 = v11;
    char v15 = 1;
    sub_236D1BE24();
    sub_236DBA5A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_236D89054@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3430);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D89338();
  sub_236DBA750();
  if (!v2)
  {
    char v13 = 0;
    sub_236D1BC3C();
    sub_236DBA530();
    char v9 = v12;
    char v13 = 1;
    sub_236D1BCE4();
    sub_236DBA530();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v12;
    *(unsigned char *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_236D89228()
{
  if (*v0) {
    return 0x7461446C65646F6DLL;
  }
  else {
    return 0x7079546C65646F6DLL;
  }
}

uint64_t sub_236D89268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D89598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D89290(uint64_t a1)
{
  unint64_t v2 = sub_236D89338();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D892CC(uint64_t a1)
{
  unint64_t v2 = sub_236D89338();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_236D89308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D89054(a1, a2);
}

uint64_t sub_236D89320(void *a1)
{
  return sub_236D88EB0(a1);
}

unint64_t sub_236D89338()
{
  unint64_t result = qword_2688D3438;
  if (!qword_2688D3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3438);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for XPCModelWrapper.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D89458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCModelWrapper.CodingKeys()
{
  return &type metadata for XPCModelWrapper.CodingKeys;
}

unint64_t sub_236D89494()
{
  unint64_t result = qword_2688D3448;
  if (!qword_2688D3448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3448);
  }
  return result;
}

unint64_t sub_236D894EC()
{
  unint64_t result = qword_2688D3450;
  if (!qword_2688D3450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3450);
  }
  return result;
}

unint64_t sub_236D89544()
{
  unint64_t result = qword_2688D3458;
  if (!qword_2688D3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3458);
  }
  return result;
}

uint64_t sub_236D89598(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7079546C65646F6DLL && a2 == 0xE900000000000065 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446C65646F6DLL && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_236D898FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockNSPersistentHistoryChange()
{
  return self;
}

unint64_t sub_236D899F4()
{
  unint64_t result = qword_2688D2D50;
  if (!qword_2688D2D50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2688D2D50);
  }
  return result;
}

uint64_t HomesStore.Home.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.Home.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Home() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HomesStore.Home()
{
  uint64_t result = qword_2688D34F8;
  if (!qword_2688D34F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HomesStore.Home.legacyUniqueIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HomesStore.Home() + 24);
  uint64_t v4 = sub_236DB9830();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void static HomesStore.Home.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t HomesStore.Home.hash(into:)()
{
  return sub_236DB99C0();
}

uint64_t static HomesStore.Home.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for HomesStore.Home() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  BOOL v8 = v5 == *v7 && v6 == v7[1];
  if (!v8 && (sub_236DBA600() & 1) == 0) {
    return 0;
  }
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t sub_236D89D24()
{
  unint64_t v1 = 1701667182;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000016;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_236D89D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236D8B65C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236D89D98(uint64_t a1)
{
  unint64_t v2 = sub_236D8A008();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D89DD4(uint64_t a1)
{
  unint64_t v2 = sub_236D8A008();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.Home.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D34A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D8A008();
  sub_236DBA760();
  char v11 = 0;
  sub_236DB9830();
  sub_236D8AD3C(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.Home();
    char v10 = 1;
    sub_236DBA580();
    char v9 = 2;
    sub_236DBA5A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_236D8A008()
{
  unint64_t result = qword_2688D34B0;
  if (!qword_2688D34B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D34B0);
  }
  return result;
}

uint64_t HomesStore.Home.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.Home.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v36 = sub_236DB9830();
  uint64_t v33 = *(void *)(v36 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (char *)&v28 - v7;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D34B8);
  uint64_t v34 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HomesStore.Home();
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D8A008();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v13 = v34;
  char v30 = v12;
  int v31 = a1;
  uint64_t v29 = v6;
  char v40 = 0;
  uint64_t v14 = sub_236D8AD3C(&qword_2688D1638, MEMORY[0x263F07508]);
  char v15 = v35;
  uint64_t v16 = v36;
  sub_236DBA530();
  uint64_t v17 = v16;
  uint64_t v28 = v14;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v19 = v15;
  uint64_t v20 = v17;
  v18(v30, v19, v17);
  char v39 = 1;
  uint64_t v21 = sub_236DBA510();
  uint64_t v35 = (char *)v18;
  os_log_type_t v22 = (uint64_t *)&v30[*(int *)(v10 + 20)];
  *os_log_type_t v22 = v21;
  v22[1] = v23;
  char v38 = 2;
  long long v24 = v29;
  sub_236DBA530();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v37);
  uint64_t v25 = *(int *)(v10 + 24);
  uint64_t v26 = (uint64_t)v30;
  ((void (*)(char *, char *, uint64_t))v35)(&v30[v25], v24, v20);
  sub_236D8A828(v26, v32);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  return sub_236D8A88C(v26);
}

uint64_t sub_236D8A560@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.Home.init(from:)(a1, a2);
}

uint64_t sub_236D8A578(void *a1)
{
  return HomesStore.Home.encode(to:)(a1);
}

uint64_t sub_236D8A590()
{
  return sub_236DBA710();
}

uint64_t sub_236D8A674()
{
  return sub_236DB99C0();
}

uint64_t sub_236D8A748()
{
  return sub_236DBA710();
}

uint64_t sub_236D8A828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Home();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D8A88C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.Home();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236D8A8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  char v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_236DBA600() & 1) == 0) {
    return 0;
  }
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t sub_236D8A9B4(uint64_t a1)
{
  return sub_236D8AAE0(a1, (uint64_t)&unk_236DC1640, &qword_2688D3538, sub_236DB1D0C, &qword_2688D3488);
}

uint64_t sub_236D8AA08(uint64_t a1)
{
  return sub_236D8AAE0(a1, (uint64_t)&unk_236DC1608, &qword_2688D3530, sub_236DB2160, &qword_2688D3490);
}

uint64_t static PartialModelRelationshipDescriptor<>.rooms.getter()
{
  return sub_236D4AEF4(&qword_2688D1338);
}

{
  uint64_t vars8;

  if (qword_2688D1360 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_236D8AA5C(uint64_t a1)
{
  return sub_236D8AAE0(a1, (uint64_t)&unk_236DC15D8, &qword_2688D3528, sub_236DB25B8, &qword_2688D3498);
}

uint64_t static PartialModelRelationshipDescriptor<>.users.getter()
{
  return sub_236D4AEF4(&qword_2688D1340);
}

uint64_t sub_236D8AAB0(uint64_t a1)
{
  return sub_236D8AAE0(a1, (uint64_t)&unk_236DC15A8, &qword_2688D3520, sub_236DB2A10, &qword_2688D34A0);
}

uint64_t sub_236D8AAE0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_allocObject();
  uint64_t result = a4(KeyPath);
  *a5 = result;
  return result;
}

uint64_t sub_236D8AB68(void *a1)
{
  a1[1] = sub_236D8AD3C(&qword_2688D34C8, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
  a1[2] = sub_236D8AD3C(&qword_2688D34D0, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
  a1[3] = sub_236D8AD3C(&qword_2688D34D8, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
  a1[4] = sub_236D8AD3C(&qword_2688D34E0, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
  uint64_t result = sub_236D8AD3C(&qword_2688D34E8, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
  a1[5] = result;
  return result;
}

uint64_t sub_236D8AC64()
{
  return sub_236D8AD3C((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D8ACAC()
{
  return sub_236D8AD3C(&qword_2688D34F0, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
}

uint64_t sub_236D8ACF4()
{
  return sub_236D8AD3C(&qword_2688D1818, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
}

uint64_t sub_236D8AD3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *_s4HomeVwCP(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = &a1[v9];
    long long v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *(void *)uint64_t v11 = *v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    char v15 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    v8(v14, v15, v7);
  }
  return a1;
}

uint64_t _s4HomeVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  return v7(v5, v4);
}

uint64_t _s4HomeVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  return a1;
}

uint64_t _s4HomeVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t _s4HomeVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v7(a1 + v8, a2 + v8, v6);
  return a1;
}

uint64_t _s4HomeVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t _s4HomeVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D8B220);
}

uint64_t sub_236D8B220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s4HomeVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D8B2F8);
}

uint64_t sub_236D8B2F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_236D8B3B8()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s4HomeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D8B51CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4HomeV10CodingKeysOMa()
{
  return &_s4HomeV10CodingKeysON;
}

unint64_t sub_236D8B558()
{
  unint64_t result = qword_2688D3508;
  if (!qword_2688D3508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3508);
  }
  return result;
}

unint64_t sub_236D8B5B0()
{
  unint64_t result = qword_2688D3510;
  if (!qword_2688D3510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3510);
  }
  return result;
}

unint64_t sub_236D8B608()
{
  unint64_t result = qword_2688D3518;
  if (!qword_2688D3518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3518);
  }
  return result;
}

uint64_t sub_236D8B65C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000236DBC2F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id sub_236D8B7A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accessory);
  *a2 = result;
  return result;
}

id sub_236D8B7E4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccessory_, *a1);
}

void sub_236D8B7F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_idsDestination);
  if (v3)
  {
    unsigned int v4 = v3;
    uint64_t v5 = sub_236DB9A10();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_236D8B860(uint64_t a1, void **a2)
{
  BOOL v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_236DB9A00();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setIdsDestination_);
}

id HMCDAppleMediaDeviceModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDAppleMediaDeviceModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDAppleMediaDeviceModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDAppleMediaDeviceModel()
{
  return self;
}

id HMCDAppleMediaDeviceModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDAppleMediaDeviceModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static HMCDAppleMediaDeviceModel.entityName.getter()
{
  return 0xD000000000000019;
}

unint64_t sub_236D8BA58()
{
  return 0xD000000000000019;
}

unint64_t sub_236D8BA74(uint64_t a1)
{
  unint64_t result = sub_236D8BA9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236D8BA9C()
{
  unint64_t result = qword_2688D3540;
  if (!qword_2688D3540)
  {
    type metadata accessor for HMCDAppleMediaDeviceModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3540);
  }
  return result;
}

uint64_t sub_236D8BAF0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDAppleMediaDeviceModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236D8BB34(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

char *keypath_get_selector_isCurrentDevice()
{
  return sel_isCurrentDevice;
}

id sub_236D8BB9C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isCurrentDevice);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236D8BBD0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsCurrentDevice_, *a1);
}

char *keypath_get_selector_idsDestination()
{
  return sel_idsDestination;
}

id sub_236D8BBF8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accessory);
  *a2 = result;
  return result;
}

id sub_236D8BC34(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccessory_, *a1);
}

uint64_t sub_236D8BC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  uint64_t v5 = swift_task_alloc();
  v4[7] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[8] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  *uint64_t v6 = v4;
  v6[1] = sub_236D8BD34;
  return MEMORY[0x270FA2100](v5, v7);
}

uint64_t sub_236D8BD34()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    objc_super v2 = sub_236D8BEF8;
  }
  else {
    objc_super v2 = sub_236D8BE48;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D8BE48()
{
  if (sub_236DB9D60())
  {
    type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0);
    sub_236DB9D50();
  }
  sub_236D909C8(v0[7], v0[3]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D8BEF8()
{
  if (*(void *)(v0 + 32))
  {
    swift_getObjectType();
    uint64_t v1 = sub_236DB9C30();
    uint64_t v3 = v2;
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](sub_236D8BF84, v1, v3);
}

uint64_t sub_236D8BF84()
{
  v0[2] = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
  swift_willThrowTypedImpl();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_236D8C018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_236DB9C90();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_236DB9C80();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_236D267CC(a1, &qword_2688D15B0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_236DB9C30();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_236D8C1A0()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D3548);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3548);
  return sub_236DB9940();
}

uint64_t type metadata accessor for XPCClientProxy()
{
  return self;
}

uint64_t sub_236D8C2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x270FA2498](sub_236D8C2E8, 0, 0);
}

uint64_t sub_236D8C2E8()
{
  uint64_t v21 = v0;
  HomesStore.ModelType.init(rawValue:)(v0[11], (char *)v20);
  uint64_t v1 = LOBYTE(v20[0]);
  if (LOBYTE(v20[0]) == 8)
  {
    sub_236D905F4();
    swift_allocError();
    *uint64_t v2 = 0;
    v2[1] = 0;
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    if (qword_2688D1350 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_236DB9950();
    v0[13] = __swift_project_value_buffer(v5, (uint64_t)qword_2688D3548);
    uint64_t v6 = sub_236DB9930();
    os_log_type_t v7 = sub_236DB9F30();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      v20[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      unint64_t v10 = 0xE900000000000079;
      uint64_t v11 = 0x726F737365636341;
      switch(v1)
      {
        case 1:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1836019538;
          break;
        case 2:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1701670728;
          break;
        case 3:
          uint64_t v11 = 0xD000000000000016;
          uint64_t v12 = "HomesRelationshipModel";
          goto LABEL_16;
        case 4:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1919251285;
          break;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1701736282;
          break;
        case 6:
          unint64_t v10 = 0x8000000236DBB8C0;
          uint64_t v11 = 0xD000000000000010;
          break;
        case 7:
          uint64_t v11 = 0xD000000000000012;
          uint64_t v12 = "UserSharedSettings";
LABEL_16:
          unint64_t v10 = (unint64_t)(v12 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      v0[9] = sub_236DB6880(v11, v10, v20);
      sub_236DBA0B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236D14000, v6, v7, "Fetch models: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v9, -1, -1);
      MEMORY[0x237E101A0](v8, -1, -1);
    }

    LOBYTE(v20[0]) = v1;
    uint64_t v13 = HomesStore.ModelType.metaType.getter();
    uint64_t v15 = v14;
    v0[14] = v13;
    v0[7] = v13;
    uint64_t v16 = sub_236DB9860();
    uint64_t v17 = sub_236DBA090();
    v0[15] = v17;
    v0[16] = *(void *)(v17 - 8);
    uint64_t v18 = swift_task_alloc();
    v0[17] = v18;
    (*(void (**)(void))(*(void *)(v16 - 8) + 56))();
    uint64_t v19 = (void *)swift_task_alloc();
    v0[18] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_236D8C710;
    return sub_236D798D0(v13, v18, v13, v15);
  }
}

uint64_t sub_236D8C710(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 128);
  v4[19] = v1;
  swift_task_dealloc();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = v4[17];
  uint64_t v8 = v4[15];
  if (v1)
  {
    (*v6)(v7, v8);
    uint64_t v9 = sub_236D8CC8C;
  }
  else
  {
    v4[20] = a1;
    (*v6)(v7, v8);
    uint64_t v9 = sub_236D8C89C;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_236D8C89C()
{
  uint64_t v32 = v0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
  uint64_t v2 = sub_236DBA3E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_236DB9930();
  os_log_type_t v4 = sub_236DB9F40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v31 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x237E0EE00](v7, v1);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 64) = sub_236DB6880(v8, v10, &v31);
    sub_236DBA0B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_236D14000, v3, v4, "Got models: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E101A0](v6, -1, -1);
    MEMORY[0x237E101A0](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  int64_t v11 = *(void *)(v2 + 16);
  if (v11)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_236D565E0(0, v11, 0);
    uint64_t v12 = *(void *)(v0 + 152);
    sub_236D1B32C(v2 + 32, v0 + 16);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v13 = sub_236D76F20();
    if (v12)
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_15;
    }
    uint64_t v17 = v13;
    uint64_t v18 = v14;
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    uint64_t v16 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236D565E0(0, *(void *)(v16 + 16) + 1, 1);
      uint64_t v16 = v31;
    }
    unint64_t v20 = *(void *)(v16 + 16);
    unint64_t v19 = *(void *)(v16 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_236D565E0(v19 > 1, v20 + 1, 1);
      uint64_t v16 = v31;
    }
    *(void *)(v16 + 16) = v20 + 1;
    uint64_t v21 = v16 + 16 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    int64_t v22 = v11 - 1;
    if (v11 != 1)
    {
      uint64_t v24 = v2 + 72;
      do
      {
        sub_236D1B32C(v24, v0 + 16);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t v25 = sub_236D76F20();
        uint64_t v27 = v26;
        __swift_destroy_boxed_opaque_existential_0(v0 + 16);
        uint64_t v16 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236D565E0(0, *(void *)(v16 + 16) + 1, 1);
          uint64_t v16 = v31;
        }
        unint64_t v29 = *(void *)(v16 + 16);
        unint64_t v28 = *(void *)(v16 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_236D565E0(v28 > 1, v29 + 1, 1);
          uint64_t v16 = v31;
        }
        *(void *)(v16 + 16) = v29 + 1;
        uint64_t v30 = v16 + 16 * v29;
        *(void *)(v30 + 32) = v25;
        *(void *)(v30 + 40) = v27;
        v24 += 40;
        --v22;
      }
      while (v22);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  **(void **)(v0 + 80) = v16;
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
LABEL_15:
  return v15();
}

uint64_t sub_236D8CC8C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_236D8CEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v5 = (void *)sub_236DB9B20();
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_236DB9720();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_236D8CF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[14] = a2;
  v3[15] = a3;
  v3[13] = a1;
  uint64_t v4 = sub_236DB9830();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D8D048, 0, 0);
}

uint64_t sub_236D8D048()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 112) + 16);
  *(void *)(v0 + 152) = v1;
  uint64_t v2 = MEMORY[0x263F8EE80];
  if (v1)
  {
    *(void *)(v0 + 160) = *MEMORY[0x263F081D0];
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      *(void *)(v0 + 168) = v2;
      *(void *)(v0 + 176) = v6;
      if (v4 || !v3) {
        break;
      }
      BOOL v3 = v1 >= ++v6;
      BOOL v4 = v1 == v6;
      if (v1 == v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    switch(*(void *)(v5 + 8 * v6 + 32))
    {
      case 0:
        uint64_t v9 = type metadata accessor for HomesStore.Accessory();
        unint64_t v10 = &qword_2688D1828;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
        break;
      case 1:
        uint64_t v9 = type metadata accessor for HomesStore.Room();
        unint64_t v10 = &qword_2688D1820;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
        break;
      case 2:
        uint64_t v9 = type metadata accessor for HomesStore.Home();
        unint64_t v10 = &qword_2688D1818;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
        break;
      case 3:
        uint64_t v9 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
        unint64_t v10 = (unint64_t *)&unk_2688D1810;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
        break;
      case 4:
        uint64_t v9 = type metadata accessor for HomesStore.User();
        unint64_t v10 = &qword_2688D1808;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
        break;
      case 5:
        uint64_t v9 = type metadata accessor for HomesStore.Zone();
        unint64_t v10 = (unint64_t *)&unk_2688D1800;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
        break;
      case 6:
        uint64_t v9 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
        unint64_t v10 = &qword_2688D17F8;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
        break;
      case 7:
        uint64_t v9 = type metadata accessor for HomesStore.User.SharedSettings();
        unint64_t v10 = (unint64_t *)&unk_2688D17F0;
        int64_t v11 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
        break;
      default:
        JUMPOUT(0);
    }
    uint64_t v12 = sub_236D90A98(v10, v11);
    *(void *)(v0 + 184) = v9;
    *(void *)(v0 + 80) = v9;
    uint64_t v13 = sub_236DB9860();
    uint64_t v14 = sub_236DBA090();
    *(void *)(v0 + 192) = v14;
    *(void *)(v0 + 200) = *(void *)(v14 - 8);
    uint64_t v15 = swift_task_alloc();
    *(void *)(v0 + 208) = v15;
    (*(void (**)(void))(*(void *)(v13 - 8) + 56))();
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_236D8D474;
    return sub_236D798D0(v9, v15, v9, v12);
  }
  else
  {
LABEL_7:
    **(void **)(v0 + 104) = v2;
    swift_task_dealloc();
    id v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_236D8D474(uint64_t a1)
{
  BOOL v4 = (void *)*v2;
  v4[28] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[26];
  uint64_t v6 = v4[25];
  uint64_t v7 = v4[24];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_236D8E074;
  }
  else
  {
    v4[29] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_236D8D614;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_236D8D614()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
  uint64_t v2 = sub_236DBA3E0();
  swift_bridgeObjectRelease();
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v77 = v0;
  if (v3)
  {
    uint64_t v1 = (uint64_t)(v0 + 2);
    v0[11] = MEMORY[0x263F8EE78];
    uint64_t v72 = v0 + 11;
    sub_236D56600(0, v3, 0);
    uint64_t v4 = v2 + 32;
    uint64_t v5 = v0[28];
    while (1)
    {
      sub_236D1B32C(v4, v1);
      __swift_project_boxed_opaque_existential_1((void *)v1, v0[5]);
      uint64_t v6 = sub_236D76F20();
      if (v5) {
        break;
      }
      uint64_t v8 = v6;
      unint64_t v9 = v7;
      uint64_t v74 = v4;
      int64_t v75 = v3;
      uint64_t v10 = v0[18];
      uint64_t v11 = v77[17];
      uint64_t v12 = v77[16];
      uint64_t v13 = v77[5];
      uint64_t v14 = v77[6];
      __swift_project_boxed_opaque_existential_1((void *)v1, v13);
      sub_236D2BCA0(v13, v14);
      __swift_project_boxed_opaque_existential_1((void *)v1, v77[5]);
      sub_236D1B584(v8, v9);
      sub_236DBA280();
      uint64_t v15 = sub_236DB97E0();
      uint64_t v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      uint64_t v0 = v77;
      *((unsigned char *)v77 + 56) = v78;
      v77[8] = v8;
      v77[9] = v9;
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
      sub_236DB9A10();
      sub_236D90DD0();
      sub_236DB9F70();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_finishEncoding);
      id v19 = objc_msgSend(v18, sel_encodedData);
      unint64_t v76 = (void *)sub_236DB97A0();
      uint64_t v73 = v20;

      sub_236D1B18C(v8, v9);
      sub_236D1B18C(v8, v9);
      __swift_destroy_boxed_opaque_existential_0(v1);
      uint64_t v21 = (void *)*v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_236D56600(0, v21[2] + 1, 1);
        uint64_t v21 = (void *)*v72;
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_236D56600(v22 > 1, v23 + 1, 1);
        uint64_t v21 = (void *)*v72;
      }
      uint64_t v5 = 0;
      void v21[2] = v23 + 1;
      uint64_t v24 = &v21[4 * v23];
      v24[4] = v15;
      v24[5] = v17;
      v24[6] = v76;
      v24[7] = v73;
      uint64_t v4 = v74 + 40;
      int64_t v3 = v75 - 1;
      if (v75 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __swift_destroy_boxed_opaque_existential_0(v1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)MEMORY[0x263F8EE78];
LABEL_15:
    uint64_t v27 = v0[21];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[12] = v27;
    unint64_t v29 = (unint64_t *)v21[2];
    swift_bridgeObjectRetain();
    if (v29)
    {
      uint64_t v30 = (void *)v0[21];
      uint64_t v32 = v21[6];
      unint64_t v31 = v21[7];
      uint64_t v34 = v21[4];
      uint64_t v33 = v21[5];
      swift_bridgeObjectRetain();
      sub_236D1B584(v32, v31);
      if (v33)
      {
        unint64_t v36 = sub_236D85920(v34, v33);
        uint64_t v37 = v30[2];
        BOOL v38 = (v35 & 1) == 0;
        uint64_t v39 = v37 + v38;
        if (__OFADD__(v37, v38))
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        LOBYTE(v1) = v35;
        unint64_t v76 = v77 + 12;
        if (v30[3] >= v39)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            goto LABEL_60;
          }
          uint64_t v30 = (void *)v77[12];
          if ((v35 & 1) == 0) {
            goto LABEL_30;
          }
        }
        else
        {
          sub_236D98B28(v39, isUniquelyReferenced_nonNull_native);
          unint64_t v40 = sub_236D85920(v34, v33);
          if ((v1 & 1) != (v41 & 1))
          {
LABEL_20:
            return sub_236DBA650();
          }
          unint64_t v36 = v40;
          while (1)
          {
            uint64_t v30 = (void *)*v76;
            if (v1) {
              break;
            }
LABEL_30:
            v30[(v36 >> 6) + 8] |= 1 << v36;
            int64_t v44 = (uint64_t *)(v30[6] + 16 * v36);
            uint64_t *v44 = v34;
            v44[1] = v33;
            os_log_type_t v45 = (uint64_t *)(v30[7] + 16 * v36);
            *os_log_type_t v45 = v32;
            v45[1] = v31;
            uint64_t v46 = v30[2];
            BOOL v47 = __OFADD__(v46, 1);
            uint64_t v48 = v46 + 1;
            if (!v47)
            {
              void v30[2] = v48;
              uint64_t v1 = (uint64_t)v29 - 1;
              if (v29 != (unint64_t *)1) {
                goto LABEL_36;
              }
              goto LABEL_32;
            }
LABEL_59:
            __break(1u);
LABEL_60:
            sub_236D96B24();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v42 = v31;
        uint64_t v43 = v30[7] + 16 * v36;
        sub_236D1B18C(*(void *)v43, *(void *)(v43 + 8));
        *(void *)uint64_t v43 = v32;
        *(void *)(v43 + 8) = v42;
        uint64_t v1 = (uint64_t)v29 - 1;
        if (v29 != (unint64_t *)1)
        {
LABEL_36:
          unint64_t v29 = v21 + 11;
          do
          {
            uint64_t v32 = *(v29 - 1);
            unint64_t v56 = *v29;
            unint64_t v36 = *(v29 - 3);
            uint64_t v33 = *(v29 - 2);
            swift_bridgeObjectRetain();
            sub_236D1B584(v32, v56);
            if (!v33) {
              break;
            }
            unint64_t v31 = sub_236D85920(v36, v33);
            uint64_t v58 = v30[2];
            BOOL v59 = (v57 & 1) == 0;
            uint64_t v60 = v58 + v59;
            if (__OFADD__(v58, v59)) {
              goto LABEL_58;
            }
            uint64_t v34 = v57;
            if (v30[3] < v60)
            {
              sub_236D98B28(v60, 1);
              unint64_t v61 = sub_236D85920(v36, v33);
              if ((v34 & 1) != (v62 & 1)) {
                goto LABEL_20;
              }
              unint64_t v31 = v61;
            }
            uint64_t v30 = (void *)*v76;
            if (v34)
            {
              swift_bridgeObjectRelease();
              uint64_t v55 = v30[7] + 16 * v31;
              sub_236D1B18C(*(void *)v55, *(void *)(v55 + 8));
              *(void *)uint64_t v55 = v32;
              *(void *)(v55 + 8) = v56;
            }
            else
            {
              v30[(v31 >> 6) + 8] |= 1 << v31;
              id v63 = (unint64_t *)(v30[6] + 16 * v31);
              *id v63 = v36;
              v63[1] = v33;
              uint64_t v64 = (uint64_t *)(v30[7] + 16 * v31);
              uint64_t *v64 = v32;
              v64[1] = v56;
              uint64_t v65 = v30[2];
              BOOL v47 = __OFADD__(v65, 1);
              uint64_t v66 = v65 + 1;
              if (v47) {
                goto LABEL_59;
              }
              void v30[2] = v66;
            }
            v29 += 4;
            --v1;
          }
          while (v1);
        }
      }
    }
    else
    {
      uint64_t v30 = (void *)v0[21];
    }
LABEL_32:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v49 = v77[22];
    uint64_t v50 = v77[19] - 1;
    while (2)
    {
      if (v50 != v49)
      {
        uint64_t v51 = v77[14] + 8 * v49++;
        v77[21] = v30;
        v77[22] = v49;
        switch(*(void *)(v51 + 40))
        {
          case 0:
            uint64_t v52 = type metadata accessor for HomesStore.Accessory();
            uint64_t v53 = &qword_2688D1828;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
            break;
          case 1:
            uint64_t v52 = type metadata accessor for HomesStore.Room();
            uint64_t v53 = &qword_2688D1820;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
            break;
          case 2:
            uint64_t v52 = type metadata accessor for HomesStore.Home();
            uint64_t v53 = &qword_2688D1818;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
            break;
          case 3:
            uint64_t v52 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
            uint64_t v53 = (unint64_t *)&unk_2688D1810;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
            break;
          case 4:
            uint64_t v52 = type metadata accessor for HomesStore.User();
            uint64_t v53 = &qword_2688D1808;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
            break;
          case 5:
            uint64_t v52 = type metadata accessor for HomesStore.Zone();
            uint64_t v53 = (unint64_t *)&unk_2688D1800;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
            break;
          case 6:
            uint64_t v52 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
            uint64_t v53 = &qword_2688D17F8;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
            break;
          case 7:
            uint64_t v52 = type metadata accessor for HomesStore.User.SharedSettings();
            uint64_t v53 = (unint64_t *)&unk_2688D17F0;
            uint64_t v54 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
            break;
          default:
            continue;
        }
        uint64_t v67 = sub_236D90A98(v53, v54);
        v77[23] = v52;
        v77[10] = v52;
        uint64_t v68 = sub_236DB9860();
        uint64_t v69 = sub_236DBA090();
        v77[24] = v69;
        v77[25] = *(void *)(v69 - 8);
        uint64_t v70 = swift_task_alloc();
        v77[26] = v70;
        (*(void (**)(void))(*(void *)(v68 - 8) + 56))();
        uint64_t v71 = (void *)swift_task_alloc();
        v77[27] = v71;
        *uint64_t v71 = v77;
        v71[1] = sub_236D8D474;
        return sub_236D798D0(v52, v70, v52, v67);
      }
      break;
    }
    swift_bridgeObjectRelease();
    *(void *)v77[13] = v30;
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v77[1];
  }
  return v25();
}

uint64_t sub_236D8E074()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_236D8E304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v5 = (void *)sub_236DB9980();
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_236DB9720();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_236D8E3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC11HomeKitCore14XPCClientProxy_homesStore);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  uint64_t v14 = (void *)swift_allocObject();
  long long v14[2] = a2;
  void v14[3] = v12;
  v14[4] = a1;
  uint64_t v15 = sub_236DB9C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = 0;
  v16[3] = 0;
  v16[4] = &unk_2688D3578;
  v16[5] = v14;
  v16[6] = sub_236D8FC04;
  v16[7] = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_236D795C0((uint64_t)v11, (uint64_t)&unk_2688D3588, (uint64_t)v16);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_236D8E574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D15B0);
  v4[13] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1930);
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  v4[17] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[18] = v7;
  v4[19] = *(void *)(v7 + 64);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  v4[22] = v8;
  v4[23] = *(void *)(v8 - 8);
  v4[24] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for HomesStore.AnyChanges(0);
  v4[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[26] = v10;
  v4[27] = *(void *)(v10 + 64);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D8E7B8, 0, 0);
}

uint64_t sub_236D8E7B8()
{
  if (qword_2688D1350 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_236DB9950();
  __swift_project_value_buffer(v1, (uint64_t)qword_2688D3548);
  uint64_t v2 = sub_236DB9930();
  os_log_type_t v3 = sub_236DB9F30();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_236D14000, v2, v3, "Registering subscriber", v4, 2u);
    MEMORY[0x237E101A0](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 80);

  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v52 = MEMORY[0x263F8EE78];
    sub_236D56514(0, v6, 0);
    uint64_t v9 = (uint64_t *)(v8 + 32);
    uint64_t v7 = v52;
    while (2)
    {
      uint64_t v10 = *v9++;
      switch(v10)
      {
        case 0:
          uint64_t v11 = type metadata accessor for HomesStore.Accessory();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
          uint64_t v13 = &qword_2688D1828;
          goto LABEL_16;
        case 1:
          uint64_t v11 = type metadata accessor for HomesStore.Room();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
          uint64_t v13 = &qword_2688D1820;
          goto LABEL_16;
        case 2:
          uint64_t v11 = type metadata accessor for HomesStore.Home();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
          uint64_t v13 = &qword_2688D1818;
          goto LABEL_16;
        case 3:
          uint64_t v11 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
          uint64_t v13 = (unint64_t *)&unk_2688D1810;
          goto LABEL_16;
        case 4:
          uint64_t v11 = type metadata accessor for HomesStore.User();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
          uint64_t v13 = &qword_2688D1808;
          goto LABEL_16;
        case 5:
          uint64_t v11 = type metadata accessor for HomesStore.Zone();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
          uint64_t v13 = (unint64_t *)&unk_2688D1800;
          goto LABEL_16;
        case 6:
          uint64_t v11 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
          uint64_t v13 = &qword_2688D17F8;
          goto LABEL_16;
        case 7:
          uint64_t v11 = type metadata accessor for HomesStore.User.SharedSettings();
          uint64_t v12 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
          uint64_t v13 = (unint64_t *)&unk_2688D17F0;
LABEL_16:
          uint64_t v14 = sub_236D90A98(v13, v12);
          unint64_t v16 = *(void *)(v52 + 16);
          unint64_t v15 = *(void *)(v52 + 24);
          if (v16 >= v15 >> 1) {
            sub_236D56514(v15 > 1, v16 + 1, 1);
          }
          *(void *)(v52 + 16) = v16 + 1;
          uint64_t v17 = v52 + 16 * v16;
          *(void *)(v17 + 32) = v11;
          *(void *)(v17 + 40) = v14;
          if (!--v6) {
            break;
          }
          continue;
        default:
          sub_236D905F4();
          swift_allocError();
          *unint64_t v36 = 0;
          v36[1] = 0;
          swift_willThrow();
          swift_release();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_20;
      }
      break;
    }
  }
  uint64_t v47 = *(void *)(v0 + 216);
  uint64_t v45 = *(void *)(v0 + 224);
  uint64_t v46 = *(void *)(v0 + 208);
  uint64_t v43 = *(void *)(v0 + 232);
  uint64_t v44 = *(void *)(v0 + 200);
  uint64_t v50 = *(void *)(v0 + 192);
  uint64_t v18 = *(void *)(v0 + 168);
  uint64_t v41 = *(void *)(v0 + 184);
  uint64_t v42 = *(void *)(v0 + 176);
  uint64_t v51 = *(void *)(v0 + 160);
  uint64_t v19 = *(void *)(v0 + 144);
  uint64_t v20 = *(void *)(v0 + 128);
  uint64_t v22 = *(void *)(v0 + 112);
  uint64_t v21 = *(void *)(v0 + 120);
  uint64_t v37 = *(void *)(v0 + 104);
  uint64_t v38 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 88);
  uint64_t v48 = *(void *)(v0 + 96);
  uint64_t v49 = *(void **)(v0 + 72);
  type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x263F8F680], v22);
  sub_236DB9D70();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  uint64_t v40 = sub_236DB9C90();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  v39(v37, 1, 1, v40);
  sub_236D1B32C(v23 + 16, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v51, v18, v38);
  unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = v7;
  sub_236D1B1E4((long long *)(v0 + 16), (uint64_t)(v25 + 40));
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v25[v24], v51, v38);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_236D795C0(v37, (uint64_t)&unk_2688D2550, (uint64_t)v25);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v43, v50, v42);
  swift_bridgeObjectRelease();
  *(void *)(v43 + *(int *)(v44 + 20)) = v26;
  v39(v37, 1, 1, v40);
  sub_236D90728(v43, v45);
  unint64_t v27 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0;
  sub_236D90A30(v45, v28 + v27, type metadata accessor for HomesStore.AnyChanges);
  *(void *)(v28 + ((v47 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = v48;
  swift_unknownObjectRetain();
  uint64_t v29 = sub_236D8C018(v37, (uint64_t)&unk_2688D35A0, v28);
  uint64_t v30 = (objc_class *)type metadata accessor for XPCPublisher();
  unint64_t v31 = (char *)objc_allocWithZone(v30);
  uint64_t v32 = (uint64_t (**)())&v31[OBJC_IVAR____TtC11HomeKitCore12XPCPublisher_cancelationHandler];
  *uint64_t v32 = sub_236D909C0;
  v32[1] = (uint64_t (*)())v29;
  *(void *)(v0 + 56) = v31;
  *(void *)(v0 + 64) = v30;
  id v33 = objc_msgSendSuper2((objc_super *)(v0 + 56), sel_init);
  sub_236D90AE0(v43, type metadata accessor for HomesStore.AnyChanges);
  void *v49 = v33;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
  return v34();
}

uint64_t sub_236D8EFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for AnyModelStateChange(0);
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D35A8);
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for XPCModelStateChange();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = type metadata accessor for HomesStore.AnyChanges.AsyncIterator(0);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_236D8F1B0, 0, 0);
}

uint64_t sub_236D8F1B0()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  sub_236DB9D00();
  uint64_t v4 = *(void *)(v3 + *(int *)(type metadata accessor for HomesStore.AnyChanges(0) + 20));
  uint64_t v5 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 152) = v5;
  *(void *)(v1 + v5) = v4;
  *(void *)(v0 + 128) = *MEMORY[0x263F081D0];
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
  *uint64_t v6 = v0;
  v6[1] = sub_236D8F2B4;
  uint64_t v8 = *(void *)(v0 + 96);
  return MEMORY[0x270FA2100](v8, v7);
}

uint64_t sub_236D8F2B4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D8F464;
  }
  else {
    uint64_t v2 = sub_236D8F3C8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D8F3C8()
{
  if (sub_236DB9D60()) {
    sub_236DB9D50();
  }
  sub_236D909C8(*(void *)(v0 + 96), *(void *)(v0 + 104));
  return MEMORY[0x270FA2498](sub_236D8F5D4, 0, 0);
}

uint64_t sub_236D8F464()
{
  return MEMORY[0x270FA2498](sub_236D8F480, 0, 0);
}

uint64_t sub_236D8F480()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_236D8F50C, 0, 0);
}

uint64_t sub_236D8F50C()
{
  sub_236D90AE0(*(void *)(v0 + 120), type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_236D8F5D4()
{
  uint64_t v1 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[6] + 48))(v1, 1, v0[5]) == 1)
  {
    sub_236D90AE0(v0[15], type metadata accessor for HomesStore.AnyChanges.AsyncIterator);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[9];
    uint64_t v5 = v0[10];
    uint64_t v7 = v0[7];
    uint64_t v6 = v0[8];
    sub_236D90A30(v1, v7, type metadata accessor for AnyModelStateChange);
    sub_236D19100(v7, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_236D267CC(v0[8], &qword_2688D35A8);
    }
    else
    {
      uint64_t v8 = (void *)v0[18];
      sub_236D90A30(v0[8], v0[11], (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
      sub_236DB9A10();
      sub_236D90A98(&qword_2688D35B0, (void (*)(uint64_t))type metadata accessor for XPCModelStateChange);
      sub_236DB9F70();
      uint64_t v10 = v0[11];
      if (v8)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = (void *)v0[4];
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_finishEncoding);
        id v12 = objc_msgSend(v9, sel_encodedData);
        uint64_t v13 = sub_236DB97A0();
        unint64_t v15 = v14;

        __swift_instantiateConcreteTypeFromMangledName(&qword_2688D28E8);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_236DBE190;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = v15;
        sub_236D1B584(v13, v15);
        uint64_t v17 = (void *)sub_236DB9B20();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_modelStatesDidUpdate_, v17);

        sub_236D1B18C(v13, v15);
      }
      sub_236D90AE0(v10, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
    }
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1908);
    *uint64_t v18 = v0;
    v18[1] = sub_236D8F2B4;
    uint64_t v20 = v0[12];
    return MEMORY[0x270FA2100](v20, v19);
  }
}

uint64_t sub_236D8F970()
{
  if (qword_2688D1350 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_236DB9950();
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3548);
  uint64_t v1 = sub_236DB9930();
  os_log_type_t v2 = sub_236DB9F30();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_236D14000, v1, v2, "Subscription terminated", v3, 2u);
    MEMORY[0x237E101A0](v3, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17D8);
  return sub_236DB9D50();
}

void sub_236D8FB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_236DB9720();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_236D8FBC4()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_236D8FBFC(uint64_t a1, uint64_t a2)
{
  sub_236D8FB54(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_236D8FC04(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_236D8FC30()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236D8FC78(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_236D26C08;
  return sub_236D8E574(a1, v4, v5, v6);
}

uint64_t sub_236D8FD2C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  uint64_t v7[4] = a7;
  uint64_t v10 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_236D8FE0C;
  return v10(v7 + 2);
}

uint64_t sub_236D8FE0C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D910AC;
  }
  else {
    uint64_t v2 = sub_236D91094;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D8FF20(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  uint64_t v7[4] = a7;
  uint64_t v10 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_236D90000;
  return v10(v7 + 2);
}

uint64_t sub_236D90000()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D910AC;
  }
  else {
    uint64_t v2 = sub_236D90114;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D90114()
{
  uint64_t v5 = v0;
  uint64_t v1 = (void (*)(uint64_t *, void))v0[3];
  uint64_t v4 = v0[2];
  swift_bridgeObjectRetain();
  v1(&v4, 0);
  swift_bridgeObjectRelease_n();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_236D901A4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  uint64_t v7[4] = a7;
  uint64_t v10 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_236D90284;
  return v10(v7 + 2);
}

uint64_t sub_236D90284()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_236D90428;
  }
  else {
    uint64_t v2 = sub_236D90398;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_236D90398()
{
  uint64_t v5 = v0;
  uint64_t v1 = (void (*)(uint64_t *, void))v0[3];
  uint64_t v4 = v0[2];
  swift_unknownObjectRetain();
  v1(&v4, 0);
  swift_unknownObjectRelease_n();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_236D90428()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = (void (*)(uint64_t *, void *))v0[3];
  uint64_t v6 = 0;
  id v3 = v1;
  v2(&v6, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_236D904C0()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_236D26C08;
  *(_OWORD *)(v3 + 24) = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_236D90284;
  return v7(v3 + 16);
}

unint64_t sub_236D905F4()
{
  unint64_t result = qword_2688D3590;
  if (!qword_2688D3590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2688D3590);
  }
  return result;
}

uint64_t sub_236D90648()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236D90728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.AnyChanges(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D9078C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for HomesStore.AnyChanges(0) - 8) + 80);
  uint64_t v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236D9089C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for HomesStore.AnyChanges(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_236D26C08;
  return sub_236D8EFF4(a1, v6, v7, v8, v9);
}

uint64_t sub_236D909C0()
{
  return sub_236D8F970();
}

uint64_t sub_236D909C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D90A30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236D90A98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D90AE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_236D90B40(uint64_t a1, uint64_t a2)
{
  sub_236D8E304(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_236D90B48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D90B80(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_236D90BAC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D90BEC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_236D26C08;
  return sub_236D8CF84(a1, v5, v4);
}

uint64_t sub_236D90C9C()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_236D26C08;
  *(_OWORD *)(v3 + 24) = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_236D90000;
  return v7(v3 + 16);
}

unint64_t sub_236D90DD0()
{
  unint64_t result = qword_2688D35E0;
  if (!qword_2688D35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2688D35E0);
  }
  return result;
}

void sub_236D90E24(uint64_t a1, uint64_t a2)
{
  sub_236D8CEEC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_236D90E2C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_236D90E58(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_236D17ED0;
  v6[11] = v5;
  v6[12] = v4;
  v6[10] = a1;
  return MEMORY[0x270FA2498](sub_236D8C2E8, 0, 0);
}

uint64_t objectdestroy_11Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236D90F60()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_236D26C08;
  *(_OWORD *)(v3 + 24) = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_236D8FE0C;
  return v7(v3 + 16);
}

void sub_236D910B0()
{
  sub_236D94868();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

BOOL sub_236D9114C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_236DBA6D0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v9 = ~v5;
  unint64_t v10 = (v6 + 1) & v9;
  if (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v11 = *(void *)(v8 + 8 * v10);
    BOOL result = v11 == a1;
    if (v11 == a1) {
      break;
    }
    unint64_t v10 = (v10 + 1) & v9;
  }
  while (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return result;
}

uint64_t sub_236D91218()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D3608);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3608);
  return sub_236DB9940();
}

void sub_236D91298(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v5 = *(void *)(*(void *)a1 + 112);
  uint64_t v6 = sub_236DBA090();
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v3 + *(void *)(*(void *)v3 + 184), (uint64_t)v11);
  uint64_t v12 = sub_236DB9830();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v14 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    uint64_t v15 = v22;
    uint64_t v16 = sub_236D9C0F8(v5, v14, v5, a2);

    if (!v15)
    {
      uint64_t v23 = v16;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v5) == 1)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
        sub_236D57F60();
        swift_allocError();
        *uint64_t v18 = 0;
        swift_willThrow();
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v8, v5);
      }
    }
  }
}

uint64_t sub_236D91598(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v2 + *(void *)(*(void *)v2 + 184), (uint64_t)v7);
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(*(void *)(v4 + 112) + 16);
    uint64_t v12 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v13 = sub_236D9C0F8(v11, v12, v11, a2);

    return v13;
  }
  return result;
}

void sub_236D91738(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[1] = a3;
  uint64_t v6 = *a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v3 + *(void *)(*(void *)v3 + 184), (uint64_t)v9);
  uint64_t v10 = sub_236DB9830();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)(*(void *)(v6 + 112) + 16);
    uint64_t v13 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v14 = sub_236D9C0F8(v12, v13, v12, a2);

    if (!v4)
    {
      v15[3] = v14;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_236D9192C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v18[0] = a4;
  uint64_t v7 = *a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v4 + *(void *)(*(void *)v4 + 184), (uint64_t)v10);
  uint64_t v11 = sub_236DB9830();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    __break(1u);
  }
  else
  {
    int64_t v13 = *(void *)(v7 + 112);
    uint64_t v14 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    uint64_t v16 = v18[1];
    uint64_t v17 = sub_236D942FC(v15, v14, a2, v13, a3);

    if (!v16)
    {
      v18[3] = v17;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_236D91B1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v3 + *(void *)(*(void *)v3 + 184), (uint64_t)v9);
  uint64_t v10 = sub_236DB9830();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    int64_t v13 = *(void *)(*(void *)(v6 + 112) + 16);
    uint64_t v14 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v16 = sub_236D942FC(v15, v14, a2, v13, a3);

    return v16;
  }
  return result;
}

void sub_236D91CC0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v18[0] = a4;
  uint64_t v7 = *a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v4 + *(void *)(*(void *)v4 + 184), (uint64_t)v10);
  uint64_t v11 = sub_236DB9830();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    __break(1u);
  }
  else
  {
    int64_t v13 = *(void *)(*(void *)(v7 + 112) + 16);
    uint64_t v14 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    uint64_t v16 = v18[1];
    uint64_t v17 = sub_236D942FC(v15, v14, a2, v13, a3);

    if (!v16)
    {
      v18[3] = v17;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_236D91EB4(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a4;
  unint64_t v31 = a2;
  uint64_t v28 = a5;
  uint64_t v6 = *a1;
  uint64_t v34 = a3;
  uint64_t v7 = sub_236DBA090();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)&v26 - v8;
  uint64_t v36 = *(void *)(v6 + 112);
  uint64_t v9 = sub_236DB9860();
  uint64_t v30 = sub_236DBA090();
  uint64_t v10 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v5 + *(void *)(*(void *)v5 + 184), (uint64_t)v15);
  uint64_t v16 = sub_236DB9830();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v12, 1, 1, v9);
    uint64_t v19 = v33;
    uint64_t v20 = v34;
    sub_236D930D4(v31, (uint64_t)v18, (uint64_t)v12, v34, v32);
    if (v19)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
    }
    else
    {
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);

      uint64_t v35 = v22;
      sub_236DB9C10();
      swift_getWitnessTable();
      uint64_t v23 = v29;
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v20) == 1)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v27);
        sub_236D57F60();
        swift_allocError();
        unsigned char *v25 = 0;
        swift_willThrow();
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v28, v23, v20);
      }
    }
  }
}

uint64_t sub_236D922C8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v23 = *(void *)(*(void *)(*(void *)a1 + 112) + 16);
  uint64_t v5 = sub_236DB9860();
  uint64_t v19 = sub_236DBA090();
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v4 + *(void *)(*(void *)v4 + 184), (uint64_t)v11);
  uint64_t v12 = sub_236DB9830();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v8, 1, 1, v5);
    sub_236D930D4(v20, (uint64_t)v15, (uint64_t)v8, v21, v22);
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);

    return v17;
  }
  return result;
}

void sub_236D92530(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v24 = a3;
  uint64_t v21 = a2;
  v19[1] = a5;
  uint64_t v26 = *(void *)(*(void *)(*(void *)a1 + 112) + 16);
  uint64_t v6 = sub_236DB9860();
  uint64_t v20 = sub_236DBA090();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v5 + *(void *)(*(void *)v5 + 184), (uint64_t)v12);
  uint64_t v13 = sub_236DB9830();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v9, 1, 1, v6);
    uint64_t v16 = v23;
    sub_236D930D4(v21, (uint64_t)v15, (uint64_t)v9, v24, v22);
    if (v16)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
    }
    else
    {
      uint64_t v18 = v17;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);

      uint64_t v25 = v18;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_236D92810(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v27 = a4;
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  uint64_t v21 = a6;
  uint64_t v29 = *(void *)(*(void *)a1 + 112);
  uint64_t v7 = sub_236DB9860();
  uint64_t v22 = sub_236DBA090();
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v6 + *(void *)(*(void *)v6 + 184), (uint64_t)v13);
  uint64_t v14 = sub_236DB9830();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    uint64_t v17 = *(void *)(v7 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v10, v23, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v7);
    uint64_t v18 = v26;
    sub_236D930D4(v24, (uint64_t)v16, (uint64_t)v10, v27, v25);
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
    }
    else
    {
      uint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);

      uint64_t v28 = v20;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_236D92B20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v22 = a2;
  uint64_t v23 = a4;
  uint64_t v21 = a3;
  uint64_t v25 = *(void *)(*(void *)(*(void *)a1 + 112) + 16);
  uint64_t v6 = sub_236DB9860();
  uint64_t v20 = sub_236DBA090();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v5 + *(void *)(*(void *)v5 + 184), (uint64_t)v12);
  uint64_t v13 = sub_236DB9830();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    uint64_t v17 = *(void *)(v6 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v9, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v6);
    sub_236D930D4(v22, (uint64_t)v16, (uint64_t)v9, v23, v24);
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);

    return v19;
  }
  return result;
}

void sub_236D92DC0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v27 = a4;
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  uint64_t v21 = a6;
  uint64_t v29 = *(void *)(*(void *)(*(void *)a1 + 112) + 16);
  uint64_t v7 = sub_236DB9860();
  uint64_t v22 = sub_236DBA090();
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D94C78(v6 + *(void *)(*(void *)v6 + 184), (uint64_t)v13);
  uint64_t v14 = sub_236DB9830();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = (void *)ModelRelationshipDescriptor.predicate(for:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    uint64_t v17 = *(void *)(v7 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v10, v23, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v7);
    uint64_t v18 = v26;
    sub_236D930D4(v24, (uint64_t)v16, (uint64_t)v10, v27, v25);
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
    }
    else
    {
      uint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);

      uint64_t v28 = v20;
      sub_236DB9C10();
      swift_getWitnessTable();
      sub_236DB9ED0();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_236D930D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v133 = a3;
  uint64_t v130 = a2;
  v135 = a1;
  uint64_t v125 = *v5;
  uint64_t v8 = v125;
  uint64_t v123 = *(void (***)(char *, uint64_t))(a4 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v137 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v142 = (char *)&v120 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v138 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v140 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v122 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v143 = (char *)&v120 - v18;
  uint64_t v134 = v17;
  v147[6] = v17;
  uint64_t v19 = sub_236DB9860();
  uint64_t v20 = sub_236DBA090();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v120 - v26;
  uint64_t v136 = *(void *)(v19 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v127 = (uint64_t)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v128 = (char *)&v120 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v126 = (uint64_t)&v120 - v33;
  MEMORY[0x270FA5388](v32);
  v129 = (char *)&v120 - v34;
  uint64_t v35 = v8;
  uint64_t v36 = (uint64_t)v135;
  uint64_t v37 = *((void *)v35 + 24);
  v132 = v5;
  uint64_t v38 = (uint64_t *)((char *)v5 + v37);
  swift_beginAccess();
  if (sub_236D9114C(v36, *v38))
  {
    sub_236D94D80();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v141 = a4;
  uint64_t v139 = a5;
  swift_beginAccess();
  v135 = v38;
  sub_236D3050C(v147, v36);
  swift_endAccess();
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v39(v27, v133, v20);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v136 + 48);
  int v41 = v40(v27, 1, v19);
  uint64_t v124 = (void (**)(char *, char *, uint64_t))v21;
  if (v41 == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v20);
  }
  else
  {
    uint64_t v42 = v129;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v129, v27, v19);
    uint64_t v43 = (void *)v130;
    if (v130)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25B0);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_236DBF770;
      *(void *)(v44 + 32) = v43;
      uint64_t v45 = v136;
      uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v136 + 16);
      uint64_t v47 = v126;
      uint64_t v127 = v19;
      v46(v126, v42, v19);
      int64_t v48 = v134;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      id v50 = v43;
      uint64_t v51 = v131;
      uint64_t v52 = sub_236D61C14(v47, v48, AssociatedConformanceWitness);
      if (!v51)
      {
        *(void *)(v44 + 40) = v52;
        v144[0] = v44;
        sub_236DB9B50();
        sub_236D94D40();
        uint64_t v86 = (void *)sub_236DB9B20();
        swift_bridgeObjectRelease();
        id v87 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v86);

        uint64_t v54 = v132;
        uint64_t v133 = sub_236D9C0F8(v48, v87, v48, AssociatedConformanceWitness);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v129, v127);
        goto LABEL_37;
      }

      *(void *)(v44 + 16) = 0;
      swift_release();
      uint64_t v53 = 0;
      uint64_t v54 = v132;
      v131 = v50;
      if (qword_2688D1358 != -1) {
        swift_once();
      }
      uint64_t v133 = AssociatedConformanceWitness;
      uint64_t v88 = sub_236DB9950();
      __swift_project_value_buffer(v88, (uint64_t)qword_2688D3608);
      id v89 = v51;
      id v90 = v51;
      uint64_t v91 = sub_236DB9930();
      os_log_type_t v92 = sub_236DB9F30();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v130 = 0;
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        uint64_t v94 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v93 = 138412290;
        id v95 = v51;
        uint64_t v96 = _swift_stdlib_bridgeErrorToNSError();
        v144[0] = v96;
        uint64_t v53 = v130;
        sub_236DBA0B0();
        *uint64_t v94 = v96;

        _os_log_impl(&dword_236D14000, v91, v92, "Failed to fetch models with error: %@, filtering in-memory instead.", v93, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
        swift_arrayDestroy();
        MEMORY[0x237E101A0](v94, -1, -1);
        uint64_t v97 = v93;
        uint64_t v54 = v132;
        MEMORY[0x237E101A0](v97, -1, -1);
      }
      else
      {
      }
      uint64_t v84 = v129;

      uint64_t v98 = v131;
      uint64_t v99 = sub_236D9C0F8(v134, v131, v134, v133);
      if (v53)
      {
        (*(void (**)(char *, uint64_t))(v45 + 8))(v84, v127);

        return;
      }
      v144[0] = v99;
      sub_236DB9C10();
      swift_getWitnessTable();
      uint64_t v133 = sub_236DB9AA0();

      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    (*(void (**)(char *, uint64_t))(v136 + 8))(v42, v19);
  }
  v39(v24, v133, v20);
  int v55 = v40(v24, 1, v19);
  uint64_t v54 = v132;
  if (v55 != 1)
  {
    uint64_t v45 = v136;
    char v62 = v128;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v128, v24, v19);
    uint64_t v63 = v127;
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v127, v62, v19);
    int64_t v64 = v134;
    uint64_t v65 = (void *)swift_getAssociatedConformanceWitness();
    uint64_t v66 = v131;
    uint64_t v67 = (void *)sub_236D61C14(v63, v64, (uint64_t)v65);
    if (!v66)
    {
      uint64_t v73 = v67;
      uint64_t v133 = sub_236D9C0F8(v64, v67, v64, (uint64_t)v65);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v128, v19);

      goto LABEL_37;
    }
    uint64_t v68 = 0;
    uint64_t v127 = v19;
    if (qword_2688D1358 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_236DB9950();
    __swift_project_value_buffer(v74, (uint64_t)qword_2688D3608);
    id v75 = v66;
    id v76 = v66;
    uint64_t v77 = sub_236DB9930();
    os_log_type_t v78 = sub_236DB9F30();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v133 = 0;
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = (void *)swift_slowAlloc();
      v131 = v65;
      *(_DWORD *)uint64_t v79 = 138412290;
      id v81 = v66;
      uint64_t v82 = _swift_stdlib_bridgeErrorToNSError();
      v144[0] = v82;
      uint64_t v68 = v133;
      uint64_t v65 = v131;
      sub_236DBA0B0();
      void *v80 = v82;

      _os_log_impl(&dword_236D14000, v77, v78, "Failed to fetch models with error: %@, filtering in-memory instead.", v79, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
      swift_arrayDestroy();
      MEMORY[0x237E101A0](v80, -1, -1);
      uint64_t v83 = v79;
      uint64_t v54 = v132;
      MEMORY[0x237E101A0](v83, -1, -1);
    }
    else
    {
    }
    uint64_t v84 = v128;

    uint64_t v85 = sub_236D9BEB4(v134, v134, (uint64_t)v65);
    if (v68)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v84, v127);

      return;
    }
    v144[0] = v85;
    sub_236DB9C10();
    swift_getWitnessTable();
    uint64_t v133 = sub_236DB9AA0();

    swift_bridgeObjectRelease();
LABEL_36:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v84, v127);
    goto LABEL_37;
  }
  ((void (*)(char *, uint64_t))v124[1])(v24, v20);
  unint64_t v56 = (void *)v130;
  if (v130)
  {
    uint64_t v57 = v134;
    uint64_t v58 = swift_getAssociatedConformanceWitness();
    id v59 = v56;
    uint64_t v60 = v131;
    uint64_t v61 = sub_236D9C0F8(v57, v59, v57, v58);

    if (!v60)
    {
      uint64_t v133 = v61;
LABEL_37:
      v147[0] = sub_236DB9960();
      uint64_t v100 = v134;
      if (!MEMORY[0x237E0EEB0](v133, v134))
      {
LABEL_47:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v101 = *((void *)v125 + 19);
      uint64_t v102 = *((void *)v125 + 21);
      uint64_t v103 = v139;
      uint64_t v104 = (void *)swift_getAssociatedConformanceWitness();
      v144[0] = v101;
      v144[1] = v100;
      v144[2] = v102;
      uint64_t v145 = (uint64_t)v104;
      uint64_t v105 = v133;
      v131 = v104;
      uint64_t v130 = _s15ComposableProxyCMa();
      uint64_t v106 = 0;
      uint64_t v128 = *(char **)(v103 + 24);
      v129 = (char *)(v103 + 24);
      char v107 = *v54;
      uint64_t v127 = (uint64_t)v54 + *((void *)*v54 + 14);
      uint64_t v126 = (uint64_t)v54 + *((void *)v107 + 13);
      uint64_t v136 = v140 + 16;
      uint64_t v125 = (void (*)(char *, uint64_t))(v140 + 32);
      uint64_t v124 = (void (**)(char *, char *, uint64_t))(v123 + 2);
      ++v123;
      v132 = (void (**)(char *, uint64_t))(v140 + 8);
      unint64_t v108 = v122;
      while (1)
      {
        char v109 = sub_236DB9BA0();
        sub_236DB9B70();
        if (v109)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v140 + 16))(v143, v105+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(void *)(v140 + 72) * v106, v100);
          v110 = v135;
          uint64_t v111 = v106 + 1;
          if (__OFADD__(v106, 1)) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v119 = sub_236DBA2A0();
          v110 = v135;
          if (v121 != 8)
          {
            __break(1u);
            return;
          }
          v144[0] = v119;
          (*(void (**)(char *, void *, uint64_t))v136)(v143, v144, v100);
          swift_unknownObjectRelease();
          uint64_t v111 = v106 + 1;
          if (__OFADD__(v106, 1))
          {
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
        }
        (*(void (**)(char *, char *, uint64_t))v125)(v108, v143, v100);
        uint64_t v112 = *v110;
        swift_bridgeObjectRetain();
        uint64_t v113 = (uint64_t)v138;
        sub_236DBA280();
        uint64_t v114 = sub_236DB9830();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v113, 0, 1, v114);
        uint64_t v115 = v130;
        v116 = sub_236D94BF8(v127, v126, v112, v113);
        uint64_t v145 = v115;
        uint64_t WitnessTable = swift_getWitnessTable();
        v144[0] = v116;
        swift_retain();
        uint64_t v117 = v141;
        ((void (*)(void *, uint64_t, uint64_t))v128)(v144, v141, v139);
        (*v124)(v137, v142, v117);
        sub_236DB9C10();
        v118 = v142;
        sub_236DB9BE0();
        swift_release();
        (*v123)(v118, v117);
        (*v132)(v108, v100);
        uint64_t v105 = v133;
        ++v106;
        if (v111 == MEMORY[0x237E0EEB0](v133, v100)) {
          goto LABEL_47;
        }
      }
    }
  }
  else
  {
    uint64_t v69 = v134;
    uint64_t v70 = swift_getAssociatedConformanceWitness();
    uint64_t v71 = v131;
    uint64_t v72 = sub_236D9BEB4(v69, v69, v70);
    if (!v71)
    {
      uint64_t v133 = v72;
      goto LABEL_37;
    }
  }
}

uint64_t sub_236D942FC(uint64_t a1, void *a2, uint64_t a3, int64_t a4, uint64_t a5)
{
  int64_t v7 = a4;
  int64_t v42 = a4;
  uint64_t v10 = sub_236DB9860();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v37 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D25B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_236DBF770;
  *(void *)(v14 + 32) = a2;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v40 = a3;
  v15(v13, a3, v10);
  id v16 = a2;
  uint64_t v17 = (uint64_t)v13;
  uint64_t v18 = a5;
  uint64_t v19 = sub_236D61C14(v17, v7, a5);
  if (v5)
  {

    *(void *)(v14 + 16) = 0;
    swift_release();
    uint64_t v20 = 0;
    if (qword_2688D1358 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_236DB9950();
    __swift_project_value_buffer(v23, (uint64_t)qword_2688D3608);
    id v24 = v5;
    id v25 = v5;
    uint64_t v26 = sub_236DB9930();
    os_log_type_t v27 = sub_236DB9F30();
    uint64_t v36 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v37 = 0;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      id v38 = v16;
      uint64_t v30 = (void *)v29;
      int64_t v39 = v7;
      *(_DWORD *)uint64_t v28 = 138412290;
      id v31 = v5;
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v41 = v32;
      int64_t v7 = v39;
      sub_236DBA0B0();
      void *v30 = v32;
      uint64_t v20 = v37;

      _os_log_impl(&dword_236D14000, v26, (os_log_type_t)v36, "Failed to fetch models with error: %@, filtering in-memory instead.", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1BB8);
      swift_arrayDestroy();
      uint64_t v33 = v30;
      id v16 = v38;
      MEMORY[0x237E101A0](v33, -1, -1);
      MEMORY[0x237E101A0](v28, -1, -1);
    }
    else
    {
    }
    uint64_t v34 = sub_236D9C0F8(v7, v16, v7, v18);
    if (!v20)
    {
      uint64_t v41 = v34;
      sub_236DB9C10();
      swift_getWitnessTable();
      uint64_t v36 = sub_236DB9AA0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(void *)(v14 + 40) = v19;
    uint64_t v41 = v14;
    sub_236DB9B50();
    sub_236D94D40();
    uint64_t v21 = (void *)sub_236DB9B20();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v21);

    uint64_t v36 = sub_236D9C0F8(v7, v22, v7, a5);
  }
  return v36;
}

uint64_t sub_236D94744()
{
  sub_236D94CE0(v0 + *(void *)(*(void *)v0 + 184));
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D9479C()
{
  uint64_t v0 = sub_236D9BD4C();
  sub_236D94CE0(v0 + *(void *)(*(void *)v0 + 184));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_236D947FC()
{
  uint64_t v0 = sub_236D9479C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t _s15ComposableProxyCMa()
{
  return swift_getGenericMetadata();
}

void sub_236D94868()
{
  if (!qword_2688D36A0)
  {
    sub_236DB9830();
    unint64_t v0 = sub_236DBA090();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2688D36A0);
    }
  }
}

uint64_t sub_236D948C0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 176);
}

void sub_236D948C8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
}

uint64_t sub_236D948F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_236D91598(a1, a3);
}

void sub_236D94918(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
}

void sub_236D94940(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
}

uint64_t sub_236D94968(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D91B1C(a1, a2, a4);
}

void sub_236D94990(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
}

void sub_236D949B8(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
}

uint64_t sub_236D949E4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_236D922C8(a1, a2, a4, a5);
}

void sub_236D94A10(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
}

void sub_236D94A3C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
}

uint64_t sub_236D94A68(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_236D92B20(a1, a2, a3, a5, a6);
}

void sub_236D94A94(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
}

uint64_t sub_236D94AC0(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  sub_236DBA6E0();
  sub_236DB9A50();
  unint64_t v2 = sub_236DBA710() & ~(-1 << *(unsigned char *)(a1 + 32));
  return (*(void *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v2) & 1;
}

uint64_t *sub_236D94B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_236D94C78(a4, v4 + *(void *)(*(void *)v4 + 184));
  *(void *)(v4 + *(void *)(*(void *)v4 + 192)) = a3;
  sub_236D1B32C(a2, (uint64_t)v11);
  uint64_t v9 = sub_236D9CE9C(a1, v11);
  sub_236D94CE0(a4);
  return v9;
}

uint64_t *sub_236D94BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_236D94B54(a1, a2, a3, a4);
}

uint64_t sub_236D94C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D94CE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_236D94D40()
{
  unint64_t result = qword_2688D2C00;
  if (!qword_2688D2C00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2688D2C00);
  }
  return result;
}

unint64_t sub_236D94D80()
{
  unint64_t result = qword_2688D36A8;
  if (!qword_2688D36A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D36A8);
  }
  return result;
}

uint64_t dispatch thunk of HomesStoreSyncFetchableDataSource.fetchModels<A>(forType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of HomesStoreSyncFetchableDataSource.fetchModelsByID(forTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for ModelProvider()
{
  return &type metadata for ModelProvider;
}

uint64_t sub_236D94E34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_236D1B1E4((long long *)a1, (uint64_t)v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_236D99FEC(v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_236D267CC(a1, &qword_2688D1FB0);
    unint64_t v7 = sub_236D859DC(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_236D95870();
        uint64_t v11 = v13;
      }
      sub_236D1B1E4((long long *)(*(void *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_236D993D4(v9, v11);
      *uint64_t v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_236D267CC((uint64_t)v14, &qword_2688D1FB0);
  }
}

uint64_t sub_236D94F50(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_236D1B1E4((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_236D9A12C(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_236DB9830();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_236D267CC(a1, &qword_2688D17E8);
    sub_236D98E38(a2, (uint64_t)v9);
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_236D267CC((uint64_t)v9, &qword_2688D17E8);
  }
}

uint64_t sub_236D95070(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2D48);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_236D267CC(a1, &qword_2688D2D48);
    sub_236D9914C((uint64_t)a2, (uint64_t)v8);

    return sub_236D267CC((uint64_t)v8, &qword_2688D2D48);
  }
  else
  {
    sub_236D9BB40(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_236D9AAE4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_236D95218@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DBA280();
  if (*(void *)(a2 + 16) && (unint64_t v10 = sub_236D8584C((uint64_t)v9), (v11 & 1) != 0))
  {
    sub_236D1B32C(*(void *)(a2 + 56) + 40 * v10, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_236D9534C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    sub_236D1B32C(*(void *)(a1 + 56) + 40 * i, (uint64_t)v37);
    sub_236D1B1E4(v37, (uint64_t)v35);
    __swift_project_boxed_opaque_existential_1(v35, v36);
    sub_236DBA280();
    if (*(void *)(a2 + 16) && (unint64_t v20 = sub_236D8584C((uint64_t)v7), (v21 & 1) != 0))
    {
      sub_236D1B32C(*(void *)(a2 + 56) + 40 * v20, (uint64_t)&v29);
    }
    else
    {
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
    }
    (*v12)(v7, v4);
    if (!*((void *)&v30 + 1))
    {
      swift_release();
      sub_236D267CC((uint64_t)&v29, &qword_2688D17E8);
LABEL_31:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      return 0;
    }
    sub_236D1B1E4(&v29, (uint64_t)v32);
    __swift_project_boxed_opaque_existential_1(v35, v36);
    sub_236D9E5D4();
    int v22 = v29;
    uint64_t v23 = v33;
    uint64_t v24 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    sub_236D2BCA0(v23, v24);
    if (v22 != v28)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
      goto LABEL_31;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v27) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v26 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v27) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v26 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v27) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v26 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v27) {
            goto LABEL_32;
          }
          unint64_t v18 = *(void *)(v26 + 8 * v14);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v27)
  {
LABEL_32:
    swift_release();
    return 1;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v27) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v26 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_236D956F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236DBA280();
  v12[3] = a2;
  void v12[4] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
  return sub_236D94F50((uint64_t)v12, (uint64_t)v8);
}

uint64_t sub_236D957DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D95218(a1, *v2, a2);
}

uint64_t sub_236D957E4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_236D9B93C(v3, a1);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v4;
  return result;
}

void *sub_236D95850()
{
  return sub_236D95A54(&qword_2688D1770, (uint64_t (*)(unsigned char *, uint64_t))sub_236D1B1E4);
}

void *sub_236D95870()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_236D1B32C(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v20);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    uint64_t result = (void *)sub_236D1B1E4(v20, *(void *)(v4 + 56) + 40 * v15);
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236D95A34()
{
  return sub_236D95A54(&qword_2688D25A8, (uint64_t (*)(unsigned char *, uint64_t))sub_236D1B1E4);
}

void *sub_236D95A54(uint64_t *a1, uint64_t (*a2)(unsigned char *, uint64_t))
{
  long long v30 = a2;
  uint64_t v4 = v2;
  uint64_t v5 = sub_236DB9830();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_236DBA470();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t v26 = v4;
  uint64_t result = (void *)(v10 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13) {
    uint64_t result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  uint64_t v27 = v9 + 64;
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v29 = v6 + 16;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v15);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t v22 = 40 * v20;
    sub_236D1B32C(*(void *)(v9 + 56) + v22, (uint64_t)v31);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
    uint64_t result = (void *)v30(v31, *(void *)(v11 + 56) + v22);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v15 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_236D95D08()
{
  uint64_t v41 = sub_236DB9420();
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C40);
  uint64_t v35 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v44 = v3;
  if (!v4)
  {
    id result = (id)swift_release();
    uint64_t v33 = v44;
    uint64_t v32 = v35;
LABEL_25:
    *uint64_t v32 = v33;
    return result;
  }
  uint64_t v5 = v3;
  id result = (id)(v3 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
    uint64_t v5 = v44;
  }
  int64_t v8 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v42 = v2;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  uint64_t v36 = v2 + 64;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v44;
  uint64_t v38 = v43 + 32;
  uint64_t v39 = v43 + 16;
  uint64_t v13 = v43;
  unint64_t v14 = v40;
  uint64_t v15 = v41;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v45 = v8;
      unint64_t v17 = v16 | (v8 << 6);
      uint64_t v18 = v42;
      goto LABEL_9;
    }
    int64_t v28 = v8 + 1;
    uint64_t v18 = v42;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v28);
    int64_t v30 = v8 + 1;
    if (!v29)
    {
      int64_t v30 = v28 + 1;
      if (v28 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v36 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v29 - 1) & v29;
    int64_t v45 = v30;
    unint64_t v17 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v13 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(void *)(v18 + 48) + v19, v15);
    uint64_t v20 = 24 * v17;
    uint64_t v21 = *(void *)(v18 + 56) + v20;
    int64_t v23 = *(void **)v21;
    uint64_t v22 = *(void **)(v21 + 8);
    unint64_t v24 = *(void **)(v21 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v12 + 48) + v19, v14, v15);
    int64_t v25 = (void *)(*(void *)(v12 + 56) + v20);
    void *v25 = v23;
    v25[1] = v22;
    v25[2] = v24;
    id v26 = v24;
    id v27 = v23;
    id result = v22;
    int64_t v8 = v45;
  }
  int64_t v31 = v28 + 2;
  if (v31 >= v37)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v32 = v35;
    uint64_t v33 = v44;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v36 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_236D96000()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236D961B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236D96370()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v24;
    id v19 = v17;
    id v20 = (id)v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_236D9653C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_236D966E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_2688D36E0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_236DBA470();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  long long v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    id v19 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_236D74564(*(void *)(v5 + 56) + v20, (uint64_t)v4);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    sub_236D9BB40((uint64_t)v4, *(void *)(v7 + 56) + v20);
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_236D9693C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2CA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_236D1900C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_236D18FFC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236D96B24()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_236DBA470();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_236D1B584(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_236D96CEC(uint64_t a1, int a2)
{
  return sub_236D9700C(a1, a2, &qword_2688D1770, (void (*)(unint64_t, unsigned char *))sub_236D1B1E4);
}

uint64_t sub_236D96D0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36C8);
  uint64_t result = sub_236DBA480();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v8 << 6);
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v16 >= v29) {
          goto LABEL_34;
        }
        unint64_t v17 = v30[v16];
        ++v8;
        if (!v17)
        {
          int64_t v8 = v16 + 1;
          if (v16 + 1 >= v29) {
            goto LABEL_34;
          }
          unint64_t v17 = v30[v8];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v29)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_41;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v30[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v8 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v29) {
                  goto LABEL_34;
                }
                unint64_t v17 = v30[v8];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v18;
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = (long long *)(*(void *)(v5 + 56) + 40 * v15);
      if (a2) {
        sub_236D1B1E4(v20, (uint64_t)v31);
      }
      else {
        sub_236D1B32C((uint64_t)v20, (uint64_t)v31);
      }
      sub_236DBA6E0();
      sub_236DBA6F0();
      uint64_t result = sub_236DBA710();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
      uint64_t result = sub_236D1B1E4(v31, *(void *)(v7 + 56) + 40 * v13);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_236D96FEC(uint64_t a1, int a2)
{
  return sub_236D9700C(a1, a2, &qword_2688D25A8, (void (*)(unint64_t, unsigned char *))sub_236D1B1E4);
}

uint64_t sub_236D9700C(uint64_t a1, int a2, uint64_t *a3, void (*a4)(unint64_t, unsigned char *))
{
  uint64_t v51 = a4;
  uint64_t v6 = v4;
  uint64_t v48 = sub_236DB9830();
  uint64_t v8 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v49 = a2;
  uint64_t v12 = sub_236DBA480();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v4;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  int64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  id v50 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v43) {
      break;
    }
    unint64_t v25 = v44;
    unint64_t v26 = v44[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v26 = v44[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v42;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v44[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v43) {
              goto LABEL_34;
            }
            unint64_t v26 = v44[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = v8;
    uint64_t v29 = *(void *)(v8 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v23;
    int64_t v31 = v47;
    uint64_t v32 = v48;
    if (v49)
    {
      (*v50)(v47, v30, v48);
      v51(*(void *)(v11 + 56) + 40 * v23, v52);
    }
    else
    {
      (*v45)(v47, v30, v48);
      sub_236D1B32C(*(void *)(v11 + 56) + 40 * v23, (uint64_t)v52);
    }
    sub_236D9BAF8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
    uint64_t result = sub_236DB99B0();
    uint64_t v33 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v34) & ~*(void *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v21 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*v50)((char *)(*(void *)(v13 + 48) + v29 * v21), (unint64_t)v31, v32);
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))v51)(v52, *(void *)(v13 + 56) + 40 * v21);
    ++*(void *)(v13 + 16);
    uint64_t v8 = v28;
    uint64_t v11 = v46;
  }
  swift_release();
  uint64_t v6 = v42;
  unint64_t v25 = v44;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v11 + 32);
  if (v40 >= 64) {
    bzero(v25, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v40;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v13;
  return result;
}

uint64_t sub_236D97470(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_236DB9420();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2C40);
  int v52 = a2;
  uint64_t v10 = sub_236DBA480();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  int v55 = v8;
  uint64_t v56 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v48 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v46 = v2;
  int64_t v47 = (unint64_t)(v12 + 63) >> 6;
  int v49 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v53 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v50 = v6;
  uint64_t v51 = v9;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v47) {
      break;
    }
    int64_t v24 = v48;
    unint64_t v25 = v48[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v25 = v48[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v46;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v48[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v47) {
              goto LABEL_34;
            }
            unint64_t v25 = v48[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    int64_t v54 = v18;
    if (v52)
    {
      (*v53)(v55, v28, v56);
      uint64_t v29 = (id *)(*(void *)(v9 + 56) + 24 * v22);
      id v30 = *v29;
      id v31 = v29[1];
      id v32 = v29[2];
    }
    else
    {
      (*v49)(v55, v28, v56);
      uint64_t v33 = *(void *)(v9 + 56) + 24 * v22;
      unint64_t v34 = *(void **)v33;
      id v31 = *(id *)(v33 + 8);
      id v32 = *(id *)(v33 + 16);
      id v35 = v32;
      id v30 = v34;
      id v36 = v31;
    }
    sub_236D9BAF8(&qword_2688D3250, MEMORY[0x263F06AB8]);
    uint64_t result = sub_236DB99B0();
    uint64_t v37 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v16 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v38) & ~*(void *)(v16 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v16 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v19 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v53)(*(void *)(v11 + 48) + v27 * v19, v55, v56);
    int64_t v20 = (void *)(*(void *)(v11 + 56) + 24 * v19);
    *int64_t v20 = v30;
    v20[1] = v31;
    long long v20[2] = v32;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v50;
    uint64_t v9 = v51;
    int64_t v18 = v54;
  }
  swift_release();
  uint64_t v3 = v46;
  int64_t v24 = v48;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v9 + 32);
  if (v44 >= 64) {
    bzero(v24, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v44;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_236D978D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36B0);
  char v38 = a2;
  uint64_t v6 = sub_236DBA480();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    id v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_236DBA6E0();
    sub_236DB9A50();
    uint64_t result = sub_236DBA710();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_236D97BE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36B8);
  char v42 = a2;
  uint64_t v6 = sub_236DBA480();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    id v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    id v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_236DBA6E0();
    sub_236DB9A50();
    uint64_t result = sub_236DBA710();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_236D97F08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36D0);
  uint64_t v6 = sub_236DBA480();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v33 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v32;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      BOOL v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
      {
        id v30 = v29;
        id v31 = (id)v34;
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_236DBA020();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_236D981E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36D8);
  uint64_t v6 = sub_236DBA480();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    id v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_236DBA020();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_236D984BC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_2688D36E0);
  int v41 = a2;
  uint64_t v9 = sub_236DBA480();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = v2;
  unint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v15) {
      break;
    }
    unint64_t v23 = v39;
    unint64_t v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      int64_t v18 = v22 + 1;
      if (v22 + 1 >= v15) {
        goto LABEL_34;
      }
      unint64_t v24 = v39[v18];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v15)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v18 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v15) {
              goto LABEL_34;
            }
            unint64_t v24 = v39[v18];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    char v26 = *(void **)(*(void *)(v8 + 48) + 8 * v21);
    uint64_t v27 = *(void *)(v40 + 72);
    uint64_t v28 = *(void *)(v8 + 56) + v27 * v21;
    if (v41)
    {
      sub_236D9BB40(v28, (uint64_t)v7);
    }
    else
    {
      sub_236D74564(v28, (uint64_t)v7);
      id v29 = v26;
    }
    uint64_t result = sub_236DBA020();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v10 + 48) + 8 * v19) = v26;
    uint64_t result = sub_236D9BB40((uint64_t)v7, *(void *)(v10 + 56) + v27 * v19);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v23 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_236D98828(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2CA0);
  uint64_t v6 = sub_236DBA480();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_236D18FFC(v24, v35);
      }
      else
      {
        sub_236D1900C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_236DBA6E0();
      sub_236DB9A50();
      uint64_t result = sub_236DBA710();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      int64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *int64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_236D18FFC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_236D98B28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D36C0);
  char v6 = a2;
  uint64_t v7 = sub_236DBA480();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_236D1B584(v37, *((unint64_t *)&v37 + 1));
      }
      sub_236DBA6E0();
      sub_236DB9A50();
      uint64_t result = sub_236DBA710();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *int64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

double sub_236D98E38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_236D8584C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236D95A54(&qword_2688D1770, (uint64_t (*)(unsigned char *, uint64_t))sub_236D1B1E4);
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_236DB9830();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_236D1B1E4((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_236D995A4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_236D98F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_236D85B1C(a1);
  LOBYTE(a1) = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236D96370();
      uint64_t v10 = v11;
    }

    *(_OWORD *)a2 = *(_OWORD *)(*(void *)(v10 + 56) + 16 * v6);
    sub_236D998C0(v6, v10);
    *uint64_t v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t sub_236D99078@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_236D85B1C(a1);
  LOBYTE(a1) = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236D9653C();
      uint64_t v10 = v11;
    }

    *a2 = *(void *)(*(void *)(v10 + 56) + 8 * v6);
    sub_236D99A74(v6, v10);
    *uint64_t v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a2 = 0;
  }
  return result;
}

uint64_t sub_236D9914C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_236D85B1C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236D966E4();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
    uint64_t v18 = *(void *)(v11 - 8);
    sub_236D9BB40(v10 + *(void *)(v18 + 72) * v6, a2);
    sub_236D99C28(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

double sub_236D992D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_236D85920(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236D9693C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_236D18FFC((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_236D99E14(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_236D993D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_236DBA120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_236DBA6E0();
        sub_236DBA6F0();
        double result = sub_236DBA710();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v3);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 40 * v3;
          unint64_t v17 = (long long *)(v15 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 40))
          {
            long long v9 = *v17;
            long long v10 = v17[1];
            *(void *)(v16 + 32) = *((void *)v17 + 4);
            *(_OWORD *)unint64_t v16 = v9;
            *(_OWORD *)(v16 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_236D995A4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_236DBA120();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v37 = (result + 1) & v12;
      uint64_t v38 = v13;
      uint64_t v14 = *(void *)(v5 + 72);
      uint64_t v39 = v5 + 16;
      uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v14;
        int64_t v18 = v14 * v11;
        uint64_t v19 = v15;
        v38(v8, *(void *)(a2 + 48) + v14 * v11, v4);
        sub_236D9BAF8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
        uint64_t v20 = sub_236DB99B0();
        unint64_t result = (*v36)(v8, v4);
        uint64_t v15 = v19;
        unint64_t v21 = v20 & v19;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v24 = *(void *)(a2 + 48);
            unint64_t result = v24 + v17 * a1;
            uint64_t v9 = v16;
            if (v17 * a1 < v18 || (uint64_t v14 = v17, result >= v24 + v18 + v17))
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v14 = v17;
              uint64_t v15 = v19;
            }
            else if (v17 * a1 != v18)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v25 = *(void *)(a2 + 56);
            unint64_t v26 = v25 + 40 * a1;
            unint64_t v27 = (long long *)(v25 + 40 * v11);
            if (a1 != v11 || (a1 = v11, v26 >= (unint64_t)v27 + 40))
            {
              long long v28 = *v27;
              long long v29 = v27[1];
              *(void *)(v26 + 32) = *((void *)v27 + 4);
              *(_OWORD *)unint64_t v26 = v28;
              *(_OWORD *)(v26 + 16) = v29;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
        uint64_t v14 = v17;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v15;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  uint64_t *v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_236D998C0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_236DBA120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_236DBA020();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (_OWORD *)(v18 + 16 * v3);
            uint64_t v20 = (_OWORD *)(v18 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_236D99A74(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_236DBA120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_236DBA020();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_236D99C28(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_236DBA120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_236DBA020();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12) {
            goto LABEL_6;
          }
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        uint64_t v15 = *(void *)(a2 + 48);
        uint64_t v16 = (void *)(v15 + 8 * v3);
        uint64_t v17 = (void *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1) {
          *uint64_t v16 = *v17;
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete() - 8)
                        + 72);
        int64_t v20 = v19 * v3;
        unint64_t v21 = v18 + v19 * v3;
        int64_t v22 = v19 * v6;
        unint64_t v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v20 == v22) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  uint64_t *v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_236D99E14(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_236DBA120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_236DBA6E0();
        swift_bridgeObjectRetain();
        sub_236DB9A50();
        uint64_t v10 = sub_236DBA710();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_236D99FEC(long long *a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_236D859DC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_236D95870();
      goto LABEL_7;
    }
    sub_236D96D0C(v13, a3 & 1);
    unint64_t v19 = sub_236D859DC(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_236DBA650();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 40 * v10;
    __swift_destroy_boxed_opaque_existential_0(v17);
    return sub_236D1B1E4(a1, v17);
  }
LABEL_13:
  return sub_236D9AD8C(v10, a2, a1, v16);
}

uint64_t sub_236D9A12C(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_236D8584C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_236D95A54(&qword_2688D1770, (uint64_t (*)(unsigned char *, uint64_t))sub_236D1B1E4);
      goto LABEL_7;
    }
    sub_236D9700C(v17, a3 & 1, &qword_2688D1770, (void (*)(unint64_t, unsigned char *))sub_236D1B1E4);
    unint64_t v23 = sub_236D8584C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_236D9ADF8(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_236DBA650();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 40 * v14;
  __swift_destroy_boxed_opaque_existential_0(v21);
  return sub_236D1B1E4(a1, v21);
}

void sub_236D9A340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v10 = sub_236DB9420();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)*v5;
  unint64_t v16 = sub_236D85A48(a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    BOOL v22 = *v6;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      char v24 = *(void **)(v23 + 8);
      uint64_t v25 = *(void **)(v23 + 16);

      uint64_t v26 = v29;
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = v26;
      *(void *)(v23 + 16) = v30;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_236D95D08();
    goto LABEL_7;
  }
  sub_236D97470(v19, a5 & 1);
  unint64_t v27 = sub_236D85A48(a4);
  if ((v20 & 1) != (v28 & 1))
  {
LABEL_14:
    sub_236DBA650();
    __break(1u);
    return;
  }
  unint64_t v16 = v27;
  BOOL v22 = *v6;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  sub_236D9AEBC(v16, (uint64_t)v13, a1, v29, v30, v22);
}

void sub_236D9A510(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_236D85920(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_236D96000();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_236D978D0(v15, a4 & 1);
  unint64_t v20 = sub_236D85920(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_236DBA650();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_236D9A680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_236D85920(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_236D961B4();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_236D97BE0(v17, a5 & 1);
  unint64_t v23 = sub_236D85920(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_236DBA650();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v20[2] = v29;
  return swift_bridgeObjectRetain();
}

void sub_236D9A808(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_236D85B1C((uint64_t)a3);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_236D96370();
LABEL_7:
    uint64_t v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = v17[7] + 16 * v11;
      uint64_t v19 = *(void **)v18;
      swift_bridgeObjectRelease();

      *(void *)uint64_t v18 = a1;
      *(void *)(v18 + 8) = a2;
      return;
    }
    goto LABEL_11;
  }
  sub_236D97F08(v14, a4 & 1);
  unint64_t v20 = sub_236D85B1C((uint64_t)a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_236D86668();
    sub_236DBA650();
    __break(1u);
    return;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  *(void *)(v17[6] + 8 * v11) = a3;
  BOOL v22 = (void *)(v17[7] + 16 * v11);
  *BOOL v22 = a1;
  v22[1] = a2;
  uint64_t v23 = v17[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v17[2] = v25;
  id v26 = a3;
}

void sub_236D9A980(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_236D85B1C((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_236D9653C();
LABEL_7:
    char v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_236D981E8(v12, a3 & 1);
  unint64_t v17 = sub_236D85B1C((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_236D86668();
    sub_236DBA650();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  char v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v22;
  id v23 = a2;
}

id sub_236D9AAE4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_236D85B1C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_236D966E4();
      goto LABEL_7;
    }
    sub_236D984BC(v12, a3 & 1);
    unint64_t v19 = sub_236D85B1C((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      unint64_t v9 = v19;
      char v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_236D86668();
    id result = (id)sub_236DBA650();
    __break(1u);
    return result;
  }
LABEL_7:
  char v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7];
    uint64_t v17 = v16
        + *(void *)(*(void *)(type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete() - 8)
                    + 72)
        * v9;
    return (id)sub_236D9BBA4(a1, v17);
  }
LABEL_13:
  sub_236D9AF90(v9, (uint64_t)a2, a1, v15);
  return a2;
}

_OWORD *sub_236D9AC38(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_236D85920(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_236D9693C();
      goto LABEL_7;
    }
    sub_236D98828(v15, a4 & 1);
    unint64_t v21 = sub_236D85920(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    id result = (_OWORD *)sub_236DBA650();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_236D18FFC(a1, v19);
  }
LABEL_13:
  sub_236D9B024(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_236D9AD8C(unint64_t a1, char a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_236D1B1E4(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_236D9ADF8(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_236DB9830();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_236D1B1E4(a3, a4[7] + 40 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_236D9AEBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a6[6];
  uint64_t v13 = sub_236DB9420();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v15 = (void *)(a6[7] + 24 * a1);
  *uint64_t v15 = a3;
  v15[1] = a4;
  _OWORD v15[2] = a5;
  uint64_t v16 = a6[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a6[2] = v18;
  }
  return result;
}

uint64_t sub_236D9AF90(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  uint64_t result = sub_236D9BB40(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_236D9B024(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_236D18FFC(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_236D9B090(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_236D9B0B0(a1, a2, a3, a4, &qword_2688D25A8, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
}

uint64_t sub_236D9B0B0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t (*a6)(unsigned char *, unint64_t))
{
  uint64_t v51 = a6;
  uint64_t v50 = sub_236DB9830();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v50);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v47 = (char *)&v41 - v14;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t result = sub_236DBA490();
  uint64_t v16 = result;
  int v41 = a1;
  uint64_t v42 = a2;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *a1;
  }
  uint64_t v18 = 0;
  uint64_t v44 = v48 + 32;
  uint64_t v45 = v48 + 16;
  uint64_t v19 = result + 64;
  uint64_t v46 = v13;
  uint64_t v43 = a4;
  uint64_t v20 = v50;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      uint64_t v49 = v18;
      unint64_t v22 = v21 | (v18 << 6);
    }
    else
    {
      uint64_t v23 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v23 >= v42) {
        return v16;
      }
      unint64_t v24 = v41[v23];
      uint64_t v25 = v18 + 1;
      if (!v24)
      {
        uint64_t v25 = v18 + 2;
        if (v18 + 2 >= v42) {
          return v16;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          uint64_t v25 = v18 + 3;
          if (v18 + 3 >= v42) {
            return v16;
          }
          unint64_t v24 = v41[v25];
          if (!v24)
          {
            uint64_t v26 = v18 + 4;
            if (v18 + 4 >= v42) {
              return v16;
            }
            unint64_t v24 = v41[v26];
            if (!v24)
            {
              while (1)
              {
                uint64_t v25 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v25 >= v42) {
                  return v16;
                }
                unint64_t v24 = v41[v25];
                ++v26;
                if (v24) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v25 = v18 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v17 = (v24 - 1) & v24;
      uint64_t v49 = v25;
      unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    BOOL v28 = v47;
    uint64_t v27 = v48;
    uint64_t v29 = *(void *)(v48 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v47, a4[6] + v29 * v22, v20);
    sub_236D1B32C(a4[7] + 40 * v22, (uint64_t)v53);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    uint64_t v31 = v46;
    v30(v46, v28, v20);
    v51(v53, (unint64_t)v52);
    sub_236D9BAF8((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
    uint64_t result = sub_236DB99B0();
    uint64_t v32 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v19 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v35 = __clz(__rbit64((-1 << v33) & ~*(void *)(v19 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v38 = v34 == v37;
        if (v34 == v37) {
          unint64_t v34 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v19 + 8 * v34);
      }
      while (v39 == -1);
      unint64_t v35 = __clz(__rbit64(~v39)) + (v34 << 6);
    }
    *(void *)(v19 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    v30((char *)(*(void *)(v16 + 48) + v35 * v29), v31, v50);
    uint64_t result = v51(v52, *(void *)(v16 + 56) + 40 * v35);
    ++*(void *)(v16 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v43;
    uint64_t v18 = v49;
    if (!a3) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_236D9B4BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3050);
  uint64_t v6 = MEMORY[0x270FA5388](v48);
  int64_t v47 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v37 - v8;
  uint64_t v9 = sub_236DB9830();
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = 0;
  int64_t v14 = 0;
  uint64_t v49 = (void *)a3;
  uint64_t v15 = *(void *)(a3 + 64);
  uint64_t v41 = a3 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v45 = v11 + 16;
  uint64_t v46 = v11;
  int64_t v42 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v43 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v44 = v13;
  while (1)
  {
    if (v18)
    {
      uint64_t v50 = (v18 - 1) & v18;
      int64_t v51 = v14;
      unint64_t v21 = __clz(__rbit64(v18)) | (v14 << 6);
      goto LABEL_19;
    }
    BOOL v22 = __OFADD__(v14, 1);
    int64_t v23 = v14 + 1;
    if (v22)
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v42) {
      return sub_236D9B0B0(v39, v38, v40, v49, &qword_2688D1770, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    uint64_t v50 = (v24 - 1) & v24;
    int64_t v51 = v23;
    unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_19:
    uint64_t v26 = v49;
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
    v27(v13, v49[6] + *(void *)(v46 + 72) * v21, v9);
    sub_236D1B32C(v26[7] + 40 * v21, (uint64_t)v55);
    uint64_t v28 = v48;
    uint64_t v29 = v9;
    uint64_t v30 = (uint64_t)v56;
    uint64_t v31 = (uint64_t)&v56[*(int *)(v48 + 48)];
    v27(v56, (unint64_t)v13, v29);
    sub_236D1B32C((uint64_t)v55, v31);
    uint64_t v32 = (uint64_t)v47;
    uint64_t v33 = (uint64_t)&v47[*(int *)(v28 + 48)];
    uint64_t v34 = v30;
    uint64_t v9 = v29;
    v27(v47, v34, v29);
    sub_236D1B32C(v31, v33);
    if (*(void *)(a4 + 16) && (unint64_t v35 = sub_236D8584C(v32), (v36 & 1) != 0))
    {
      sub_236D1B32C(*(void *)(a4 + 56) + 40 * v35, (uint64_t)&v52);
    }
    else
    {
      uint64_t v54 = 0;
      long long v52 = 0u;
      long long v53 = 0u;
    }
    unint64_t v18 = v50;
    int64_t v14 = v51;
    sub_236D267CC((uint64_t)v56, &qword_2688D3050);
    uint64_t v19 = *((void *)&v53 + 1);
    sub_236D267CC((uint64_t)&v52, &qword_2688D2540);
    __swift_destroy_boxed_opaque_existential_0(v33);
    uint64_t v20 = *v43;
    (*v43)(v32, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    uint64_t v13 = v44;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v44, v9);
    if (v19)
    {
      *(unint64_t *)((char *)v39 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      BOOL v22 = __OFADD__(v40++, 1);
      if (v22)
      {
        __break(1u);
        return sub_236D9B0B0(v39, v38, v40, v49, &qword_2688D1770, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
      }
    }
  }
  int64_t v25 = v23 + 1;
  if (v23 + 1 >= v42) {
    return sub_236D9B0B0(v39, v38, v40, v49, &qword_2688D1770, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v42) {
    return sub_236D9B0B0(v39, v38, v40, v49, &qword_2688D1770, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v23 + 3;
  if (v23 + 3 >= v42) {
    return sub_236D9B0B0(v39, v38, v40, v49, &qword_2688D1770, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v42) {
      return sub_236D9B0B0(v39, v38, v40, v49, &qword_2688D1770, (uint64_t (*)(unsigned char *, unint64_t))sub_236D1B1E4);
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_236D9B93C(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_236D9B4BC((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_236D9B4BC((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x237E101A0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_236D9BAF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236D9BB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D9BBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.CoreData.ManagedObjectChangeSet.Delete();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D9BC08()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_236D9BD4C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_0(v0 + *(void *)(*(void *)v0 + 104));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112), v2);
  return v0;
}

uint64_t sub_236D9BEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = dynamic_cast_existential_2_conditional(a1);
  if (v9)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    uint64_t v14 = (uint64_t)v5 + *(void *)(*v5 + 104);
    int64_t v23 = v5;
    uint64_t v20 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2838);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_236DBE190;
    *(void *)(inited + 32) = sub_236D4BA20();
    *(void *)(inited + 40) = v16;
    uint64_t v21 = (uint64_t)v5 + *(void *)(*v5 + 96);
    sub_236D1B32C(v14, (uint64_t)v22);
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = *(void *)(v8 + 80);
    uint64_t v17[3] = a2;
    v17[4] = *(void *)(v8 + 88);
    v17[5] = a3;
    sub_236D1B1E4(v22, (uint64_t)(v17 + 6));
    v17[11] = v12;
    v17[12] = v13;
    v17[13] = v20;
    _s5ProxyCMa();
    sub_236DB9C10();
    swift_getWitnessTable();
    sub_236DB7160(inited, v21, (void (*)(void))sub_236D9D18C);
    swift_release();
    swift_setDeallocating();
    uint64_t result = swift_arrayDestroy();
    if (!v4) {
      return v24;
    }
  }
  else
  {
    sub_236D57F60();
    swift_allocError();
    *uint64_t v19 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_236D9C0F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unsigned int v6 = v4;
  uint64_t v10 = *v4;
  uint64_t v11 = dynamic_cast_existential_2_conditional(a1);
  if (v11)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    uint64_t v16 = v13;
    int64_t v25 = a2;
    uint64_t v17 = (uint64_t)v6 + *(void *)(*v6 + 104);
    uint64_t v27 = v6;
    uint64_t v24 = sub_236D4BA20();
    uint64_t v19 = v18;
    uint64_t v23 = (uint64_t)v6 + *(void *)(*v6 + 96);
    sub_236D1B32C(v17, (uint64_t)v26);
    uint64_t v20 = (void *)swift_allocObject();
    long long v20[2] = *(void *)(v10 + 80);
    v20[3] = a3;
    v20[4] = *(void *)(v10 + 88);
    v20[5] = a4;
    sub_236D1B1E4(v26, (uint64_t)(v20 + 6));
    v20[11] = v14;
    v20[12] = v15;
    v20[13] = v16;
    _s5ProxyCMa();
    sub_236DB9C10();
    swift_getWitnessTable();
    sub_236DB6F80(v24, v19, v23, v25, (void (*)(void))sub_236D9D18C);
    swift_bridgeObjectRelease();
    if (v5)
    {
      return swift_release();
    }
    else
    {
      swift_release();
      return v28;
    }
  }
  else
  {
    sub_236D57F60();
    swift_allocError();
    *BOOL v22 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_236D9C30C(uint64_t a1)
{
  uint64_t v31 = *v1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    unsigned int v6 = (void *)MEMORY[0x263F8EE78];
    do
    {
      switch(*(unsigned char *)(a1 + v5 + 32))
      {
        case 1:
          uint64_t v7 = type metadata accessor for HomesStore.Room();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Room;
          uint64_t v9 = &qword_2688D1820;
          break;
        case 2:
          uint64_t v7 = type metadata accessor for HomesStore.Home();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Home;
          uint64_t v9 = &qword_2688D1818;
          break;
        case 3:
          uint64_t v7 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel;
          uint64_t v9 = (unint64_t *)&unk_2688D1810;
          break;
        case 4:
          uint64_t v7 = type metadata accessor for HomesStore.User();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.User;
          uint64_t v9 = &qword_2688D1808;
          break;
        case 5:
          uint64_t v7 = type metadata accessor for HomesStore.Zone();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Zone;
          uint64_t v9 = (unint64_t *)&unk_2688D1800;
          break;
        case 6:
          uint64_t v7 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory.AppleMediaDevice;
          uint64_t v9 = &qword_2688D17F8;
          break;
        case 7:
          uint64_t v7 = type metadata accessor for HomesStore.User.SharedSettings();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings;
          uint64_t v9 = (unint64_t *)&unk_2688D17F0;
          break;
        default:
          uint64_t v7 = type metadata accessor for HomesStore.Accessory();
          uint64_t v8 = (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory;
          uint64_t v9 = &qword_2688D1828;
          break;
      }
      uint64_t v10 = sub_236D57EA8(v9, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v6 = sub_236D5618C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1) {
        unsigned int v6 = sub_236D5618C((void *)(v11 > 1), v12 + 1, 1, v6);
      }
      ++v5;
      id v6[2] = v12 + 1;
      uint64_t v13 = &v6[2 * v12];
      uint64_t v13[4] = v7;
      v13[5] = v10;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    uint64_t v14 = v6[2];
    if (v14) {
      goto LABEL_18;
    }
LABEL_31:
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_32;
  }
  unsigned int v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v14) {
    goto LABEL_31;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  uint64_t v16 = 4;
  do
  {
    uint64_t v18 = v6[v16];
    if (swift_conformsToProtocol2()) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (v19)
    {
      uint64_t v20 = sub_236D4BA20();
      uint64_t v22 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_236D55B14(0, v15[2] + 1, 1, v15);
      }
      unint64_t v24 = v15[2];
      unint64_t v23 = v15[3];
      if (v24 >= v23 >> 1) {
        uint64_t v15 = sub_236D55B14((void *)(v23 > 1), v24 + 1, 1, v15);
      }
      _OWORD v15[2] = v24 + 1;
      uint64_t v17 = &v15[2 * v24];
      v17[4] = v20;
      v17[5] = v22;
    }
    v16 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t v25 = *v30;
  uint64_t v26 = (uint64_t)v30 + *(void *)(*v30 + 104);
  uint64_t v33 = v30;
  uint64_t v27 = (uint64_t)v30 + *(void *)(v25 + 96);
  sub_236D1B32C(v26, (uint64_t)v32);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = *(void *)(v31 + 80);
  *(void *)(v28 + 24) = *(void *)(v31 + 88);
  sub_236D1B1E4(v32, v28 + 32);
  _s5ProxyCMa();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2830);
  swift_getWitnessTable();
  sub_236DB7160((uint64_t)v15, v27, (void (*)(void))sub_236D9D134);
  swift_release();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_236D9C894@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  sub_236DB9C10();
  swift_getWitnessTable();
  uint64_t result = sub_236DB9AD0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_236D9C960@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v40 = a2;
  uint64_t v41 = sub_236DB9830();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x237E0EEB0](v10, AssociatedTypeWitness))
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = MEMORY[0x263F8EE80];
    return result;
  }
  char v36 = a3;
  uint64_t v37 = v7 + 16;
  uint64_t v38 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  unint64_t v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = 4;
  uint64_t v39 = AssociatedTypeWitness;
  while (1)
  {
    uint64_t v15 = v12 - 4;
    char v16 = sub_236DB9BA0();
    sub_236DB9B70();
    if ((v16 & 1) == 0) {
      break;
    }
    uint64_t v43 = *(void *)(a1 + 8 * v12);
    swift_unknownObjectRetain();
    uint64_t v17 = v12 - 3;
    if (__OFADD__(v15, 1)) {
      goto LABEL_23;
    }
LABEL_7:
    uint64_t v42 = v17;
    uint64_t v18 = v40[3];
    uint64_t v19 = v40[4];
    __swift_project_boxed_opaque_existential_1(v40, v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v19 + 32))(v46, v43, v18, v19);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    uint64_t v20 = a1;
    __swift_project_boxed_opaque_existential_1(v46, v46[3]);
    uint64_t v21 = v44;
    sub_236DBA280();
    sub_236D1B32C((uint64_t)v46, (uint64_t)v45);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v47 = v11;
    unint64_t v24 = sub_236D8584C(v21);
    uint64_t v25 = v11[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      goto LABEL_24;
    }
    char v28 = v23;
    if (v11[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_236D95850();
      }
    }
    else
    {
      sub_236D96CEC(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_236D8584C(v44);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_26;
      }
      unint64_t v24 = v29;
    }
    a1 = v20;
    unint64_t v11 = v47;
    uint64_t v4 = 0;
    if (v28)
    {
      uint64_t v13 = v47[7] + 40 * v24;
      __swift_destroy_boxed_opaque_existential_0(v13);
      sub_236D1B1E4(v45, v13);
    }
    else
    {
      v47[(v24 >> 6) + 8] |= 1 << v24;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v11[6] + *(void *)(v7 + 72) * v24, v44, v41);
      sub_236D1B1E4(v45, v11[7] + 40 * v24);
      uint64_t v31 = v11[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_25;
      }
      long long v11[2] = v33;
      unint64_t v11 = v47;
    }
    swift_bridgeObjectRelease();
    (*v38)(v44, v41);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
    uint64_t v14 = MEMORY[0x237E0EEB0](a1, v39);
    ++v12;
    if (v42 == v14)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *char v36 = v11;
      return result;
    }
  }
  uint64_t v43 = sub_236DBA2A0();
  uint64_t v17 = v12 - 3;
  if (!__OFADD__(v15, 1)) {
    goto LABEL_7;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_236DBA650();
  __break(1u);
  return result;
}

uint64_t sub_236D9CD5C()
{
  sub_236D9BD4C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t _s5ProxyCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236D9CDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236D9BEB4(a1, a2, a3);
}

uint64_t sub_236D9CDF0(uint64_t a1)
{
  return sub_236D9C30C(a1);
}

uint64_t sub_236D9CE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a1 + 80) - 8) + 16))(a2, *(void *)v2 + *(void *)(**(void **)v2 + 112));
}

uint64_t sub_236D9CE60(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_236D9CE9C(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(*v3 + 88);
  uint64_t v8 = *(void *)(*v3 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))((uint64_t)v3 + *(void *)(v6 + 112), a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 56))(v8, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)v3 + *(void *)(*v3 + 96), v12, AssociatedTypeWitness);
  sub_236D1B1E4(a2, (uint64_t)v3 + *(void *)(*v3 + 104));
  return v3;
}

uint64_t *sub_236D9D0A8(uint64_t a1, long long *a2)
{
  return sub_236D9CE9C(a1, a2);
}

uint64_t sub_236D9D0FC()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_236D9D134@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_236D9C960(a1, (void *)(v2 + 32), a2);
}

uint64_t sub_236D9D154()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

uint64_t sub_236D9D18C@<X0>(uint64_t *a1@<X8>)
{
  return sub_236D9D1D0(a1);
}

uint64_t sub_236D9D1B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D58598(a1, a2);
}

uint64_t sub_236D9D1D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_236D9C894(a1);
}

uint64_t HomesStore.Zone.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.Zone.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.Zone() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HomesStore.Zone()
{
  uint64_t result = qword_2688D37C0;
  if (!qword_2688D37C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void static HomesStore.Zone.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t HomesStore.Zone.hash(into:)()
{
  sub_236DB9830();
  sub_236D9E0A0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  type metadata accessor for HomesStore.Zone();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.Zone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for HomesStore.Zone() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_236DBA600();
}

uint64_t sub_236D9D448(uint64_t a1)
{
  unint64_t v2 = sub_236D9D678();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236D9D484(uint64_t a1)
{
  unint64_t v2 = sub_236D9D678();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.Zone.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3770);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D9D678();
  sub_236DBA760();
  v8[15] = 0;
  sub_236DB9830();
  sub_236D9E0A0(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.Zone();
    v8[14] = 1;
    sub_236DBA580();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_236D9D678()
{
  unint64_t result = qword_2688D3778;
  if (!qword_2688D3778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3778);
  }
  return result;
}

uint64_t HomesStore.Zone.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.Zone.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_236DB9830();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3780);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HomesStore.Zone();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236D9D678();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v22 = v11;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  char v29 = 0;
  sub_236D9E0A0(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v14 = v26;
  sub_236DBA530();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v6, v14);
  char v28 = 1;
  uint64_t v15 = sub_236DBA510();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v27);
  uint64_t v19 = (uint64_t)v22;
  uint64_t v18 = v23;
  uint64_t v20 = (uint64_t *)&v22[*(int *)(v9 + 20)];
  *uint64_t v20 = v15;
  v20[1] = v17;
  sub_236D9DD20(v19, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236D9DD84(v19);
}

void sub_236D9DAB4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_236D9DAC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.Zone.init(from:)(a1, a2);
}

uint64_t sub_236D9DAD8(void *a1)
{
  return HomesStore.Zone.encode(to:)(a1);
}

uint64_t sub_236D9DAF0()
{
  return sub_236DBA710();
}

uint64_t sub_236D9DBB0()
{
  sub_236DB9830();
  sub_236D9E0A0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  swift_bridgeObjectRetain();
  sub_236DB9A50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236D9DC64()
{
  return sub_236DBA710();
}

uint64_t sub_236D9DD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Zone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236D9DD84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.Zone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static PartialModelRelationshipDescriptor<>.zone.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3788);
  return MEMORY[0x270FA0480](v0, &unk_2688D1458);
}

uint64_t sub_236D9DE18()
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D37E8);
  swift_allocObject();
  uint64_t result = sub_236DB2E68(KeyPath);
  qword_2688D3768 = result;
  return result;
}

uint64_t sub_236D9DECC(void *a1)
{
  a1[1] = sub_236D9E0A0(&qword_2688D3790, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
  a1[2] = sub_236D9E0A0(&qword_2688D3798, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
  a1[3] = sub_236D9E0A0(&qword_2688D37A0, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
  a1[4] = sub_236D9E0A0(&qword_2688D37A8, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
  uint64_t result = sub_236D9E0A0(&qword_2688D37B0, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
  a1[5] = result;
  return result;
}

uint64_t sub_236D9DFC8()
{
  return sub_236D9E0A0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236D9E010()
{
  return sub_236D9E0A0(&qword_2688D37B8, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
}

uint64_t sub_236D9E058()
{
  return sub_236D9E0A0(&qword_2688D1800, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
}

uint64_t sub_236D9E0A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s4ZoneVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236D9E0FC);
}

uint64_t sub_236D9E0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s4ZoneVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236D9E1D4);
}

uint64_t sub_236D9E1D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_236D9E294()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s4ZoneV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236D9E3F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4ZoneV10CodingKeysOMa()
{
  return &_s4ZoneV10CodingKeysON;
}

unint64_t sub_236D9E430()
{
  unint64_t result = qword_2688D37D0;
  if (!qword_2688D37D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D37D0);
  }
  return result;
}

unint64_t sub_236D9E488()
{
  unint64_t result = qword_2688D37D8;
  if (!qword_2688D37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D37D8);
  }
  return result;
}

unint64_t sub_236D9E4E0()
{
  unint64_t result = qword_2688D37E0;
  if (!qword_2688D37E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D37E0);
  }
  return result;
}

uint64_t Array<A>.subscript.getter()
{
  return sub_236DB9AE0();
}

uint64_t sub_236D9E5D4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t ComposableModelDescriptor.id.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v9 - v6;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  swift_getAssociatedConformanceWitness();
  sub_236DBA280();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
}

uint64_t sub_236D9E7A0()
{
  uint64_t v0 = sub_236DB9830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236DBA280();
  char v4 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_236D9E8A8()
{
  return sub_236D9E7A0() & 1;
}

uint64_t dispatch thunk of ComposableModelDescriptor.baseDescriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_236D9E8E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D26704(a1, (uint64_t)v7, a3);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v7, v8);
  sub_236D267CC((uint64_t)v7, a3);
  char v12 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12 & 1;
}

uint64_t sub_236D9EA50@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v29 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3948);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v30 = v6;
  uint64_t v24 = a3;
  uint64_t v25 = a2;
  if (v13)
  {
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v26 = *(void *)(v7 + 72);
    uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    char v28 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    unint64_t v23 = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v15 = v30;
    while (1)
    {
      sub_236D26704(v14, (uint64_t)v12, &qword_2688D2920);
      uint64_t v16 = *v28;
      (*v28)((uint64_t)v12, 0, 1, v15);
      if ((*v27)(v12, 1, v15) == 1)
      {
        uint64_t v19 = v30;
        goto LABEL_11;
      }
      sub_236D26768((uint64_t)v12, (uint64_t)v9, &qword_2688D2920);
      char v17 = v29(v9);
      if (v3)
      {
        sub_236D267CC((uint64_t)v9, &qword_2688D2920);
        return swift_bridgeObjectRelease();
      }
      if (v17) {
        break;
      }
      sub_236D267CC((uint64_t)v9, &qword_2688D2920);
      v14 += v26;
      if (!--v13) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v24;
    sub_236D26768((uint64_t)v9, v24, &qword_2688D2920);
    return v16(v21, 0, 1, v30);
  }
  else
  {
    uint64_t v18 = v7 + 56;
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    unint64_t v23 = v18 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v19 = v30;
    v16((uint64_t)v12, 1, 1, v30);
LABEL_11:
    swift_bridgeObjectRelease();
    return v16(v24, 1, 1, v19);
  }
}

uint64_t sub_236D9ED2C@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v28 = a1;
  uint64_t v6 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E50);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v29 = v6;
  uint64_t v24 = a3;
  uint64_t v25 = a2;
  if (v13)
  {
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v26 = *(void *)(v7 + 72);
    uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    unint64_t v23 = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v16 = v29;
    while (1)
    {
      sub_236DA5304(v14, (uint64_t)v12, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      char v17 = *v27;
      (*v27)((uint64_t)v12, 0, 1, v16);
      if ((*v15)(v12, 1, v16) == 1)
      {
        uint64_t v20 = v29;
        goto LABEL_11;
      }
      sub_236DA8A4C((uint64_t)v12, (uint64_t)v9, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      char v18 = v28(v9);
      if (v3)
      {
        sub_236DA536C((uint64_t)v9, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
        return swift_bridgeObjectRelease();
      }
      if (v18) {
        break;
      }
      sub_236DA536C((uint64_t)v9, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      v14 += v26;
      if (!--v13) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v24;
    sub_236DA8A4C((uint64_t)v9, v24, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    return v17(v22, 0, 1, v29);
  }
  else
  {
    uint64_t v19 = v7 + 56;
    char v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    unint64_t v23 = v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v20 = v29;
    v17((uint64_t)v12, 1, 1, v29);
LABEL_11:
    swift_bridgeObjectRelease();
    return v17(v24, 1, 1, v20);
  }
}

uint64_t sub_236D9F040@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = a3(0);
  uint64_t v13 = a2;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v18 = (char *)&v25 - v17;
  uint64_t v19 = *(void *)(v15 + 16);
  if (v19)
  {
    uint64_t v26 = a5;
    uint64_t v27 = v16;
    uint64_t v28 = a6;
    uint64_t v20 = v15 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v21 = *(void *)(v14 + 72);
    uint64_t v29 = v15;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_236DA5304(v20, (uint64_t)v18, a4);
      char v22 = a1(v18);
      if (v6)
      {
        sub_236DA536C((uint64_t)v18, a4);
        return swift_bridgeObjectRelease();
      }
      if (v22) {
        break;
      }
      sub_236DA536C((uint64_t)v18, a4);
      v20 += v21;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = 1;
        a6 = v28;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    a6 = v28;
    sub_236DA8A4C((uint64_t)v18, v28, v26);
    uint64_t v23 = 0;
LABEL_10:
    uint64_t v16 = v27;
  }
  else
  {
    uint64_t v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a6, v23, 1, v16);
}

uint64_t HomesStore.HomesRelationshipModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.HomesRelationshipModel.homes.getter()
{
  return sub_236DA14EC((void (*)(void))type metadata accessor for HomesStore.HomesRelationshipModel);
}

uint64_t type metadata accessor for HomesStore.HomesRelationshipModel(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D39F0);
}

void static HomesStore.HomesRelationshipModel.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t HomesStore.HomesRelationshipModel.hash(into:)(uint64_t a1)
{
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel(0) + 20));
  swift_bridgeObjectRetain();
  sub_236DA479C(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.HomesRelationshipModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);
  return sub_236D9F3BC(v5, v6);
}

uint64_t sub_236D9F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v60 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v59 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v10 = *(void *)(v59 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v59);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v57 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v16 = MEMORY[0x270FA5388](v57);
  char v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16))
  {
LABEL_27:
    char v46 = 0;
    return v46 & 1;
  }
  if (!v22 || a1 == a2)
  {
    char v46 = 1;
    return v46 & 1;
  }
  uint64_t v47 = v5;
  uint64_t v48 = v10;
  uint64_t v23 = 0;
  unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(v19 + 72);
  uint64_t v54 = (char *)&v47 - v20;
  int v55 = v18;
  uint64_t v51 = a1 + v24;
  uint64_t v52 = v22;
  uint64_t v49 = v27;
  uint64_t v50 = a2 + v24;
  while (1)
  {
    uint64_t v53 = v23;
    uint64_t v28 = v27 * v23;
    sub_236DA5304(v25 + v27 * v23, (uint64_t)v21, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
    sub_236DA5304(v26 + v28, (uint64_t)v18, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
    if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0
      || (uint64_t v29 = v57[5],
          uint64_t v30 = *(void *)&v54[v29],
          uint64_t v31 = *(void *)&v55[v29],
          uint64_t v32 = *(void *)(v30 + 16),
          v32 != *(void *)(v31 + 16)))
    {
LABEL_26:
      sub_236DA536C((uint64_t)v55, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
      sub_236DA536C((uint64_t)v54, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
      goto LABEL_27;
    }
    if (v32 && v30 != v31) {
      break;
    }
LABEL_14:
    uint64_t v37 = v57[6];
    uint64_t v38 = *(void *)&v55[v37];
    uint64_t v58 = *(void *)&v54[v37];
    uint64_t v39 = *(void *)(v58 + 16);
    if (v39 != *(void *)(v38 + 16)) {
      goto LABEL_26;
    }
    if (v39 && v58 != v38)
    {
      unint64_t v40 = 0;
      unint64_t v41 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v56 = *(void *)(v47 + 72);
      do
      {
        uint64_t result = sub_236D26704(v58 + v41, (uint64_t)v9, &qword_2688D2920);
        if (v40 >= *(void *)(v38 + 16)) {
          goto LABEL_30;
        }
        uint64_t v42 = (uint64_t)v9;
        uint64_t v43 = v60;
        sub_236D26704(v38 + v41, v60, &qword_2688D2920);
        char v44 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
        uint64_t v45 = v43;
        uint64_t v9 = (char *)v42;
        sub_236D267CC(v45, &qword_2688D2920);
        sub_236D267CC(v42, &qword_2688D2920);
        if ((v44 & 1) == 0) {
          goto LABEL_26;
        }
        ++v40;
        v41 += v56;
      }
      while (v39 != v40);
    }
    uint64_t v21 = v54;
    char v18 = v55;
    char v46 = sub_236D9FC90(*(void *)&v54[v57[7]], *(void *)&v55[v57[7]]);
    sub_236DA536C((uint64_t)v18, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
    sub_236DA536C((uint64_t)v21, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
    if (v46)
    {
      uint64_t v23 = v53 + 1;
      uint64_t v26 = v50;
      uint64_t v25 = v51;
      uint64_t v27 = v49;
      if (v53 + 1 != v52) {
        continue;
      }
    }
    return v46 & 1;
  }
  unint64_t v33 = 0;
  unint64_t v34 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v58 = *(void *)(v48 + 72);
  while (1)
  {
    uint64_t result = sub_236DA5304(v30 + v34, (uint64_t)v15, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    if (v33 >= *(void *)(v31 + 16)) {
      break;
    }
    sub_236DA5304(v31 + v34, (uint64_t)v13, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0)
    {
      sub_236DA536C((uint64_t)v13, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      sub_236DA536C((uint64_t)v15, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      goto LABEL_26;
    }
    char v36 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
    sub_236DA536C((uint64_t)v13, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    sub_236DA536C((uint64_t)v15, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    if ((v36 & 1) == 0) {
      goto LABEL_26;
    }
    ++v33;
    v34 += v58;
    if (v32 == v33) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_236D9F924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_236DA5304(a1 + v12, (uint64_t)v10, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      sub_236DA5304(a2 + v12, (uint64_t)v7, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
        break;
      }
      char v15 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
      sub_236DA536C((uint64_t)v7, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      sub_236DA536C((uint64_t)v10, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      BOOL v17 = v14-- != 0;
      if (v15)
      {
        v12 += v13;
        if (v17) {
          continue;
        }
      }
      return v15 & 1;
    }
    sub_236DA536C((uint64_t)v7, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    sub_236DA536C((uint64_t)v10, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    goto LABEL_14;
  }
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_236D9FB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920) - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_236D26704(a1 + v12, (uint64_t)v10, &qword_2688D2920);
        sub_236D26704(a2 + v12, (uint64_t)v7, &qword_2688D2920);
        char v15 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
        sub_236D267CC((uint64_t)v7, &qword_2688D2920);
        sub_236D267CC((uint64_t)v10, &qword_2688D2920);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_236D9FC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v18 = (char *)&v32 - v17;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 == *(void *)(a2 + 16))
  {
    if (!v19 || a1 == a2) {
      return 1;
    }
    uint64_t v33 = *(void *)(a1 + 16);
    uint64_t v34 = v15;
    uint64_t v32 = v5;
    uint64_t v20 = 0;
    unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v36 = a2 + v21;
    uint64_t v37 = a1 + v21;
    uint64_t v35 = *(void *)(v16 + 72);
    uint64_t v39 = (char *)&v32 - v17;
    while (1)
    {
      uint64_t v38 = v20;
      uint64_t v23 = v35 * v20;
      sub_236DA5304(v37 + v23, (uint64_t)v18, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      sub_236DA5304(v36 + v23, (uint64_t)v14, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      uint64_t v24 = (uint64_t)v14;
      if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
        break;
      }
      uint64_t v25 = *(int *)(v34 + 20);
      uint64_t v26 = *(void *)&v39[v25];
      uint64_t v27 = *(void *)&v14[v25];
      uint64_t v28 = *(void *)(v26 + 16);
      if (v28 != *(void *)(v27 + 16)) {
        break;
      }
      if (v28 && v26 != v27)
      {
        unint64_t v29 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        uint64_t v30 = *(void *)(v32 + 72);
        do
        {
          sub_236D26704(v26 + v29, (uint64_t)v10, &qword_2688D2920);
          sub_236D26704(v27 + v29, (uint64_t)v8, &qword_2688D2920);
          char v31 = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
          sub_236D267CC((uint64_t)v8, &qword_2688D2920);
          sub_236D267CC((uint64_t)v10, &qword_2688D2920);
          if ((v31 & 1) == 0) {
            goto LABEL_15;
          }
          v29 += v30;
        }
        while (--v28);
      }
      uint64_t v20 = v38 + 1;
      uint64_t v14 = (char *)v24;
      sub_236DA536C(v24, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      char v18 = v39;
      sub_236DA536C((uint64_t)v39, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      uint64_t result = 1;
      if (v20 == v33) {
        return result;
      }
    }
LABEL_15:
    sub_236DA536C(v24, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
    sub_236DA536C((uint64_t)v39, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  }
  return 0;
}

uint64_t sub_236D9FFDC()
{
  if (*v0) {
    return 0x73656D6F68;
  }
  else {
    return 25705;
  }
}

uint64_t sub_236DA0008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236DA8528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236DA0030(uint64_t a1)
{
  unint64_t v2 = sub_236DA508C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236DA006C(uint64_t a1)
{
  unint64_t v2 = sub_236DA508C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.HomesRelationshipModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D37F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA508C();
  sub_236DBA760();
  char v12 = 0;
  sub_236DB9830();
  sub_236DA50E0(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel(0) + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3800);
    sub_236DA5128();
    sub_236DBA5A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t HomesStore.HomesRelationshipModel.hashValue.getter()
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel(0) + 20));
  swift_bridgeObjectRetain();
  sub_236DA479C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t HomesStore.HomesRelationshipModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_236DB9830();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3818);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HomesStore.HomesRelationshipModel(0);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA508C();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v23;
  char v29 = 0;
  sub_236DA50E0(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v15 = v26;
  uint64_t v16 = v24;
  sub_236DBA530();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3800);
  char v28 = 1;
  sub_236DA51EC();
  sub_236DBA530();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v16);
  uint64_t v18 = v20;
  *(void *)(v20 + *(int *)(v21 + 20)) = v27;
  sub_236DA5304(v18, v22, type metadata accessor for HomesStore.HomesRelationshipModel);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236DA536C(v18, type metadata accessor for HomesStore.HomesRelationshipModel);
}

uint64_t sub_236DA06B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.HomesRelationshipModel.init(from:)(a1, a2);
}

uint64_t sub_236DA06D0(void *a1)
{
  return HomesStore.HomesRelationshipModel.encode(to:)(a1);
}

uint64_t sub_236DA06E8(uint64_t a1)
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v3 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  sub_236DA479C((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t sub_236DA07A0(uint64_t a1, uint64_t a2)
{
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_236DA479C(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236DA084C(uint64_t a1, uint64_t a2)
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_236DA479C((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t sub_236DA0900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);
  return sub_236D9F3BC(v7, v8);
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.baseDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_236D26704(v1, a1, &qword_2688D3830);
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.room.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  return sub_236D26704(v1 + *(int *)(v3 + 20), a1, &qword_2688D2920);
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.hash(into:)()
{
  return sub_236DB99C0();
}

uint64_t static HomesStore.HomesRelationshipModel.Accessory.== infix(_:_:)()
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t sub_236DA0ACC()
{
  if (*v0) {
    return 1836019570;
  }
  else {
    return 0x6373654465736162;
  }
}

uint64_t sub_236DA0B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236DA85FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236DA0B34(uint64_t a1)
{
  unint64_t v2 = sub_236DA52B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236DA0B70(uint64_t a1)
{
  unint64_t v2 = sub_236DA52B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3838);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA52B0();
  sub_236DBA760();
  v8[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3830);
  sub_236DA6ABC(&qword_2688D3848, &qword_2688D3830);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
    v8[14] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
    sub_236DA6ABC(&qword_2688D3850, &qword_2688D2920);
    sub_236DBA5A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3830);
  MEMORY[0x270FA5388](v5);
  uint64_t v24 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3858);
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA52B0();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v18 = v9;
  uint64_t v19 = a1;
  uint64_t v13 = v22;
  uint64_t v12 = (uint64_t)v23;
  uint64_t v14 = (uint64_t)v11;
  char v27 = 0;
  sub_236DA6ABC(&qword_2688D3860, &qword_2688D3830);
  uint64_t v16 = (uint64_t)v24;
  uint64_t v15 = v25;
  sub_236DBA530();
  sub_236D26768(v16, v14, &qword_2688D3830);
  char v26 = 1;
  sub_236DA6ABC(&qword_2688D3868, &qword_2688D2920);
  sub_236DBA530();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v15);
  sub_236D26768(v12, v14 + *(int *)(v18 + 20), &qword_2688D2920);
  sub_236DA5304(v14, v20, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  return sub_236DA536C(v14, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
}

uint64_t sub_236DA11E4@<X0>(uint64_t a1@<X8>)
{
  return sub_236D26704(v1, a1, &qword_2688D3830);
}

uint64_t sub_236DA120C@<X0>(uint64_t a1@<X8>)
{
  return sub_236DA1D38(&qword_2688D3830, a1);
}

uint64_t sub_236DA1218@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.HomesRelationshipModel.Accessory.init(from:)(a1, a2);
}

uint64_t sub_236DA1230(void *a1)
{
  return HomesStore.HomesRelationshipModel.Accessory.encode(to:)(a1);
}

uint64_t sub_236DA1248()
{
  return sub_236DBA710();
}

uint64_t sub_236DA12F8()
{
  return sub_236DB99C0();
}

uint64_t sub_236DA1398()
{
  return sub_236DBA710();
}

uint64_t sub_236DA1444()
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  return _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t HomesStore.HomesRelationshipModel.Zone.baseDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_236D26704(v1, a1, &qword_2688D3870);
}

uint64_t HomesStore.HomesRelationshipModel.Zone.rooms.getter()
{
  return sub_236DA14EC((void (*)(void))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
}

uint64_t sub_236DA14EC(void (*a1)(void))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.HomesRelationshipModel.Zone.hash(into:)(uint64_t a1)
{
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0) + 20));
  swift_bridgeObjectRetain();
  sub_236DA5784(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static HomesStore.HomesRelationshipModel.Zone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);
  return sub_236D9FB0C(v5, v6);
}

uint64_t sub_236DA1638()
{
  if (*v0) {
    return 0x736D6F6F72;
  }
  else {
    return 0x6373654465736162;
  }
}

uint64_t sub_236DA167C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236DA8704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236DA16A4(uint64_t a1)
{
  unint64_t v2 = sub_236DA59D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236DA16E0(uint64_t a1)
{
  unint64_t v2 = sub_236DA59D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.HomesRelationshipModel.Zone.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3878);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA59D4();
  sub_236DBA760();
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3870);
  sub_236DA6ABC(&qword_2688D3888, &qword_2688D3870);
  sub_236DBA5A0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0) + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3890);
    sub_236DA5A28(&qword_2688D3898, &qword_2688D3850);
    sub_236DBA5A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t HomesStore.HomesRelationshipModel.Zone.hashValue.getter()
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v1 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  sub_236DA5784((uint64_t)v3, *(void *)(v0 + *(int *)(v1 + 20)));
  return sub_236DBA710();
}

uint64_t HomesStore.HomesRelationshipModel.Zone.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3870);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38A0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA59D4();
  sub_236DBA750();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v18;
  char v23 = 0;
  sub_236DA6ABC(&qword_2688D38A8, &qword_2688D3870);
  uint64_t v14 = v19;
  sub_236DBA530();
  sub_236D26768(v20, v12, &qword_2688D3870);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3890);
  char v22 = 1;
  sub_236DA5A28(&qword_2688D38B0, &qword_2688D3868);
  sub_236DBA530();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(void *)(v12 + *(int *)(v9 + 20)) = v21;
  sub_236DA5304(v12, v17, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236DA536C(v12, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
}

uint64_t sub_236DA1D04@<X0>(uint64_t a1@<X8>)
{
  return sub_236D26704(v1, a1, &qword_2688D3870);
}

uint64_t sub_236DA1D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_236DA1D38(&qword_2688D3870, a1);
}

uint64_t sub_236DA1D38@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236D26704(v2, (uint64_t)v7, a1);
  uint64_t v8 = sub_236DB9830();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a2, v7, v8);
  return sub_236D267CC((uint64_t)v7, a1);
}

uint64_t sub_236DA1E04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.HomesRelationshipModel.Zone.init(from:)(a1, a2);
}

uint64_t sub_236DA1E1C(void *a1)
{
  return HomesStore.HomesRelationshipModel.Zone.encode(to:)(a1);
}

uint64_t sub_236DA1E34(uint64_t a1)
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  sub_236DA5784((uint64_t)v4, *(void *)(v1 + *(int *)(a1 + 20)));
  return sub_236DBA710();
}

uint64_t sub_236DA1ED8(uint64_t a1, uint64_t a2)
{
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 20));
  return sub_236DA5784(a1, v5);
}

uint64_t sub_236DA1F70(uint64_t a1, uint64_t a2)
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  sub_236DA5784((uint64_t)v5, *(void *)(v2 + *(int *)(a2 + 20)));
  return sub_236DBA710();
}

uint64_t sub_236DA2010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);
  return sub_236D9FB0C(v7, v8);
}

uint64_t HomesStore.HomesRelationshipModel.Home.baseDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_236D26704(v1, a1, &qword_2688D38B8);
}

uint64_t HomesStore.HomesRelationshipModel.Home.accessories.getter()
{
  return sub_236DA14EC((void (*)(void))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
}

uint64_t HomesStore.HomesRelationshipModel.Home.rooms.getter()
{
  type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.HomesRelationshipModel.Home.zones.getter()
{
  type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  return swift_bridgeObjectRetain();
}

uint64_t HomesStore.HomesRelationshipModel.Home.hash(into:)(uint64_t a1)
{
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v3 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v4 = *(void *)(v1 + v3[5]);
  swift_bridgeObjectRetain();
  sub_236DA5AB0(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + v3[6]);
  swift_bridgeObjectRetain();
  sub_236DA5784(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v1 + v3[7]);
  swift_bridgeObjectRetain();
  sub_236DA53EC(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236DA2220()
{
  uint64_t result = 0x6373654465736162;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F737365636361;
      break;
    case 2:
      uint64_t result = 0x736D6F6F72;
      break;
    case 3:
      uint64_t result = 0x73656E6F7ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_236DA22BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236DA8814(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236DA22E4(uint64_t a1)
{
  unint64_t v2 = sub_236DA5DEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236DA2320(uint64_t a1)
{
  unint64_t v2 = sub_236DA5DEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.HomesRelationshipModel.Home.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA5DEC();
  sub_236DBA760();
  LOBYTE(v12) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38B8);
  sub_236DA6ABC(&qword_2688D38D0, &qword_2688D38B8);
  sub_236DBA5A0();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
    uint64_t v12 = *(void *)(v3 + v9[5]);
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38D8);
    sub_236DA5E40();
    sub_236DBA5A0();
    uint64_t v12 = *(void *)(v3 + v9[6]);
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3890);
    sub_236DA5A28(&qword_2688D3898, &qword_2688D3850);
    sub_236DBA5A0();
    uint64_t v12 = *(void *)(v3 + v9[7]);
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38F0);
    sub_236DA5EE4();
    sub_236DBA5A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t HomesStore.HomesRelationshipModel.Home.hashValue.getter()
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v1 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v2 = *(void *)(v0 + v1[5]);
  swift_bridgeObjectRetain();
  sub_236DA5AB0((uint64_t)v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + v1[6]);
  swift_bridgeObjectRetain();
  sub_236DA5784((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + v1[7]);
  swift_bridgeObjectRetain();
  sub_236DA53EC((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t HomesStore.HomesRelationshipModel.Home.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38B8);
  MEMORY[0x270FA5388](v3);
  uint64_t v17 = (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3908);
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v16 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DA5DEC();
  uint64_t v9 = v18;
  sub_236DBA750();
  if (v9) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = v15;
  uint64_t v11 = (uint64_t)v8;
  LOBYTE(v20) = 0;
  sub_236DA6ABC(&qword_2688D3910, &qword_2688D38B8);
  uint64_t v12 = v16;
  sub_236DBA530();
  sub_236D26768(v17, v11, &qword_2688D38B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38D8);
  char v19 = 1;
  sub_236DA5F88();
  sub_236DBA530();
  *(void *)(v11 + v6[5]) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3890);
  char v19 = 2;
  sub_236DA5A28(&qword_2688D38B0, &qword_2688D3868);
  sub_236DBA530();
  *(void *)(v11 + v6[6]) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38F0);
  char v19 = 3;
  sub_236DA602C();
  sub_236DBA530();
  (*(void (**)(void, uint64_t))(v10 + 8))(0, v12);
  *(void *)(v11 + v6[7]) = v20;
  sub_236DA5304(v11, v14, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_236DA536C(v11, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
}

uint64_t sub_236DA2B70@<X0>(uint64_t a1@<X8>)
{
  return sub_236D26704(v1, a1, &qword_2688D38B8);
}

uint64_t sub_236DA2B98@<X0>(uint64_t a1@<X8>)
{
  return sub_236DA1D38(&qword_2688D38B8, a1);
}

uint64_t sub_236DA2BA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.HomesRelationshipModel.Home.init(from:)(a1, a2);
}

uint64_t sub_236DA2BBC(void *a1)
{
  return HomesStore.HomesRelationshipModel.Home.encode(to:)(a1);
}

uint64_t sub_236DA2BD8(uint64_t a1, int *a2)
{
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v5 = *(void *)(v2 + a2[5]);
  swift_bridgeObjectRetain();
  sub_236DA5AB0(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + a2[6]);
  swift_bridgeObjectRetain();
  sub_236DA5784(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + a2[7]);
  swift_bridgeObjectRetain();
  sub_236DA53EC(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236DA2CCC(uint64_t a1, int *a2)
{
  sub_236DBA6E0();
  sub_236DB9830();
  sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
  sub_236DB99C0();
  uint64_t v4 = *(void *)(v2 + a2[5]);
  swift_bridgeObjectRetain();
  sub_236DA5AB0((uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + a2[6]);
  swift_bridgeObjectRetain();
  sub_236DA5784((uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + a2[7]);
  swift_bridgeObjectRetain();
  sub_236DA53EC((uint64_t)v8, v6);
  swift_bridgeObjectRelease();
  return sub_236DBA710();
}

uint64_t HomesStore.HomesRelationshipModel.visitKeyPaths<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 48);
  uint64_t v7 = type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v8 = sub_236DA50E0(&qword_2688D3938, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  v6(KeyPath, v7, &protocol witness table for HomesStore.HomesRelationshipModel.Home, v8, a2, a3);
  return swift_release();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void v30[2];
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, char *, uint64_t);
  uint64_t v36;
  void (**v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D38B8);
  MEMORY[0x270FA5388](v5 - 8);
  char v31 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = sub_236DB9830();
  uint64_t v35 = *(void (***)(char *, char *, uint64_t))(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = v7;
  uint64_t v32 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(a3 + 72);
  uint64_t v13 = sub_236DA50E0(&qword_2688D3938, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  uint64_t v14 = v8;
  uint64_t v15 = v8;
  uint64_t v16 = v13;
  uint64_t v17 = a2;
  char v44 = a3;
  v12(KeyPath, v15);
  swift_release();
  uint64_t result = *(void *)(v40 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel(0) + 20));
  char v19 = *(void *)(result + 16);
  if (v19)
  {
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v44 + 64);
    unint64_t v40 = v44 + 64;
    uint64_t v20 = result + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v21 = *(void *)(v9 + 72);
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v35 + 2);
    uint64_t v38 = v21;
    v35 += 4;
    uint64_t v36 = v17;
    v30[1] = result;
    swift_bridgeObjectRetain();
    uint64_t v33 = v14;
    uint64_t v34 = v16;
    char v22 = (uint64_t)v31;
    char v23 = v32;
    uint64_t v24 = (uint64_t)v43;
    uint64_t v25 = v41;
    do
    {
      sub_236DA5304(v20, v24, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
      char v26 = swift_getKeyPath();
      sub_236D26704(v24, v22, &qword_2688D38B8);
      (*v37)(v23, v22, v25);
      char v27 = sub_236D267CC(v22, &qword_2688D38B8);
      MEMORY[0x270FA5388](v27);
      (*v35)((char *)v30 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v25);
      char v29 = swift_getKeyPath();
      v39(v26, v29, v33, &protocol witness table for HomesStore.HomesRelationshipModel.Home, v34, v36, v44);
      swift_release();
      uint64_t v24 = (uint64_t)v43;
      swift_release();
      sub_236DA536C(v24, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
      v20 += v38;
      --v19;
    }
    while (v19);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236DA326C()
{
  return sub_236DB99F0() & 1;
}

uint64_t sub_236DA32F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HomesStore.HomesRelationshipModel.visitKeyPaths<A>(visitor:)(a1, a2, a3);
}

uint64_t HomesStore.HomesRelationshipModel.Accessory.visitKeyPaths<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v8 = sub_236DA6ABC(&qword_2688D3940, &qword_2688D2920);
  v6(KeyPath, v7, v8, a2, a3);
  return swift_release();
}

{
  uint64_t KeyPath;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t vars8;

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 32);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v8 = sub_236DA6ABC(&qword_2688D3940, &qword_2688D2920);
  v6(KeyPath, v7, v8, a2, a3);
  return swift_release();
}

uint64_t sub_236DA349C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HomesStore.HomesRelationshipModel.Accessory.visitKeyPaths<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_236DA34B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HomesStore.HomesRelationshipModel.Accessory.visitKeyPaths<A>(visitor:)(a1, a2, a3);
}

uint64_t HomesStore.HomesRelationshipModel.Zone.visitKeyPaths<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v8 = sub_236DA6ABC(&qword_2688D3940, &qword_2688D2920);
  v6(KeyPath, v7, v8, a2, a3);
  return swift_release();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (**v37)(char *, char *, uint64_t);
  uint64_t (**v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  unsigned int (**v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (**v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;

  char v46 = sub_236DB9830();
  uint64_t v37 = *(void (***)(char *, char *, uint64_t))(v46 - 8);
  MEMORY[0x270FA5388](v46);
  char v44 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3948);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(a3 + 72);
  uint64_t v15 = v7;
  unint64_t v41 = sub_236DA6ABC(&qword_2688D3940, &qword_2688D2920);
  uint64_t v42 = a1;
  uint64_t v47 = a2;
  uint64_t v49 = a3;
  v14(KeyPath, v7);
  swift_release();
  uint64_t v16 = *(void *)(v50 + *(int *)(type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0) + 20));
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v33 = v16;
  if (v17)
  {
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v39 = *(void *)(v8 + 72);
    unint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    char v19 = v37;
    v37 += 4;
    uint64_t v38 = (uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 2);
    uint64_t v36 = v49 + 56;
    swift_bridgeObjectRetain();
    uint64_t v35 = v7;
    uint64_t v21 = (uint64_t)v43;
    uint64_t v20 = v44;
    while (1)
    {
      sub_236D26704(v18, (uint64_t)v12, &qword_2688D2920);
      char v22 = *v48;
      (*v48)(v12, 0, 1, v15);
      if ((*v40)(v12, 1, v15) == 1) {
        break;
      }
      uint64_t v34 = v22;
      sub_236D26768((uint64_t)v12, v21, &qword_2688D2920);
      char v23 = swift_getKeyPath();
      uint64_t v24 = v12;
      uint64_t v25 = v46;
      char v26 = (*v38)(v20, v21, v46);
      uint64_t v50 = v17;
      MEMORY[0x270FA5388](v26);
      char v28 = v25;
      uint64_t v12 = v24;
      (*v37)((char *)&v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v28);
      char v29 = swift_getKeyPath();
      uint64_t v15 = v35;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v23, v29, v35, v41, v47);
      uint64_t v30 = v50;
      swift_release();
      swift_release();
      sub_236D267CC(v21, &qword_2688D2920);
      v18 += v39;
      uint64_t v17 = v30 - 1;
      if (!v17)
      {
        v34(v24, 1, 1, v15);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    char v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    v31(v12, 1, 1, v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236DA39C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236D9EA50((uint64_t (*)(char *))sub_236D269E8, *a1, a2);
}

uint64_t sub_236DA3A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HomesStore.HomesRelationshipModel.Zone.visitKeyPaths<A>(visitor:)(a1, a2, a3);
}

uint64_t HomesStore.HomesRelationshipModel.Home.visitKeyPaths<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 48);
  uint64_t v7 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v8 = sub_236DA50E0(&qword_2688D3950, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  v6(KeyPath, v7, &protocol witness table for HomesStore.HomesRelationshipModel.Accessory, v8, a2, a3);
  swift_release();
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v12 = sub_236DA6ABC(&qword_2688D3940, &qword_2688D2920);
  v10(v9, v11, v12, a2, a3);
  swift_release();
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  uint64_t v15 = sub_236DA50E0(&qword_2688D3958, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  v6(v13, v14, &protocol witness table for HomesStore.HomesRelationshipModel.Zone, v15, a2, a3);
  return swift_release();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  unsigned int (**v32)(void, void, void);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  int *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (**v82)(char *, char *, uint64_t);
  void (**v83)(char *, unsigned int (**)(void, void, void), uint64_t);
  uint64_t v84;
  unsigned int (**v85)(char *, uint64_t, uint64_t);
  uint64_t (**v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  void (**v90)(char *, uint64_t, uint64_t, uint64_t);
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;

  uint64_t v97 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3870);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v92 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  uint64_t v71 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  id v76 = *(v91 - 1);
  MEMORY[0x270FA5388](v91);
  id v89 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3948);
  MEMORY[0x270FA5388](v9 - 8);
  id v75 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3830);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v88 = (uint64_t *)((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_236DB9830();
  uint64_t v13 = *(void *)(v99 - 8);
  id v95 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v87 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E50);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  char v22 = *(void (**)(uint64_t, void *))(a3 + 72);
  char v23 = sub_236DA50E0(&qword_2688D3950, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  uint64_t v93 = v15;
  uint64_t v86 = (uint64_t (**)(char *, uint64_t, uint64_t))v23;
  uint64_t v79 = a3 + 72;
  os_log_type_t v78 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v22;
  v22(KeyPath, (void *)v15);
  swift_release();
  uint64_t v77 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v24 = *(void *)(v80 + v77[5]);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v96 = a3;
  uint64_t v72 = v7;
  uint64_t v74 = v13;
  uint64_t v73 = v24;
  if (v25)
  {
    char v26 = v24 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    id v90 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v84 = *(void *)(v16 + 72);
    uint64_t v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v82 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v83 = (void (**)(char *, unsigned int (**)(void, void, void), uint64_t))(v13 + 16);
    id v81 = a3 + 64;
    swift_bridgeObjectRetain();
    char v27 = v98;
    char v28 = v93;
    char v29 = v87;
    while (1)
    {
      sub_236DA5304(v26, (uint64_t)v20, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      uint64_t v30 = *v90;
      (*v90)(v20, 0, 1, v28);
      if ((*v85)(v20, 1, v28) == 1) {
        break;
      }
      sub_236DA8A4C((uint64_t)v20, v29, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      char v31 = swift_getKeyPath();
      uint64_t v32 = (unsigned int (**)(void, void, void))v88;
      sub_236D26704(v29, (uint64_t)v88, &qword_2688D3830);
      uint64_t v33 = v27;
      uint64_t v34 = v99;
      (*v83)(v33, v32, v99);
      uint64_t v35 = sub_236D267CC((uint64_t)v32, &qword_2688D3830);
      MEMORY[0x270FA5388](v35);
      uint64_t v37 = v34;
      char v27 = v98;
      (*v82)((char *)&v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), v98, v37);
      uint64_t v38 = swift_getKeyPath();
      a3 = v96;
      (*(void (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v96 + 64))(v31, v38, v93, &protocol witness table for HomesStore.HomesRelationshipModel.Accessory, v86, v97, v96);
      char v28 = v93;
      swift_release();
      swift_release();
      sub_236DA536C(v29, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      v26 += v84;
      if (!--v25) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    swift_bridgeObjectRetain();
    char v28 = v93;
LABEL_7:
    v30(v20, 1, 1, v28);
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = swift_getKeyPath();
  uint64_t v93 = sub_236DA6ABC(&qword_2688D3940, &qword_2688D2920);
  unint64_t v40 = v97;
  ((void (*)(uint64_t, void *))v78)(v39, v91);
  swift_release();
  unint64_t v41 = *(void *)(v80 + v77[6]);
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t v43 = v99;
  uint64_t v83 = (void (**)(char *, unsigned int (**)(void, void, void), uint64_t))v41;
  if (v42)
  {
    char v44 = v41 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    uint64_t v45 = v76 + 56;
    id v87 = *(void *)(v76 + 72);
    uint64_t v88 = (uint64_t *)(v76 + 48);
    uint64_t v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 32);
    uint64_t v86 = (uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 16);
    uint64_t v84 = a3 + 56;
    swift_bridgeObjectRetain();
    id v90 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v45;
    id v76 = v45 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v46 = v91;
    uint64_t v47 = (uint64_t)v75;
    uint64_t v48 = v89;
    while (1)
    {
      sub_236D26704(v44, v47, &qword_2688D2920);
      uint64_t v49 = *v90;
      (*v90)((char *)v47, 0, 1, (uint64_t)v46);
      if (((unsigned int (*)(uint64_t, uint64_t, void *))*v88)(v47, 1, v46) == 1) {
        break;
      }
      sub_236D26768(v47, v48, &qword_2688D2920);
      uint64_t v50 = swift_getKeyPath();
      uint64_t v51 = v98;
      uint64_t v52 = (*v86)(v98, v48, v43);
      MEMORY[0x270FA5388](v52);
      uint64_t v54 = v51;
      char v46 = v91;
      (*v85)((char *)&v71 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v54, v99);
      int v55 = swift_getKeyPath();
      unint64_t v40 = v97;
      (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v96 + 56))(v50, v55, v46, v93, v97);
      swift_release();
      uint64_t v43 = v99;
      swift_release();
      sub_236D267CC(v48, &qword_2688D2920);
      v44 += v87;
      if (!--v42) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56);
    swift_bridgeObjectRetain();
    char v46 = v91;
LABEL_14:
    v49(v75, 1, 1, (uint64_t)v46);
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = sub_236DA50E0(&qword_2688D3958, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  uint64_t v58 = v96;
  v78(v56, v94, v57, v40, v96);
  swift_release();
  uint64_t result = *(void *)(v80 + v77[7]);
  uint64_t v60 = *(void *)(result + 16);
  if (v60)
  {
    uint64_t v91 = *(void **)(v58 + 64);
    uint64_t v93 = v58 + 64;
    uint64_t v61 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    id v90 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v57;
    char v62 = result + v61;
    id v89 = *(void *)(v71 + 72);
    id v87 = v74 + 32;
    uint64_t v88 = (uint64_t *)(v74 + 16);
    uint64_t v86 = (uint64_t (**)(char *, uint64_t, uint64_t))result;
    swift_bridgeObjectRetain();
    uint64_t v63 = (uint64_t)v72;
    uint64_t v65 = v98;
    int64_t v64 = v99;
    do
    {
      sub_236DA5304(v62, v63, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      uint64_t v66 = swift_getKeyPath();
      uint64_t v67 = v92;
      sub_236D26704(v63, v92, &qword_2688D3870);
      ((void (*)(char *, uint64_t, uint64_t))*v88)(v65, v67, v64);
      uint64_t v68 = sub_236D267CC(v67, &qword_2688D3870);
      MEMORY[0x270FA5388](v68);
      (*(void (**)(char *, char *, uint64_t))v87)((char *)&v71 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0), v65, v64);
      uint64_t v70 = swift_getKeyPath();
      ((void (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v91)(v66, v70, v94, &protocol witness table for HomesStore.HomesRelationshipModel.Zone, v90, v97, v96);
      swift_release();
      swift_release();
      sub_236DA536C(v63, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      v62 += v89;
      --v60;
    }
    while (v60);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236DA4780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HomesStore.HomesRelationshipModel.Home.visitKeyPaths<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_236DA479C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v67 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  uint64_t v73 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v54 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v63 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3948);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v59 = (char *)&v53 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E50);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v65 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v62 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  uint64_t v17 = *((void *)v62 - 1);
  MEMORY[0x270FA5388](v62);
  char v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v79 = a1;
  uint64_t result = sub_236DBA6F0();
  uint64_t v58 = v20;
  if (v20)
  {
    uint64_t v22 = 0;
    uint64_t v57 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v56 = *(void *)(v17 + 72);
    unint64_t v66 = v54 + 56;
    int64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    unint64_t v76 = v67 + 56;
    char v23 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    uint64_t v68 = v8;
    uint64_t v61 = v19;
    while (1)
    {
      uint64_t v60 = v22;
      sub_236DA5304(v57 + v56 * v22, (uint64_t)v19, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
      uint64_t v24 = sub_236DB9830();
      uint64_t v77 = sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
      uint64_t v78 = v24;
      sub_236DB99C0();
      unint64_t v25 = *(void *)&v19[v62[5]];
      sub_236DBA6F0();
      unint64_t v26 = v25;
      uint64_t v27 = *(void *)(v25 + 16);
      unint64_t v69 = v26;
      if (v27)
      {
        unint64_t v55 = v66 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v28 = v54;
        uint64_t v29 = v26 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
        swift_bridgeObjectRetain();
        uint64_t v72 = *(char **)(v28 + 72);
        uint64_t v30 = v75;
        uint64_t v31 = (uint64_t)v65;
        while (1)
        {
          sub_236DA5304(v29, v31, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
          uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v66;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v66)(v31, 0, 1, v30);
          if ((*v64)(v31, 1, v30) == 1) {
            break;
          }
          uint64_t v71 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v32;
          uint64_t v33 = v31;
          uint64_t v34 = v63;
          sub_236DA8A4C(v33, v63, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
          uint64_t v74 = v27;
          sub_236DB99C0();
          uint64_t v35 = v74;
          sub_236DB99C0();
          uint64_t v30 = v75;
          uint64_t v36 = v34;
          uint64_t v31 = (uint64_t)v65;
          sub_236DA536C(v36, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
          v29 += (uint64_t)v72;
          uint64_t v27 = v35 - 1;
          if (!v27)
          {
            v71(v31, 1, 1, v30);
            break;
          }
        }
      }
      else
      {
        uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v66;
        swift_bridgeObjectRetain();
        v37(v65, 1, 1, v75);
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)&v61[v62[6]];
      sub_236DBA6F0();
      uint64_t v39 = *(void *)(v38 + 16);
      unint64_t v69 = v76 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      if (v39)
      {
        uint64_t v40 = v67;
        uint64_t v41 = v38 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
        uint64_t v74 = v38;
        swift_bridgeObjectRetain();
        uint64_t v42 = *(void *)(v40 + 72);
        uint64_t v43 = (uint64_t)v59;
        while (1)
        {
          sub_236D26704(v41, v43, &qword_2688D2920);
          char v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v76;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v76)(v43, 0, 1, v4);
          if ((*v23)(v43, 1, v4) == 1) {
            break;
          }
          sub_236D26768(v43, (uint64_t)v6, &qword_2688D2920);
          sub_236DB99C0();
          sub_236D267CC((uint64_t)v6, &qword_2688D2920);
          v41 += v42;
          if (!--v39)
          {
            uint64_t v45 = (char *)v43;
            uint64_t v46 = (uint64_t)v68;
            goto LABEL_17;
          }
        }
        uint64_t v46 = (uint64_t)v68;
      }
      else
      {
        char v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v76;
        swift_bridgeObjectRetain();
        uint64_t v45 = v59;
        uint64_t v46 = (uint64_t)v68;
LABEL_17:
        v44((uint64_t)v45, 1, 1, v4);
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v61[v62[7]];
      sub_236DBA6F0();
      uint64_t v74 = *((void *)v47 + 2);
      if (v74) {
        break;
      }
LABEL_4:
      char v19 = v61;
      uint64_t v22 = v60 + 1;
      uint64_t result = sub_236DA536C((uint64_t)v61, type metadata accessor for HomesStore.HomesRelationshipModel.Home);
      if (v22 == v58) {
        return result;
      }
    }
    uint64_t v72 = (char *)v47 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v48 = 0;
    uint64_t v71 = v47;
    while (v48 < *((void *)v47 + 2))
    {
      sub_236DA5304((uint64_t)&v72[*(void *)(v73 + 72) * v48], v46, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      sub_236DB99C0();
      uint64_t v49 = *(void *)(v46 + *(int *)(v70 + 20));
      sub_236DBA6F0();
      uint64_t v50 = *(void *)(v49 + 16);
      if (v50)
      {
        uint64_t v51 = v49 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
        uint64_t v52 = *(void *)(v67 + 72);
        while (1)
        {
          sub_236D26704(v51, (uint64_t)v13, &qword_2688D2920);
          v44((uint64_t)v13, 0, 1, v4);
          if ((*v23)((uint64_t)v13, 1, v4) == 1) {
            break;
          }
          sub_236D26768((uint64_t)v13, (uint64_t)v6, &qword_2688D2920);
          sub_236DB99C0();
          sub_236D267CC((uint64_t)v6, &qword_2688D2920);
          v51 += v52;
          if (!--v50)
          {
            uint64_t v46 = (uint64_t)v68;
            goto LABEL_21;
          }
        }
        uint64_t v46 = (uint64_t)v68;
        uint64_t v47 = v71;
      }
      else
      {
LABEL_21:
        uint64_t v47 = v71;
        v44((uint64_t)v13, 1, 1, v4);
      }
      ++v48;
      uint64_t result = sub_236DA536C(v46, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      if (v48 == v74)
      {
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_236DA508C()
{
  unint64_t result = qword_2688D37F8;
  if (!qword_2688D37F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D37F8);
  }
  return result;
}

uint64_t sub_236DA50E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236DA5128()
{
  unint64_t result = qword_2688D3808;
  if (!qword_2688D3808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3800);
    sub_236DA50E0(&qword_2688D3810, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3808);
  }
  return result;
}

uint64_t type metadata accessor for HomesStore.HomesRelationshipModel.Home(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D3A20);
}

unint64_t sub_236DA51EC()
{
  unint64_t result = qword_2688D3820;
  if (!qword_2688D3820)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3800);
    sub_236DA50E0(&qword_2688D3828, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3820);
  }
  return result;
}

uint64_t type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D3A00);
}

unint64_t sub_236DA52B0()
{
  unint64_t result = qword_2688D3840;
  if (!qword_2688D3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3840);
  }
  return result;
}

uint64_t sub_236DA5304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236DA536C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for HomesStore.HomesRelationshipModel.Zone(uint64_t a1)
{
  return sub_236D6083C(a1, (uint64_t *)&unk_2688D3A10);
}

uint64_t sub_236DA53EC(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  v27[0] = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3948);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for HomesStore.HomesRelationshipModel.Zone(0);
  uint64_t v9 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v37 = a1;
  uint64_t result = sub_236DBA6F0();
  uint64_t v31 = v12;
  if (v12)
  {
    uint64_t v14 = 0;
    uint64_t v29 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v30 = v11;
    uint64_t v28 = *(void *)(v9 + 72);
    uint64_t v15 = v27[0] + 56;
    uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27[0] + 48);
    uint64_t v17 = &qword_2688D2920;
    do
    {
      char v19 = v17;
      sub_236DA5304(v29 + v28 * v14, (uint64_t)v11, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
      uint64_t v20 = sub_236DB9830();
      uint64_t v34 = sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
      uint64_t v35 = v20;
      sub_236DB99C0();
      uint64_t v21 = *(void *)&v11[*(int *)(v32 + 20)];
      sub_236DBA6F0();
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v33 = v14;
      if (v22)
      {
        v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v23 = v21
            + ((*(unsigned __int8 *)(v27[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27[0] + 80));
        uint64_t v24 = *(void *)(v27[0] + 72);
        while (1)
        {
          sub_236D26704(v23, (uint64_t)v8, v17);
          uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
          uint64_t v25 = v36;
          (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v8, 0, 1, v36);
          uint64_t v26 = v25;
          uint64_t v17 = v19;
          if ((*v16)(v8, 1, v26) == 1) {
            break;
          }
          sub_236D26768((uint64_t)v8, (uint64_t)v5, v19);
          sub_236DB99C0();
          uint64_t v17 = v19;
          sub_236D267CC((uint64_t)v5, v19);
          v23 += v24;
          if (!--v22) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
LABEL_4:
        v18(v8, 1, 1, v36);
      }
      uint64_t v14 = v33 + 1;
      uint64_t v11 = v30;
      uint64_t result = sub_236DA536C((uint64_t)v30, type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
    }
    while (v14 != v31);
  }
  return result;
}

uint64_t sub_236DA5784(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3948);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v19 = a1;
  sub_236DBA6F0();
  if (v10)
  {
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v12 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v13 = *(void *)(v4 + 72);
    unint64_t v17 = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = v13;
    while (1)
    {
      sub_236D26704(v11, (uint64_t)v9, &qword_2688D2920);
      uint64_t v14 = *v12;
      uint64_t v15 = v20;
      (*v12)(v9, 0, 1, v20);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v15);
      if (result == 1) {
        break;
      }
      sub_236D26768((uint64_t)v9, (uint64_t)v6, &qword_2688D2920);
      sub_236DB9830();
      sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
      sub_236DB99C0();
      sub_236D267CC((uint64_t)v6, &qword_2688D2920);
      v11 += v18;
      if (!--v10) {
        return v14(v9, 1, 1, v20);
      }
    }
  }
  else
  {
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    return v14(v9, 1, 1, v20);
  }
  return result;
}

unint64_t sub_236DA59D4()
{
  unint64_t result = qword_2688D3880;
  if (!qword_2688D3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3880);
  }
  return result;
}

uint64_t sub_236DA5A28(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3890);
    sub_236DA6ABC(a2, &qword_2688D2920);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236DA5AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.HomesRelationshipModel.Accessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2E50);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v19 = a1;
  sub_236DBA6F0();
  if (v11)
  {
    uint64_t v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v16 = *(void *)(v5 + 72);
    unint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v18 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v15[1] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      sub_236DA5304(v12, (uint64_t)v10, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      uint64_t v13 = *v18;
      (*v18)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      sub_236DA8A4C((uint64_t)v10, (uint64_t)v7, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      sub_236DB9830();
      sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
      sub_236DB99C0();
      sub_236DB99C0();
      sub_236DA536C((uint64_t)v7, type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
      v12 += v16;
      if (!--v11) {
        return v13(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v13(v10, 1, 1, v4);
  }
  return result;
}

uint64_t _s11HomeKitCore10HomesStoreC0D17RelationshipModelV0A0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for HomesStore.HomesRelationshipModel.Home(0);
  if ((sub_236D9F924(*(void *)(a1 + v4[5]), *(void *)(a2 + v4[5])) & 1) == 0
    || (sub_236D9FB0C(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = v4[7];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a2 + v5);
  return sub_236D9FC90(v6, v7);
}

unint64_t sub_236DA5DEC()
{
  unint64_t result = qword_2688D38C8;
  if (!qword_2688D38C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D38C8);
  }
  return result;
}

unint64_t sub_236DA5E40()
{
  unint64_t result = qword_2688D38E0;
  if (!qword_2688D38E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D38D8);
    sub_236DA50E0(&qword_2688D38E8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D38E0);
  }
  return result;
}

unint64_t sub_236DA5EE4()
{
  unint64_t result = qword_2688D38F8;
  if (!qword_2688D38F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D38F0);
    sub_236DA50E0(&qword_2688D3900, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D38F8);
  }
  return result;
}

unint64_t sub_236DA5F88()
{
  unint64_t result = qword_2688D3918;
  if (!qword_2688D3918)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D38D8);
    sub_236DA50E0(&qword_2688D3920, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3918);
  }
  return result;
}

unint64_t sub_236DA602C()
{
  unint64_t result = qword_2688D3928;
  if (!qword_2688D3928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D38F0);
    sub_236DA50E0(&qword_2688D3930, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3928);
  }
  return result;
}

uint64_t sub_236DA60D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, (uint64_t (*)(char *))sub_236DA8AB4, type metadata accessor for HomesStore.HomesRelationshipModel.Home, type metadata accessor for HomesStore.HomesRelationshipModel.Home, type metadata accessor for HomesStore.HomesRelationshipModel.Home, a2);
}

uint64_t sub_236DA6138()
{
  return sub_236DB99D0();
}

uint64_t sub_236DA61A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_48Tm(a1, a2, a3, (uint64_t)sub_236D269E8, (uint64_t (*)(uint64_t, void *, uint64_t))sub_236D9EA50);
}

uint64_t keypath_get_48Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void *, uint64_t))
{
  uint64_t v5 = *a1;
  v7[2] = a2;
  return a5(a4, v7, v5);
}

uint64_t sub_236DA6224@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, (uint64_t (*)(char *))sub_236DA8A24, type metadata accessor for HomesStore.HomesRelationshipModel.Zone, type metadata accessor for HomesStore.HomesRelationshipModel.Zone, type metadata accessor for HomesStore.HomesRelationshipModel.Zone, a2);
}

uint64_t keypath_getTm@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(char *)@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t (*a5)(void)@<X6>, uint64_t a6@<X8>)
{
  return sub_236D9F040(a2, *a1, a3, a4, a5, a6);
}

uint64_t sub_236DA62E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_48Tm(a1, a2, a3, (uint64_t)sub_236DA89FC, (uint64_t (*)(uint64_t, void *, uint64_t))sub_236D9ED2C);
}

unint64_t keypath_get_arg_layoutTm()
{
  return (*(void *)(*(void *)(sub_236DB9830() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
}

uint64_t keypath_copyTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t keypath_arg_initTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_236DA6464(uint64_t a1)
{
  uint64_t result = sub_236DA50E0(&qword_2688D1810, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236DA64BC(void *a1)
{
  a1[1] = sub_236DA50E0(&qword_2688D3960, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
  a1[2] = sub_236DA50E0(&qword_2688D3968, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
  a1[3] = sub_236DA50E0(&qword_2688D3970, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
  a1[4] = sub_236DA50E0(&qword_2688D3978, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
  uint64_t result = sub_236DA50E0(&qword_2688D3980, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
  a1[5] = result;
  return result;
}

uint64_t sub_236DA65B8()
{
  return sub_236DA50E0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236DA6600()
{
  return sub_236DA50E0(&qword_2688D3988, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
}

uint64_t sub_236DA6648()
{
  return sub_236DA50E0(&qword_2688D1810, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel);
}

uint64_t sub_236DA6690()
{
  return sub_236DA6ABC(&qword_2688D3990, &qword_2688D3830);
}

uint64_t sub_236DA66CC(uint64_t a1)
{
  uint64_t result = sub_236DA50E0(&qword_2688D3950, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236DA6724()
{
  return sub_236DA50E0(&qword_2688D1828, (void (*)(uint64_t))type metadata accessor for HomesStore.Accessory);
}

uint64_t sub_236DA676C(void *a1)
{
  a1[1] = sub_236DA50E0(&qword_2688D3920, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  a1[2] = sub_236DA50E0(&qword_2688D38E8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  a1[3] = sub_236DA50E0(&qword_2688D3998, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  uint64_t result = sub_236DA50E0(&qword_2688D39A0, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
  a1[4] = result;
  return result;
}

uint64_t sub_236DA6840()
{
  return sub_236DA50E0(&qword_2688D39A8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Accessory);
}

uint64_t sub_236DA6888()
{
  return sub_236DA6ABC(&qword_2688D39B0, &qword_2688D3870);
}

uint64_t sub_236DA68C4(uint64_t a1)
{
  uint64_t result = sub_236DA50E0(&qword_2688D3958, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236DA691C()
{
  return sub_236DA50E0(&qword_2688D1800, (void (*)(uint64_t))type metadata accessor for HomesStore.Zone);
}

uint64_t sub_236DA6964(void *a1)
{
  a1[1] = sub_236DA50E0(&qword_2688D3930, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  a1[2] = sub_236DA50E0(&qword_2688D3900, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  a1[3] = sub_236DA50E0(&qword_2688D39B8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  uint64_t result = sub_236DA50E0(&qword_2688D39C0, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
  a1[4] = result;
  return result;
}

uint64_t sub_236DA6A38()
{
  return sub_236DA50E0(&qword_2688D39C8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Zone);
}

uint64_t sub_236DA6A80()
{
  return sub_236DA6ABC(&qword_2688D39D0, &qword_2688D38B8);
}

uint64_t sub_236DA6ABC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236DA6B00(uint64_t a1)
{
  uint64_t result = sub_236DA50E0(&qword_2688D3938, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236DA6B58()
{
  return sub_236DA50E0(&qword_2688D1818, (void (*)(uint64_t))type metadata accessor for HomesStore.Home);
}

uint64_t sub_236DA6BA0(void *a1)
{
  a1[1] = sub_236DA50E0(&qword_2688D3828, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  a1[2] = sub_236DA50E0(&qword_2688D3810, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  a1[3] = sub_236DA50E0(&qword_2688D39D8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  uint64_t result = sub_236DA50E0(&qword_2688D39E0, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
  a1[4] = result;
  return result;
}

uint64_t sub_236DA6C74()
{
  return sub_236DA50E0(&qword_2688D39E8, (void (*)(uint64_t))type metadata accessor for HomesStore.HomesRelationshipModel.Home);
}

uint64_t _s22HomesRelationshipModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236DA6CE8);
}

uint64_t sub_236DA6CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s22HomesRelationshipModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236DA6DBC);
}

uint64_t sub_236DA6DBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t *_s22HomesRelationshipModelV9AccessoryVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236DB9830();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236DA7278);
}

uint64_t sub_236DA7278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3830);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t _s22HomesRelationshipModelV9AccessoryVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236DA738C);
}

uint64_t sub_236DA738C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3830);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2920);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_236DA7498()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s22HomesRelationshipModelV4ZoneVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s22HomesRelationshipModelV4ZoneVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s22HomesRelationshipModelV4ZoneVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22HomesRelationshipModelV4ZoneVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22HomesRelationshipModelV4ZoneVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s22HomesRelationshipModelV4ZoneVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22HomesRelationshipModelV4ZoneVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236DA7888);
}

uint64_t sub_236DA7888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, &qword_2688D3870);
}

uint64_t _s22HomesRelationshipModelV4ZoneVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236DA78A8);
}

uint64_t sub_236DA78A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, &qword_2688D3870);
}

uint64_t sub_236DA78B4()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s22HomesRelationshipModelV4HomeVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s22HomesRelationshipModelV4HomeVwxx(uint64_t a1)
{
  uint64_t v2 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s22HomesRelationshipModelV4HomeVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22HomesRelationshipModelV4HomeVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22HomesRelationshipModelV4HomeVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t _s22HomesRelationshipModelV4HomeVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22HomesRelationshipModelV4HomeVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236DA7D84);
}

uint64_t sub_236DA7D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, &qword_2688D38B8);
}

uint64_t _s22HomesRelationshipModelV4HomeVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236DA7DA4);
}

uint64_t sub_236DA7DA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, &qword_2688D38B8);
}

uint64_t sub_236DA7DB0()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s22HomesRelationshipModelV4HomeV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22HomesRelationshipModelV4HomeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236DA7FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s22HomesRelationshipModelV4HomeV10CodingKeysOMa()
{
  return &_s22HomesRelationshipModelV4HomeV10CodingKeysON;
}

ValueMetadata *_s22HomesRelationshipModelV4ZoneV10CodingKeysOMa()
{
  return &_s22HomesRelationshipModelV4ZoneV10CodingKeysON;
}

ValueMetadata *_s22HomesRelationshipModelV9AccessoryV10CodingKeysOMa()
{
  return &_s22HomesRelationshipModelV9AccessoryV10CodingKeysON;
}

unsigned char *_s22HomesRelationshipModelV4ZoneV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236DA80D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s22HomesRelationshipModelV10CodingKeysOMa()
{
  return &_s22HomesRelationshipModelV10CodingKeysON;
}

unint64_t sub_236DA810C()
{
  unint64_t result = qword_2688D3A30;
  if (!qword_2688D3A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A30);
  }
  return result;
}

unint64_t sub_236DA8164()
{
  unint64_t result = qword_2688D3A38;
  if (!qword_2688D3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A38);
  }
  return result;
}

unint64_t sub_236DA81BC()
{
  unint64_t result = qword_2688D3A40;
  if (!qword_2688D3A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A40);
  }
  return result;
}

unint64_t sub_236DA8214()
{
  unint64_t result = qword_2688D3A48;
  if (!qword_2688D3A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A48);
  }
  return result;
}

unint64_t sub_236DA826C()
{
  unint64_t result = qword_2688D3A50;
  if (!qword_2688D3A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A50);
  }
  return result;
}

unint64_t sub_236DA82C4()
{
  unint64_t result = qword_2688D3A58;
  if (!qword_2688D3A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A58);
  }
  return result;
}

unint64_t sub_236DA831C()
{
  unint64_t result = qword_2688D3A60;
  if (!qword_2688D3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A60);
  }
  return result;
}

unint64_t sub_236DA8374()
{
  unint64_t result = qword_2688D3A68;
  if (!qword_2688D3A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A68);
  }
  return result;
}

unint64_t sub_236DA83CC()
{
  unint64_t result = qword_2688D3A70;
  if (!qword_2688D3A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A70);
  }
  return result;
}

unint64_t sub_236DA8424()
{
  unint64_t result = qword_2688D3A78;
  if (!qword_2688D3A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A78);
  }
  return result;
}

unint64_t sub_236DA847C()
{
  unint64_t result = qword_2688D3A80;
  if (!qword_2688D3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3A80);
  }
  return result;
}

unint64_t sub_236DA84D4()
{
  unint64_t result = qword_2688D3A88[0];
  if (!qword_2688D3A88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2688D3A88);
  }
  return result;
}

uint64_t sub_236DA8528(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D6F68 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236DA85FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6373654465736162 && a2 == 0xEE00726F74706972;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1836019570 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236DA8704(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6373654465736162 && a2 == 0xEE00726F74706972;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D6F6F72 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236DA8814(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6373654465736162 && a2 == 0xEE00726F74706972;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000736569 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D6F6F72 && a2 == 0xE500000000000000 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_236DA89FC(uint64_t a1)
{
  return sub_236D9E8E0(a1, *(void *)(v1 + 16), &qword_2688D3830) & 1;
}

uint64_t sub_236DA8A24(uint64_t a1)
{
  return sub_236D9E8E0(a1, *(void *)(v1 + 16), &qword_2688D3870) & 1;
}

uint64_t sub_236DA8A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236DA8AB4(uint64_t a1)
{
  return sub_236D9E8E0(a1, *(void *)(v1 + 16), &qword_2688D38B8) & 1;
}

uint64_t sub_236DA8ADC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_236DA8B70()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t _s20ManagedObjectFetcherCMa()
{
  return __swift_instantiateGenericMetadata();
}

void sub_236DA8C34(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236DA8C70(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236DA8CAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236DA8CE8(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, unint64_t *a4@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t *a6@<X8>)
{
  id v10 = [*a1 *a2];
  a3(0);
  sub_236DA9374(a4, 255, a5);
  uint64_t v11 = sub_236DB9E10();

  *a6 = v11;
}

void sub_236DA8D8C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236DA8DC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t), SEL *a8)
{
  uint64_t v11 = *a2;
  a5(0);
  sub_236DA9374(a6, 255, a7);
  id v12 = (id)sub_236DB9E00();
  objc_msgSend(v11, *a8, v12);
}

id HMCDRoomModel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id HMCDRoomModel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for HMCDRoomModel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for HMCDRoomModel()
{
  return self;
}

id HMCDRoomModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMCDRoomModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static HMCDRoomModel.entityName.getter()
{
  return 0x6D6F6F5244434D48;
}

uint64_t sub_236DA900C()
{
  return 0x6D6F6F5244434D48;
}

uint64_t sub_236DA9030(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_236DA9374(qword_2688D3B10, a2, (void (*)(uint64_t))type metadata accessor for HMCDRoomModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_236DA9088@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HMCDRoomModel();
  uint64_t result = sub_236DBA290();
  *a1 = result;
  return result;
}

void sub_236DA90CC(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB97F0();
  objc_msgSend(v2, sel_setModelID_, v3);
}

void sub_236DA912C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  id v3 = (id)sub_236DB9A00();
  objc_msgSend(v2, sel_setName_, v3);
}

char *keypath_get_selector_isDefault()
{
  return sel_isDefault;
}

id sub_236DA919C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isDefault);
  *a2 = (_BYTE)result;
  return result;
}

id sub_236DA91D0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsDefault_, *a1);
}

id sub_236DA91E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_home);
  *a2 = result;
  return result;
}

id sub_236DA9220(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHome_, *a1);
}

void sub_236DA9234(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236DA9284(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_236DA92D4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_236DA9324(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_236DA9374(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RelationshipResolver.ModelProxy.id.getter()
{
  return sub_236DBA280();
}

uint64_t RelationshipResolver.ModelProxy.descriptor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2);
}

uint64_t RelationshipResolver.ModelProxy.underlyingModel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t sub_236DA948C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v43 = a7;
  uint64_t v12 = sub_236DB9830();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v36 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_236DBA090();
  uint64_t v34 = *(void *)(v17 - 8);
  uint64_t v35 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v46 = a3;
  unint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v24 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v34 - v26;
  uint64_t v28 = a2[3];
  char v44 = a2;
  __swift_project_boxed_opaque_existential_1(a2, v28);
  uint64_t v42 = a4;
  uint64_t v37 = a6;
  sub_236DAAEF0(v45, (uint64_t)&type metadata for ModelProvider, a4, (uint64_t)&off_26EA00A28, a6, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v35);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v36, v45, v42);
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_236DBA260();
    sub_236DB9A70();
    uint64_t v32 = v38;
    sub_236DBA280();
    sub_236D1BD8C((unint64_t *)&qword_2688D1900);
    uint64_t v33 = v40;
    sub_236DBA5C0();
    sub_236DB9A70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v33);
    uint64_t result = sub_236DBA450();
    __break(1u);
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v23, v20, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v27, v45, v42);
    v29(&v27[*(int *)(v24 + 52)], v23, AssociatedTypeWitness);
    uint64_t v30 = (uint64_t)v44;
    sub_236D1B32C((uint64_t)v44, (uint64_t)&v27[*(int *)(v24 + 56)]);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v43, v27, v24);
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  return result;
}

uint64_t RelationshipResolver.ModelProxy.subscript.getter()
{
  return swift_getAtKeyPath();
}

uint64_t RelationshipResolver.ModelProxy.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v18[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18[-1] - v14;
  swift_getAtKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_236D1B32C(v5 + *(int *)(a2 + 56), (uint64_t)v18);
  sub_236DA948C((uint64_t)v13, v18, *(void *)(a2 + 16), v9, *(void *)(a2 + 32), a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t RelationshipResolver.ModelProxy.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  swift_getAtKeyPath();
  uint64_t v24 = v20;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v15 = *(_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(*MEMORY[0x263F8EA20] + v6 + 8);
  uint64_t v16 = *(void *)(v8 + 16);
  long long v17 = v7;
  uint64_t v18 = a3;
  uint64_t v19 = v3;
  uint64_t v20 = v15;
  uint64_t v21 = v16;
  uint64_t v22 = v7;
  uint64_t v23 = a3;
  uint64_t v9 = type metadata accessor for RelationshipResolver.ModelProxy();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = sub_236DB74FC((void (*)(char *, char *))sub_236DA9D80, (uint64_t)&v14, v8, v9, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_236DA9C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v23[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v23[0] = a3;
  v23[1] = a4;
  v23[2] = a6;
  v23[3] = a7;
  uint64_t v20 = type metadata accessor for RelationshipResolver.ModelProxy();
  sub_236D1B32C(a2 + *(int *)(v20 + 56), (uint64_t)v23);
  return sub_236DA948C((uint64_t)v18, v23, a3, a5, a6, a8, a9);
}

uint64_t sub_236DA9D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236DA9C48(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t type metadata accessor for RelationshipResolver.ModelProxy()
{
  return swift_getGenericMetadata();
}

uint64_t static RelationshipResolver.ModelProxy.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_236DB9830();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - v15;
  v19[0] = a3;
  v19[1] = a4;
  void v19[2] = a5;
  v19[3] = a6;
  type metadata accessor for RelationshipResolver.ModelProxy();
  sub_236DBA280();
  sub_236DBA280();
  LOBYTE(a6) = _s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v14, v10);
  v17(v16, v10);
  return a6 & 1;
}

uint64_t RelationshipResolver.ModelProxy.hash(into:)()
{
  uint64_t v0 = sub_236DB9830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236DBA280();
  sub_236D1BD8C((unint64_t *)&qword_2688D15A8);
  sub_236DB99C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t RelationshipResolver.ModelProxy.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t sub_236DAA0B0()
{
  return sub_236DBA710();
}

uint64_t sub_236DAA0F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_236DAA110(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static RelationshipResolver.ModelProxy.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_236DAA120()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_236DAA218(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  unint64_t v14 = ((v13 + v12) & 0xFFFFFFFFFFFFFFF8) + 40;
  unsigned int v15 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    unint64_t v22 = (v13 + (((unint64_t)a1 + v11) & v20)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v13 + v21) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)(v23 + 24);
    *(void *)(v22 + 24) = v24;
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
    (**(void (***)(void))(v24 - 8))();
  }
  return a1;
}

uint64_t sub_236DAA41C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 24));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  unint64_t v9 = (*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return __swift_destroy_boxed_opaque_existential_0(v9);
}

uint64_t sub_236DAA4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 24));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  unint64_t v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 24);
  *(void *)(v14 + 24) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  (**(void (***)(void))(v16 - 8))();
  return a1;
}

uint64_t sub_236DAA63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 24));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, AssociatedTypeWitness);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(void *)(v9 + 40) + 7 + v11) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v9 + 40) + 7 + v12) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_236DAA734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 24));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 32) + 7;
  unint64_t v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 32);
  long long v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(void *)(v14 + 32) = v16;
  return a1;
}

uint64_t sub_236DAA838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 24));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 24) + 7;
  unint64_t v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v14);
  long long v16 = *(_OWORD *)v15;
  long long v17 = *(_OWORD *)(v15 + 16);
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(_OWORD *)unint64_t v14 = v16;
  *(_OWORD *)(v14 + 16) = v17;
  return a1;
}

uint64_t sub_236DAA944(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 40;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236DAABC4);
      case 4:
        int v20 = *(int *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_24:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    uint64_t v24 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v24(a1, v7, v5);
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)(((v14 + v25) & 0xFFFFFFFFFFFFFFF8) + 24);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
}

double sub_236DAABD8(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  if (v12 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = *(void *)(v8 + 64) + v13;
  uint64_t v16 = *(void *)(v10 + 64) + 7;
  unint64_t v17 = ((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v14 >= a3)
  {
    int v20 = 0;
    int v21 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_19:
      uint64_t v22 = ~v13;
      switch(v20)
      {
        case 1:
          *((unsigned char *)a1 + v17) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v17) = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)((char *)a1 + v17) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v9 == v14)
            {
              unint64_t v25 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v29 + 56);
              v25(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v26 = ((unint64_t)a1 + v15) & v22;
              if (v12 == v14)
              {
                unint64_t v27 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v27(v26, a2);
              }
              else
              {
                unint64_t v28 = (v16 + v26) & 0xFFFFFFFFFFFFFFF8;
                if ((a2 & 0x80000000) != 0)
                {
                  double result = 0.0;
                  *(_OWORD *)(v28 + 8) = 0u;
                  *(_OWORD *)(v28 + 24) = 0u;
                  *(void *)unint64_t v28 = a2 ^ 0x80000000;
                }
                else
                {
                  *(void *)(v28 + 24) = (a2 - 1);
                }
              }
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      unsigned int v18 = a3 - v14 + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
    int v21 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_19;
    }
  }
  if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    int v23 = v21;
  }
  else {
    int v23 = 1;
  }
  if (((v16 + (v15 & ~v13)) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    int v24 = ~v14 + a2;
    bzero(a1, ((v16 + (v15 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v24;
  }
  switch(v20)
  {
    case 1:
      *((unsigned char *)a1 + v17) = v23;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v17) = v23;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x236DAAEC8);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = v23;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_236DAAEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v15[3] = a3;
  void v15[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t, uint64_t))(a4 + 8))(v16, v15, a2, a4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17E8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v13 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a6, v13 ^ 1u, 1, AssociatedTypeWitness);
}

unint64_t sub_236DAB034()
{
  unint64_t result = qword_2688D1AF0;
  if (!qword_2688D1AF0)
  {
    type metadata accessor for HMCDZoneModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AF0);
  }
  return result;
}

_UNKNOWN **sub_236DAB08C()
{
  return &off_26EA01150;
}

unint64_t sub_236DAB098()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DBEEE0;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 1701667182;
  *(void *)(inited + 72) = 0xE400000000000000;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE750 = result;
  return result;
}

uint64_t sub_236DAB138()
{
  if (qword_2688D1368 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_236DAB198()
{
  unint64_t result = qword_2688D1AE8;
  if (!qword_2688D1AE8)
  {
    type metadata accessor for HMCDAppleMediaDeviceModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D1AE8);
  }
  return result;
}

_UNKNOWN **sub_236DAB1F0()
{
  return &off_26EA01168;
}

uint64_t sub_236DAB1FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_modelID);
  sub_236DB9810();

  v7[*(int *)(v4 + 20)] = objc_msgSend(a1, sel_isCurrentDevice);
  id v9 = objc_msgSend(a1, sel_idsDestination);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_236DB9A10();
    uint64_t v13 = v12;
  }
  else
  {

    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  unsigned int v14 = (uint64_t *)&v7[*(int *)(v4 + 24)];
  uint64_t *v14 = v11;
  v14[1] = v13;
  sub_236DAB4B8((uint64_t)v7, a2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

unint64_t sub_236DAB374()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236DC2A90;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x44496C65646F6DLL;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 0x6E65727275437369;
  *(void *)(inited + 72) = 0xEF65636976654474;
  *(void *)(inited + 80) = swift_getKeyPath();
  strcpy((char *)(inited + 88), "idsDestination");
  *(unsigned char *)(inited + 103) = -18;
  unint64_t result = sub_236D6156C(inited);
  qword_2688DE758 = result;
  return result;
}

uint64_t sub_236DAB45C()
{
  if (qword_2688D1370 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_236DAB4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.Accessory.AppleMediaDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236DAB51C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11HomeKitCore15XPCSubscription_continuation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11HomeKitCore15XPCSubscription_changes;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D1910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC11HomeKitCore15XPCSubscription_id;
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v8 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v7, v8);
}

uint64_t sub_236DAB64C()
{
  return type metadata accessor for XPCSubscription();
}

uint64_t type metadata accessor for XPCSubscription()
{
  uint64_t result = qword_2688D3BA0;
  if (!qword_2688D3BA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_236DAB6A0()
{
  sub_236DAB7DC(319, &qword_2688D3BB0, MEMORY[0x263F8F690]);
  if (v0 <= 0x3F)
  {
    sub_236DAB7DC(319, &qword_2688D2F18, MEMORY[0x263F8F6B8]);
    if (v1 <= 0x3F)
    {
      sub_236DB9830();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_236DAB7DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for AnyModelStateChange(255);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D17D8);
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x263F8E4E0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_236DAB858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC11HomeKitCore15XPCSubscription_id;
  uint64_t v4 = sub_236DB9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void sub_236DAB8D0(uint64_t a1)
{
  v70[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3058);
  uint64_t v3 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  unint64_t v55 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D35A8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for XPCModelStateChange();
  uint64_t v8 = *(void *)(v68 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v68);
  uint64_t v61 = (uint64_t)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v60 = (uint64_t)v54 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D18E8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v67 = (uint64_t)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AnyModelStateChange(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v66 = (uint64_t)v54 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = (uint64_t)v54 - v21;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    v54[0] = v3;
    v54[1] = v1;
    uint64_t v65 = *MEMORY[0x263F081D0];
    uint64_t v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v58 = v20;
    char v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    uint64_t v63 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    v54[2] = a1;
    int v23 = (unint64_t *)(a1 + 40);
    unint64_t v24 = MEMORY[0x263F8EE78];
    uint64_t v64 = v14;
    do
    {
      uint64_t v26 = *(v23 - 1);
      unint64_t v27 = *v23;
      id v28 = objc_allocWithZone(MEMORY[0x263F08928]);
      sub_236D1B584(v26, v27);
      sub_236D1B584(v26, v27);
      uint64_t v29 = (void *)sub_236DB9790();
      v70[0] = 0;
      id v30 = objc_msgSend(v28, sel_initForReadingFromData_error_, v29, v70);

      if (!v30)
      {
        id v47 = v70[0];
        uint64_t v48 = (void *)sub_236DB9730();

        swift_willThrow();
        sub_236D1B18C(v26, v27);
        sub_236D1B18C(v26, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      unint64_t v69 = v23;
      uint64_t v31 = v22;
      uint64_t v32 = v17;
      unint64_t v33 = v24;
      id v34 = v70[0];
      sub_236D1B18C(v26, v27);
      sub_236DB9A10();
      sub_236DAC0F4(qword_2688D3BB8, (void (*)(uint64_t))type metadata accessor for XPCModelStateChange);
      uint64_t v35 = v68;
      sub_236DB9F80();

      swift_bridgeObjectRelease();
      int v36 = (*v63)(v7, 1, v35);
      unint64_t v24 = v33;
      if (v36 == 1)
      {
        sub_236D267CC((uint64_t)v7, &qword_2688D35A8);
        uint64_t v37 = v67;
        uint64_t v38 = v64;
        (*v57)(v67, 1, 1, v64);
        unint64_t v17 = v32;
      }
      else
      {
        uint64_t v39 = v60;
        sub_236DAC13C((uint64_t)v7, v60, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
        uint64_t v40 = v61;
        sub_236DAC1A4(v39, v61, (uint64_t (*)(void))type metadata accessor for XPCModelStateChange);
        uint64_t v37 = v67;
        sub_236D1AAB4(v40, v67);
        sub_236DAC20C(v39);
        unint64_t v17 = v32;
        uint64_t v38 = v64;
      }
      sub_236D1B18C(v26, v27);
      uint64_t v41 = v31;
      if ((*v62)(v37, 1, v38) == 1)
      {
        sub_236D267CC(v37, &qword_2688D18E8);
        unint64_t v25 = v69;
      }
      else
      {
        uint64_t v42 = v37;
        uint64_t v43 = v59;
        sub_236DAC13C(v42, v59, type metadata accessor for AnyModelStateChange);
        sub_236DAC13C(v43, v66, type metadata accessor for AnyModelStateChange);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v25 = v69;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v24 = sub_236D55C58(0, *(void *)(v24 + 16) + 1, 1, v24);
        }
        unint64_t v46 = *(void *)(v24 + 16);
        unint64_t v45 = *(void *)(v24 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v24 = sub_236D55C58(v45 > 1, v46 + 1, 1, v24);
        }
        *(void *)(v24 + 16) = v46 + 1;
        sub_236DAC13C(v66, v24+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v46, type metadata accessor for AnyModelStateChange);
      }
      int v23 = v25 + 2;
      uint64_t v22 = v41 - 1;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v3 = v54[0];
    uint64_t v20 = v58;
  }
  else
  {
    unint64_t v24 = MEMORY[0x263F8EE78];
  }
  uint64_t v49 = *(void *)(v24 + 16);
  uint64_t v51 = v55;
  uint64_t v50 = v56;
  if (v49)
  {
    uint64_t v52 = v24 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v53 = *(void *)(v20 + 72);
    do
    {
      sub_236DAC1A4(v52, (uint64_t)v17, type metadata accessor for AnyModelStateChange);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D17A8);
      sub_236DB9D80();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v51, v50);
      v52 += v53;
      --v49;
    }
    while (v49);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_236DAC0AC()
{
  return sub_236DAC0F4((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236DAC0F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236DAC13C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236DAC1A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236DAC20C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for XPCModelStateChange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236DAC268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v54 = a4;
  uint64_t v7 = sub_236DBA090();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v51 = *(void *)(a2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v48 = (char *)&v47 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = type metadata accessor for AnyModelStateChange(0);
  MEMORY[0x270FA5388](v21);
  int v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a3;
  uint64_t v25 = type metadata accessor for ModelStateChange();
  uint64_t v52 = *(void *)(v25 - 8);
  uint64_t v53 = v25;
  MEMORY[0x270FA5388](v25);
  unint64_t v27 = (uint64_t *)((char *)&v47 - v26);
  sub_236D7F004(a1, (uint64_t)v23);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      sub_236DAE54C(a1);
      long long v37 = *((_OWORD *)v23 + 1);
      long long v56 = *(_OWORD *)v23;
      long long v57 = v37;
      uint64_t v58 = *((void *)v23 + 4);
      sub_236D1B1E4(&v56, (uint64_t)v55);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
      char v38 = swift_dynamicCast();
      uint64_t v39 = v51;
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
      if (v38)
      {
        v40(v13, 0, 1, a2);
        uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
        v41(v20, v13, a2);
        uint64_t v42 = v48;
        v41(v48, v20, a2);
        v41((char *)v27, v42, a2);
        uint64_t v30 = v53;
        goto LABEL_8;
      }
      uint64_t v45 = 1;
      v40(v13, 1, 1, a2);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
      goto LABEL_11;
    case 2:
      sub_236DAE54C(a1);
      long long v31 = *((_OWORD *)v23 + 1);
      long long v56 = *(_OWORD *)v23;
      long long v57 = v31;
      uint64_t v58 = *((void *)v23 + 4);
      sub_236D1B1E4(&v56, (uint64_t)v55);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
      char v32 = swift_dynamicCast();
      uint64_t v33 = v51;
      id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
      if (v32)
      {
        v34(v10, 0, 1, a2);
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
        v35(v16, v10, a2);
        int v36 = v48;
        v35(v48, v16, a2);
        v35((char *)v27, v36, a2);
        uint64_t v30 = v53;
LABEL_8:
        swift_storeEnumTagMultiPayload();
        uint64_t v43 = v54;
        uint64_t v44 = v52;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v52 + 32))(v54, v27, v30);
        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v45 = 1;
        v34(v10, 1, 1, a2);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v50);
LABEL_11:
        uint64_t v30 = v53;
        uint64_t v43 = v54;
        uint64_t v44 = v52;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v43, v45, 1, v30);
    case 3:
      sub_236DAE54C(a1);
      sub_236DAE5A8((uint64_t)v23, (uint64_t)v27);
      uint64_t v30 = v53;
      goto LABEL_8;
    default:
      *(void *)&long long v56 = *(void *)v23;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      *(&v47 - 2) = a2;
      *(&v47 - 1) = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3CC0);
      type metadata accessor for ModelState();
      sub_236DAE8E0();
      uint64_t v29 = sub_236DB9AD0();
      sub_236DAE54C(a1);
      swift_bridgeObjectRelease();
      *unint64_t v27 = v29;
      uint64_t v30 = v53;
      goto LABEL_8;
  }
}

uint64_t ModelState.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_236DAC89C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_236DAC92C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_236DAC9E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_236DACA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_236DACA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_236DACAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_236DACB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_236DACB50(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_236DACCAC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x236DACEC4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for ModelState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236DACF04()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AnyModelStateChange.Tombstone(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_236DACFDC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  if (v7 <= v10 + 1) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v7;
  }
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  int v13 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    unsigned int v17 = a2[v12];
    unsigned int v18 = v17 - 4;
    if (v17 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v19 = v12;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_23;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_23;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_23;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_23:
          int v21 = (v20 | (v18 << (8 * v12))) + 4;
          unsigned int v17 = v20 + 4;
          if (v12 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    switch(v17)
    {
      case 1u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        *((unsigned char *)a1 + v12) = 1;
        break;
      case 2u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        *((unsigned char *)a1 + v12) = 2;
        break;
      case 3u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v8);
        *((unsigned char *)a1 + v10) = a2[v10];
        *((unsigned char *)a1 + v12) = 3;
        break;
      default:
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + v12) = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

uint64_t sub_236DAD258(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v16 + 64);
  uint64_t v5 = sub_236DB9830();
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  if (v4 <= v6 + 1) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = v4;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 4;
  if (v8 >= 4)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_15;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_15:
        int v12 = (v11 | (v9 << (8 * v7))) + 4;
        unsigned int v8 = v11 + 4;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  switch(v8)
  {
    case 1u:
    case 2u:
      int v13 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v16 + 8);
      uint64_t result = v13(a1, v3);
      break;
    case 3u:
      uint64_t v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v15(a1, v5);
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

void *sub_236DAD47C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  if (v7 <= v9 + 1) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 4;
  if (v12 >= 4)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_16;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_16:
        int v16 = (v15 | (v13 << (8 * v11))) + 4;
        unsigned int v12 = v15 + 4;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  switch(v12)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v17 = 1;
      goto LABEL_23;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v17 = 2;
      goto LABEL_23;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      *((unsigned char *)a1 + v9) = a2[v9];
      char v17 = 3;
LABEL_23:
      *((unsigned char *)a1 + v11) = v17;
      break;
    default:
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v11) = 0;
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

unsigned __int8 *sub_236DAD6A8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = sub_236DB9830();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    if (v7 <= v10 + 1) {
      unint64_t v11 = v10 + 1;
    }
    else {
      unint64_t v11 = v7;
    }
    if (v11 <= 8) {
      uint64_t v12 = 8;
    }
    else {
      uint64_t v12 = v11;
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 4;
    if (v13 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          goto LABEL_17;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v16 = *(_DWORD *)a1;
LABEL_17:
          int v17 = (v16 | (v14 << (8 * v12))) + 4;
          unsigned int v13 = v16 + 4;
          if (v12 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    switch(v13)
    {
      case 1u:
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, v8);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v18 = a2[v12];
    unsigned int v19 = v18 - 4;
    if (v18 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v20 = v12;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_32;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_32:
          int v22 = (v21 | (v19 << (8 * v12))) + 4;
          unsigned int v18 = v21 + 4;
          if (v12 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    switch(v18)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v23 = 1;
        goto LABEL_39;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v23 = 2;
        goto LABEL_39;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v8);
        a1[v10] = a2[v10];
        char v23 = 3;
LABEL_39:
        a1[v12] = v23;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        a1[v12] = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

void *sub_236DAD9E4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_236DB9830();
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  if (v7 <= v9 + 1) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  unsigned int v12 = a2[v11];
  unsigned int v13 = v12 - 4;
  if (v12 >= 4)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_16;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_16:
        int v16 = (v15 | (v13 << (8 * v11))) + 4;
        unsigned int v12 = v15 + 4;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  switch(v12)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v17 = 1;
      break;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v17 = 2;
      break;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      *((unsigned char *)a1 + v9) = a2[v9];
      char v17 = 3;
      break;
    default:
      char v17 = 0;
      *a1 = *(void *)a2;
      break;
  }
  *((unsigned char *)a1 + v11) = v17;
  return a1;
}

unsigned __int8 *sub_236DADC0C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = sub_236DB9830();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    if (v7 <= v10 + 1) {
      unint64_t v11 = v10 + 1;
    }
    else {
      unint64_t v11 = v7;
    }
    if (v11 <= 8) {
      uint64_t v12 = 8;
    }
    else {
      uint64_t v12 = v11;
    }
    unsigned int v13 = a1[v12];
    unsigned int v14 = v13 - 4;
    if (v13 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          goto LABEL_17;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v16 = *(_DWORD *)a1;
LABEL_17:
          int v17 = (v16 | (v14 << (8 * v12))) + 4;
          unsigned int v13 = v16 + 4;
          if (v12 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    switch(v13)
    {
      case 1u:
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, v8);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v18 = a2[v12];
    unsigned int v19 = v18 - 4;
    if (v18 >= 4)
    {
      if (v12 <= 3) {
        uint64_t v20 = v12;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_32;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_32:
          int v22 = (v21 | (v19 << (8 * v12))) + 4;
          unsigned int v18 = v21 + 4;
          if (v12 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    switch(v18)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v23 = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v23 = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v8);
        a1[v10] = a2[v10];
        char v23 = 3;
        break;
      default:
        char v23 = 0;
        *(void *)a1 = *(void *)a2;
        break;
    }
    a1[v12] = v23;
  }
  return a1;
}

uint64_t sub_236DADF44(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
  if (v5 <= v6 + 1) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = v5;
  }
  uint64_t v8 = 8;
  if (v7 > 8) {
    uint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_25;
  }
  uint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v13 = ((a2 + ~(-1 << v10) - 252) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v13 < 2)
    {
LABEL_25:
      unsigned int v15 = *((unsigned __int8 *)a1 + v8);
      if (v15 >= 4) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_25;
  }
LABEL_17:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 253;
}

void sub_236DAE0C8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v8 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
  if (v7 <= v8 + 1) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = v7;
  }
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFD)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 252) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v12 = a2 - 253;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x236DAE2C0);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_236DAE2E8(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
  if (v3 <= v4 + 1) {
    unint64_t v5 = v4 + 1;
  }
  else {
    unint64_t v5 = v3;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  uint64_t result = a1[v5];
  if (result >= 4)
  {
    if (v5 <= 3) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_15;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v9 = (v8 | ((result - 4) << (8 * v5))) + 4;
        unsigned int v10 = v8 + 4;
        if (v5 >= 4) {
          uint64_t result = v10;
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_236DAE3E0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 3)
  {
    unint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    uint64_t v10 = *(void *)(*(void *)(sub_236DB9830() - 8) + 64);
    if (v9 <= v10 + 1) {
      unint64_t v11 = v10 + 1;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11 <= 8) {
      size_t v12 = 8;
    }
    else {
      size_t v12 = v11;
    }
    unsigned int v13 = a2 - 4;
    if (v12 < 4)
    {
      unsigned int v14 = v13 >> (8 * v12);
      int v15 = v13 & ~(-1 << (8 * v12));
      a1[v12] = v14 + 4;
      bzero(a1, v12);
      if (v12 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if (v12 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
    else
    {
      a1[v12] = 4;
      bzero(a1, v12);
      *(_DWORD *)a1 = v13;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(sub_236DB9830() - 8);
    unint64_t v7 = *(void *)(v5 + 64);
    uint64_t v8 = *(void *)(v6 + 64);
    if (v7 <= v8 + 1) {
      unint64_t v7 = v8 + 1;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    a1[v7] = a2;
  }
}

uint64_t type metadata accessor for ModelStateChange()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_236DAE54C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyModelStateChange(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236DAE5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyModelStateChange.Tombstone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236DAE60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v7 = sub_236DBA090();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = &v25[-v10 - 8];
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  int v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v13);
  int v17 = &v25[-v16 - 8];
  sub_236D1B32C(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2548);
  char v18 = swift_dynamicCast();
  unsigned int v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v18)
  {
    v19(v11, 0, 1, a2);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v17, v11, a2);
    v20(v15, v17, a2);
    v20(a4, v15, a2);
    uint64_t v21 = type metadata accessor for ModelState();
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a4, 0, 1, v21);
  }
  else
  {
    v19(v11, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v23 = type metadata accessor for ModelState();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 1, 1, v23);
  }
}

uint64_t sub_236DAE8C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_236DAE60C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_236DAE8E0()
{
  unint64_t result = qword_2688D3CC8;
  if (!qword_2688D3CC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3CC8);
  }
  return result;
}

uint64_t HomesStore.User.SharedSettings.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_236DB9830();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HomesStore.User.SharedSettings.isExplicitContentAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.User.SharedSettings() + 20));
}

uint64_t type metadata accessor for HomesStore.User.SharedSettings()
{
  uint64_t result = qword_2688D3D28;
  if (!qword_2688D3D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HomesStore.User.SharedSettings.isiTunesAccountAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.User.SharedSettings() + 24));
}

uint64_t HomesStore.User.SharedSettings.isDolbyAtmosEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.User.SharedSettings() + 28));
}

uint64_t HomesStore.User.SharedSettings.isLosslessMusicEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.User.SharedSettings() + 32));
}

uint64_t HomesStore.User.SharedSettings.isPlaybackInfluencesForYouEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.User.SharedSettings() + 36));
}

uint64_t HomesStore.User.SharedSettings.isSiriIdentifyVoiceEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for HomesStore.User.SharedSettings() + 40));
}

void static HomesStore.User.SharedSettings.modelType.getter(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t HomesStore.User.SharedSettings.hash(into:)()
{
  return sub_236DBA700();
}

unint64_t sub_236DAEBAC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_236DAEC88()
{
  return sub_236DAEBAC(*v0);
}

uint64_t sub_236DAEC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236DB43E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_236DAECB8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_236DAECC4(uint64_t a1)
{
  unint64_t v2 = sub_236DB3808();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236DAED00(uint64_t a1)
{
  unint64_t v2 = sub_236DB3808();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HomesStore.User.SharedSettings.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3CD8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DB3808();
  sub_236DBA760();
  v8[15] = 0;
  sub_236DB9830();
  sub_236DB3AF0(&qword_2688D1680, MEMORY[0x263F07508]);
  sub_236DBA5A0();
  if (!v1)
  {
    type metadata accessor for HomesStore.User.SharedSettings();
    v8[14] = 1;
    sub_236DBA590();
    v8[13] = 2;
    sub_236DBA590();
    v8[12] = 3;
    sub_236DBA590();
    v8[11] = 4;
    sub_236DBA590();
    v8[10] = 5;
    sub_236DBA590();
    v8[9] = 6;
    sub_236DBA590();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HomesStore.User.SharedSettings.hashValue.getter()
{
  return sub_236DBA710();
}

uint64_t HomesStore.User.SharedSettings.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_236DB9830();
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3CE8);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HomesStore.User.SharedSettings();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236DB3808();
  uint64_t v10 = (uint64_t)v28;
  sub_236DBA750();
  if (v10) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v22 = (int *)v7;
  id v28 = a1;
  uint64_t v11 = (uint64_t)v9;
  uint64_t v12 = v25;
  char v35 = 0;
  sub_236DB3AF0(&qword_2688D1638, MEMORY[0x263F07508]);
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  sub_236DBA530();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v13, v3);
  char v34 = 1;
  char v15 = sub_236DBA520();
  uint64_t v16 = v22;
  *(unsigned char *)(v11 + v22[5]) = v15 & 1;
  char v33 = 2;
  char v17 = sub_236DBA520();
  uint64_t v18 = v24;
  *(unsigned char *)(v11 + v16[6]) = v17 & 1;
  char v32 = 3;
  *(unsigned char *)(v11 + v16[7]) = sub_236DBA520() & 1;
  char v31 = 4;
  *(unsigned char *)(v11 + v16[8]) = sub_236DBA520() & 1;
  char v30 = 5;
  *(unsigned char *)(v11 + v16[9]) = sub_236DBA520() & 1;
  char v29 = 6;
  char v19 = sub_236DBA520();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v14);
  *(unsigned char *)(v11 + v16[10]) = v19 & 1;
  sub_236DB385C(v11, v23);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  return sub_236DB38C0(v11);
}

uint64_t sub_236DAF458@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomesStore.User.SharedSettings.init(from:)(a1, a2);
}

uint64_t sub_236DAF470(void *a1)
{
  return HomesStore.User.SharedSettings.encode(to:)(a1);
}

uint64_t sub_236DAF488()
{
  return sub_236DBA710();
}

uint64_t sub_236DAF4CC()
{
  return sub_236DBA710();
}

uint64_t sub_236DAF544()
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3D50);
  swift_allocObject();
  uint64_t result = sub_236DB32C0(KeyPath);
  qword_2688D3CD0 = result;
  return result;
}

uint64_t sub_236DAF5F8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDRoomModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DAFA4C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDRoomModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DAFEA4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDRoomModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB02DC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDAppleMediaDeviceModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB0740(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDUserModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB0B78(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDUserModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB0FCC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDAccessoryModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB1420(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDAccessoryModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB189C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDAccessoryModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB1D0C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDHomeModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB2160(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDHomeModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB25B8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDHomeModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB2A10(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDHomeModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB2E68(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDZoneModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t sub_236DB32C0(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    strcpy((char *)(v1 + 16), "modelID == %@");
    *(_WORD *)(v1 + 30) = -4864;
    return v2;
  }
  type metadata accessor for HMCDUserSharedSettingsModel();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_retain();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
  id v5 = objc_msgSend(v4, sel_relationshipsByName);
  sub_236D3B924();
  uint64_t v6 = sub_236DB9990();

  swift_retain();
  uint64_t v7 = sub_236DBA0F0();
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    __break(1u);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236DBA260();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    sub_236DB9A70();
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16)) {
    goto LABEL_13;
  }
  unint64_t v10 = sub_236D85920(v7, v9);
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_inverseRelationship);
  if (v13)
  {
    uint64_t v14 = v13;
    if (objc_msgSend(v13, sel_isToMany))
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_236DBA260();
      sub_236DB9A70();
      id v15 = objc_msgSend(v14, sel_name);
      sub_236DB9A10();

      sub_236DB9A70();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236DBA260();
      id v16 = objc_msgSend(v14, sel_name);
      uint64_t v17 = sub_236DB9A10();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();

      uint64_t v21 = v17;
      unint64_t v22 = v19;
    }
    sub_236DB9A70();

    swift_release_n();
    *(void *)(v2 + 16) = v21;
    *(void *)(v2 + 24) = v22;
    swift_release();
    return v2;
  }
  sub_236DBA260();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
  sub_236DB9A70();
LABEL_15:
  uint64_t result = sub_236DBA450();
  __break(1u);
  return result;
}

uint64_t _s11HomeKitCore10HomesStoreC4UserV14SharedSettingsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s11HomeKitCore25ModelIdentifierDescriptorV2eeoiySbACyxG_AEtFZ_0() & 1) != 0
    && (id v4 = (int *)type metadata accessor for HomesStore.User.SharedSettings(),
        *(unsigned __int8 *)(a1 + v4[5]) == *(unsigned __int8 *)(a2 + v4[5]))
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6])
    && *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7])
    && *(unsigned __int8 *)(a1 + v4[8]) == *(unsigned __int8 *)(a2 + v4[8])
    && *(unsigned __int8 *)(a1 + v4[9]) == *(unsigned __int8 *)(a2 + v4[9]))
  {
    char v5 = *(unsigned char *)(a1 + v4[10]) ^ *(unsigned char *)(a2 + v4[10]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_236DB3808()
{
  unint64_t result = qword_2688D3CE0;
  if (!qword_2688D3CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3CE0);
  }
  return result;
}

uint64_t sub_236DB385C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomesStore.User.SharedSettings();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236DB38C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomesStore.User.SharedSettings();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236DB391C(void *a1)
{
  a1[1] = sub_236DB3AF0(&qword_2688D3CF8, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
  a1[2] = sub_236DB3AF0(&qword_2688D3D00, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
  a1[3] = sub_236DB3AF0(&qword_2688D3D08, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
  a1[4] = sub_236DB3AF0(&qword_2688D3D10, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
  uint64_t result = sub_236DB3AF0(&qword_2688D3D18, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
  a1[5] = result;
  return result;
}

uint64_t sub_236DB3A18()
{
  return sub_236DB3AF0((unint64_t *)&qword_2688D15A8, MEMORY[0x263F07508]);
}

uint64_t sub_236DB3A60()
{
  return sub_236DB3AF0(&qword_2688D3D20, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
}

uint64_t sub_236DB3AA8()
{
  return sub_236DB3AF0(&qword_2688D17F0, (void (*)(uint64_t))type metadata accessor for HomesStore.User.SharedSettings);
}

uint64_t sub_236DB3AF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s14SharedSettingsVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236DB9830();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v10 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  }
  return a1;
}

uint64_t _s14SharedSettingsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t _s14SharedSettingsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t _s14SharedSettingsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t _s14SharedSettingsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236DB9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t _s14SharedSettingsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236DB3F04);
}

uint64_t sub_236DB3F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236DB9830();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t _s14SharedSettingsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236DB3FE8);
}

uint64_t sub_236DB3FE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236DB9830();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_236DB40A4()
{
  uint64_t result = sub_236DB9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14SharedSettingsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14SharedSettingsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236DB42A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14SharedSettingsV10CodingKeysOMa()
{
  return &_s14SharedSettingsV10CodingKeysON;
}

unint64_t sub_236DB42DC()
{
  unint64_t result = qword_2688D3D38;
  if (!qword_2688D3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3D38);
  }
  return result;
}

unint64_t sub_236DB4334()
{
  unint64_t result = qword_2688D3D40;
  if (!qword_2688D3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3D40);
  }
  return result;
}

unint64_t sub_236DB438C()
{
  unint64_t result = qword_2688D3D48;
  if (!qword_2688D3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3D48);
  }
  return result;
}

uint64_t sub_236DB43E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000236DBB940 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000236DBB960 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000236DBB980 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000236DBB9A0 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000236DBCA70 || (sub_236DBA600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000236DBB9E0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_236DBA600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_236DB4678()
{
  unint64_t v1 = v0;
  uint64_t v63 = *MEMORY[0x263EF8340];
  uint64_t v52 = sub_236DB9770();
  uint64_t v2 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_236DB97D0();
  uint64_t v4 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_236DB9830();
  uint64_t v6 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_entity);
  id v9 = objc_msgSend(v8, sel_attributesByName);

  sub_236D291DC(0, &qword_2688D3D70);
  uint64_t v10 = sub_236DB9990();

  uint64_t v11 = v10;
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v57 = v11 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v58 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v48 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v47 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v56 = v11;
  while (v16)
  {
    unint64_t v20 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v21 = v20 | (v12 << 6);
LABEL_24:
    id v25 = *(id *)(*(void *)(v11 + 56) + 8 * v21);
    uint64_t v26 = (uint64_t)objc_msgSend(v25, sel_attributeType);
    if (v26 > 799)
    {
      if (v26 > 1199)
      {
        if (v26 != 1200) {
          goto LABEL_57;
        }
        char v35 = v54;
        sub_236DB9820();
        sub_236DB97E0();
        (*v53)(v35, v55);
        int v36 = v51;
        sub_236DB9740();
        swift_bridgeObjectRelease();
        char v33 = (void *)sub_236DB9750();
        (*v48)(v36, v52);
        id v34 = objc_msgSend(v25, sel_name);
        goto LABEL_60;
      }
      if (v26 > 999)
      {
        if (v26 != 1000)
        {
          if (v26 != 1100) {
            goto LABEL_57;
          }
          char v31 = v54;
          sub_236DB9820();
          uint64_t v17 = (void *)sub_236DB97F0();
          (*v53)(v31, v55);
          id v18 = objc_msgSend(v25, sel_name);
          goto LABEL_5;
        }
        sub_236DB9320();
        swift_allocObject();
        uint64_t v38 = sub_236DB9310() | 0x4000000000000000;
        uint64_t v61 = 0;
        unint64_t v62 = v38;
        uint64_t v39 = 32;
        do
        {
          v60[0] = 0;
          MEMORY[0x237E101C0](v60, 8);
          char v41 = v60[0];
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3D78);
          v60[3] = v40;
          v60[4] = sub_236DB5440();
          LOBYTE(v60[0]) = v41;
          char v59 = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v60, v40);
          sub_236DB9780();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
          --v39;
        }
        while (v39);
        uint64_t v42 = v61;
        unint64_t v43 = v62;
        sub_236D1B584(v61, v62);
        uint64_t v44 = (void *)sub_236DB9790();
        sub_236D1B18C(v42, v43);
        id v45 = objc_msgSend(v25, sel_name);
        if (!v45)
        {
          sub_236DB9A10();
          id v45 = (id)sub_236DB9A00();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v1, sel_setValue_forKey_, v44, v45, v47);

        sub_236D1B18C(v42, v43);
        uint64_t v11 = v56;
      }
      else
      {
        if (v26 == 800)
        {
          v60[0] = 0;
          MEMORY[0x237E101C0](v60, 8);
          uint64_t v17 = (void *)sub_236DB9C20();
          id v18 = objc_msgSend(v25, sel_name);
          goto LABEL_5;
        }
        if (v26 != 900) {
          goto LABEL_57;
        }
        do
        {
          v60[0] = 0;
          MEMORY[0x237E101C0](v60, 8);
        }
        while ((unint64_t)(0x20000000000001 * v60[0]) < 0x1FFFFFFFFFF801);
        uint64_t v27 = v49;
        sub_236DB97C0();
        uint64_t v17 = (void *)sub_236DB97B0();
        (*v47)(v27, v50);
        id v18 = objc_msgSend(v25, sel_name);
LABEL_5:
        id v19 = v18;
        if (!v19)
        {
          sub_236DB9A10();
          id v19 = (id)sub_236DB9A00();
          uint64_t v11 = v56;
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v1, sel_setValue_forKey_, v17, v19, v47);
      }
    }
    else if (v26 > 399)
    {
      if (v26 <= 599)
      {
        if (v26 == 400)
        {
          do
          {
            v60[0] = 0;
            uint64_t v28 = MEMORY[0x237E101C0](v60, 8);
          }
          while ((unint64_t)(0x20000000000001 * v60[0]) < 0x1FFFFFFFFFF801);
          unint64_t v30 = (v60[0] * (unsigned __int128)0x20000000000001uLL) >> 64;
          v29.n128_f64[0] = (double)v30 * 1.11022302e-16 * 100.0 + 0.0;
          if (v30 == 0x20000000000000) {
            v29.n128_f64[0] = 100.0;
          }
          MEMORY[0x237E0F320](v28, v29);
          uint64_t v17 = (void *)sub_236DBA050();
          id v18 = objc_msgSend(v25, sel_name);
        }
        else
        {
          if (v26 != 500) {
            goto LABEL_57;
          }
          do
          {
            v60[0] = 0;
            MEMORY[0x237E101C0](v60, 8);
          }
          while ((unint64_t)(0x20000000000001 * v60[0]) < 0x1FFFFFFFFFF801);
          uint64_t v17 = (void *)sub_236DB9DE0();
          id v18 = objc_msgSend(v25, sel_name);
        }
        goto LABEL_5;
      }
      if (v26 == 600)
      {
        do
        {
          v60[0] = 0;
          MEMORY[0x237E101C0](v60, 8);
        }
        while ((16777217 * LODWORD(v60[0])) < 0xFFFF01);
        uint64_t v17 = (void *)sub_236DB9DF0();
        id v18 = objc_msgSend(v25, sel_name);
        goto LABEL_5;
      }
      if (v26 != 700) {
        goto LABEL_57;
      }
      char v32 = v54;
      sub_236DB9820();
      sub_236DB97E0();
      (*v53)(v32, v55);
      char v33 = (void *)sub_236DB9A00();
      swift_bridgeObjectRelease();
      id v34 = objc_msgSend(v25, sel_name);
LABEL_60:
      id v37 = v34;
      if (!v37)
      {
        sub_236DB9A10();
        id v37 = (id)sub_236DB9A00();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v1, sel_setValue_forKey_, v33, v37, v47);

      uint64_t v11 = v56;
    }
    else
    {
      if (v26 > 199)
      {
        if (v26 == 200)
        {
          v60[0] = 0;
          MEMORY[0x237E101C0](v60, 8);
          uint64_t v17 = (void *)sub_236DBA6B0();
          id v18 = objc_msgSend(v25, sel_name);
        }
        else
        {
          if (v26 != 300) {
            goto LABEL_57;
          }
          v60[0] = 0;
          MEMORY[0x237E101C0](v60, 8);
          uint64_t v17 = (void *)sub_236DBA6C0();
          id v18 = objc_msgSend(v25, sel_name);
        }
        goto LABEL_5;
      }
      if (v26 == 100)
      {
        v60[0] = 0;
        MEMORY[0x237E101C0](v60, 8);
        uint64_t v17 = (void *)sub_236DBA6A0();
        id v18 = objc_msgSend(v25, sel_name);
        goto LABEL_5;
      }
LABEL_57:
    }
  }
  int64_t v22 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_72;
  }
  if (v22 >= v58) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v57 + 8 * v22);
  ++v12;
  if (v23) {
    goto LABEL_23;
  }
  int64_t v12 = v22 + 1;
  if (v22 + 1 >= v58) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v57 + 8 * v12);
  if (v23) {
    goto LABEL_23;
  }
  int64_t v12 = v22 + 2;
  if (v22 + 2 >= v58) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v57 + 8 * v12);
  if (v23)
  {
LABEL_23:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v12 << 6);
    goto LABEL_24;
  }
  int64_t v24 = v22 + 3;
  if (v24 < v58)
  {
    unint64_t v23 = *(void *)(v57 + 8 * v24);
    if (!v23)
    {
      while (1)
      {
        int64_t v12 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          break;
        }
        if (v12 >= v58) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v57 + 8 * v12);
        ++v24;
        if (v23) {
          goto LABEL_23;
        }
      }
LABEL_72:
      __break(1u);
    }
    int64_t v12 = v24;
    goto LABEL_23;
  }
  return swift_release();
}

uint64_t sub_236DB51B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 16);
  sub_236D291DC(0, &qword_2688D2078);
  id v6 = v5;
  int v7 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v7 ^ 1u, 1, a1);
}

uint64_t _s5ProxyCMa_0()
{
  return self;
}

id sub_236DB5284()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_entity);
  return v1;
}

id sub_236DB52BC@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*(id *)(v1 + 16), sel_managedObjectContext);
  *a1 = result;
  return result;
}

uint64_t sub_236DB52FC()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_description);
  uint64_t v2 = sub_236DB9A10();

  return v2;
}

unint64_t sub_236DB535C()
{
  unint64_t result = qword_2688D3D58;
  if (!qword_2688D3D58)
  {
    sub_236D291DC(255, &qword_2688D3D60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3D58);
  }
  return result;
}

unint64_t sub_236DB53C4(uint64_t a1)
{
  unint64_t result = sub_236DB53EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236DB53EC()
{
  unint64_t result = qword_2688D3D68;
  if (!qword_2688D3D68)
  {
    _s5ProxyCMa_0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3D68);
  }
  return result;
}

unint64_t sub_236DB5440()
{
  unint64_t result = qword_2688D3D80;
  if (!qword_2688D3D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2688D3D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688D3D80);
  }
  return result;
}

_UNKNOWN **sub_236DB549C()
{
  return &off_26EA00188;
}

uint64_t sub_236DB54A8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t result = sub_236D56498(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x237E0F570](v5, a1);
        uint64_t v16 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_236D56498(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = _s5ProxyCMa_0();
        unint64_t v15 = sub_236DB53EC();
        *(void *)&long long v13 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_236D1B1E4(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      id v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v12 = *(void *)(v3 + 24);
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_236D56498(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = _s5ProxyCMa_0();
        unint64_t v15 = sub_236DB53EC();
        *(void *)&long long v13 = v10;
        *(void *)(v3 + 16) = v11 + 1;
        sub_236D1B1E4(&v13, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_236DB566C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_236DBA460();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_236D56590(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x237E0F570](i, a1);
        sub_236D5F4B0();
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236D56590(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_236D56590(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_236D18FFC(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      unint64_t v8 = (id *)(a1 + 32);
      sub_236D5F4B0();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236D56590(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_236D56590(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_236D18FFC(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

id sub_236DB58A0(unint64_t a1)
{
  uint64_t v2 = *v1;
  sub_236DB566C(a1);
  uint64_t v3 = (void *)sub_236DB9B20();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_currentPersistentHistoryTokenFromStores_, v3);

  return v4;
}

id static HMCDModel.fetchRequest()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2688D3DA0);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entityName);
  sub_236DB9A10();

  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_236DB6828();
}

void HMCDModel.legacyUniqueIdentifier.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_236DB9830();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v3, sel_managedObjectContext);
  if (!v11) {
    goto LABEL_15;
  }
  unint64_t v12 = v11;
  id v13 = objc_msgSend(v11, sel_persistentStoreCoordinator);

  if (!v13) {
    goto LABEL_15;
  }
  id v14 = objc_msgSend(v13, sel_persistentStores);

  sub_236D291DC(0, (unint64_t *)&qword_2688D2578);
  unint64_t v15 = sub_236DB9B30();

  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_236DBA460();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v27 = v7;
  if ((v15 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = a1;
    id v17 = (id)MEMORY[0x237E0F570](0, v15);
  }
  else
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_15;
    }
    uint64_t v16 = a1;
    id v17 = *(id *)(v15 + 32);
  }
  id v18 = v17;
  uint64_t v26 = a3;
  swift_bridgeObjectRelease();
  sub_236DB5D04(&v28);
  unint64_t v19 = *((void *)&v28 + 1);
  if (*((void *)&v28 + 1) >> 60 != 15)
  {
    uint64_t v20 = v28;
    unint64_t v21 = self;
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(v16, a2);
    int64_t v22 = (void *)sub_236DB97F0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
    unint64_t v23 = (void *)sub_236DB9790();
    id v24 = objc_msgSend(v21, sel_hmf_UUIDWithNamespace_data_salts_, v22, v23, 0);

    sub_236DB9810();
    sub_236D5F4F0(v20, v19);

    return;
  }
LABEL_15:
  sub_236DBA450();
  __break(1u);
}

uint64_t sub_236DB5D04@<X0>(_OWORD *a1@<X8>)
{
  uint64_t result = (uint64_t)objc_msgSend(v1, sel_metadata);
  if (result)
  {
    id v4 = (void *)result;
    uint64_t v5 = sub_236DB9990();

    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_236D85920(0xD000000000000032, 0x8000000236DBB280), (v7 & 1) != 0)) {
      sub_236D1900C(*(void *)(v5 + 56) + 32 * v6, (uint64_t)v8);
    }
    else {
      memset(v8, 0, sizeof(v8));
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2688D2B40);
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0) {
      *a1 = xmmword_236DC2F60;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_236DB5E04()
{
  uint64_t v0 = sub_236DB9950();
  __swift_allocate_value_buffer(v0, qword_2688D3D88);
  __swift_project_value_buffer(v0, (uint64_t)qword_2688D3D88);
  return sub_236DB9940();
}