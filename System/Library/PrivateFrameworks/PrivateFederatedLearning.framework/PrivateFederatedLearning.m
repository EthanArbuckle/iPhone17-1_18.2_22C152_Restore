void sub_21F0E7C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

uint64_t PFLPrivatize(float *a1, vDSP_Length __N)
{
  vDSP_vclr(a1, 1, __N);
  v2 = +[_PFLLog framework];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    PFLPrivatize_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);
  }

  return 0;
}

uint64_t PFLPrivatizeCustomNorm(float *a1, vDSP_Length __N)
{
  vDSP_vclr(a1, 1, __N);
  v2 = +[_PFLLog framework];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    PFLPrivatizeCustomNorm_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);
  }

  return 0;
}

uint64_t PFLPrivatizeCustomNormWithLowerEpsilon(float *a1, vDSP_Length __N)
{
  vDSP_vclr(a1, 1, __N);
  v2 = +[_PFLLog framework];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    PFLPrivatizeCustomNormWithLowerEpsilon_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);
  }

  return 0;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_21F0EB070(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_21F0EB090(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for espresso_network_t(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for PFLTaskSource(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t sub_21F0EB13C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_21F0EB15C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 168) = v3;
  return result;
}

void type metadata accessor for espresso_buffer_t(uint64_t a1)
{
}

uint64_t sub_21F0EB1C4(uint64_t a1, uint64_t a2)
{
  return sub_21F0EB330(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_21F0EB1DC(uint64_t a1, id *a2)
{
  uint64_t result = sub_21F156CA0();
  *a2 = 0;
  return result;
}

uint64_t sub_21F0EB254(uint64_t a1, id *a2)
{
  char v3 = sub_21F156CB0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_21F0EB2D4@<X0>(uint64_t *a1@<X8>)
{
  sub_21F156CC0();
  uint64_t v2 = sub_21F156C90();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21F0EB318(uint64_t a1, uint64_t a2)
{
  return sub_21F0EB330(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_21F0EB330(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_21F156CC0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21F0EB374()
{
  sub_21F156CC0();
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F0EB3C8()
{
  sub_21F156CC0();
  sub_21F1576F0();
  sub_21F156D80();
  uint64_t v0 = sub_21F157710();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21F0EB43C()
{
  uint64_t v0 = sub_21F156CC0();
  uint64_t v2 = v1;
  if (v0 == sub_21F156CC0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_21F157600();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_21F0EB4C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_21F156C90();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21F0EB510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21F156CC0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for espresso_storage_type_t(uint64_t a1)
{
}

void sub_21F0EB564(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_21F0EB5AC(uint64_t a1)
{
  uint64_t v2 = sub_21F0EB6AC(&qword_267EBE368);
  uint64_t v3 = sub_21F0EB6AC((unint64_t *)&unk_267EBE370);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_21F0EB644()
{
  return sub_21F0EB6AC(&qword_267EBE350);
}

uint64_t sub_21F0EB678()
{
  return sub_21F0EB6AC(&qword_267EBE358);
}

uint64_t sub_21F0EB6AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for URLResourceKey(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F0EB6F0()
{
  return sub_21F0EB6AC(&qword_267EBE360);
}

uint64_t sub_21F0EB724()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[2] + 32;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  if (!*(void *)(*(void *)v2 + 16))
  {
    long long v129 = 0u;
    long long v130 = 0u;
LABEL_11:
    sub_21F0ED4F0((uint64_t)&v129);
LABEL_12:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_21F156B90();
    __swift_project_value_buffer(v12, (uint64_t)qword_267EBEF18);
    swift_retain_n();
    v13 = sub_21F156B70();
    os_log_type_t v14 = sub_21F157120();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(void *)&long long v129 = v126;
      *(_DWORD *)uint64_t v15 = 136315394;
      sub_21F103FD0(0x6D726F4E78616DLL, 0xE700000000000000, (uint64_t *)&v129);
      sub_21F1571F0();
      *(_WORD *)(v15 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_21F156BE0();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      *(void *)&v128[0] = sub_21F103FD0(v16, v18, (uint64_t *)&v129);
      sub_21F1571F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v13, v14, "cannot get %s from recipe %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      uint64_t v19 = v126;
LABEL_16:
      MEMORY[0x223C45170](v19, -1, -1);
      MEMORY[0x223C45170](v15, -1, -1);

LABEL_33:
      sub_21F0ED588();
      swift_allocError();
      unsigned char *v29 = 0;
      return swift_willThrow();
    }
LABEL_32:

    swift_release_n();
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_21F10E9C8(0x6D726F4E78616DLL, 0xE700000000000000);
  if (v5)
  {
    sub_21F0ED61C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v130 + 1)) {
    goto LABEL_11;
  }
  unint64_t v6 = sub_21F0ED5DC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_12;
  }
  objc_msgSend(*(id *)&v128[0], sel_doubleValue);
  uint64_t v8 = v7;

  uint64_t v9 = *(void *)v2;
  if (!*(void *)(*(void *)v2 + 16))
  {
    long long v129 = 0u;
    long long v130 = 0u;
LABEL_27:
    sub_21F0ED4F0((uint64_t)&v129);
LABEL_28:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_21F156B90();
    __swift_project_value_buffer(v23, (uint64_t)qword_267EBEF18);
    swift_retain_n();
    v13 = sub_21F156B70();
    os_log_type_t v24 = sub_21F157120();
    if (os_log_type_enabled(v13, v24))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(void *)&long long v129 = v25;
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_21F156BE0();
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      *(void *)&v128[0] = sub_21F103FD0(v26, v28, (uint64_t *)&v129);
      sub_21F1571F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v13, v24, "cannot get recipeLocalDPParams from recipe %s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v25;
      goto LABEL_16;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_21F10E9C8(0xD00000000000001DLL, 0x800000021F15F310);
  if (v11)
  {
    sub_21F0ED61C(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v130 + 1)) {
    goto LABEL_27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v20 = *(void *)&v128[0];
  if (!*(void *)(*(void *)&v128[0] + 16)) {
    goto LABEL_39;
  }
  unint64_t v21 = sub_21F10E9C8(0x73696E616863656DLL, 0xE90000000000006DLL);
  if ((v22 & 1) == 0) {
    goto LABEL_39;
  }
  sub_21F0ED61C(*(void *)(*(void *)&v128[0] + 56) + 32 * v21, (uint64_t)&v129);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_39;
  }
  if (*(void *)&v128[0] != 0x6E61697373756167 || *((void *)&v128[0] + 1) != 0xE800000000000000)
  {
    char v31 = sub_21F157600();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_35;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_21F156B90();
    __swift_project_value_buffer(v36, (uint64_t)qword_267EBEF18);
    v37 = sub_21F156B70();
    os_log_type_t v38 = sub_21F157120();
    if (!os_log_type_enabled(v37, v38)) {
      goto LABEL_44;
    }
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    v40 = "Only gaussian is supported as DP mechanism";
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
LABEL_35:
  if (*(void *)(*(void *)&v128[0] + 16)
    && (unint64_t v32 = sub_21F10E9C8(0x6E6F6C69737065, 0xE700000000000000), (v33 & 1) != 0)
    && (sub_21F0ED61C(*(void *)(*(void *)&v128[0] + 56) + 32 * v32, (uint64_t)&v129), (swift_dynamicCast() & 1) != 0))
  {
    objc_msgSend(*(id *)&v128[0], sel_doubleValue);
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v35 = 0;
  }
  if (*(void *)(*(void *)&v128[0] + 16)
    && (unint64_t v41 = sub_21F10E9C8(0x61746C6564, 0xE500000000000000), (v42 & 1) != 0)
    && (sub_21F0ED61C(*(void *)(*(void *)&v128[0] + 56) + 32 * v41, (uint64_t)&v129), (swift_dynamicCast() & 1) != 0))
  {
    objc_msgSend(*(id *)&v128[0], sel_doubleValue);
    uint64_t v44 = v43;
  }
  else
  {
    uint64_t v44 = 0;
  }
  v1[3] = v8;
  if (*(void *)(v20 + 16) && (unint64_t v45 = sub_21F10E9C8(0xD00000000000001BLL, 0x800000021F15F330), (v46 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(v20 + 56) + 32 * v45, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v130 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v129);
    goto LABEL_79;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_79:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_21F156B90();
    __swift_project_value_buffer(v71, (uint64_t)qword_267EBEF18);
    v37 = sub_21F156B70();
    os_log_type_t v38 = sub_21F157120();
    if (!os_log_type_enabled(v37, v38)) {
      goto LABEL_44;
    }
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    v40 = "Moments accountant parameter is missing!";
LABEL_43:
    _os_log_impl(&dword_21F0DC000, v37, v38, v40, v39, 2u);
    MEMORY[0x223C45170](v39, -1, -1);
LABEL_44:

    goto LABEL_33;
  }
  uint64_t v47 = *(void *)&v128[0];
  v48 = (void *)sub_21F0FC1B0(MEMORY[0x263F8EE78]);
  unint64_t v49 = 0;
  v50 = (unint64_t *)&unk_26D0ACD38;
  v124 = v1;
  uint64_t v123 = *(void *)&v128[0];
  while (1)
  {
    if (v49 >= qword_26D0ACD20)
    {
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    uint64_t v52 = *(v50 - 1);
    unint64_t v53 = *v50;
    if (!*(void *)(v47 + 16))
    {
      long long v129 = 0u;
      long long v130 = 0u;
      swift_bridgeObjectRetain();
LABEL_84:
      swift_bridgeObjectRelease();
      sub_21F0ED4F0((uint64_t)&v129);
LABEL_86:
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_21F156B90();
      __swift_project_value_buffer(v72, (uint64_t)qword_267EBEF18);
      swift_bridgeObjectRetain();
      v73 = sub_21F156B70();
      os_log_type_t v74 = sub_21F157120();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        uint64_t v76 = swift_slowAlloc();
        *(void *)&long long v129 = v76;
        *(_DWORD *)v75 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&v128[0] = sub_21F103FD0(v52, v53, (uint64_t *)&v129);
        sub_21F1571F0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21F0DC000, v73, v74, "Moments accountant parameter %s is malformed.", v75, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v76, -1, -1);
        MEMORY[0x223C45170](v75, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_123;
    }
    swift_bridgeObjectRetain_n();
    unint64_t v54 = sub_21F10E9C8(v52, v53);
    if (v55)
    {
      sub_21F0ED61C(*(void *)(v47 + 56) + 32 * v54, (uint64_t)&v129);
    }
    else
    {
      long long v129 = 0u;
      long long v130 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v130 + 1)) {
      goto LABEL_84;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
    v125 = v50;
    unint64_t v127 = v49;
    *((void *)&v130 + 1) = v6;
    *(void *)&long long v129 = *(void *)&v128[0];
    sub_21F0ED188(&v129, v128);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = v52;
    uint64_t v58 = v53;
    unint64_t v60 = sub_21F10E9C8(v52, v53);
    uint64_t v61 = v48[2];
    BOOL v62 = (v59 & 1) == 0;
    uint64_t v63 = v61 + v62;
    if (__OFADD__(v61, v62)) {
      goto LABEL_133;
    }
    char v64 = v59;
    if (v48[3] < v63) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v59 & 1) == 0) {
        goto LABEL_74;
      }
    }
    else
    {
      sub_21F126500();
      if ((v64 & 1) == 0)
      {
LABEL_74:
        v48[(v60 >> 6) + 8] |= 1 << v60;
        v67 = (uint64_t *)(v48[6] + 16 * v60);
        uint64_t *v67 = v57;
        v67[1] = v58;
        sub_21F0ED188(v128, (_OWORD *)(v48[7] + 32 * v60));
        uint64_t v68 = v48[2];
        BOOL v69 = __OFADD__(v68, 1);
        uint64_t v70 = v68 + 1;
        if (v69) {
          goto LABEL_134;
        }
        v48[2] = v70;
        swift_bridgeObjectRetain();
        goto LABEL_59;
      }
    }
LABEL_58:
    v51 = (_OWORD *)(v48[7] + 32 * v60);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
    sub_21F0ED188(v128, v51);
LABEL_59:
    uint64_t v47 = v123;
    unint64_t v49 = v127 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = v125 + 2;
    if (v127 == 5)
    {
      swift_bridgeObjectRelease();
      if (!v48[2]
        || (unint64_t v77 = sub_21F10E9C8(0x64724F69796E6552, 0xEA00000000007265), (v78 & 1) == 0)
        || (v79 = v48, sub_21F0ED61C(v48[7] + 32 * v77, (uint64_t)&v129), (swift_dynamicCast() & 1) == 0)
        || (v80 = *(void **)&v128[0],
            v81 = (char *)objc_msgSend(*(id *)&v128[0], sel_integerValue),
            v80,
            (unint64_t)(v81 - 33) < 0xFFFFFFFFFFFFFFE1))
      {
        if (qword_267EBE2C0 != -1) {
          swift_once();
        }
        uint64_t v108 = sub_21F156B90();
        __swift_project_value_buffer(v108, (uint64_t)qword_267EBEF18);
        v109 = sub_21F156B70();
        os_log_type_t v110 = sub_21F157120();
        if (os_log_type_enabled(v109, v110))
        {
          uint64_t v111 = swift_slowAlloc();
          uint64_t v112 = swift_slowAlloc();
          *(void *)&long long v129 = v112;
          *(_DWORD *)uint64_t v111 = 136315650;
          *(void *)&v128[0] = sub_21F103FD0(0x64724F69796E6552, 0xEA00000000007265, (uint64_t *)&v129);
          sub_21F1571F0();
          *(_WORD *)(v111 + 12) = 2048;
          *(void *)&v128[0] = 2;
          sub_21F1571F0();
          *(_WORD *)(v111 + 22) = 2048;
          *(void *)&v128[0] = 32;
          sub_21F1571F0();
          _os_log_impl(&dword_21F0DC000, v109, v110, "Moments accountant parameter %s must be between %ld and %ld.", (uint8_t *)v111, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x223C45170](v112, -1, -1);
          MEMORY[0x223C45170](v111, -1, -1);
        }

        goto LABEL_123;
      }
      if (!v79[2]
        || (unint64_t v82 = sub_21F10E9C8(0x61726574496D754ELL, 0xED0000736E6F6974), (v83 & 1) == 0)
        || (sub_21F0ED61C(v79[7] + 32 * v82, (uint64_t)&v129), (swift_dynamicCast() & 1) == 0)
        || (v84 = *(void **)&v128[0],
            uint64_t v85 = (uint64_t)objc_msgSend(*(id *)&v128[0], sel_integerValue),
            v84,
            v85 < 1))
      {
        if (qword_267EBE2C0 != -1) {
          swift_once();
        }
        uint64_t v114 = sub_21F156B90();
        __swift_project_value_buffer(v114, (uint64_t)qword_267EBEF18);
        v115 = sub_21F156B70();
        os_log_type_t v116 = sub_21F157120();
        if (!os_log_type_enabled(v115, v116)) {
          goto LABEL_130;
        }
        uint64_t v117 = swift_slowAlloc();
        uint64_t v118 = swift_slowAlloc();
        *(void *)&long long v129 = v118;
        *(_DWORD *)uint64_t v117 = 136315138;
        *(void *)&v128[0] = sub_21F103FD0(0x61726574496D754ELL, 0xED0000736E6F6974, (uint64_t *)&v129);
        sub_21F1571F0();
        _os_log_impl(&dword_21F0DC000, v115, v116, "Moments accountant parameter %s must be greater than 0.", (uint8_t *)v117, 0xCu);
        swift_arrayDestroy();
        uint64_t v119 = v118;
        goto LABEL_129;
      }
      if (v79[2])
      {
        unint64_t v86 = sub_21F10E9C8(0x726F686F4378614DLL, 0xED0000657A695374);
        if (v87)
        {
          sub_21F0ED61C(v79[7] + 32 * v86, (uint64_t)&v129);
          if (swift_dynamicCast())
          {
            v88 = *(void **)&v128[0];
            uint64_t v89 = (uint64_t)objc_msgSend(*(id *)&v128[0], sel_integerValue);

            if (v79[2])
            {
              unint64_t v90 = sub_21F10E9C8(0xD000000000000011, 0x800000021F15F040);
              if (v91)
              {
                sub_21F0ED61C(v79[7] + 32 * v90, (uint64_t)&v129);
                if (swift_dynamicCast())
                {
                  v92 = *(void **)&v128[0];
                  uint64_t v93 = (uint64_t)objc_msgSend(*(id *)&v128[0], sel_integerValue);

                  if (v79[2])
                  {
                    unint64_t v94 = sub_21F10E9C8(0x6974616C75706F50, 0xEE00657A69536E6FLL);
                    if (v95)
                    {
                      sub_21F0ED61C(v79[7] + 32 * v94, (uint64_t)&v129);
                      if (swift_dynamicCast())
                      {
                        v96 = *(void **)&v128[0];
                        uint64_t v97 = (uint64_t)objc_msgSend(*(id *)&v128[0], sel_integerValue);

                        if (v89 >= 1 && v93 >= 1 && v97 >= 1 && v89 >= v93 && v97 >= v89)
                        {
                          if (v79[2])
                          {
                            unint64_t v98 = sub_21F10E9C8(0x695374726F686F43, 0xEB00000000616D67);
                            if (v99)
                            {
                              sub_21F0ED61C(v79[7] + 32 * v98, (uint64_t)&v129);
                              if (swift_dynamicCast())
                              {
                                v100 = *(void **)&v128[0];
                                objc_msgSend(*(id *)&v128[0], sel_doubleValue);
                                uint64_t v102 = v101;

                                if ((~v102 & 0x7FF0000000000000) != 0)
                                {
                                  v124[4] = v102;
                                  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
                                  uint64_t inited = swift_initStackObject();
                                  *(_OWORD *)(inited + 16) = xmmword_21F159660;
                                  *(void *)(inited + 32) = 0x73696E616863654DLL;
                                  *(void *)(inited + 40) = 0xE90000000000006DLL;
                                  *(void *)(inited + 48) = 0xD000000000000011;
                                  *(void *)(inited + 56) = 0x800000021F15F350;
                                  *(void *)(inited + 72) = MEMORY[0x263F8D310];
                                  strcpy((char *)(inited + 80), "OverallEpsilon");
                                  *(unsigned char *)(inited + 95) = -18;
                                  uint64_t v104 = MEMORY[0x263F8D538];
                                  *(void *)(inited + 96) = v35;
                                  *(void *)(inited + 120) = v104;
                                  strcpy((char *)(inited + 128), "OverallDelta");
                                  *(unsigned char *)(inited + 141) = 0;
                                  *(_WORD *)(inited + 142) = -5120;
                                  *(void *)(inited + 144) = v44;
                                  *(void *)(inited + 168) = v104;
                                  *(void *)(inited + 176) = 0xD000000000000014;
                                  *(void *)(inited + 184) = 0x800000021F15F370;
                                  uint64_t v105 = v124[3];
                                  *(void *)(inited + 216) = v104;
                                  *(void *)(inited + 192) = v105;
                                  unint64_t v106 = sub_21F0FC1B0(inited);
                                  uint64_t v107 = swift_bridgeObjectRetain();
                                  v124[5] = sub_21F0ECD1C(v107, v106);
                                  swift_bridgeObjectRelease();
                                  return swift_bridgeObjectRelease();
                                }
                              }
                            }
                          }
LABEL_123:
                          sub_21F0ED588();
                          swift_allocError();
                          unsigned char *v113 = 0;
                          swift_willThrow();
                          return swift_bridgeObjectRelease();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_135:
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v120 = sub_21F156B90();
      __swift_project_value_buffer(v120, (uint64_t)qword_267EBEF18);
      v115 = sub_21F156B70();
      os_log_type_t v121 = sub_21F157120();
      if (!os_log_type_enabled(v115, v121)) {
        goto LABEL_130;
      }
      uint64_t v117 = swift_slowAlloc();
      uint64_t v122 = swift_slowAlloc();
      *(void *)&long long v129 = v122;
      *(_DWORD *)uint64_t v117 = 136315650;
      *(void *)&v128[0] = sub_21F103FD0(0xD000000000000011, 0x800000021F15F040, (uint64_t *)&v129);
      sub_21F1571F0();
      *(_WORD *)(v117 + 12) = 2080;
      *(void *)&v128[0] = sub_21F103FD0(0x726F686F4378614DLL, 0xED0000657A695374, (uint64_t *)&v129);
      sub_21F1571F0();
      *(_WORD *)(v117 + 22) = 2080;
      *(void *)&v128[0] = sub_21F103FD0(0x6974616C75706F50, 0xEE00657A69536E6FLL, (uint64_t *)&v129);
      sub_21F1571F0();
      _os_log_impl(&dword_21F0DC000, v115, v121, "Moments accountant parameters require 0 < %s <= %s <= %s", (uint8_t *)v117, 0x20u);
      swift_arrayDestroy();
      uint64_t v119 = v122;
LABEL_129:
      MEMORY[0x223C45170](v119, -1, -1);
      MEMORY[0x223C45170](v117, -1, -1);
LABEL_130:

      goto LABEL_123;
    }
  }
  sub_21F12587C(v63, isUniquelyReferenced_nonNull_native);
  unint64_t v65 = sub_21F10E9C8(v57, v58);
  if ((v64 & 1) == (v66 & 1))
  {
    unint64_t v60 = v65;
    if ((v64 & 1) == 0) {
      goto LABEL_74;
    }
    goto LABEL_58;
  }
  uint64_t result = sub_21F157680();
  __break(1u);
  return result;
}

uint64_t sub_21F0ECD1C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_21F0ED198(a1, (uint64_t)sub_21F0FB5CC, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_21F0ECDA8(uint64_t a1, double a2)
{
  double v5 = *(double *)(v2 + 32);
  if (a1 != 1) {
    double v5 = v5 * *(double *)(v2 + 24) / a2;
  }
  unint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = MEMORY[0x263F8D538];
  uint64_t v22 = MEMORY[0x263F8D538];
  *(double *)&long long v21 = v5;
  sub_21F0ED188(&v21, v20);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v23 = v6;
  sub_21F10EE58(v20, 0xD000000000000015, 0x800000021F15F2D0, isUniquelyReferenced_nonNull_native);
  unint64_t v9 = v23;
  swift_bridgeObjectRelease();
  uint64_t v22 = v7;
  *(double *)&long long v21 = a2;
  sub_21F0ED188(&v21, v20);
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v23 = v9;
  sub_21F10EE58(v20, 0x676E697070696C43, 0xED0000646E756F42, v10);
  unint64_t v11 = v23;
  swift_bridgeObjectRelease();
  uint64_t v22 = MEMORY[0x263F8D6C8];
  *(void *)&long long v21 = a1;
  sub_21F0ED188(&v21, v20);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v23 = v11;
  sub_21F10EE58(v20, 0x6B6E7568436D754ELL, 0xE900000000000073, v12);
  unint64_t v13 = v23;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159670;
  *(void *)(inited + 32) = sub_21F156CC0();
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  unint64_t v16 = sub_21F0FC1B0(inited);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  *(void *)&long long v21 = v13;
  sub_21F0ED188(&v21, v20);
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v23 = v16;
  sub_21F10EE58(v20, 0xD000000000000013, 0x800000021F15F2F0, v17);
  unint64_t v18 = v23;
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_21F0ECFE0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DediscoMetadataV1()
{
  return self;
}

double sub_21F0ED044()
{
  return *(double *)(*(void *)v0 + 24);
}

uint64_t sub_21F0ED050()
{
  return sub_21F0EB724();
}

unint64_t sub_21F0ED074(uint64_t a1, double a2)
{
  return sub_21F0ECDA8(a1, a2);
}

unint64_t sub_21F0ED098()
{
  return sub_21F0ED0B0();
}

unint64_t sub_21F0ED0B0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159670;
  *(void *)(inited + 32) = sub_21F156CC0();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  unint64_t v2 = sub_21F0FC2DC(inited);
  unint64_t v3 = sub_21F1505A4(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

_OWORD *sub_21F0ED188(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_21F0ED198(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F0FB620(&v48);
  uint64_t v12 = *((void *)&v48 + 1);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_21F0ED188(v49, v47);
  os_log_type_t v14 = *(void **)a5;
  unint64_t v16 = sub_21F10E9C8(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_21F126500();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    os_log_type_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    uint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    *uint64_t v25 = v13;
    v25[1] = v12;
    sub_21F0ED188(v47, (_OWORD *)(v24[7] + 32 * v16));
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_21F0FB620(&v48);
    for (uint64_t i = *((void *)&v48 + 1); *((void *)&v48 + 1); uint64_t i = *((void *)&v48 + 1))
    {
      uint64_t v31 = v48;
      sub_21F0ED188(v49, v47);
      unint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_21F10E9C8(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_21F12587C(v37, 1);
        unint64_t v39 = sub_21F10E9C8(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_21F0ED61C((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        sub_21F0ED188(v46, v30);
      }
      else
      {
        unint64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        char v42 = (uint64_t *)(v41[6] + 16 * v34);
        *char v42 = v31;
        v42[1] = i;
        sub_21F0ED188(v47, (_OWORD *)(v41[7] + 32 * v34));
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_21F0FB620(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_21F0ED6C8();
    return swift_release();
  }
  sub_21F12587C(v19, a4 & 1);
  unint64_t v21 = sub_21F10E9C8(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_21F0ED61C((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    unint64_t v23 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    sub_21F0ED188(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_21F157680();
  __break(1u);
  return result;
}

uint64_t sub_21F0ED4F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_21F0ED588()
{
  unint64_t result = qword_267EBE400;
  if (!qword_267EBE400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE400);
  }
  return result;
}

unint64_t sub_21F0ED5DC()
{
  unint64_t result = qword_267EBE408;
  if (!qword_267EBE408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EBE408);
  }
  return result;
}

uint64_t sub_21F0ED61C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_21F0ED6C8()
{
  return swift_release();
}

uint64_t sub_21F0ED6D0()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(void *)(v0 + 16) + 32;
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  if (!*(void *)(*(void *)v4 + 16))
  {
    long long v22 = 0u;
    long long v23 = 0u;
LABEL_28:
    sub_21F0ED4F0((uint64_t)&v22);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21F10E9C8(0xD000000000000012, 0x800000021F15F3F0);
  if (v7)
  {
    sub_21F0ED61C(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1)) {
    goto LABEL_28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    sub_21F0ED588();
    swift_allocError();
    *char v20 = 17;
    return swift_willThrow();
  }
  uint64_t v8 = sub_21F156CC0();
  if (*(void *)(v21 + 16) && (unint64_t v10 = sub_21F10E9C8(v8, v9), (v11 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(v21 + 56) + 32 * v10, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  uint64_t v12 = *(void *)v4;
  uint64_t v13 = sub_21F156CC0();
  uint64_t v15 = v14;
  if (*(void *)(v12 + 16))
  {
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_21F10E9C8(v16, v15);
    if (v18)
    {
      sub_21F0ED61C(*(void *)(v12 + 56) + 32 * v17, (uint64_t)&v22);
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  sub_21F0F19E8(v21);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F0F1F48(v21);
    sub_21F0EF798(v21);
    *(void *)(v3 + 48) = v21;
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v21;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_21F0ED9C0(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  unint64_t v7 = *(void *)(v6 + 32);
  if (!*(void *)(v7 + 16))
  {
    long long v100 = 0u;
    long long v101 = 0u;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_21F10E9C8(0xD000000000000012, 0x800000021F15F3F0);
  if (v9)
  {
    sub_21F0ED61C(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v101 + 1)) {
    goto LABEL_17;
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  unint64_t v7 = *(void *)&v99[0];
  uint64_t v11 = sub_21F156CC0();
  if (*(void *)(*(void *)&v99[0] + 16) && (unint64_t v13 = sub_21F10E9C8(v11, v12), (v14 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(*(void *)&v99[0] + 56) + 32 * v13, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v101 + 1))
  {
LABEL_17:
    sub_21F0ED4F0((uint64_t)&v100);
    goto LABEL_18;
  }
  if (swift_dynamicCast())
  {
    uint64_t v15 = *(void *)&v99[0];
    uint64_t v102 = *MEMORY[0x263F3A298];
    uint64_t v16 = sub_21F156CC0();
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v3 + 48);
    if (*(void *)(v19 + 16))
    {
      uint64_t v20 = v16;
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_21F10E9C8(v20, v18);
      if (v22)
      {
        sub_21F0ED61C(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v100);
      }
      else
      {
        long long v100 = 0u;
        long long v101 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v100 = 0u;
      long long v101 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v101 + 1))
    {
      uint64_t v25 = MEMORY[0x263F8D310];
      if (swift_dynamicCast())
      {
        char v26 = sub_21F0F095C(*(uint64_t *)&v99[0], *((uint64_t *)&v99[0] + 1));
        swift_bridgeObjectRelease();
        if (v26)
        {
          uint64_t v98 = *(void *)(v3 + 48);
          uint64_t v27 = sub_21F156CC0();
          uint64_t v29 = v28;
          swift_bridgeObjectRetain();
          sub_21F10EC74(v27, v29, &v100);
          swift_bridgeObjectRelease();
          sub_21F0ED4F0((uint64_t)&v100);
          uint64_t v30 = sub_21F156CC0();
          uint64_t v32 = v31;
          *((void *)&v101 + 1) = v10;
          *(void *)&long long v100 = v98;
          sub_21F0ED188(&v100, v99);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_21F10EE58(v99, v30, v32, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
          uint64_t v34 = swift_allocObject();
          *(_OWORD *)(v34 + 16) = xmmword_21F1596F0;
          *(void *)(v34 + 32) = sub_21F156CC0();
          *(void *)(v34 + 40) = v35;
          *(void *)(v34 + 72) = v25;
          *(void *)(v34 + 48) = 3157554;
          *(void *)(v34 + 56) = 0xE300000000000000;
          *(void *)(v34 + 80) = sub_21F156CC0();
          *(void *)(v34 + 88) = v36;
          *(void *)(v34 + 120) = v10;
          *(void *)(v34 + 96) = v15;
          return sub_21F0FC1B0(v34);
        }
      }
    }
    else
    {
      sub_21F0ED4F0((uint64_t)&v100);
    }
    double v37 = *(double *)(v3 + 32);
    if (a1 != 1) {
      double v37 = v37 * *(double *)(v3 + 24) / a2;
    }
    uint64_t v38 = *(void *)(v3 + 48);
    uint64_t v39 = sub_21F156CC0();
    uint64_t v41 = v40;
    uint64_t v42 = MEMORY[0x263F8D538];
    *((void *)&v101 + 1) = MEMORY[0x263F8D538];
    *(double *)&long long v100 = v37;
    sub_21F0ED188(&v100, v99);
    swift_bridgeObjectRetain();
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    sub_21F10EE58(v99, v39, v41, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_21F156CC0();
    uint64_t v46 = v45;
    *((void *)&v101 + 1) = v42;
    *(double *)&long long v100 = a2;
    sub_21F0ED188(&v100, v99);
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    sub_21F10EE58(v99, v44, v46, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_21F156CC0();
    uint64_t v50 = v49;
    *((void *)&v101 + 1) = MEMORY[0x263F8D6C8];
    *(void *)&long long v100 = a1;
    sub_21F0ED188(&v100, v99);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    sub_21F10EE58(v99, v48, v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_21F156CC0();
    uint64_t v54 = v53;
    *((void *)&v101 + 1) = v10;
    *(void *)&long long v100 = v38;
    sub_21F0ED188(&v100, v99);
    swift_bridgeObjectRetain();
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v98 = v15;
    sub_21F10EE58(v99, v52, v54, v55);
    uint64_t v56 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F159700;
    *(void *)(inited + 32) = sub_21F156CC0();
    *(void *)(inited + 40) = v58;
    *(void *)(inited + 48) = sub_21F156CC0();
    *(void *)(inited + 56) = v59;
    *(void *)(inited + 64) = sub_21F156CC0();
    *(void *)(inited + 72) = v60;
    *(void *)(inited + 80) = sub_21F156CC0();
    *(void *)(inited + 88) = v61;
    *(void *)(inited + 96) = sub_21F156CC0();
    *(void *)(inited + 104) = v62;
    uint64_t v63 = sub_21F134210(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    *(void *)&v99[0] = v63;
    uint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v65 = sub_21F0EE648(v64);
    swift_bridgeObjectRetain();
    LOBYTE(inited) = sub_21F0F0E14(v65, v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (inited)
    {
      uint64_t v66 = swift_initStackObject();
      *(_OWORD *)(v66 + 16) = xmmword_21F159710;
      *(void *)(v66 + 32) = sub_21F156CC0();
      *(void *)(v66 + 40) = v67;
      *(void *)(v66 + 48) = sub_21F156CC0();
      *(void *)(v66 + 56) = v68;
      *(void *)(v66 + 64) = sub_21F156CC0();
      *(void *)(v66 + 72) = v69;
      *(void *)(v66 + 80) = sub_21F156CC0();
      *(void *)(v66 + 88) = v70;
      *(void *)(v66 + 96) = sub_21F156CC0();
      *(void *)(v66 + 104) = v71;
      *(void *)(v66 + 112) = sub_21F156CC0();
      *(void *)(v66 + 120) = v72;
      *(void *)(v66 + 128) = sub_21F156CC0();
      *(void *)(v66 + 136) = v73;
      *(void *)(v66 + 144) = sub_21F156CC0();
      *(void *)(v66 + 152) = v74;
      *(void *)(v66 + 160) = sub_21F156CC0();
      *(void *)(v66 + 168) = v75;
      *(void *)(v66 + 176) = sub_21F156CC0();
      *(void *)(v66 + 184) = v76;
      *(void *)(v66 + 192) = sub_21F156CC0();
      *(void *)(v66 + 200) = v77;
      uint64_t v78 = sub_21F134210(v66);
      swift_setDeallocating();
      uint64_t v79 = MEMORY[0x263F8D310];
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      *(void *)&v99[0] = v78;
      uint64_t v80 = swift_bridgeObjectRetain();
      uint64_t v81 = sub_21F0EE648(v80);
      swift_bridgeObjectRetain();
      char v82 = sub_21F0F0E14(v81, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v82)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
        uint64_t v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = xmmword_21F1596F0;
        *(void *)(v83 + 32) = sub_21F156CC0();
        *(void *)(v83 + 40) = v84;
        *(void *)(v83 + 72) = v79;
        *(void *)(v83 + 48) = 3157554;
        *(void *)(v83 + 56) = 0xE300000000000000;
        *(void *)(v83 + 80) = sub_21F156CC0();
        *(void *)(v83 + 88) = v85;
        *(void *)(v83 + 120) = v10;
        *(void *)(v83 + 96) = v56;
        unint64_t v7 = sub_21F0FC1B0(v83);
        swift_bridgeObjectRelease();
        return v7;
      }
      swift_bridgeObjectRelease();
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v89 = sub_21F156B90();
      unint64_t v7 = __swift_project_value_buffer(v89, (uint64_t)qword_267EBEF18);
      swift_bridgeObjectRetain();
      char v87 = sub_21F156B70();
      os_log_type_t v88 = sub_21F157120();
      if (os_log_type_enabled(v87, v88)) {
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v86 = sub_21F156B90();
      unint64_t v7 = __swift_project_value_buffer(v86, (uint64_t)qword_267EBEF18);
      swift_bridgeObjectRetain();
      char v87 = sub_21F156B70();
      os_log_type_t v88 = sub_21F157120();
      if (os_log_type_enabled(v87, v88))
      {
LABEL_40:
        unint64_t v7 = swift_slowAlloc();
        uint64_t v102 = swift_slowAlloc();
        uint64_t v98 = v102;
        *(_DWORD *)unint64_t v7 = 136315394;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v90 = sub_21F157040();
        unint64_t v92 = v91;
        swift_bridgeObjectRelease();
        sub_21F103FD0(v90, v92, &v98);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v93 = sub_21F156BF0();
        unint64_t v95 = v94;
        swift_bridgeObjectRelease();
        sub_21F103FD0(v93, v95, &v98);
        sub_21F1571F0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21F0DC000, v87, v88, "Required keys for DPConfig: %s, but got %s", (uint8_t *)v7, 0x16u);
        uint64_t v96 = v102;
        swift_arrayDestroy();
        MEMORY[0x223C45170](v96, -1, -1);
        MEMORY[0x223C45170](v7, -1, -1);

LABEL_42:
        sub_21F0ED588();
        swift_allocError();
        *uint64_t v97 = 17;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v7;
      }
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_42;
  }
LABEL_18:
  sub_21F0ED588();
  swift_allocError();
  *long long v23 = 17;
  swift_willThrow();
  return v7;
}

uint64_t sub_21F0EE648(uint64_t a1)
{
  uint64_t result = sub_21F157050();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21F0F0C64(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

NSObject *sub_21F0EE7E0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  int64_t v3 = *(NSObject **)(v2 + 32);
  if (!v3[2].isa)
  {
    long long v74 = 0u;
    long long v75 = 0u;
LABEL_20:
    sub_21F0ED4F0((uint64_t)&v74);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_21F10E9C8(0xD000000000000012, 0x800000021F15F3F0);
  if (v5)
  {
    sub_21F0ED61C((uint64_t)v3[7].isa + 32 * v4, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1)) {
    goto LABEL_20;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    sub_21F0ED588();
    swift_allocError();
    *unint64_t v15 = 17;
    swift_willThrow();
    return v3;
  }
  int64_t v3 = *(NSObject **)&v73[0];
  uint64_t v7 = sub_21F156CC0();
  if (*(void *)(*(void *)&v73[0] + 16) && (unint64_t v9 = sub_21F10E9C8(v7, v8), (v10 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(*(void *)&v73[0] + 56) + 32 * v9, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)&v73[0];
  if (!*(void *)(*(void *)&v73[0] + 16)
    || (unint64_t v12 = sub_21F10E9C8(0xD00000000000001BLL, 0x800000021F15F410), (v13 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(*(void *)&v73[0] + 56) + 32 * v12, (uint64_t)&v74),
        unint64_t v14 = sub_21F0ED5DC(),
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v76 = v14;
  sub_21F0F19E8(*(uint64_t *)&v73[0]);
  if (v1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v3;
  }
  id v72 = *(id *)&v73[0];
  if (*(void *)(*(void *)&v73[0] + 16))
  {
    unint64_t v17 = sub_21F10E9C8(0xD000000000000019, 0x800000021F15F430);
    if (v18)
    {
      sub_21F0ED61C(*(void *)(*(void *)&v73[0] + 56) + 32 * v17, (uint64_t)&v74);
    }
    else
    {
      long long v74 = 0u;
      long long v75 = 0u;
    }
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v75 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v19 = *(void **)&v73[0];
      uint64_t v76 = *MEMORY[0x263F3A2D0];
      uint64_t type = sub_21F156CC0();
      uint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F1596F0;
      *(void *)(inited + 32) = sub_21F156CC0();
      *(void *)(inited + 40) = v23;
      objc_msgSend(v72, sel_doubleValue);
      *(void *)(inited + 72) = MEMORY[0x263F8D538];
      *(void *)(inited + 48) = v24;
      *(void *)(inited + 80) = sub_21F156CC0();
      *(void *)(inited + 88) = v25;
      unsigned int v26 = objc_msgSend(v19, sel_unsignedIntValue);
      *(void *)(inited + 120) = MEMORY[0x263F8E8F8];
      *(_DWORD *)(inited + 96) = v26;
      unint64_t v27 = sub_21F0FC1B0(inited);
      *((void *)&v75 + 1) = v6;
      *(void *)&long long v74 = v27;
      sub_21F0ED188(&v74, v73);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_21F10EE58(v73, type, v21, isUniquelyReferenced_nonNull_native);
      uint64_t v29 = v11;

      goto LABEL_35;
    }
  }
  else
  {
    sub_21F0ED4F0((uint64_t)&v74);
  }
  uint64_t v76 = *MEMORY[0x263F3A2D0];
  uint64_t v30 = sub_21F156CC0();
  uint64_t v32 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE428);
  uint64_t v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = xmmword_21F159670;
  *(void *)(v33 + 32) = sub_21F156CC0();
  *(void *)(v33 + 40) = v34;
  objc_msgSend(v72, sel_doubleValue);
  *(void *)(v33 + 48) = v35;
  unint64_t v36 = sub_21F0FC400(v33);
  *((void *)&v75 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE430);
  *(void *)&long long v74 = v36;
  sub_21F0ED188(&v74, v73);
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  sub_21F10EE58(v73, v30, v32, v37);
  uint64_t v29 = v11;
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_21F156CC0();
  uint64_t v40 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E0);
  uint64_t v41 = swift_initStackObject();
  *(_OWORD *)(v41 + 16) = xmmword_21F159670;
  *(void *)(v41 + 32) = sub_21F156CC0();
  *(void *)(v41 + 40) = v42;
  *(void *)(v41 + 48) = sub_21F156CC0();
  *(void *)(v41 + 56) = v43;
  unint64_t v44 = sub_21F0FC2DC(v41);
  *((void *)&v75 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE420);
  *(void *)&long long v74 = v44;
  sub_21F0ED188(&v74, v73);
  char v45 = swift_isUniquelyReferenced_nonNull_native();
  sub_21F10EE58(v73, v38, v40, v45);
  uint64_t v46 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t v47 = swift_initStackObject();
  *(_OWORD *)(v47 + 16) = xmmword_21F159700;
  *(void *)(v47 + 32) = sub_21F156CC0();
  *(void *)(v47 + 40) = v48;
  *(void *)(v47 + 48) = sub_21F156CC0();
  *(void *)(v47 + 56) = v49;
  *(void *)(v47 + 64) = sub_21F156CC0();
  *(void *)(v47 + 72) = v50;
  *(void *)(v47 + 80) = sub_21F156CC0();
  *(void *)(v47 + 88) = v51;
  *(void *)(v47 + 96) = sub_21F156CC0();
  *(void *)(v47 + 104) = v52;
  uint64_t v53 = sub_21F134210(v47);
  swift_setDeallocating();
  uint64_t v54 = MEMORY[0x263F8D310];
  swift_arrayDestroy();
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v56 = sub_21F0EE648(v55);
  LOBYTE(v40) = sub_21F0F0E14(v56, v53);
  swift_bridgeObjectRelease();
  if (v40)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
    uint64_t v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = xmmword_21F1596F0;
    *(void *)(v57 + 32) = sub_21F156CC0();
    *(void *)(v57 + 40) = v58;
    *(void *)(v57 + 72) = v54;
    *(void *)(v57 + 48) = 3157554;
    *(void *)(v57 + 56) = 0xE300000000000000;
    *(void *)(v57 + 80) = sub_21F156CC0();
    *(void *)(v57 + 88) = v59;
    *(void *)(v57 + 120) = v6;
    *(void *)(v57 + 96) = v46;
    int64_t v3 = sub_21F0FC1B0(v57);
  }
  else
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_21F156B90();
    __swift_project_value_buffer(v60, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v3 = sub_21F156B70();
    os_log_type_t v61 = sub_21F157120();
    if (os_log_type_enabled(v3, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(void *)&long long v74 = v76;
      *(_DWORD *)uint64_t v62 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_21F157040();
      unint64_t v65 = v64;
      swift_bridgeObjectRelease();
      *(void *)&v73[0] = sub_21F103FD0(v63, v65, (uint64_t *)&v74);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_21F156BF0();
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      *(void *)&v73[0] = sub_21F103FD0(v66, v68, (uint64_t *)&v74);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v3, v61, "Required keys for DPConfig: %s, but got %s", (uint8_t *)v62, 0x16u);
      uint64_t v69 = v76;
      swift_arrayDestroy();
      MEMORY[0x223C45170](v69, -1, -1);
      MEMORY[0x223C45170](v62, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_21F0ED588();
    swift_allocError();
    *uint64_t v70 = 17;
    swift_willThrow();
  }
  return v3;
}

unint64_t sub_21F0EF12C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 32);
  if (!*(void *)(v3 + 16))
  {
    long long v53 = 0u;
    long long v54 = 0u;
LABEL_17:
    sub_21F0ED4F0((uint64_t)&v53);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_21F10E9C8(0xD000000000000012, 0x800000021F15F3F0);
  if (v5)
  {
    sub_21F0ED61C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v53);
  }
  else
  {
    long long v53 = 0u;
    long long v54 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v54 + 1)) {
    goto LABEL_17;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_21F0ED588();
    swift_allocError();
    *unint64_t v12 = 17;
    return swift_willThrow();
  }
  uint64_t v7 = sub_21F156CC0();
  if (*(void *)(*(void *)&v51[0] + 16) && (unint64_t v9 = sub_21F10E9C8(v7, v8), (v10 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(*(void *)&v51[0] + 56) + 32 * v9, (uint64_t)&v53);
  }
  else
  {
    long long v53 = 0u;
    long long v54 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v54 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  unint64_t v52 = *(void *)&v51[0];
  sub_21F0F19E8(*(uint64_t *)&v51[0]);
  swift_bridgeObjectRelease();
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = sub_21F156CC0();
  sub_21F10EC74(v13, v14, &v53);
  swift_bridgeObjectRelease();
  sub_21F0ED4F0((uint64_t)&v53);
  uint64_t v15 = sub_21F156CC0();
  uint64_t v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159670;
  *(void *)(inited + 32) = sub_21F156CC0();
  *(void *)(inited + 40) = v19;
  *(void *)(inited + 48) = sub_21F156CC0();
  *(void *)(inited + 56) = v20;
  unint64_t v21 = sub_21F0FC2DC(inited);
  *((void *)&v54 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE420);
  *(void *)&long long v53 = v21;
  sub_21F0ED188(&v53, v51);
  unint64_t v22 = v52;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v52 = 0x8000000000000000;
  sub_21F10EE58(v51, v15, v17, isUniquelyReferenced_nonNull_native);
  unint64_t v52 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_21F159660;
  *(void *)(v24 + 32) = sub_21F156CC0();
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 48) = sub_21F156CC0();
  *(void *)(v24 + 56) = v26;
  *(void *)(v24 + 64) = sub_21F156CC0();
  *(void *)(v24 + 72) = v27;
  *(void *)(v24 + 80) = sub_21F156CC0();
  *(void *)(v24 + 88) = v28;
  uint64_t v29 = sub_21F134210(v24);
  swift_setDeallocating();
  uint64_t v30 = MEMORY[0x263F8D310];
  swift_arrayDestroy();
  unint64_t v31 = v52;
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_21F0EE648(v32);
  char v34 = sub_21F0F0E14(v33, v29);
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_21F156B90();
    __swift_project_value_buffer(v38, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_21F156B70();
    os_log_type_t v40 = sub_21F157120();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      int v55 = v41;
      uint64_t v43 = v42;
      uint64_t v50 = swift_slowAlloc();
      *(void *)&long long v53 = v50;
      *(_DWORD *)uint64_t v43 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_21F157040();
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      *(void *)&v51[0] = sub_21F103FD0(v44, v46, (uint64_t *)&v53);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_21F156BF0();
      unint64_t v49 = v48;
      swift_bridgeObjectRelease();
      *(void *)&v51[0] = sub_21F103FD0(v47, v49, (uint64_t *)&v53);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v39, (os_log_type_t)v55, "Required keys for DPConfig: %s, but got %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v50, -1, -1);
      MEMORY[0x223C45170](v43, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_21F1596F0;
  *(void *)(v35 + 32) = sub_21F156CC0();
  *(void *)(v35 + 40) = v36;
  *(void *)(v35 + 72) = v30;
  *(void *)(v35 + 48) = 3157554;
  *(void *)(v35 + 56) = 0xE300000000000000;
  *(void *)(v35 + 80) = sub_21F156CC0();
  *(void *)(v35 + 88) = v37;
  *(void *)(v35 + 120) = v6;
  *(void *)(v35 + 96) = v31;
  return sub_21F0FC1B0(v35);
}

void sub_21F0EF798(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_21F156CC0();
  if (!*(void *)(a1 + 16) || (unint64_t v8 = sub_21F10E9C8(v6, v7), (v9 & 1) == 0))
  {
    long long v103 = 0u;
    long long v104 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v103);
  swift_bridgeObjectRelease();
  if (!*((void *)&v104 + 1))
  {
LABEL_15:
    sub_21F0ED4F0((uint64_t)&v103);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_21F156B90();
    __swift_project_value_buffer(v20, (uint64_t)qword_267EBEF18);
    unint64_t v21 = sub_21F156B70();
    os_log_type_t v22 = sub_21F157120();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_21;
    }
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    uint64_t v24 = "Invalid value for Mechanism";
    goto LABEL_20;
  }
  if (sub_21F0F095C((uint64_t)v101, v102))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_21F156CC0();
    uint64_t v12 = v11;
    if (*(void *)(a1 + 16))
    {
      uint64_t v13 = v10;
      swift_bridgeObjectRetain();
      sub_21F10E9C8(v13, v12);
      char v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_21F0F0774(a1);
        if (!v3)
        {
          if (qword_267EBE2C0 != -1) {
            swift_once();
          }
          uint64_t v16 = sub_21F156B90();
          __swift_project_value_buffer(v16, (uint64_t)qword_267EBEF18);
          uint64_t v17 = sub_21F156B70();
          os_log_type_t v18 = sub_21F157110();
          if (os_log_type_enabled(v17, v18))
          {
            uint64_t v19 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v19 = 0;
            _os_log_impl(&dword_21F0DC000, v17, v18, "Using None Mechanism for results.", v19, 2u);
            MEMORY[0x223C45170](v19, -1, -1);
          }
        }
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_21F156B90();
    __swift_project_value_buffer(v47, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain_n();
    unint64_t v48 = sub_21F156B70();
    os_log_type_t v49 = sub_21F157120();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      *(void *)&long long v103 = v100;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v51 = sub_21F156CC0();
      sub_21F103FD0(v51, v52, (uint64_t *)&v103);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_21F156BF0();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      sub_21F103FD0(v53, v55, (uint64_t *)&v103);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
LABEL_45:
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v48, v49, "Required keys for DPConfig: %s, but got %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v100, -1, -1);
      MEMORY[0x223C45170](v50, -1, -1);

      goto LABEL_22;
    }

    goto LABEL_48;
  }
  if (v101 == (void *)sub_21F156CC0() && v102 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v28 = sub_21F157600();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_22;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159720;
  *(void *)(inited + 32) = sub_21F156CC0();
  *(void *)(inited + 40) = v30;
  *(void *)(inited + 48) = sub_21F156CC0();
  *(void *)(inited + 56) = v31;
  *(void *)(inited + 64) = sub_21F156CC0();
  *(void *)(inited + 72) = v32;
  *(void *)(inited + 80) = sub_21F156CC0();
  *(void *)(inited + 88) = v33;
  *(void *)(inited + 96) = sub_21F156CC0();
  *(void *)(inited + 104) = v34;
  *(void *)(inited + 112) = sub_21F156CC0();
  *(void *)(inited + 120) = v35;
  *(void *)(inited + 128) = sub_21F156CC0();
  *(void *)(inited + 136) = v36;
  *(void *)(inited + 144) = sub_21F156CC0();
  *(void *)(inited + 152) = v37;
  *(void *)(inited + 160) = sub_21F156CC0();
  *(void *)(inited + 168) = v38;
  uint64_t v39 = sub_21F134210(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_21F0EE648(v40);
  char v42 = sub_21F0F0E14(v41, v39);
  swift_bridgeObjectRelease();
  if ((v42 & 1) == 0)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_21F156B90();
    __swift_project_value_buffer(v56, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v48 = sub_21F156B70();
    os_log_type_t v49 = sub_21F157120();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      *(void *)&long long v103 = v100;
      *(_DWORD *)uint64_t v50 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_21F157040();
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      sub_21F103FD0(v57, v59, (uint64_t *)&v103);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_21F156BF0();
      unint64_t v62 = v61;
      swift_bridgeObjectRelease();
      sub_21F103FD0(v60, v62, (uint64_t *)&v103);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      goto LABEL_45;
    }

    swift_bridgeObjectRelease_n();
LABEL_48:
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  sub_21F0F0774(a1);
  if (v2) {
    return;
  }
  uint64_t v43 = sub_21F156CC0();
  if (*(void *)(a1 + 16) && (unint64_t v45 = sub_21F10E9C8(v43, v44), (v46 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v45, (uint64_t)&v103);
  }
  else
  {
    long long v103 = 0u;
    long long v104 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v104 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v103);
LABEL_57:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_21F156B90();
    __swift_project_value_buffer(v69, (uint64_t)qword_267EBEF18);
    unint64_t v21 = sub_21F156B70();
    os_log_type_t v22 = sub_21F157120();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_21;
    }
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    uint64_t v24 = "Invalid value for SigmaAfterNormalizing";
    goto LABEL_20;
  }
  sub_21F0ED5DC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_57;
  }
  objc_msgSend(v101, sel_doubleValue);
  uint64_t v64 = v63;

  if ((~v64 & 0x7FF0000000000000) == 0) {
    goto LABEL_57;
  }
  *(void *)(v4 + 32) = v64;
  uint64_t v65 = sub_21F156CC0();
  if (*(void *)(a1 + 16))
  {
    unint64_t v67 = sub_21F10E9C8(v65, v66);
    if (v68)
    {
      sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v67, (uint64_t)&v103);
    }
    else
    {
      long long v103 = 0u;
      long long v104 = 0u;
    }
  }
  else
  {
    long long v103 = 0u;
    long long v104 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v104 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v103);
    goto LABEL_77;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_77:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_21F156B90();
    __swift_project_value_buffer(v75, (uint64_t)qword_267EBEF18);
    unint64_t v21 = sub_21F156B70();
    os_log_type_t v22 = sub_21F157120();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_21;
    }
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    uint64_t v24 = "Invalid value for MaxCohortSize";
LABEL_20:
    _os_log_impl(&dword_21F0DC000, v21, v22, v24, v23, 2u);
    MEMORY[0x223C45170](v23, -1, -1);
LABEL_21:

LABEL_22:
    sub_21F0ED588();
    swift_allocError();
    *uint64_t v25 = 17;
    swift_willThrow();
    return;
  }
  if ((uint64_t)objc_msgSend(v101, sel_integerValue) < 1)
  {

    goto LABEL_77;
  }
  uint64_t v70 = sub_21F156CC0();
  if (*(void *)(a1 + 16) && (unint64_t v72 = sub_21F10E9C8(v70, v71), (v73 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v72, (uint64_t)&v103);
  }
  else
  {
    long long v103 = 0u;
    long long v104 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v104 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v103);
    goto LABEL_82;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_82:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v76 = sub_21F156B90();
    __swift_project_value_buffer(v76, (uint64_t)qword_267EBEF18);
    uint64_t v77 = sub_21F156B70();
    os_log_type_t v78 = sub_21F157120();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl(&dword_21F0DC000, v77, v78, "Invalid value for PopulationSize", v79, 2u);
      MEMORY[0x223C45170](v79, -1, -1);
    }

    sub_21F0ED588();
    swift_allocError();
    unsigned char *v80 = 17;
    swift_willThrow();

    return;
  }
  if ((uint64_t)objc_msgSend(v101, sel_integerValue) < 1
    || (id v74 = objc_msgSend(v101, sel_integerValue), (uint64_t)objc_msgSend(v101, sel_integerValue) < (uint64_t)v74))
  {

    goto LABEL_82;
  }
  uint64_t v81 = sub_21F156CC0();
  if (*(void *)(a1 + 16) && (unint64_t v83 = sub_21F10E9C8(v81, v82), (v84 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v83, (uint64_t)&v103);
  }
  else
  {
    long long v103 = 0u;
    long long v104 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v104 + 1))
  {
    if (swift_dynamicCast())
    {
      if ((uint64_t)objc_msgSend(v101, sel_integerValue) >= 1)
      {
        uint64_t v85 = sub_21F156CC0();
        if (*(void *)(a1 + 16) && (unint64_t v87 = sub_21F10E9C8(v85, v86), (v88 & 1) != 0))
        {
          sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v87, (uint64_t)&v103);
        }
        else
        {
          long long v103 = 0u;
          long long v104 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v104 + 1))
        {
          if (swift_dynamicCast())
          {
            if ((uint64_t)objc_msgSend(v101, sel_integerValue) >= 2)
            {
              uint64_t v99 = (uint64_t)objc_msgSend(v101, sel_integerValue);

              if (v99 <= 32)
              {
LABEL_115:

                return;
              }
            }
            else
            {
            }
          }
        }
        else
        {
          sub_21F0ED4F0((uint64_t)&v103);
        }
        if (qword_267EBE2C0 != -1) {
          swift_once();
        }
        uint64_t v94 = sub_21F156B90();
        __swift_project_value_buffer(v94, (uint64_t)qword_267EBEF18);
        unint64_t v95 = sub_21F156B70();
        os_log_type_t v96 = sub_21F157120();
        if (os_log_type_enabled(v95, v96))
        {
          uint64_t v97 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v97 = 0;
          _os_log_impl(&dword_21F0DC000, v95, v96, "Invalid value for RenyiOrder", v97, 2u);
          MEMORY[0x223C45170](v97, -1, -1);
        }

        sub_21F0ED588();
        swift_allocError();
        *uint64_t v98 = 17;
        swift_willThrow();
        goto LABEL_115;
      }
    }
  }
  else
  {
    sub_21F0ED4F0((uint64_t)&v103);
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v89 = sub_21F156B90();
  __swift_project_value_buffer(v89, (uint64_t)qword_267EBEF18);
  uint64_t v90 = sub_21F156B70();
  os_log_type_t v91 = sub_21F157120();
  if (os_log_type_enabled(v90, v91))
  {
    unint64_t v92 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v92 = 0;
    _os_log_impl(&dword_21F0DC000, v90, v91, "Invalid value for NumIterations", v92, 2u);
    MEMORY[0x223C45170](v92, -1, -1);
  }

  sub_21F0ED588();
  swift_allocError();
  *uint64_t v93 = 17;
  swift_willThrow();
}

void sub_21F0F0774(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21F156CC0();
  if (!*(void *)(a1 + 16) || (unint64_t v6 = sub_21F10E9C8(v4, v5), (v7 & 1) == 0))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v16);
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
LABEL_8:
    sub_21F0ED4F0((uint64_t)&v16);
    goto LABEL_9;
  }
  sub_21F0ED5DC();
  if (swift_dynamicCast())
  {
    id v8 = v18;
    objc_msgSend(v18, sel_doubleValue);
    uint64_t v10 = v9;

    if ((~v10 & 0x7FF0000000000000) != 0)
    {
      *(void *)(v2 + 24) = v10;
      return;
    }
  }
LABEL_9:
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21F156B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_267EBEF18);
  uint64_t v12 = sub_21F156B70();
  os_log_type_t v13 = sub_21F157120();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v14 = 0;
    _os_log_impl(&dword_21F0DC000, v12, v13, "Invalid value for OverallClippingBound", v14, 2u);
    MEMORY[0x223C45170](v14, -1, -1);
  }

  sub_21F0ED588();
  swift_allocError();
  *char v15 = 17;
  swift_willThrow();
}

uint64_t sub_21F0F095C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PFLTaskPreferences(0);
  MEMORY[0x270FA5388]();
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 16) + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences;
  if (*(unsigned char *)(v8 + *(int *)(v5 + 24)) != 1) {
    goto LABEL_10;
  }
  sub_21F0F0BA4(v8, (uint64_t)v7);
  if (v7[*(int *)(v5 + 24)] != 1)
  {
    sub_21F0F0C08((uint64_t)v7);
    goto LABEL_10;
  }
  uint64_t v9 = &v7[*(int *)(v5 + 20)];
  LOBYTE(v9) = v9[*(int *)(type metadata accessor for PFLDecodableTaskParameters(0) + 44)];
  sub_21F0F0C08((uint64_t)v7);
  if ((v9 & 1) == 0)
  {
LABEL_10:
    char v12 = 0;
    return v12 & 1;
  }
  if (sub_21F156CC0() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
    char v12 = 1;
  }
  else
  {
    char v12 = sub_21F157600();
    swift_bridgeObjectRelease();
  }
  return v12 & 1;
}

uint64_t sub_21F0F0AA8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DediscoMetadataV2()
{
  return self;
}

uint64_t sub_21F0F0B14()
{
  return sub_21F0ED6D0();
}

unint64_t sub_21F0F0B38(uint64_t a1, double a2)
{
  return sub_21F0ED9C0(a1, a2);
}

NSObject *sub_21F0F0B5C()
{
  return sub_21F0EE7E0();
}

unint64_t sub_21F0F0B80()
{
  return sub_21F0EF12C();
}

uint64_t sub_21F0F0BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PFLTaskPreferences(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F0F0C08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PFLTaskPreferences(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F0F0C64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_21F1576F0();
  swift_bridgeObjectRetain();
  sub_21F156D80();
  uint64_t v8 = sub_21F157710();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    char v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21F157600() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21F157600() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21F0F13E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21F0F0E14(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v31 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  uint64_t v32 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      if (!*(void *)(v4 + 16)) {
        goto LABEL_40;
      }
      goto LABEL_25;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_41;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v30) {
          goto LABEL_41;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    if (!*(void *)(v4 + 16))
    {
LABEL_40:
      uint64_t v2 = 0;
      goto LABEL_42;
    }
LABEL_25:
    uint64_t v16 = v3;
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_21F1576F0();
    swift_bridgeObjectRetain();
    sub_21F156D80();
    uint64_t v20 = sub_21F157710();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v20 & ~v22;
    if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_21F157600() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        char v28 = (void *)(v24 + 16 * v23);
        BOOL v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_21F157600() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_42:
      sub_21F0ED6C8();
      return v2;
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_41:
    uint64_t v2 = 1;
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_21F0F1108()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE418);
  uint64_t v3 = sub_21F1572B0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_21F1576F0();
      sub_21F156D80();
      uint64_t result = sub_21F157710();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F0F13E8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_21F0F1108();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_21F0F1584();
      goto LABEL_22;
    }
    sub_21F0F1738();
  }
  uint64_t v11 = *v4;
  sub_21F1576F0();
  sub_21F156D80();
  uint64_t result = sub_21F157710();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_21F157600(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_21F157670();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_21F157600();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_21F0F1584()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE418);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F1572A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21F0F1738()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE418);
  uint64_t v3 = sub_21F1572B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_21F1576F0();
    swift_bridgeObjectRetain();
    sub_21F156D80();
    uint64_t result = sub_21F157710();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F0F19E8(uint64_t a1)
{
  uint64_t v2 = sub_21F156CC0();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_21F10E9C8(v2, v3), (v5 & 1) == 0))
  {
    long long v15 = 0u;
    long long v16 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_9:
    sub_21F0ED4F0((uint64_t)&v15);
LABEL_10:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_21F156B90();
    __swift_project_value_buffer(v7, (uint64_t)qword_267EBEF18);
    unint64_t v8 = sub_21F156B70();
    os_log_type_t v9 = sub_21F157120();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_21F0DC000, v8, v9, "Invalid version for DediscoV2, expect \"2.0\"", v10, 2u);
      MEMORY[0x223C45170](v10, -1, -1);
    }

    sub_21F0ED588();
    swift_allocError();
    *int64_t v11 = 17;
    return swift_willThrow();
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  if (v13 == 3157554 && v14 == 0xE300000000000000) {
    return swift_bridgeObjectRelease();
  }
  char v12 = sub_21F157600();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_10;
  }
  return result;
}

void sub_21F0F1BE4(uint64_t a1)
{
  uint64_t v2 = sub_21F156CC0();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_21F10E9C8(v2, v3), (v5 & 1) == 0))
  {
    long long v23 = 0u;
    long long v24 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v23);
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1))
  {
LABEL_10:
    sub_21F0ED4F0((uint64_t)&v23);
    goto LABEL_11;
  }
  sub_21F0ED5DC();
  if (swift_dynamicCast())
  {
    objc_msgSend(v22, sel_doubleValue);
    if (v6 > 0.0)
    {
      uint64_t v7 = sub_21F156CC0();
      if (*(void *)(a1 + 16) && (unint64_t v9 = sub_21F10E9C8(v7, v8), (v10 & 1) != 0))
      {
        sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v23);
      }
      else
      {
        long long v23 = 0u;
        long long v24 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v24 + 1))
      {
        if (swift_dynamicCast())
        {
          id v16 = objc_msgSend(v22, sel_integerValue);

          if ((uint64_t)v16 > 0)
          {
LABEL_28:

            return;
          }
        }
      }
      else
      {
        sub_21F0ED4F0((uint64_t)&v23);
      }
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_21F156B90();
      __swift_project_value_buffer(v17, (uint64_t)qword_267EBEF18);
      int64_t v18 = sub_21F156B70();
      os_log_type_t v19 = sub_21F157120();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_21F0DC000, v18, v19, "Invalid value for FractionalBitCount", v20, 2u);
        MEMORY[0x223C45170](v20, -1, -1);
      }

      sub_21F0ED588();
      swift_allocError();
      *uint64_t v21 = 17;
      swift_willThrow();
      goto LABEL_28;
    }
  }
LABEL_11:
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21F156B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_267EBEF18);
  char v12 = sub_21F156B70();
  os_log_type_t v13 = sub_21F157120();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_21F0DC000, v12, v13, "Invalid value for L2NormBoundWithNoise", v14, 2u);
    MEMORY[0x223C45170](v14, -1, -1);
  }

  sub_21F0ED588();
  swift_allocError();
  *long long v15 = 17;
  swift_willThrow();
}

uint64_t sub_21F0F1F48(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159660;
  *(void *)(inited + 32) = sub_21F156CC0();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = sub_21F156CC0();
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = sub_21F156CC0();
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = sub_21F156CC0();
  *(void *)(inited + 88) = v7;
  uint64_t v8 = sub_21F134210(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v72 = v8;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_21F0EE648(v9);
  swift_bridgeObjectRetain();
  char v11 = sub_21F0F0E14(v10, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_21F156B90();
    __swift_project_value_buffer(v20, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_21F156B70();
    os_log_type_t v22 = sub_21F157120();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      unint64_t v67 = (void *)swift_slowAlloc();
      id v71 = v67;
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_21F157040();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      sub_21F103FD0(v24, v26, (uint64_t *)&v71);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_21F156BF0();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_21F103FD0(v27, v29, (uint64_t *)&v71);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v21, v22, "Required keys for DPConfig: %s, but got %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v67, -1, -1);
      MEMORY[0x223C45170](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_24;
  }
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F1596F0;
  *(void *)(v12 + 32) = sub_21F156CC0();
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = sub_21F156CC0();
  *(void *)(v12 + 56) = v14;
  uint64_t v15 = sub_21F134210(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  uint64_t v72 = v15;
  uint64_t v16 = sub_21F156CC0();
  if (*(void *)(a1 + 16) && (unint64_t v18 = sub_21F10E9C8(v16, v17), (v19 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v69 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v68);
LABEL_18:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_21F156B90();
    __swift_project_value_buffer(v41, (uint64_t)qword_267EBEF18);
    char v42 = sub_21F156B70();
    os_log_type_t v43 = sub_21F157120();
    if (!os_log_type_enabled(v42, v43)) {
      goto LABEL_23;
    }
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    unint64_t v45 = (void *)swift_slowAlloc();
    id v71 = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_21F157040();
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_21F103FD0(v46, v48, (uint64_t *)&v71);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v42, v43, "Invalid keys for DediscoServerConfiguration, expect %s", v44, 0xCu);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v30 = sub_21F0EE648((uint64_t)v71);
  uint64_t v31 = v72;
  swift_bridgeObjectRetain();
  char v32 = sub_21F0F0E14(v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = xmmword_21F1596F0;
  *(void *)(v33 + 32) = sub_21F156CC0();
  *(void *)(v33 + 40) = v34;
  *(void *)(v33 + 48) = sub_21F156CC0();
  *(void *)(v33 + 56) = v35;
  uint64_t v36 = sub_21F134210(v33);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  uint64_t v72 = v36;
  uint64_t v37 = sub_21F156CC0();
  if (*(void *)(a1 + 16))
  {
    unint64_t v39 = sub_21F10E9C8(v37, v38);
    if (v40)
    {
      sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v39, (uint64_t)&v68);
    }
    else
    {
      long long v68 = 0u;
      long long v69 = 0u;
    }
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v69 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v68);
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_35:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_21F156B90();
    __swift_project_value_buffer(v56, (uint64_t)qword_267EBEF18);
    char v42 = sub_21F156B70();
    os_log_type_t v57 = sub_21F157120();
    if (!os_log_type_enabled(v42, v57)) {
      goto LABEL_23;
    }
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    unint64_t v45 = (void *)swift_slowAlloc();
    id v71 = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_21F157040();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_21F103FD0(v58, v60, (uint64_t *)&v71);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v42, v57, "Invalid keys for VDAFConfig: expect %s", v44, 0xCu);
LABEL_22:
    swift_arrayDestroy();
    MEMORY[0x223C45170](v45, -1, -1);
    MEMORY[0x223C45170](v44, -1, -1);
LABEL_23:

LABEL_24:
    sub_21F0ED588();
    swift_allocError();
    *os_log_type_t v49 = 17;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  id v51 = v71;
  uint64_t v52 = swift_bridgeObjectRetain();
  uint64_t v53 = sub_21F0EE648(v52);
  uint64_t v54 = v72;
  swift_bridgeObjectRetain();
  char v55 = sub_21F0F0E14(v53, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v55 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  sub_21F0F1BE4((uint64_t)v51);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v61 = sub_21F156CC0();
  if (*(void *)(a1 + 16) && (unint64_t v63 = sub_21F10E9C8(v61, v62), (v64 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v63, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v69 + 1))
  {
    sub_21F0ED4F0((uint64_t)&v68);
    goto LABEL_24;
  }
  sub_21F0ED5DC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  id v65 = v71;
  id v66 = objc_msgSend(v71, sel_integerValue);

  if ((uint64_t)v66 <= 0) {
    goto LABEL_24;
  }
  return swift_bridgeObjectRelease();
}

uint64_t Data.toArray<A>()()
{
  sub_21F156F70();
  sub_21F156870();
  return v1;
}

uint64_t sub_21F0F29A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (!result) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(*(void *)(a3 - 8) + 72);
  if (v5)
  {
    if (a2 - result != 0x8000000000000000 || v5 != -1)
    {
LABEL_5:
      sub_21F156C80();
      swift_getWitnessTable();
      uint64_t result = sub_21F156F80();
      *a4 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F0F2A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21F0F29A4(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t Data.toUnsafeBufferPointer<A>()(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v3) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v3 = (int)v3;
LABEL_6:
      uint64_t v7 = *(void *)(*(void *)(a3 - 8) + 72);
      if (!v7)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x21F0F2BC4);
      }
      if (v3 == 0x8000000000000000 && v7 == -1) {
        goto LABEL_11;
      }
      MEMORY[0x270FA5388]();
      sub_21F156C80();
      sub_21F156870();
      return v9;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      BOOL v6 = __OFSUB__(v4, v5);
      uint64_t v3 = v4 - v5;
      if (!v6) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v3 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_21F0F2BD4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  if (!result) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(*(void *)(a3 - 8) + 72);
  if (v5)
  {
    if (a2 - result != 0x8000000000000000 || v5 != -1)
    {
LABEL_5:
      sub_21F156C60();
      uint64_t result = sub_21F156C70();
      *a4 = result;
      a4[1] = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F0F2C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21F0F2BD4(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t Data.withUnsafeBufferPointer<A, B>(_:)()
{
  return sub_21F156870();
}

uint64_t sub_21F0F2CD0(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  if (!result)
  {
    uint64_t v6 = 0;
    return a3(result, v6);
  }
  uint64_t v5 = *(void *)(*(void *)(a5 - 8) + 72);
  if (v5)
  {
    if (a2 - result != 0x8000000000000000 || v5 != -1)
    {
      uint64_t v6 = (a2 - result) / v5;
      return a3(result, v6);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F0F2D40(uint64_t a1, uint64_t a2)
{
  return sub_21F0F2CD0(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16));
}

uint64_t Array.toData()()
{
  sub_21F156F30();
  return v1;
}

uint64_t sub_21F0F2DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = MEMORY[0x223C43740](a1, a2, *(void *)(v3 + 16));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t Array.toData(noCopy:)(char a1)
{
  if ((a1 & 1) == 0) {
    return Array.toData()();
  }
  sub_21F156F10();
  return v2;
}

uint64_t sub_21F0F2E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_21F156850();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F06F00], v6);
    sub_21F156840();
    uint64_t v11 = a2 - a1;
    if (v11)
    {
      sub_21F1566B0();
      swift_allocObject();
      swift_retain();
      uint64_t v15 = sub_21F156650();
      uint64_t v13 = sub_21F0F3030(v15, v11);
      unint64_t v14 = v16;
      swift_release();
    }
    else
    {
      uint64_t v12 = (void (*)(uint64_t, void))sub_21F156840();
      v12(a1, 0);
      swift_release();
      swift_release();
      uint64_t v13 = 0;
      unint64_t v14 = 0xC000000000000000;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0xC000000000000000;
  }
  *a3 = v13;
  a3[1] = v14;
  return result;
}

uint64_t sub_21F0F3030(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF) {
      return a2 << 32;
    }
    sub_21F156860();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = (unsigned char *)sub_21F156670();
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = sub_21F156690();
      if (v5 >= a2) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = v5;
      }
      uint64_t v7 = &v4[v6];
      if (v4) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v3 = sub_21F0F4A94(v4, v8);
      swift_release();
      return v3;
    }
    uint64_t result = sub_21F1566A0();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F0F3280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_21F0F32A8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_21F0F32B4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DType()
{
  return &type metadata for DType;
}

unint64_t sub_21F0F32D0()
{
  unint64_t result = qword_267EBE438;
  if (!qword_267EBE438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE438);
  }
  return result;
}

BOOL sub_21F0F3324(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21F0F3338()
{
  return sub_21F157710();
}

uint64_t sub_21F0F3380()
{
  return sub_21F157700();
}

uint64_t sub_21F0F33AC()
{
  return sub_21F157710();
}

uint64_t sub_21F0F33F0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  if (v1 <= 0xE) {
    return sub_21F0F4A94((unsigned char *)(a1 + 32), (unsigned char *)(a1 + 32 + v1));
  }
  sub_21F1566B0();
  swift_allocObject();
  sub_21F156660();
  if (v1 < 0x7FFFFFFF) {
    return v1 << 32;
  }
  sub_21F156860();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_21F0F34A0(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 61)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = 4 * v1;
    if (4 * v1)
    {
      if (v2 <= 14)
      {
        return sub_21F0F4A94((unsigned char *)(result + 32), (unsigned char *)(result + 32 + v2));
      }
      else
      {
        sub_21F1566B0();
        swift_allocObject();
        sub_21F156660();
        if ((unint64_t)v2 >= 0x7FFFFFFF)
        {
          sub_21F156860();
          uint64_t result = swift_allocObject();
          *(void *)(result + 16) = 0;
          *(void *)(result + 24) = v2;
        }
        else
        {
          return v1 << 34;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21F0F3568(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_21F10E9C8(0x65676E6172, 0xE500000000000000);
    if (v5)
    {
      sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v23);
      sub_21F0ED5DC();
      if (swift_dynamicCast())
      {
        unsigned int v6 = (void *)v24;
        if (*(void *)(a1 + 16))
        {
          unint64_t v7 = sub_21F10E9C8(0x736D657469, 0xE500000000000000);
          if (v8)
          {
            sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v23);
            __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE450);
            if (swift_dynamicCast())
            {
              uint64_t v9 = *(void *)(v24 + 16);
              swift_bridgeObjectRelease();
              if (v9)
              {
                *(void *)(v1 + 24) = a1;
                unsigned __int8 v10 = objc_msgSend(v6, sel_BOOLValue);

                *(unsigned char *)(v2 + 16) = v10;
                return v2;
              }
            }
          }
        }
      }
    }
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_21F156B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_267EBEF18);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_21F156B70();
  os_log_type_t v13 = sub_21F157120();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v23[0] = v22;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v24 = sub_21F103FD0(0x65676E6172, 0xE500000000000000, v23);
    sub_21F1571F0();
    os_log_type_t type = v13;
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v24 = sub_21F103FD0(0x736D657469, 0xE500000000000000, v23);
    sub_21F1571F0();
    *(_WORD *)(v14 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_21F156BE0();
    uint64_t v16 = v2;
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_21F103FD0(v15, v18, v23);
    sub_21F1571F0();
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v12, type, "%s or %s not found in %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v22, -1, -1);
    MEMORY[0x223C45170](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_21F0ED588();
  swift_allocError();
  *char v19 = 2;
  swift_willThrow();
  type metadata accessor for DediscoCategoricalMetadataEncoder();
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_21F0F3910(uint64_t a1, uint64_t a2, size_t a3)
{
  uint64_t v7 = sub_21F11F350(0, a3);
  uint64_t v8 = *(void *)(v3 + 24);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_21F10E9C8(0x736D657469, 0xE500000000000000);
  if ((v10 & 1) == 0)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_21F0ED61C(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v23);
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1))
  {
LABEL_15:
    sub_21F0ED4F0((uint64_t)&v23);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_21F156B90();
    __swift_project_value_buffer(v17, (uint64_t)qword_267EBEF18);
    unint64_t v18 = sub_21F156B70();
    os_log_type_t v19 = sub_21F157120();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_21F0DC000, v18, v19, "Failed to find categorical items, return all false", v20, 2u);
      MEMORY[0x223C45170](v20, -1, -1);
    }

    goto LABEL_21;
  }
  unint64_t v11 = (unint64_t)v22;
  uint64_t v12 = sub_21F0F4780(a1, a2, v22);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14) {
    uint64_t v15 = -1;
  }
  else {
    uint64_t v15 = v12;
  }
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v15 >= (uint64_t)(a3 - 1))
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = 0;
    if (result) {
      goto LABEL_23;
    }
    goto LABEL_26;
  }
  unint64_t v11 = v15 + 1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_26:
    uint64_t result = (uint64_t)sub_21F127380(v7);
    uint64_t v7 = result;
    if ((v11 & 0x8000000000000000) != 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_15;
  }
LABEL_23:
  if (v11 < *(void *)(v7 + 16))
  {
    *(unsigned char *)(v7 + v11 + 32) = 1;
LABEL_21:
    uint64_t v21 = sub_21F0F33F0(v7);
    swift_bridgeObjectRelease();
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F0F3B70(size_t a1, float a2)
{
  unint64_t v3 = a1;
  uint64_t v5 = sub_21F11F350(0, a1);
  if ((~LODWORD(a2) & 0x7F800000) == 0 && (LODWORD(a2) & 0x7FFFFF) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)(v2 + 24);
  if (!*(void *)(v6 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_21F10E9C8(0x736D657469, 0xE500000000000000);
  if ((v8 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_21F0ED61C(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_20:
    sub_21F0ED4F0((uint64_t)&v31);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE440);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_21F156B90();
    __swift_project_value_buffer(v18, (uint64_t)qword_267EBEF18);
    os_log_type_t v19 = sub_21F156B70();
    os_log_type_t v20 = sub_21F157120();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_21F0DC000, v19, v20, "Failed to find categorical items or contains NaN, return all false", v21, 2u);
      MEMORY[0x223C45170](v21, -1, -1);
    }

    goto LABEL_26;
  }
  if (!(v30 >> 62))
  {
    uint64_t v9 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_9;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t v24 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v24) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_21F157420();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_30;
  }
LABEL_9:
  *(void *)&long long v31 = MEMORY[0x263F8EE78];
  sub_21F132C8C(0, v9 & ~(v9 >> 63), 0);
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v31;
  do
  {
    if ((v30 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x223C441C0](v10);
    }
    else {
      id v12 = *(id *)(v30 + 8 * v10 + 32);
    }
    char v13 = v12;
    objc_msgSend(v12, sel_floatValue);
    int v15 = v14;

    *(void *)&long long v31 = v11;
    unint64_t v17 = *(void *)(v11 + 16);
    unint64_t v16 = *(void *)(v11 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_21F132C8C(v16 > 1, v17 + 1, 1);
      uint64_t v11 = v31;
    }
    ++v10;
    *(void *)(v11 + 16) = v17 + 1;
    *(_DWORD *)(v11 + 4 * v17 + 32) = v15;
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v11 + 16);
  if (v24)
  {
LABEL_31:
    uint64_t v25 = 0;
    while (1)
    {
      int v26 = *(_DWORD *)(v11 + 4 * v25 + 32);
      int v27 = ~v26 & 0x7F800000;
      int v28 = v26 & 0x7FFFFF;
      if (!v27 && v28 != 0) {
        break;
      }
      if (v24 == ++v25) {
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_38:
  unint64_t v3 = sub_21F0F4B58(v11, v3, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_43:
  uint64_t result = (uint64_t)sub_21F127380(v5);
  uint64_t v5 = result;
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v3 < *(void *)(v5 + 16))
  {
    *(unsigned char *)(v5 + v3 + 32) = 1;
LABEL_26:
    uint64_t v22 = sub_21F0F33F0(v5);
    swift_bridgeObjectRelease();
    return v22;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_21F0F3F28(uint64_t a1, size_t a2)
{
  uint64_t v5 = sub_21F11F350(0, a2);
  uint64_t v6 = *(void *)(v2 + 24);
  if (!*(void *)(v6 + 16))
  {
LABEL_44:
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_21F10E9C8(0x736D657469, 0xE500000000000000);
  if ((v8 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  sub_21F0ED61C(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_46:
    sub_21F0ED4F0((uint64_t)&v31);
LABEL_47:
    if (qword_267EBE2C0 != -1) {
      goto LABEL_55;
    }
    goto LABEL_48;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_47;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  uint64_t v29 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_58:
    __break(1u);
    return result;
  }
  uint64_t v11 = v30[2];
  uint64_t v28 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  while (1)
  {
    if (!v11) {
      goto LABEL_18;
    }
    unint64_t v13 = v30[2];
    if (!v13) {
      goto LABEL_54;
    }
    int v14 = (uint64_t *)(v28 + 16 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    BOOL v17 = v30[4] == *v14 && v30[5] == v16;
    if (v17 || (uint64_t result = sub_21F157600(), (result & 1) != 0))
    {
      if (v29 <= 0) {
        goto LABEL_38;
      }
      uint64_t v18 = 0;
      goto LABEL_20;
    }
    if (v11 == 1) {
      goto LABEL_18;
    }
    if (v13 < 2)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v30[6] != v15 || v30[7] != v16)
    {
      uint64_t result = sub_21F157600();
      if ((result & 1) == 0)
      {
        os_log_type_t v20 = v30 + 9;
        uint64_t v21 = 2;
        while (v11 != v21)
        {
          uint64_t v18 = v21;
          if (v13 == v21)
          {
            __break(1u);
            goto LABEL_57;
          }
          if (*(v20 - 1) != v15 || *v20 != v16)
          {
            uint64_t result = sub_21F157600();
            uint64_t v21 = v18 + 1;
            v20 += 2;
            if ((result & 1) == 0) {
              continue;
            }
          }
          if (v18 < v29) {
            goto LABEL_20;
          }
          goto LABEL_38;
        }
LABEL_18:
        if (v29 < 0) {
          goto LABEL_38;
        }
        uint64_t v18 = -1;
        goto LABEL_20;
      }
    }
    if (v29 <= 1)
    {
LABEL_38:
      unint64_t v19 = 0;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_39;
      }
      goto LABEL_42;
    }
    uint64_t v18 = 1;
LABEL_20:
    unint64_t v19 = v18 + 1;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v19 & 0x8000000000000000) != 0) {
        goto LABEL_43;
      }
      goto LABEL_39;
    }
LABEL_42:
    uint64_t v5 = (uint64_t)sub_21F127380(v5);
    if ((v19 & 0x8000000000000000) != 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
LABEL_39:
    if (v19 >= *(void *)(v5 + 16)) {
      break;
    }
    ++v12;
    *(unsigned char *)(v5 + v19 + 32) = 1;
    if (v12 == v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  swift_once();
LABEL_48:
  uint64_t v23 = sub_21F156B90();
  __swift_project_value_buffer(v23, (uint64_t)qword_267EBEF18);
  uint64_t v24 = sub_21F156B70();
  os_log_type_t v25 = sub_21F157120();
  if (os_log_type_enabled(v24, v25))
  {
    int v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v26 = 0;
    _os_log_impl(&dword_21F0DC000, v24, v25, "Failed to find categorical items, return all false", v26, 2u);
    MEMORY[0x223C45170](v26, -1, -1);
  }

LABEL_51:
  uint64_t v27 = sub_21F0F33F0(v5);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_21F0F42C0(uint64_t a1, size_t a2)
{
  uint64_t v5 = sub_21F11F350(0, a2);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    unint64_t v7 = (int *)(a1 + 32);
    do
    {
      int v8 = *v7++;
      int v9 = v8 & 0x7FFFFF;
      if ((~v8 & 0x7F800000) == 0 && v9 != 0) {
        goto LABEL_27;
      }
    }
    while (--v6);
  }
  uint64_t v11 = *(void *)(v2 + 24);
  if (!*(void *)(v11 + 16))
  {
    long long v47 = 0u;
    long long v48 = 0u;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_21F10E9C8(0x736D657469, 0xE500000000000000);
  if ((v13 & 1) == 0)
  {
    long long v47 = 0u;
    long long v48 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  sub_21F0ED61C(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v47);
  swift_bridgeObjectRelease();
  if (!*((void *)&v48 + 1))
  {
LABEL_26:
    sub_21F0ED4F0((uint64_t)&v47);
    goto LABEL_27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE440);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_21F156B90();
    __swift_project_value_buffer(v24, (uint64_t)qword_267EBEF18);
    os_log_type_t v25 = sub_21F156B70();
    os_log_type_t v26 = sub_21F157120();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_21F0DC000, v25, v26, "Failed to find categorical items or contains NaN, return all false", v27, 2u);
      MEMORY[0x223C45170](v27, -1, -1);
    }

    goto LABEL_32;
  }
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_21F157420();
    swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_15:
      uint64_t v45 = a1;
      *(void *)&long long v47 = MEMORY[0x263F8EE78];
      uint64_t result = sub_21F132C8C(0, v14 & ~(v14 >> 63), 0);
      if (v14 < 0) {
        goto LABEL_76;
      }
      uint64_t v16 = 0;
      uint64_t v17 = v47;
      do
      {
        if ((v46 & 0xC000000000000001) != 0) {
          id v18 = (id)MEMORY[0x223C441C0](v16);
        }
        else {
          id v18 = *(id *)(v46 + 8 * v16 + 32);
        }
        unint64_t v19 = v18;
        objc_msgSend(v18, sel_floatValue, v45);
        int v21 = v20;

        *(void *)&long long v47 = v17;
        unint64_t v23 = *(void *)(v17 + 16);
        unint64_t v22 = *(void *)(v17 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_21F132C8C(v22 > 1, v23 + 1, 1);
          uint64_t v17 = v47;
        }
        ++v16;
        *(void *)(v17 + 16) = v23 + 1;
        *(_DWORD *)(v17 + 4 * v23 + 32) = v21;
      }
      while (v14 != v16);
      uint64_t result = swift_bridgeObjectRelease();
      a1 = v45;
      uint64_t v29 = *(void *)(v17 + 16);
      if (!v29) {
        goto LABEL_44;
      }
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_15;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v29 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (v29)
  {
LABEL_37:
    uint64_t v30 = 0;
    while (1)
    {
      int v31 = *(_DWORD *)(v17 + 4 * v30 + 32);
      int v32 = ~v31 & 0x7F800000;
      int v33 = v31 & 0x7FFFFF;
      if (!v32 && v33 != 0) {
        break;
      }
      if (v29 == ++v30) {
        goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_44:
  uint64_t v35 = *(void *)(a1 + 16);
  if (!v35)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    uint64_t v28 = sub_21F0F33F0(v5);
    swift_bridgeObjectRelease();
    return v28;
  }
  BOOL v36 = __OFSUB__(a2, 1);
  uint64_t v37 = a2 - 1;
  if (v36) {
    goto LABEL_77;
  }
  uint64_t v38 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v39 = 0;
  while (1)
  {
    if (!v29)
    {
LABEL_56:
      if (v37 < 0) {
        goto LABEL_66;
      }
      uint64_t v42 = -1;
      goto LABEL_60;
    }
    float v40 = *(float *)(v38 + 4 * v39);
    if (vabds_f32(*(float *)(v17 + 32), v40) <= 0.00000011921)
    {
      if (v37 <= 0) {
        goto LABEL_66;
      }
      uint64_t v42 = 0;
    }
    else
    {
      if (v29 == 1) {
        goto LABEL_56;
      }
      if (vabds_f32(*(float *)(v17 + 36), v40) <= 0.00000011921)
      {
        if (v37 <= 1) {
          goto LABEL_66;
        }
        uint64_t v42 = 1;
      }
      else
      {
        if (v29 == 2) {
          goto LABEL_56;
        }
        uint64_t v41 = 10;
        while (1)
        {
          uint64_t v42 = v41 - 8;
          if (vabds_f32(*(float *)(v17 + 4 * v41), v40) <= 0.00000011921) {
            break;
          }
          BOOL v36 = __OFADD__(v42, 1);
          uint64_t v43 = v41 - 7;
          if (v36) {
            goto LABEL_75;
          }
          ++v41;
          if (v43 == v29) {
            goto LABEL_56;
          }
        }
        if (v42 >= v37)
        {
LABEL_66:
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v44 = 0;
          if (result) {
            goto LABEL_67;
          }
          goto LABEL_70;
        }
      }
    }
LABEL_60:
    unint64_t v44 = v42 + 1;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if ((v44 & 0x8000000000000000) != 0) {
        goto LABEL_71;
      }
      goto LABEL_67;
    }
LABEL_70:
    uint64_t result = (uint64_t)sub_21F127380(v5);
    uint64_t v5 = result;
    if ((v44 & 0x8000000000000000) != 0)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
LABEL_67:
    if (v44 >= *(void *)(v5 + 16)) {
      break;
    }
    ++v39;
    *(unsigned char *)(v5 + v44 + 32) = 1;
    if (v39 == v35) {
      goto LABEL_72;
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_21F0F4780(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_21F157600() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_21F157600();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

unint64_t sub_21F0F4868(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_21F156E70() != a1 || v9 != a2)
  {
    char v10 = sub_21F157600();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_21F156DA0();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_21F0F4958()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DediscoCategoricalMetadataEncoder()
{
  return self;
}

uint64_t sub_21F0F49B4(uint64_t a1, uint64_t a2, size_t a3)
{
  return sub_21F0F3910(a1, a2, a3);
}

uint64_t sub_21F0F49D8(size_t a1, float a2)
{
  return sub_21F0F3B70(a1, a2);
}

uint64_t sub_21F0F49FC(uint64_t a1, size_t a2)
{
  return sub_21F0F3F28(a1, a2);
}

uint64_t sub_21F0F4A20(uint64_t a1, size_t a2)
{
  return sub_21F0F42C0(a1, a2);
}

uint64_t sub_21F0F4A44(size_t a1)
{
  uint64_t v1 = sub_21F11F350(0, a1);
  uint64_t v2 = sub_21F0F33F0(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21F0F4A94(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_21F0F4B58(uint64_t result, uint64_t a2, float a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    goto LABEL_8;
  }
  if (vabds_f32(*(float *)(result + 32), a3) > 0.00000011921)
  {
    if (v3 != 1)
    {
      uint64_t v4 = 9;
      while (1)
      {
        uint64_t v5 = v4 - 8;
        if (vabds_f32(*(float *)(result + 4 * v4), a3) <= 0.00000011921) {
          break;
        }
        BOOL v6 = __OFADD__(v5, 1);
        uint64_t v7 = v4 - 7;
        if (v6) {
          goto LABEL_16;
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_8;
        }
      }
LABEL_9:
      uint64_t v8 = a2 - 1;
      if (!__OFSUB__(a2, 1)) {
        goto LABEL_10;
      }
      goto LABEL_15;
    }
LABEL_8:
    uint64_t v5 = -1;
    goto LABEL_9;
  }
  uint64_t v5 = 0;
  uint64_t v8 = a2 - 1;
  if (!__OFSUB__(a2, 1))
  {
LABEL_10:
    if (v5 < v8) {
      return v5 + 1;
    }
    else {
      return 0;
    }
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_21F0F4BD8(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3 >= *(void *)(v4 + 16))
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    uint64_t v5 = type metadata accessor for CKPolicyRecord(0);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = &off_26D0AD770;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    if (v3 < 0)
    {
      __break(1u);
    }
    else
    {
      sub_21F0FBE78(v4+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80))+ *(void *)(*(void *)(v5 - 8) + 72) * v3, (uint64_t)boxed_opaque_existential_1, type metadata accessor for CKPolicyRecord);
      uint64_t v7 = *(void *)(v1 + 24);
      BOOL v8 = __OFADD__(v7, 1);
      uint64_t v9 = v7 + 1;
      if (!v8)
      {
        *(void *)(v1 + 24) = v9;
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_21F0F4CD4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CKPolicy()
{
  return self;
}

void sub_21F0F4D30()
{
  if (!*(void *)(*(void *)(*(void *)v0 + 16) + 16))
  {
    sub_21F0FB4FC();
    swift_allocError();
    *uint64_t v1 = 16;
    swift_willThrow();
  }
}

uint64_t sub_21F0F4D94()
{
  return 1;
}

void sub_21F0F4D9C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21F0F4DA8()
{
  return 0;
}

uint64_t sub_21F0F4DB0()
{
  return 2;
}

uint64_t sub_21F0F4DB8()
{
  uint64_t v1 = sub_21F127960(*v0);
  swift_release();
  return v1;
}

void *sub_21F0F4DF0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F0F4E14(a1, a2, a3);
}

void *sub_21F0F4E14(void *result, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v4 = 0;
    goto LABEL_15;
  }
  uint64_t v4 = a3;
  if (!a3)
  {
LABEL_15:
    *uint64_t result = v3;
    return (void *)v4;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    char v13 = result;
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v5 = *(void *)(v3 + 24);
    if (v5 < *(void *)(v6 + 16))
    {
      uint64_t v7 = a2;
      uint64_t v8 = type metadata accessor for CKPolicyRecord(0);
      uint64_t v9 = 0;
      while (1)
      {
        uint64_t v15 = v8;
        uint64_t v16 = &off_26D0AD770;
        uint64_t result = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
        if (v5 < 0) {
          break;
        }
        uint64_t result = (void *)sub_21F0FBE78(v6+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80))+ *(void *)(*(void *)(v8 - 8) + 72) * v5, (uint64_t)result, type metadata accessor for CKPolicyRecord);
        uint64_t v10 = *(void *)(v3 + 24);
        BOOL v11 = __OFADD__(v10, 1);
        uint64_t v12 = v10 + 1;
        if (v11) {
          goto LABEL_17;
        }
        *(void *)(v3 + 24) = v12;
        sub_21F0FB5B4(&v14, (uint64_t)v17);
        sub_21F0FB5B4(v17, v7);
        if (v4 - 1 == v9) {
          goto LABEL_14;
        }
        v7 += 40;
        uint64_t v5 = *(void *)(v3 + 24);
        ++v9;
        if (v5 >= *(void *)(v6 + 16)) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v9 = 0;
LABEL_13:
    uint64_t v4 = v9;
LABEL_14:
    uint64_t result = v13;
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_21F0F4F94(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (!a2)
  {
    uint64_t v5 = 0;
    goto LABEL_12;
  }
  uint64_t v5 = a3;
  if (!a3)
  {
LABEL_12:
    *uint64_t v4 = v3;
    return (void *)v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = *(void *)(v3 + 24);
    if (v7 >= v6)
    {
      uint64_t v10 = 0;
LABEL_11:
      uint64_t v5 = v10;
    }
    else
    {
      uint64_t v8 = a2;
      uint64_t v9 = type metadata accessor for FileRecipeDescriptor();
      uint64_t v10 = 0;
      while (1)
      {
        *(void *)(v3 + 24) = v7 + 1;
        uint64_t v11 = swift_allocObject();
        uint64_t v13 = v9;
        long long v14 = &off_26D0AE2B0;
        *(void *)&long long v12 = v11;
        sub_21F0FB5B4(&v12, (uint64_t)v15);
        sub_21F0FB5B4(v15, v8);
        if (v5 - 1 == v10) {
          break;
        }
        v8 += 40;
        uint64_t v7 = *(void *)(v3 + 24);
        ++v10;
        if (v7 >= v6) {
          goto LABEL_11;
        }
      }
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void *sub_21F0F508C(void *result, uint64_t a2, uint64_t a3)
{
  if (!a2 || !a3)
  {
    uint64_t v7 = 0;
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    int v21 = result;
    uint64_t v4 = *(void *)(v3 + 16);
    uint64_t v5 = *(void *)(v3 + 120);
    if (v5 < *(void *)(v4 + 16))
    {
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      uint64_t v23 = a3 - 1;
      uint64_t v24 = v4 + 32;
      uint64_t v22 = *(void *)(v3 + 16);
      while ((v5 & 0x8000000000000000) == 0)
      {
        uint64_t v8 = (int *)(v24 + 88 * v5);
        uint64_t v9 = *((void *)v8 + 5);
        uint64_t v10 = *((void *)v8 + 6);
        uint64_t v11 = *((void *)v8 + 7);
        unsigned __int8 v12 = *((unsigned char *)v8 + 64);
        uint64_t v26 = *((void *)v8 + 10);
        uint64_t v27 = *((void *)v8 + 9);
        uint64_t v13 = *((void *)v8 + 3);
        uint64_t v25 = *((void *)v8 + 4);
        uint64_t v14 = v7;
        uint64_t v15 = v6;
        uint64_t v17 = *((void *)v8 + 1);
        uint64_t v16 = *((void *)v8 + 2);
        int v18 = *v8;
        *(void *)(v3 + 120) = v5 + 1;
        uint64_t v29 = &type metadata for DodMLRecipeDescriptor;
        uint64_t v30 = &off_26D0ADCD0;
        uint64_t v19 = swift_allocObject();
        *(void *)&long long v28 = v19;
        *(_DWORD *)(v19 + 16) = v18;
        *(void *)(v19 + 24) = v17;
        *(void *)(v19 + 32) = v16;
        *(void *)(v19 + 40) = v13;
        *(void *)(v19 + 48) = v25;
        *(void *)(v19 + 56) = v9;
        *(void *)(v19 + 64) = v10;
        *(void *)(v19 + 72) = v11;
        *(unsigned char *)(v19 + 80) = v12;
        *(void *)(v19 + 88) = v27;
        *(void *)(v19 + 96) = v26;
        sub_21F0FB5B4(&v28, (uint64_t)v31);
        sub_21F0FB5B4(v31, v15);
        if (v23 == v14)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21F0FB9EC(v10, v11, v12);
          swift_bridgeObjectRetain();
          uint64_t v7 = a3;
          uint64_t result = v21;
          goto LABEL_14;
        }
        uint64_t v6 = v15 + 40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21F0FB9EC(v10, v11, v12);
        uint64_t result = (void *)swift_bridgeObjectRetain();
        uint64_t v5 = *(void *)(v3 + 120);
        uint64_t v7 = v14 + 1;
        if (v5 >= *(void *)(v22 + 16)) {
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v7 = 0;
LABEL_12:
    uint64_t result = v21;
LABEL_14:
    *uint64_t result = v3;
    return (void *)v7;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_21F0F5288()
{
  return sub_21F156EC0();
}

void sub_21F0F52F0(uint64_t a1@<X8>)
{
}

uint64_t sub_21F0F5314(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1))
{
  uint64_t v4 = v3;
  v136 = a3;
  uint64_t v137 = a1;
  uint64_t v138 = a2;
  uint64_t v150 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_21F156CF0();
  uint64_t v140 = *(void *)(v5 - 8);
  unint64_t v141 = v5;
  MEMORY[0x270FA5388](v5);
  v139 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F156930();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CKPolicyRecord(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v135 = (uint64_t)&v128 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v134 = (uint64_t)&v128 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v133 = (uint64_t)&v128 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v144 = (uint64_t)&v128 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v128 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v128 - v26;
  unint64_t v28 = sub_21F13D948(0x20000000000001);
  uint64_t v145 = v11;
  if (*(double *)(v4 + *(int *)(v11 + 60)) < (double)v28 * 1.11022302e-16 + 0.0)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_21F156B90();
    __swift_project_value_buffer(v29, (uint64_t)qword_267EBEF18);
    sub_21F0FBE78(v4, (uint64_t)v27, type metadata accessor for CKPolicyRecord);
    sub_21F0FBE78(v4, (uint64_t)v25, type metadata accessor for CKPolicyRecord);
    uint64_t v30 = sub_21F156B70();
    os_log_type_t v31 = sub_21F157110();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v143 = swift_slowAlloc();
      *(void *)&long long v148 = v143;
      *(_DWORD *)uint64_t v32 = 134218242;
      *(void *)&v147[0] = *(void *)&v27[*(int *)(v145 + 60)];
      sub_21F1571F0();
      sub_21F0FBE18((uint64_t)v27, type metadata accessor for CKPolicyRecord);
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v142 = v32 + 14;
      sub_21F0FBE78((uint64_t)v25, v144, type metadata accessor for CKPolicyRecord);
      uint64_t v33 = sub_21F156D00();
      *(void *)&v147[0] = sub_21F103FD0(v33, v34, (uint64_t *)&v148);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F0FBE18((uint64_t)v25, type metadata accessor for CKPolicyRecord);
      _os_log_impl(&dword_21F0DC000, v30, v31, "Recipe targeting failed to target by sampling rate %f for recipe %s", (uint8_t *)v32, 0x16u);
      uint64_t v35 = v143;
      swift_arrayDestroy();
      MEMORY[0x223C45170](v35, -1, -1);
      MEMORY[0x223C45170](v32, -1, -1);
    }
    else
    {
      sub_21F0FBE18((uint64_t)v27, type metadata accessor for CKPolicyRecord);
      sub_21F0FBE18((uint64_t)v25, type metadata accessor for CKPolicyRecord);
    }

    sub_21F0FB4FC();
    swift_allocError();
    *unint64_t v46 = 18;
    return swift_willThrow();
  }
  sub_21F156920();
  sub_21F0FBF70((unint64_t *)&qword_267EBE490, 255, MEMORY[0x263F07490]);
  uint64_t v143 = (uint64_t)v10;
  char v36 = sub_21F156C30();
  uint64_t v37 = v7;
  uint64_t v38 = v145;
  if ((v36 & 1) == 0 && (sub_21F156C30() & 1) == 0)
  {
    uint64_t v132 = v7;
    type metadata accessor for PopulationSegmentation();
    swift_initStackObject();
    uint64_t v50 = sub_21F10D47C();
    id v51 = v50;
    uint64_t v52 = *(void *)(v4 + *(int *)(v38 + 76));
    uint64_t v53 = MEMORY[0x263F8D310];
    if (*(void *)(v52 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE498);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F1596F0;
      char v55 = (void *)(v4 + *(int *)(v38 + 44));
      uint64_t v56 = v55[1];
      *(void *)(inited + 32) = *v55;
      uint64_t v57 = MEMORY[0x263F8D378];
      *(void *)(inited + 56) = v53;
      *(void *)(inited + 64) = v57;
      uint64_t v58 = MEMORY[0x263F8E5C0];
      *(void *)(inited + 40) = v56;
      uint64_t v59 = MEMORY[0x263F8E608];
      *(void *)(inited + 96) = v58;
      *(void *)(inited + 104) = v59;
      uint64_t v60 = v142;
      if (!*(void *)(v52 + 16))
      {
        __break(1u);
        goto LABEL_49;
      }
      uint64_t v61 = v53;
      *(void *)(inited + 72) = *(void *)(v52 + 32);
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_21F10D57C(inited);
      if (v60)
      {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v143, v132);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4A0);
        swift_arrayDestroy();
        return swift_release();
      }
      long long v129 = v51;
      uint64_t v130 = v62;
      uint64_t v131 = v8;
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4A0);
      swift_arrayDestroy();
    }
    else
    {
      uint64_t v61 = MEMORY[0x263F8D310];
      uint64_t v131 = v8;
      long long v129 = v50;
      uint64_t v130 = -1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
    uint64_t v63 = swift_initStackObject();
    *(_OWORD *)(v63 + 16) = xmmword_21F159700;
    *(void *)(v63 + 32) = 0x5F65636976656424;
    *(void *)(v63 + 40) = 0xEA0000000000736FLL;
    *(void *)&long long v148 = 256;
    uint64_t v64 = sub_21F156F40();
    *(void *)(v64 + 16) = 256;
    *(_OWORD *)(v64 + 48) = 0u;
    *(_OWORD *)(v64 + 64) = 0u;
    *(_OWORD *)(v64 + 80) = 0u;
    *(_OWORD *)(v64 + 96) = 0u;
    *(_OWORD *)(v64 + 112) = 0u;
    *(_OWORD *)(v64 + 128) = 0u;
    *(_OWORD *)(v64 + 144) = 0u;
    *(_OWORD *)(v64 + 160) = 0u;
    *(_OWORD *)(v64 + 176) = 0u;
    *(_OWORD *)(v64 + 192) = 0u;
    *(_OWORD *)(v64 + 208) = 0u;
    *(_OWORD *)(v64 + 224) = 0u;
    *(_OWORD *)(v64 + 240) = 0u;
    *(_OWORD *)(v64 + 256) = 0u;
    *(_OWORD *)(v64 + 272) = 0u;
    *(_OWORD *)(v64 + 32) = 0u;
    sysctlbyname("kern.osversion", (void *)(v64 + 32), (size_t *)&v148, 0, 0);
    uint64_t v66 = sub_21F0FB80C(v64, v65);
    uint64_t v68 = v67;
    swift_bridgeObjectRelease();
    *(void *)(v63 + 48) = v66;
    *(void *)(v63 + 56) = v68;
    *(void *)(v63 + 72) = v61;
    strcpy((char *)(v63 + 80), "$device_type");
    *(unsigned char *)(v63 + 93) = 0;
    *(_WORD *)(v63 + 94) = -5120;
    sub_21F10B0EC();
    *(void *)(v63 + 96) = v69;
    *(void *)(v63 + 104) = v70;
    *(void *)(v63 + 120) = v61;
    strcpy((char *)(v63 + 128), "$dodml_dataset");
    *(unsigned char *)(v63 + 143) = -18;
    uint64_t v71 = v138;
    *(void *)(v63 + 144) = v137;
    *(void *)(v63 + 152) = v71;
    *(void *)(v63 + 168) = v61;
    *(void *)(v63 + 176) = 0xD000000000000013;
    uint64_t v72 = MEMORY[0x263F8D6C8];
    uint64_t v73 = v130;
    *(void *)(v63 + 184) = 0x800000021F15F5C0;
    *(void *)(v63 + 192) = v73;
    *(void *)(v63 + 216) = v72;
    *(void *)(v63 + 224) = 0xD000000000000014;
    *(void *)(v63 + 232) = 0x800000021F15F5E0;
    *(void *)&long long v148 = 0xD000000000000013;
    *((void *)&v148 + 1) = 0x800000021F15F600;
    swift_bridgeObjectRetain();
    sub_21F156DD0();
    sub_21F156DD0();
    sub_21F156DD0();
    *(void *)&v147[0] = 46;
    *((void *)&v147[0] + 1) = 0xE100000000000000;
    v146[0] = (id)95;
    v146[1] = (id)0xE100000000000000;
    sub_21F0FB854();
    sub_21F157220();
    swift_bridgeObjectRelease();
    id v74 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v75 = (void *)sub_21F156C90();
    swift_bridgeObjectRelease();
    id v76 = objc_msgSend(v74, sel_valueForKey_, v75);

    if (v76)
    {
      sub_21F157250();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v147, 0, sizeof(v147));
    }
    uint64_t v77 = v136;
    sub_21F0FB914((uint64_t)v147, (uint64_t)&v148, &qword_267EBE3F8);
    uint64_t v38 = v145;
    if (v149)
    {
      if (swift_dynamicCast())
      {
        id v78 = v146[0];
        goto LABEL_30;
      }
    }
    else
    {
      sub_21F0FC154((uint64_t)&v148, &qword_267EBE3F8);
    }
    id v78 = 0;
LABEL_30:
    *(void *)(v63 + 264) = MEMORY[0x263F8D6C8];
    *(void *)(v63 + 240) = v78;
    unint64_t v79 = sub_21F0FC1B0(v63);
    unint64_t v80 = sub_21F1505A4((uint64_t)v77);
    uint64_t v81 = (void *)sub_21F0ECD1C(v80, v79);
    uint64_t v82 = v139;
    sub_21F156CE0();
    uint64_t v83 = sub_21F156CD0();
    unint64_t v85 = v84;
    (*(void (**)(char *, unint64_t))(v140 + 8))(v82, v141);
    if (v85 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v86 = self;
      unint64_t v87 = (void *)sub_21F156880();
      v146[0] = 0;
      id v88 = objc_msgSend(v86, sel_JSONObjectWithData_options_error_, v87, 4, v146);

      id v89 = v146[0];
      if (v88)
      {
        unint64_t v141 = v85;
        sub_21F157250();
        swift_unknownObjectRelease();
        sub_21F0ED188(v147, &v148);
        sub_21F0ED61C((uint64_t)&v148, (uint64_t)v147);
        v146[3] = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
        v146[0] = v81;
        swift_bridgeObjectRetain();
        LODWORD(v142) = sub_21F1303C8((uint64_t)v147, (uint64_t)v146);
        sub_21F0FC154((uint64_t)v147, &qword_267EBE3F8);
        sub_21F0FC154((uint64_t)v146, &qword_267EBE3F8);
        if (qword_267EBE2C0 != -1) {
          swift_once();
        }
        uint64_t v90 = sub_21F156B90();
        __swift_project_value_buffer(v90, (uint64_t)qword_267EBEF18);
        uint64_t v91 = v133;
        sub_21F0FBE78(v4, v133, type metadata accessor for CKPolicyRecord);
        uint64_t v92 = v134;
        sub_21F0FBE78(v4, v134, type metadata accessor for CKPolicyRecord);
        swift_bridgeObjectRetain();
        uint64_t v93 = sub_21F156B70();
        os_log_type_t v94 = sub_21F157110();
        int v95 = v94;
        if (os_log_type_enabled(v93, v94))
        {
          uint64_t v96 = swift_slowAlloc();
          uint64_t v140 = v83;
          uint64_t v97 = v96;
          v139 = (char *)swift_slowAlloc();
          *(void *)&v147[0] = v139;
          *(_DWORD *)uint64_t v97 = 67109890;
          LODWORD(v146[0]) = v142 & 1;
          sub_21F1571F0();
          *(_WORD *)(v97 + 8) = 2080;
          LODWORD(v138) = v95;
          uint64_t v98 = (uint64_t *)(v91 + *(int *)(v145 + 68));
          uint64_t v99 = *v98;
          unint64_t v100 = v98[1];
          swift_bridgeObjectRetain();
          v146[0] = (id)sub_21F103FD0(v99, v100, (uint64_t *)v147);
          sub_21F1571F0();
          swift_bridgeObjectRelease();
          v136 = type metadata accessor for CKPolicyRecord;
          sub_21F0FBE18(v91, type metadata accessor for CKPolicyRecord);
          *(_WORD *)(v97 + 18) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v137 = MEMORY[0x263F8EE58] + 8;
          uint64_t v101 = sub_21F156BE0();
          unint64_t v103 = v102;
          swift_bridgeObjectRelease();
          v146[0] = (id)sub_21F103FD0(v101, v103, (uint64_t *)v147);
          sub_21F1571F0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v97 + 28) = 2080;
          uint64_t v104 = v134;
          sub_21F0FBE78(v134, v144, type metadata accessor for CKPolicyRecord);
          uint64_t v105 = sub_21F156D00();
          v146[0] = (id)sub_21F103FD0(v105, v106, (uint64_t *)v147);
          char v107 = v142;
          sub_21F1571F0();
          swift_bridgeObjectRelease();
          sub_21F0FBE18(v104, v136);
          _os_log_impl(&dword_21F0DC000, v93, (os_log_type_t)v138, "Recipe targeting %{BOOL}d, predicate: %s, subject: %s, recipe: %s", (uint8_t *)v97, 0x26u);
          uint64_t v108 = v139;
          swift_arrayDestroy();
          MEMORY[0x223C45170](v108, -1, -1);
          uint64_t v109 = v97;
          uint64_t v83 = v140;
          MEMORY[0x223C45170](v109, -1, -1);

          uint64_t v110 = v131;
          uint64_t v111 = v132;
        }
        else
        {
          sub_21F0FBE18(v91, type metadata accessor for CKPolicyRecord);
          swift_bridgeObjectRelease_n();
          sub_21F0FBE18(v92, type metadata accessor for CKPolicyRecord);

          uint64_t v110 = v131;
          uint64_t v111 = v132;
          char v107 = v142;
        }
        unint64_t v126 = v141;
        if ((v107 & 1) == 0)
        {
          sub_21F0FB4FC();
          swift_allocError();
          *unint64_t v127 = 20;
          swift_willThrow();
        }
        sub_21F0FB8A8(v83, v126);
        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v148);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v143, v111);
      }
      uint64_t v112 = v89;
      v113 = (void *)sub_21F1566F0();

      swift_willThrow();
      sub_21F0FB8A8(v83, v85);
      swift_bridgeObjectRelease();
      uint64_t v38 = v145;
    }
    if (qword_267EBE2C0 == -1)
    {
LABEL_39:
      uint64_t v114 = sub_21F156B90();
      __swift_project_value_buffer(v114, (uint64_t)qword_267EBEF18);
      uint64_t v115 = v4;
      uint64_t v116 = v135;
      sub_21F0FBE78(v115, v135, type metadata accessor for CKPolicyRecord);
      uint64_t v117 = sub_21F156B70();
      os_log_type_t v118 = sub_21F157120();
      if (os_log_type_enabled(v117, v118))
      {
        uint64_t v119 = v38;
        uint64_t v120 = (uint8_t *)swift_slowAlloc();
        uint64_t v121 = swift_slowAlloc();
        *(_DWORD *)uint64_t v120 = 136315138;
        *(void *)&long long v148 = v121;
        uint64_t v122 = (uint64_t *)(v116 + *(int *)(v119 + 68));
        uint64_t v123 = *v122;
        unint64_t v124 = v122[1];
        swift_bridgeObjectRetain();
        *(void *)&v147[0] = sub_21F103FD0(v123, v124, (uint64_t *)&v148);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        sub_21F0FBE18(v116, type metadata accessor for CKPolicyRecord);
        _os_log_impl(&dword_21F0DC000, v117, v118, "Failed to parse target criteria %s", v120, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v121, -1, -1);
        MEMORY[0x223C45170](v120, -1, -1);
      }
      else
      {
        sub_21F0FBE18(v116, type metadata accessor for CKPolicyRecord);
      }

      uint64_t v110 = v131;
      uint64_t v111 = v132;
      sub_21F0FB4FC();
      swift_allocError();
      unsigned char *v125 = 19;
      swift_willThrow();
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v143, v111);
    }
LABEL_49:
    swift_once();
    goto LABEL_39;
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_21F156B90();
  __swift_project_value_buffer(v39, (uint64_t)qword_267EBEF18);
  sub_21F0FBE78(v4, (uint64_t)v14, type metadata accessor for CKPolicyRecord);
  float v40 = sub_21F156B70();
  os_log_type_t v41 = sub_21F157110();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v132 = v37;
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(void *)&long long v148 = v43;
    uint64_t v131 = v8;
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v142 = (uint64_t)(v42 + 4);
    sub_21F0FBE78((uint64_t)v14, v144, type metadata accessor for CKPolicyRecord);
    uint64_t v44 = sub_21F156D00();
    *(void *)&v147[0] = sub_21F103FD0(v44, v45, (uint64_t *)&v148);
    uint64_t v8 = v131;
    uint64_t v37 = v132;
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    sub_21F0FBE18((uint64_t)v14, type metadata accessor for CKPolicyRecord);
    _os_log_impl(&dword_21F0DC000, v40, v41, "Recipe targeting failed at timestamp check for recipe %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v43, -1, -1);
    MEMORY[0x223C45170](v42, -1, -1);
  }
  else
  {
    sub_21F0FBE18((uint64_t)v14, type metadata accessor for CKPolicyRecord);
  }

  uint64_t v48 = v143;
  sub_21F0FB4FC();
  swift_allocError();
  *os_log_type_t v49 = 48;
  swift_willThrow();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v48, v37);
}

uint64_t sub_21F0F6694(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1))
{
  return sub_21F0F5314(a1, a2, a3);
}

uint64_t sub_21F0F66AC()
{
  uint64_t v0 = sub_21F156930();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F156920();
  uint64_t v4 = sub_21F106B34((uint64_t)v3);
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  uint64_t v10 = 3820355;
  unint64_t v11 = 0xE300000000000000;
  sub_21F156DD0();
  sub_21F156DD0();
  swift_bridgeObjectRetain();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  swift_bridgeObjectRetain();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  swift_bridgeObjectRetain();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  uint64_t v9 = v4;
  sub_21F1575D0();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  uint64_t v9 = v6;
  sub_21F1575D0();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_21F0F68D4(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v84 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE538);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v83 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21F156A10();
  uint64_t v74 = *(void *)(v11 - 8);
  uint64_t v75 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v73 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267EBE540);
  MEMORY[0x270FA5388](v13 - 8);
  id v76 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21F1569B0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_21F156A30();
  unint64_t v81 = *(void *)(v19 - 8);
  uint64_t v82 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v80 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v72 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v72 - v25;
  uint64_t v27 = *a1;
  unint64_t v28 = a1[1];
  uint64_t v29 = a1[2];
  uint64_t v30 = a1[3];
  v5[2] = *a1;
  v5[3] = v28;
  v5[4] = v29;
  v5[5] = v30;
  v5[6] = a2;
  v5[7] = a3;
  uint64_t v78 = v29;
  uint64_t v79 = v27;
  uint64_t v77 = v30;
  sub_21F0FC10C(v27, v28);
  sub_21F10B208();
  v5[8] = v31;
  v5[9] = v32;
  if (v28 == 3)
  {
LABEL_5:
    uint64_t v34 = 0x69746375646F7270;
    unint64_t v33 = 0xEA00000000006E6FLL;
    goto LABEL_7;
  }
  if (v28 != 4)
  {
    if (v28 == 5)
    {
      unint64_t v33 = 0xE700000000000000;
      uint64_t v34 = 0x676E6967617473;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  unint64_t v33 = 0xE500000000000000;
  uint64_t v34 = 0x7972726163;
LABEL_7:
  v5[10] = v34;
  v5[11] = v33;
  sub_21F1569F0();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F07570], v15);
  sub_21F156970();
  uint64_t v35 = sub_21F156980();
  unint64_t v37 = v36;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  unint64_t v38 = sub_21F10B2B4(v35, v37);
  unint64_t v40 = v39;
  swift_bridgeObjectRelease();
  unint64_t v85 = v38;
  unint64_t v86 = v40;
  uint64_t v91 = 45;
  unint64_t v92 = 0xE100000000000000;
  uint64_t v89 = 95;
  unint64_t v90 = 0xE100000000000000;
  sub_21F0FB854();
  uint64_t v41 = sub_21F157220();
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v82;
  unint64_t v45 = *(void (**)(char *, uint64_t))(v81 + 8);
  v45(v26, v82);
  v5[12] = v41;
  v5[13] = v43;
  sub_21F1569F0();
  unint64_t v46 = v73;
  sub_21F156A20();
  uint64_t v47 = (uint64_t)v76;
  sub_21F156A00();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v75);
  uint64_t v48 = sub_21F1569A0();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
  {
    sub_21F0FC154(v47, (uint64_t *)&unk_267EBE540);
    unint64_t v50 = 0xE800000000000000;
    uint64_t v51 = 0x6E776F6E6B6E7524;
  }
  else
  {
    uint64_t v52 = sub_21F156990();
    uint64_t v53 = v47;
    uint64_t v51 = v52;
    unint64_t v50 = v54;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v53, v48);
  }
  unint64_t v81 = v28;
  v45(v24, v44);
  v5[14] = v51;
  v5[15] = v50;
  char v55 = v80;
  sub_21F1569F0();
  uint64_t v56 = (uint64_t)v83;
  sub_21F1569E0();
  uint64_t v57 = sub_21F1569D0();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
  {
    sub_21F0FC154(v56, &qword_267EBE538);
    unint64_t v59 = 0xE800000000000000;
    uint64_t v60 = 0x6E776F6E6B6E7524;
  }
  else
  {
    uint64_t v60 = sub_21F156990();
    unint64_t v59 = v61;
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
  }
  v45(v55, v44);
  v5[16] = v60;
  v5[17] = v59;
  uint64_t v62 = v79;
  unint64_t v63 = v81;
  unint64_t v85 = v79;
  unint64_t v86 = v81;
  uint64_t v87 = v78;
  uint64_t v88 = v77;
  id v64 = sub_21F0FBA54((uint64_t *)&v85);
  sub_21F0FC0C4(v62, v63);
  id v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD610]), sel_initWithContainerID_, v64);

  v5[18] = objc_msgSend(v65, sel_publicCloudDatabase);
  id v66 = objc_msgSend(self, sel_defaultRecordZone);
  id v67 = objc_msgSend(v66, sel_zoneID);

  v5[19] = v67;
  id v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD780]), sel_init);
  uint64_t v69 = (void *)sub_21F156C90();
  objc_msgSend(v68, sel_setName_, v69);

  v5[20] = v68;
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFD778]), sel_init);
  objc_msgSend(v70, sel_setPreferAnonymousRequests_, 1);
  objc_msgSend(v70, sel_setQualityOfService_, 9);
  objc_msgSend(v70, sel_setContainer_, v65);
  objc_msgSend(v70, sel_setAllowsCellularAccess_, v84 & 1);
  objc_msgSend(v70, sel_setAllowsExpensiveNetworkAccess_, 0);

  v5[21] = v70;
  return v5;
}

uint64_t sub_21F0F709C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4F0);
  v4[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CKPolicyRecord(0);
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F0F71B8, 0, 0);
}

uint64_t sub_21F0F71B8()
{
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21F156B90();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_267EBEF18);
  uint64_t v2 = sub_21F156B70();
  os_log_type_t v3 = sub_21F157110();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_21F0DC000, v2, v3, "Querying CK for policies", v4, 2u);
    MEMORY[0x223C45170](v4, -1, -1);
  }
  uint64_t v6 = v0[17];
  uint64_t v5 = (uint64_t *)v0[18];
  uint64_t v7 = v0[16];

  sub_21F0FBF34(0, &qword_267EBE4F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE500);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_21F1596F0;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_21F0FBEE0();
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = 0x695F6E6967756C70;
  *(void *)(v8 + 80) = 0xE900000000000064;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_21F1570B0();
  v0[27] = v11;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F1596F0;
  *(void *)(v12 + 56) = v9;
  *(void *)(v12 + 64) = v10;
  *(void *)(v12 + 32) = 0x657669746361;
  *(void *)(v12 + 40) = 0xE600000000000000;
  *(void *)(v12 + 96) = v9;
  *(void *)(v12 + 104) = v10;
  *(void *)(v12 + 72) = 0x737574617473;
  *(void *)(v12 + 80) = 0xE600000000000000;
  uint64_t v13 = (void *)sub_21F1570B0();
  v0[28] = v13;
  uint64_t v14 = (void *)sub_21F0FBC18(0x73656369766564, 0xE700000000000000, v5[8], v5[9], 1819042084, 0xE400000000000000);
  v0[29] = v14;
  uint64_t v15 = (void *)sub_21F0FBC18(0x73656C61636F6CLL, 0xE700000000000000, v5[12], v5[13], 1819042084, 0xE400000000000000);
  v0[30] = v15;
  uint64_t v16 = (void *)sub_21F0FBC18(0x65676175676E616CLL, 0xE900000000000073, v5[14], v5[15], 1819042084, 0xE400000000000000);
  v0[31] = v16;
  uint64_t v17 = (void *)sub_21F0FBC18(0x736E6F69676572, 0xE700000000000000, v5[16], v5[17], 1819042084, 0xE400000000000000);
  v0[32] = v17;
  uint64_t v18 = (void *)sub_21F0FBC18(0xD000000000000013, 0x800000021F15F620, v5[10], v5[11], 1819042084, 0xE400000000000000);
  v0[33] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4E8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_21F159850;
  *(void *)(v19 + 32) = v11;
  *(void *)(v19 + 40) = v13;
  *(void *)(v19 + 48) = v14;
  *(void *)(v19 + 56) = v15;
  *(void *)(v19 + 64) = v16;
  *(void *)(v19 + 72) = v17;
  *(void *)(v19 + 80) = v18;
  sub_21F156F00();
  id v20 = v11;
  id v21 = v13;
  id v22 = v14;
  id v23 = v15;
  id v24 = v16;
  id v25 = v17;
  id v26 = v18;
  uint64_t v27 = (void *)sub_21F156EE0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v27);
  v0[34] = v28;

  sub_21F0FBF34(0, &qword_267EBE510);
  id v29 = v28;
  uint64_t v30 = sub_21F157180();
  v0[35] = v30;
  v0[36] = sub_21F0FB4FC();
  uint64_t v31 = swift_allocError();
  v0[37] = v31;
  *uint64_t v32 = 6;
  unint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_267EBE760 + dword_267EBE760);
  swift_retain();
  unint64_t v33 = (void *)swift_task_alloc();
  v0[38] = v33;
  *unint64_t v33 = v0;
  v33[1] = sub_21F0F7684;
  uint64_t v34 = v0[18];
  return v36(v31, v34, v30);
}

uint64_t sub_21F0F7684(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[39] = a1;
  v5[40] = v2;
  swift_task_dealloc();
  swift_release();
  if (v2)
  {
    uint64_t v6 = sub_21F0F8264;
  }
  else
  {
    uint64_t v7 = (void *)v5[37];
    v5[41] = a2;

    uint64_t v6 = sub_21F0F77DC;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_21F0F77DC()
{
  uint64_t v81 = v0;

  swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F156B70();
  os_log_type_t v2 = sub_21F157110();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 112) = *(void *)(v3 + 16);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v1, v2, "Number of CK Policies %ld", v4, 0xCu);
    MEMORY[0x223C45170](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = *(void *)(*(void *)(v0 + 312) + 16);
  *(void *)(v0 + 336) = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = MEMORY[0x263F8EE78];
    while (1)
    {
      *(void *)(v0 + 344) = v6;
      *(void *)(v0 + 352) = v7;
      uint64_t v8 = *(void *)(v0 + 312) + 24 * v6;
      uint64_t v9 = *(void **)(v8 + 32);
      *(void *)(v0 + 360) = v9;
      unint64_t v10 = *(void **)(v8 + 40);
      *(void *)(v0 + 368) = v10;
      char v11 = *(unsigned char *)(v8 + 48);
      id v12 = v9;
      uint64_t v78 = v10;
      sub_21F0FBDA8(v10);
      uint64_t v13 = sub_21F156B70();
      os_log_type_t v14 = sub_21F157110();
      uint64_t v77 = v12;
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = v12;
        uint64_t v16 = swift_slowAlloc();
        uint64_t v17 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 138412290;
        *(void *)(v16 + 4) = v15;
        *uint64_t v17 = v15;

        _os_log_impl(&dword_21F0DC000, v13, v14, "Policy CKRecordID: %@", (uint8_t *)v16, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v17, -1, -1);
        MEMORY[0x223C45170](v16, -1, -1);

        if (v11) {
          goto LABEL_21;
        }
      }
      else
      {

        if (v11)
        {
LABEL_21:
          *(void *)(v0 + 56) = 0;
          *(void *)(v0 + 64) = 0xE000000000000000;
          id v44 = v78;
          sub_21F157300();
          swift_bridgeObjectRelease();
          sub_21F0F66AC();
          *(void *)(v0 + 376) = v45;
          uint64_t v46 = swift_allocError();
          *(void *)(v0 + 384) = v46;
          *uint64_t v47 = 35;
          uint64_t v79 = (char *)&dword_267EBEE10 + dword_267EBEE10;
          uint64_t v48 = (void *)swift_task_alloc();
          *(void *)(v0 + 392) = v48;
          void *v48 = v0;
          uint64_t v49 = sub_21F0F8368;
          goto LABEL_29;
        }
      }
      uint64_t v18 = *(void *)(v0 + 160);
      uint64_t v19 = *(void *)(v0 + 168);
      uint64_t v20 = *(void *)(v0 + 152);
      id v21 = v78;
      sub_21F14A99C(v21, v20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
      {
        sub_21F0FC154(*(void *)(v0 + 152), &qword_267EBE4F0);
        id v50 = v21;
        uint64_t v51 = sub_21F156B70();
        os_log_type_t v52 = sub_21F157120();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          unint64_t v54 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 138412290;
          *(void *)(v0 + 88) = v50;
          id v55 = v50;
          sub_21F1571F0();
          *unint64_t v54 = v78;
          sub_21F0FBDB4(v78);
          sub_21F0FBDB4(v78);
          _os_log_impl(&dword_21F0DC000, v51, v52, "Failed to decode Policy, skipping record: %@", v53, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
          swift_arrayDestroy();
          MEMORY[0x223C45170](v54, -1, -1);
          MEMORY[0x223C45170](v53, -1, -1);
        }
        else
        {
          sub_21F0FBDB4(v78);
          sub_21F0FBDB4(v78);
        }

        *(void *)(v0 + 40) = 0;
        *(void *)(v0 + 48) = 0xE000000000000000;
        sub_21F157300();
        swift_bridgeObjectRelease();
        sub_21F0F66AC();
        *(void *)(v0 + 400) = v68;
        uint64_t v46 = swift_allocError();
        *(void *)(v0 + 408) = v46;
        *uint64_t v69 = 46;
        uint64_t v79 = (char *)&dword_267EBEE10 + dword_267EBEE10;
        uint64_t v48 = (void *)swift_task_alloc();
        *(void *)(v0 + 416) = v48;
        void *v48 = v0;
        uint64_t v49 = sub_21F0F8FF0;
LABEL_29:
        v48[1] = v49;
        char v84 = 1;
        uint64_t v83 = v46;
        __asm { BR              X8 }
      }
      uint64_t v23 = *(void *)(v0 + 192);
      uint64_t v22 = *(void *)(v0 + 200);
      uint64_t v24 = *(void *)(v0 + 184);
      sub_21F0FBFB8(*(void *)(v0 + 152), v22, type metadata accessor for CKPolicyRecord);
      sub_21F0FBE78(v22, v23, type metadata accessor for CKPolicyRecord);
      sub_21F0FBE78(v22, v24, type metadata accessor for CKPolicyRecord);
      id v25 = sub_21F156B70();
      os_log_type_t v26 = sub_21F157110();
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v29 = *(void *)(v0 + 184);
      uint64_t v28 = *(void *)(v0 + 192);
      if (v27)
      {
        uint64_t v30 = *(void *)(v0 + 160);
        uint64_t v74 = v30;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        unint64_t v76 = v7;
        uint64_t v80 = v75;
        *(_DWORD *)uint64_t v31 = 136315394;
        uint64_t v32 = (uint64_t *)(v28 + *(int *)(v30 + 44));
        uint64_t v33 = *v32;
        unint64_t v34 = v32[1];
        swift_bridgeObjectRetain();
        *(void *)(v0 + 96) = sub_21F103FD0(v33, v34, &v80);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        sub_21F0FBE18(v28, type metadata accessor for CKPolicyRecord);
        *(_WORD *)(v31 + 12) = 2080;
        uint64_t v35 = (uint64_t *)(v29 + *(int *)(v74 + 52));
        uint64_t v36 = *v35;
        unint64_t v37 = v35[1];
        swift_bridgeObjectRetain();
        uint64_t v38 = v36;
        unint64_t v7 = v76;
        *(void *)(v0 + 104) = sub_21F103FD0(v38, v37, &v80);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        sub_21F0FBE18(v29, type metadata accessor for CKPolicyRecord);
        _os_log_impl(&dword_21F0DC000, v25, v26, "fetched CK policy record with plugin_id: %s, and recipe_id: %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v75, -1, -1);
        MEMORY[0x223C45170](v31, -1, -1);
      }
      else
      {
        sub_21F0FBE18(*(void *)(v0 + 192), type metadata accessor for CKPolicyRecord);
        sub_21F0FBE18(v29, type metadata accessor for CKPolicyRecord);
      }

      sub_21F0FBE78(*(void *)(v0 + 200), *(void *)(v0 + 176), type metadata accessor for CKPolicyRecord);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v7 = sub_21F1036B8(0, *(void *)(v7 + 16) + 1, 1, v7);
      }
      unint64_t v40 = *(void *)(v7 + 16);
      unint64_t v39 = *(void *)(v7 + 24);
      if (v40 >= v39 >> 1) {
        unint64_t v7 = sub_21F1036B8(v39 > 1, v40 + 1, 1, v7);
      }
      uint64_t v41 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 168);
      uint64_t v42 = *(void *)(v0 + 176);
      *(void *)(v7 + 16) = v40 + 1;
      sub_21F0FBFB8(v42, v7+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v40, type metadata accessor for CKPolicyRecord);
      sub_21F0FBDB4(v78);
      sub_21F0FBDB4(v78);

      sub_21F0FBE18(v41, type metadata accessor for CKPolicyRecord);
      uint64_t v6 = *(void *)(v0 + 344) + 1;
      if (v6 == *(void *)(v0 + 336)) {
        goto LABEL_24;
      }
    }
  }
  unint64_t v7 = MEMORY[0x263F8EE78];
LABEL_24:
  uint64_t v57 = *(void **)(v0 + 272);
  uint64_t v56 = *(void **)(v0 + 280);
  uint64_t v58 = *(void **)(v0 + 256);
  unint64_t v59 = *(void **)(v0 + 264);
  uint64_t v60 = *(void **)(v0 + 248);
  id v70 = *(void **)(v0 + 240);
  uint64_t v71 = *(void **)(v0 + 232);
  uint64_t v72 = *(void **)(v0 + 224);
  uint64_t v73 = *(void **)(v0 + 216);
  unint64_t v61 = *(uint64_t **)(v0 + 120);
  swift_bridgeObjectRelease();
  uint64_t v80 = v7;
  sub_21F1045C0();
  uint64_t v62 = v80;
  uint64_t v63 = type metadata accessor for CKPolicy();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = v62;
  *(void *)(v64 + 24) = 0;
  v61[3] = v63;
  v61[4] = sub_21F0FBF70(&qword_267EBE518, v65, (void (*)(uint64_t))type metadata accessor for CKPolicy);

  *unint64_t v61 = v64;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v66 = *(uint64_t (**)(void))(v0 + 8);
  return v66();
}

uint64_t sub_21F0F8264()
{
  os_log_type_t v2 = *(void **)(v0 + 272);
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v3 = *(void **)(v0 + 256);
  uint64_t v4 = *(void **)(v0 + 264);
  uint64_t v5 = *(void **)(v0 + 240);
  uint64_t v6 = *(void **)(v0 + 248);
  unint64_t v7 = *(void **)(v0 + 224);
  uint64_t v8 = *(void **)(v0 + 232);
  id v11 = *(id *)(v0 + 296);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_21F0F8368()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 384);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F0F849C, 0, 0);
}

uint64_t sub_21F0F849C()
{
  uint64_t v88 = v0;
  uint64_t v1 = *(void **)(v0 + 368);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_21F156B70();
  os_log_type_t v5 = sub_21F157120();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 368);
    char v84 = *(void **)(v0 + 360);
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v87 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_21F157690();
    *(void *)(v0 + 72) = sub_21F103FD0(v9, v10, &v87);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    sub_21F0FBDB4(v6);
    sub_21F0FBDB4(v6);
    _os_log_impl(&dword_21F0DC000, v4, v5, "Error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v8, -1, -1);
    MEMORY[0x223C45170](v7, -1, -1);

    sub_21F0FBDB4(v6);
    sub_21F0FBDB4(v6);
  }
  else
  {
    id v11 = *(void **)(v0 + 368);

    sub_21F0FBDB4(v11);
    sub_21F0FBDB4(v11);

    sub_21F0FBDB4(v11);
  }
  unint64_t v12 = *(void *)(v0 + 352);
  for (uint64_t i = *(void *)(v0 + 344) + 1; i != *(void *)(v0 + 336); uint64_t i = *(void *)(v0 + 344) + 1)
  {
    *(void *)(v0 + 344) = i;
    *(void *)(v0 + 352) = v12;
    uint64_t v26 = *(void *)(v0 + 312) + 24 * i;
    BOOL v27 = *(void **)(v26 + 32);
    *(void *)(v0 + 360) = v27;
    uint64_t v28 = *(void **)(v26 + 40);
    *(void *)(v0 + 368) = v28;
    char v29 = *(unsigned char *)(v26 + 48);
    id v30 = v27;
    unint64_t v85 = v28;
    sub_21F0FBDA8(v28);
    uint64_t v31 = sub_21F156B70();
    os_log_type_t v32 = sub_21F157110();
    uint64_t v83 = v30;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = v30;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138412290;
      *(void *)(v34 + 4) = v33;
      *uint64_t v35 = v33;

      _os_log_impl(&dword_21F0DC000, v31, v32, "Policy CKRecordID: %@", (uint8_t *)v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v35, -1, -1);
      MEMORY[0x223C45170](v34, -1, -1);

      if (v29) {
        goto LABEL_22;
      }
    }
    else
    {

      if (v29)
      {
LABEL_22:
        *(void *)(v0 + 56) = 0;
        *(void *)(v0 + 64) = 0xE000000000000000;
        id v62 = v85;
        sub_21F157300();
        swift_bridgeObjectRelease();
        sub_21F0F66AC();
        *(void *)(v0 + 376) = v63;
        uint64_t v64 = swift_allocError();
        *(void *)(v0 + 384) = v64;
        *uint64_t v65 = 35;
        unint64_t v86 = (char *)&dword_267EBEE10 + dword_267EBEE10;
        id v66 = (void *)swift_task_alloc();
        *(void *)(v0 + 392) = v66;
        *id v66 = v0;
        id v67 = sub_21F0F8368;
        goto LABEL_27;
      }
    }
    uint64_t v36 = *(void *)(v0 + 160);
    uint64_t v37 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 152);
    id v39 = v85;
    sub_21F14A99C(v39, v38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) == 1)
    {
      sub_21F0FC154(*(void *)(v0 + 152), &qword_267EBE4F0);
      id v68 = v39;
      uint64_t v69 = sub_21F156B70();
      os_log_type_t v70 = sub_21F157120();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        uint64_t v72 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 138412290;
        *(void *)(v0 + 88) = v68;
        id v73 = v68;
        sub_21F1571F0();
        *uint64_t v72 = v85;
        sub_21F0FBDB4(v85);
        sub_21F0FBDB4(v85);
        _os_log_impl(&dword_21F0DC000, v69, v70, "Failed to decode Policy, skipping record: %@", v71, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v72, -1, -1);
        MEMORY[0x223C45170](v71, -1, -1);
      }
      else
      {
        sub_21F0FBDB4(v85);
        sub_21F0FBDB4(v85);
      }

      *(void *)(v0 + 40) = 0;
      *(void *)(v0 + 48) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      sub_21F0F66AC();
      *(void *)(v0 + 400) = v74;
      uint64_t v64 = swift_allocError();
      *(void *)(v0 + 408) = v64;
      unsigned char *v75 = 46;
      unint64_t v86 = (char *)&dword_267EBEE10 + dword_267EBEE10;
      id v66 = (void *)swift_task_alloc();
      *(void *)(v0 + 416) = v66;
      *id v66 = v0;
      id v67 = sub_21F0F8FF0;
LABEL_27:
      v66[1] = v67;
      char v91 = 1;
      uint64_t v90 = v64;
      __asm { BR              X8 }
    }
    uint64_t v41 = *(void *)(v0 + 192);
    uint64_t v40 = *(void *)(v0 + 200);
    uint64_t v42 = *(void *)(v0 + 184);
    sub_21F0FBFB8(*(void *)(v0 + 152), v40, type metadata accessor for CKPolicyRecord);
    sub_21F0FBE78(v40, v41, type metadata accessor for CKPolicyRecord);
    sub_21F0FBE78(v40, v42, type metadata accessor for CKPolicyRecord);
    uint64_t v43 = sub_21F156B70();
    os_log_type_t v44 = sub_21F157110();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v47 = *(void *)(v0 + 184);
    uint64_t v46 = *(void *)(v0 + 192);
    if (v45)
    {
      uint64_t v48 = *(void *)(v0 + 160);
      uint64_t v80 = v48;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      unint64_t v82 = v12;
      uint64_t v87 = v81;
      *(_DWORD *)uint64_t v49 = 136315394;
      id v50 = (uint64_t *)(v46 + *(int *)(v48 + 44));
      uint64_t v51 = *v50;
      unint64_t v52 = v50[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 96) = sub_21F103FD0(v51, v52, &v87);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F0FBE18(v46, type metadata accessor for CKPolicyRecord);
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v53 = (uint64_t *)(v47 + *(int *)(v80 + 52));
      uint64_t v54 = *v53;
      unint64_t v55 = v53[1];
      swift_bridgeObjectRetain();
      uint64_t v56 = v54;
      unint64_t v12 = v82;
      *(void *)(v0 + 104) = sub_21F103FD0(v56, v55, &v87);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F0FBE18(v47, type metadata accessor for CKPolicyRecord);
      _os_log_impl(&dword_21F0DC000, v43, v44, "fetched CK policy record with plugin_id: %s, and recipe_id: %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v81, -1, -1);
      MEMORY[0x223C45170](v49, -1, -1);
    }
    else
    {
      sub_21F0FBE18(*(void *)(v0 + 192), type metadata accessor for CKPolicyRecord);
      sub_21F0FBE18(v47, type metadata accessor for CKPolicyRecord);
    }

    sub_21F0FBE78(*(void *)(v0 + 200), *(void *)(v0 + 176), type metadata accessor for CKPolicyRecord);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_21F1036B8(0, *(void *)(v12 + 16) + 1, 1, v12);
    }
    unint64_t v58 = *(void *)(v12 + 16);
    unint64_t v57 = *(void *)(v12 + 24);
    if (v58 >= v57 >> 1) {
      unint64_t v12 = sub_21F1036B8(v57 > 1, v58 + 1, 1, v12);
    }
    uint64_t v59 = *(void *)(v0 + 200);
    uint64_t v61 = *(void *)(v0 + 168);
    uint64_t v60 = *(void *)(v0 + 176);
    *(void *)(v12 + 16) = v58 + 1;
    sub_21F0FBFB8(v60, v12+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v58, type metadata accessor for CKPolicyRecord);
    sub_21F0FBDB4(v85);
    sub_21F0FBDB4(v85);

    sub_21F0FBE18(v59, type metadata accessor for CKPolicyRecord);
  }
  uint64_t v15 = *(void **)(v0 + 272);
  os_log_type_t v14 = *(void **)(v0 + 280);
  uint64_t v16 = *(void **)(v0 + 256);
  uint64_t v17 = *(void **)(v0 + 264);
  uint64_t v18 = *(void **)(v0 + 248);
  unint64_t v76 = *(void **)(v0 + 240);
  uint64_t v77 = *(void **)(v0 + 232);
  uint64_t v78 = *(void **)(v0 + 224);
  uint64_t v79 = *(void **)(v0 + 216);
  uint64_t v19 = *(uint64_t **)(v0 + 120);
  swift_bridgeObjectRelease();
  uint64_t v87 = v12;
  sub_21F1045C0();
  uint64_t v20 = v87;
  uint64_t v21 = type metadata accessor for CKPolicy();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v20;
  *(void *)(v22 + 24) = 0;
  v19[3] = v21;
  v19[4] = sub_21F0FBF70(&qword_267EBE518, v23, (void (*)(uint64_t))type metadata accessor for CKPolicy);

  *uint64_t v19 = v22;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_21F0F8FF0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 408);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F0F9124, 0, 0);
}

uint64_t sub_21F0F9124()
{
  uint64_t v78 = v0;
  uint64_t v1 = (void *)v0[45];
  id v2 = (void *)v0[46];
  sub_21F0FBDB4(v2);
  sub_21F0FBDB4(v2);

  unint64_t v3 = v0[44];
  for (uint64_t i = v0[43] + 1; i != v0[42]; uint64_t i = v0[43] + 1)
  {
    v0[43] = i;
    v0[44] = v3;
    uint64_t v17 = v0[39] + 24 * i;
    uint64_t v18 = *(void **)(v17 + 32);
    v0[45] = v18;
    uint64_t v19 = *(void **)(v17 + 40);
    v0[46] = v19;
    char v20 = *(unsigned char *)(v17 + 48);
    id v21 = v18;
    uint64_t v75 = v19;
    sub_21F0FBDA8(v19);
    uint64_t v22 = sub_21F156B70();
    os_log_type_t v23 = sub_21F157110();
    uint64_t v74 = v21;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = v21;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412290;
      *(void *)(v25 + 4) = v24;
      *uint64_t v26 = v24;

      _os_log_impl(&dword_21F0DC000, v22, v23, "Policy CKRecordID: %@", (uint8_t *)v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v26, -1, -1);
      MEMORY[0x223C45170](v25, -1, -1);

      if (v20) {
        goto LABEL_19;
      }
    }
    else
    {

      if (v20)
      {
LABEL_19:
        v0[7] = 0;
        v0[8] = 0xE000000000000000;
        id v53 = v75;
        sub_21F157300();
        swift_bridgeObjectRelease();
        sub_21F0F66AC();
        v0[47] = v54;
        uint64_t v55 = swift_allocError();
        v0[48] = v55;
        *uint64_t v56 = 35;
        unint64_t v76 = (char *)&dword_267EBEE10 + dword_267EBEE10;
        unint64_t v57 = (void *)swift_task_alloc();
        v0[49] = v57;
        *unint64_t v57 = v0;
        unint64_t v58 = sub_21F0F8368;
        goto LABEL_24;
      }
    }
    uint64_t v27 = v0[20];
    uint64_t v28 = v0[21];
    uint64_t v29 = v0[19];
    id v30 = v75;
    sub_21F14A99C(v30, v29);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) == 1)
    {
      sub_21F0FC154(v0[19], &qword_267EBE4F0);
      id v59 = v30;
      uint64_t v60 = sub_21F156B70();
      os_log_type_t v61 = sub_21F157120();
      if (os_log_type_enabled(v60, v61))
      {
        id v62 = (uint8_t *)swift_slowAlloc();
        uint64_t v63 = (void *)swift_slowAlloc();
        *(_DWORD *)id v62 = 138412290;
        v0[11] = v59;
        id v64 = v59;
        sub_21F1571F0();
        *uint64_t v63 = v75;
        sub_21F0FBDB4(v75);
        sub_21F0FBDB4(v75);
        _os_log_impl(&dword_21F0DC000, v60, v61, "Failed to decode Policy, skipping record: %@", v62, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v63, -1, -1);
        MEMORY[0x223C45170](v62, -1, -1);
      }
      else
      {
        sub_21F0FBDB4(v75);
        sub_21F0FBDB4(v75);
      }

      v0[5] = 0;
      v0[6] = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      sub_21F0F66AC();
      v0[50] = v65;
      uint64_t v55 = swift_allocError();
      v0[51] = v55;
      *id v66 = 46;
      unint64_t v76 = (char *)&dword_267EBEE10 + dword_267EBEE10;
      unint64_t v57 = (void *)swift_task_alloc();
      v0[52] = v57;
      *unint64_t v57 = v0;
      unint64_t v58 = sub_21F0F8FF0;
LABEL_24:
      v57[1] = v58;
      char v81 = 1;
      uint64_t v80 = v55;
      __asm { BR              X8 }
    }
    uint64_t v32 = v0[24];
    uint64_t v31 = v0[25];
    uint64_t v33 = v0[23];
    sub_21F0FBFB8(v0[19], v31, type metadata accessor for CKPolicyRecord);
    sub_21F0FBE78(v31, v32, type metadata accessor for CKPolicyRecord);
    sub_21F0FBE78(v31, v33, type metadata accessor for CKPolicyRecord);
    uint64_t v34 = sub_21F156B70();
    os_log_type_t v35 = sub_21F157110();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v38 = v0[23];
    uint64_t v37 = v0[24];
    if (v36)
    {
      uint64_t v39 = v0[20];
      uint64_t v71 = v39;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      unint64_t v73 = v3;
      uint64_t v77 = v72;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v41 = (uint64_t *)(v37 + *(int *)(v39 + 44));
      uint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      swift_bridgeObjectRetain();
      v0[12] = sub_21F103FD0(v42, v43, &v77);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F0FBE18(v37, type metadata accessor for CKPolicyRecord);
      *(_WORD *)(v40 + 12) = 2080;
      os_log_type_t v44 = (uint64_t *)(v38 + *(int *)(v71 + 52));
      uint64_t v45 = *v44;
      unint64_t v46 = v44[1];
      swift_bridgeObjectRetain();
      uint64_t v47 = v45;
      unint64_t v3 = v73;
      v0[13] = sub_21F103FD0(v47, v46, &v77);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F0FBE18(v38, type metadata accessor for CKPolicyRecord);
      _os_log_impl(&dword_21F0DC000, v34, v35, "fetched CK policy record with plugin_id: %s, and recipe_id: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v72, -1, -1);
      MEMORY[0x223C45170](v40, -1, -1);
    }
    else
    {
      sub_21F0FBE18(v0[24], type metadata accessor for CKPolicyRecord);
      sub_21F0FBE18(v38, type metadata accessor for CKPolicyRecord);
    }

    sub_21F0FBE78(v0[25], v0[22], type metadata accessor for CKPolicyRecord);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v3 = sub_21F1036B8(0, *(void *)(v3 + 16) + 1, 1, v3);
    }
    unint64_t v49 = *(void *)(v3 + 16);
    unint64_t v48 = *(void *)(v3 + 24);
    if (v49 >= v48 >> 1) {
      unint64_t v3 = sub_21F1036B8(v48 > 1, v49 + 1, 1, v3);
    }
    uint64_t v50 = v0[25];
    uint64_t v52 = v0[21];
    uint64_t v51 = v0[22];
    *(void *)(v3 + 16) = v49 + 1;
    sub_21F0FBFB8(v51, v3+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v49, type metadata accessor for CKPolicyRecord);
    sub_21F0FBDB4(v75);
    sub_21F0FBDB4(v75);

    sub_21F0FBE18(v50, type metadata accessor for CKPolicyRecord);
  }
  uint64_t v6 = (void *)v0[34];
  os_log_type_t v5 = (void *)v0[35];
  unint64_t v7 = (void *)v0[32];
  uint64_t v8 = (void *)v0[33];
  uint64_t v9 = (void *)v0[31];
  id v67 = (void *)v0[30];
  id v68 = (void *)v0[29];
  uint64_t v69 = (void *)v0[28];
  os_log_type_t v70 = (void *)v0[27];
  unint64_t v10 = (uint64_t *)v0[15];
  swift_bridgeObjectRelease();
  uint64_t v77 = v3;
  sub_21F1045C0();
  uint64_t v11 = v77;
  uint64_t v12 = type metadata accessor for CKPolicy();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = 0;
  v10[3] = v12;
  v10[4] = sub_21F0FBF70(&qword_267EBE518, v14, (void (*)(uint64_t))type metadata accessor for CKPolicy);

  *unint64_t v10 = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_21F0F9AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_21F0F9B18, 0, 0);
}

uint64_t sub_21F0F9B18()
{
  uint64_t v1 = *(void *)(v0[4] + 152);
  uint64_t v2 = *MEMORY[0x263EFD4D8];
  unint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_21F0F9BD8;
  uint64_t v4 = v0[3];
  return MEMORY[0x270EE35F8](v4, v1, 0, v2);
}

uint64_t sub_21F0F9BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_21F0F9CE8(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  type metadata accessor for PFLTaskPreferences(0);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4C0);
  v3[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CKPayloadRecord(0);
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F0F9E34, 0, 0);
}

uint64_t sub_21F0F9E34()
{
  uint64_t v25 = v0;
  v24[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  unint64_t v6 = v5;
  v0[20] = v4;
  v0[21] = v5;
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_21F156B90();
  v0[22] = __swift_project_value_buffer(v7, (uint64_t)qword_267EBEF18);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_21F156B70();
  os_log_type_t v9 = sub_21F157110();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v23 = v4;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v24[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    v0[11] = sub_21F103FD0(v23, v6, v24);
    sub_21F1571F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F0DC000, v8, v9, "Querying Payload for recipe: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v11, -1, -1);
    MEMORY[0x223C45170](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0[14];
  sub_21F0FBF34(0, (unint64_t *)&qword_267EBE4C8);
  uint64_t v13 = *(void **)(v12 + 152);
  swift_bridgeObjectRetain();
  id v14 = v13;
  uint64_t v15 = (void *)sub_21F1570A0();
  v0[23] = v15;
  v0[24] = sub_21F0FB4FC();
  uint64_t v16 = swift_allocError();
  v0[25] = v16;
  *uint64_t v17 = 41;
  uint64_t v18 = dword_267EBE748;
  swift_retain();
  id v19 = v15;
  char v20 = (void *)swift_task_alloc();
  v0[26] = v20;
  *char v20 = v0;
  v20[1] = sub_21F0FA15C;
  uint64_t v21 = v0[14];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_267EBE748 + v18))(v16, v21, (uint64_t)v19);
}

uint64_t sub_21F0FA15C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {

    swift_release();
    uint64_t v4 = sub_21F0FAC1C;
  }
  else
  {
    unint64_t v5 = *(void **)(v3 + 200);

    swift_release();
    uint64_t v4 = sub_21F0FA2D8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_21F0FA2D8()
{
  uint64_t v79 = v0;
  v78[1] = *MEMORY[0x263EF8340];
  id v1 = *(id *)(v0 + 184);
  swift_bridgeObjectRetain_n();
  id v2 = v1;
  uint64_t v3 = sub_21F156B70();
  os_log_type_t v4 = sub_21F157110();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 216);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v78[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    if (*(void *)(v6 + 16))
    {
      unint64_t v9 = sub_21F10EA40((uint64_t)*(id *)(v0 + 184));
      if (v10)
      {
        uint64_t v11 = *(void *)(*(void *)(v0 + 216) + 56) + 16 * v9;
        id v12 = *(id *)v11;
        char v13 = *(unsigned char *)(v11 + 8);
        sub_21F0FBDA8(*(id *)v11);
      }
      else
      {
        id v12 = 0;
        char v13 = -1;
      }
    }
    else
    {
      id v12 = 0;
      char v13 = -1;
    }
    uint64_t v15 = *(void **)(v0 + 184);
    *(void *)(v0 + 48) = v12;
    *(unsigned char *)(v0 + 56) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4D8);
    uint64_t v16 = sub_21F156D00();
    *(void *)(v0 + 80) = sub_21F103FD0(v16, v17, v78);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    _os_log_impl(&dword_21F0DC000, v3, v4, "fetchedPayload: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v8, -1, -1);
    MEMORY[0x223C45170](v7, -1, -1);
  }
  else
  {
    id v14 = *(void **)(v0 + 184);
    swift_bridgeObjectRelease_n();
  }
  if (!*(void *)(*(void *)(v0 + 216) + 16)) {
    goto LABEL_15;
  }
  unint64_t v18 = sub_21F10EA40((uint64_t)*(id *)(v0 + 184));
  if ((v19 & 1) == 0)
  {

LABEL_15:
    uint64_t v29 = *(void **)(v0 + 184);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_allocError();
    *uint64_t v31 = 42;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v32 = 4;
    *(void *)(v32 + 8) = v30;
    swift_willThrow();

LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = *(uint64_t (**)(void))(v0 + 8);
    return v63();
  }
  char v20 = *(void **)(v0 + 184);
  uint64_t v21 = *(void *)(*(void *)(v0 + 216) + 56) + 16 * v18;
  id v22 = *(id *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_21F0FBDA8(*(id *)v21);
  swift_bridgeObjectRelease();

  if (v23)
  {
    uint64_t v24 = *(void **)(v0 + 184);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocError();
    *uint64_t v26 = 43;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v27 = 4;
    *(void *)(v27 + 8) = v25;
    swift_willThrow();
    uint64_t v28 = v22;
LABEL_18:
    sub_21F0FBDB4(v28);

    goto LABEL_27;
  }
  uint64_t v33 = *(void *)(v0 + 136);
  uint64_t v34 = *(void *)(v0 + 144);
  uint64_t v35 = *(void *)(v0 + 128);
  sub_21F14C7DC(v22, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v33) == 1)
  {
    uint64_t v24 = *(void **)(v0 + 184);
    uint64_t v36 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    sub_21F0FC154(v36, &qword_267EBE4C0);
    uint64_t v37 = swift_allocError();
    *uint64_t v38 = 44;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v39 = 4;
    *(void *)(v39 + 8) = v37;
    swift_willThrow();
    sub_21F0FBDB4(v22);
    uint64_t v28 = v22;
    goto LABEL_18;
  }
  uint64_t v40 = *(void *)(v0 + 152);
  sub_21F0FBFB8(*(void *)(v0 + 128), v40, type metadata accessor for CKPayloadRecord);
  uint64_t v41 = self;
  uint64_t v43 = *(void *)(v40 + 16);
  unint64_t v42 = *(void *)(v40 + 24);
  sub_21F0FBDC0(v43, v42);
  os_log_type_t v44 = (void *)sub_21F156880();
  sub_21F0FB8BC(v43, v42);
  *(void *)(v0 + 64) = 0;
  id v45 = objc_msgSend(v41, sel_JSONObjectWithData_options_error_, v44, 0, v0 + 64);

  unint64_t v46 = *(void **)(v0 + 64);
  if (!v45)
  {
    id v56 = v46;
    swift_bridgeObjectRelease();
    unint64_t v57 = (void *)sub_21F1566F0();

    swift_willThrow();
LABEL_25:
    unint64_t v58 = *(void **)(v0 + 184);
    uint64_t v59 = *(void *)(v0 + 152);
    uint64_t v60 = swift_allocError();
    *os_log_type_t v61 = 45;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v62 = 4;
    *(void *)(v62 + 8) = v60;
    swift_willThrow();

    sub_21F0FBDB4(v22);
    sub_21F0FBDB4(v22);
    uint64_t v55 = v59;
    goto LABEL_26;
  }
  id v47 = v46;
  sub_21F157250();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v48 = *(void *)(v0 + 224);
  uint64_t v49 = *(void *)(v0 + 72);
  type metadata accessor for FederatedBuffer();
  swift_allocObject();
  uint64_t v50 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_21F11D6A0(v50);
  if (v48)
  {
    uint64_t v52 = *(void **)(v0 + 184);
    uint64_t v53 = *(void *)(v0 + 152);
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v54 = 4;
    *(void *)(v54 + 8) = v48;
    swift_willThrow();

    sub_21F0FBDB4(v22);
    sub_21F0FBDB4(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = v53;
LABEL_26:
    sub_21F0FBE18(v55, type metadata accessor for CKPayloadRecord);
    goto LABEL_27;
  }
  uint64_t v65 = v51;
  uint64_t v66 = *(void *)(v0 + 152);
  uint64_t v67 = *(void *)(v0 + 136);
  type metadata accessor for PFLTaskStorage();
  swift_allocObject();
  sub_21F142274();
  sub_21F142CE8((void *)(v66 + *(int *)(v67 + 24)));
  id v68 = *(void **)(v0 + 184);
  uint64_t v69 = *(void *)(v0 + 168);
  uint64_t v71 = v70;
  uint64_t v76 = *(void *)(v0 + 160);
  uint64_t v77 = *(void *)(v0 + 152);
  uint64_t v72 = *(void *)(v0 + 120);
  sub_21F0FBE78(*(void *)(v0 + 104), v72, type metadata accessor for PFLTaskPreferences);
  type metadata accessor for PFLTask();
  unint64_t v73 = v68;
  uint64_t v74 = (void *)swift_allocObject();
  v74[5] = v71;
  v74[6] = 0;
  v74[2] = v76;
  v74[3] = v69;
  v74[4] = v49;
  sub_21F0FBFB8(v72, (uint64_t)v74 + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences, type metadata accessor for PFLTaskPreferences);
  v74[6] = v65;

  swift_release();
  sub_21F0FBDB4(v22);
  sub_21F0FBDB4(v22);
  swift_release();
  sub_21F0FBE18(v77, type metadata accessor for CKPayloadRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v75 = *(uint64_t (**)(void *))(v0 + 8);
  return v75(v74);
}

uint64_t sub_21F0FAC1C()
{
  uint64_t v1 = *(void *)(v0 + 224);
  id v2 = *(void **)(v0 + 184);

  sub_21F0FBD54();
  swift_allocError();
  *(unsigned char *)uint64_t v3 = 4;
  *(void *)(v3 + 8) = v1;
  swift_willThrow();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_21F0FAD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_21F0FAD44, 0, 0);
}

uint64_t sub_21F0FAD44()
{
  uint64_t v1 = (void *)v0[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4E8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_21F159860;
  *(void *)(v2 + 32) = v1;
  uint64_t v6 = v2;
  sub_21F156F00();
  v0[5] = v6;
  id v3 = v1;
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_21F0FAE38;
  return MEMORY[0x270EE35F0](v6, 0);
}

uint64_t sub_21F0FAE38(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    BOOL v5 = sub_21F0FAF8C;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 64) = a1;
    BOOL v5 = sub_21F0FAF68;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_21F0FAF68()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F0FAF8C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21F0FAFF0()
{
  sub_21F0FC0C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_21F0FB064()
{
  sub_21F0FAFF0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLCKTaskDownloader()
{
  return self;
}

uint64_t sub_21F0FB0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_21F0FB170;
  return sub_21F0F709C(a1, a2, a3);
}

uint64_t sub_21F0FB170()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21F0FB264()
{
  return sub_21F0F66AC();
}

uint64_t sub_21F0FB288(uint64_t a1, uint64_t a2)
{
  BOOL v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *BOOL v5 = v2;
  v5[1] = sub_21F0FB330;
  return sub_21F0F9CE8(a1, a2);
}

uint64_t sub_21F0FB330(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  BOOL v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_21F0FB430(uint64_t a1, uint64_t a2)
{
  return sub_21F0FBF70(&qword_267EBE478, a2, (void (*)(uint64_t))type metadata accessor for CKPolicy);
}

uint64_t sub_21F0FB478(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_21F0FBF70(&qword_267EBE478, a2, (void (*)(uint64_t))type metadata accessor for CKPolicy);
  uint64_t result = sub_21F0FBF70(&qword_267EBE480, v3, (void (*)(uint64_t))type metadata accessor for CKPolicy);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_21F0FB4FC()
{
  unint64_t result = qword_267EBE488;
  if (!qword_267EBE488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE488);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21F0FB5B4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21F0FB5CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_21F0ED61C((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F0FB620@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_21F0ED61C(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  char v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_21F0FB914((uint64_t)&v23, (uint64_t)v22, &qword_267EBE4B0);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_21F0FC154((uint64_t)v21, &qword_267EBE4B8);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_21F0FB80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270F9D6B0](a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return MEMORY[0x270F9D6B0](a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return MEMORY[0x270F9D6B0](a1, a2);
}

unint64_t sub_21F0FB854()
{
  unint64_t result = qword_267EBE4A8;
  if (!qword_267EBE4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE4A8);
  }
  return result;
}

uint64_t sub_21F0FB8A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_21F0FB8BC(a1, a2);
  }
  return a1;
}

uint64_t sub_21F0FB8BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_21F0FB914(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F0FB978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 80) != 255) {
    sub_21F0FB9E0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_21F0FB9E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F0FB9EC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_21F0FBA04();
  }
  return result;
}

uint64_t sub_21F0FBA04()
{
  return swift_bridgeObjectRetain();
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

id sub_21F0FBA54(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  if (v2 < 4) {
    goto LABEL_7;
  }
  if (v2 == 4)
  {
    sub_21F0FC0C4(*a1, 4uLL);
    sub_21F0FC0C4(0, 4uLL);
LABEL_8:
    uint64_t v3 = 1;
    goto LABEL_9;
  }
  if (v2 != 5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_7:
    sub_21F0FC0C4(v1, v2);
    sub_21F0FC0C4(0, 4uLL);
    sub_21F0FC10C(v1, v2);
    sub_21F0FC0C4(v1, v2);
    sub_21F0FC0C4(0, 5uLL);
    goto LABEL_8;
  }
  sub_21F0FC0C4(*a1, 5uLL);
  sub_21F0FC0C4(0, 4uLL);
  sub_21F0FC0C4(v1, 5uLL);
  sub_21F0FC0C4(v1, 5uLL);
  uint64_t v3 = 2;
LABEL_9:
  id v4 = objc_allocWithZone(MEMORY[0x263EFD620]);
  uint64_t v5 = (void *)sub_21F156C90();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithContainerIdentifier_environment_, v5, v3);

  return v6;
}

uint64_t sub_21F0FBC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_21F0FBF34(0, &qword_267EBE4F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE500);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F1596F0;
  *(void *)(v12 + 56) = MEMORY[0x263F8D310];
  *(void *)(v12 + 64) = sub_21F0FBEE0();
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_21F1596F0;
  *(void *)(v13 + 32) = a5;
  *(void *)(v13 + 40) = a6;
  *(void *)(v13 + 48) = a3;
  *(void *)(v13 + 56) = a4;
  *(void *)(v12 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
  *(void *)(v12 + 104) = sub_21F0FC020();
  *(void *)(v12 + 72) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_21F1570B0();
}

unint64_t sub_21F0FBD54()
{
  unint64_t result = qword_267EBE4D0;
  if (!qword_267EBE4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE4D0);
  }
  return result;
}

id sub_21F0FBDA8(id a1)
{
  return a1;
}

void sub_21F0FBDB4(id a1)
{
}

uint64_t sub_21F0FBDC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_21F0FBE18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F0FBE78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_21F0FBEE0()
{
  unint64_t result = qword_267EBE508;
  if (!qword_267EBE508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE508);
  }
  return result;
}

uint64_t sub_21F0FBF34(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_21F0FBF70(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F0FBFB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_21F0FC020()
{
  unint64_t result = qword_267EBE530;
  if (!qword_267EBE530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE530);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_21F0FC0C4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F0FC10C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 6)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F0FC154(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_21F0FC1B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE658);
  uint64_t v2 = sub_21F157450();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F106A70(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_21F10E9C8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_21F0ED188(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F0FC2DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5E0);
  uint64_t v2 = (void *)sub_21F157450();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F10E9C8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F0FC400(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5D8);
  uint64_t v2 = (void *)sub_21F157450();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F10E9C8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F0FC514(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE648);
  uint64_t v2 = (void *)sub_21F157450();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_21F10E9C8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F0FC630(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5F8);
  uint64_t v2 = (void *)sub_21F157450();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = *(_OWORD *)(a1 + 176);
  long long v43 = *(_OWORD *)(a1 + 160);
  long long v44 = v4;
  long long v45 = *(_OWORD *)(a1 + 192);
  uint64_t v46 = *(void *)(a1 + 208);
  long long v5 = *(_OWORD *)(a1 + 112);
  long long v39 = *(_OWORD *)(a1 + 96);
  long long v40 = v5;
  long long v6 = *(_OWORD *)(a1 + 144);
  long long v41 = *(_OWORD *)(a1 + 128);
  long long v42 = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  long long v35 = *(_OWORD *)(a1 + 32);
  long long v36 = v7;
  long long v8 = *(_OWORD *)(a1 + 80);
  long long v37 = *(_OWORD *)(a1 + 64);
  long long v38 = v8;
  uint64_t v10 = *((void *)&v35 + 1);
  uint64_t v9 = v35;
  sub_21F106734((uint64_t)&v35);
  unint64_t result = sub_21F10E9C8(v9, v10);
  if (v12)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v13 = 216;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v14 = v9;
    v14[1] = v10;
    uint64_t v15 = v2[7] + 168 * result;
    long long v16 = v36;
    long long v17 = v38;
    *(_OWORD *)(v15 + 16) = v37;
    *(_OWORD *)(v15 + 32) = v17;
    *(_OWORD *)uint64_t v15 = v16;
    long long v18 = v39;
    long long v19 = v40;
    long long v20 = v42;
    *(_OWORD *)(v15 + 80) = v41;
    *(_OWORD *)(v15 + 96) = v20;
    *(_OWORD *)(v15 + 48) = v18;
    *(_OWORD *)(v15 + 64) = v19;
    long long v21 = v43;
    long long v22 = v44;
    long long v23 = v45;
    *(void *)(v15 + 160) = v46;
    *(_OWORD *)(v15 + 128) = v22;
    *(_OWORD *)(v15 + 144) = v23;
    *(_OWORD *)(v15 + 112) = v21;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      break;
    }
    v2[2] = v26;
    if (!--v3) {
      goto LABEL_9;
    }
    uint64_t v27 = v13 + 184;
    uint64_t v28 = (long long *)(a1 + v13);
    long long v29 = v28[9];
    long long v43 = v28[8];
    long long v44 = v29;
    long long v45 = v28[10];
    uint64_t v46 = *((void *)v28 + 22);
    long long v30 = v28[5];
    long long v39 = v28[4];
    long long v40 = v30;
    long long v31 = v28[7];
    long long v41 = v28[6];
    long long v42 = v31;
    long long v32 = v28[1];
    long long v35 = *v28;
    long long v36 = v32;
    long long v33 = v28[3];
    long long v37 = v28[2];
    long long v38 = v33;
    uint64_t v10 = *((void *)&v35 + 1);
    uint64_t v9 = v35;
    sub_21F106734((uint64_t)&v35);
    unint64_t result = sub_21F10E9C8(v9, v10);
    uint64_t v13 = v27;
    if (v34) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_21F0FC820(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5F0);
  uint64_t v2 = (void *)sub_21F157450();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F10E9C8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F0FC93C(void (*a1)(unint64_t *__return_ptr, void *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v6 = a4;
  unint64_t v7 = a3;
  int64_t v8 = sub_21F105078(a3, a4);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8) {
    return v9;
  }
  int64_t v10 = v8;
  uint64_t v41 = MEMORY[0x263F8EE78];
  unint64_t result = sub_21F132CCC(0, v8 & ~(v8 >> 63), 0);
  if (v10 < 0) {
    goto LABEL_58;
  }
  uint64_t v12 = (v7 >> 59) & 1;
  if ((v6 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  uint64_t v14 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v14 = v7 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v37 = v14;
  uint64_t v31 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v32 = v6 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v15 = 15;
  uint64_t v33 = v13;
  unint64_t v34 = v6;
  while (1)
  {
    unint64_t v16 = v15 & 0xC;
    BOOL v17 = (v15 & 1) == 0 || v16 == v13;
    BOOL v18 = v17;
    if (v17) {
      break;
    }
    unint64_t result = v15;
    if (v15 >> 16 >= v37) {
      goto LABEL_55;
    }
LABEL_24:
    if ((v6 & 0x1000000000000000) != 0)
    {
      int v19 = sub_21F1572F0();
    }
    else
    {
      if ((v6 & 0x2000000000000000) != 0)
      {
        v38[0] = v7;
        v38[1] = v32;
      }
      else if ((v7 & 0x1000000000000000) == 0)
      {
        sub_21F157380();
      }
      int v19 = sub_21F157390();
    }
    LODWORD(v38[0]) = v19;
    uint64_t v9 = a2;
    a1(&v39, v38);
    if (v5)
    {
      swift_release();
      return v9;
    }
    uint64_t v20 = v7;
    unint64_t v21 = v39;
    uint64_t v22 = v40;
    uint64_t v9 = v41;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_21F132CCC(0, *(void *)(v9 + 16) + 1, 1);
      uint64_t v9 = v41;
    }
    unint64_t v24 = *(void *)(v9 + 16);
    unint64_t v23 = *(void *)(v9 + 24);
    if (v24 >= v23 >> 1)
    {
      unint64_t result = sub_21F132CCC(v23 > 1, v24 + 1, 1);
      uint64_t v9 = v41;
    }
    *(void *)(v9 + 16) = v24 + 1;
    uint64_t v25 = v9 + 16 * v24;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v22;
    if (v18)
    {
      uint64_t v13 = v33;
      unint64_t v6 = v34;
      unint64_t v7 = v20;
      if ((v15 & 0xC) == v33)
      {
        unint64_t result = sub_21F132C10(v15, v20, v34);
        unint64_t v15 = result;
      }
      uint64_t v5 = 0;
      if (v37 <= v15 >> 16) {
        goto LABEL_56;
      }
      if ((v15 & 1) == 0) {
        unint64_t v15 = v15 & 0xC | sub_21F1052B8(v15, v7, v34) & 0xFFFFFFFFFFFFFFF3 | 1;
      }
    }
    else
    {
      uint64_t v13 = v33;
      unint64_t v6 = v34;
      unint64_t v7 = v20;
      uint64_t v5 = 0;
      if (v37 <= v15 >> 16) {
        goto LABEL_57;
      }
    }
    if ((v6 & 0x1000000000000000) != 0)
    {
      unint64_t v15 = sub_21F156D40();
    }
    else
    {
      unint64_t v26 = v15 >> 16;
      if ((v6 & 0x2000000000000000) != 0)
      {
        unint64_t v39 = v7;
        uint64_t v40 = v32;
        int v28 = *((unsigned __int8 *)&v39 + v26);
      }
      else
      {
        uint64_t v27 = v31;
        if ((v7 & 0x1000000000000000) == 0) {
          uint64_t v27 = sub_21F157380();
        }
        int v28 = *(unsigned __int8 *)(v27 + v26);
      }
      int v29 = (char)v28;
      unsigned int v30 = __clz(v28 ^ 0xFF) - 24;
      if (v29 >= 0) {
        LOBYTE(v30) = 1;
      }
      unint64_t v15 = ((v26 + v30) << 16) | 5;
    }
    if (!--v10) {
      return v9;
    }
  }
  unint64_t result = v15;
  if (v16 == v13) {
    unint64_t result = sub_21F132C10(v15, v7, v6);
  }
  if (result >> 16 < v37)
  {
    if ((result & 1) == 0) {
      sub_21F1052B8(result, v7, v6);
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t PFLPluginError.rawValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PFLPluginError.__allocating_init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t PFLPluginError.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t PFLPluginError.__allocating_init(error:)(void *a1)
{
  uint64_t v2 = sub_21F105830();

  return v2;
}

uint64_t PFLPluginError.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PFLPluginError.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21F0FCDC0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  type metadata accessor for PFLPluginError();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_21F0FCE04@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PFLPluginConsent.rawValue.getter()
{
  return *(void *)v0;
}

PrivateFederatedLearning::PFLPluginConsent __swiftcall PFLPluginConsent.init(rawValue:)(PrivateFederatedLearning::PFLPluginConsent rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PFLPluginConsent.DNU.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static PFLPluginConsent.PrivacyBudget.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static PFLPluginConsent.Unlocked.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static PFLPluginConsent.IHA.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static PFLPluginConsent.DisallowsCellularAccess.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void *sub_21F0FCE60@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_21F0FCE6C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_21F0FCE74@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_21F0FCE88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_21F0FCE9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21F0FCEB0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_21F0FCEE0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_21F0FCF0C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_21F0FCF30(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_21F0FCF44(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_21F0FCF58(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_21F0FCF6C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21F0FCF80(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_21F0FCF94(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_21F0FCFA8(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_21F0FCFBC()
{
  return *v0 == 0;
}

uint64_t sub_21F0FCFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_21F0FCFE4(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_21F0FCFF8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

BOOL sub_21F0FD008(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21F0FD024()
{
  return sub_21F106460(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

Swift::Bool __swiftcall PFLTaskRunner.isDataAvailable()()
{
  return 1;
}

uint64_t sub_21F0FD068()
{
  return 0;
}

uint64_t PFLTaskRunner.shouldContinueAfterFailure(task:useCase:)()
{
  return 0;
}

uint64_t sub_21F0FD078(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F0FD0D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F0FD110(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  unint64_t v6 = *(void *)(v4 + 32);
  *(void *)(v4 + 24) = v2;
  *(void *)(v4 + 32) = v3;
  sub_21F1058FC(v2, v3);
  return sub_21F0FB8A8(v5, v6);
}

uint64_t sub_21F0FD180()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_21F1058FC(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t sub_21F0FD1D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F0FD230()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F0FD268(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_21F0FD2B0())()
{
  return j__swift_endAccess;
}

uint64_t PFLTaskResult.__allocating_init(json:vector:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 24) = xmmword_21F1599F0;
  *(void *)(v6 + 40) = sub_21F0FC1B0(MEMORY[0x263F8EE78]);
  *(void *)(v6 + 16) = a1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 24);
  unint64_t v8 = *(void *)(v6 + 32);
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  sub_21F0FB8A8(v7, v8);
  return v6;
}

void *PFLTaskResult.init(json:vector:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 3) = xmmword_21F1599F0;
  v3[5] = sub_21F0FC1B0(MEMORY[0x263F8EE78]);
  v3[2] = a1;
  swift_beginAccess();
  uint64_t v7 = v3[3];
  unint64_t v8 = v3[4];
  v3[3] = a2;
  v3[4] = a3;
  sub_21F0FB8A8(v7, v8);
  return v3;
}

uint64_t sub_21F0FD43C(unint64_t a1, unint64_t a2)
{
  unint64_t v87 = a1;
  uint64_t v3 = sub_21F156720();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  uint64_t v91 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_21F156820();
  uint64_t v89 = *(void *)(v92 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v92);
  char v81 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v80 = (char *)v75 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v82 = (char *)v75 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)v75 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v93 = (uint64_t)v75 - v16;
  uint64_t v17 = sub_21F156640();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  unint64_t v24 = (char *)v75 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v26 = (char *)v75 - v25;
  sub_21F156610();
  sub_21F156600();
  sub_21F156620();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v21, v17);
  v27(v24, v17);
  int v95 = v26;
  swift_bridgeObjectRetain();
  int v28 = v88;
  unint64_t v29 = sub_21F0FC93C((void (*)(unint64_t *__return_ptr, void *))sub_21F106958, (uint64_t)v94, v87, a2);
  uint64_t v88 = v28;
  swift_bridgeObjectRelease();
  unint64_t v98 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE628);
  sub_21F106978();
  uint64_t v30 = sub_21F156E80();
  uint64_t v32 = v31;
  v27(v26, v17);
  sub_21F156780();
  unint64_t v98 = v30;
  uint64_t v99 = v32;
  uint64_t v33 = *MEMORY[0x263F06E30];
  uint64_t v35 = v90;
  uint64_t v34 = v91;
  long long v36 = (void *)(v91 + 104);
  char v84 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 104);
  v84(v6, v33, v90);
  unint64_t v87 = sub_21F0FB854();
  sub_21F156810();
  uint64_t v38 = v34 + 8;
  unint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  unint64_t v39 = v6;
  uint64_t v91 = v38;
  unint64_t v85 = v37;
  v37(v6, v35);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v89 + 8);
  v40(v15, v92);
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(self, sel_defaultManager);
  sub_21F1567C0();
  long long v42 = (void *)sub_21F156C90();
  swift_bridgeObjectRelease();
  LOBYTE(v30) = objc_msgSend(v41, sel_fileExistsAtPath_, v42);

  if (v30)
  {
    uint64_t v83 = v40;
    long long v43 = v88;
  }
  else
  {
    long long v44 = v88;
    sub_21F0FDD80();
    long long v43 = v44;
    if (v44)
    {
      sub_21F0FE22C(v44, v93, "Failed to create folder at %s, error: %@");
      swift_willThrow();
      return ((uint64_t (*)(uint64_t, uint64_t))v40)(v93, v92);
    }
    uint64_t v83 = v40;
  }
  uint64_t v45 = v86;
  swift_beginAccess();
  unint64_t v46 = *(void *)(v45 + 32);
  uint64_t v47 = *MEMORY[0x263F06E38];
  uint64_t v48 = v90;
  if (v46 >> 60 == 15)
  {
    uint64_t v49 = v84;
  }
  else
  {
    uint64_t v50 = *(void *)(v45 + 24);
    strcpy((char *)v97, "results.bin");
    HIDWORD(v97[1]) = -352321536;
    uint64_t v51 = v39;
    uint64_t v52 = v39;
    unsigned int v53 = v47;
    ((void (*)(char *))v84)(v51);
    sub_21F0FBDC0(v50, v46);
    uint64_t v88 = v36;
    uint64_t v54 = (uint64_t)v82;
    sub_21F156810();
    uint64_t v55 = v48;
    uint64_t v56 = v50;
    unint64_t v57 = v46;
    v85(v52, v55);
    swift_bridgeObjectRelease();
    sub_21F1568A0();
    if (v43)
    {
      sub_21F0FE22C(v43, v54, "Failed to store PFL result (gradients) at %s, error: %@");
      swift_willThrow();
      sub_21F0FB8A8(v56, v46);
      uint64_t v58 = v54;
LABEL_18:
      uint64_t v40 = v83;
      v83((char *)v58, v92);
      return ((uint64_t (*)(uint64_t, uint64_t))v40)(v93, v92);
    }
    uint64_t v59 = v86;
    uint64_t v78 = v52;
    uint64_t v79 = v56;
    unsigned int v77 = v53;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_21F156B90();
    __swift_project_value_buffer(v60, (uint64_t)qword_267EBEF18);
    os_log_type_t v61 = v80;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v80, v82, v92);
    uint64_t v62 = sub_21F156B70();
    os_log_type_t v63 = sub_21F157110();
    id v64 = v62;
    LODWORD(v89) = v63;
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v97[0] = v76;
      *(_DWORD *)uint64_t v65 = 136315138;
      v75[1] = v65 + 4;
      uint64_t v66 = sub_21F1567C0();
      uint64_t v96 = sub_21F103FD0(v66, v67, v97);
      uint64_t v45 = v86;
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      id v68 = v83;
      v83(v61, v92);
      uint64_t v69 = v64;
      _os_log_impl(&dword_21F0DC000, v64, (os_log_type_t)v89, "PFL result (gradients) stored at %s", v65, 0xCu);
      uint64_t v70 = v76;
      swift_arrayDestroy();
      MEMORY[0x223C45170](v70, -1, -1);
      MEMORY[0x223C45170](v65, -1, -1);
    }
    else
    {
      uint64_t v45 = v59;
      id v68 = v83;
      v83(v61, v92);
    }
    uint64_t v48 = v90;
    uint64_t v83 = v68;
    v68(v82, v92);
    sub_21F0FB8A8(v79, v57);
    uint64_t v49 = v84;
    uint64_t v47 = v77;
    unint64_t v39 = v78;
  }
  strcpy((char *)v97, "metrics.json");
  BYTE5(v97[1]) = 0;
  HIWORD(v97[1]) = -5120;
  v49(v39, v47, v48);
  uint64_t v71 = (uint64_t)v81;
  sub_21F156810();
  v85(v39, v48);
  swift_bridgeObjectRelease();
  sub_21F0FDE70(v45, v71);
  if (v43)
  {
    sub_21F0FE22C(v43, v71, "Failed to store PFL metrics at %s, error: %@");
    swift_willThrow();
    uint64_t v58 = v71;
    goto LABEL_18;
  }
  uint64_t v73 = v92;
  uint64_t v74 = (uint64_t (*)(uint64_t, uint64_t))v83;
  v83((char *)v71, v92);
  return v74(v93, v73);
}

id sub_21F0FDD80()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_21F156790();
  v5[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, 0, v5);

  if (v2) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_21F1566F0();

  return (id)swift_willThrow();
}

void sub_21F0FDE70(uint64_t a1, uint64_t a2)
{
  v30[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_21F156820();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = self;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_21F156BC0();
  swift_bridgeObjectRelease();
  v30[0] = 0;
  id v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 1, v30);

  id v11 = v30[0];
  if (v10)
  {
    uint64_t v12 = sub_21F156890();
    unint64_t v14 = v13;

    sub_21F1568A0();
    if (v2)
    {
      sub_21F0FB8BC(v12, v14);
    }
    else
    {
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_21F156B90();
      __swift_project_value_buffer(v16, (uint64_t)qword_267EBEF18);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
      uint64_t v17 = sub_21F156B70();
      os_log_type_t v18 = sub_21F157110();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_t v28 = v17;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        v30[0] = v27;
        unint64_t v26 = v19;
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v25 = v19 + 4;
        uint64_t v20 = sub_21F1567C0();
        uint64_t v29 = sub_21F103FD0(v20, v21, (uint64_t *)v30);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        os_log_t v22 = v28;
        uint64_t v23 = v26;
        _os_log_impl(&dword_21F0DC000, v28, v18, "PFL metrics stored at %s", v26, 0xCu);
        unint64_t v24 = v27;
        swift_arrayDestroy();
        MEMORY[0x223C45170](v24, -1, -1);
        MEMORY[0x223C45170](v23, -1, -1);
        sub_21F0FB8BC(v12, v14);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_21F0FB8BC(v12, v14);
      }
    }
  }
  else
  {
    unint64_t v15 = v11;
    sub_21F1566F0();

    swift_willThrow();
  }
}

void sub_21F0FE22C(void *a1, uint64_t a2, const char *a3)
{
  uint64_t v6 = sub_21F156820();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21F156B90();
  __swift_project_value_buffer(v10, (uint64_t)qword_267EBEF18);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  id v11 = a1;
  id v12 = a1;
  unint64_t v13 = sub_21F156B70();
  os_log_type_t v14 = sub_21F157120();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v15 = 136315394;
    unint64_t v24 = a3;
    uint64_t v16 = sub_21F1567C0();
    uint64_t v26 = sub_21F103FD0(v16, v17, &v27);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v15 + 12) = 2112;
    id v18 = a1;
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v26 = v19;
    sub_21F1571F0();
    uint64_t v20 = v23;
    *uint64_t v23 = v19;

    _os_log_impl(&dword_21F0DC000, v13, v14, v24, (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v20, -1, -1);
    uint64_t v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x223C45170](v21, -1, -1);
    MEMORY[0x223C45170](v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t PFLTaskResult.deinit()
{
  swift_bridgeObjectRelease();
  sub_21F0FB8A8(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PFLTaskResult.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_21F0FB8A8(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

__n128 PFLPlugin.__allocating_init(plugin:useCase:consent:taskSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *a5;
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  *(void *)(v12 + 48) = v13;
  __n128 result = *(__n128 *)a6;
  long long v15 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)a6;
  *(_OWORD *)(v12 + 72) = v15;
  return result;
}

uint64_t PFLPlugin.init(plugin:useCase:consent:taskSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, _OWORD *a6)
{
  long long v7 = a6[1];
  *(_OWORD *)(v6 + 56) = *a6;
  uint64_t v8 = *a5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = v8;
  *(_OWORD *)(v6 + 72) = v7;
  return v6;
}

uint64_t sub_21F0FE650(uint64_t a1, uint64_t a2)
{
  v3[79] = v2;
  v3[78] = a2;
  v3[77] = a1;
  v3[80] = type metadata accessor for PFLTaskPreferences(0);
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F0FE6FC, 0, 0);
}

uint64_t sub_21F0FE6FC()
{
  id v18 = v0;
  uint64_t v1 = (uint64_t *)v0[82];
  uint64_t v2 = (void *)v0[79];
  uint64_t v3 = v2[7];
  unint64_t v4 = v2[8];
  uint64_t v5 = v2[9];
  uint64_t v6 = v2[10];
  uint64_t v14 = v3;
  unint64_t v15 = v4;
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  sub_21F0FC10C(v3, v4);
  sub_21F156B40();
  static PFLTaskPreferences.loadTaskPreferences(preferredTaskSource:from:)(&v14, v7, v1);
  swift_bridgeObjectRelease();
  sub_21F0FC0C4(v3, v4);
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  v0[83] = v2[2];
  v0[84] = v2[3];
  swift_bridgeObjectRetain();
  v0[85] = sub_21F103278();
  v0[86] = v8;
  v0[87] = v2[4];
  v0[88] = v2[5];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[89] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_21F0FE870;
  uint64_t v10 = v0[82];
  uint64_t v11 = v0[79];
  uint64_t v12 = v0[78];
  return sub_21F102B88((uint64_t)v9, v10, v11, v12);
}

uint64_t sub_21F0FE870()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 720) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v5 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 736) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_21F0FEF0C;
    __asm { BR              X8 }
  }
  return MEMORY[0x270FA2498](sub_21F0FEA3C, 0, 0);
}

void sub_21F0FEA3C()
{
  uint64_t v2 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21F0FEB20;
  __asm { BR              X8; sub_21F141ADC }
}

uint64_t sub_21F0FEB20()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F0FEC1C, 0, 0);
}

uint64_t sub_21F0FEC1C()
{
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[90];
  uint64_t v2 = sub_21F156B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_267EBEF18);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_21F156B70();
  os_log_type_t v6 = sub_21F157120();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[90];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[76] = v12;
    sub_21F1571F0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_21F0DC000, v5, v6, "PreflightCheck failed with error %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v10, -1, -1);
    MEMORY[0x223C45170](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (void *)v0[90];
  id v14 = v13;
  uint64_t v15 = sub_21F105830();

  uint64_t v16 = (void *)v0[90];
  if (v15)
  {
    type metadata accessor for PFLPluginError();
    sub_21F1069D4(&qword_267EBE558, v17, (void (*)(uint64_t))type metadata accessor for PFLPluginError);
    id v18 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v19 = sub_21F156B10();
  }
  else
  {
    id v20 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v19 = sub_21F156B20();
  }
  uint64_t v21 = v19;

  sub_21F0F0C08(v0[82]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
  return v22(v21);
}

uint64_t sub_21F0FEF0C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F0FF008, 0, 0);
}

uint64_t sub_21F0FF008()
{
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(uint64_t **)(v0 + 648);
  id v3 = *(void **)(v0 + 632);
  uint64_t v4 = *(void *)(v0 + 624);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v3[2];
  unint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  sub_21F106470(v1, (uint64_t)v2, type metadata accessor for PFLTaskPreferences);
  LODWORD(v1) = (v3[6] & 0x10) == 0;
  sub_21F105934(v4, v0 + 304);
  uint64_t v9 = swift_allocObject();
  sub_21F0FB5B4((long long *)(v0 + 304), v9 + 16);
  type metadata accessor for PFLTaskDiscovery();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 744) = PFLTaskDiscovery.init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(v5, v6, v7, v8, v2, v1, (uint64_t)sub_21F1059D0, v9);
  *(void *)(v0 + 752) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds;
  *(void *)(v0 + 760) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
  *(void *)(v0 + 768) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
  uint64_t v10 = *(void *)(v0 + 720);
  *(void *)(v0 + 784) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 776) = v10;
  swift_retain();
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 792) = v11;
  *id v11 = v0;
  v11[1] = sub_21F0FF200;
  return sub_21F137D30();
}

uint64_t sub_21F0FF200(uint64_t a1)
{
  *(void *)(*(void *)v1 + 800) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F0FF300, 0, 0);
}

uint64_t sub_21F0FF300()
{
  uint64_t v58 = v0;
  uint64_t v1 = v0[100];
  if (v1)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_21F156B90();
    v0[101] = __swift_project_value_buffer(v2, (uint64_t)qword_267EBEF18);
    swift_retain();
    uint64_t v3 = sub_21F156B70();
    os_log_type_t v4 = sub_21F157110();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      v57[0] = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v1 + 16);
      unint64_t v8 = *(void *)(v1 + 24);
      swift_bridgeObjectRetain();
      v0[72] = sub_21F103FD0(v7, v8, v57);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_21F0DC000, v3, v4, "Start running plugin for recipe %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v6, -1, -1);
      MEMORY[0x223C45170](v5, -1, -1);
    }
    else
    {
      swift_release();
    }

    uint64_t v25 = sub_21F149878();
    uint64_t v27 = (void *)v0[79];
    uint64_t v29 = v27[2];
    uint64_t v28 = v27[3];
    if (!v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = v29;
      uint64_t v26 = v28;
    }
    v0[105] = v26;
    v0[104] = v25;
    v0[103] = v29;
    v0[102] = v28;
    uint64_t v30 = (void *)v0[78];
    swift_beginAccess();
    v0[106] = *(void *)(v1 + 16);
    v0[107] = *(void *)(v1 + 24);
    v0[108] = v27[4];
    v0[109] = v27[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v30[3];
    uint64_t v32 = v30[4];
    __swift_project_boxed_opaque_existential_1(v30, v31);
    uint64_t v33 = v27[4];
    uint64_t v34 = v27[5];
    v0[110] = v34;
    uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 + 24)
                                                                                       + **(int **)(v32 + 24));
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)swift_task_alloc();
    v0[111] = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_21F0FFBE0;
    uint64_t v36 = v0[77];
    return v56(v1, v33, v34, v36, v31, v32);
  }
  else
  {
    uint64_t v9 = v0[98];
    swift_release();
    v57[0] = v9;
    sub_21F104838();
    if (*(void *)(v9 + 16))
    {
      uint64_t v10 = *(void **)(v57[0] + 32);
      v0[122] = v10;
      uint64_t v11 = *(void *)(v9 + 40);
      v0[123] = v11;
      id v12 = v10;
      swift_retain();
      swift_release();
      id v13 = v10;
      id v14 = (void *)sub_21F1566E0();

      id v15 = objc_msgSend(v14, sel_code);
      uint64_t v16 = qword_267EBE2C0;
      swift_retain();
      if (v16 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_21F156B90();
      __swift_project_value_buffer(v17, (uint64_t)qword_267EBEF18);
      swift_retain();
      id v18 = sub_21F156B70();
      os_log_type_t v19 = sub_21F157100();
      if (os_log_type_enabled(v18, v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        v57[0] = swift_slowAlloc();
        uint64_t v21 = v57[0];
        *(_DWORD *)id v20 = 136315138;
        swift_beginAccess();
        id v22 = v15;
        uint64_t v23 = *(void *)(v11 + 16);
        unint64_t v24 = *(void *)(v11 + 24);
        swift_bridgeObjectRetain();
        v0[74] = sub_21F103FD0(v23, v24, v57);
        sub_21F1571F0();
        id v15 = v22;
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_21F0DC000, v18, v19, "Try to donate error to Dedisco for recipe %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v21, -1, -1);
        MEMORY[0x223C45170](v20, -1, -1);
      }
      else
      {
        swift_release();
      }

      uint64_t v42 = v0[79];
      v57[0] = 0;
      v57[1] = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      v0[124] = *(void *)(v42 + 24);
      swift_beginAccess();
      v0[125] = *(void *)(v11 + 24);
      v0[126] = *(void *)(v42 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F159670;
      *(void *)(inited + 32) = 0x6F635F726F727265;
      *(void *)(inited + 40) = 0xEA00000000006564;
      *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
      *(void *)(inited + 48) = v15;
      unint64_t v44 = sub_21F0FC1B0(inited);
      unint64_t v45 = sub_21F10CDB0(v44);
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_21F149878();
      if (v47)
      {
        uint64_t v48 = v46;
        uint64_t v49 = v47;
      }
      else
      {
        uint64_t v50 = v0[79];
        uint64_t v48 = *(void *)(v50 + 16);
        uint64_t v49 = *(void *)(v50 + 24);
        swift_bridgeObjectRetain();
      }
      unint64_t v51 = v0[97];
      type metadata accessor for DediscoUploader();
      static DediscoUploader.upload(binaryResult:jsonResult:task:privacyBudgetPrefix:taskSucceeded:)(0, 0xF000000000000000, v45, v11, v48, v49, 0);
      v0[127] = v51;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v51)
      {
        uint64_t v54 = (char *)&dword_267EBEE10 + dword_267EBEE10;
        uint64_t v52 = (void *)swift_task_alloc();
        v0[129] = v52;
        *uint64_t v52 = v0;
        v52[1] = sub_21F102058;
        char v63 = 1;
        unint64_t v62 = v51;
        __asm { BR              X8; sub_21F141ADC }
      }
      uint64_t v55 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      unsigned int v53 = (void *)swift_task_alloc();
      v0[128] = v53;
      *unsigned int v53 = v0;
      v53[1] = sub_21F101DE4;
      uint64_t v60 = 0;
      uint64_t v61 = 0;
      char v63 = 1;
      unint64_t v62 = 0xE000000000000000;
      __asm { BR              X8; sub_21F141508 }
    }
    uint64_t v38 = v0[82];
    swift_release();
    id v39 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v40 = sub_21F156B20();
    swift_release();
    sub_21F0F0C08(v38);
    swift_task_dealloc();
    swift_task_dealloc();
    id v41 = (uint64_t (*)(uint64_t))v0[1];
    return v41(v40);
  }
}

uint64_t sub_21F0FFBE0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[112] = a1;
  v3[113] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    os_log_type_t v4 = (void *)swift_task_alloc();
    v3[114] = v4;
    *os_log_type_t v4 = v3;
    v4[1] = sub_21F0FFDB8;
    __asm { BR              X8 }
  }
  return MEMORY[0x270FA2498](sub_21F10025C, 0, 0);
}

uint64_t sub_21F0FFDB8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F0FFEB4, 0, 0);
}

void sub_21F0FFEB4()
{
  uint64_t v18 = v0[113];
  uint64_t v1 = v0[112];
  uint64_t v19 = v0[104];
  uint64_t v20 = v0[105];
  uint64_t v2 = v0[100];
  uint64_t v17 = v0[95];
  uint64_t v3 = v0[94];
  uint64_t v4 = v0[93];
  uint64_t v5 = v0[79];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[65] = 0;
  v0[66] = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  v0[115] = *(void *)(v5 + 24);
  v0[116] = *(void *)(v2 + 24);
  v0[117] = *(void *)(v5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F1596F0;
  strcpy((char *)(inited + 32), "PolicyDownload");
  *(unsigned char *)(inited + 47) = -18;
  uint64_t v7 = MEMORY[0x263F8D538];
  *(void *)(inited + 48) = *(void *)(v4 + v3);
  *(void *)(inited + 72) = v7;
  strcpy((char *)(inited + 80), "TaskDownload");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  uint64_t v8 = *(void *)(v4 + v17);
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = v8;
  unint64_t v9 = sub_21F0FC1B0(inited);
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = sub_21F0ECD1C(v10, v9);
  type metadata accessor for DediscoUploader();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 24);
  unint64_t v13 = *(void *)(v1 + 32);
  sub_21F1058FC(v12, v13);
  unint64_t v14 = sub_21F10CDB0(v11);
  swift_bridgeObjectRelease();
  static DediscoUploader.upload(binaryResult:jsonResult:task:privacyBudgetPrefix:taskSucceeded:)(v12, v13, v14, v2, v19, v20, 1);
  v0[118] = v18;
  swift_bridgeObjectRelease();
  sub_21F0FB8A8(v12, v13);
  if (v18)
  {
    uint64_t v21 = (char *)&dword_267EBEE10 + dword_267EBEE10;
    id v15 = (void *)swift_task_alloc();
    v0[121] = v15;
    *id v15 = v0;
    v15[1] = sub_21F10126C;
    __asm { BR              X8 }
  }
  id v22 = (char *)&dword_267EBEE20 + dword_267EBEE20;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[120] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_21F100EB4;
  __asm { BR              X8 }
}

void sub_21F10025C()
{
  swift_bridgeObjectRelease();
  uint64_t v2 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 952) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21F100348;
  __asm { BR              X8; sub_21F141ADC }
}

uint64_t sub_21F100348()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F100444, 0, 0);
}

void sub_21F100444()
{
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 904);
  *(void *)(v0 + 1040) = v1;
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 632);
  uint64_t v4 = *(void **)(v0 + 624);
  uint64_t v6 = v4[3];
  uint64_t v5 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40);
  swift_bridgeObjectRetain();
  uint64_t v10 = v5;
  unint64_t v11 = v1;
  char v12 = v9(v2, v7, v8, v6, v10);
  *(unsigned char *)(v0 + 1145) = v12 & 1;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 584) = v1;
  id v13 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE560);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    char v14 = *(unsigned char *)(v0 + 1144);
    swift_retain();
    id v15 = sub_21F156B70();
    os_log_type_t v16 = sub_21F157120();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 800);
    if (v17)
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v71[0] = v21;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v23 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 552) = sub_21F103FD0(v23, v22, v71);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v19 + 12) = 2112;
      sub_21F0ED588();
      swift_allocError();
      *unint64_t v24 = v14;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 560) = v25;
      sub_21F1571F0();
      *uint64_t v20 = v25;
      _os_log_impl(&dword_21F0DC000, v15, v16, "Failed to donate to Dedisco for recipe %s with error %@", (uint8_t *)v19, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v20, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v21, -1, -1);
      MEMORY[0x223C45170](v19, -1, -1);
    }
    else
    {

      swift_release();
    }
    unint64_t v45 = *(void **)(v0 + 784);
    goto LABEL_16;
  }
  swift_retain();
  id v26 = v1;
  swift_retain();
  id v27 = v1;
  uint64_t v28 = sub_21F156B70();
  os_log_type_t v29 = sub_21F157120();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void *)(v0 + 800);
  if (v30)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v66 = (void *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    v71[0] = v68;
    *(_DWORD *)uint64_t v32 = 136315394;
    log = v28;
    uint64_t v33 = *(void *)(v31 + 16);
    unint64_t v34 = *(void *)(v31 + 24);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 536) = sub_21F103FD0(v33, v34, v71);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v32 + 12) = 2112;
    id v35 = v11;
    uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 544) = v36;
    sub_21F1571F0();
    *uint64_t v66 = v36;

    _os_log_impl(&dword_21F0DC000, log, v29, "Failed to execute plugin for recipe %s with error %@", (uint8_t *)v32, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v66, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v68, -1, -1);
    MEMORY[0x223C45170](v32, -1, -1);

    if ((v12 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_release_n();

    if ((v12 & 1) == 0)
    {
LABEL_6:
      swift_retain();
      unint64_t v37 = sub_21F156B70();
      os_log_type_t v38 = sub_21F157100();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v40 = *(void *)(v0 + 800);
      if (v39)
      {
        id v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v71[0] = v42;
        *(_DWORD *)id v41 = 136315138;
        uint64_t v44 = *(void *)(v40 + 16);
        unint64_t v43 = *(void *)(v40 + 24);
        swift_bridgeObjectRetain();
        *(void *)(v0 + 568) = sub_21F103FD0(v44, v43, v71);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_21F0DC000, v37, v38, "Try to donate error to Dedisco for recipe %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v42, -1, -1);
        MEMORY[0x223C45170](v41, -1, -1);
      }
      else
      {

        swift_release();
      }
      uint64_t v67 = *(void *)(v0 + 840);
      uint64_t v56 = *(void *)(v0 + 832);
      uint64_t v57 = *(void *)(v0 + 800);
      uint64_t v58 = *(void *)(v0 + 632);
      *(void *)(v0 + 488) = 0;
      *(void *)(v0 + 496) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1048) = *(void *)(v58 + 24);
      *(void *)(v0 + 1056) = *(void *)(v57 + 24);
      *(void *)(v0 + 1064) = *(void *)(v58 + 40);
      type metadata accessor for DediscoUploader();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F159670;
      *(void *)(inited + 32) = 0x6F635F726F727265;
      *(void *)(inited + 40) = 0xEA00000000006564;
      uint64_t v60 = (void *)sub_21F1566E0();
      id v61 = objc_msgSend(v60, sel_code);

      *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
      *(void *)(inited + 48) = v61;
      unint64_t v62 = sub_21F0FC1B0(inited);
      unint64_t v63 = sub_21F10CDB0(v62);
      swift_bridgeObjectRelease();
      static DediscoUploader.upload(binaryResult:jsonResult:task:privacyBudgetPrefix:taskSucceeded:)(0, 0xF000000000000000, v63, v57, v56, v67, 0);
      *(void *)(v0 + 1072) = 0;
      swift_bridgeObjectRelease();
      uint64_t v70 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      id v64 = (void *)swift_task_alloc();
      *(void *)(v0 + 1080) = v64;
      *id v64 = v0;
      v64[1] = sub_21F1022E0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      char v76 = 1;
      unint64_t v75 = 0xE000000000000000;
      __asm { BR              X8; sub_21F141508 }
    }
  }
  swift_bridgeObjectRelease();
  swift_retain();
  id v46 = v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v45 = *(void **)(v0 + 784);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v45 = sub_21F103980(0, v45[2] + 1, 1, v45);
  }
  unint64_t v49 = v45[2];
  unint64_t v48 = v45[3];
  if (v49 >= v48 >> 1) {
    unint64_t v45 = sub_21F103980((void *)(v48 > 1), v49 + 1, 1, v45);
  }
  uint64_t v50 = *(void *)(v0 + 800);
  v45[2] = v49 + 1;
  unint64_t v51 = &v45[2 * v49];
  v51[4] = v11;
  v51[5] = v50;
LABEL_16:
  *(void *)(v0 + 1104) = v45;
  *(void *)(v0 + 1096) = 0;
  uint64_t v52 = *(void *)(v0 + 800);
  uint64_t v53 = *(void *)(v0 + 632);
  *(void *)(v0 + 504) = 0;
  *(void *)(v0 + 512) = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1112) = *(void *)(v53 + 24);
  *(void *)(v0 + 1120) = *(void *)(v52 + 24);
  *(void *)(v0 + 1128) = *(void *)(v53 + 40);
  uint64_t v69 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 1136) = v54;
  *uint64_t v54 = v0;
  v54[1] = sub_21F10280C;
  unint64_t v55 = *(void *)(v0 + 1040);
  char v76 = 1;
  unint64_t v75 = v55;
  __asm { BR              X8 }
}

uint64_t sub_21F100EB4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F100FB0, 0, 0);
}

uint64_t sub_21F100FB0()
{
  uint64_t v20 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v1 = sub_21F156B70();
  os_log_type_t v2 = sub_21F157110();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[100];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v19 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = *(void *)(v3 + 16);
    unint64_t v6 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    v0[75] = sub_21F103FD0(v7, v6, &v19);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_21F0DC000, v1, v2, "Successfully donate to Dedisco for recipe %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v5, -1, -1);
    MEMORY[0x223C45170](v4, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v8 = v0[82];
  uint64_t v9 = v0[80];
  if (*(unsigned char *)(v8 + *(int *)(v9 + 24)) == 1)
  {
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    if (*(unsigned char *)(v10 + *(int *)(type metadata accessor for PFLDecodableTaskParameters(0) + 40)) == 1)
    {
      unint64_t v11 = (void *)v0[118];
      uint64_t v12 = v0[100];
      unint64_t v14 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      sub_21F0FD43C(v14, v13);
      if (v11) {

      }
      swift_bridgeObjectRelease();
      uint64_t v8 = v0[82];
    }
  }
  id v15 = objc_allocWithZone((Class)sub_21F156B30());
  uint64_t v16 = sub_21F156B20();
  swift_release();
  swift_release_n();
  swift_release();
  sub_21F0F0C08(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v16);
}

uint64_t sub_21F10126C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F101368, 0, 0);
}

void sub_21F101368()
{
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 944);
  *(void *)(v0 + 1040) = v1;
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 632);
  uint64_t v4 = *(void **)(v0 + 624);
  uint64_t v6 = v4[3];
  uint64_t v5 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40);
  swift_bridgeObjectRetain();
  uint64_t v10 = v5;
  unint64_t v11 = v1;
  char v12 = v9(v2, v7, v8, v6, v10);
  *(unsigned char *)(v0 + 1145) = v12 & 1;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 584) = v1;
  id v13 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE560);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    char v14 = *(unsigned char *)(v0 + 1144);
    swift_retain();
    id v15 = sub_21F156B70();
    os_log_type_t v16 = sub_21F157120();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 800);
    if (v17)
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v71[0] = v21;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v23 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 552) = sub_21F103FD0(v23, v22, v71);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v19 + 12) = 2112;
      sub_21F0ED588();
      swift_allocError();
      *unint64_t v24 = v14;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 560) = v25;
      sub_21F1571F0();
      *uint64_t v20 = v25;
      _os_log_impl(&dword_21F0DC000, v15, v16, "Failed to donate to Dedisco for recipe %s with error %@", (uint8_t *)v19, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v20, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v21, -1, -1);
      MEMORY[0x223C45170](v19, -1, -1);
    }
    else
    {

      swift_release();
    }
    unint64_t v45 = *(void **)(v0 + 784);
    goto LABEL_16;
  }
  swift_retain();
  id v26 = v1;
  swift_retain();
  id v27 = v1;
  uint64_t v28 = sub_21F156B70();
  os_log_type_t v29 = sub_21F157120();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void *)(v0 + 800);
  if (v30)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v66 = (void *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    v71[0] = v68;
    *(_DWORD *)uint64_t v32 = 136315394;
    log = v28;
    uint64_t v33 = *(void *)(v31 + 16);
    unint64_t v34 = *(void *)(v31 + 24);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 536) = sub_21F103FD0(v33, v34, v71);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v32 + 12) = 2112;
    id v35 = v11;
    uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 544) = v36;
    sub_21F1571F0();
    *uint64_t v66 = v36;

    _os_log_impl(&dword_21F0DC000, log, v29, "Failed to execute plugin for recipe %s with error %@", (uint8_t *)v32, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v66, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v68, -1, -1);
    MEMORY[0x223C45170](v32, -1, -1);

    if ((v12 & 1) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_release_n();

    if ((v12 & 1) == 0)
    {
LABEL_6:
      swift_retain();
      unint64_t v37 = sub_21F156B70();
      os_log_type_t v38 = sub_21F157100();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v40 = *(void *)(v0 + 800);
      if (v39)
      {
        id v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v71[0] = v42;
        *(_DWORD *)id v41 = 136315138;
        uint64_t v44 = *(void *)(v40 + 16);
        unint64_t v43 = *(void *)(v40 + 24);
        swift_bridgeObjectRetain();
        *(void *)(v0 + 568) = sub_21F103FD0(v44, v43, v71);
        sub_21F1571F0();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl(&dword_21F0DC000, v37, v38, "Try to donate error to Dedisco for recipe %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v42, -1, -1);
        MEMORY[0x223C45170](v41, -1, -1);
      }
      else
      {

        swift_release();
      }
      uint64_t v67 = *(void *)(v0 + 840);
      uint64_t v56 = *(void *)(v0 + 832);
      uint64_t v57 = *(void *)(v0 + 800);
      uint64_t v58 = *(void *)(v0 + 632);
      *(void *)(v0 + 488) = 0;
      *(void *)(v0 + 496) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1048) = *(void *)(v58 + 24);
      *(void *)(v0 + 1056) = *(void *)(v57 + 24);
      *(void *)(v0 + 1064) = *(void *)(v58 + 40);
      type metadata accessor for DediscoUploader();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F159670;
      *(void *)(inited + 32) = 0x6F635F726F727265;
      *(void *)(inited + 40) = 0xEA00000000006564;
      uint64_t v60 = (void *)sub_21F1566E0();
      id v61 = objc_msgSend(v60, sel_code);

      *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
      *(void *)(inited + 48) = v61;
      unint64_t v62 = sub_21F0FC1B0(inited);
      unint64_t v63 = sub_21F10CDB0(v62);
      swift_bridgeObjectRelease();
      static DediscoUploader.upload(binaryResult:jsonResult:task:privacyBudgetPrefix:taskSucceeded:)(0, 0xF000000000000000, v63, v57, v56, v67, 0);
      *(void *)(v0 + 1072) = 0;
      swift_bridgeObjectRelease();
      uint64_t v70 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      id v64 = (void *)swift_task_alloc();
      *(void *)(v0 + 1080) = v64;
      *id v64 = v0;
      v64[1] = sub_21F1022E0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      char v76 = 1;
      unint64_t v75 = 0xE000000000000000;
      __asm { BR              X8; sub_21F141508 }
    }
  }
  swift_bridgeObjectRelease();
  swift_retain();
  id v46 = v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v45 = *(void **)(v0 + 784);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v45 = sub_21F103980(0, v45[2] + 1, 1, v45);
  }
  unint64_t v49 = v45[2];
  unint64_t v48 = v45[3];
  if (v49 >= v48 >> 1) {
    unint64_t v45 = sub_21F103980((void *)(v48 > 1), v49 + 1, 1, v45);
  }
  uint64_t v50 = *(void *)(v0 + 800);
  v45[2] = v49 + 1;
  unint64_t v51 = &v45[2 * v49];
  v51[4] = v11;
  v51[5] = v50;
LABEL_16:
  *(void *)(v0 + 1104) = v45;
  *(void *)(v0 + 1096) = 0;
  uint64_t v52 = *(void *)(v0 + 800);
  uint64_t v53 = *(void *)(v0 + 632);
  *(void *)(v0 + 504) = 0;
  *(void *)(v0 + 512) = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1112) = *(void *)(v53 + 24);
  *(void *)(v0 + 1120) = *(void *)(v52 + 24);
  *(void *)(v0 + 1128) = *(void *)(v53 + 40);
  uint64_t v69 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 1136) = v54;
  *uint64_t v54 = v0;
  v54[1] = sub_21F10280C;
  unint64_t v55 = *(void *)(v0 + 1040);
  char v76 = 1;
  unint64_t v75 = v55;
  __asm { BR              X8 }
}

uint64_t sub_21F101DE4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F101EE0, 0, 0);
}

uint64_t sub_21F101EE0()
{
  uint64_t v1 = (void *)v0[122];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = v1;
  uint64_t v3 = sub_21F105830();

  uint64_t v4 = (void *)v0[122];
  if (v3)
  {
    type metadata accessor for PFLPluginError();
    sub_21F1069D4(&qword_267EBE558, v5, (void (*)(uint64_t))type metadata accessor for PFLPluginError);
    id v6 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v7 = sub_21F156B10();
  }
  else
  {
    id v8 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v7 = sub_21F156B20();
  }
  uint64_t v9 = v7;

  swift_release_n();
  swift_release();
  sub_21F0F0C08(v0[82]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_21F102058()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F102154, 0, 0);
}

uint64_t sub_21F102154()
{
  uint64_t v1 = (void *)v0[127];
  swift_willThrow();

  id v2 = (void *)v0[122];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v3 = v2;
  uint64_t v4 = sub_21F105830();

  uint64_t v5 = (void *)v0[122];
  if (v4)
  {
    type metadata accessor for PFLPluginError();
    sub_21F1069D4(&qword_267EBE558, v6, (void (*)(uint64_t))type metadata accessor for PFLPluginError);
    id v7 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v8 = sub_21F156B10();
  }
  else
  {
    id v9 = objc_allocWithZone((Class)sub_21F156B30());
    uint64_t v8 = sub_21F156B20();
  }
  uint64_t v10 = v8;

  swift_release_n();
  swift_release();
  sub_21F0F0C08(v0[82]);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

uint64_t sub_21F1022E0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F1023DC, 0, 0);
}

void sub_21F1023DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[134];
  v0[138] = v0[98];
  v0[137] = v1;
  uint64_t v2 = v0[100];
  uint64_t v3 = v0[79];
  v0[63] = 0;
  v0[64] = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  v0[139] = *(void *)(v3 + 24);
  v0[140] = *(void *)(v2 + 24);
  v0[141] = *(void *)(v3 + 40);
  uint64_t v5 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[142] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_21F10280C;
  __asm { BR              X8; sub_21F141ADC }
}

uint64_t sub_21F10256C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F102668, 0, 0);
}

void sub_21F102668()
{
  uint64_t v1 = (void *)v0[134];
  swift_willThrow();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[138] = v0[98];
  v0[137] = 0;
  uint64_t v2 = v0[100];
  uint64_t v3 = v0[79];
  v0[63] = 0;
  v0[64] = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  v0[139] = *(void *)(v3 + 24);
  v0[140] = *(void *)(v2 + 24);
  v0[141] = *(void *)(v3 + 40);
  uint64_t v5 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[142] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_21F10280C;
  __asm { BR              X8; sub_21F141ADC }
}

uint64_t sub_21F10280C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F102964, 0, 0);
}

void sub_21F102964()
{
  if (*(unsigned char *)(v0 + 1145) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 768);
    uint64_t v2 = *(void *)(v0 + 744);

    uint64_t v3 = *(void *)(v2 + v1);
    BOOL v4 = __OFSUB__(v3, 1);
    uint64_t v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      *(void *)(*(void *)(v0 + 744) + *(void *)(v0 + 768)) = v5;
      swift_release();
      uint64_t v6 = *(void *)(v0 + 1096);
      *(void *)(v0 + 784) = *(void *)(v0 + 1104);
      *(void *)(v0 + 776) = v6;
      id v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 792) = v7;
      *id v7 = v0;
      v7[1] = sub_21F0FF200;
      sub_21F137D30();
    }
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 1040);
    swift_bridgeObjectRelease();
    id v9 = v8;
    uint64_t v10 = sub_21F105830();

    unint64_t v11 = *(void **)(v0 + 1040);
    if (v10)
    {
      type metadata accessor for PFLPluginError();
      sub_21F1069D4(&qword_267EBE558, v12, (void (*)(uint64_t))type metadata accessor for PFLPluginError);
      id v13 = objc_allocWithZone((Class)sub_21F156B30());
      uint64_t v14 = sub_21F156B10();
    }
    else
    {
      id v15 = objc_allocWithZone((Class)sub_21F156B30());
      uint64_t v14 = sub_21F156B20();
    }
    uint64_t v16 = v14;
    swift_release();

    swift_release();
    swift_release();
    sub_21F0F0C08(*(void *)(v0 + 656));
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v17 = *(void (**)(uint64_t))(v0 + 8);
    v17(v16);
  }
}

uint64_t sub_21F102B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  uint64_t v5 = sub_21F156930();
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F102C4C, 0, 0);
}

id sub_21F102C4C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = type metadata accessor for PFLTaskPreferences(0);
  uint64_t v4 = v1 + *(int *)(v3 + 20);
  double v5 = *(double *)(v4 + 48);
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  unint64_t v9 = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F10F748(v6, v7, v8, v9, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  uint64_t v12 = v0[5];
  type metadata accessor for PFLDecodableTaskParameters(0);
  sub_21F156910();
  sub_21F1069D4((unint64_t *)&qword_267EBE490, 255, MEMORY[0x263F07490]);
  LOBYTE(v7) = sub_21F156C30();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  if (v7)
  {
    sub_21F0FB4FC();
    swift_allocError();
    unsigned char *v13 = 49;
    goto LABEL_3;
  }
  uint64_t v16 = v0[3];
  uint64_t v17 = *(void *)(v16 + 48);
  if (v17)
  {
    sub_21F0FB4FC();
    uint64_t v18 = (void *)swift_allocError();
    *uint64_t v19 = 1;
    id result = objc_msgSend(self, sel_sharedConnection);
    if (!result)
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v20 = result;
    unsigned int v21 = objc_msgSend(result, sel_isDiagnosticSubmissionAllowed);

    if (!v21) {
      goto LABEL_3;
    }

    uint64_t v17 = *(void *)(v16 + 48);
  }
  if ((v17 & 2) != 0 && (*(unsigned char *)(v0[2] + *(int *)(v3 + 24)) != 1 || (*(unsigned char *)(v4 + 40) & 1) == 0))
  {
    uint64_t v23 = v2[2];
    uint64_t v22 = v2[3];
    swift_bridgeObjectRetain();
    sub_21F155B60(v23, v22);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v16 + 48);
  }
  if ((v17 & 4) != 0)
  {
    sub_21F0FB4FC();
    unint64_t v24 = (void *)swift_allocError();
    *uint64_t v25 = 33;
    int v26 = MKBGetDeviceLockState();
    if (v26 != 3 && v26)
    {
LABEL_3:
      swift_willThrow();
      swift_task_dealloc();
      uint64_t v14 = (uint64_t (*)(void))v0[1];
      return (id)v14();
    }

    uint64_t v17 = *(void *)(v16 + 48);
  }
  if ((v17 & 8) != 0)
  {
    sub_21F0FB4FC();
    id v27 = (void *)swift_allocError();
    *uint64_t v28 = 2;
    id result = objc_msgSend(self, sel_sharedConnection);
    if (result)
    {
      os_log_type_t v29 = result;
      unsigned int v30 = objc_msgSend(result, sel_isHealthDataSubmissionAllowed);

      if (!v30) {
        goto LABEL_3;
      }

      goto LABEL_22;
    }
LABEL_26:
    __break(1u);
    return result;
  }
LABEL_22:
  uint64_t v31 = (void *)v0[4];
  uint64_t v32 = v31[3];
  uint64_t v33 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
  unint64_t v34 = (void *)v0[4];
  sub_21F106A1C();
  v0[8] = swift_allocError();
  *id v35 = 1;
  uint64_t v37 = v31[3];
  uint64_t v36 = v31[4];
  __swift_project_boxed_opaque_existential_1(v34, v37);
  BOOL v39 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v36 + 16) + **(int **)(v36 + 16));
  os_log_type_t v38 = (void *)swift_task_alloc();
  v0[9] = v38;
  *os_log_type_t v38 = v0;
  v38[1] = sub_21F1030D4;
  return (id)v39(v37, v36);
}

uint64_t sub_21F1030D4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F1031D4, 0, 0);
}

uint64_t sub_21F1031D4()
{
  if (*(unsigned char *)(v0 + 80) == 1) {

  }
  else {
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21F103278()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21F156930();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  double v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F156920();
  uint64_t v6 = sub_21F106B34((uint64_t)v5);
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v14 = v9;
  swift_bridgeObjectRetain();
  sub_21F156DD0();
  swift_bridgeObjectRetain();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  uint64_t v12 = v6;
  sub_21F1575D0();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  uint64_t v12 = v8;
  sub_21F1575D0();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t PFLPlugin.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F0FC0C4(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return v0;
}

uint64_t PFLPlugin.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F0FC0C4(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocClassInstance();
}

char *sub_21F103490(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F1035C0(a1, a2, a3, a4, &qword_267EBE5C8);
}

void *sub_21F10349C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE498);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F1054DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_21F1035C0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F1055EC(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F1036B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F103700(a1, a2, a3, a4, &qword_267EBE5D0, type metadata accessor for CKPolicyRecord, type metadata accessor for CKPolicyRecord);
}

uint64_t sub_21F1036DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F103700(a1, a2, a3, a4, &qword_267EBE5C0, MEMORY[0x263F06EA8], MEMORY[0x263F06EA8]);
}

uint64_t sub_21F103700(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_21F157400();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_21F1056D4(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_21F103980(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE638);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F10653C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_21F103A94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE620);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_21F106648(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_21F103BA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5E8);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_21F106648(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F103CB4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F106760(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F103DC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE608);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F10684C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_21F103ED4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE600);
      int64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F1055EC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F103FD0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_21F1040A4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_21F0ED61C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_21F0ED61C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_21F1040A4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21F157200();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_21F104260(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_21F157380();
  if (!v8)
  {
    sub_21F157400();
    __break(1u);
LABEL_17:
    uint64_t result = sub_21F157460();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_21F104260(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_21F1042F8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21F104470(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_21F104470(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21F1042F8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_21F132BA8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_21F157310();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_21F157400();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_21F156DF0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_21F157460();
    __break(1u);
LABEL_14:
    uint64_t result = sub_21F157400();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_21F104470(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F1045C0()
{
  uint64_t v1 = type metadata accessor for CKPolicyRecord(0);
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  unint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v2);
  uint64_t v23 = (uint64_t)&v19 - v6;
  int64_t v7 = *(void **)v0;
  unint64_t v8 = *(void *)(*(void *)v0 + 16);
  unint64_t v9 = v8 - 2;
  if (v8 >= 2)
  {
    unint64_t v10 = 0;
    unint64_t v20 = v8 - 2;
    while (1)
    {
      unint64_t v24 = 0;
      uint64_t result = MEMORY[0x223C45180](&v24, 8);
      uint64_t v12 = (v24 * (unsigned __int128)v8) >> 64;
      if (v8 > v24 * v8)
      {
        unint64_t v13 = -(uint64_t)v8 % v8;
        if (v13 > v24 * v8)
        {
          do
          {
            unint64_t v24 = 0;
            uint64_t result = MEMORY[0x223C45180](&v24, 8);
          }
          while (v13 > v24 * v8);
          uint64_t v12 = (v24 * (unsigned __int128)v8) >> 64;
        }
      }
      unint64_t v14 = v10 + v12;
      if (__OFADD__(v10, v12)) {
        break;
      }
      if (v10 != v14)
      {
        unint64_t v15 = v7[2];
        if (v10 >= v15) {
          goto LABEL_19;
        }
        uint64_t v16 = v7;
        unint64_t v17 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        uint64_t v18 = *(void *)(v21 + 72);
        uint64_t v22 = v18 * v10;
        uint64_t result = sub_21F106470((uint64_t)v7 + v17 + v18 * v10, v23, type metadata accessor for CKPolicyRecord);
        if (v14 >= v15) {
          goto LABEL_20;
        }
        sub_21F106470((uint64_t)v7 + v17 + v18 * v14, (uint64_t)v4, type metadata accessor for CKPolicyRecord);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v0 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_21F105028(v7);
          uint64_t v16 = (void *)result;
          *(void *)uint64_t v0 = result;
        }
        if (v10 >= v16[2]) {
          goto LABEL_21;
        }
        uint64_t result = sub_21F1064D8((uint64_t)v4, (uint64_t)v16 + v17 + v22);
        if (v14 >= *(void *)(*(void *)v0 + 16)) {
          goto LABEL_22;
        }
        uint64_t result = sub_21F1064D8(v23, *(void *)v0 + v17 + v18 * v14);
        int64_t v7 = *(void **)v0;
        unint64_t v9 = v20;
      }
      --v8;
      if (v10++ == v9) {
        return result;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  return result;
}

void sub_21F104838()
{
  uint64_t v1 = *(void **)v0;
  unint64_t v2 = *(void *)(*(void *)v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      unint64_t v18 = 0;
      MEMORY[0x223C45180](&v18, 8);
      uint64_t v6 = (v18 * (unsigned __int128)v2) >> 64;
      if (v2 > v18 * v2)
      {
        unint64_t v7 = -(uint64_t)v2 % v2;
        if (v7 > v18 * v2)
        {
          do
          {
            unint64_t v18 = 0;
            MEMORY[0x223C45180](&v18, 8);
          }
          while (v7 > v18 * v2);
          uint64_t v6 = (v18 * (unsigned __int128)v2) >> 64;
        }
      }
      unint64_t v8 = v4 + v6;
      if (__OFADD__(v4, v6)) {
        break;
      }
      if (v4 != v8)
      {
        unint64_t v9 = v1[2];
        if (v4 >= v9) {
          goto LABEL_19;
        }
        if (v8 >= v9) {
          goto LABEL_20;
        }
        long long v16 = *(_OWORD *)&v1[2 * v4 + 4];
        long long v17 = *(_OWORD *)&v1[2 * v8 + 4];
        id v10 = (id)v16;
        swift_retain();
        id v11 = (id)v17;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v1 = (void *)sub_21F10503C(v1);
        }
        if (v4 >= v1[2]) {
          goto LABEL_21;
        }
        uint64_t v12 = (void **)&v1[2 * v4 + 4];
        unint64_t v13 = *v12;
        *(_OWORD *)uint64_t v12 = v17;
        swift_retain();

        swift_release();
        swift_release();
        if (v8 >= v1[2]) {
          goto LABEL_22;
        }
        unint64_t v14 = (void **)&v1[2 * v8 + 4];
        unint64_t v15 = *v14;
        *(_OWORD *)unint64_t v14 = v16;
        swift_retain();

        swift_release();
        swift_release();
        *(void *)uint64_t v0 = v1;
      }
      --v2;
      if (v4++ == v3) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

void sub_21F104A14()
{
  if (*v0 >> 62) {
    goto LABEL_38;
  }
  if (*(uint64_t *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    do
    {
      if (*v0 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v1 = sub_21F157420();
        swift_bridgeObjectRelease();
        uint64_t v2 = v1 - 2;
        if (v1 < 2) {
          return;
        }
      }
      else
      {
        uint64_t v1 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v2 = v1 - 2;
        if (v1 < 2) {
          return;
        }
      }
      unint64_t v3 = 0;
      while (1)
      {
        unint64_t v17 = 0;
        MEMORY[0x223C45180](&v17, 8);
        uint64_t v5 = (v17 * (unsigned __int128)(unint64_t)v1) >> 64;
        if (v1 > v17 * v1)
        {
          unint64_t v6 = -v1 % (unint64_t)v1;
          if (v6 > v17 * v1)
          {
            do
            {
              unint64_t v17 = 0;
              MEMORY[0x223C45180](&v17, 8);
            }
            while (v6 > v17 * v1);
            uint64_t v5 = (v17 * (unsigned __int128)(unint64_t)v1) >> 64;
          }
        }
        unint64_t v7 = v3 + v5;
        if (__OFADD__(v3, v5)) {
          break;
        }
        if (v3 == v7) {
          goto LABEL_6;
        }
        unint64_t v8 = *v0;
        if ((*v0 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x223C441C0](v3, *v0);
          unint64_t v8 = *v0;
          if ((*v0 & 0xC000000000000001) == 0) {
            goto LABEL_16;
          }
        }
        else
        {
          if (v3 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_33;
          }
          uint64_t v9 = *(void *)(v8 + 8 * v3 + 32);
          swift_retain();
          if ((v8 & 0xC000000000000001) == 0)
          {
LABEL_16:
            if ((v7 & 0x8000000000000000) != 0) {
              goto LABEL_34;
            }
            if (v7 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_35;
            }
            uint64_t v10 = *(void *)(v8 + 8 * v7 + 32);
            swift_retain();
            goto LABEL_19;
          }
        }
        uint64_t v10 = MEMORY[0x223C441C0](v7, v8);
        unint64_t v8 = *v0;
LABEL_19:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v0 = v8;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v8 & 0x8000000000000000) != 0
          || (v8 & 0x4000000000000000) != 0)
        {
          sub_21F127394(v8);
          unint64_t v8 = v12;
          *uint64_t v0 = v12;
        }
        *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v10;
        swift_release();
        sub_21F156F00();
        unint64_t v13 = *v0;
        int v14 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v0 = v13;
        if (!v14 || (v13 & 0x8000000000000000) != 0 || (v13 & 0x4000000000000000) != 0)
        {
          sub_21F127394(v13);
          unint64_t v13 = v15;
          *uint64_t v0 = v15;
        }
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v7 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_37;
        }
        *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v9;
        swift_release();
        sub_21F156F00();
LABEL_6:
        --v1;
        if (v3++ == v2) {
          return;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_21F157420();
      swift_bridgeObjectRelease();
    }
    while (v16 >= 2);
  }
}

void sub_21F104CB0()
{
  uint64_t v44 = *v0;
  unint64_t v1 = *(void *)(*v0 + 16);
  unint64_t v39 = v1 - 2;
  if (v1 >= 2)
  {
    unint64_t v2 = 0;
    while (1)
    {
      v45[0] = 0;
      MEMORY[0x223C45180](v45, 8);
      uint64_t v4 = (v45[0] * (unsigned __int128)v1) >> 64;
      if (v1 > v45[0] * v1)
      {
        unint64_t v5 = -(uint64_t)v1 % v1;
        if (v5 > v45[0] * v1)
        {
          do
          {
            v45[0] = 0;
            MEMORY[0x223C45180](v45, 8);
          }
          while (v5 > v45[0] * v1);
          uint64_t v4 = (v45[0] * (unsigned __int128)v1) >> 64;
        }
      }
      unint64_t v6 = v2 + v4;
      if (__OFADD__(v2, v4)) {
        break;
      }
      if (v2 != v6)
      {
        unint64_t v7 = *(void *)(v44 + 16);
        if (v2 >= v7) {
          goto LABEL_19;
        }
        if (v6 >= v7) {
          goto LABEL_20;
        }
        uint64_t v8 = v44 + 32 + 88 * v2;
        int v9 = *(_DWORD *)v8;
        uint64_t v10 = *(void *)(v8 + 48);
        uint64_t v11 = *(void *)(v8 + 56);
        unsigned __int8 v38 = *(unsigned char *)(v8 + 64);
        uint64_t v12 = *(void *)(v8 + 80);
        uint64_t v13 = v44 + 32 + 88 * v6;
        int v14 = *(_DWORD *)v13;
        uint64_t v37 = *(void *)(v13 + 8);
        uint64_t v15 = *(void *)(v13 + 24);
        uint64_t v33 = *(void *)(v13 + 16);
        uint64_t v16 = *(void *)(v13 + 40);
        uint64_t v31 = *(void *)(v8 + 72);
        uint64_t v32 = *(void *)(v13 + 32);
        uint64_t v40 = *(void *)(v13 + 56);
        uint64_t v41 = *(void *)(v13 + 48);
        unsigned __int8 v43 = *(unsigned char *)(v13 + 64);
        uint64_t v36 = *(void *)(v13 + 72);
        uint64_t v42 = *(void *)(v13 + 80);
        long long v29 = *(_OWORD *)(v8 + 24);
        long long v30 = *(_OWORD *)(v8 + 8);
        uint64_t v28 = *(void *)(v8 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = v11;
        uint64_t v27 = v10;
        sub_21F0FB9EC(v10, v11, v38);
        uint64_t v34 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v35 = v15;
        swift_bridgeObjectRetain();
        sub_21F0FB9EC(v41, v40, v43);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v44 = sub_21F105064(v44);
        }
        if (v2 >= *(void *)(v44 + 16)) {
          goto LABEL_21;
        }
        uint64_t v17 = v44 + 32 + 88 * v2;
        uint64_t v18 = *(void *)(v17 + 48);
        uint64_t v19 = *(void *)(v17 + 56);
        *(_DWORD *)uint64_t v17 = v14;
        *(void *)(v17 + 8) = v37;
        *(void *)(v17 + 16) = v33;
        *(void *)(v17 + 24) = v35;
        *(void *)(v17 + 32) = v32;
        *(void *)(v17 + 40) = v34;
        *(void *)(v17 + 48) = v41;
        *(void *)(v17 + 56) = v40;
        unsigned __int8 v20 = *(unsigned char *)(v17 + 64);
        *(unsigned char *)(v17 + 64) = v43;
        *(void *)(v17 + 72) = v36;
        *(void *)(v17 + 80) = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21F106448(v18, v19, v20);
        swift_bridgeObjectRelease();
        if (v6 >= *(void *)(v44 + 16)) {
          goto LABEL_22;
        }
        uint64_t v21 = v44 + 32 + 88 * v6;
        uint64_t v22 = *(void *)(v21 + 48);
        uint64_t v23 = *(void *)(v21 + 56);
        *(_DWORD *)uint64_t v21 = v9;
        *(_OWORD *)(v21 + 8) = v30;
        *(_OWORD *)(v21 + 24) = v29;
        *(void *)(v21 + 40) = v28;
        *(void *)(v21 + 48) = v27;
        *(void *)(v21 + 56) = v26;
        unsigned __int8 v24 = *(unsigned char *)(v21 + 64);
        *(unsigned char *)(v21 + 64) = v38;
        *(void *)(v21 + 72) = v31;
        *(void *)(v21 + 80) = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21F106448(v22, v23, v24);
        swift_bridgeObjectRelease();
        *uint64_t v25 = v44;
      }
      --v1;
      if (v2++ == v39) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_21F105028(void *a1)
{
  return sub_21F132FF8(0, a1[2], 0, a1);
}

uint64_t sub_21F10503C(void *a1)
{
  return sub_21F1333A4(0, a1[2], 0, a1);
}

uint64_t sub_21F105050(void *a1)
{
  return sub_21F133530(0, a1[2], 0, a1);
}

uint64_t sub_21F105064(uint64_t a1)
{
  return sub_21F1336D8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_21F105078(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1;
  }
  uint64_t v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  unint64_t v6 = v5 | (v4 << 16);
  unint64_t v7 = sub_21F1053CC(0xFuLL, a1, a2);
  unint64_t result = sub_21F1053CC(v6, a1, a2);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_21F156D40();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_21F157380();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_21F156D50();
        unint64_t v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_21F157380();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_40;
  }
  return 0;
}

unint64_t sub_21F1052B8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v10 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          unint64_t v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            int v7 = *(unsigned char *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_21F157380();
        unint64_t v5 = v12;
        if (v12 != v9) {
          goto LABEL_9;
        }
      }
      return v5 << 16;
    }
    uint64_t v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v8)
    {
      return MEMORY[0x270F9E998]();
    }
  }
  return result;
}

unint64_t sub_21F1053CC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_21F10546C(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_21F1052B8(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_21F10546C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_21F132C10(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F1054DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

char *sub_21F1055EC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F1056D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F105830()
{
  uint64_t v0 = (void *)sub_21F1566E0();
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_21F156CC0();
  uint64_t v4 = v3;

  sub_21F156DD0();
  objc_msgSend(v0, sel_code);
  sub_21F1575D0();
  sub_21F156DD0();

  swift_bridgeObjectRelease();
  type metadata accessor for PFLPluginError();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v4;
  return result;
}

uint64_t sub_21F1058FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_21F0FBDC0(a1, a2);
  }
  return a1;
}

uint64_t type metadata accessor for PFLPluginError()
{
  return self;
}

uint64_t sub_21F105934(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21F105998()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21F1059D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, v7, v8);
}

uint64_t sub_21F105A54(uint64_t a1, uint64_t a2)
{
  return sub_21F1069D4(&qword_267EBE568, a2, (void (*)(uint64_t))type metadata accessor for PFLPluginError);
}

uint64_t sub_21F105A9C(uint64_t a1, uint64_t a2)
{
  return sub_21F1069D4(&qword_267EBE570, a2, (void (*)(uint64_t))type metadata accessor for PFLPluginError);
}

unint64_t sub_21F105AEC()
{
  unint64_t result = qword_267EBE578;
  if (!qword_267EBE578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE578);
  }
  return result;
}

unint64_t sub_21F105B44()
{
  unint64_t result = qword_267EBE580;
  if (!qword_267EBE580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE580);
  }
  return result;
}

unint64_t sub_21F105B9C()
{
  unint64_t result = qword_267EBE588;
  if (!qword_267EBE588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE588);
  }
  return result;
}

unint64_t sub_21F105BF4()
{
  unint64_t result = qword_267EBE590;
  if (!qword_267EBE590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE590);
  }
  return result;
}

uint64_t sub_21F105C48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F105C98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  unint64_t v5 = *(void *)(v3 + 32);
  *a2 = v4;
  a2[1] = v5;
  return sub_21F1058FC(v4, v5);
}

uint64_t sub_21F105CE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for PFLPluginError(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PFLPluginError);
}

uint64_t dispatch thunk of PFLPluginError.__allocating_init(rawValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for PFLPluginConsent()
{
  return &type metadata for PFLPluginConsent;
}

uint64_t dispatch thunk of PFLTaskRunner.performCustomConsent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PFLTaskRunner.isDataAvailable()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_21F105E8C;
  return v7(a1, a2);
}

uint64_t sub_21F105E8C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of PFLTaskRunner.run(task:useCase:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_21F1060AC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F1060AC(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of PFLTaskRunner.performCustomTargeting(task:useCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PFLTaskRunner.shouldContinueAfterFailure(task:useCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t type metadata accessor for PFLTaskResult()
{
  return self;
}

uint64_t method lookup function for PFLTaskResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PFLTaskResult);
}

uint64_t dispatch thunk of PFLTaskResult.json.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PFLTaskResult.vector.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PFLTaskResult.debugInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PFLTaskResult.debugInfo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PFLTaskResult.debugInfo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PFLTaskResult.__allocating_init(json:vector:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t type metadata accessor for PFLPlugin()
{
  return self;
}

uint64_t method lookup function for PFLPlugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PFLPlugin);
}

uint64_t dispatch thunk of PFLPlugin.__allocating_init(plugin:useCase:consent:taskSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of PFLPlugin.run(context:runner:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 216) + **(int **)(*(void *)v2 + 216));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_21F105E8C;
  return v8(a1, a2);
}

uint64_t sub_21F106448(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_21F0FB9E0();
  }
  return result;
}

uint64_t sub_21F106460(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_21F106470(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F1064D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKPolicyRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F10653C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE640);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

char *sub_21F106648(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F106734(uint64_t a1)
{
  return a1;
}

char *sub_21F106760(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F10684C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE610);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F106958@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F10AA0C(a1, a2);
}

unint64_t sub_21F106978()
{
  unint64_t result = qword_267EBE630;
  if (!qword_267EBE630)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE630);
  }
  return result;
}

uint64_t sub_21F1069D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F106A1C()
{
  unint64_t result = qword_267EBE650;
  if (!qword_267EBE650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE650);
  }
  return result;
}

uint64_t sub_21F106A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PFLUtils.osVersion()()
{
  return _s24PrivateFederatedLearning8PFLUtilsO18sysctlStringByName4nameS2S_tFZ_0();
}

void static PFLUtils.deviceType()()
{
}

uint64_t sub_21F106B34(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v1 = sub_21F156AA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  unint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE740);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_21F156AD0();
  uint64_t v11 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21F156A40();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_21F156AB0();
  uint64_t v29 = *(void *)(v17 - 8);
  uint64_t v30 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F07740], v13);
  sub_21F156A50();
  uint64_t v20 = v16;
  uint64_t v21 = v32;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  sub_21F156AC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v21);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v28, v10, v21);
    sub_21F156A90();
    uint64_t v23 = *MEMORY[0x263F07870];
    unsigned __int8 v24 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v24(v7, v23, v1);
    v24(v5, *MEMORY[0x263F078A0], v1);
    uint64_t v32 = sub_21F156A60();
    LODWORD(v28) = v25;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v2 + 8);
    v26(v5, v1);
    v26(v7, v1);
    v24(v7, *MEMORY[0x263F07890], v1);
    v24(v5, v23, v1);
    sub_21F156A60();
    v26(v5, v1);
    v26(v7, v1);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v30);
    if (v28) {
      return 0;
    }
    else {
      return v32;
    }
  }
  return result;
}

void static PFLUtils.deviceClass()()
{
}

uint64_t static PFLUtils.deviceLocale()()
{
  uint64_t v0 = sub_21F1569B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21F156A30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F1569F0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07570], v0);
  sub_21F156970();
  uint64_t v8 = sub_21F156980();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  unint64_t v11 = sub_21F10B2B4(v8, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  v16[4] = v11;
  v16[5] = v13;
  v16[2] = 45;
  v16[3] = 0xE100000000000000;
  v16[0] = 95;
  v16[1] = 0xE100000000000000;
  sub_21F0FB854();
  uint64_t v14 = sub_21F157220();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t static PFLUtils.deviceLanguage()()
{
  uint64_t v0 = sub_21F156A10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267EBE540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F156A30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F1569F0();
  sub_21F156A20();
  sub_21F156A00();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v11 = sub_21F1569A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_21F0FC154((uint64_t)v6, (uint64_t *)&unk_267EBE540);
    uint64_t v13 = 0x6E776F6E6B6E7524;
  }
  else
  {
    uint64_t v13 = sub_21F156990();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t static PFLUtils.deviceRegion()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE538);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_21F156A30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F1569F0();
  sub_21F1569E0();
  uint64_t v7 = sub_21F1569D0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_21F0FC154((uint64_t)v2, &qword_267EBE538);
    uint64_t v9 = 0x6E776F6E6B6E7524;
  }
  else
  {
    uint64_t v9 = sub_21F156990();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_21F107688(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_21F107764;
  return v7(a2);
}

uint64_t sub_21F107764(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t static PFLUtils.rethrow<A>(_:for:)(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 32) = a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_21F107960;
  return v7(a1);
}

uint64_t sub_21F107960()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21F107A94, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21F107A94()
{
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = sub_21F156B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_267EBEF18);
  id v4 = v2;
  id v5 = v1;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = sub_21F156B70();
  os_log_type_t v9 = sub_21F157120();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[6];
  uint64_t v12 = (void *)v0[4];
  if (v10)
  {
    os_log_type_t type = v9;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    id v15 = v11;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v16;
    sub_21F1571F0();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    id v17 = v12;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v18;
    sub_21F1571F0();
    v14[1] = v18;

    _os_log_impl(&dword_21F0DC000, v8, type, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v14, -1, -1);
    MEMORY[0x223C45170](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v19 = (void *)v0[6];
  uint64_t v20 = (void *)v0[4];
  swift_willThrow();

  id v21 = v20;
  unint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t static PFLUtils.catchAndHandle<A>(for:handler:)(uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = a1();
  if (v3)
  {
    a3(v3);
    return swift_willThrow();
  }
  return result;
}

uint64_t static PFLUtils.throwIfFalse(error:for:)(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  id v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_21F107E58;
  return v5();
}

uint64_t sub_21F107E58(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F107F58, 0, 0);
}

uint64_t sub_21F107F58()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v2 = *(void **)(v0 + 16);
    swift_willThrow();
    id v3 = v2;
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static PFLUtils.isInternalDevice()()
{
  return os_variant_has_internal_content();
}

uint64_t static PFLUtils.language(locale:)()
{
  uint64_t v0 = sub_21F156A10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267EBE540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F156A20();
  sub_21F156A00();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_21F1569A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21F0FC154((uint64_t)v6, (uint64_t *)&unk_267EBE540);
    return 0x6E776F6E6B6E7524;
  }
  else
  {
    uint64_t v9 = sub_21F156990();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t static PFLUtils.region(locale:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE538);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F1569E0();
  uint64_t v3 = sub_21F1569D0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_21F0FC154((uint64_t)v2, &qword_267EBE538);
    return 0x6E776F6E6B6E7524;
  }
  else
  {
    uint64_t v5 = sub_21F156990();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5;
}

BOOL static PFLUtils.deviceUnlocked()()
{
  int v0 = MKBGetDeviceLockState();
  return !v0 || v0 == 3;
}

uint64_t sub_21F108348(void *a1, uint64_t a2)
{
  sub_21F144004(a2);
  if (!v2) {
    return swift_release();
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_21F156B90();
  __swift_project_value_buffer(v4, (uint64_t)qword_267EBEF18);
  id v5 = v2;
  id v6 = a1;
  id v7 = v2;
  id v8 = a1;
  uint64_t v9 = sub_21F156B70();
  os_log_type_t v10 = sub_21F157120();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412546;
    id v13 = v2;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    sub_21F1571F0();
    *uint64_t v12 = v14;

    *(_WORD *)(v11 + 12) = 2112;
    id v15 = a1;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    sub_21F1571F0();
    v12[1] = v18;

    _os_log_impl(&dword_21F0DC000, v9, v10, "Override error: %@ -> with %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v12, -1, -1);
    MEMORY[0x223C45170](v11, -1, -1);
  }
  else
  {
  }
  swift_willThrow();

  id v17 = a1;
  return swift_release();
}

uint64_t sub_21F1085B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v38 = a1;
  uint64_t v37 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F156720();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21F156820();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a2;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06E38], v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
  swift_bridgeObjectRetain();
  sub_21F1567F0();
  id v15 = v39;
  uint64_t v16 = sub_21F156830();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_21F156B90();
    __swift_project_value_buffer(v18, (uint64_t)qword_267EBEF18);
    id v19 = v15;
    id v20 = v38;
    id v21 = v38;
    id v22 = v15;
    id v23 = v20;
    unsigned __int8 v24 = sub_21F156B70();
    os_log_type_t v25 = sub_21F157120();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412546;
      id v28 = v15;
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v41 = v29;
      sub_21F1571F0();
      *uint64_t v27 = v29;

      *(_WORD *)(v26 + 12) = 2112;
      id v30 = v20;
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v41 = v31;
      sub_21F1571F0();
      v27[1] = v31;

      _os_log_impl(&dword_21F0DC000, v24, v25, "Override error: %@ -> with %@", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v27, -1, -1);
      MEMORY[0x223C45170](v26, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    id v36 = v20;
    return swift_release();
  }
  else
  {
    uint64_t v32 = v16;
    uint64_t v33 = v17;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t result = swift_release();
    uint64_t v35 = v37;
    uint64_t *v37 = v32;
    v35[1] = v33;
  }
  return result;
}

id static PFLUtils.rethrow<A>(_:for:)(void *a1, uint64_t (*a2)(void))
{
  id result = (id)a2();
  if (v2)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21F156B90();
    __swift_project_value_buffer(v5, (uint64_t)qword_267EBEF18);
    id v6 = v2;
    id v7 = a1;
    id v8 = v2;
    id v9 = a1;
    os_log_type_t v10 = sub_21F156B70();
    os_log_type_t v11 = sub_21F157120();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      id v14 = v2;
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      void *v13 = v15;

      *(_WORD *)(v12 + 12) = 2112;
      id v16 = a1;
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      v13[1] = v17;

      _os_log_impl(&dword_21F0DC000, v10, v11, "Override error: %@ -> with %@", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v13, -1, -1);
      MEMORY[0x223C45170](v12, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    return a1;
  }
  return result;
}

uint64_t static PFLUtils.throwIfFalse(error:for:)(void *a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if ((result & 1) == 0)
  {
    swift_willThrow();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t static PFLUtils.throwIfError(_:)(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result)
  {
    uint64_t v2 = (void *)result;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_21F156B90();
    __swift_project_value_buffer(v3, (uint64_t)qword_267EBEF18);
    id v4 = v2;
    id v5 = v2;
    id v6 = sub_21F156B70();
    os_log_type_t v7 = sub_21F157120();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      id v9 = (void *)swift_slowAlloc();
      *(_DWORD *)id v8 = 138412290;
      id v10 = v2;
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      *id v9 = v11;

      _os_log_impl(&dword_21F0DC000, v6, v7, "%@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v9, -1, -1);
      MEMORY[0x223C45170](v8, -1, -1);
    }
    else
    {
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t static PFLUtils.throwIfTimeout<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 32) = a2;
  *(double *)(v5 + 24) = a5;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F108EAC, 0, 0);
}

uint64_t sub_21F108EAC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_21F108FA8;
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x270FA22B8](v6);
}

uint64_t sub_21F108FA8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21F1090E4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21F1090E4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21F109148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  *(void *)(v6 + 56) = a5;
  *(double *)(v6 + 48) = a6;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = sub_21F1571C0();
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = *(void *)(v7 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE698);
  *(void *)(v6 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F109248, 0, 0);
}

uint64_t sub_21F109248()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = sub_21F156FD0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  v8[5] = v5;
  v8[6] = v4;
  swift_retain();
  v0[12] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE560);
  uint64_t v9 = sub_21F157010();
  sub_21F109850(v1, (uint64_t)&unk_267EBE7A0, (uint64_t)v8);
  sub_21F0FC154(v1, &qword_267EBE698);
  v7(v1, 1, 1, v6);
  id v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = v3;
  sub_21F109850(v1, (uint64_t)&unk_267EBE7B0, (uint64_t)v10);
  sub_21F0FC154(v1, &qword_267EBE698);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_21F109464;
  uint64_t v12 = v0[10];
  return MEMORY[0x270FA2048](v12, 0, 0, v9);
}

uint64_t sub_21F109464()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21F109708;
  }
  else {
    uint64_t v2 = sub_21F109578;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21F109578()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v1, v0[8]);
    sub_21F106A1C();
    swift_allocError();
    *uint64_t v4 = 5;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[2], v1, v2);
    sub_21F157000();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21F109708()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21F109774(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_21F0FB170;
  return v8(a1);
}

uint64_t sub_21F109850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE698);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F10CD48(a1, (uint64_t)v9);
  uint64_t v10 = sub_21F156FD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_21F0FC154((uint64_t)v9, &qword_267EBE698);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_21F156FA0();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_21F156FC0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  id v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    id v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_21F109A2C(double a1)
{
  *(double *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F109A4C, 0, 0);
}

uint64_t sub_21F109A4C(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270FA1FF0](a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_21F109B30;
  a1 = v3;
  return MEMORY[0x270FA1FF0](a1);
}

uint64_t sub_21F109B30()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_21F109C60, 0, 0);
  }
}

uint64_t sub_21F109C60()
{
  sub_21F106A1C();
  swift_allocError();
  *uint64_t v1 = 4;
  swift_willThrow();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t static PFLUtils.catchAndHandle<A>(for:handler:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5[2] = a4;
  v5[3] = a5;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_21F109DD0;
  return v9(a1);
}

uint64_t sub_21F109DD0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21F109F04, 0, 0);
  }
  else
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21F109F04()
{
  (*(void (**)(void))(v0 + 16))(*(void *)(v0 + 40));
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void static PFLUtils.runAsync<A>(work:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v21 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE560);
  uint64_t v6 = sub_21F157770();
  uint64_t v24 = sub_21F1571C0();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE698);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
  uint64_t v22 = a3;
  type metadata accessor for AsyncResult();
  swift_allocObject();
  uint64_t v14 = sub_21F10AE64();
  uint64_t v15 = sub_21F156FD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  id v16 = (void *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v23;
  v16[5] = a2;
  void v16[6] = v14;
  v16[7] = v13;
  swift_retain();
  swift_retain();
  uint64_t v17 = v13;
  sub_21F10A860((uint64_t)v12, (uint64_t)&unk_267EBE6A8, (uint64_t)v16);
  swift_release();
  sub_21F157160();
  uint64_t v18 = v14 + *(void *)(*(void *)v14 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v9, 1, v6) == 1)
  {
    sub_21F106A1C();
    swift_allocError();
    *id v19 = 5;
LABEL_4:
    swift_willThrow();
    swift_release();

    return;
  }
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_4;
  }
  swift_release();

  (*(void (**)(uint64_t, char *))(*(void *)(v22 - 8) + 32))(v21, v9);
}

uint64_t sub_21F10A2BC()
{
  return sub_21F10AE64();
}

uint64_t sub_21F10A2F0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  uint64_t v9 = *(void *)(*(void *)a6 + 80);
  v7[10] = v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE560);
  v7[11] = sub_21F157770();
  uint64_t v10 = sub_21F1571C0();
  v7[12] = v10;
  v7[13] = *(void *)(v10 - 8);
  v7[14] = swift_task_alloc();
  v7[15] = *(void *)(v9 - 8);
  uint64_t v11 = swift_task_alloc();
  v7[16] = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  v7[17] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_21F10A4C8;
  return v14(v11);
}

uint64_t sub_21F10A4C8()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21F10A728;
  }
  else {
    uint64_t v2 = sub_21F10A5DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21F10A5DC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[8];
  (*(void (**)(uint64_t, void, void))(v0[15] + 32))(v1, v0[16], v0[10]);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40))(v6, v1, v3);
  swift_endAccess();
  sub_21F157170();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_21F10A728()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = (void *)v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[8];
  *uint64_t v1 = v0[18];
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, void *, uint64_t))(v2 + 40))(v6, v1, v3);
  swift_endAccess();
  sub_21F157170();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_21F10A860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F156FD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21F156FC0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_21F0FC154(a1, &qword_267EBE698);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21F156FA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21F10AA0C@<X0>(unsigned int *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3 = *a1;
  if (sub_21F156630())
  {
    if (v3 > 0x7F)
    {
      int v7 = (v3 & 0x3F) << 8;
      if (v3 >= 0x800)
      {
        int v8 = (v7 | (v3 >> 6) & 0x3F) << 8;
        int v9 = (((v8 | (v3 >> 12) & 0x3F) << 8) | (v3 >> 18)) - 2122219023;
        unsigned int v4 = (v8 | (v3 >> 12)) + 8487393;
        if (HIWORD(v3)) {
          unsigned int v4 = v9;
        }
      }
      else
      {
        unsigned int v4 = (v7 | (v3 >> 6)) + 33217;
      }
    }
    else
    {
      unsigned int v4 = v3 + 1;
    }
    uint64_t v10 = (v4 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v4) >> 3))));
    uint64_t result = MEMORY[0x223C43BF0](&v10);
  }
  else
  {
    unint64_t v6 = 0xE100000000000000;
    uint64_t result = 95;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

Swift::Void __swiftcall inplaceSub(_:_:)(Swift::OpaquePointer *a1, Swift::OpaquePointer *a2)
{
  rawValue = a1->_rawValue;
  unint64_t v3 = *((void *)a1->_rawValue + 2);
  if (v3 >> 31)
  {
    sub_21F157400();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      rawValue = (void *)sub_21F103A90(0, v3, 0, rawValue);
    }
    a1->_rawValue = rawValue;
    cblas_saxpy_NEWLAPACK();
    swift_bridgeObjectRelease();
  }
}

uint64_t FloatingPoint.isNearlyEqual(to:absoluteTolerance:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  int v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int v9 = (char *)&v13 - v8;
  sub_21F157410();
  sub_21F157660();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, a3);
  char v11 = sub_21F156C40();
  v10(v9, a3);
  return v11 & 1;
}

uint64_t sub_21F10AD58()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE560);
  sub_21F157770();
  uint64_t v2 = sub_21F1571C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_21F10AE10()
{
  sub_21F10AD58();
  return swift_deallocClassInstance();
}

uint64_t sub_21F10AE64()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE560);
  uint64_t v2 = sub_21F157770();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_21F10AF18(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_21F10AFF4;
  return v6(a1);
}

uint64_t sub_21F10AFF4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_21F10B0EC()
{
}

uint64_t _s24PrivateFederatedLearning8PFLUtilsO18sysctlStringByName4nameS2S_tFZ_0()
{
  v5[1] = *MEMORY[0x263EF8340];
  v5[0] = 256;
  uint64_t v0 = sub_21F156F40();
  *(void *)(v0 + 16) = 256;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  uint64_t v1 = sub_21F156D20();
  sysctlbyname((const char *)(v1 + 32), (void *)(v0 + 32), v5, 0, 0);
  swift_release();
  uint64_t v3 = sub_21F0FB80C(v0, v2);
  swift_bridgeObjectRelease();
  return v3;
}

void sub_21F10B208()
{
}

void sub_21F10B228()
{
  uint64_t v0 = (void *)sub_21F156C90();
  uint64_t v1 = MGCopyAnswer();

  if (v1) {
    swift_dynamicCast();
  }
  else {
    __break(1u);
  }
}

unint64_t sub_21F10B2B4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  unint64_t result = sub_21F0F4868(64, 0xE100000000000000, v3, a2);
  if (v5) {
    return v3;
  }
  uint64_t v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v6 >= result >> 14)
  {
    sub_21F156D30();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F10B358(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  uint64_t v8 = *((void *)v2 + 4);
  double v9 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_21F10D204;
  return sub_21F109148(a1, a2, v7, v8, v6, v9);
}

uint64_t type metadata accessor for AsyncResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F10B444()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_21F10B494(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_21F0FB170;
  return sub_21F10A2F0(a1, v4, v5, v6, v7, v9, v8);
}

ValueMetadata *type metadata accessor for PFLUtils()
{
  return &type metadata for PFLUtils;
}

uint64_t sub_21F10B57C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE560);
  sub_21F157770();
  uint64_t result = sub_21F1571C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21F10B638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return MEMORY[0x270FA2498](sub_21F10B65C, 0, 0);
}

uint64_t sub_21F10B65C()
{
  uint64_t v1 = swift_task_alloc();
  int8x16_t v2 = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v3 + 160);
  uint64_t v4 = *(void *)(v3 + 168);
  *(void *)(v0 + 72) = v1;
  *(int8x16_t *)(v1 + 16) = v2;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *(void *)(v6 + 16) = &unk_267EBE768;
  *(void *)(v6 + 24) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE780);
  *uint64_t v7 = v0;
  v7[1] = sub_21F10B784;
  return MEMORY[0x270EE35A0](v0 + 16, v4, v5, &unk_267EBE778, v6, v8);
}

uint64_t sub_21F10B784()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int8x16_t v2 = sub_21F10B8C4;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    int8x16_t v2 = sub_21F10B8A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21F10B8A8()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_21F10B8C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  int8x16_t v2 = (void *)v0[12];
  uint64_t v3 = sub_21F156B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_267EBEF18);
  id v4 = v2;
  id v5 = v1;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = sub_21F156B70();
  os_log_type_t v9 = sub_21F157120();
  BOOL v10 = os_log_type_enabled(v8, v9);
  char v11 = (void *)v0[12];
  uint64_t v12 = (void *)v0[6];
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    id v15 = v11;
    uint64_t v24 = v8;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v16;
    sub_21F1571F0();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    id v17 = v12;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v18;
    sub_21F1571F0();
    v14[1] = v18;
    uint64_t v8 = v24;

    _os_log_impl(&dword_21F0DC000, v24, v9, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v14, -1, -1);
    MEMORY[0x223C45170](v13, -1, -1);
  }
  else
  {
  }
  id v19 = (void *)v0[12];
  uint64_t v20 = (void *)v0[6];

  swift_willThrow();
  id v21 = v20;
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_21F10BB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return MEMORY[0x270FA2498](sub_21F10BB8C, 0, 0);
}

uint64_t sub_21F10BB8C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v5 = swift_task_alloc();
  v0[8] = v5;
  *(void *)(v5 + 16) = v2;
  id v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE758);
  *id v6 = v0;
  v6[1] = sub_21F10BC88;
  return MEMORY[0x270EE35A0](v0 + 2, v3, v4, &unk_267EBE750, v5, v7);
}

uint64_t sub_21F10BC88()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_21F10BDC0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_21F10BDA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21F10BDA4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_21F10BDC0()
{
  swift_task_dealloc();
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void *)v0[10];
  uint64_t v3 = sub_21F156B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_267EBEF18);
  id v4 = v2;
  id v5 = v1;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = sub_21F156B70();
  os_log_type_t v9 = sub_21F157120();
  BOOL v10 = os_log_type_enabled(v8, v9);
  char v11 = (void *)v0[10];
  uint64_t v12 = (void *)v0[5];
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    id v15 = v11;
    uint64_t v24 = v8;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v16;
    sub_21F1571F0();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    id v17 = v12;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v18;
    sub_21F1571F0();
    v14[1] = v18;
    uint64_t v8 = v24;

    _os_log_impl(&dword_21F0DC000, v24, v9, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v14, -1, -1);
    MEMORY[0x223C45170](v13, -1, -1);
  }
  else
  {
  }
  id v19 = (void *)v0[10];
  uint64_t v20 = (void *)v0[5];

  swift_willThrow();
  id v21 = v20;
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

id sub_21F10C05C(void *a1)
{
  sub_21F1565C0();
  swift_allocObject();
  sub_21F1565B0();
  type metadata accessor for DodMLPolicy();
  sub_21F10C68C();
  sub_21F1565A0();
  if (v1)
  {
    swift_release();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_21F156B90();
    __swift_project_value_buffer(v3, (uint64_t)qword_267EBEF18);
    id v4 = v1;
    id v5 = a1;
    id v6 = v1;
    id v7 = a1;
    uint64_t v8 = sub_21F156B70();
    os_log_type_t v9 = sub_21F157120();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      char v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412546;
      id v12 = v1;
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      *char v11 = v13;

      *(_WORD *)(v10 + 12) = 2112;
      id v14 = a1;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      v11[1] = v16;

      _os_log_impl(&dword_21F0DC000, v8, v9, "Override error: %@ -> with %@", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v11, -1, -1);
      MEMORY[0x223C45170](v10, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    return a1;
  }
  else
  {
    swift_release();
    return (id)v17;
  }
}

id sub_21F10C310(void *a1)
{
  return sub_21F10C35C(a1);
}

id sub_21F10C35C(void *a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v2 = self;
  uint64_t v3 = (void *)sub_21F156880();
  v22[0] = 0;
  id v4 = objc_msgSend(v2, sel_JSONObjectWithData_options_error_, v3, 0, v22);

  id v5 = v22[0];
  if (v4)
  {
    sub_21F157250();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
    swift_dynamicCast();
    return v22[1];
  }
  else
  {
    id v7 = v5;
    uint64_t v8 = (void *)sub_21F1566F0();

    swift_willThrow();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_21F156B90();
    __swift_project_value_buffer(v9, (uint64_t)qword_267EBEF18);
    id v10 = v8;
    id v11 = a1;
    id v12 = v8;
    id v13 = a1;
    id v14 = sub_21F156B70();
    os_log_type_t v15 = sub_21F157120();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412546;
      id v18 = v8;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v23 = v19;
      sub_21F1571F0();
      *uint64_t v17 = v19;

      *(_WORD *)(v16 + 12) = 2112;
      id v20 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v23 = v21;
      sub_21F1571F0();
      v17[1] = v21;

      _os_log_impl(&dword_21F0DC000, v14, v15, "Override error: %@ -> with %@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v17, -1, -1);
      MEMORY[0x223C45170](v16, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    return a1;
  }
}

unint64_t sub_21F10C68C()
{
  unint64_t result = qword_267EBE738;
  if (!qword_267EBE738)
  {
    type metadata accessor for DodMLPolicy();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE738);
  }
  return result;
}

uint64_t sub_21F10C6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_21F0FB170;
  return sub_21F0FAD20(a1, a2, v6);
}

uint64_t sub_21F10C794(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_21F10C83C;
  return sub_21F0F9AF4(a1, v5, v4);
}

uint64_t sub_21F10C83C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_21F10C948(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_21F10D204;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_267EBE770 + dword_267EBE770);
  return v8(a1, a2, v6);
}

uint64_t sub_21F10CA10()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21F10CA48(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21F10D204;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_267EBE788 + dword_267EBE788);
  return v6(a1, v4);
}

uint64_t sub_21F10CB00()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21F10CB40(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 40);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21F10D204;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  size_t v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_21F0FB170;
  return v8(a1);
}

uint64_t sub_21F10CC64()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F10CC9C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_21F10D204;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_21F109A4C, 0, 0);
}

uint64_t sub_21F10CD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE698);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F10CDB0(unint64_t a1)
{
  unint64_t v32 = a1;
  v37[24] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_21F1569B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_21F156A30();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159D20;
  *(void *)(inited + 32) = 0x745F656369766564;
  *(void *)(inited + 40) = 0xEB00000000657079;
  sub_21F10B228();
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 0x6F5F656369766564;
  *(void *)(inited + 88) = 0xE900000000000073;
  v37[0] = 256;
  uint64_t v12 = sub_21F156F40();
  *(void *)(v12 + 16) = 256;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 112) = 0u;
  *(_OWORD *)(v12 + 128) = 0u;
  *(_OWORD *)(v12 + 144) = 0u;
  *(_OWORD *)(v12 + 160) = 0u;
  *(_OWORD *)(v12 + 176) = 0u;
  *(_OWORD *)(v12 + 192) = 0u;
  *(_OWORD *)(v12 + 208) = 0u;
  *(_OWORD *)(v12 + 224) = 0u;
  *(_OWORD *)(v12 + 240) = 0u;
  *(_OWORD *)(v12 + 256) = 0u;
  *(_OWORD *)(v12 + 272) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  sysctlbyname("kern.osversion", (void *)(v12 + 32), v37, 0, 0);
  uint64_t v14 = sub_21F0FB80C(v12, v13);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v14;
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 128) = 0x656C61636F6CLL;
  *(void *)(inited + 136) = 0xE600000000000000;
  sub_21F1569F0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F07570], v1);
  sub_21F156970();
  uint64_t v17 = sub_21F156980();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  unint64_t v20 = sub_21F10B2B4(v17, v19);
  size_t v22 = v21;
  swift_bridgeObjectRelease();
  v37[0] = v20;
  v37[1] = v22;
  uint64_t v35 = 45;
  unint64_t v36 = 0xE100000000000000;
  uint64_t v33 = 95;
  unint64_t v34 = 0xE100000000000000;
  sub_21F0FB854();
  uint64_t v23 = sub_21F157220();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
  unint64_t v26 = v32;
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 144) = v23;
  *(void *)(inited + 152) = v25;
  unint64_t v27 = sub_21F0FC1B0(inited);
  if (v26) {
    unint64_t v28 = v26;
  }
  else {
    unint64_t v28 = sub_21F0FC1B0(MEMORY[0x263F8EE78]);
  }
  swift_bridgeObjectRetain();
  return sub_21F0ECD1C(v28, v27);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

double sub_21F10D208@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F10D24C((SEL *)&selRef_objectForKey_, a1);
}

void sub_21F10D214(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

double sub_21F10D240@<D0>(_OWORD *a1@<X8>)
{
  return sub_21F10D24C((SEL *)&selRef_valueForKey_, a1);
}

double sub_21F10D24C@<D0>(SEL *a1@<X4>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)sub_21F156C90();
  id v7 = objc_msgSend(v5, *a1, v6);

  if (v7)
  {
    sub_21F157250();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void sub_21F10D2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_21F10D30C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  sub_21F10E4F8(a1, (uint64_t)v13, &qword_267EBE3F8);
  uint64_t v6 = v14;
  if (v14)
  {
    id v7 = __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v8 = *(void *)(v6 - 8);
    MEMORY[0x270FA5388](v7);
    uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = sub_21F1575F0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = (void *)sub_21F156C90();
  objc_msgSend(v4, *a4, v11, v12);
  swift_unknownObjectRelease();
}

void *sub_21F10D47C()
{
  id v1 = objc_allocWithZone(MEMORY[0x263F08C40]);
  uint64_t v2 = (void *)sub_21F156C90();
  id v3 = objc_msgSend(v1, sel_initWithStoreIdentifier_type_, v2, 1);

  v6[3] = sub_21F0FBF34(0, &qword_267EBE7C8);
  v6[4] = &off_26D0AD9A0;
  v6[0] = v3;
  sub_21F10E55C((uint64_t)v6, (uint64_t)(v0 + 2));
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  v0[10] = sub_21F0FBF34(0, qword_267EBE7D0);
  v0[11] = &off_26D0AD9B8;
  v0[7] = v4;
  return v0;
}

uint64_t sub_21F10D57C(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_21F156960();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = sub_21F10DE34(0x444972657355, 0xE600000000000000);
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
  }
  else
  {
    sub_21F156950();
    uint64_t v8 = sub_21F156940();
    uint64_t v9 = v10;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_21F10DCDC(0x444972657355, 0xE600000000000000, v8, v9);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE498);
  uint64_t inited = swift_initStackObject();
  uint64_t v12 = MEMORY[0x263F8D310];
  uint64_t v13 = MEMORY[0x263F8D378];
  *(_OWORD *)(inited + 16) = xmmword_21F159670;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v17 = a1;
  swift_bridgeObjectRetain();
  sub_21F10E330(inited);
  uint64_t v14 = sub_21F10D760(v17);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_21F10D760(uint64_t a1)
{
  uint64_t v2 = v1;
  v35[5] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_21F156CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v31 = v5;
    uint64_t v32 = v4;
    uint64_t v33 = v1;
    unint64_t v34 = (char *)MEMORY[0x263F8EE78];
    sub_21F132CAC(0, v8, 0);
    uint64_t v10 = a1 + 32;
    uint64_t v9 = v34;
    do
    {
      sub_21F105934(v10, (uint64_t)v35);
      __swift_project_boxed_opaque_existential_1(v35, v35[3]);
      uint64_t v11 = sub_21F1575D0();
      uint64_t v13 = v12;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F132CAC(0, *((void *)v9 + 2) + 1, 1);
        uint64_t v9 = v34;
      }
      unint64_t v15 = *((void *)v9 + 2);
      unint64_t v14 = *((void *)v9 + 3);
      if (v15 >= v14 >> 1)
      {
        sub_21F132CAC(v14 > 1, v15 + 1, 1);
        uint64_t v9 = v34;
      }
      *((void *)v9 + 2) = v15 + 1;
      uint64_t v16 = &v9[16 * v15];
      *((void *)v16 + 4) = v11;
      *((void *)v16 + 5) = v13;
      v10 += 40;
      --v8;
    }
    while (v8);
    uint64_t v4 = v32;
    uint64_t v2 = v33;
    uint64_t v5 = v31;
  }
  v35[0] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
  sub_21F10E49C();
  sub_21F156C20();
  swift_bridgeObjectRelease();
  sub_21F156CE0();
  uint64_t v17 = sub_21F156CD0();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v19 >> 60 == 15)
  {
    sub_21F0FB4FC();
    swift_allocError();
    *unint64_t v20 = 51;
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = sub_21F156F40();
    *(void *)(v22 + 16) = 32;
    *(_OWORD *)(v22 + 32) = 0u;
    *(_OWORD *)(v22 + 48) = 0u;
    unint64_t v34 = (char *)v22;
    switch(v19 >> 62)
    {
      case 1uLL:
        if (v17 >> 32 < (int)v17) {
          goto LABEL_31;
        }
        sub_21F1058FC(v17, v19);
        sub_21F1058FC(v17, v19);
        sub_21F10E260((int)v17, v17 >> 32, v19 & 0x3FFFFFFFFFFFFFFFLL, v17, v19, &v34);
        if (!v2) {
          goto LABEL_20;
        }
        goto LABEL_33;
      case 2uLL:
        uint64_t v24 = *(void *)(v17 + 16);
        uint64_t v25 = *(void *)(v17 + 24);
        sub_21F1058FC(v17, v19);
        sub_21F1058FC(v17, v19);
        swift_retain();
        swift_retain();
        sub_21F10E260(v24, v25, v19 & 0x3FFFFFFFFFFFFFFFLL, v17, v19, &v34);
        if (v2) {
          goto LABEL_34;
        }
        swift_release();
        swift_release();
        goto LABEL_20;
      case 3uLL:
        memset(v35, 0, 14);
        uint64_t v23 = (char *)v35;
        goto LABEL_16;
      default:
        v35[0] = v17;
        LOWORD(v35[1]) = v19;
        BYTE2(v35[1]) = BYTE2(v19);
        BYTE3(v35[1]) = BYTE3(v19);
        BYTE4(v35[1]) = BYTE4(v19);
        BYTE5(v35[1]) = BYTE5(v19);
        uint64_t v23 = (char *)v35 + BYTE6(v19);
LABEL_16:
        sub_21F10E0E4(v35, (uint64_t)v23, v17, v19, &v34);
        if (v2)
        {
          sub_21F0FB8A8(v17, v19);
LABEL_33:
          sub_21F0FB8A8(v17, v19);
          __break(1u);
LABEL_34:
          sub_21F0FB8A8(v17, v19);
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x21F10DCCCLL);
        }
        sub_21F0FB8A8(v17, v19);
LABEL_20:
        sub_21F0FB8A8(v17, v19);
        uint64_t v26 = *((void *)v34 + 2);
        if (!v26) {
          goto LABEL_27;
        }
        uint64_t v27 = 0;
        unint64_t v28 = 0;
        do
        {
          uint64_t v29 = v34[v27++ + 32];
          unint64_t v28 = v29 | (v28 << 8);
        }
        while (v26 != v27);
        sub_21F0FB8A8(v17, v19);
        swift_bridgeObjectRelease();
        double v30 = (double)v28 * 5.42101086e-20 * 10000.0;
        if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
          goto LABEL_30;
        }
        if (v30 <= -9.22337204e18)
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
        }
        if (v30 >= 9.22337204e18)
        {
          __break(1u);
LABEL_27:
          sub_21F0FB8A8(v17, v19);
          swift_bridgeObjectRelease();
          double v30 = 0.0;
        }
        uint64_t result = (uint64_t)v30;
        break;
    }
  }
  return result;
}

uint64_t sub_21F10DCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_21F10E4F8((uint64_t)(v4 + 2), (uint64_t)v18, &qword_267EBE7C0);
  uint64_t v9 = v19;
  uint64_t v10 = MEMORY[0x263F8D310];
  if (v19)
  {
    uint64_t v11 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v17[3] = v10;
    v17[0] = a3;
    v17[1] = a4;
    uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    v12(v17, a1, a2, v9, v11);
    uint64_t v10 = MEMORY[0x263F8D310];
    sub_21F0FC154((uint64_t)v17, &qword_267EBE3F8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    sub_21F0FC154((uint64_t)v18, &qword_267EBE7C0);
  }
  uint64_t v14 = v4[10];
  uint64_t v13 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v14);
  uint64_t v19 = v10;
  v18[0] = a3;
  v18[1] = a4;
  unint64_t v15 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  v15(v18, a1, a2, v14, v13);
  return sub_21F0FC154((uint64_t)v18, &qword_267EBE3F8);
}

unint64_t sub_21F10DE34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t)(v2 + 2);
  sub_21F10E4F8((uint64_t)(v2 + 2), (uint64_t)&v17, &qword_267EBE7C0);
  uint64_t v6 = v18;
  if (!v18)
  {
    sub_21F0FC154((uint64_t)&v17, &qword_267EBE7C0);
    unsigned long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_6;
  }
  uint64_t v7 = v19;
  __swift_project_boxed_opaque_existential_1(&v17, v18);
  (*(void (**)(unsigned long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(&v20, a1, a2, v6, v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v17);
  if (!*((void *)&v21 + 1))
  {
LABEL_6:
    sub_21F0FC154((uint64_t)&v20, &qword_267EBE3F8);
    goto LABEL_7;
  }
  if (swift_dynamicCast()) {
    return v17;
  }
LABEL_7:
  uint64_t v10 = v2[10];
  uint64_t v9 = v2[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(&v17, a1, a2, v10, v9);
  if (!v18)
  {
    sub_21F0FC154((uint64_t)&v17, &qword_267EBE3F8);
    return 0;
  }
  uint64_t v11 = MEMORY[0x263F8D310];
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unint64_t v12 = *((void *)&v20 + 1);
  unint64_t v8 = v20;
  sub_21F10E4F8(v5, (uint64_t)&v17, &qword_267EBE7C0);
  uint64_t v13 = v18;
  if (v18)
  {
    uint64_t v14 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, v18);
    *((void *)&v21 + 1) = v11;
    unsigned long long v20 = __PAIR128__(v12, v8);
    unint64_t v15 = *(void (**)(unsigned long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    v15(&v20, a1, a2, v13, v14);
    sub_21F0FC154((uint64_t)&v20, &qword_267EBE3F8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v17);
  }
  else
  {
    sub_21F0FC154((uint64_t)&v17, &qword_267EBE7C0);
  }
  return v8;
}

uint64_t sub_21F10E078()
{
  sub_21F0FC154(v0 + 16, &qword_267EBE7C0);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PopulationSegmentation()
{
  return self;
}

unsigned __int8 *sub_21F10E0E4(const void *a1, uint64_t a2, uint64_t a3, unint64_t a4, char **a5)
{
  LODWORD(v7) = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        sub_21F157400();
        __break(1u);
        JUMPOUT(0x21F10E250);
      }
      unint64_t v7 = HIDWORD(a3) - (int)a3;
LABEL_6:
      if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7)) {
        goto LABEL_13;
      }
LABEL_8:
      uint64_t v10 = *a5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a5 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v10 = sub_21F103490(0, *((void *)v10 + 2), 0, v10);
      }
      *a5 = v10;
      return CC_SHA256(a1, v7, (unsigned __int8 *)v10 + 32);
    case 2uLL:
      uint64_t v9 = *(void *)(a3 + 16);
      uint64_t v8 = *(void *)(a3 + 24);
      unint64_t v7 = v8 - v9;
      if (!__OFSUB__(v8, v9)) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      LODWORD(v7) = BYTE6(a4);
      goto LABEL_8;
  }
}

uint64_t sub_21F10E260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char **a6)
{
  uint64_t result = sub_21F156670();
  unint64_t v12 = (char *)result;
  if (result)
  {
    uint64_t result = sub_21F1566A0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_21F156690();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = &v12[v16];
  if (v12) {
    uint64_t v18 = (uint64_t)v17;
  }
  else {
    uint64_t v18 = 0;
  }
  sub_21F10E0E4(v12, v18, a4, a5, a6);
  return sub_21F0FB8BC(a4, a5);
}

uint64_t sub_21F10E330(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_21F10349C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4A0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

unint64_t sub_21F10E49C()
{
  unint64_t result = qword_267EBE7B8;
  if (!qword_267EBE7B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE7B8);
  }
  return result;
}

uint64_t sub_21F10E4F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F10E55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PerformanceMeasure.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x263F8EE80];
  return result;
}

uint64_t PerformanceMeasure.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = MEMORY[0x263F8EE80];
  return result;
}

uint64_t sub_21F10E608(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  double Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_21F10EFAC(a1, a2, isUniquelyReferenced_nonNull_native, Current);
  *(void *)(v2 + 16) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

double sub_21F10E6C0(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  double v6 = 0.0;
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_21F10E9C8(a1, a2);
    if (v8)
    {
      double v9 = *(double *)(*(void *)(v5 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double Current = CFAbsoluteTimeGetCurrent();
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      double v6 = Current - v9;
      uint64_t v11 = sub_21F156B90();
      __swift_project_value_buffer(v11, (uint64_t)qword_267EBEF18);
      swift_bridgeObjectRetain_n();
      sub_21F0FD068();
      sub_21F0FD068();
      BOOL v12 = sub_21F156B70();
      os_log_type_t v13 = sub_21F157110();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        v17[0] = v15;
        *(_DWORD *)uint64_t v14 = 136315650;
        swift_bridgeObjectRetain();
        sub_21F103FD0(a1, a2, v17);
        sub_21F1571F0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v14 + 12) = 1040;
        sub_21F1571F0();
        *(_WORD *)(v14 + 18) = 2048;
        sub_21F1571F0();
        _os_log_impl(&dword_21F0DC000, v12, v13, "⏲ Measure [%s]: %.*f sec", (uint8_t *)v14, 0x1Cu);
        swift_arrayDestroy();
        MEMORY[0x223C45170](v15, -1, -1);
        MEMORY[0x223C45170](v14, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      sub_21F10ED78(a1, a2);
      swift_endAccess();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v6;
}

uint64_t PerformanceMeasure.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PerformanceMeasure.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_21F10E9C8(uint64_t a1, uint64_t a2)
{
  sub_21F1576F0();
  sub_21F156D80();
  uint64_t v4 = sub_21F157710();
  return sub_21F10EA84(a1, a2, v4);
}

unint64_t sub_21F10EA40(uint64_t a1)
{
  uint64_t v2 = sub_21F1571A0();
  return sub_21F10EB68(a1, v2);
}

unint64_t sub_21F10EA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21F157600() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        os_log_type_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21F157600() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21F10EB68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_21F10F17C();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_21F1571B0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_21F1571B0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

double sub_21F10EC74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_21F10E9C8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21F126500();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_21F0ED188((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_21F126C74(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_21F10ED78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21F10E9C8(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F1266E8();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_21F126E4C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

_OWORD *sub_21F10EE58(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21F10E9C8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21F126500();
      goto LABEL_7;
    }
    sub_21F12587C(v15, a4 & 1);
    unint64_t v21 = sub_21F10E9C8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    double result = (_OWORD *)sub_21F157680();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_21F0ED188(a1, v19);
  }
LABEL_13:
  sub_21F127208(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_21F10EFAC(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21F10E9C8(a1, a2);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F1266E8();
    goto LABEL_7;
  }
  sub_21F125B7C(result, a3 & 1);
  uint64_t result = sub_21F10E9C8(a1, a2);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_21F157680();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_21F127274(v12, a1, a2, v18, a4);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PerformanceMeasure()
{
  return self;
}

uint64_t method lookup function for PerformanceMeasure(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PerformanceMeasure);
}

uint64_t dispatch thunk of PerformanceMeasure.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PerformanceMeasure.start(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of PerformanceMeasure.finish(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

unint64_t sub_21F10F17C()
{
  unint64_t result = qword_267EBE4C8;
  if (!qword_267EBE4C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EBE4C8);
  }
  return result;
}

uint64_t sub_21F10F1BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21F10E9C8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_21F126ABC();
    goto LABEL_7;
  }
  sub_21F1261E8(v15, a4 & 1);
  unint64_t v21 = sub_21F10E9C8(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_21F157680();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_21F127338(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F10F2FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_21F10E9C8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 168 * v12;
      long long v20 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v19 + 128) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v19 + 144) = v20;
      *(void *)(v19 + 160) = *(void *)(a1 + 160);
      long long v21 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v19 + 64) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v19 + 80) = v21;
      long long v22 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v19 + 96) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v19 + 112) = v22;
      long long v23 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v23;
      long long v24 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v19 + 48) = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_21F126898();
    goto LABEL_7;
  }
  sub_21F125E84(result, a4 & 1);
  uint64_t result = sub_21F10E9C8(a2, a3);
  if ((v16 & 1) != (v25 & 1))
  {
LABEL_15:
    uint64_t result = sub_21F157680();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_21F1272BC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F10F464()
{
  return swift_initClassMetadata2();
}

uint64_t *sub_21F10F4A8()
{
  sub_21F10F508(v0[2], v0[3], *(void *)(*v0 + 80));
  sub_21F1571D0();
  return v0;
}

uint64_t sub_21F10F508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    return a1;
  }
  uint64_t result = swift_arrayDestroy();
  if ((unsigned __int128)(a2 * (__int128)*(uint64_t *)(*(void *)(a3 - 8) + 72)) >> 64 == (a2
                                                                                            * *(void *)(*(void *)(a3 - 8) + 72)) >> 63)
    return a1;
  __break(1u);
  return result;
}

uint64_t sub_21F10F57C()
{
  sub_21F10F4A8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutoReleasingMutableBufferPointer()
{
  return __swift_instantiateGenericMetadata();
}

void static PFLTaskTargeting.ensureDNU()()
{
}

void static PFLTaskTargeting.ensureDeviceUnlocked()()
{
  sub_21F0FB4FC();
  uint64_t v0 = (void *)swift_allocError();
  *uint64_t v1 = 33;
  int v2 = MKBGetDeviceLockState();
  if (v2 != 3 && v2) {
    swift_willThrow();
  }
  else {
}
  }

void static PFLTaskTargeting.ensureIHA()()
{
}

void sub_21F10F688(char a1, SEL *a2)
{
  sub_21F0FB4FC();
  uint64_t v4 = (void *)swift_allocError();
  *uint64_t v5 = a1;
  id v6 = objc_msgSend(self, sel_sharedConnection);
  if (v6)
  {
    char v7 = v6;
    unsigned int v8 = [v6 *a2];

    if (v8) {
    else
    }
      swift_willThrow();
  }
  else
  {
    __break(1u);
  }
}

ValueMetadata *type metadata accessor for PFLTaskTargeting()
{
  return &type metadata for PFLTaskTargeting;
}

void sub_21F10F748(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, double a5)
{
  unint64_t v40 = a4;
  uint64_t v9 = sub_21F156930();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v29 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - v12;
  unint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  unint64_t v33 = 0xD000000000000010;
  unint64_t v34 = 0x800000021F15FC50;
  *(void *)&v32[0] = a1;
  *((void *)&v32[0] + 1) = a2;
  uint64_t v38 = 46;
  unint64_t v39 = 0xE100000000000000;
  uint64_t v36 = 95;
  unint64_t v37 = 0xE100000000000000;
  sub_21F0FB854();
  sub_21F157220();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  *(void *)&v32[0] = a3;
  *((void *)&v32[0] + 1) = v40;
  uint64_t v38 = 46;
  unint64_t v39 = 0xE100000000000000;
  uint64_t v36 = 95;
  unint64_t v37 = 0xE100000000000000;
  sub_21F157220();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  unint64_t v14 = v33;
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_standardUserDefaults);
  uint64_t v17 = (void *)sub_21F156C90();
  id v18 = objc_msgSend(v16, sel_valueForKey_, v17);

  unint64_t v40 = v14;
  if (v18)
  {
    sub_21F157250();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v32, 0, sizeof(v32));
  }
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  sub_21F10FD8C((uint64_t)v32, (uint64_t)&v33);
  if (v35)
  {
    if (swift_dynamicCast())
    {
      sub_21F156920();
      long long v21 = v29;
      sub_21F1568F0();
      sub_21F1568E0();
      double v23 = v22;
      long long v24 = *(void (**)(char *, uint64_t))(v20 + 8);
      v24(v21, v19);
      v24(v13, v19);
      if (v23 <= a5)
      {
        swift_bridgeObjectRelease();
        sub_21F0FB4FC();
        swift_allocError();
        *char v25 = 50;
        swift_willThrow();
        return;
      }
    }
  }
  else
  {
    sub_21F0ED4F0((uint64_t)&v33);
  }
  id v26 = objc_msgSend(v15, sel_standardUserDefaults);
  sub_21F156920();
  sub_21F156900();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v19);
  uint64_t v27 = (void *)sub_21F157030();
  unint64_t v28 = (void *)sub_21F156C90();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setValue_forKey_, v27, v28);
}

void sub_21F10FB60()
{
  v11[0] = 0xD000000000000013;
  v11[1] = 0x800000021F15F600;
  sub_21F156DD0();
  sub_21F156DD0();
  sub_21F156DD0();
  *(void *)&v10[0] = 46;
  *((void *)&v10[0] + 1) = 0xE100000000000000;
  uint64_t v12 = 95;
  unint64_t v13 = 0xE100000000000000;
  unint64_t v9 = sub_21F0FB854();
  uint64_t v8 = MEMORY[0x263F8D310];
  sub_21F157220();
  swift_bridgeObjectRelease();
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_standardUserDefaults, v8, v9, v9, v9, v10[0]);
  int v2 = (void *)sub_21F156C90();
  id v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_21F157250();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_21F10FD8C((uint64_t)v10, (uint64_t)v11);
  if (v11[3])
  {
    if (swift_dynamicCast())
    {
      uint64_t v4 = v12;
      goto LABEL_9;
    }
  }
  else
  {
    sub_21F0ED4F0((uint64_t)v11);
  }
  uint64_t v4 = 0;
LABEL_9:
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    id v5 = objc_msgSend(v0, sel_standardUserDefaults);
    id v6 = (void *)sub_21F157060();
    char v7 = (void *)sub_21F156C90();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setValue_forKey_, v6, v7);
  }
}

uint64_t sub_21F10FD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F10FDF4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v40 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v40;
  }
  uint64_t v2 = a1;
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_21F132CEC(0, v1, 0);
  uint64_t v40 = v41;
  unint64_t result = sub_21F11A020(v2);
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 64;
  uint64_t v27 = v2 + 80;
  int64_t v28 = v1;
  int v29 = v4;
  uint64_t v30 = v2 + 64;
  uint64_t v31 = v2;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v9 = result >> 6;
    if ((*(void *)(v6 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v32 = v5;
    uint64_t v33 = 1 << result;
    uint64_t v10 = (uint64_t *)(*(void *)(v2 + 48) + 16 * result);
    uint64_t v37 = *v10;
    uint64_t v39 = v10[1];
    uint64_t v11 = *(void *)(v2 + 56) + 88 * result;
    int v12 = *(_DWORD *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t v14 = *(void *)(v11 + 24);
    uint64_t v35 = *(void *)(v11 + 32);
    uint64_t v36 = *(void *)(v11 + 16);
    uint64_t v16 = *(void *)(v11 + 40);
    uint64_t v15 = *(void *)(v11 + 48);
    uint64_t v38 = v15;
    uint64_t v17 = *(void *)(v11 + 56);
    unsigned __int8 v18 = *(unsigned char *)(v11 + 64);
    int64_t v34 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F0FB9EC(v15, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F0FB9EC(v15, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F106448(v15, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F0FB9EC(v15, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F106448(v15, v17, v18);
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v20 = *(void *)(v41 + 16);
    unint64_t v19 = *(void *)(v41 + 24);
    if (v20 >= v19 >> 1) {
      unint64_t result = sub_21F132CEC(v19 > 1, v20 + 1, 1);
    }
    *(void *)(v41 + 16) = v20 + 1;
    uint64_t v21 = v41 + 88 * v20;
    *(_DWORD *)(v21 + 32) = v12;
    *(void *)(v21 + 40) = v13;
    *(void *)(v21 + 48) = v36;
    *(void *)(v21 + 56) = v14;
    *(void *)(v21 + 64) = v35;
    *(void *)(v21 + 72) = v16;
    *(void *)(v21 + 80) = v38;
    *(void *)(v21 + 88) = v17;
    *(unsigned char *)(v21 + 96) = v18;
    *(void *)(v21 + 104) = v37;
    *(void *)(v21 + 112) = v39;
    int64_t v7 = 1 << *(unsigned char *)(v31 + 32);
    if (v34 >= v7) {
      goto LABEL_25;
    }
    uint64_t v6 = v30;
    uint64_t v22 = *(void *)(v30 + 8 * v9);
    if ((v22 & v33) == 0) {
      goto LABEL_26;
    }
    uint64_t v2 = v31;
    int v4 = v29;
    if (*(_DWORD *)(v31 + 36) != v29) {
      goto LABEL_27;
    }
    unint64_t v23 = v22 & (-2 << (v34 & 0x3F));
    if (v23)
    {
      int64_t v7 = __clz(__rbit64(v23)) | v34 & 0xFFFFFFFFFFFFFFC0;
      int64_t v8 = v28;
    }
    else
    {
      unint64_t v24 = v9 + 1;
      unint64_t v25 = (unint64_t)(v7 + 63) >> 6;
      int64_t v8 = v28;
      if (v9 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v7 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v9)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v9++);
            if (v26)
            {
              unint64_t v24 = v9 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v5 = v32 + 1;
    unint64_t result = v7;
    if (v32 + 1 == v8) {
      return v40;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21F1101E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 32) = a2;
  int64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_21F1102C8;
  return v7(a1);
}

uint64_t sub_21F1102C8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21F11D004, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21F1103FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 32) = a2;
  int64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 40) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_21F1104DC;
  return v7(a1);
}

uint64_t sub_21F1104DC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_21F110610, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_21F110610()
{
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  int64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = sub_21F156B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_267EBEF18);
  id v4 = v2;
  id v5 = v1;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = sub_21F156B70();
  os_log_type_t v9 = sub_21F157120();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[6];
  int v12 = (void *)v0[4];
  if (v10)
  {
    os_log_type_t type = v9;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    id v15 = v11;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v16;
    sub_21F1571F0();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    id v17 = v12;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v18;
    sub_21F1571F0();
    v14[1] = v18;

    _os_log_impl(&dword_21F0DC000, v8, type, "Override error: %@ -> with %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v14, -1, -1);
    MEMORY[0x223C45170](v13, -1, -1);
  }
  else
  {
  }
  unint64_t v19 = (void *)v0[6];
  unint64_t v20 = (void *)v0[4];
  swift_willThrow();

  id v21 = v20;
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_21F1108A4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F1577A0();
  if (a4)
  {
    uint64_t v9 = a2;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    sub_21F11B3D4(&qword_267EBE930);
    sub_21F157640();
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_21F157630();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_21F1109C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_21F11A0A8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_21F1109F4(void *a1)
{
  return sub_21F1108A4(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_21F110A14()
{
  uint64_t result = 0x796C707061;
  switch(*v0)
  {
    case 1:
      uint64_t result = 28783;
      break;
    case 2:
      uint64_t result = 1752457584;
      break;
    case 3:
      uint64_t result = 0x65756C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F110A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F11A29C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F110AAC()
{
  return 0;
}

void sub_21F110AB8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21F110AC4(uint64_t a1)
{
  unint64_t v2 = sub_21F11CBF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F110B00(uint64_t a1)
{
  unint64_t v2 = sub_21F11CBF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F110B3C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEAE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11CBF0();
  sub_21F1577B0();
  sub_21F0FB914(v3, (uint64_t)v14, &qword_267EBEAE8);
  sub_21F0FB914((uint64_t)v14, (uint64_t)v11, &qword_267EBEAE8);
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEAC8);
  sub_21F11CC98(&qword_267EBEAF0, &qword_267EBEAC8, (void (*)(void))sub_21F11B158);
  sub_21F157570();
  if (!v2)
  {
    v11[0] = 1;
    sub_21F157560();
    v11[0] = 2;
    sub_21F157560();
    sub_21F0FB914(v3 + 40, (uint64_t)v13, &qword_267EBEAF8);
    sub_21F0FB914((uint64_t)v13, (uint64_t)v11, &qword_267EBEAF8);
    char v12 = 3;
    sub_21F11CD04();
    sub_21F157570();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_21F110DA0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_21F11A420(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_21F110DEC(void *a1)
{
  return sub_21F110B3C(a1);
}

uint64_t sub_21F110E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v83 = *MEMORY[0x263EF8340];
  unsigned int v9 = sub_21F13D9D8(16777217);
  float v10 = *(float *)v5;
  if (*(float *)v5 < (float)((float)((float)v9 * 0.000000059605) + 0.0))
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_21F156B90();
    __swift_project_value_buffer(v11, (uint64_t)qword_267EBEF18);
    sub_21F11B284(v5);
    sub_21F11B284(v5);
    char v12 = sub_21F156B70();
    os_log_type_t v13 = sub_21F157110();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(void *)&v79[0] = v15;
      *(_DWORD *)uint64_t v14 = 134218242;
      *(double *)uint64_t v73 = v10;
      sub_21F1571F0();
      *(_WORD *)(v14 + 12) = 2080;
      long long v16 = *(_OWORD *)(v5 + 48);
      *(_OWORD *)unint64_t v75 = *(_OWORD *)(v5 + 32);
      *(_OWORD *)&v75[16] = v16;
      long long v76 = *(_OWORD *)(v5 + 64);
      uint64_t v77 = *(void *)(v5 + 80);
      long long v17 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)uint64_t v73 = *(_OWORD *)v5;
      long long v74 = v17;
      sub_21F11B284(v5);
      uint64_t v18 = sub_21F156D00();
      v73[0] = sub_21F103FD0(v18, v19, (uint64_t *)v79);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F11B304(v5);
      sub_21F11B304(v5);
      _os_log_impl(&dword_21F0DC000, v12, v13, "Recipe targeting failed to target by sampling rate %f for recipe %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v15, -1, -1);
      MEMORY[0x223C45170](v14, -1, -1);
    }
    else
    {
      sub_21F11B304(v5);
      sub_21F11B304(v5);
    }

    sub_21F0FB4FC();
    swift_allocError();
    char v44 = 18;
LABEL_16:
    *unsigned __int8 v43 = v44;
    return swift_willThrow();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159D20;
  *(void *)(inited + 32) = 0x5F65636976656424;
  *(void *)(inited + 40) = 0xEA0000000000736FLL;
  v73[0] = 256;
  uint64_t v21 = sub_21F156F40();
  *(void *)(v21 + 16) = 256;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_OWORD *)(v21 + 64) = 0u;
  *(_OWORD *)(v21 + 80) = 0u;
  *(_OWORD *)(v21 + 96) = 0u;
  *(_OWORD *)(v21 + 112) = 0u;
  *(_OWORD *)(v21 + 128) = 0u;
  *(_OWORD *)(v21 + 144) = 0u;
  *(_OWORD *)(v21 + 160) = 0u;
  *(_OWORD *)(v21 + 176) = 0u;
  *(_OWORD *)(v21 + 192) = 0u;
  *(_OWORD *)(v21 + 208) = 0u;
  *(_OWORD *)(v21 + 224) = 0u;
  *(_OWORD *)(v21 + 240) = 0u;
  *(_OWORD *)(v21 + 256) = 0u;
  *(_OWORD *)(v21 + 272) = 0u;
  *(_OWORD *)(v21 + 32) = 0u;
  sysctlbyname("kern.osversion", (void *)(v21 + 32), v73, 0, 0);
  uint64_t v23 = sub_21F0FB80C(v21, v22);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v23;
  *(void *)(inited + 56) = v25;
  *(void *)(inited + 72) = v26;
  strcpy((char *)(inited + 80), "$device_type");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  sub_21F10B0EC();
  *(void *)(inited + 96) = v27;
  *(void *)(inited + 104) = v28;
  *(void *)(inited + 120) = v26;
  strcpy((char *)(inited + 128), "$dodml_dataset");
  *(void *)(inited + 168) = v26;
  *(unsigned char *)(inited + 143) = -18;
  *(void *)(inited + 144) = a1;
  *(void *)(inited + 152) = a2;
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_21F0FC1B0(inited);
  unint64_t v30 = sub_21F1505A4(a3);
  uint64_t v31 = (void *)sub_21F0ECD1C(v30, v29);
  sub_21F1565F0();
  swift_allocObject();
  sub_21F1565E0();
  long long v32 = *(_OWORD *)(v5 + 24);
  long long v80 = *(_OWORD *)(v5 + 8);
  long long v81 = v32;
  v82[0] = *(_OWORD *)(v5 + 40);
  *(_OWORD *)((char *)v82 + 9) = *(_OWORD *)(v5 + 49);
  long long v33 = *(_OWORD *)(v5 + 24);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)(v5 + 8);
  long long v74 = v33;
  *(_OWORD *)unint64_t v75 = *(_OWORD *)(v5 + 40);
  *(_OWORD *)&v75[9] = *(_OWORD *)(v5 + 49);
  sub_21F11B1AC((uint64_t)&v80);
  sub_21F11B158();
  uint64_t v34 = sub_21F1565D0();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_release();

    sub_21F11B218((uint64_t)&v80);
LABEL_8:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_21F156B90();
    __swift_project_value_buffer(v36, (uint64_t)qword_267EBEF18);
    sub_21F11B284(v5);
    sub_21F11B284(v5);
    uint64_t v37 = sub_21F156B70();
    os_log_type_t v38 = sub_21F157120();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(void *)&v79[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      *(_OWORD *)uint64_t v73 = v80;
      long long v74 = v81;
      *(_OWORD *)unint64_t v75 = v82[0];
      *(_OWORD *)&v75[9] = *(_OWORD *)((char *)v82 + 9);
      sub_21F11B1AC((uint64_t)&v80);
      uint64_t v41 = sub_21F156D00();
      v73[0] = sub_21F103FD0(v41, v42, (uint64_t *)v79);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      sub_21F11B304(v5);
      sub_21F11B304(v5);
      _os_log_impl(&dword_21F0DC000, v37, v38, "Failed to parse predicate %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v40, -1, -1);
      MEMORY[0x223C45170](v39, -1, -1);
    }
    else
    {
      sub_21F11B304(v5);
      sub_21F11B304(v5);
    }

    sub_21F0FB4FC();
    swift_allocError();
    char v44 = 19;
    goto LABEL_16;
  }
  uint64_t v46 = v34;
  unint64_t v47 = v35;
  sub_21F11B218((uint64_t)&v80);
  swift_release();
  unint64_t v48 = self;
  unint64_t v49 = (void *)sub_21F156880();
  v78[0] = 0;
  id v50 = objc_msgSend(v48, sel_JSONObjectWithData_options_error_, v49, 4, v78);

  id v51 = v78[0];
  if (!v50)
  {
    uint64_t v67 = v51;
    uint64_t v68 = (void *)sub_21F1566F0();

    swift_willThrow();
    sub_21F0FB8BC(v46, v47);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_21F157250();
  swift_unknownObjectRelease();
  sub_21F0ED188(v73, v79);
  sub_21F0ED61C((uint64_t)v79, (uint64_t)v73);
  v78[3] = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  v78[0] = v31;
  swift_bridgeObjectRetain();
  char v52 = sub_21F1303C8((uint64_t)v73, (uint64_t)v78);
  sub_21F0FC154((uint64_t)v73, &qword_267EBE3F8);
  sub_21F0FC154((uint64_t)v78, &qword_267EBE3F8);
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_21F156B90();
  __swift_project_value_buffer(v53, (uint64_t)qword_267EBEF18);
  sub_21F11B284(v5);
  sub_21F11B284(v5);
  sub_21F11B284(v5);
  sub_21F11B284(v5);
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_21F156B70();
  os_log_type_t v55 = sub_21F157110();
  if (os_log_type_enabled(v54, v55))
  {
    os_log_type_t type = v55;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v69 = (void *)swift_slowAlloc();
    v78[0] = v69;
    *(_DWORD *)uint64_t v56 = 67109890;
    LODWORD(v73[0]) = v52 & 1;
    sub_21F1571F0();
    *(_WORD *)(v56 + 8) = 2080;
    char v71 = v52;
    *(_OWORD *)uint64_t v73 = v80;
    long long v74 = v81;
    *(_OWORD *)unint64_t v75 = v82[0];
    *(_OWORD *)&v75[9] = *(_OWORD *)((char *)v82 + 9);
    sub_21F11B1AC((uint64_t)&v80);
    uint64_t v57 = sub_21F156D00();
    v73[0] = sub_21F103FD0(v57, v58, (uint64_t *)v78);
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    sub_21F11B304(v5);
    sub_21F11B304(v5);
    *(_WORD *)(v56 + 18) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_21F156BE0();
    unint64_t v72 = v47;
    unint64_t v61 = v60;
    swift_bridgeObjectRelease();
    v73[0] = sub_21F103FD0(v59, v61, (uint64_t *)v78);
    sub_21F1571F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 28) = 2080;
    long long v62 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)unint64_t v75 = *(_OWORD *)(v5 + 32);
    *(_OWORD *)&v75[16] = v62;
    long long v76 = *(_OWORD *)(v5 + 64);
    uint64_t v77 = *(void *)(v5 + 80);
    long long v63 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v5;
    long long v74 = v63;
    sub_21F11B284(v5);
    uint64_t v64 = sub_21F156D00();
    v73[0] = sub_21F103FD0(v64, v65, (uint64_t *)v78);
    sub_21F1571F0();
    unint64_t v47 = v72;
    swift_bridgeObjectRelease();
    sub_21F11B304(v5);
    sub_21F11B304(v5);
    _os_log_impl(&dword_21F0DC000, v54, type, "Recipe targeting %{BOOL}d, predicate: %s, subject: %s, recipe: %s", (uint8_t *)v56, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v69, -1, -1);
    MEMORY[0x223C45170](v56, -1, -1);

    if ((v71 & 1) == 0)
    {
LABEL_22:
      sub_21F0FB4FC();
      swift_allocError();
      *uint64_t v66 = 20;
      swift_willThrow();
      sub_21F0FB8BC(v46, v47);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
    }
  }
  else
  {
    sub_21F11B304(v5);
    sub_21F11B304(v5);
    swift_bridgeObjectRelease_n();
    sub_21F11B304(v5);
    sub_21F11B304(v5);

    if ((v52 & 1) == 0) {
      goto LABEL_22;
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
  return sub_21F0FB8BC(v46, v47);
}

uint64_t sub_21F111938(char *a1, char *a2)
{
  return sub_21F151170(*a1, *a2);
}

uint64_t sub_21F111944()
{
  return sub_21F157710();
}

uint64_t sub_21F1119D8()
{
  return sub_21F157710();
}

uint64_t sub_21F111A90()
{
  return sub_21F157710();
}

uint64_t sub_21F111B9C()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F111C1C()
{
  return sub_21F157710();
}

uint64_t sub_21F111CAC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE920);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11B0B0();
  sub_21F1577B0();
  long long v9 = *(_OWORD *)(v3 + 24);
  long long v12 = *(_OWORD *)(v3 + 8);
  long long v13 = v9;
  v14[0] = *(_OWORD *)(v3 + 40);
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)(v3 + 49);
  v11[15] = 0;
  sub_21F11B158();
  sub_21F1575B0();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_21F157590();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_21F111E38(void *a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE900);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11B05C();
  sub_21F1577B0();
  char v13 = 0;
  sub_21F1575A0();
  if (!v3)
  {
    char v12 = 1;
    sub_21F1575A0();
    char v11 = 2;
    sub_21F1575A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_21F111FD0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE8E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11B008();
  sub_21F1577B0();
  v8[15] = 0;
  sub_21F157580();
  if (!v1)
  {
    v8[14] = 1;
    sub_21F157580();
    v8[13] = 2;
    sub_21F157580();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_21F112158@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21F157480();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21F1121B8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7461636964657270;
  if (*v1) {
    uint64_t v2 = 0x676E696C706D6173;
  }
  unint64_t v3 = 0xE900000000000065;
  if (*v1) {
    unint64_t v3 = 0xED0000657461725FLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21F112208()
{
  if (*v0) {
    return 0x676E696C706D6173;
  }
  else {
    return 0x7461636964657270;
  }
}

uint64_t sub_21F112254@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21F157480();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21F1122B8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21F1122C4(uint64_t a1)
{
  unint64_t v2 = sub_21F11B0B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F112300(uint64_t a1)
{
  unint64_t v2 = sub_21F11B0B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_21F11233C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21F11A810(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21F112398(void *a1)
{
  return sub_21F111CAC(a1);
}

uint64_t sub_21F1123B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F110E30(a1, a2, a3);
}

uint64_t sub_21F1123FC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21F11242C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F151228(*a1, *a2);
}

uint64_t sub_21F112438()
{
  return sub_21F157710();
}

uint64_t sub_21F1124F0()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F112594()
{
  return sub_21F157710();
}

uint64_t sub_21F112648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F11AD28();
  *a1 = result;
  return result;
}

void sub_21F112680(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x800000021F15F080;
  unint64_t v4 = 0xEC00000073646E6FLL;
  uint64_t v5 = 0x6365735F656D6974;
  if (v2 != 1)
  {
    uint64_t v5 = 0x635F657069636572;
    unint64_t v4 = 0xEC000000746E756FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xD000000000000011;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_21F1126F4()
{
  uint64_t v1 = 0x6365735F656D6974;
  if (*v0 != 1) {
    uint64_t v1 = 0x635F657069636572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_21F112764@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F11AD28();
  *a1 = result;
  return result;
}

void sub_21F112794(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21F1127A0(uint64_t a1)
{
  unint64_t v2 = sub_21F11B05C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F1127DC(uint64_t a1)
{
  unint64_t v2 = sub_21F11B05C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F112818@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_21F11AB5C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_21F112848(void *a1)
{
  return sub_21F111E38(a1, *v1, v1[1]);
}

uint64_t sub_21F112868(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F151358(*a1, *a2);
}

uint64_t sub_21F112874()
{
  return sub_21F1119D8();
}

uint64_t sub_21F11287C()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F112920()
{
  return sub_21F1356B0();
}

uint64_t sub_21F112928@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F11AD28();
  *a1 = result;
  return result;
}

void sub_21F112960(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE00746E65746E6FLL;
  unint64_t v4 = 0x800000021F15F0C0;
  unint64_t v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000019;
    unint64_t v4 = 0x800000021F15F0E0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x635F7963696C6F70;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21F1129D4()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000019;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x635F7963696C6F70;
  }
}

uint64_t sub_21F112A44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F11AD28();
  *a1 = result;
  return result;
}

uint64_t sub_21F112A74(uint64_t a1)
{
  unint64_t v2 = sub_21F11B008();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F112AB0(uint64_t a1)
{
  unint64_t v2 = sub_21F11B008();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_21F112AEC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_21F11AD70(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_21F112B30(void *a1)
{
  return sub_21F111FD0(a1);
}

uint64_t sub_21F112B48(unsigned __int8 *a1, char *a2)
{
  return sub_21F1517B8(*a1, *a2);
}

uint64_t sub_21F112B54()
{
  return sub_21F111A90();
}

uint64_t sub_21F112B5C()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F112C50()
{
  return sub_21F135458();
}

uint64_t sub_21F112C58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F11CBA4();
  *a1 = result;
  return result;
}

void sub_21F112C88(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x73657069636572;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1953722216;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "return_routes");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000011;
      *(void *)(a1 + 8) = 0x800000021F15F120;
      break;
    case 4:
      strcpy((char *)a1, "policy_signing");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_21F112D58()
{
  unint64_t result = 0x73657069636572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1953722216;
      break;
    case 2:
      unint64_t result = 0x725F6E7275746572;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x735F7963696C6F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F112E18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F11CBA4();
  *a1 = result;
  return result;
}

void sub_21F112E40(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_21F112E4C(uint64_t a1)
{
  unint64_t v2 = sub_21F118B80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F112E88(uint64_t a1)
{
  unint64_t v2 = sub_21F118B80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F112EC4(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE898);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 120) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F118B80();
  sub_21F157790();
  if (v2)
  {
    type metadata accessor for DodMLPolicy();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE8A8);
    char v19 = 0;
    sub_21F118BD4();
    sub_21F157530();
    unint64_t v8 = sub_21F10FDF4(v15);
    swift_bridgeObjectRelease();
    *(void *)&long long v15 = v8;
    sub_21F104CB0();
    *(void *)(v1 + 16) = v15;
    LOBYTE(v15) = 1;
    *(void *)(v1 + 24) = sub_21F1574E0();
    *(void *)(v1 + 32) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    char v19 = 2;
    sub_21F11B3D4(&qword_267EBE8C0);
    sub_21F157530();
    *(void *)(v1 + 40) = v15;
    char v19 = 3;
    sub_21F119F78();
    sub_21F157530();
    uint64_t v10 = v16;
    *(_OWORD *)(v1 + 48) = v15;
    *(void *)(v1 + 64) = v10;
    char v19 = 4;
    sub_21F119FCC();
    sub_21F157530();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v12 = v16;
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    *(_OWORD *)(v1 + 72) = v15;
    *(_OWORD *)(v1 + 88) = v12;
    *(void *)(v1 + 104) = v13;
    *(void *)(v1 + 112) = v14;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

void sub_21F113264(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v1 + 16);
  if (v3 >= *(void *)(v4 + 16))
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v4 + 88 * v3;
    uint64_t v16 = *(void *)(v5 + 104);
    uint64_t v17 = *(void *)(v5 + 112);
    uint64_t v7 = *(void *)(v5 + 80);
    uint64_t v6 = *(void *)(v5 + 88);
    uint64_t v9 = *(void *)(v5 + 64);
    uint64_t v8 = *(void *)(v5 + 72);
    uint64_t v10 = *(void *)(v5 + 48);
    uint64_t v11 = *(void *)(v5 + 56);
    uint64_t v12 = *(void *)(v5 + 40);
    int v13 = *(_DWORD *)(v5 + 32);
    unsigned __int8 v14 = *(unsigned char *)(v5 + 96);
    *(void *)(v1 + 120) = v3 + 1;
    *(void *)(a1 + 24) = &type metadata for DodMLRecipeDescriptor;
    *(void *)(a1 + 32) = &off_26D0ADCD0;
    uint64_t v15 = swift_allocObject();
    *(void *)a1 = v15;
    *(_DWORD *)(v15 + 16) = v13;
    *(void *)(v15 + 24) = v12;
    *(void *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v11;
    *(void *)(v15 + 48) = v9;
    *(void *)(v15 + 56) = v8;
    *(void *)(v15 + 64) = v7;
    *(void *)(v15 + 72) = v6;
    *(unsigned char *)(v15 + 80) = v14;
    *(void *)(v15 + 88) = v16;
    *(void *)(v15 + 96) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F0FB9EC(v7, v6, v14);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_21F1133BC()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_21F156CF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0[13];
  unint64_t v8 = v2[14];
  type metadata accessor for PFLDodMLTaskValidator();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_21F150228(v7, v8);
  if (!v1)
  {
    uint64_t v10 = result;
    swift_bridgeObjectRetain();
    sub_21F156CE0();
    uint64_t v11 = sub_21F156CD0();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v14 = sub_21F0FB4FC();
    uint64_t v16 = (void *)swift_allocError();
    if (v13 >> 60 == 15)
    {
      *uint64_t v15 = 7;
      swift_willThrow();
    }
    else
    {
      unint64_t v28 = v14;
      *uint64_t v15 = 8;
      uint64_t v17 = *(void **)(v10 + 16);
      swift_bridgeObjectRetain();
      id v18 = v17;
      uint64_t v30 = v10;
      uint64_t v19 = v11;
      id v20 = v18;
      uint64_t v21 = (void *)sub_21F156C90();
      uint64_t v22 = sub_21F156880();
      unint64_t v29 = v13;
      uint64_t v23 = (void *)v22;
      unsigned int v24 = objc_msgSend(v20, sel_validateBase64Signature_data_, v21, v22);
      swift_bridgeObjectRelease();

      if (v24)
      {
        unint64_t v25 = v29;

        if (*(void *)(v2[2] + 16))
        {
          if ((uint64_t)v2[8] > 0)
          {
            sub_21F0FB8A8(v19, v25);
            return swift_release();
          }
          swift_allocError();
          char v27 = 17;
        }
        else
        {
          swift_allocError();
          char v27 = 16;
        }
        *uint64_t v26 = v27;
        swift_willThrow();
        sub_21F0FB8A8(v19, v25);
      }
      else
      {
        swift_willThrow();
        sub_21F0FB8A8(v19, v29);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_21F1136B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DodMLPolicy()
{
  return self;
}

uint64_t sub_21F11374C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEA08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F118B80();
  sub_21F1577B0();
  *(void *)&long long v14 = *(void *)(v3 + 16);
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEA10);
  sub_21F11CC98(&qword_267EBEA18, &qword_267EBEA10, (void (*)(void))sub_21F11BC8C);
  sub_21F1575B0();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    swift_bridgeObjectRetain();
    sub_21F157580();
    swift_bridgeObjectRelease();
    *(void *)&long long v14 = *(void *)(v3 + 40);
    char v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    sub_21F11B3D4(&qword_267EBE930);
    sub_21F1575B0();
    uint64_t v10 = *(void *)(v3 + 64);
    long long v14 = *(_OWORD *)(v3 + 48);
    *(void *)&long long v15 = v10;
    char v18 = 3;
    sub_21F11BCE0();
    sub_21F1575B0();
    long long v11 = *(_OWORD *)(v3 + 88);
    uint64_t v12 = *(void *)(v3 + 104);
    uint64_t v13 = *(void *)(v3 + 112);
    long long v14 = *(_OWORD *)(v3 + 72);
    long long v15 = v11;
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    char v18 = 4;
    sub_21F11BD34();
    sub_21F1575B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_21F113A4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for DodMLPolicy();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_21F112EC4(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_21F113AA4(void *a1)
{
  return sub_21F11374C(a1);
}

uint64_t sub_21F113AC8()
{
  return sub_21F1133BC();
}

uint64_t sub_21F113AEC()
{
  return *(void *)(*(void *)v0 + 64);
}

uint64_t sub_21F113AF8()
{
  uint64_t v0 = sub_21F127620();
  swift_release();
  return v0;
}

void *sub_21F113B30(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F0F508C(a1, a2, a3);
}

uint64_t sub_21F113B54()
{
  return sub_21F156EC0();
}

void sub_21F113BBC(uint64_t a1@<X8>)
{
}

uint64_t sub_21F113BE0(long long *a1, int a2)
{
  uint64_t v3 = v2;
  int v42 = a2;
  uint64_t v5 = sub_21F1569B0();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F156A30();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F157130();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_21F156BB0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_21F157140();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v41 = *a1;
  uint64_t v16 = *((void *)a1 + 2);
  uint64_t v39 = *((void *)a1 + 3);
  uint64_t v40 = v16;
  sub_21F11BDF0();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F138], v12);
  sub_21F156BA0();
  unint64_t v47 = MEMORY[0x263F8EE78];
  sub_21F11BE30(&qword_267EBEA40, 255, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEA48);
  sub_21F11BE78(&qword_267EBEA50, &qword_267EBEA48);
  sub_21F157270();
  *(void *)(v2 + 16) = sub_21F157150();
  uint64_t v17 = v34;
  sub_21F1569F0();
  uint64_t v19 = v35;
  uint64_t v18 = v36;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v7, *MEMORY[0x263F07570], v36);
  sub_21F156970();
  uint64_t v20 = sub_21F156980();
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
  unint64_t v23 = sub_21F10B2B4(v20, v22);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  unint64_t v47 = v23;
  uint64_t v48 = v25;
  uint64_t v45 = 45;
  unint64_t v46 = 0xE100000000000000;
  uint64_t v43 = 95;
  unint64_t v44 = 0xE100000000000000;
  sub_21F0FB854();
  uint64_t v26 = sub_21F157220();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  *(void *)(v3 + 24) = v26;
  *(void *)(v3 + 32) = v28;
  id v29 = objc_msgSend(self, sel_defaultSessionConfiguration);
  objc_msgSend(v29, sel_setAllowsCellularAccess_, 1);
  objc_msgSend(v29, sel_setNetworkServiceType_, 3);
  objc_msgSend(v29, sel_setAllowsCellularAccess_, v42 & 1);
  objc_msgSend(v29, sel_setAllowsExpensiveNetworkAccess_, 0);
  id v30 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v29, 0, 0);

  *(void *)(v3 + 40) = v30;
  *(_OWORD *)(v3 + 48) = v41;
  uint64_t v31 = v39;
  *(void *)(v3 + 64) = v40;
  *(void *)(v3 + 72) = v31;
  return v3;
}

uint64_t sub_21F11412C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 56) > 2uLL) {
    goto LABEL_4;
  }
  sub_21F1567E0();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_21F156820();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_21F0FC154((uint64_t)v5, &qword_267EBE730);
LABEL_4:
    sub_21F0FB4FC();
    swift_allocError();
    *uint64_t v8 = 4;
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
}

uint64_t sub_21F1142D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_21F156720();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_21F11412C(a3);
  if (!v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_21F159700;
    *(void *)(v13 + 32) = 12918;
    *(void *)(v13 + 40) = 0xE200000000000000;
    *(void *)(v13 + 48) = 0x7963696C6F70;
    *(void *)(v13 + 56) = 0xE600000000000000;
    *(void *)(v13 + 64) = a1;
    *(void *)(v13 + 72) = a2;
    uint64_t v14 = *(void *)(v3 + 32);
    *(void *)(v13 + 80) = *(void *)(v3 + 24);
    *(void *)(v13 + 88) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F10B208();
    *(void *)(v13 + 96) = v15;
    *(void *)(v13 + 104) = v16;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F06E50], v8);
    sub_21F0FB854();
    sub_21F1567D0();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_21F11448C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F156930();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F156820();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F1142D8(a1, a2, (uint64_t)v11);
  uint64_t v12 = sub_21F156730();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_21F156920();
  uint64_t v15 = sub_21F106B34((uint64_t)v7);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v20 = v12;
  uint64_t v21 = v14;
  sub_21F156DD0();
  uint64_t v19 = v15;
  sub_21F1575D0();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156DD0();
  uint64_t v19 = v17;
  sub_21F1575D0();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_21F1146D0(uint64_t a1, uint64_t a2)
{
  v3[36] = a2;
  v3[37] = v2;
  v3[35] = a1;
  type metadata accessor for PFLTaskPreferences(0);
  v3[38] = swift_task_alloc();
  uint64_t v4 = sub_21F156CF0();
  v3[39] = v4;
  v3[40] = *(void *)(v4 - 8);
  v3[41] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F1147C0, 0, 0);
}

uint64_t sub_21F1147C0()
{
  uint64_t v1 = (void *)v0[35];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  uint64_t v6 = v5;
  v0[42] = v4;
  v0[43] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[44] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_21F11489C;
  return sub_21F116B84(v4, v6);
}

uint64_t sub_21F11489C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 360) = a1;
  *(void *)(v3 + 368) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_21F115D78;
  }
  else {
    uint64_t v4 = sub_21F1149B0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_21F1149B0()
{
  uint64_t v120 = v0;
  uint64_t v1 = v0[45];
  if (!*(void *)(v1 + 16)
    || (unint64_t v2 = sub_21F10E9C8(0x735F657069636572, 0xEE00676E696E6769), (v3 & 1) == 0)
    || (uint64_t v4 = v0 + 27,
        uint64_t v5 = v0[45],
        sub_21F0ED61C(*(void *)(v5 + 56) + 32 * v2, (uint64_t)(v0 + 2)),
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE420),
        (swift_dynamicCast() & 1) == 0))
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_21F156B90();
    __swift_project_value_buffer(v15, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_21F156B70();
    os_log_type_t v17 = sub_21F157110();
    BOOL v18 = os_log_type_enabled(v16, v17);
    unint64_t v19 = v0[43];
    if (v18)
    {
      uint64_t v20 = v0[42];
      uint64_t v21 = swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      uint64_t v22 = v119;
      *(_DWORD *)uint64_t v21 = 136315394;
      swift_bridgeObjectRetain();
      v0[32] = sub_21F103FD0(v20, v19, &v119);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_21F156BE0();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      v0[30] = sub_21F103FD0(v23, v25, &v119);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v16, v17, "Failed to parse recipe %s signature or certificate in  %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v22, -1, -1);
      MEMORY[0x223C45170](v21, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_21F0FB4FC();
    uint64_t v27 = swift_allocError();
    char v28 = 11;
    goto LABEL_14;
  }
  os_log_type_t v118 = v0 + 23;
  uint64_t v117 = v0 + 25;
  uint64_t v6 = *v4;
  if (!*(void *)(*v4 + 16) || (unint64_t v7 = sub_21F10E9C8(0xD000000000000019, 0x800000021F15F0E0), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_21F156B90();
    __swift_project_value_buffer(v32, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_21F156B70();
    os_log_type_t v34 = sub_21F157110();
    BOOL v35 = os_log_type_enabled(v33, v34);
    unint64_t v36 = v0[43];
    if (v35)
    {
      uint64_t v37 = v0[42];
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v119 = v39;
      *(_DWORD *)uint64_t v38 = 136315394;
      swift_bridgeObjectRetain();
      v0[24] = sub_21F103FD0(v37, v36, &v119);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_21F156BE0();
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      v0[22] = sub_21F103FD0(v40, v42, &v119);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v33, v34, "Failed to parse recipe %s signature or certificate in  %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v39, -1, -1);
      MEMORY[0x223C45170](v38, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_21F0FB4FC();
    uint64_t v27 = swift_allocError();
    char v28 = 21;
LABEL_14:
    *uint64_t v26 = v28;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v29 = 4;
    *(void *)(v29 + 8) = v27;
    swift_willThrow();
    goto LABEL_15;
  }
  uint64_t v9 = v0[46];
  uint64_t v10 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
  uint64_t v116 = v0;
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  type metadata accessor for PFLDodMLTaskValidator();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_21F150228(v11, v12);
  v0[47] = v13;
  if (v9)
  {
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v14 = 4;
    *(void *)(v14 + 8) = v9;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    id v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  uint64_t v43 = v13;
  swift_bridgeObjectRelease();
  if (!*(void *)(v6 + 16)) {
    goto LABEL_31;
  }
  sub_21F10E9C8(0x635F657069636572, 0xEE00746E65746E6FLL);
  if ((v44 & 1) == 0 || !*(void *)(v6 + 16)) {
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  sub_21F10E9C8(0xD000000000000010, 0x800000021F15FD30);
  if ((v45 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v115 = v43;
  uint64_t v46 = v0[40];
  uint64_t v47 = v0[41];
  uint64_t v48 = v0[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_21F156CE0();
  uint64_t v49 = sub_21F156CD0();
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  v0[48] = v49;
  v0[49] = v51;
  unint64_t v52 = v51;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v48);
  if (v51 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    uint64_t v0 = v116;
LABEL_32:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_21F156B90();
    __swift_project_value_buffer(v53, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_21F156B70();
    os_log_type_t v55 = sub_21F157110();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v119 = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_21F156BE0();
      unint64_t v60 = v59;
      swift_bridgeObjectRelease();
      *os_log_type_t v118 = sub_21F103FD0(v58, v60, &v119);
      uint64_t v0 = v116;
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v54, v55, "Failed to encode recipe data in %s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v57, -1, -1);
      MEMORY[0x223C45170](v56, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_21F0FB4FC();
    uint64_t v61 = swift_allocError();
    *long long v62 = 22;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v63 = 4;
    *(void *)(v63 + 8) = v61;
    swift_willThrow();
    swift_release();
    goto LABEL_15;
  }
  sub_21F0FB4FC();
  uint64_t v64 = (void *)swift_allocError();
  *unint64_t v65 = 10;
  id v66 = *(id *)(v115 + 16);
  uint64_t v67 = (void *)sub_21F156C90();
  uint64_t v68 = (void *)sub_21F156880();
  unsigned __int8 v69 = objc_msgSend(v66, sel_validateBase64Signature_data_, v67, v68);

  unint64_t v70 = v52;
  if ((v69 & 1) == 0)
  {
    uint64_t v0 = v116;
    swift_willThrow();
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v74 = 4;
    *(void *)(v74 + 8) = v64;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F0FB8A8(v49, v70);
    goto LABEL_15;
  }
  uint64_t v114 = v49;

  swift_bridgeObjectRelease();
  if (!*(void *)(v1 + 16)
    || (unint64_t v71 = sub_21F10E9C8(0x657069636572, 0xE600000000000000), (v72 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(v5 + 56) + 32 * v71, (uint64_t)(v116 + 18)),
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0),
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_21F156B90();
    __swift_project_value_buffer(v75, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    long long v76 = sub_21F156B70();
    os_log_type_t v77 = sub_21F157110();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 136315138;
      uint64_t v119 = v79;
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_21F156BE0();
      unint64_t v82 = v81;
      swift_bridgeObjectRelease();
      *uint64_t v117 = sub_21F103FD0(v80, v82, &v119);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v76, v77, "Failed to parse 'recipe' in %s", v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v79, -1, -1);
      MEMORY[0x223C45170](v78, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v83 = swift_allocError();
    unsigned char *v84 = 23;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v85 = 4;
    *(void *)(v85 + 8) = v83;
    swift_willThrow();
    uint64_t v86 = v49;
    unint64_t v87 = v52;
    goto LABEL_50;
  }
  v116[50] = v116[26];
  type metadata accessor for FederatedBuffer();
  swift_allocObject();
  uint64_t v73 = swift_bridgeObjectRetain();
  v116[51] = sub_21F11D6A0(v73);
  if (!*(void *)(v1 + 16)
    || (unint64_t v88 = sub_21F10E9C8(0x6465686361747461, 0xEE0073656C69665FLL), (v89 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(v5 + 56) + 32 * v88, (uint64_t)(v116 + 14)),
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_65:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_21F156B90();
    __swift_project_value_buffer(v103, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_21F156B70();
    os_log_type_t v105 = sub_21F157110();
    if (os_log_type_enabled(v104, v105))
    {
      unint64_t v106 = (uint8_t *)swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      *(_DWORD *)unint64_t v106 = 136315138;
      uint64_t v119 = v107;
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_21F156BE0();
      unint64_t v110 = v109;
      swift_bridgeObjectRelease();
      v116[28] = sub_21F103FD0(v108, v110, &v119);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v104, v105, "Failed to parase attachments in recipe %s", v106, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v107, -1, -1);
      MEMORY[0x223C45170](v106, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v111 = swift_allocError();
    *uint64_t v112 = 24;
    sub_21F0FBD54();
    swift_allocError();
    *(unsigned char *)uint64_t v113 = 5;
    *(void *)(v113 + 8) = v111;
    swift_willThrow();
    swift_release();
    uint64_t v86 = v114;
    unint64_t v87 = v52;
LABEL_50:
    sub_21F0FB8A8(v86, v87);
    swift_release();
    uint64_t v0 = v116;
    goto LABEL_15;
  }
  uint64_t v90 = v116[29];
  v116[52] = v90;
  if (!*(void *)(v1 + 16)
    || (unint64_t v91 = sub_21F10E9C8(0xD000000000000014, 0x800000021F15FD50), (v92 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(v5 + 56) + 32 * v91, (uint64_t)(v116 + 10)), (swift_dynamicCast() & 1) == 0))
  {
LABEL_71:
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  uint64_t v93 = v116[31];
  v116[53] = v93;
  if (!*(void *)(v1 + 16) || (unint64_t v94 = sub_21F10E9C8(0xD000000000000019, 0x800000021F15FD70), (v95 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  sub_21F0ED61C(*(void *)(v5 + 56) + 32 * v94, (uint64_t)(v116 + 6));
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  uint64_t v96 = v116[33];
  v116[54] = v96;
  uint64_t v97 = *(void *)(v90 + 16);
  if (v97 != *(void *)(v93 + 16) || v97 != *(void *)(v96 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  uint64_t v98 = v116[37];
  swift_bridgeObjectRelease();
  type metadata accessor for PFLTaskStorage();
  swift_allocObject();
  uint64_t v99 = sub_21F142274();
  v116[55] = v99;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE988);
  unint64_t v100 = (void *)swift_task_alloc();
  v116[56] = v100;
  v100[2] = v90;
  v100[3] = v93;
  v100[4] = v96;
  v100[5] = v98;
  v100[6] = v115;
  v100[7] = v99;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE9A0);
  unint64_t v102 = (void *)swift_task_alloc();
  v116[57] = v102;
  *unint64_t v102 = v116;
  v102[1] = sub_21F115E34;
  uint64_t v122 = v101;
  return MEMORY[0x270FA22B8](v116 + 34);
}

uint64_t sub_21F115D78()
{
  uint64_t v1 = *(void *)(v0 + 368);
  sub_21F0FBD54();
  swift_allocError();
  *(unsigned char *)uint64_t v2 = 4;
  *(void *)(v2 + 8) = v1;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  char v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_21F115E34()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_21F1160A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_21F115F50;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21F115F50()
{
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 384);
  unint64_t v11 = *(void *)(v0 + 392);
  long long v10 = *(_OWORD *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 272);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F0F0BA4(v5, v4);
  type metadata accessor for PFLTask();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 40) = v6;
  *(void *)(v7 + 48) = 0;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v2;
  sub_21F11B784(v4, v7 + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences);
  *(void *)(v7 + 48) = v1;
  swift_release();
  swift_release();
  sub_21F0FB8A8(v3, v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  char v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_21F1160A0()
{
  uint64_t v1 = v0[58];
  unint64_t v6 = v0[49];
  uint64_t v2 = v0[48];
  swift_task_dealloc();
  sub_21F0FBD54();
  swift_allocError();
  *(unsigned char *)uint64_t v3 = 5;
  *(void *)(v3 + 8) = v1;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F0FB8A8(v2, v6);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_21F1161D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_21F156590();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_21F156820();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F116308, 0, 0);
}

uint64_t sub_21F116308()
{
  sub_21F1142D8(v0[6], v0[7], v0[15]);
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16))(v0[14], v0[15], v0[12]);
  sub_21F156580();
  v0[16] = sub_21F0FB4FC();
  uint64_t v3 = swift_allocError();
  v0[17] = v3;
  *uint64_t v4 = 6;
  uint64_t v5 = swift_task_alloc();
  v0[18] = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_267EBE968 + dword_267EBE968);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_21F1164D0;
  return v8((uint64_t)(v0 + 2), v3, (int *)&unk_267EBE978);
}

uint64_t sub_21F1164D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = sub_21F116864;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_21F116618;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21F116618()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 40);
  unint64_t v6 = *(void *)(v0 + 24);

  uint64_t v7 = (void *)swift_allocError();
  *uint64_t v8 = 13;
  *(void *)(v5 + 24) = type metadata accessor for DodMLPolicy();
  *(void *)(v5 + 32) = sub_21F11BE30(&qword_267EBE980, v9, (void (*)(uint64_t))type metadata accessor for DodMLPolicy);
  sub_21F0FBDC0(v1, v6);
  id v25 = v7;
  id v10 = sub_21F10C05C(v7);
  unint64_t v11 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v12 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v13 = *(void *)(v0 + 120);
  if (v2)
  {
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v24 = *(void *)(v0 + 40);
    sub_21F0FB8BC(v1, v6);
    (*v11)(v13, v14);
    sub_21F0FB8BC(v1, v6);
    (*v12)(v15, v16);

    __swift_deallocate_boxed_opaque_existential_1(v24);
  }
  else
  {
    id v18 = v10;
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v21 = *(void **)(v0 + 40);
    sub_21F0FB8BC(v1, v6);
    *uint64_t v21 = v18;
    (*v11)(v13, v19);
    sub_21F0FB8BC(v1, v6);
    (*v12)(v20, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_21F116864()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21F116928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_21F11694C, 0, 0);
}

uint64_t sub_21F11694C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21F1169F0;
  uint64_t v2 = *(void *)(v0 + 32);
  return MEMORY[0x270EF1EB0](v2, 0);
}

uint64_t sub_21F1169F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  uint64_t v9 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    id v10 = (uint64_t (*)(void))v9[1];
    return v10();
  }
  else
  {
    v8[6] = a3;
    v8[7] = a2;
    v8[8] = a1;
    return MEMORY[0x270FA2498](sub_21F116B54, 0, 0);
  }
}

uint64_t sub_21F116B54()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(int8x16_t **)(v0 + 16);
  int8x16_t *v2 = vextq_s8(*(int8x16_t *)(v0 + 56), *(int8x16_t *)(v0 + 56), 8uLL);
  v2[1].i64[0] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F116B84(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_21F156590();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = sub_21F156720();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v6 = sub_21F156820();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F116D10, 0, 0);
}

uint64_t sub_21F116D10()
{
  sub_21F11412C(v0[17]);
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v15 = v0[14];
  uint64_t v16 = v0[10];
  uint64_t v7 = v0[6];
  uint64_t v17 = v0[7];
  uint64_t v8 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21F159660;
  *(void *)(v9 + 32) = 12918;
  *(void *)(v9 + 40) = 0xE200000000000000;
  *(void *)(v9 + 48) = 0x657069636572;
  *(void *)(v9 + 56) = 0xE600000000000000;
  *(void *)(v9 + 64) = 0x73746E65746E6F63;
  *(void *)(v9 + 72) = 0xE800000000000000;
  *(void *)(v9 + 80) = v8;
  *(void *)(v9 + 88) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, *MEMORY[0x263F06E50], v6);
  sub_21F0FB854();
  swift_bridgeObjectRetain();
  sub_21F1567D0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v15);
  sub_21F156580();
  v0[18] = sub_21F0FB4FC();
  uint64_t v10 = swift_allocError();
  v0[19] = v10;
  *unint64_t v11 = 9;
  uint64_t v12 = swift_task_alloc();
  v0[20] = v12;
  *(void *)(v12 + 16) = v17;
  *(void *)(v12 + 24) = v16;
  id v18 = (char *)&dword_267EBE968 + dword_267EBE968;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[21] = v13;
  void *v13 = v0;
  v13[1] = sub_21F116FE8;
  return ((uint64_t (*)(void *, uint64_t, void *, uint64_t))v18)(v0 + 2, v10, &unk_267EBE960, v12);
}

uint64_t sub_21F116FE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = sub_21F117364;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_21F117130;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21F117130()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 176);
  unint64_t v3 = *(void *)(v0 + 24);

  uint64_t v4 = (void *)swift_allocError();
  *uint64_t v5 = 15;
  sub_21F0FBDC0(v1, v3);
  id v6 = sub_21F10C310(v4);
  uint64_t v7 = *(void *)(v0 + 136);
  if (v2)
  {
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 64);
    sub_21F0FB8BC(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    sub_21F0FB8BC(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v11);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 64);
    id v21 = v6;
    sub_21F0FB8BC(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, v15);
    sub_21F0FB8BC(v1, v3);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(id))(v0 + 8);
    return v19(v21);
  }
}

uint64_t sub_21F117364()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21F117434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_21F117458, 0, 0);
}

uint64_t sub_21F117458()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21F1174FC;
  uint64_t v2 = *(void *)(v0 + 32);
  return MEMORY[0x270EF1EB0](v2, 0);
}

uint64_t sub_21F1174FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  uint64_t v9 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v10 = (uint64_t (*)(void))v9[1];
    return v10();
  }
  else
  {
    v8[6] = a3;
    v8[7] = a2;
    v8[8] = a1;
    return MEMORY[0x270FA2498](sub_21F11CFF8, 0, 0);
  }
}

uint64_t sub_21F117660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE938);
  v4[7] = swift_task_alloc();
  uint64_t v5 = sub_21F156590();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_21F156820();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F1177F4, 0, 0);
}

uint64_t sub_21F1177F4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  sub_21F1567E0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_21F0FC154(v0[11], &qword_267EBE730);
    sub_21F0FB4FC();
    swift_allocError();
    *uint64_t v4 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v8 = v0[14];
    uint64_t v7 = v0[15];
    uint64_t v9 = v0[12];
    uint64_t v10 = v0[13];
    uint64_t v12 = v0[10];
    uint64_t v11 = v0[11];
    uint64_t v13 = v0[5];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v0[16] = v14;
    v0[17] = (v10 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v14(v7, v11, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    sub_21F156580();
    sub_21F0FB4FC();
    uint64_t v15 = swift_allocError();
    v0[18] = v15;
    *uint64_t v16 = 12;
    uint64_t v17 = swift_task_alloc();
    v0[19] = v17;
    *(void *)(v17 + 16) = v13;
    *(void *)(v17 + 24) = v12;
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_267EBE950 + dword_267EBE950);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[20] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_21F117A60;
    uint64_t v19 = v0[7];
    return v20(v19, v15, (int *)&unk_267EBE948);
  }
}

uint64_t sub_21F117A60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = sub_21F117CC0;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_21F117BA8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_21F117BA8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[2];
  (*(void (**)(void, uint64_t))(v0[13] + 8))(v0[15], v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  v1(v8, v6, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_21F117CC0()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21F117DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_21F117DC4, 0, 0);
}

uint64_t sub_21F117DC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21F117E6C;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return MEMORY[0x270EF1ED8](v3, v2, 0);
}

uint64_t sub_21F117E6C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    *(_DWORD *)(v4 + 56) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267EBE938) + 48);
    return MEMORY[0x270FA2498](sub_21F117FCC, 0, 0);
  }
}

uint64_t sub_21F117FCC()
{
  *(void *)(*(void *)(v0 + 16) + *(int *)(v0 + 56)) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F117FF4()
{
  swift_bridgeObjectRelease();
  sub_21F0FC0C4(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLDodMLTaskDownloader()
{
  return self;
}

uint64_t destroy for PolicySigning()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PolicySigning(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PolicySigning(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for PolicySigning(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PolicySigning(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PolicySigning(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PolicySigning()
{
  return &type metadata for PolicySigning;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EvaluationLimits(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EvaluationLimits(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EvaluationLimits()
{
  return &type metadata for EvaluationLimits;
}

uint64_t destroy for DodMLRecipeDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 64) != 255) {
    sub_21F0FB9E0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DodMLRecipeDescriptor(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    char v7 = v6 & 1;
    uint64_t v8 = *(void *)(a2 + 48);
    uint64_t v9 = *(void *)(a2 + 56);
    sub_21F0FBA04();
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v9;
    *(unsigned char *)(a1 + 64) = v7;
  }
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DodMLRecipeDescriptor(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 48);
  uint64_t v5 = (long long *)(a2 + 48);
  int v6 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *uint64_t v4 = v8;
    }
    else
    {
      char v12 = v6 & 1;
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v14 = *(void *)(a2 + 56);
      sub_21F0FBA04();
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      *(unsigned char *)(a1 + 64) = v12;
    }
  }
  else if (v6 == 255)
  {
    sub_21F11859C(a1 + 48);
    char v7 = *(unsigned char *)(a2 + 64);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 64) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    sub_21F0FBA04();
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(unsigned char *)(a1 + 64) = v9;
    sub_21F0FB9E0();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F11859C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DodMLRecipeDescriptor(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  int v6 = (_OWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 64) != 255)
  {
    int v7 = *(unsigned __int8 *)(a2 + 64);
    if (v7 != 255)
    {
      *(_OWORD *)(a1 + 48) = *v6;
      *(unsigned char *)(a1 + 64) = v7 & 1;
      sub_21F0FB9E0();
      goto LABEL_6;
    }
    sub_21F11859C(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DodMLRecipeDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DodMLRecipeDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DodMLRecipeDescriptor()
{
  return &type metadata for DodMLRecipeDescriptor;
}

uint64_t destroy for PredicateValue()
{
  return sub_21F0FB9E0();
}

uint64_t _s24PrivateFederatedLearning14PredicateValueOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_21F0FBA04();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PredicateValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_21F0FBA04();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_21F0FB9E0();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PredicateValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_21F0FB9E0();
  return a1;
}

uint64_t getEnumTagSinglePayload for PredicateValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PredicateValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_21F118910(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_21F118918(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PredicateValue()
{
  return &type metadata for PredicateValue;
}

uint64_t sub_21F118934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_21F0FB170;
  return sub_21F1161D8(a1, a2, a3);
}

uint64_t sub_21F1189E8(uint64_t a1, uint64_t a2)
{
  return sub_21F11448C(a1, a2);
}

uint64_t sub_21F118A0C(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_21F0FB330;
  return sub_21F1146D0(a1, a2);
}

uint64_t sub_21F118AB4(uint64_t a1, uint64_t a2)
{
  return sub_21F11BE30(&qword_267EBE888, a2, (void (*)(uint64_t))type metadata accessor for DodMLPolicy);
}

uint64_t sub_21F118AFC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_21F11BE30(&qword_267EBE888, a2, (void (*)(uint64_t))type metadata accessor for DodMLPolicy);
  uint64_t result = sub_21F11BE30(&qword_267EBE890, v3, (void (*)(uint64_t))type metadata accessor for DodMLPolicy);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_21F118B80()
{
  unint64_t result = qword_267EBE8A0;
  if (!qword_267EBE8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8A0);
  }
  return result;
}

unint64_t sub_21F118BD4()
{
  unint64_t result = qword_267EBE8B0;
  if (!qword_267EBE8B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE8A8);
    sub_21F118C50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8B0);
  }
  return result;
}

unint64_t sub_21F118C50()
{
  unint64_t result = qword_267EBE8B8;
  if (!qword_267EBE8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8B8);
  }
  return result;
}

uint64_t sub_21F118CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned char v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a3;
  v8[13] = a4;
  v8[10] = a1;
  v8[11] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE698);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  v8[20] = swift_task_alloc();
  uint64_t v9 = sub_21F156820();
  v8[21] = v9;
  v8[22] = *(void *)(v9 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE9A8);
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE9B0);
  v8[28] = v11;
  v8[29] = *(void *)(v11 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F118EC0, 0, 0);
}

uint64_t sub_21F118EC0()
{
  uint64_t v1 = (void *)v0[12];
  if (!v1[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = v0[14];
  unint64_t v50 = v2;
  uint64_t v51 = v3;
  if (!v2[2] || !*(void *)(v3 + 16))
  {
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v0 = (void *)v55;
LABEL_22:
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  uint64_t v0 = (void *)v55;
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = v2[4];
  uint64_t v6 = v2[5];
  uint64_t v48 = sub_21F156FD0();
  uint64_t v8 = *(void *)(v48 - 8);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v46 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  char v45 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  uint64_t v49 = v1;
  while (1)
  {
    unint64_t v52 = v10;
    uint64_t v53 = v5;
    uint64_t v13 = v0 + 18;
    uint64_t v11 = v0[18];
    uint64_t v12 = v13[1];
    uint64_t v14 = *(void *)(v55 + 120);
    uint64_t v54 = v9;
    uint64_t v15 = *(void *)(v3 + v9 + 32);
    uint64_t v16 = *(void *)(v3 + v9 + 40);
    v47(v12, 1, 1, v48);
    uint64_t v17 = (void *)swift_allocObject();
    long long v17[2] = 0;
    uint64_t v17[3] = 0;
    void v17[4] = v7;
    v17[5] = v6;
    v17[6] = v15;
    v17[7] = v16;
    v17[8] = v14;
    v17[9] = v4;
    v17[10] = v53;
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    void v18[3] = 0;
    void v18[4] = &unk_267EBE9C8;
    v18[5] = v17;
    sub_21F10CD48(v12, v11);
    int v19 = (*v46)(v11, 1, v48);
    swift_bridgeObjectRetain();
    uint64_t v0 = (void *)v55;
    swift_retain();
    uint64_t v20 = *(void *)(v55 + 144);
    if (v19 == 1)
    {
      sub_21F0FC154(*(void *)(v55 + 144), &qword_267EBE698);
    }
    else
    {
      sub_21F156FC0();
      (*v45)(v20, v48);
    }
    if (v18[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v21 = sub_21F156FA0();
      uint64_t v23 = v22;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    uint64_t v24 = **(void **)(v55 + 88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE988);
    uint64_t v25 = v23 | v21;
    if (v23 | v21)
    {
      uint64_t v25 = v55 + 16;
      *(void *)(v55 + 16) = 0;
      *(void *)(v55 + 24) = 0;
      *(void *)(v55 + 32) = v21;
      *(void *)(v55 + 40) = v23;
    }
    unint64_t v10 = v52 + 1;
    uint64_t v26 = *(void *)(v55 + 152);
    *(void *)(v55 + 48) = 1;
    *(void *)(v55 + 56) = v25;
    *(void *)(v55 + 64) = v24;
    swift_task_create();
    swift_release();
    uint64_t v27 = sub_21F0FC154(v26, &qword_267EBE698);
    unint64_t v30 = v49[2];
    uint64_t v3 = v51;
    if (v52 + 1 == v30) {
      break;
    }
    if (v10 >= v30)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return MEMORY[0x270FA1E80](v27, v28, v29);
    }
    unint64_t v31 = v50[2];
    if (v10 == v31) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_27;
    }
    unint64_t v32 = *(void *)(v51 + 16);
    if (v10 == v32) {
      break;
    }
    uint64_t v4 = *(void *)((char *)v49 + v54 + 48);
    uint64_t v5 = *(void *)((char *)v49 + v54 + 56);
    uint64_t v7 = *(void *)((char *)v50 + v54 + 48);
    uint64_t v6 = *(void *)((char *)v50 + v54 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = v54 + 16;
    if (v10 >= v32)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
LABEL_23:
  uint64_t v33 = v0[30];
  uint64_t v34 = v0[31];
  uint64_t v35 = v0[28];
  uint64_t v36 = v0[29];
  uint64_t v37 = v0[16];
  uint64_t v38 = v0[17];
  uint64_t v39 = (uint64_t *)v0[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = *v39;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v37;
  *(void *)(v41 + 24) = v38;
  v0[9] = v40;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE9E8);
  sub_21F11BE78(&qword_267EBE9F0, &qword_267EBE9E8);
  sub_21F1575E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v34, v35);
  sub_21F11BE78(&qword_267EBE9F8, &qword_267EBE9B0);
  sub_21F157020();
  v0[32] = MEMORY[0x263F8EE78];
  uint64_t v42 = sub_21F11BE78(&qword_267EBEA00, &qword_267EBE9A8);
  uint64_t v43 = (void *)swift_task_alloc();
  v0[33] = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_21F119454;
  uint64_t v28 = v0[25];
  uint64_t v27 = v0[20];
  uint64_t v29 = v42;
  return MEMORY[0x270FA1E80](v27, v28, v29);
}

uint64_t sub_21F119454()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[26];
    uint64_t v3 = v2[27];
    uint64_t v5 = v2[25];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_21F119898;
  }
  else
  {
    uint64_t v6 = sub_21F119598;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_21F119598()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v5 = v0[32];
  if (v4 == 1)
  {
    uint64_t v6 = v0[31];
    uint64_t v7 = v0[28];
    uint64_t v8 = v0[29];
    uint64_t v9 = (void *)v0[10];
    (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
    sub_21F0FC154(v3, &qword_267EBE730);
    *uint64_t v9 = v5;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v13 = v0[23];
    uint64_t v12 = v0[24];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v14(v12, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v13, v12, v1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = v0[32];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v16 = sub_21F1036DC(0, *(void *)(v16 + 16) + 1, 1, v0[32]);
    }
    unint64_t v18 = *(void *)(v16 + 16);
    unint64_t v17 = *(void *)(v16 + 24);
    if (v18 >= v17 >> 1) {
      unint64_t v16 = sub_21F1036DC(v17 > 1, v18 + 1, 1, v16);
    }
    uint64_t v19 = v0[23];
    uint64_t v20 = v0[24];
    uint64_t v21 = v0[21];
    uint64_t v22 = v0[22];
    *(void *)(v16 + 16) = v18 + 1;
    v14(v16+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v18, v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v0[32] = v16;
    uint64_t v23 = sub_21F11BE78(&qword_267EBEA00, &qword_267EBE9A8);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[33] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_21F119454;
    uint64_t v25 = v0[25];
    uint64_t v26 = v0[20];
    return MEMORY[0x270FA1E80](v26, v25, v23);
  }
}

uint64_t sub_21F119898()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[31], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_21F119978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  _OWORD v7[5] = a7;
  _OWORD v7[2] = a4;
  v7[3] = a5;
  uint64_t v9 = (void *)swift_task_alloc();
  v7[6] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_21F119A34;
  return sub_21F117660(a1, v12, v13);
}

uint64_t sub_21F119A34()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v3[1];
  if (v0)
  {
    return v4();
  }
  else
  {
    uint64_t v7 = v2[4];
    uint64_t v6 = v2[5];
    unint64_t v10 = v2 + 2;
    uint64_t v8 = v2[2];
    uint64_t v9 = v10[1];
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v11(v8, v9, v7, v6);
  }
}

uint64_t sub_21F119BA8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE988);
  uint64_t v8 = a4;
  uint64_t v9 = a1 + *(int *)(v7 + 64);
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)v8 + *v8);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v10;
  *unint64_t v10 = v4;
  v10[1] = sub_21F119CA4;
  return v12(v9);
}

uint64_t sub_21F119CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v5;
  uint64_t v11 = *v5;
  swift_task_dealloc();
  if (!v4)
  {
    uint64_t v12 = *(void **)(v10 + 16);
    *uint64_t v12 = a1;
    v12[1] = a2;
    v12[2] = a3;
    uint64_t v12[3] = a4;
  }
  uint64_t v13 = *(uint64_t (**)(void))(v11 + 8);
  return v13();
}

uint64_t sub_21F119DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_21F119DF8, 0, 0);
}

uint64_t sub_21F119DF8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267EBE988) + 64);
  uint64_t v3 = sub_21F156830();
  unint64_t v5 = v4;
  id v6 = *(id *)(*(void *)(v0 + 32) + 16);
  uint64_t v7 = (void *)sub_21F156C90();
  uint64_t v8 = (void *)sub_21F156880();
  unsigned int v9 = objc_msgSend(v6, sel_validateBase64Signature_data_, v7, v8);

  sub_21F0FB8BC(v3, v5);
  if (v9)
  {
    sub_21F142750(v2, **(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 8), *(char **)(v0 + 16));
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_21F0FB4FC();
    swift_allocError();
    *uint64_t v11 = 25;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

unint64_t sub_21F119F78()
{
  unint64_t result = qword_267EBE8C8;
  if (!qword_267EBE8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8C8);
  }
  return result;
}

unint64_t sub_21F119FCC()
{
  unint64_t result = qword_267EBE8D0;
  if (!qword_267EBE8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8D0);
  }
  return result;
}

uint64_t sub_21F11A020(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unsigned int v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_21F11A0A8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F157780();
  if (v1)
  {

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_21F157780();
    __swift_project_boxed_opaque_existential_1(v6, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    sub_21F11B3D4(&qword_267EBE8C0);
    sub_21F157620();
    uint64_t v3 = v5;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v6, v7);
    uint64_t v3 = sub_21F157610();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_21F11A29C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x796C707061 && a2 == 0xE500000000000000;
  if (v2 || (sub_21F157600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28783 && a2 == 0xE200000000000000 || (sub_21F157600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_21F157600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_21F157600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_21F11A420@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEAB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11CBF0();
  sub_21F157790();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_21F106448(0, 0, 0xFFu);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEAC8);
    char v29 = 0;
    sub_21F11CC98(&qword_267EBEAD0, &qword_267EBEAC8, (void (*)(void))sub_21F11B104);
    sub_21F1574D0();
    uint64_t v9 = v26;
    LOBYTE(v26) = 1;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21F1574C0();
    uint64_t v12 = v11;
    uint64_t v24 = v10;
    uint64_t v25 = a2;
    LOBYTE(v26) = 2;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21F1574C0();
    uint64_t v15 = v14;
    uint64_t v23 = v13;
    char v29 = 3;
    sub_21F11CC44();
    swift_bridgeObjectRetain();
    sub_21F1574D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v26;
    uint64_t v17 = v27;
    unsigned __int8 v18 = v28;
    sub_21F0FB9EC(v26, v27, v28);
    sub_21F106448(0, 0, 0xFFu);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F0FB9EC(v16, v17, v18);
    sub_21F106448(v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_21F106448(v16, v17, v18);
    uint64_t v21 = v24;
    uint64_t v20 = v25;
    *uint64_t v25 = v9;
    v20[1] = v21;
    uint64_t v22 = v23;
    _OWORD v20[2] = v12;
    v20[3] = v22;
    v20[4] = v15;
    v20[5] = v16;
    v20[6] = v17;
    *((unsigned char *)v20 + 56) = v18;
  }
  return result;
}

uint64_t sub_21F11A810@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE908);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11B0B0();
  sub_21F157790();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v33 = 0;
    sub_21F11B104();
    sub_21F157530();
    uint64_t v9 = v34;
    uint64_t v26 = v35;
    uint64_t v27 = v36;
    uint64_t v25 = v37;
    uint64_t v11 = v39;
    uint64_t v10 = v40;
    int v12 = v41;
    LOBYTE(v34) = 1;
    uint64_t v28 = v38;
    swift_bridgeObjectRetain();
    uint64_t v29 = v9;
    uint64_t v13 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v10;
    uint64_t v32 = v11;
    int v30 = v12;
    sub_21F0FB9EC(v11, v10, v12);
    sub_21F157510();
    int v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = v28;
    swift_bridgeObjectRetain();
    uint64_t v19 = v31;
    uint64_t v18 = v32;
    unsigned __int8 v20 = v30;
    sub_21F0FB9EC(v32, v31, v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F106448(v18, v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F106448(v18, v19, v20);
    uint64_t result = swift_bridgeObjectRelease();
    *(_DWORD *)a2 = v15;
    uint64_t v22 = v26;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v22;
    uint64_t v23 = v25;
    *(void *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v23;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = v18;
    *(void *)(a2 + 56) = v19;
    *(unsigned char *)(a2 + 64) = v20;
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = 0xE000000000000000;
  }
  return result;
}

uint64_t sub_21F11AB5C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE8F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11B05C();
  sub_21F157790();
  v8[15] = 0;
  uint64_t v6 = sub_21F157520();
  v8[14] = 1;
  sub_21F157520();
  v8[13] = 2;
  sub_21F157520();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

uint64_t sub_21F11AD28()
{
  unint64_t v0 = sub_21F157480();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_21F11AD70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE8D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F11B008();
  sub_21F157790();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_21F1574E0();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_21F1574E0();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_21F1574E0();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_21F11B008()
{
  unint64_t result = qword_267EBE8E0;
  if (!qword_267EBE8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8E0);
  }
  return result;
}

unint64_t sub_21F11B05C()
{
  unint64_t result = qword_267EBE8F8;
  if (!qword_267EBE8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE8F8);
  }
  return result;
}

unint64_t sub_21F11B0B0()
{
  unint64_t result = qword_267EBE910;
  if (!qword_267EBE910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE910);
  }
  return result;
}

unint64_t sub_21F11B104()
{
  unint64_t result = qword_267EBE918;
  if (!qword_267EBE918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE918);
  }
  return result;
}

unint64_t sub_21F11B158()
{
  unint64_t result = qword_267EBE928;
  if (!qword_267EBE928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE928);
  }
  return result;
}

uint64_t sub_21F11B1AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F0FB9EC(v2, v3, v4);
  return a1;
}

uint64_t sub_21F11B218(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F106448(v2, v3, v4);
  return a1;
}

uint64_t sub_21F11B284(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F0FB9EC(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F11B304(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F106448(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21F11B3D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE448);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F11B438(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_21F10D204;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F117DC4, 0, 0);
}

uint64_t sub_21F11B4EC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_21F10D204;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F117458, 0, 0);
}

uint64_t sub_21F11B5A0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_21F10D204;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F11694C, 0, 0);
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x223C45170);
  }
  return result;
}

uint64_t sub_21F11B6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_21F10D204;
  return sub_21F118CA4(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_21F11B784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PFLTaskPreferences(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F11B7E8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_21F11B840(uint64_t a1)
{
  long long v11 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_21F11B95C;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 16) = v11;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 48) = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_21F119A34;
  return sub_21F117660(a1, v6, v7);
}

uint64_t sub_21F11B95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *v4;
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
  return v9(a1, a2, a3, a4);
}

uint64_t sub_21F11BA80()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F11BAC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_21F10D204;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_267EBE9C0 + dword_267EBE9C0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_21F11BB8C()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21F11BBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v2 + 16);
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_21F0FB170;
  *(_OWORD *)(v6 + 32) = v7;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return MEMORY[0x270FA2498](sub_21F119DF8, 0, 0);
}

unint64_t sub_21F11BC8C()
{
  unint64_t result = qword_267EBEA20;
  if (!qword_267EBEA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA20);
  }
  return result;
}

unint64_t sub_21F11BCE0()
{
  unint64_t result = qword_267EBEA28;
  if (!qword_267EBEA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA28);
  }
  return result;
}

unint64_t sub_21F11BD34()
{
  unint64_t result = qword_267EBEA30;
  if (!qword_267EBEA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA30);
  }
  return result;
}

uint64_t sub_21F11BD88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 80) != 255) {
    sub_21F0FB9E0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

unint64_t sub_21F11BDF0()
{
  unint64_t result = qword_267EBEA38;
  if (!qword_267EBEA38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EBEA38);
  }
  return result;
}

uint64_t sub_21F11BE30(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F11BE78(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DodMLRecipeDescriptor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DodMLRecipeDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F11C018);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_21F11C040(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DodMLRecipeDescriptor.CodingKeys()
{
  return &type metadata for DodMLRecipeDescriptor.CodingKeys;
}

ValueMetadata *type metadata accessor for EvaluationLimits.CodingKeys()
{
  return &type metadata for EvaluationLimits.CodingKeys;
}

uint64_t _s24PrivateFederatedLearning16EvaluationLimitsV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s24PrivateFederatedLearning16EvaluationLimitsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F11C1D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PolicySigning.CodingKeys()
{
  return &type metadata for PolicySigning.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DodMLPolicy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DodMLPolicy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F11C364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DodMLPolicy.CodingKeys()
{
  return &type metadata for DodMLPolicy.CodingKeys;
}

uint64_t destroy for Predicate(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 56) != 255)
  {
    return sub_21F0FB9E0();
  }
  return result;
}

uint64_t initializeWithCopy for Predicate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 48);
    sub_21F0FBA04();
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 56) = v6 & 1;
  }
  return a1;
}

uint64_t assignWithCopy for Predicate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 40);
  uint64_t v5 = (long long *)(a2 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *uint64_t v4 = v8;
    }
    else
    {
      char v12 = v6 & 1;
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v13 = *(void *)(a2 + 48);
      sub_21F0FBA04();
      *(void *)(a1 + 40) = v14;
      *(void *)(a1 + 48) = v13;
      *(unsigned char *)(a1 + 56) = v12;
    }
  }
  else if (v6 == 255)
  {
    sub_21F11859C(a1 + 40);
    char v7 = *(unsigned char *)(a2 + 56);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 56) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    sub_21F0FBA04();
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 56) = v9;
    sub_21F0FB9E0();
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Predicate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  int v6 = (_OWORD *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 56) != 255)
  {
    int v7 = *(unsigned __int8 *)(a2 + 56);
    if (v7 != 255)
    {
      *(_OWORD *)(a1 + 40) = *v6;
      *(unsigned char *)(a1 + 56) = v7 & 1;
      sub_21F0FB9E0();
      return a1;
    }
    sub_21F11859C(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v6;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Predicate(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Predicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Predicate()
{
  return &type metadata for Predicate;
}

unint64_t sub_21F11C788()
{
  unint64_t result = qword_267EBEA58;
  if (!qword_267EBEA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA58);
  }
  return result;
}

unint64_t sub_21F11C7E0()
{
  unint64_t result = qword_267EBEA60;
  if (!qword_267EBEA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA60);
  }
  return result;
}

unint64_t sub_21F11C838()
{
  unint64_t result = qword_267EBEA68;
  if (!qword_267EBEA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA68);
  }
  return result;
}

unint64_t sub_21F11C890()
{
  unint64_t result = qword_267EBEA70;
  if (!qword_267EBEA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA70);
  }
  return result;
}

unint64_t sub_21F11C8E8()
{
  unint64_t result = qword_267EBEA78;
  if (!qword_267EBEA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA78);
  }
  return result;
}

unint64_t sub_21F11C940()
{
  unint64_t result = qword_267EBEA80;
  if (!qword_267EBEA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA80);
  }
  return result;
}

unint64_t sub_21F11C998()
{
  unint64_t result = qword_267EBEA88;
  if (!qword_267EBEA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA88);
  }
  return result;
}

unint64_t sub_21F11C9F0()
{
  unint64_t result = qword_267EBEA90;
  if (!qword_267EBEA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA90);
  }
  return result;
}

unint64_t sub_21F11CA48()
{
  unint64_t result = qword_267EBEA98;
  if (!qword_267EBEA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEA98);
  }
  return result;
}

unint64_t sub_21F11CAA0()
{
  unint64_t result = qword_267EBEAA0;
  if (!qword_267EBEAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEAA0);
  }
  return result;
}

unint64_t sub_21F11CAF8()
{
  unint64_t result = qword_267EBEAA8;
  if (!qword_267EBEAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEAA8);
  }
  return result;
}

unint64_t sub_21F11CB50()
{
  unint64_t result = qword_267EBEAB0;
  if (!qword_267EBEAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEAB0);
  }
  return result;
}

uint64_t sub_21F11CBA4()
{
  unint64_t v0 = sub_21F157480();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unint64_t sub_21F11CBF0()
{
  unint64_t result = qword_267EBEAC0;
  if (!qword_267EBEAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEAC0);
  }
  return result;
}

unint64_t sub_21F11CC44()
{
  unint64_t result = qword_267EBEAD8;
  if (!qword_267EBEAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEAD8);
  }
  return result;
}

uint64_t sub_21F11CC98(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F11CD04()
{
  unint64_t result = qword_267EBEB00;
  if (!qword_267EBEB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Predicate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Predicate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F11CEB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Predicate.CodingKeys()
{
  return &type metadata for Predicate.CodingKeys;
}

unint64_t sub_21F11CEF0()
{
  unint64_t result = qword_267EBEB08;
  if (!qword_267EBEB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB08);
  }
  return result;
}

unint64_t sub_21F11CF48()
{
  unint64_t result = qword_267EBEB10;
  if (!qword_267EBEB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB10);
  }
  return result;
}

unint64_t sub_21F11CFA0()
{
  unint64_t result = qword_267EBEB18;
  if (!qword_267EBEB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB18);
  }
  return result;
}

uint64_t sub_21F11D00C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

PrivateFederatedLearning::ShuffleMethod_optional __swiftcall ShuffleMethod.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (PrivateFederatedLearning::ShuffleMethod_optional)rawValue;
}

uint64_t ShuffleMethod.rawValue.getter()
{
  return *v0;
}

BOOL sub_21F11D088(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_21F11D0A0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_21F11D0C0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t EspressoFunction.rawValue.getter()
{
  return *(void *)v0;
}

PrivateFederatedLearning::EspressoFunction __swiftcall EspressoFunction.init(rawValue:)(PrivateFederatedLearning::EspressoFunction rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static EspressoFunction.evaluation.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static EspressoFunction.training.getter(void *a1@<X8>)
{
  *a1 = 2;
}

unint64_t sub_21F11D0F8()
{
  unint64_t result = qword_267EBEB20;
  if (!qword_267EBEB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB20);
  }
  return result;
}

unint64_t sub_21F11D150()
{
  unint64_t result = qword_267EBEB28;
  if (!qword_267EBEB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB28);
  }
  return result;
}

unint64_t sub_21F11D1A8()
{
  unint64_t result = qword_267EBEB30;
  if (!qword_267EBEB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB30);
  }
  return result;
}

unint64_t sub_21F11D200()
{
  unint64_t result = qword_267EBEB38;
  if (!qword_267EBEB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB38);
  }
  return result;
}

unint64_t sub_21F11D258()
{
  unint64_t result = qword_267EBEB40;
  if (!qword_267EBEB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267EBEB40);
  }
  return result;
}

uint64_t sub_21F11D2AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_21F11D00C(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for ShuffleMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F11D390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShuffleMethod()
{
  return &type metadata for ShuffleMethod;
}

ValueMetadata *type metadata accessor for EspressoFunction()
{
  return &type metadata for EspressoFunction;
}

uint64_t dispatch thunk of EspressoTrainer.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EspressoTrainer.load(path:functions:inputs:outputs:weights:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of EspressoTrainer.loadInferenceModel(path:inputs:outputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of EspressoTrainer.finalize(batchSize:learningRate:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(a4 + 32))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of EspressoTrainer.extractWeights(function:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EspressoTrainer.extractOutputs(function:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EspressoTrainer.unload(functions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of EspressoTrainer.train(_:featureSizes:numSamples:epochs:shuffleMethod:fullBatch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 64))();
}

uint64_t dispatch thunk of EspressoTrainer.eval(_:featureSizes:numSamples:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t sub_21F11D518()
{
  e5rt_execution_stream_operation_release();
  e5rt_execution_stream_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21F11D5B4()
{
  sub_21F11D518();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5Function()
{
  return self;
}

uint64_t sub_21F11D60C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TensorDescriptor()
{
  return self;
}

uint64_t sub_21F11D6A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21F156930();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 28) = 1;
  *(_DWORD *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 36) = 1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v8 = sub_21F10E9C8(0xD000000000000016, 0x800000021F1600D0);
    if (v9)
    {
      sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v59);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
      if (swift_dynamicCast())
      {
        uint64_t v10 = v57;
        if (*(void *)(a1 + 16) && (unint64_t v11 = sub_21F10E9C8(0x65527961736D6172, 0xEE00444965706963), (v12 & 1) != 0))
        {
          sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v59);
        }
        else
        {
          long long v59 = 0u;
          long long v60 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v60 + 1))
        {
          swift_bridgeObjectRelease();
          sub_21F0ED4F0((uint64_t)&v59);
          goto LABEL_8;
        }
        if (swift_dynamicCast())
        {
          if (!v10[2]) {
            goto LABEL_31;
          }
          id v55 = v57;
          uint64_t v56 = v58;
          unint64_t v14 = sub_21F10E9C8(0xD000000000000013, 0x800000021F160070);
          if ((v15 & 1) == 0) {
            goto LABEL_31;
          }
          sub_21F0ED61C(v10[7] + 32 * v14, (uint64_t)&v59);
          unint64_t v16 = sub_21F0ED5DC();
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_31;
          }
          unint64_t v54 = v16;
          id v17 = v57;
          if (v10[2]
            && (v18 = v57, v19 = sub_21F10E9C8(0xD000000000000012, 0x800000021F15FFD0), id v17 = v18, (v20 & 1) != 0))
          {
            sub_21F0ED61C(v10[7] + 32 * v19, (uint64_t)&v59);
            if ((swift_dynamicCast() & 1) == 0)
            {
LABEL_39:

LABEL_31:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_32:
              sub_21F0FB4FC();
              swift_allocError();
              *char v33 = 27;
              swift_willThrow();
LABEL_33:
              type metadata accessor for FederatedBuffer();
              swift_deallocPartialClassInstance();
              return v2;
            }
            id v53 = v57;
            if (v10[2])
            {
              unint64_t v21 = sub_21F10E9C8(0x73656E656C617473, 0xEE00656C61635373);
              id v17 = v18;
              if (v22)
              {
                sub_21F0ED61C(v10[7] + 32 * v21, (uint64_t)&v59);
                if (swift_dynamicCast())
                {
                  id v52 = v57;
                  if (!v10[2] || (unint64_t v23 = sub_21F10E9C8(0x73656E656C617473, 0xED00007361694273), (v24 & 1) == 0))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    goto LABEL_32;
                  }
                  sub_21F0ED61C(v10[7] + 32 * v23, (uint64_t)&v59);
                  if (swift_dynamicCast())
                  {
                    id v51 = v57;
                    char v25 = v56;
                    *(void *)(v2 + 72) = v55;
                    *(void *)(v2 + 80) = v25;
                    *(void *)(v2 + 56) = objc_msgSend(v18, sel_integerValue);
                    objc_msgSend(v53, sel_doubleValue);
                    *(void *)(v2 + 16) = v26;
                    if (v10[2]
                      && (unint64_t v27 = sub_21F10E9C8(0xD000000000000010, 0x800000021F160010), (v28 & 1) != 0)
                      && (sub_21F0ED61C(v10[7] + 32 * v27, (uint64_t)&v59), (swift_dynamicCast() & 1) != 0))
                    {
                      id v29 = v57;
                      objc_msgSend(v57, sel_floatValue);
                      int v31 = v30;

                      char v32 = 0;
                    }
                    else
                    {
                      char v32 = 1;
                      int v31 = 0;
                    }
                    *(_DWORD *)(v2 + 32) = v31;
                    *(unsigned char *)(v2 + 36) = v32;
                    objc_msgSend(v52, sel_floatValue);
                    *(_DWORD *)(v2 + 44) = v34;
                    objc_msgSend(v51, sel_floatValue);
                    *(_DWORD *)(v2 + 48) = v35;
                    sub_21F156920();
                    sub_21F156900();
                    double v37 = v36;
                    uint64_t v56 = *(void (**)(void, void))(v5 + 8);
                    v56(v7, v4);
                    if (*(double *)(v2 + 16) >= v37)
                    {
                      char v42 = 28;
                      goto LABEL_49;
                    }
                    if (*(float *)(v2 + 44) <= 0.0)
                    {
                      char v42 = 29;
                      goto LABEL_49;
                    }
                    sub_21F156920();
                    sub_21F156900();
                    double v39 = v38;
                    v56(v7, v4);
                    float v40 = v39 - *(double *)(v2 + 16);
                    float v41 = *(float *)(v2 + 48) + (float)(v40 / *(float *)(v2 + 44));
                    *(float *)(v2 + 40) = v41;
                    if ((~LODWORD(v41) & 0x7F800000) == 0)
                    {
                      char v42 = 30;
LABEL_49:
                      swift_bridgeObjectRelease();
LABEL_50:
                      sub_21F0FB4FC();
                      swift_allocError();
                      *uint64_t v43 = v42;
                      swift_willThrow();

                      swift_bridgeObjectRelease();
                      goto LABEL_33;
                    }
                    if (v10[2] && (unint64_t v44 = sub_21F10E9C8(0xD000000000000010, 0x800000021F15FFF0), (v45 & 1) != 0))
                    {
                      sub_21F0ED61C(v10[7] + 32 * v44, (uint64_t)&v59);
                    }
                    else
                    {
                      long long v59 = 0u;
                      long long v60 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    if (*((void *)&v60 + 1))
                    {
                      if (swift_dynamicCast())
                      {
                        id v46 = v57;
                        objc_msgSend(v57, sel_floatValue);
                        float v48 = v47;

                        if (*(float *)(v2 + 40) >= v48)
                        {
                          char v42 = 31;
                          goto LABEL_50;
                        }
                      }
                    }
                    else
                    {
                      sub_21F0ED4F0((uint64_t)&v59);
                    }
                    if (*(unsigned char *)(v2 + 36))
                    {
                      *(_DWORD *)(v2 + 64) = 1065353216;
                      float v49 = 1.0;
                    }
                    else
                    {
                      float v49 = powf(*(float *)(v2 + 40) + 1.0, *(float *)(v2 + 32));
                      *(float *)(v2 + 64) = v49;
                      if (v49 < 1.0)
                      {
LABEL_64:
                        sub_21F0FB4FC();
                        swift_allocError();
                        unsigned char *v50 = 32;
                        swift_willThrow();
                        swift_release();

                        return v2;
                      }
                    }
                    if ((~LODWORD(v49) & 0x7F800000) != 0)
                    {

                      return v2;
                    }
                    goto LABEL_64;
                  }

                  goto LABEL_31;
                }

                goto LABEL_39;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }

          goto LABEL_32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  type metadata accessor for FederatedBuffer();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_21F11DEB8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FederatedBuffer()
{
  return self;
}

ValueMetadata *type metadata accessor for DediscoKey()
{
  return &type metadata for DediscoKey;
}

uint64_t sub_21F11DF24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = *(v2 - 1);
      uint64_t v7 = *v2;
      uint64_t v9 = HIBYTE(*v2) & 0xF;
      if ((*v2 & 0x2000000000000000) == 0) {
        uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
      }
      if (v9)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21F132CAC(0, *(void *)(v3 + 16) + 1, 1);
        }
        unint64_t v5 = *(void *)(v3 + 16);
        unint64_t v4 = *(void *)(v3 + 24);
        if (v5 >= v4 >> 1) {
          sub_21F132CAC(v4 > 1, v5 + 1, 1);
        }
        *(void *)(v3 + 16) = v5 + 1;
        uint64_t v6 = v3 + 16 * v5;
        *(void *)(v6 + 32) = v8;
        *(void *)(v6 + 40) = v7;
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
  sub_21F10E49C();
  uint64_t v10 = sub_21F156C20();
  swift_release();
  return v10;
}

uint64_t sub_21F11E07C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileRecipeDescriptor()
{
  return self;
}

uint64_t sub_21F11E0B0()
{
  uint64_t v0 = sub_21F156960();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 0x3A656C6946;
  v5[1] = 0xE500000000000000;
  sub_21F156950();
  sub_21F156940();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t sub_21F11E1B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3 >= *(void *)(v1 + 16))
  {
    uint64_t result = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  else
  {
    *(void *)(v1 + 24) = v3 + 1;
    uint64_t v4 = type metadata accessor for FileRecipeDescriptor();
    uint64_t result = swift_allocObject();
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = &off_26D0AE2B0;
  }
  *(void *)a1 = result;
  return result;
}

uint64_t sub_21F11E224()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FilePolicy()
{
  return self;
}

uint64_t sub_21F11E258()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_21F11E264()
{
  uint64_t v1 = sub_21F127460(*v0);
  swift_release();
  return v1;
}

void *sub_21F11E29C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F0F4F94(a1, a2, a3);
}

uint64_t sub_21F11E2C0()
{
  return sub_21F156EC0();
}

uint64_t sub_21F11E328@<X0>(uint64_t a1@<X8>)
{
  return sub_21F11E1B8(a1);
}

uint64_t sub_21F11E34C(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  type metadata accessor for PFLTaskPreferences(0);
  v3[14] = swift_task_alloc();
  uint64_t v4 = sub_21F1566D0();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  v3[18] = swift_task_alloc();
  uint64_t v5 = sub_21F156710();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v6 = sub_21F156820();
  v3[22] = v6;
  v3[23] = *(void *)(v6 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_21F11E54C, 0, 0);
}

uint64_t sub_21F11E54C()
{
  unint64_t v70 = v0;
  uint64_t v1 = v0[13];
  sub_21F0FB4FC();
  uint64_t v2 = (void *)swift_allocError();
  *uint64_t v3 = 9;
  swift_retain();
  sub_21F1085B4(v2, v1, v69);

  uint64_t v4 = v69[0];
  unint64_t v5 = v69[1];
  uint64_t v6 = (void *)swift_allocError();
  *uint64_t v7 = 15;
  sub_21F0FBDC0(v4, v5);
  id v8 = sub_21F10C310(v6);
  sub_21F0FB8BC(v4, v5);

  swift_bridgeObjectRetain();
  sub_21F156760();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_defaultManager);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEB78);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_21F159670;
  unint64_t v11 = (void *)*MEMORY[0x263EFF6F0];
  *(void *)(v10 + 32) = *MEMORY[0x263EFF6F0];
  id v12 = v11;
  uint64_t v13 = sub_21F1570F0();
  swift_bridgeObjectRelease();

  unint64_t v67 = v5;
  uint64_t v68 = v4;
  id v66 = v8;
  if (v13)
  {
    uint64_t v64 = (void *)v13;
    sub_21F1570C0();
    sub_21F156700();
    if (v0[10])
    {
      uint64_t v63 = v12;
      unint64_t v14 = v0 + 2;
      uint64_t v15 = v0[23];
      unint64_t v16 = (void (**)(void, void, uint64_t, void))(v15 + 56);
      id v17 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      id v18 = (void *)(v15 + 32);
      long long v62 = (void (**)(void, void, void))(v15 + 16);
      uint64_t v59 = v15;
      unint64_t v19 = (void (**)(uint64_t, uint64_t))(v15 + 8);
      unint64_t v65 = MEMORY[0x263F8EE78];
      long long v60 = (void (**)(uint64_t, uint64_t))(v0[16] + 8);
      while (1)
      {
        int v20 = swift_dynamicCast();
        unint64_t v21 = *v16;
        uint64_t v22 = v0[22];
        uint64_t v23 = v0[18];
        if (!v20) {
          break;
        }
        v21(v0[18], 0, 1, v0[22]);
        if ((*v17)(v23, 1, v22) == 1) {
          goto LABEL_8;
        }
        uint64_t v61 = v19;
        id v55 = (void (*)(unint64_t, uint64_t, uint64_t))*v18;
        uint64_t v57 = v18;
        ((void (*)(void, void, void))*v18)(v0[26], v0[18], v0[22]);
        uint64_t v58 = v14;
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_21F159670;
        *(void *)(inited + 32) = v63;
        id v25 = v63;
        sub_21F134EEC(inited);
        swift_setDeallocating();
        type metadata accessor for URLResourceKey(0);
        swift_arrayDestroy();
        sub_21F156740();
        swift_bridgeObjectRelease();
        uint64_t result = sub_21F1566C0();
        if (result == 2)
        {
          __break(1u);
          return result;
        }
        uint64_t v27 = v0[26];
        unint64_t v14 = v58;
        if (result)
        {
          (*v62)(v0[25], v0[26], v0[22]);
          unint64_t v29 = v65;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v29 = sub_21F1036DC(0, *(void *)(v65 + 16) + 1, 1, v65);
          }
          int v30 = v55;
          unint64_t v32 = *(void *)(v29 + 16);
          unint64_t v31 = *(void *)(v29 + 24);
          unint64_t v33 = v32 + 1;
          if (v32 >= v31 >> 1)
          {
            uint64_t v40 = sub_21F1036DC(v31 > 1, v32 + 1, 1, v29);
            unint64_t v33 = v32 + 1;
            int v30 = v55;
            unint64_t v65 = v40;
          }
          else
          {
            unint64_t v65 = v29;
          }
          uint64_t v34 = v0[25];
          uint64_t v56 = v0[26];
          uint64_t v35 = v0[22];
          uint64_t v36 = v0[17];
          uint64_t v37 = v0[15];
          *(void *)(v65 + 16) = v33;
          v30(v65+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v32, v34, v35);
          uint64_t v38 = v37;
          id v18 = v57;
          (*v60)(v36, v38);
          uint64_t v39 = v35;
          unint64_t v19 = v61;
          (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v56, v39);
          unint64_t v14 = v58;
        }
        else
        {
          uint64_t v28 = v0[22];
          (*v60)(v0[17], v0[15]);
          (*v19)(v27, v28);
        }
LABEL_9:
        sub_21F156700();
        if (!v0[10]) {
          goto LABEL_22;
        }
      }
      v21(v0[18], 1, 1, v0[22]);
LABEL_8:
      sub_21F11F2A8(v0[18]);
      goto LABEL_9;
    }
    unint64_t v65 = MEMORY[0x263F8EE78];
LABEL_22:
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);

    unint64_t v41 = v65;
  }
  else
  {
    unint64_t v41 = MEMORY[0x263F8EE78];
  }
  uint64_t v42 = v0[27];
  uint64_t v43 = v0[23];
  uint64_t v44 = v0[22];
  uint64_t v45 = v0[14];
  id v46 = (void *)v0[11];
  uint64_t v47 = v0[12];
  uint64_t v48 = v46[3];
  uint64_t v49 = v46[4];
  __swift_project_boxed_opaque_existential_1(v46, v48);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 16))(v48, v49);
  uint64_t v52 = v51;
  sub_21F0F0BA4(v47, v45);
  type metadata accessor for PFLTask();
  id v53 = (void *)swift_allocObject();
  v53[5] = v41;
  v53[6] = 0;
  v53[2] = v50;
  v53[3] = v52;
  v53[4] = v66;
  sub_21F11B784(v45, (uint64_t)v53 + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences);
  v53[6] = 0;
  swift_release();
  sub_21F0FB8BC(v68, v67);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v54 = (uint64_t (*)(void *))v0[1];
  return v54(v53);
}

uint64_t sub_21F11EF60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLLocalTaskDownloader()
{
  return self;
}

uint64_t sub_21F11EFC4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F11EFE4, 0, 0);
}

uint64_t sub_21F11EFE4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = type metadata accessor for FilePolicy();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21F15ACC0;
  v1[3] = v2;
  v1[4] = sub_21F11F308(&qword_267EBEB70, v4, (void (*)(uint64_t))type metadata accessor for FilePolicy);
  *uint64_t v1 = v3;
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_21F11F0B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F11F134(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_21F0FB330;
  return sub_21F11E34C(a1, a2);
}

uint64_t sub_21F11F1DC(uint64_t a1, uint64_t a2)
{
  return sub_21F11F308(&qword_267EBEB60, a2, (void (*)(uint64_t))type metadata accessor for FilePolicy);
}

uint64_t sub_21F11F224(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_21F11F308(&qword_267EBEB60, a2, (void (*)(uint64_t))type metadata accessor for FilePolicy);
  uint64_t result = sub_21F11F308(&qword_267EBEB68, v3, (void (*)(uint64_t))type metadata accessor for FilePolicy);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_21F11F2A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F11F308(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F11F350(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_21F157400();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_21F156F40();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_21F11F40C(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_21F157400();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_21F156F40();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  id v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *id v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_21F11F500(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_21F157400();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_21F156F40();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  int32x4_t v7 = vdupq_n_s32(a1);
  id v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *id v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_21F11F5EC(char a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_21F157400();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_21F156F40();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return v4;
  }
  return result;
}

uint64_t EspressoMILTrainer.__allocating_init(_:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_21F127EF8(a1);
  swift_release();
  return v2;
}

uint64_t EspressoMILTrainer.init(_:)(uint64_t a1)
{
  uint64_t v1 = sub_21F127EF8(a1);
  swift_release();
  return v1;
}

uint64_t EspressoMILTrainer.deinit()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if ((v1 & 2) != 0)
  {
    espresso_plan_destroy();
    uint64_t v1 = *(void *)(v0 + 96);
  }
  if (v1) {
    espresso_plan_destroy();
  }
  espresso_context_destroy();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EspressoMILTrainer.__deallocating_deinit()
{
  EspressoMILTrainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_21F11F7FC(uint64_t *result)
{
  uint64_t v2 = *result;
  if (*result & 1) != 0 && (*(unsigned char *)(v1 + 96)) {
    uint64_t result = (uint64_t *)espresso_plan_destroy();
  }
  if ((v2 & 2) != 0 && (*(unsigned char *)(v1 + 96) & 2) != 0) {
    uint64_t result = (uint64_t *)espresso_plan_destroy();
  }
  *(void *)(v1 + 96) &= ~v2;
  return result;
}

uint64_t sub_21F11F850(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v7;
  uint64_t v9 = v6;
  uint64_t v15 = *a3;
  if (sub_21F156E60())
  {
    *(void *)(v9 + 80) = a1;
    *(void *)(v9 + 88) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 96) = v15;
    uint64_t v16 = *(void *)(v9 + 16);
    swift_retain();
    double Current = CFAbsoluteTimeGetCurrent();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v35 = v15;
    uint64_t v36 = *(void *)(v16 + 16);
    *(void *)(v16 + 16) = 0x8000000000000000;
    sub_21F10EFAC(0x6F4C2E6C65646F4DLL, 0xEA00000000006461, isUniquelyReferenced_nonNull_native, Current);
    *(void *)(v16 + 16) = v36;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    if ((v15 & 2) != 0)
    {
      *(unsigned char *)(v9 + 112) = 1;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_21F156E90();
      uint64_t v39 = v21;
      sub_21F156DC0();
      unint64_t v22 = v9 + 32;
      uint64_t v34 = a4;
      uint64_t v23 = *(void *)(v9 + 48);
      swift_beginAccess();
      uint64_t v24 = v23;
      a4 = v34;
      sub_21F11FD6C(v37, v39, v24, v9 + 32, v34, a5, a6);
      swift_endAccess();
      uint64_t result = swift_bridgeObjectRelease();
      if (v7) {
        return result;
      }
      uint64_t v33 = a5;
      espresso_network_declare_input();
      uint64_t v25 = *(void *)(a6 + 16);
      if (v25)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = a6;
        uint64_t v26 = a6 + 40;
        do
        {
          uint64_t v27 = *(unsigned int *)(v9 + 40);
          swift_bridgeObjectRetain_n();
          sub_21F156DD0();
          swift_bridgeObjectRelease();
          sub_21F156D20();
          swift_bridgeObjectRelease();
          unint64_t v22 = v22 & 0xFFFFFFFF00000000 | v27;
          int v28 = espresso_network_declare_output();
          swift_release();
          if (v28)
          {
            swift_bridgeObjectRelease();
            sub_21F128018();
            swift_allocError();
            *unint64_t v31 = 3;
            return swift_willThrow();
          }
          v26 += 16;
          --v25;
        }
        while (v25);
        a6 = v32;
        swift_bridgeObjectRelease();
        uint64_t v8 = v7;
        a5 = v33;
        a4 = v34;
        if (v35) {
          goto LABEL_15;
        }
      }
      else
      {
        a5 = v33;
        if (v15)
        {
LABEL_15:
          *(unsigned char *)(v9 + 112) = 1;
LABEL_16:
          swift_bridgeObjectRetain();
          uint64_t v38 = sub_21F156E90();
          uint64_t v40 = v29;
          sub_21F156DC0();
          uint64_t v30 = *(void *)(v9 + 72);
          swift_beginAccess();
          a4 = v34;
          sub_21F11FD6C(v38, v40, v30, v9 + 56, v34, a5, a6);
          swift_endAccess();
          uint64_t result = swift_bridgeObjectRelease();
          if (v8) {
            return result;
          }
        }
      }
    }
    else if (v15)
    {
      uint64_t v34 = a4;
      *(unsigned char *)(v9 + 112) = 0;
      goto LABEL_16;
    }
    *(void *)(v9 + 344) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 352) = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 360) = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_21F10E6C0(0x6F4C2E6C65646F4DLL, 0xEA00000000006461);
    return swift_release();
  }
  sub_21F128018();
  swift_allocError();
  *unint64_t v19 = 0;
  return swift_willThrow();
}

uint64_t sub_21F11FD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = 1;
  return sub_21F11F850(a1, a2, &v5, a3, a4, MEMORY[0x263F8EE78]);
}

uint64_t sub_21F11FD6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_21F156D20();
  int v12 = espresso_plan_add_network();
  uint64_t result = swift_release();
  if (v12)
  {
    char v14 = 8;
LABEL_26:
    sub_21F128018();
    swift_allocError();
    char *v37 = v14;
    return swift_willThrow();
  }
  uint64_t v15 = *(void *)(a5 + 16);
  if (v15)
  {
    uint64_t v41 = a6;
    uint64_t v16 = *(unsigned int *)(a4 + 8);
    unint64_t v17 = sub_21F156D20();
    swift_bridgeObjectRetain();
    int v18 = espresso_network_declare_input();
    swift_release();
    if (v18)
    {
LABEL_8:
      char v14 = 2;
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    unint64_t v38 = a4;
    uint64_t v39 = a7;
    uint64_t v19 = a5 + 56;
    while (--v15)
    {
      uint64_t v20 = v19 + 16;
      sub_21F156D20();
      unint64_t v17 = v17 & 0xFFFFFFFF00000000 | v16;
      int v21 = espresso_network_declare_input();
      swift_release();
      uint64_t v19 = v20;
      if (v21) {
        goto LABEL_8;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    a7 = v39;
    a6 = v41;
    a4 = v38;
  }
  uint64_t v22 = *(void *)(a6 + 16);
  if (v22)
  {
    uint64_t v40 = a7;
    uint64_t v23 = *(unsigned int *)(a4 + 8);
    sub_21F156D20();
    unint64_t v24 = a4;
    swift_bridgeObjectRetain();
    uint64_t v25 = a6;
    int v26 = espresso_network_declare_output();
    swift_release();
    if (v26)
    {
      char v14 = 3;
      goto LABEL_25;
    }
    uint64_t v27 = v25 + 56;
    while (--v22)
    {
      uint64_t v28 = v27 + 16;
      sub_21F156D20();
      unint64_t v24 = v24 & 0xFFFFFFFF00000000 | v23;
      int v29 = espresso_network_declare_output();
      swift_release();
      uint64_t v27 = v28;
      if (v29)
      {
        char v14 = 3;
        goto LABEL_25;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    a7 = v40;
  }
  if (*(unsigned char *)(v7 + 112) == 1)
  {
    uint64_t v30 = *(void *)(a7 + 16);
    if (v30)
    {
      uint64_t v31 = *(unsigned int *)(a4 + 8);
      unint64_t v32 = sub_21F156D20();
      swift_bridgeObjectRetain();
      int v33 = espresso_network_declare_input();
      swift_release();
      if (v33)
      {
        char v14 = 17;
        goto LABEL_25;
      }
      uint64_t v34 = a7 + 56;
      while (--v30)
      {
        uint64_t v35 = v34 + 16;
        sub_21F156D20();
        unint64_t v32 = v32 & 0xFFFFFFFF00000000 | v31;
        int v36 = espresso_network_declare_input();
        swift_release();
        char v14 = 17;
        uint64_t v34 = v35;
        if (v36) {
          goto LABEL_25;
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21F120078(uint64_t a1, uint64_t a2, uint64_t a3, char **a4)
{
  if (*(void *)(*(void *)(v4 + 344) + 16) >> 60)
  {
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v6 = swift_slowAlloc();
  uint64_t v7 = (char *)v6;
  uint64_t v8 = *(void *)(v4 + 344);
  int64_t v9 = *(void *)(v8 + 16);
  unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  if (v9)
  {
    unint64_t v38 = a4;
    uint64_t v39 = (char *)v6;
    uint64_t v11 = v4;
    uint64_t v43 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21F132D0C(0, v9, 0);
    int v12 = (uint64_t *)(v8 + 40);
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      if ((*v12 & 0x1000000000000000) != 0 || !(v14 & 0x2000000000000000 | v13 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEBA0);
        sub_21F1572D0();
        unint64_t v17 = v42;
        if (!v42) {
          goto LABEL_54;
        }
        goto LABEL_12;
      }
      if ((v14 & 0x2000000000000000) != 0)
      {
        *(void *)__s1 = *(v12 - 1);
        uint64_t v41 = v14 & 0xFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        uint64_t v16 = __s1;
      }
      else
      {
        if ((v13 & 0x1000000000000000) != 0)
        {
          uint64_t v15 = (v14 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_9:
          swift_bridgeObjectRetain();
          uint64_t v16 = (char *)v15;
          goto LABEL_11;
        }
        uint64_t v15 = sub_21F157380();
        if (v15) {
          goto LABEL_9;
        }
        swift_bridgeObjectRetain();
        uint64_t v16 = 0;
      }
LABEL_11:
      uint64_t v42 = strdup(v16);
      unint64_t v17 = v42;
      if (!v42) {
        goto LABEL_54;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      unint64_t v10 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F132D0C(0, v10[2] + 1, 1);
        unint64_t v10 = v43;
      }
      unint64_t v19 = v10[2];
      unint64_t v18 = v10[3];
      if (v19 >= v18 >> 1)
      {
        sub_21F132D0C(v18 > 1, v19 + 1, 1);
        unint64_t v10 = v43;
      }
      v12 += 2;
      void v10[2] = v19 + 1;
      v10[v19 + 4] = v17;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v11;
        uint64_t v20 = *(void *)(*(void *)(v11 + 344) + 16);
        a4 = v38;
        uint64_t v7 = v39;
        goto LABEL_23;
      }
    }
  }
  uint64_t v20 = 0;
LABEL_23:
  if (v10 + 4 < (void *)&v7[8 * v20] && v7 < (char *)&v10[v20 + 4]) {
    goto LABEL_55;
  }
  memcpy(v7, v10 + 4, 8 * v20);
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(v4 + 344) + 16) >> 31)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    uint64_t result = sub_21F157460();
    __break(1u);
    return result;
  }
  uint64_t v22 = *a4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v22 = sub_21F103BA4(0, *((void *)v22 + 2), 0, v22);
  }
  *a4 = v22;
  uint64_t v23 = a4[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v23 = sub_21F103BA4(0, *((void *)v23 + 2), 0, v23);
  }
  a4[1] = v23;
  unint64_t v24 = a4[2];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v24 = sub_21F103BA4(0, *((void *)v24 + 2), 0, v24);
  }
  a4[2] = v24;
  uint64_t v25 = a4[3];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v25 = sub_21F103BA4(0, *((void *)v25 + 2), 0, v25);
  }
  a4[3] = v25;
  int v26 = a4[4];
  swift_bridgeObjectRetain();
  uint64_t v37 = v4;
  uint64_t v27 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v26 = sub_21F103BA4(0, *((void *)v26 + 2), 0, v26);
  }
  a4[4] = v26;
  uint64_t v28 = a4[5];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v28 = sub_21F103BA4(0, *((void *)v28 + 2), 0, v28);
  }
  a4[5] = v28;
  int v29 = v27;
  int v30 = espresso_network_change_input_blob_shapes_seq_rank();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30)
  {
    char v31 = 1;
LABEL_50:
    sub_21F128018();
    swift_allocError();
    *int v36 = v31;
    return swift_willThrow();
  }
  for (uint64_t i = *(void *)(*(void *)(v37 + 344) + 16); i; --i)
  {
    uint64_t v34 = *(void *)v27;
    v27 += 8;
    uint64_t v33 = v34;
    if (v34) {
      MEMORY[0x223C45170](v33, -1, -1);
    }
  }
  MEMORY[0x223C45170](v29, -1, -1);
  uint64_t result = espresso_plan_build();
  if (result)
  {
    char v31 = 9;
    goto LABEL_50;
  }
  return result;
}

uint64_t sub_21F12058C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v80 = *MEMORY[0x263EF8340];
  *(void *)(v2 + 104) = a1;
  uint64_t v6 = *(void *)(v2 + 96);
  if (v6)
  {
    swift_beginAccess();
    sub_21F12522C((uint64_t *)v76);
    long long v77 = v76[0];
    long long v78 = v76[1];
    long long v79 = v76[2];
    sub_21F120078(*(void *)(v2 + 72), *(void *)(v2 + 56), *(unsigned int *)(v2 + 64), (char **)&v77);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v2 + 96);
  }
  if ((v6 & 2) == 0)
  {
    if (v6) {
      goto LABEL_47;
    }
    goto LABEL_7;
  }
  if ((a2 & 0x100000000) != 0)
  {
    sub_21F128018();
    swift_allocError();
    char v11 = 21;
LABEL_12:
    *unint64_t v10 = v11;
    return swift_willThrow();
  }
  swift_beginAccess();
  sub_21F12522C((uint64_t *)&v77);
  v71[0] = v77;
  v71[1] = v78;
  uint64_t v71[2] = v79;
  sub_21F120078(*(void *)(v2 + 48), *(void *)(v2 + 32), *(unsigned int *)(v2 + 40), (char **)v71);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  int v12 = (_DWORD **)(v2 + 176);
  swift_beginAccess();
  int v13 = espresso_network_bind_buffer();
  swift_endAccess();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F128018();
    swift_allocError();
    char v11 = 16;
    goto LABEL_12;
  }
  uint64_t v14 = *(void *)(v2 + 360);
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15) {
    goto LABEL_45;
  }
  unint64_t v65 = (_DWORD **)(v2 + 176);
  int v66 = a2;
  uint64_t v16 = (void *)(v2 + 168);
  unint64_t v17 = (uint64_t *)(v14 + 40);
  swift_bridgeObjectRetain();
  uint64_t v70 = v15 - 1;
  unint64_t v67 = (void *)(v2 + 168);
  while (1)
  {
    uint64_t v18 = *(v17 - 1);
    uint64_t v19 = *v17;
    unsigned __int8 v69 = v17;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v76[0] = *v16;
    uint64_t v21 = *(void *)&v76[0];
    *uint64_t v16 = 0x8000000000000000;
    unint64_t v23 = sub_21F10E9C8(v18, v19);
    uint64_t v24 = *(void *)(v21 + 16);
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
    }
    char v27 = v22;
    if (*(void *)(v21 + 24) >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        int v30 = *(void **)&v76[0];
        if (v22) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_21F126898();
        int v30 = *(void **)&v76[0];
        if (v27) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      sub_21F125E84(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_21F10E9C8(v18, v19);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_55;
      }
      unint64_t v23 = v28;
      int v30 = *(void **)&v76[0];
      if (v27)
      {
LABEL_24:
        uint64_t v31 = v30[7] + 168 * v23;
        *(_DWORD *)(v31 + 160) = 0;
        *(_OWORD *)(v31 + 128) = 0u;
        *(_OWORD *)(v31 + 144) = 0u;
        *(_OWORD *)(v31 + 96) = 0u;
        *(_OWORD *)(v31 + 112) = 0u;
        *(_OWORD *)(v31 + 64) = 0u;
        *(_OWORD *)(v31 + 80) = 0u;
        *(_OWORD *)(v31 + 32) = 0u;
        *(_OWORD *)(v31 + 48) = 0u;
        *(_OWORD *)uint64_t v31 = 0u;
        *(_OWORD *)(v31 + 16) = 0u;
        goto LABEL_28;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    unint64_t v32 = (uint64_t *)(v30[6] + 16 * v23);
    *unint64_t v32 = v18;
    v32[1] = v19;
    uint64_t v33 = v30[7] + 168 * v23;
    *(_DWORD *)(v33 + 160) = 0;
    *(_OWORD *)(v33 + 128) = 0u;
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 96) = 0u;
    *(_OWORD *)(v33 + 112) = 0u;
    *(_OWORD *)(v33 + 64) = 0u;
    *(_OWORD *)(v33 + 80) = 0u;
    *(_OWORD *)(v33 + 32) = 0u;
    *(_OWORD *)(v33 + 48) = 0u;
    *(_OWORD *)uint64_t v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    uint64_t v34 = v30[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_53;
    }
    v30[2] = v36;
    swift_bridgeObjectRetain();
LABEL_28:
    *(void *)(v4 + 168) = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v37 = *(unsigned int *)(v4 + 40);
    *(void *)&long long v77 = v18;
    *((void *)&v77 + 1) = v19;
    swift_bridgeObjectRetain();
    sub_21F156DD0();
    sub_21F156D20();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *(void **)(v4 + 168);
    *(void *)(v4 + 168) = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v41 = sub_21F10E9C8(v18, v19);
    uint64_t v42 = v39[2];
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43)) {
      goto LABEL_52;
    }
    char v45 = v40;
    if (v39[3] >= v44)
    {
      if (v38)
      {
        if ((v40 & 1) == 0) {
          goto LABEL_42;
        }
      }
      else
      {
        sub_21F126898();
        if ((v45 & 1) == 0) {
          goto LABEL_42;
        }
      }
    }
    else
    {
      sub_21F125E84(v44, v38);
      unint64_t v46 = sub_21F10E9C8(v18, v19);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_55;
      }
      unint64_t v41 = v46;
      if ((v45 & 1) == 0)
      {
LABEL_42:
        __break(1u);
LABEL_43:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21F128018();
        swift_allocError();
        char v11 = 6;
        goto LABEL_12;
      }
    }
    memmove(__dst, (const void *)(v39[7] + 168 * v41), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v74);
    unint64_t v48 = v68 & 0xFFFFFFFF00000000 | v37;
    int v49 = espresso_network_bind_buffer();
    sub_21F128854((uint64_t)v74, (uint64_t)v76);
    sub_21F128854((uint64_t)v76, (uint64_t)&v77);
    if (sub_21F1288BC((uint64_t)&v77) == 1)
    {
      swift_arrayDestroy();
      sub_21F127024(v41, (uint64_t)v39);
    }
    else
    {
      sub_21F128854((uint64_t)v76, (uint64_t)v72);
      uint64_t v50 = v39[7] + 168 * v41;
      long long v51 = v72[7];
      long long v52 = v72[8];
      long long v53 = v72[9];
      *(void *)(v50 + 160) = v73;
      *(_OWORD *)(v50 + 128) = v52;
      *(_OWORD *)(v50 + 144) = v53;
      *(_OWORD *)(v50 + 112) = v51;
      long long v54 = v72[3];
      long long v55 = v72[4];
      long long v56 = v72[6];
      *(_OWORD *)(v50 + 80) = v72[5];
      *(_OWORD *)(v50 + 96) = v56;
      *(_OWORD *)(v50 + 48) = v54;
      *(_OWORD *)(v50 + 64) = v55;
      long long v58 = v72[1];
      long long v57 = v72[2];
      *(_OWORD *)uint64_t v50 = v72[0];
      *(_OWORD *)(v50 + 16) = v58;
      *(_OWORD *)(v50 + 32) = v57;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v67;
    void *v67 = v39;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_43;
    }
    if (!v70) {
      break;
    }
    unint64_t v68 = v48;
    unint64_t v17 = v69 + 2;
    --v70;
  }
  swift_bridgeObjectRelease();
  LODWORD(a2) = v66;
  int v12 = v65;
LABEL_45:
  uint64_t v59 = *v12;
  if (*v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v59 = a2;
    if (*(void *)(v4 + 96))
    {
LABEL_47:
      uint64_t v8 = (uint64_t *)(v4 + 56);
      swift_beginAccess();
      int64_t v9 = (unsigned int *)(v4 + 64);
      goto LABEL_48;
    }
LABEL_7:
    uint64_t v8 = (uint64_t *)(v4 + 32);
    swift_beginAccess();
    int64_t v9 = (unsigned int *)(v4 + 40);
LABEL_48:
    unsigned int v60 = *v9;
    uint64_t v61 = *v8;
    uint64_t v62 = *(void *)(v4 + 344);
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21F128160(v61, v60, v62, (uint64_t *)(v4 + 120), (uint64_t *)(v4 + 128));
    swift_endAccess();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v4 + 352);
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21F128160(v61, v60, v63, (uint64_t *)(v4 + 136), (uint64_t *)(v4 + 144));
    swift_endAccess();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v64 = *(void *)(v4 + 360);
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21F128160(v61, v60, v64, (uint64_t *)(v4 + 152), (uint64_t *)(v4 + 160));
    swift_endAccess();
    swift_endAccess();
    uint64_t result = swift_bridgeObjectRelease();
    if (*(unsigned char *)(v4 + 112) == 1) {
      return sub_21F124688();
    }
  }
  else
  {
    __break(1u);
LABEL_55:
    uint64_t result = sub_21F157680();
    __break(1u);
  }
  return result;
}

uint64_t sub_21F120EE8()
{
  uint64_t v0 = sub_21F156F40();
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 16) = 10;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  sub_21F156D20();
  espresso_network_query_blob_shape();
  swift_release();
  return v0;
}

uint64_t sub_21F120FF4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!a1) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = *a3;
  uint64_t v11 = v36;
  *a3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_21F10E9C8(a4, a5);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v5 = v12;
  if (*(void *)(v11 + 24) >= v16)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v12) {
        goto LABEL_9;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_14:
    sub_21F126898();
    if (v5) {
      goto LABEL_9;
    }
    goto LABEL_15;
  }
  sub_21F125E84(v16, isUniquelyReferenced_nonNull_native);
  unint64_t v17 = sub_21F10E9C8(a4, a5);
  if ((v5 & 1) != (v18 & 1))
  {
LABEL_17:
    uint64_t result = sub_21F157680();
    __break(1u);
    return result;
  }
  unint64_t v13 = v17;
  if ((v5 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v19 = v36;
  memmove(__dst, (const void *)(*(void *)(v36 + 56) + 168 * v13), 0xA8uLL);
  sub_21F12884C((uint64_t)__dst);
  sub_21F128854((uint64_t)__dst, (uint64_t)v32);
  v32[0] = a1;
  sub_21F128854((uint64_t)v32, (uint64_t)v34);
  sub_21F128854((uint64_t)v34, (uint64_t)v35);
  if (sub_21F1288BC((uint64_t)v35) == 1)
  {
    swift_arrayDestroy();
    sub_21F127024(v13, v19);
  }
  else
  {
    sub_21F128854((uint64_t)v34, (uint64_t)v30);
    uint64_t v20 = *(void *)(v19 + 56) + 168 * v13;
    long long v21 = v30[7];
    long long v22 = v30[8];
    long long v23 = v30[9];
    *(void *)(v20 + 160) = v31;
    *(_OWORD *)(v20 + 128) = v22;
    *(_OWORD *)(v20 + 144) = v23;
    *(_OWORD *)(v20 + 112) = v21;
    long long v24 = v30[3];
    long long v25 = v30[4];
    long long v26 = v30[6];
    *(_OWORD *)(v20 + 80) = v30[5];
    *(_OWORD *)(v20 + 96) = v26;
    *(_OWORD *)(v20 + 48) = v24;
    *(_OWORD *)(v20 + 64) = v25;
    long long v27 = v30[2];
    long long v28 = v30[1];
    *(_OWORD *)uint64_t v20 = v30[0];
    *(_OWORD *)(v20 + 16) = v28;
    *(_OWORD *)(v20 + 32) = v27;
  }
  swift_bridgeObjectRelease();
  *a3 = v19;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F121214(uint64_t *a1)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t v2 = sub_21F121290(&v4, (uint64_t *)(v1 + 152));
  swift_endAccess();
  return v2;
}

uint64_t sub_21F121290(void *a1, uint64_t *a2)
{
  if (*a1 == 1)
  {
    swift_beginAccess();
    uint64_t v4 = (unsigned int *)(v24 + 64);
  }
  else
  {
    swift_beginAccess();
    uint64_t v4 = (unsigned int *)(v24 + 40);
  }
  uint64_t v30 = *v4;
  uint64_t v5 = *(void *)(v24 + 360);
  uint64_t v28 = *(void *)(v5 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = 0;
    unint64_t v7 = 0;
    do
    {
      if (v6 >= *(void *)(v5 + 16))
      {
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_29:
        __break(1u);
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_21F156F40();
      *(_OWORD *)(v8 + 32) = 0u;
      *(void *)(v8 + 16) = 10;
      *(_OWORD *)(v8 + 48) = 0u;
      *(_OWORD *)(v8 + 64) = 0u;
      *(_OWORD *)(v8 + 80) = 0u;
      *(_OWORD *)(v8 + 96) = 0u;
      sub_21F156D20();
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v30;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v9 = __OFADD__(v7++, 1);
      if (v9) {
        goto LABEL_24;
      }
      ++v6;
    }
    while (v6 != v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = 0;
  }
  v3.i32[0] = 1.0;
  uint64_t v10 = sub_21F11F40C(v7, v3);
  uint64_t v11 = *(void *)(v24 + 360);
  uint64_t v29 = *(void *)(v11 + 16);
  if (v29)
  {
    uint64_t v27 = v11 + 32;
    uint64_t v12 = swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v25 = v12;
    do
    {
      if (v13 >= *(void *)(v12 + 16)) {
        goto LABEL_25;
      }
      BOOL v15 = (uint64_t *)(v27 + 16 * v13);
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_21F156F40();
      *(void *)(v18 + 16) = 10;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *(_OWORD *)(v18 + 96) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      sub_21F156D20();
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v30;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_21F127410(v10);
      }
      uint64_t v19 = *a2;
      if (!*(void *)(*a2 + 16)) {
        goto LABEL_26;
      }
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_21F10E9C8(v16, v17);
      if ((v21 & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 168 * v20);
      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_29;
      }
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      BOOL v9 = __OFADD__(v14++, 1);
      if (v9) {
        goto LABEL_27;
      }
      ++v13;
      uint64_t v12 = v25;
    }
    while (v13 != v29);
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_21F121758(unsigned char *a1)
{
  v39[7] = *MEMORY[0x263EF8340];
  if (*a1)
  {
    swift_beginAccess();
    int32x2_t v3 = (unsigned int *)(v1 + 64);
  }
  else
  {
    swift_beginAccess();
    int32x2_t v3 = (unsigned int *)(v1 + 40);
  }
  uint64_t v4 = *(void *)(v1 + 352);
  uint64_t v37 = *(void *)(v4 + 16);
  if (v37)
  {
    uint64_t v36 = *v3;
    uint64_t v35 = v4 + 32;
    swift_bridgeObjectRetain();
    uint64_t v34 = (uint64_t *)(v1 + 136);
    swift_beginAccess();
    unint64_t v5 = 0;
    unint64_t v6 = (void *)MEMORY[0x263F8EE80];
    uint64_t v33 = v4;
    while (1)
    {
      if (v5 >= *(void *)(v4 + 16)) {
        goto LABEL_41;
      }
      unint64_t v7 = (uint64_t *)(v35 + 16 * v5);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_21F156F40();
      *(void *)(v10 + 16) = 10;
      *(_OWORD *)(v10 + 48) = 0u;
      *(_OWORD *)(v10 + 64) = 0u;
      *(_OWORD *)(v10 + 80) = 0u;
      *(_OWORD *)(v10 + 96) = 0u;
      *(_OWORD *)(v10 + 32) = 0u;
      v39[0] = 0;
      sub_21F156D20();
      unint64_t v11 = v2 & 0xFFFFFFFF00000000 | v36;
      espresso_network_query_blob_shape();
      swift_release();
      if ((v39[0] & 0x8000000000000000) != 0) {
        goto LABEL_42;
      }
      if (*(void *)(v10 + 16) < v39[0]) {
        goto LABEL_43;
      }
      if (!v39[0])
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = 1;
        goto LABEL_18;
      }
      uint64_t v13 = 0;
      uint64_t v12 = 1;
      do
      {
        uint64_t v14 = *(void *)(v10 + 8 * v13 + 32);
        if ((unsigned __int128)(v12 * (__int128)v14) >> 64 != (v12 * v14) >> 63)
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_47:
          __break(1u);
        }
        v12 *= v14;
        ++v13;
      }
      while (v39[0] != v13);
      swift_bridgeObjectRelease();
      if (v12 < 0) {
        goto LABEL_49;
      }
      if (v12)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_21F156F40();
        *(void *)(v15 + 16) = v12;
        bzero((void *)(v15 + 32), 4 * v12);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x263F8EE78];
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39[0] = v6;
      sub_21F10F1BC(v15, v9, v8, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = (void *)v39[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((unint64_t)v12 >> 31) {
        break;
      }
      uint64_t v18 = *v34;
      if (!*(void *)(*v34 + 16)) {
        goto LABEL_44;
      }
      unint64_t v38 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_21F10E9C8(v9, v8);
      if ((v20 & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 168 * v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v21) {
        goto LABEL_47;
      }
      swift_bridgeObjectRetain();
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      v39[0] = v17;
      swift_bridgeObjectRetain();
      unint64_t v6 = v17;
      unint64_t v24 = sub_21F10E9C8(v9, v8);
      uint64_t v25 = v17[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        goto LABEL_45;
      }
      char v28 = v23;
      if (v17[3] >= v27)
      {
        if (v22)
        {
          if ((v23 & 1) == 0) {
            goto LABEL_36;
          }
        }
        else
        {
          unint64_t v6 = v39;
          sub_21F126ABC();
          if ((v28 & 1) == 0) {
            goto LABEL_36;
          }
        }
        goto LABEL_30;
      }
      sub_21F1261E8(v27, v22);
      unint64_t v6 = (void *)v39[0];
      unint64_t v29 = sub_21F10E9C8(v9, v8);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_50;
      }
      unint64_t v24 = v29;
      if ((v28 & 1) == 0)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_30:
      uint64_t v31 = *(void *)(*(void *)(v39[0] + 56) + 8 * v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v31 = sub_21F103A90(0, *(void *)(v31 + 16), 0, v31);
      }
      swift_bridgeObjectRetain();
      cblas_scopy_NEWLAPACK();
      unint64_t v6 = (void *)v39[0];
      if (v31)
      {
        *(void *)(*(void *)(v39[0] + 56) + 8 * v24) = v31;
      }
      else
      {
        swift_arrayDestroy();
        sub_21F126E4C(v24, (uint64_t)v6);
      }
      unint64_t v2 = v38;
      ++v5;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v33;
      if (v5 == v37)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
    }
    sub_21F157400();
    __break(1u);
LABEL_49:
    sub_21F157400();
    __break(1u);
LABEL_50:
    uint64_t result = sub_21F157680();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_21F121C84(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned __int8 *a5, char a6)
{
  uint64_t v8 = v6;
  v120[9] = *MEMORY[0x263EF8340];
  int v112 = *a5;
  sub_21F128018();
  uint64_t v14 = (void *)swift_allocError();
  *uint64_t v15 = 18;
  if ((*(unsigned char *)(v8 + 96) & 2) == 0) {
    return swift_willThrow();
  }
  int v106 = a4;
  char v107 = a6;

  uint64_t v17 = *(void *)(v8 + 104);
  swift_beginAccess();
  uint64_t result = sub_21F123960(a1, a2, a3, v17, *(void *)(v8 + 32), *(_DWORD *)(v8 + 40));
  if (!v7)
  {
    sub_21F123E04(*(void *)(v8 + 32), *(_DWORD *)(v8 + 40));
    uint64_t v18 = 0;
    uint64_t v115 = (void *)sub_21F127B9C(0, a3, 1);
    char v19 = v107;
    if (v107)
    {
      v120[0] = 2;
      swift_beginAccess();
      uint64_t v103 = sub_21F121290(v120, (uint64_t *)(v8 + 152));
      swift_endAccess();
      if (a4)
      {
LABEL_8:
        int v97 = 0;
        uint64_t v100 = v8 + 152;
        uint64_t v101 = (uint64_t *)(v8 + 168);
        uint64_t v110 = v8 + 120;
        uint64_t v104 = a1 + 64;
        uint64_t v20 = MEMORY[0x263F8EE78];
        uint64_t v116 = v8;
        uint64_t v108 = a1;
        uint64_t v109 = a3;
        uint64_t v111 = a2;
        while (1)
        {
          if (v19)
          {
            swift_bridgeObjectRelease();
            uint64_t v21 = *(void *)(v103 + 16);
            if (v21)
            {
              uint64_t v22 = sub_21F156F40();
              *(void *)(v22 + 16) = v21;
              uint64_t v98 = v22;
              bzero((void *)(v22 + 32), 4 * v21);
              if (v112) {
                goto LABEL_16;
              }
            }
            else
            {
              uint64_t v98 = MEMORY[0x263F8EE78];
              if (v112)
              {
LABEL_16:
                unint64_t v23 = v115[2];
                if (v23 >= 2)
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v115 = sub_21F127438(v115);
                  }
                  unint64_t v24 = 0;
                  uint64_t v25 = v115 + 4;
                  do
                  {
                    v119[0] = 0;
                    MEMORY[0x223C45180](v119, 8);
                    uint64_t v27 = (v119[0] * (unsigned __int128)v23) >> 64;
                    if (v23 > v119[0] * v23)
                    {
                      unint64_t v28 = -(uint64_t)v23 % v23;
                      if (v28 > v119[0] * v23)
                      {
                        do
                        {
                          v119[0] = 0;
                          MEMORY[0x223C45180](v119, 8);
                        }
                        while (v28 > v119[0] * v23);
                        uint64_t v27 = (v119[0] * (unsigned __int128)v23) >> 64;
                      }
                      a2 = v111;
                    }
                    BOOL v29 = __OFADD__(v24, v27);
                    unint64_t v30 = v24 + v27;
                    if (v29)
                    {
LABEL_144:
                      __break(1u);
                      swift_endAccess();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      return swift_bridgeObjectRelease();
                    }
                    if (v24 != v30)
                    {
                      unint64_t v31 = v115[2];
                      if (v24 >= v31)
                      {
                        __break(1u);
LABEL_146:
                        __break(1u);
LABEL_147:
                        __break(1u);
LABEL_148:
                        __break(1u);
LABEL_149:
                        __break(1u);
LABEL_150:
                        __break(1u);
LABEL_151:
                        __break(1u);
LABEL_152:
                        __break(1u);
LABEL_153:
                        __break(1u);
LABEL_154:
                        __break(1u);
LABEL_155:
                        __break(1u);
LABEL_156:
                        __break(1u);
LABEL_157:
                        __break(1u);
                        goto LABEL_158;
                      }
                      if (v30 >= v31) {
                        goto LABEL_146;
                      }
                      uint64_t v32 = v25[v24];
                      uint64_t v33 = v30;
                      v25[v24] = v25[v33];
                      v25[v33] = v32;
                    }
                    ++v24;
                  }
                  while ((uint64_t)v23-- > 2);
                }
              }
            }
          }
          else
          {
            uint64_t v98 = v20;
            if (v112) {
              goto LABEL_16;
            }
          }
          uint64_t v34 = *(void *)(v8 + 104);
          if (!v34) {
            goto LABEL_152;
          }
          if (a3 == 0x8000000000000000 && v34 == -1) {
            goto LABEL_155;
          }
          uint64_t v35 = a3 / v34;
          if (a3 / v34 < 0) {
            goto LABEL_153;
          }
          uint64_t v99 = v18;
          if (!v35) {
            goto LABEL_114;
          }
          uint64_t v36 = 0;
          uint64_t v95 = a3 / v34;
          do
          {
            if (v36 == v35) {
              goto LABEL_154;
            }
            uint64_t v96 = v36 + 1;
            uint64_t v37 = 1 << *(unsigned char *)(a1 + 32);
            if (v37 < 64) {
              uint64_t v38 = ~(-1 << v37);
            }
            else {
              uint64_t v38 = -1;
            }
            unint64_t v39 = v38 & *(void *)(a1 + 64);
            swift_bridgeObjectRetain();
            swift_beginAccess();
            int64_t v40 = 0;
            int64_t v105 = (unint64_t)(v37 + 63) >> 6;
            while (1)
            {
              if (v39)
              {
                unint64_t v41 = __clz(__rbit64(v39));
                uint64_t v42 = (v39 - 1) & v39;
                unint64_t v43 = v41 | (v40 << 6);
                goto LABEL_60;
              }
              BOOL v29 = __OFADD__(v40++, 1);
              if (v29) {
                goto LABEL_147;
              }
              if (v40 >= v105) {
                break;
              }
              unint64_t v44 = *(void *)(v104 + 8 * v40);
              if (!v44)
              {
                int64_t v45 = v40 + 1;
                if (v40 + 1 >= v105) {
                  break;
                }
                unint64_t v44 = *(void *)(v104 + 8 * v45);
                if (!v44)
                {
                  int64_t v45 = v40 + 2;
                  if (v40 + 2 >= v105) {
                    break;
                  }
                  unint64_t v44 = *(void *)(v104 + 8 * v45);
                  if (!v44)
                  {
                    int64_t v45 = v40 + 3;
                    if (v40 + 3 >= v105) {
                      break;
                    }
                    unint64_t v44 = *(void *)(v104 + 8 * v45);
                    if (!v44)
                    {
                      int64_t v45 = v40 + 4;
                      if (v40 + 4 >= v105) {
                        break;
                      }
                      unint64_t v44 = *(void *)(v104 + 8 * v45);
                      if (!v44)
                      {
                        int64_t v45 = v40 + 5;
                        if (v40 + 5 >= v105) {
                          break;
                        }
                        unint64_t v44 = *(void *)(v104 + 8 * v45);
                        if (!v44)
                        {
                          while (1)
                          {
                            int64_t v40 = v45 + 1;
                            if (__OFADD__(v45, 1)) {
                              break;
                            }
                            if (v40 >= v105) {
                              goto LABEL_85;
                            }
                            unint64_t v44 = *(void *)(v104 + 8 * v40);
                            ++v45;
                            if (v44) {
                              goto LABEL_59;
                            }
                          }
LABEL_158:
                          __break(1u);
LABEL_159:
                          __break(1u);
                        }
                      }
                    }
                  }
                }
                int64_t v40 = v45;
              }
LABEL_59:
              uint64_t v42 = (v44 - 1) & v44;
              unint64_t v43 = __clz(__rbit64(v44)) + (v40 << 6);
LABEL_60:
              unint64_t v46 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v43);
              uint64_t v47 = *v46;
              uint64_t v48 = v46[1];
              uint64_t v49 = *(void *)(a1 + 16);
              swift_bridgeObjectRetain();
              if (!v49) {
                goto LABEL_161;
              }
              swift_bridgeObjectRetain();
              sub_21F10E9C8(v47, v48);
              if ((v50 & 1) == 0)
              {
                swift_bridgeObjectRelease();
LABEL_161:
                __break(1u);
LABEL_162:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_163:
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_164:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_165:
                __break(1u);
LABEL_166:
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_167:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_168:
                __break(1u);
                goto LABEL_169;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v51 = *(void *)v110;
              if (!*(void *)(*(void *)v110 + 16))
              {
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
                goto LABEL_144;
              }
              unint64_t v113 = v42;
              int64_t v52 = v40;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v53 = sub_21F10E9C8(v47, v48);
              if ((v54 & 1) == 0) {
                goto LABEL_162;
              }
              uint64_t v55 = *(void *)(*(void *)(v51 + 56) + 168 * v53);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!*(void *)(a2 + 16)) {
                goto LABEL_142;
              }
              swift_bridgeObjectRetain();
              unint64_t v56 = sub_21F10E9C8(v47, v48);
              if ((v57 & 1) == 0) {
                goto LABEL_163;
              }
              uint64_t v58 = *(void *)(*(void *)(a2 + 56) + 8 * v56);
              swift_bridgeObjectRelease();
              uint64_t v59 = *(void *)(v8 + 104);
              if (v59 < 0) {
                goto LABEL_143;
              }
              if (v59)
              {
                uint64_t v60 = 0;
                while (v59 != v60)
                {
                  uint64_t v61 = *(void *)(v116 + 104);
                  uint64_t v62 = v36 * v61;
                  if ((unsigned __int128)(v36 * (__int128)v61) >> 64 != (v36 * v61) >> 63) {
                    goto LABEL_132;
                  }
                  BOOL v29 = __OFADD__(v62, v60);
                  unint64_t v63 = v62 + v60;
                  if (v29) {
                    goto LABEL_133;
                  }
                  if (v58 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v58 >= 0x80000000) {
                    goto LABEL_169;
                  }
                  if ((v63 & 0x8000000000000000) != 0) {
                    goto LABEL_134;
                  }
                  if (v63 >= v115[2]) {
                    goto LABEL_135;
                  }
                  if ((unsigned __int128)(v58 * (__int128)(uint64_t)v115[v63 + 4]) >> 64 != (v58 * v115[v63 + 4]) >> 63) {
                    goto LABEL_136;
                  }
                  if (!v55) {
                    goto LABEL_156;
                  }
                  if ((unsigned __int128)(v58 * (__int128)v60) >> 64 != (v58 * v60) >> 63) {
                    goto LABEL_137;
                  }
                  ++v60;
                  cblas_scopy_NEWLAPACK();
                  if (v59 == v60) {
                    goto LABEL_42;
                  }
                }
                __break(1u);
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
LABEL_42:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v8 = v116;
              a1 = v108;
              a3 = v109;
              a2 = v111;
              int64_t v40 = v52;
              unint64_t v39 = v113;
            }
LABEL_85:
            swift_release();
            if (espresso_plan_execute_sync()) {
              goto LABEL_140;
            }
            if ((v107 & 1) == 0)
            {
              uint64_t v69 = *(void *)(v8 + 360);
              uint64_t v114 = *(void *)(v69 + 16);
              if (!v114) {
                goto LABEL_113;
              }
              swift_bridgeObjectRetain();
              swift_beginAccess();
              swift_beginAccess();
              unint64_t v70 = 0;
LABEL_95:
              if (v70 >= *(void *)(v69 + 16)) {
                goto LABEL_148;
              }
              uint64_t v71 = (uint64_t *)(v69 + 32 + 16 * v70);
              uint64_t v73 = *v71;
              uint64_t v72 = v71[1];
              uint64_t v74 = *(unsigned int *)(v116 + 40);
              swift_bridgeObjectRetain();
              uint64_t v75 = sub_21F156F40();
              *(void *)(v75 + 16) = 10;
              *(_OWORD *)(v75 + 48) = 0u;
              *(_OWORD *)(v75 + 64) = 0u;
              *(_OWORD *)(v75 + 80) = 0u;
              *(_OWORD *)(v75 + 96) = 0u;
              *(_OWORD *)(v75 + 32) = 0u;
              v119[0] = 0;
              sub_21F156D20();
              unint64_t v76 = v102 & 0xFFFFFFFF00000000 | v74;
              espresso_network_query_blob_shape();
              swift_release();
              if ((v119[0] & 0x8000000000000000) != 0) {
                goto LABEL_149;
              }
              unint64_t v102 = v76;
              if (*(void *)(v75 + 16) < v119[0]) {
                goto LABEL_150;
              }
              a2 = v111;
              if (!v119[0])
              {
                swift_bridgeObjectRelease();
                goto LABEL_105;
              }
              uint64_t v77 = 0;
              uint64_t v78 = 1;
              while (1)
              {
                uint64_t v79 = *(void *)(v75 + 8 * v77 + 32);
                uint64_t v80 = (unsigned __int128)(v78 * (__int128)v79) >> 64;
                v78 *= v79;
                if (v80 != v78 >> 63) {
                  break;
                }
                if (v119[0] == ++v77)
                {
                  swift_bridgeObjectRelease();
                  if (v78 < (uint64_t)0xFFFFFFFF80000000 || v78 >= 0x80000000) {
                    goto LABEL_169;
                  }
LABEL_105:
                  uint64_t v81 = *v101;
                  if (!*(void *)(*v101 + 16)) {
                    goto LABEL_151;
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  unint64_t v82 = sub_21F10E9C8(v73, v72);
                  if ((v83 & 1) == 0) {
                    goto LABEL_164;
                  }
                  uint64_t v84 = *(void *)(*(void *)(v81 + 56) + 168 * v82);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (!v84) {
                    goto LABEL_165;
                  }
                  uint64_t v85 = *(void *)v100;
                  if (!*(void *)(*(void *)v100 + 16)) {
                    goto LABEL_166;
                  }
                  swift_bridgeObjectRetain();
                  unint64_t v86 = sub_21F10E9C8(v73, v72);
                  if ((v87 & 1) == 0) {
                    goto LABEL_167;
                  }
                  uint64_t v88 = *(void *)(*(void *)(v85 + 56) + 168 * v86);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (!v88) {
                    goto LABEL_168;
                  }
                  ++v70;
                  cblas_scopy_NEWLAPACK();
                  if (v70 == v114)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v8 = v116;
                    a1 = v108;
                    a3 = v109;
                    goto LABEL_113;
                  }
                  goto LABEL_95;
                }
              }
              __break(1u);
LABEL_140:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_allocError();
              *unint64_t v94 = 15;
              swift_willThrow();
              return swift_bridgeObjectRelease();
            }
            uint64_t v117 = 2;
            swift_beginAccess();
            uint64_t v64 = sub_21F121290(&v117, v101);
            swift_endAccess();
            unint64_t v65 = *(void *)(v64 + 16);
            if (v65 >> 31)
            {
LABEL_169:
              uint64_t result = sub_21F157400();
              __break(1u);
              return result;
            }
            swift_bridgeObjectRetain();
            uint64_t v66 = a1;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v64 = sub_21F103A90(0, v65, 0, v64);
            }
            uint64_t v99 = 0;
            cblas_saxpy_NEWLAPACK();
            swift_bridgeObjectRelease();
            vDSP_Length v67 = *(void *)(v98 + 16);
            swift_bridgeObjectRetain();
            uint64_t v68 = v98;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v68 = sub_21F103A90(0, v67, 0, v98);
            }
            vDSP_vadd((const float *)(v64 + 32), 1, (const float *)(v98 + 32), 1, (float *)(v68 + 32), 1, v67);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v98 = v68;
            a3 = v109;
            a1 = v66;
LABEL_113:
            uint64_t v35 = v95;
            uint64_t v36 = v96;
          }
          while (v96 != v95);
LABEL_114:
          char v19 = v107;
          if ((v107 & 1) == 0)
          {
            uint64_t v20 = v98;
            uint64_t v18 = v99;
            goto LABEL_126;
          }
          uint64_t v89 = *(void *)(v8 + 104);
          if (!v89) {
            goto LABEL_157;
          }
          if (a3 == 0x8000000000000000 && v89 == -1) {
            goto LABEL_159;
          }
          float __B = (float)(a3 / v89);
          vDSP_Length v90 = *(void *)(v98 + 16);
          swift_bridgeObjectRetain();
          uint64_t v20 = v98;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_21F103A90(0, v90, 0, v98);
          }
          vDSP_vsdiv((const float *)(v98 + 32), 1, &__B, (float *)(v20 + 32), 1, v90);
          swift_bridgeObjectRelease();
          vDSP_Length v91 = *(void *)(v20 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v92 = v103;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v92 = sub_21F103A90(0, *(void *)(v103 + 16), 0, v103);
          }
          vDSP_vadd((const float *)(v103 + 32), 1, (const float *)(v20 + 32), 1, (float *)(v92 + 32), 1, v91);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v117 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v92 = sub_21F127410(v92);
          }
          uint64_t v93 = *(void *)(v92 + 16);
          uint64_t v103 = v92;
          v119[0] = v92 + 32;
          v119[1] = v93;
          sub_21F122A40(v119, v8, &v117);
          uint64_t v18 = v99;
          a1 = v108;
          a3 = v109;
          char v19 = v107;
LABEL_126:
          if (++v97 == v106) {
            goto LABEL_138;
          }
        }
      }
    }
    else
    {
      uint64_t v103 = MEMORY[0x263F8EE78];
      if (a4) {
        goto LABEL_8;
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_21F122A40(void *result, uint64_t a2, void *a3)
{
  if (*result)
  {
    uint64_t v3 = a2;
    uint64_t v4 = *(void *)(a2 + 360);
    uint64_t v21 = *(void *)(v4 + 16);
    if (v21)
    {
      uint64_t v20 = v4 + 32;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      char v19 = (uint64_t *)(v3 + 152);
      swift_beginAccess();
      unint64_t v6 = 0;
      uint64_t v17 = v4;
      uint64_t v18 = v3;
      do
      {
        if (v6 >= *(void *)(v4 + 16))
        {
          __break(1u);
          __break(1u);
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_16:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
LABEL_17:
          __break(1u);
        }
        uint64_t v7 = (uint64_t *)(v20 + 16 * v6);
        uint64_t v8 = *v7;
        uint64_t v9 = v7[1];
        uint64_t v10 = *(unsigned int *)(v3 + 40);
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_21F156F40();
        *(void *)(v11 + 16) = 10;
        *(_OWORD *)(v11 + 48) = 0u;
        *(_OWORD *)(v11 + 64) = 0u;
        *(_OWORD *)(v11 + 80) = 0u;
        *(_OWORD *)(v11 + 96) = 0u;
        *(_OWORD *)(v11 + 32) = 0u;
        sub_21F156D20();
        unint64_t v22 = v22 & 0xFFFFFFFF00000000 | v10;
        espresso_network_query_blob_shape();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v12 = *v19;
        if (!*(void *)(*v19 + 16)) {
          goto LABEL_15;
        }
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_21F10E9C8(v8, v9);
        if ((v14 & 1) == 0) {
          goto LABEL_16;
        }
        uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 168 * v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v15) {
          goto LABEL_17;
        }
        cblas_scopy_NEWLAPACK();
        if (__OFADD__(*a3, 1)) {
          goto LABEL_14;
        }
        ++v6;
        ++*a3;
        uint64_t v4 = v17;
        uint64_t v3 = v18;
      }
      while (v6 != v21);
      return (void *)swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_21F106A1C();
    swift_allocError();
    *uint64_t v16 = 0;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t sub_21F122DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v4;
  sub_21F128018();
  uint64_t v9 = (void *)swift_allocError();
  *uint64_t v10 = 19;
  if ((*(unsigned char *)(v3 + 96) & 1) == 0)
  {
    swift_willThrow();
    return (uint64_t)v11;
  }

  uint64_t v12 = *(void *)(v3 + 104);
  if (!v12)
  {
    __break(1u);
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  if (a3 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_105;
  }
  swift_beginAccess();
  uint64_t v58 = v12;
  sub_21F123960(a1, a2, a3, v12, *(void *)(v3 + 56), *(_DWORD *)(v3 + 64));
  if (v4) {
    return (uint64_t)v11;
  }
  sub_21F123E04(*(void *)(v3 + 56), *(_DWORD *)(v3 + 64));
  uint64_t v12 = 0;
  uint64_t v14 = a3 / v58;
  if (a3 / v58 < 0) {
    goto LABEL_108;
  }
  uint64_t v65 = v3;
  uint64_t v56 = a3 / v58;
  if (!v14)
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_59;
  }
  uint64_t v12 = 0;
  uint64_t v61 = a1 + 64;
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v66 = (uint64_t *)(v3 + 120);
  while (2)
  {
    if (v12 == v14)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      swift_bridgeObjectRelease();
LABEL_111:
      __break(1u);
LABEL_112:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_113:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      uint64_t v59 = sub_21F103DC4(0, v59[2] + 1, 1, v59);
LABEL_100:
      int64_t v52 = v59;
      unint64_t v54 = v59[2];
      unint64_t v53 = v59[3];
      if (v54 >= v53 >> 1) {
        int64_t v52 = sub_21F103DC4((void *)(v53 > 1), v54 + 1, 1, v59);
      }
      v52[2] = v54 + 1;
      v52[v54 + 4] = v7;
      uint64_t v55 = v52;
      sub_21F125030(v6, v5, *(void *)(v3 + 56), *(_DWORD *)(v3 + 64));
      if (!v12) {
        return (uint64_t)v55;
      }
LABEL_95:
      swift_bridgeObjectRelease();
      return (uint64_t)v11;
    }
    uint64_t v59 = v11;
    uint64_t v57 = v12 + 1;
    uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
    if (v7 < 64) {
      uint64_t v15 = ~(-1 << v7);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & *(void *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    int64_t v17 = 0;
    int64_t v63 = (unint64_t)(v7 + 63) >> 6;
    if (v16)
    {
LABEL_17:
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_36;
    }
    while (1)
    {
      int64_t v20 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
LABEL_99:
        uint64_t v69 = 1;
        uint64_t v7 = sub_21F121758(&v69);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_116;
        }
        goto LABEL_100;
      }
      if (v20 >= v63) {
        goto LABEL_50;
      }
      unint64_t v21 = *(void *)(v61 + 8 * v20);
      ++v17;
      if (!v21)
      {
        int64_t v17 = v20 + 1;
        if (v20 + 1 >= v63) {
          goto LABEL_50;
        }
        unint64_t v21 = *(void *)(v61 + 8 * v17);
        if (!v21)
        {
          int64_t v17 = v20 + 2;
          if (v20 + 2 >= v63) {
            goto LABEL_50;
          }
          unint64_t v21 = *(void *)(v61 + 8 * v17);
          if (!v21)
          {
            int64_t v17 = v20 + 3;
            if (v20 + 3 >= v63) {
              goto LABEL_50;
            }
            unint64_t v21 = *(void *)(v61 + 8 * v17);
            if (!v21)
            {
              int64_t v17 = v20 + 4;
              if (v20 + 4 >= v63) {
                goto LABEL_50;
              }
              unint64_t v21 = *(void *)(v61 + 8 * v17);
              if (!v21) {
                break;
              }
            }
          }
        }
      }
LABEL_35:
      unint64_t v16 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_36:
      unint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v19);
      uint64_t v24 = *v23;
      uint64_t v5 = v23[1];
      uint64_t v25 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v25) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      uint64_t v3 = a1;
      unint64_t v26 = sub_21F10E9C8(v24, v5);
      if ((v27 & 1) == 0) {
        goto LABEL_110;
      }
      uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v3 = *v66;
      if (!*(void *)(*v66 + 16))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_21F10E9C8(v24, v5);
      if ((v29 & 1) == 0) {
        goto LABEL_112;
      }
      uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 168 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a2;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_91;
      }
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_21F10E9C8(v24, v5);
      if ((v31 & 1) == 0) {
        goto LABEL_113;
      }
      uint64_t v32 = *(void *)(*(void *)(a2 + 56) + 8 * v30);
      swift_bridgeObjectRelease();
      uint64_t v3 = v65;
      uint64_t v33 = *(void *)(v65 + 104);
      uint64_t v34 = v32 * v33;
      if ((unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63) {
        goto LABEL_92;
      }
      if (v34 < (uint64_t)0xFFFFFFFF80000000 || v34 >= 0x80000000)
      {
LABEL_119:
        uint64_t result = sub_21F157400();
        __break(1u);
        return result;
      }
      if ((unsigned __int128)(v32 * (__int128)v12) >> 64 != (v32 * v12) >> 63) {
        goto LABEL_93;
      }
      if ((unsigned __int128)(v32 * v12 * (__int128)v33) >> 64 != (v32 * v12 * v33) >> 63) {
        goto LABEL_94;
      }
      if (!v7) {
        goto LABEL_114;
      }
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_17;
      }
    }
    int64_t v22 = v20 + 5;
    if (v22 < v63)
    {
      unint64_t v21 = *(void *)(v61 + 8 * v22);
      if (!v21)
      {
        while (1)
        {
          int64_t v17 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_107;
          }
          if (v17 >= v63) {
            goto LABEL_50;
          }
          unint64_t v21 = *(void *)(v61 + 8 * v17);
          ++v22;
          if (v21) {
            goto LABEL_35;
          }
        }
      }
      int64_t v17 = v22;
      goto LABEL_35;
    }
LABEL_50:
    swift_release();
    if (espresso_plan_execute_sync()) {
      goto LABEL_97;
    }
    uint64_t v69 = 1;
    uint64_t v7 = sub_21F121758(&v69);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v11 = v59;
    }
    else {
      uint64_t v11 = sub_21F103DC4(0, v59[2] + 1, 1, v59);
    }
    unint64_t v36 = v11[2];
    unint64_t v35 = v11[3];
    if (v36 >= v35 >> 1) {
      uint64_t v11 = sub_21F103DC4((void *)(v35 > 1), v36 + 1, 1, v11);
    }
    v11[2] = v36 + 1;
    v11[v36 + 4] = v7;
    uint64_t v14 = a3 / v58;
    uint64_t v12 = v57;
    if (v57 != v56) {
      continue;
    }
    break;
  }
LABEL_59:
  uint64_t v37 = a3 - v14 * v58;
  if (v37 >= 1)
  {
    uint64_t v59 = v11;
    uint64_t v3 = v65;
    uint64_t v6 = *(void *)(v65 + 104);
    uint64_t v7 = *(void *)(v65 + 72);
    sub_21F125030(a3 - v14 * v58, v7, *(void *)(v65 + 56), *(_DWORD *)(v65 + 64));
    uint64_t v12 = 0;
    uint64_t v62 = v7;
    uint64_t v64 = a1 + 64;
    uint64_t v38 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v39 = -1;
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    unint64_t v40 = v39 & *(void *)(a1 + 64);
    int64_t v67 = (unint64_t)(v38 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v41 = 0;
    if (!v40) {
      goto LABEL_66;
    }
LABEL_65:
    unint64_t v42 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    for (unint64_t i = v42 | (v41 << 6); ; unint64_t i = __clz(__rbit64(v45)) + (v41 << 6))
    {
      uint64_t v47 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
      uint64_t v7 = *v47;
      uint64_t v5 = v47[1];
      uint64_t v48 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v48) {
        goto LABEL_118;
      }
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_21F10E9C8(v7, v5);
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8 * v49);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_21F123710(v3 + 32, *(void *)(v3 + 16), v65, v7, v5, a2, v37, v56, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40) {
        goto LABEL_65;
      }
LABEL_66:
      if (__OFADD__(v41++, 1)) {
        goto LABEL_109;
      }
      if (v41 >= v67) {
        break;
      }
      unint64_t v45 = *(void *)(v64 + 8 * v41);
      if (!v45)
      {
        int64_t v46 = v41 + 1;
        if (v41 + 1 >= v67) {
          break;
        }
        unint64_t v45 = *(void *)(v64 + 8 * v46);
        if (!v45)
        {
          int64_t v46 = v41 + 2;
          if (v41 + 2 >= v67) {
            break;
          }
          unint64_t v45 = *(void *)(v64 + 8 * v46);
          if (!v45)
          {
            int64_t v46 = v41 + 3;
            if (v41 + 3 >= v67) {
              break;
            }
            unint64_t v45 = *(void *)(v64 + 8 * v46);
            if (!v45)
            {
              int64_t v46 = v41 + 4;
              if (v41 + 4 >= v67) {
                break;
              }
              unint64_t v45 = *(void *)(v64 + 8 * v46);
              if (!v45)
              {
                int64_t v46 = v41 + 5;
                if (v41 + 5 >= v67) {
                  break;
                }
                unint64_t v45 = *(void *)(v64 + 8 * v46);
                if (!v45)
                {
                  while (1)
                  {
                    int64_t v41 = v46 + 1;
                    if (__OFADD__(v46, 1)) {
                      goto LABEL_115;
                    }
                    if (v41 >= v67) {
                      goto LABEL_96;
                    }
                    unint64_t v45 = *(void *)(v64 + 8 * v41);
                    ++v46;
                    if (v45) {
                      goto LABEL_80;
                    }
                  }
                }
              }
            }
          }
        }
        int64_t v41 = v46;
      }
LABEL_80:
      unint64_t v40 = (v45 - 1) & v45;
    }
LABEL_96:
    uint64_t v3 = v65;
    uint64_t v5 = v62;
    swift_release();
    if (!espresso_plan_execute_sync()) {
      goto LABEL_99;
    }
LABEL_97:
    swift_bridgeObjectRelease();
    swift_allocError();
    unsigned char *v51 = 20;
    swift_willThrow();
  }
  return (uint64_t)v11;
}

uint64_t sub_21F123710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a1)
  {
    sub_21F106A1C();
    swift_allocError();
    *uint64_t v24 = 0;
    return swift_willThrow();
  }
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 120);
  if (!*(void *)(v15 + 16))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_21F10E9C8(a4, a5);
  if ((v17 & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 168 * v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(a6 + 16)) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_21F10E9C8(a4, a5);
  if (v20)
  {
    uint64_t v21 = *(void *)(*(void *)(a6 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 * a7;
    if ((unsigned __int128)(v21 * (__int128)a7) >> 64 == (v21 * a7) >> 63)
    {
      if (v22 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v22 >= 0x80000000) {
        goto LABEL_22;
      }
      if ((unsigned __int128)(v21 * (__int128)a8) >> 64 == (v21 * a8) >> 63)
      {
        if ((unsigned __int128)(v21 * a8 * (__int128)a9) >> 64 == (v21 * a8 * a9) >> 63)
        {
          if (v18) {
            return cblas_scopy_NEWLAPACK();
          }
          goto LABEL_21;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_21F157400();
  __break(1u);
  return result;
}

uint64_t sub_21F123960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v34 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t v39 = v6 + 120;
  swift_beginAccess();
  int64_t v12 = 0;
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v38 = a6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
    }
    else
    {
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_46;
      }
      if (v15 >= v35) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v34 + 8 * v15);
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v35) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v34 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v35) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v34 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 3;
            if (v15 + 3 >= v35) {
              return swift_release();
            }
            unint64_t v16 = *(void *)(v34 + 8 * v12);
            if (!v16)
            {
              int64_t v12 = v15 + 4;
              if (v15 + 4 >= v35) {
                return swift_release();
              }
              unint64_t v16 = *(void *)(v34 + 8 * v12);
              if (!v16)
              {
                int64_t v17 = v15 + 5;
                if (v17 >= v35) {
                  return swift_release();
                }
                unint64_t v16 = *(void *)(v34 + 8 * v17);
                if (!v16)
                {
                  while (1)
                  {
                    int64_t v12 = v17 + 1;
                    if (__OFADD__(v17, 1)) {
                      goto LABEL_47;
                    }
                    if (v12 >= v35) {
                      return swift_release();
                    }
                    unint64_t v16 = *(void *)(v34 + 8 * v12);
                    ++v17;
                    if (v16) {
                      goto LABEL_23;
                    }
                  }
                }
                int64_t v12 = v17;
              }
            }
          }
        }
      }
LABEL_23:
      unint64_t v11 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    }
    if (!*(void *)(*(void *)v39 + 16))
    {
      char v31 = 10;
      goto LABEL_42;
    }
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_21F10E9C8(v20, v19);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRelease();
      char v31 = 10;
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    if (!*(void *)(a2 + 16)) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_21F10E9C8(v20, v19);
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      char v31 = 10;
      goto LABEL_42;
    }
    uint64_t v25 = *(void *)(*(void *)(a2 + 56) + 8 * v23);
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_21F156F40();
    *(void *)(v26 + 16) = 10;
    *(_OWORD *)(v26 + 48) = 0u;
    *(_OWORD *)(v26 + 64) = 0u;
    *(_OWORD *)(v26 + 80) = 0u;
    *(_OWORD *)(v26 + 96) = 0u;
    *(_OWORD *)(v26 + 32) = 0u;
    sub_21F156D20();
    unint64_t v40 = v40 & 0xFFFFFFFF00000000 | v38;
    espresso_network_query_blob_shape();
    swift_release();
    swift_bridgeObjectRelease();
    if (v25 <= 0) {
      break;
    }
    if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      swift_bridgeObjectRelease();
      __break(1u);
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_48;
    }
    unint64_t v27 = sub_21F10E9C8(v20, v19);
    if ((v28 & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)(v29 + 16);
    swift_bridgeObjectRelease();
    if (v25 * a3 != v30) {
      goto LABEL_41;
    }
    if ((unsigned __int128)(a4 * (__int128)v25) >> 64 != (a4 * v25) >> 63) {
      goto LABEL_45;
    }
    if (a4 * v25 != 1) {
      goto LABEL_41;
    }
  }
  swift_bridgeObjectRelease();
LABEL_41:
  char v31 = 11;
LABEL_42:
  sub_21F128018();
  swift_allocError();
  *uint64_t v32 = v31;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_21F123E04(uint64_t a1, unsigned int a2)
{
  uint64_t v112 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(v2 + 344);
  uint64_t v4 = *(void *)(v3 + 16);
  unsigned int v86 = a2;
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v2 + 120);
    uint64_t v6 = (uint64_t *)(v3 + 40);
    uint64_t v87 = a2;
    swift_bridgeObjectRetain();
    for (uint64_t i = v4 - 1; ; --i)
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      sub_21F156D20();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v5;
      uint64_t v94 = *v5;
      *uint64_t v5 = 0x8000000000000000;
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_21F10E9C8(v8, v7);
      uint64_t v13 = *(void *)(v10 + 16);
      BOOL v14 = (v11 & 1) == 0;
      uint64_t v15 = v13 + v14;
      if (__OFADD__(v13, v14))
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
      }
      char v16 = v11;
      if (*(void *)(v10 + 24) >= v15)
      {
        unint64_t v19 = v93;
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v11 & 1) == 0) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_21F126898();
          if ((v16 & 1) == 0) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        sub_21F125E84(v15, isUniquelyReferenced_nonNull_native);
        unint64_t v17 = sub_21F10E9C8(v8, v7);
        if ((v16 & 1) != (v18 & 1))
        {
LABEL_64:
          uint64_t result = sub_21F157680();
          __break(1u);
          return result;
        }
        unint64_t v12 = v17;
        unint64_t v19 = v93;
        if ((v16 & 1) == 0)
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          sub_21F128018();
          swift_allocError();
          char v31 = 4;
          goto LABEL_58;
        }
      }
      memmove(__dst, (const void *)(*(void *)(v94 + 56) + 168 * v12), 0xA8uLL);
      sub_21F12884C((uint64_t)__dst);
      sub_21F128854((uint64_t)__dst, (uint64_t)v108);
      unint64_t v93 = v19 & 0xFFFFFFFF00000000 | v87;
      int v20 = espresso_network_bind_buffer();
      sub_21F128854((uint64_t)v108, (uint64_t)v110);
      sub_21F128854((uint64_t)v110, (uint64_t)v111);
      if (sub_21F1288BC((uint64_t)v111) == 1)
      {
        swift_arrayDestroy();
        sub_21F127024(v12, v94);
      }
      else
      {
        sub_21F128854((uint64_t)v110, (uint64_t)&v97);
        uint64_t v21 = *(void *)(v94 + 56) + 168 * v12;
        long long v22 = v104;
        long long v23 = v105;
        long long v24 = v106;
        *(void *)(v21 + 160) = v107;
        *(_OWORD *)(v21 + 128) = v23;
        *(_OWORD *)(v21 + 144) = v24;
        *(_OWORD *)(v21 + 112) = v22;
        long long v25 = v100;
        long long v26 = v101;
        long long v27 = v103;
        *(_OWORD *)(v21 + 80) = v102;
        *(_OWORD *)(v21 + 96) = v27;
        *(_OWORD *)(v21 + 48) = v25;
        *(_OWORD *)(v21 + 64) = v26;
        long long v28 = v99;
        long long v29 = v98;
        *(_OWORD *)uint64_t v21 = v97;
        *(_OWORD *)(v21 + 16) = v29;
        *(_OWORD *)(v21 + 32) = v28;
      }
      swift_bridgeObjectRelease();
      *uint64_t v5 = v94;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_18;
      }
      if (!i) {
        break;
      }
      v6 += 2;
    }
    swift_bridgeObjectRelease();
    a2 = v86;
    uint64_t v2 = v85;
  }
  uint64_t result = *(void *)(v2 + 352);
  uint64_t v33 = *(void *)(result + 16);
  if (v33)
  {
    uint64_t v34 = (uint64_t *)(v2 + 136);
    int64_t v35 = (uint64_t *)(result + 40);
    uint64_t v88 = a2;
    swift_bridgeObjectRetain();
    for (uint64_t j = v33 - 1; ; --j)
    {
      uint64_t v37 = *(v35 - 1);
      uint64_t v36 = *v35;
      sub_21F156D20();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v38 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v39 = *v34;
      uint64_t v95 = *v34;
      *uint64_t v34 = 0x8000000000000000;
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_21F10E9C8(v37, v36);
      uint64_t v42 = *(void *)(v39 + 16);
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43)) {
        goto LABEL_62;
      }
      char v45 = v40;
      if (*(void *)(v39 + 24) >= v44)
      {
        unint64_t v48 = v93;
        if (v38)
        {
          if ((v40 & 1) == 0) {
            goto LABEL_36;
          }
        }
        else
        {
          sub_21F126898();
          if ((v45 & 1) == 0) {
            goto LABEL_36;
          }
        }
      }
      else
      {
        sub_21F125E84(v44, v38);
        unint64_t v46 = sub_21F10E9C8(v37, v36);
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_64;
        }
        unint64_t v41 = v46;
        unint64_t v48 = v93;
        if ((v45 & 1) == 0)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRelease();
          sub_21F128018();
          swift_allocError();
          char v31 = 5;
          goto LABEL_58;
        }
      }
      memmove(__dst, (const void *)(*(void *)(v95 + 56) + 168 * v41), 0xA8uLL);
      sub_21F12884C((uint64_t)__dst);
      sub_21F128854((uint64_t)__dst, (uint64_t)v108);
      unint64_t v93 = v48 & 0xFFFFFFFF00000000 | v88;
      int v49 = espresso_network_bind_buffer();
      sub_21F128854((uint64_t)v108, (uint64_t)v110);
      sub_21F128854((uint64_t)v110, (uint64_t)v111);
      if (sub_21F1288BC((uint64_t)v111) == 1)
      {
        swift_arrayDestroy();
        sub_21F127024(v41, v95);
      }
      else
      {
        sub_21F128854((uint64_t)v110, (uint64_t)&v97);
        uint64_t v50 = *(void *)(v95 + 56) + 168 * v41;
        long long v51 = v104;
        long long v52 = v105;
        long long v53 = v106;
        *(void *)(v50 + 160) = v107;
        *(_OWORD *)(v50 + 128) = v52;
        *(_OWORD *)(v50 + 144) = v53;
        *(_OWORD *)(v50 + 112) = v51;
        long long v54 = v100;
        long long v55 = v101;
        long long v56 = v103;
        *(_OWORD *)(v50 + 80) = v102;
        *(_OWORD *)(v50 + 96) = v56;
        *(_OWORD *)(v50 + 48) = v54;
        *(_OWORD *)(v50 + 64) = v55;
        long long v57 = v99;
        long long v58 = v98;
        *(_OWORD *)uint64_t v50 = v97;
        *(_OWORD *)(v50 + 16) = v58;
        *(_OWORD *)(v50 + 32) = v57;
      }
      swift_bridgeObjectRelease();
      *uint64_t v34 = v95;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v49) {
        goto LABEL_37;
      }
      if (!j) {
        break;
      }
      v35 += 2;
    }
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v86;
    uint64_t v2 = v85;
  }
  if (*(unsigned char *)(v2 + 112) != 1) {
    return result;
  }
  uint64_t result = *(void *)(v2 + 360);
  uint64_t v59 = *(void *)(result + 16);
  if (!v59) {
    return result;
  }
  uint64_t v60 = (uint64_t *)(v2 + 152);
  uint64_t v61 = (uint64_t *)(result + 40);
  uint64_t v89 = a2;
  swift_bridgeObjectRetain();
  for (uint64_t k = v59 - 1; ; --k)
  {
    uint64_t v63 = *(v61 - 1);
    uint64_t v62 = *v61;
    sub_21F156D20();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v64 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = *v60;
    uint64_t v96 = *v60;
    *uint64_t v60 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v67 = sub_21F10E9C8(v63, v62);
    uint64_t v68 = *(void *)(v65 + 16);
    BOOL v69 = (v66 & 1) == 0;
    uint64_t v70 = v68 + v69;
    if (__OFADD__(v68, v69)) {
      goto LABEL_63;
    }
    char v71 = v66;
    if (*(void *)(v65 + 24) < v70) {
      break;
    }
    unint64_t v74 = v93;
    if (v64)
    {
      if ((v66 & 1) == 0) {
        goto LABEL_56;
      }
    }
    else
    {
      sub_21F126898();
      if ((v71 & 1) == 0) {
        goto LABEL_56;
      }
    }
LABEL_49:
    memmove(__dst, (const void *)(*(void *)(v96 + 56) + 168 * v67), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v108);
    unint64_t v93 = v74 & 0xFFFFFFFF00000000 | v89;
    int v75 = espresso_network_bind_buffer();
    sub_21F128854((uint64_t)v108, (uint64_t)v110);
    sub_21F128854((uint64_t)v110, (uint64_t)v111);
    if (sub_21F1288BC((uint64_t)v111) == 1)
    {
      swift_arrayDestroy();
      sub_21F127024(v67, v96);
    }
    else
    {
      sub_21F128854((uint64_t)v110, (uint64_t)&v97);
      uint64_t v76 = *(void *)(v96 + 56) + 168 * v67;
      long long v77 = v104;
      long long v78 = v105;
      long long v79 = v106;
      *(void *)(v76 + 160) = v107;
      *(_OWORD *)(v76 + 128) = v78;
      *(_OWORD *)(v76 + 144) = v79;
      *(_OWORD *)(v76 + 112) = v77;
      long long v80 = v100;
      long long v81 = v101;
      long long v82 = v103;
      *(_OWORD *)(v76 + 80) = v102;
      *(_OWORD *)(v76 + 96) = v82;
      *(_OWORD *)(v76 + 48) = v80;
      *(_OWORD *)(v76 + 64) = v81;
      long long v83 = v99;
      long long v84 = v98;
      *(_OWORD *)uint64_t v76 = v97;
      *(_OWORD *)(v76 + 16) = v84;
      *(_OWORD *)(v76 + 32) = v83;
    }
    swift_bridgeObjectRelease();
    *uint64_t v60 = v96;
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    if (v75) {
      goto LABEL_57;
    }
    if (!k) {
      return swift_bridgeObjectRelease();
    }
    v61 += 2;
  }
  sub_21F125E84(v70, v64);
  unint64_t v72 = sub_21F10E9C8(v63, v62);
  if ((v71 & 1) != (v73 & 1)) {
    goto LABEL_64;
  }
  unint64_t v67 = v72;
  unint64_t v74 = v93;
  if (v71) {
    goto LABEL_49;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  swift_bridgeObjectRelease();
  sub_21F128018();
  swift_allocError();
  char v31 = 6;
LABEL_58:
  char *v30 = v31;
  return swift_willThrow();
}

uint64_t sub_21F124688()
{
  uint64_t v2 = v0;
  uint64_t v92 = *MEMORY[0x263EF8340];
  v90[22] = 0;
  unsigned int v91 = 0;
  espresso_create_context();
  espresso_create_plan();
  uint64_t v3 = v0[11];
  v90[0] = v0[10];
  v90[1] = v3;
  swift_bridgeObjectRetain_n();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  sub_21F156D20();
  swift_bridgeObjectRelease();
  LODWORD(v3) = espresso_plan_add_network();
  swift_release();
  if (v3)
  {
    sub_21F128018();
    swift_allocError();
    char v5 = 8;
LABEL_13:
    *uint64_t v4 = v5;
    return swift_willThrow();
  }
  uint64_t v6 = v0[45];
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = sub_21F156D20();
    swift_bridgeObjectRetain();
    int v9 = espresso_network_declare_output();
    swift_release();
    if (v9)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      sub_21F128018();
      swift_allocError();
      char v5 = 3;
      goto LABEL_13;
    }
    uint64_t v10 = 0;
    unint64_t v11 = v6 + 56;
    uint64_t v12 = v7 - 1;
    while (v12 != v10)
    {
      if ((unint64_t)++v10 >= *(void *)(v6 + 16)) {
        goto LABEL_69;
      }
      unint64_t v1 = v11 + 16;
      sub_21F156D20();
      unint64_t v8 = v8 & 0xFFFFFFFF00000000 | v91;
      int v13 = espresso_network_declare_output();
      swift_release();
      unint64_t v11 = v1;
      if (v13) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v2 = v0;
  }
  if (espresso_plan_build())
  {
    sub_21F128018();
    swift_allocError();
    char v5 = 9;
    goto LABEL_13;
  }
  uint64_t v15 = (void *)sub_21F0FC630(MEMORY[0x263F8EE78]);
  uint64_t v16 = v2[45];
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17) {
    goto LABEL_44;
  }
  long long v79 = v2;
  char v18 = (uint64_t *)(v16 + 40);
  swift_bridgeObjectRetain();
  for (uint64_t i = v17 - 1; ; --i)
  {
    uint64_t v19 = *(v18 - 1);
    uint64_t v20 = *v18;
    long long v82 = v18;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v90[0] = v15;
    unint64_t v23 = sub_21F10E9C8(v19, v20);
    uint64_t v24 = v15[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      goto LABEL_70;
    }
    char v27 = v22;
    if (v15[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v30 = (void *)v90[0];
        if (v22) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_21F126898();
        uint64_t v30 = (void *)v90[0];
        if (v27) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_21F125E84(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_21F10E9C8(v19, v20);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_82;
      }
      unint64_t v23 = v28;
      uint64_t v30 = (void *)v90[0];
      if (v27)
      {
LABEL_23:
        uint64_t v31 = v30[7] + 168 * v23;
        *(_DWORD *)(v31 + 160) = 0;
        *(_OWORD *)(v31 + 128) = 0u;
        *(_OWORD *)(v31 + 144) = 0u;
        *(_OWORD *)(v31 + 96) = 0u;
        *(_OWORD *)(v31 + 112) = 0u;
        *(_OWORD *)(v31 + 64) = 0u;
        *(_OWORD *)(v31 + 80) = 0u;
        *(_OWORD *)(v31 + 32) = 0u;
        *(_OWORD *)(v31 + 48) = 0u;
        *(_OWORD *)uint64_t v31 = 0u;
        *(_OWORD *)(v31 + 16) = 0u;
        goto LABEL_27;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    uint64_t v32 = (uint64_t *)(v30[6] + 16 * v23);
    *uint64_t v32 = v19;
    v32[1] = v20;
    uint64_t v33 = v30[7] + 168 * v23;
    *(_DWORD *)(v33 + 160) = 0;
    *(_OWORD *)(v33 + 128) = 0u;
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 96) = 0u;
    *(_OWORD *)(v33 + 112) = 0u;
    *(_OWORD *)(v33 + 64) = 0u;
    *(_OWORD *)(v33 + 80) = 0u;
    *(_OWORD *)(v33 + 32) = 0u;
    *(_OWORD *)(v33 + 48) = 0u;
    *(_OWORD *)uint64_t v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    uint64_t v34 = v30[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_72;
    }
    v30[2] = v36;
    swift_bridgeObjectRetain();
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v91;
    sub_21F156D20();
    swift_bridgeObjectRetain();
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_21F10E9C8(v19, v20);
    uint64_t v41 = v30[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      goto LABEL_71;
    }
    char v44 = v39;
    if (v30[3] >= v43)
    {
      unint64_t v47 = v80;
      if (v38)
      {
        unint64_t v1 = 168;
        if ((v39 & 1) == 0) {
          goto LABEL_41;
        }
      }
      else
      {
        sub_21F126898();
        unint64_t v1 = 168;
        if ((v44 & 1) == 0) {
          goto LABEL_41;
        }
      }
    }
    else
    {
      sub_21F125E84(v43, v38);
      unint64_t v45 = sub_21F10E9C8(v19, v20);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_82;
      }
      unint64_t v40 = v45;
      unint64_t v1 = 168;
      unint64_t v47 = v80;
      if ((v44 & 1) == 0)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        swift_bridgeObjectRelease();
        sub_21F128018();
        swift_allocError();
        char v60 = 5;
LABEL_46:
        *uint64_t v59 = v60;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v15 = v30;
    memmove(__dst, (const void *)(v30[7] + 168 * v40), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v87);
    unint64_t v48 = v47 & 0xFFFFFFFF00000000 | v37;
    int v49 = espresso_network_bind_buffer();
    sub_21F128854((uint64_t)v87, (uint64_t)v89);
    sub_21F128854((uint64_t)v89, (uint64_t)v90);
    if (sub_21F1288BC((uint64_t)v90) == 1)
    {
      swift_arrayDestroy();
      sub_21F127024(v40, (uint64_t)v30);
    }
    else
    {
      sub_21F128854((uint64_t)v89, (uint64_t)v85);
      uint64_t v50 = v30[7] + 168 * v40;
      long long v51 = v85[7];
      long long v52 = v85[8];
      long long v53 = v85[9];
      *(void *)(v50 + 160) = v86;
      *(_OWORD *)(v50 + 128) = v52;
      *(_OWORD *)(v50 + 144) = v53;
      *(_OWORD *)(v50 + 112) = v51;
      long long v54 = v85[3];
      long long v55 = v85[4];
      long long v56 = v85[6];
      *(_OWORD *)(v50 + 80) = v85[5];
      *(_OWORD *)(v50 + 96) = v56;
      *(_OWORD *)(v50 + 48) = v54;
      *(_OWORD *)(v50 + 64) = v55;
      long long v58 = v85[1];
      long long v57 = v85[2];
      *(_OWORD *)uint64_t v50 = v85[0];
      *(_OWORD *)(v50 + 16) = v58;
      *(_OWORD *)(v50 + 32) = v57;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    if (v49) {
      goto LABEL_42;
    }
    if (!i) {
      break;
    }
    unint64_t v80 = v48;
    char v18 = v82 + 2;
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = v79;
LABEL_44:
  if (espresso_plan_execute_sync())
  {
    sub_21F128018();
    swift_allocError();
    char v60 = 12;
    goto LABEL_46;
  }
  uint64_t v61 = v2[45];
  uint64_t v84 = *(void *)(v61 + 16);
  if (!v84) {
    goto LABEL_67;
  }
  uint64_t v81 = v91;
  swift_bridgeObjectRetain();
  long long v78 = v2 + 19;
  swift_beginAccess();
  unint64_t v62 = 0;
  while (2)
  {
    if (v62 >= *(void *)(v61 + 16)) {
      goto LABEL_73;
    }
    uint64_t v63 = (uint64_t *)(v61 + 32 + 16 * v62);
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_21F156F40();
    *(void *)(v66 + 16) = 10;
    *(_OWORD *)(v66 + 48) = 0u;
    *(_OWORD *)(v66 + 64) = 0u;
    *(_OWORD *)(v66 + 80) = 0u;
    *(_OWORD *)(v66 + 96) = 0u;
    *(_OWORD *)(v66 + 32) = 0u;
    v89[0] = 0;
    sub_21F156D20();
    unint64_t v1 = v1 & 0xFFFFFFFF00000000 | v81;
    espresso_network_query_blob_shape();
    swift_release();
    if ((v89[0] & 0x8000000000000000) != 0) {
      goto LABEL_74;
    }
    if (*(void *)(v66 + 16) < v89[0]) {
      goto LABEL_75;
    }
    if (!v89[0])
    {
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
    uint64_t v67 = 0;
    uint64_t v68 = 1;
    while (2)
    {
      uint64_t v69 = *(void *)(v66 + 8 * v67 + 32);
      uint64_t v70 = (unsigned __int128)(v68 * (__int128)v69) >> 64;
      v68 *= v69;
      if (v70 != v68 >> 63)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
      }
      if (v89[0] != ++v67) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    if (v68 < (uint64_t)0xFFFFFFFF80000000 || v68 >= 0x80000000) {
      goto LABEL_83;
    }
LABEL_59:
    if (!v15[2]) {
      goto LABEL_76;
    }
    swift_bridgeObjectRetain();
    unint64_t v71 = sub_21F10E9C8(v65, v64);
    if ((v72 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_80:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      sub_21F157680();
      __break(1u);
LABEL_83:
      uint64_t result = sub_21F157400();
      __break(1u);
      return result;
    }
    uint64_t v73 = *(void *)(v15[7] + 168 * v71);
    swift_bridgeObjectRelease();
    if (!v73) {
      goto LABEL_78;
    }
    uint64_t v74 = *v78;
    if (!*(void *)(*v78 + 16)) {
      goto LABEL_79;
    }
    swift_bridgeObjectRetain();
    unint64_t v75 = sub_21F10E9C8(v65, v64);
    if ((v76 & 1) == 0) {
      goto LABEL_80;
    }
    uint64_t v77 = *(void *)(*(void *)(v74 + 56) + 168 * v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v77) {
      goto LABEL_81;
    }
    ++v62;
    cblas_scopy_NEWLAPACK();
    if (v62 != v84) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_67:
  espresso_plan_destroy();
  espresso_context_destroy();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F125030(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  v4[13] = a1;
  swift_beginAccess();
  sub_21F12522C(v13);
  v14[0] = (char *)v13[0];
  v14[1] = (char *)v13[1];
  _OWORD v14[2] = (char *)v13[2];
  v14[3] = (char *)v13[3];
  v14[4] = (char *)v13[4];
  v14[5] = (char *)v13[5];
  if (espresso_plan_build_clean())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F128018();
    swift_allocError();
    *uint64_t v7 = 22;
    return swift_willThrow();
  }
  else
  {
    sub_21F120078(a2, a3, a4, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11)
    {
      uint64_t v9 = v4[43];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_21F128BE0(a3, a4, v9, v4 + 15);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v10 = v4[44];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_21F128BE0(a3, a4, v10, v4 + 17);
      swift_endAccess();
      swift_bridgeObjectRelease();
      return sub_21F123E04(a3, a4);
    }
  }
  return result;
}

uint64_t sub_21F12522C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v34 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 344) + 16));
  uint64_t v3 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 344) + 16));
  uint64_t v4 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 344) + 16));
  uint64_t v5 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 344) + 16));
  uint64_t v6 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 344) + 16));
  uint64_t v7 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 344) + 16));
  uint64_t result = *(void *)(v1 + 344);
  uint64_t v29 = *(void *)(result + 16);
  if (v29)
  {
    unint64_t v28 = a1;
    unint64_t v9 = 0;
    uint64_t v10 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v30 = v6;
      uint64_t v33 = v4;
      swift_bridgeObjectRetain();
      sub_21F120EE8();
      uint64_t v12 = v11;
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v1 + 104);
      if ((v14 & 1) == 0) {
        goto LABEL_6;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull();
      if (result)
      {
        int64_t v16 = 0;
      }
      else
      {
LABEL_6:
        sub_21F12E9D8((uint64_t)v12, 0, v14);
        uint64_t v12 = v17;
        int64_t v16 = v18;
        unint64_t v14 = v19;
        uint64_t result = swift_unknownObjectRelease();
      }
      if (v14 < 2 || v16 > 0) {
        break;
      }
      uint64_t v21 = v3;
      *uint64_t v12 = v15;
      uint64_t result = sub_21F12806C((uint64_t)v12, v16, v14, v35);
      int v22 = v35[0];
      if (v35[0] < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_46;
      }
      if (v35[0] > 0x7FFFFFFF) {
        goto LABEL_47;
      }
      uint64_t v24 = v35[1];
      uint64_t v23 = v35[2];
      uint64_t v26 = v35[3];
      uint64_t v25 = v35[4];
      uint64_t v27 = v35[5];
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t result = v34;
      }
      else {
        uint64_t result = (uint64_t)sub_21F127424(v34);
      }
      if (v9 >= *(void *)(result + 16)) {
        goto LABEL_48;
      }
      *(_DWORD *)(result + 4 * v9 + 32) = v22;
      if (v24 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_49;
      }
      if (v24 > 0x7FFFFFFF) {
        goto LABEL_50;
      }
      uint64_t v34 = result;
      uint64_t v3 = v21;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v21);
        uint64_t v3 = result;
      }
      if (v9 >= *(void *)(v3 + 16)) {
        goto LABEL_51;
      }
      *(_DWORD *)(v3 + 4 * v9 + 32) = v24;
      if (v23 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_52;
      }
      if (v23 > 0x7FFFFFFF) {
        goto LABEL_53;
      }
      uint64_t v4 = v33;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v33);
        uint64_t v4 = result;
      }
      uint64_t v7 = v32;
      if (v9 >= *(void *)(v4 + 16)) {
        goto LABEL_54;
      }
      *(_DWORD *)(v4 + 4 * v9 + 32) = v23;
      if (v26 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_55;
      }
      if (v26 > 0x7FFFFFFF) {
        goto LABEL_56;
      }
      uint64_t v5 = v31;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v31);
        uint64_t v5 = result;
      }
      if (v9 >= *(void *)(v5 + 16)) {
        goto LABEL_57;
      }
      *(_DWORD *)(v5 + 4 * v9 + 32) = v26;
      if (v25 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_58;
      }
      if (v25 > 0x7FFFFFFF) {
        goto LABEL_59;
      }
      uint64_t v6 = v30;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v30);
        uint64_t v6 = result;
      }
      if (v9 >= *(void *)(v6 + 16)) {
        goto LABEL_60;
      }
      *(_DWORD *)(v6 + 4 * v9 + 32) = v25;
      if (v27 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_61;
      }
      if (v27 > 0x7FFFFFFF) {
        goto LABEL_62;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v32);
        uint64_t v7 = result;
      }
      if (v9 >= *(void *)(v7 + 16)) {
        goto LABEL_63;
      }
      v10 += 16;
      *(_DWORD *)(v7 + 4 * v9 + 32) = v27;
      swift_unknownObjectRelease();
      if (v29 == ++v9)
      {
        uint64_t result = swift_bridgeObjectRelease();
        a1 = v28;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
LABEL_45:
    *a1 = v34;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    a1[4] = v6;
    a1[5] = v7;
  }
  return result;
}

double ndShapeTo5dShape(shape:)@<D0>(uint64_t a1@<X1>, int64_t a2@<X2>, unint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  sub_21F12806C(a1, a2, a3, (uint64_t *)v8);
  double result = *(double *)v8;
  long long v6 = v8[1];
  long long v7 = v8[2];
  *a4 = v8[0];
  a4[1] = v6;
  a4[2] = v7;
  return result;
}

uint64_t sub_21F125680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for EspressoMILTrainer();
  swift_allocObject();
  uint64_t v4 = sub_21F127EF8(a1);
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_21F1256D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F11F850(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F1256FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = 1;
  return sub_21F11F850(a1, a2, &v5, a3, a4, MEMORY[0x263F8EE78]);
}

uint64_t sub_21F12573C(uint64_t a1, unint64_t a2)
{
  return sub_21F12058C(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t sub_21F12576C(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t v3 = sub_21F121290(&v5, (uint64_t *)(v2 + 152));
  swift_endAccess();
  return v3;
}

uint64_t sub_21F1257EC(unsigned char *a1)
{
  return sub_21F121758(a1);
}

uint64_t *sub_21F125810(uint64_t *a1)
{
  return sub_21F11F7FC(a1);
}

uint64_t sub_21F125834(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned __int8 *a5, char a6)
{
  return sub_21F121C84(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F125858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F122DC4(a1, a2, a3);
}

uint64_t sub_21F12587C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE658);
  uint64_t v6 = sub_21F157440();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_21F0ED188(v24, v35);
      }
      else
      {
        sub_21F0ED61C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_21F1576F0();
      sub_21F156D80();
      uint64_t result = sub_21F157710();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_21F0ED188(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F125B7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5D8);
  char v37 = a2;
  uint64_t v6 = sub_21F157440();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_21F1576F0();
    sub_21F156D80();
    uint64_t result = sub_21F157710();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F125E84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5F8);
  char v36 = a2;
  uint64_t v6 = sub_21F157440();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v35 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v35[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v35[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v36)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v35[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v35[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 168 * v21;
      long long v45 = *(_OWORD *)(v32 + 128);
      long long v46 = *(_OWORD *)(v32 + 144);
      uint64_t v47 = *(void *)(v32 + 160);
      long long v41 = *(_OWORD *)(v32 + 64);
      long long v42 = *(_OWORD *)(v32 + 80);
      long long v43 = *(_OWORD *)(v32 + 96);
      long long v44 = *(_OWORD *)(v32 + 112);
      long long v37 = *(_OWORD *)v32;
      long long v38 = *(_OWORD *)(v32 + 16);
      long long v39 = *(_OWORD *)(v32 + 32);
      long long v40 = *(_OWORD *)(v32 + 48);
      if ((v36 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_21F1576F0();
      sub_21F156D80();
      uint64_t result = sub_21F157710();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 168 * v17;
      *(_OWORD *)(v19 + 128) = v45;
      *(_OWORD *)(v19 + 144) = v46;
      *(void *)(v19 + 160) = v47;
      *(_OWORD *)(v19 + 64) = v41;
      *(_OWORD *)(v19 + 80) = v42;
      *(_OWORD *)(v19 + 96) = v43;
      *(_OWORD *)(v19 + 112) = v44;
      *(_OWORD *)uint64_t v19 = v37;
      *(_OWORD *)(v19 + 16) = v38;
      *(_OWORD *)(v19 + 32) = v39;
      *(_OWORD *)(v19 + 48) = v40;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F1261E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5F0);
  char v36 = a2;
  uint64_t v6 = sub_21F157440();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_21F1576F0();
    sub_21F156D80();
    uint64_t result = sub_21F157710();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_21F126500()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE658);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F157430();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  char v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_21F0ED61C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_21F0ED188(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F1266E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F157430();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F126898()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F157430();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 168 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v35 = *(_OWORD *)(v21 + 128);
    long long v36 = *(_OWORD *)(v21 + 144);
    uint64_t v37 = *(void *)(v21 + 160);
    long long v31 = *(_OWORD *)(v21 + 64);
    long long v32 = *(_OWORD *)(v21 + 80);
    long long v33 = *(_OWORD *)(v21 + 96);
    long long v34 = *(_OWORD *)(v21 + 112);
    long long v27 = *(_OWORD *)v21;
    long long v28 = *(_OWORD *)(v21 + 16);
    long long v29 = *(_OWORD *)(v21 + 32);
    long long v30 = *(_OWORD *)(v21 + 48);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    uint64_t v23 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)(v23 + 128) = v35;
    *(_OWORD *)(v23 + 144) = v36;
    *(void *)(v23 + 160) = v37;
    *(_OWORD *)(v23 + 64) = v31;
    *(_OWORD *)(v23 + 80) = v32;
    *(_OWORD *)(v23 + 96) = v33;
    *(_OWORD *)(v23 + 112) = v34;
    *(_OWORD *)uint64_t v23 = v27;
    *(_OWORD *)(v23 + 16) = v28;
    *(_OWORD *)(v23 + 32) = v29;
    *(_OWORD *)(v23 + 48) = v30;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F126ABC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F157430();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_21F126C74(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21F157280();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21F1576F0();
        swift_bridgeObjectRetain();
        sub_21F156D80();
        uint64_t v10 = sub_21F157710();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F126E4C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21F157280();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21F1576F0();
        swift_bridgeObjectRetain();
        sub_21F156D80();
        uint64_t v9 = sub_21F157710();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F127024(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21F157280();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21F1576F0();
        swift_bridgeObjectRetain();
        sub_21F156D80();
        uint64_t v9 = sub_21F157710();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 168 * v3;
          uint64_t v15 = (const void *)(v14 + 168 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 168))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0xA8uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_21F127208(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_21F0ED188(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_21F127274(unint64_t result, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a4[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_21F1272BC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 168 * result;
  long long v7 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v6 + 80) = v7;
  *(void *)(v6 + 160) = *(void *)(a4 + 160);
  long long v8 = *(_OWORD *)(a4 + 144);
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a4 + 128);
  *(_OWORD *)(v6 + 144) = v8;
  long long v9 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v6 + 112) = v9;
  long long v10 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v10;
  long long v11 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v11;
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_21F127338(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

char *sub_21F127380(uint64_t a1)
{
  return sub_21F103490(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_21F127394(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_21F157420();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x223C441D0);
}

uint64_t sub_21F127410(uint64_t a1)
{
  return sub_21F103A90(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_21F127424(uint64_t a1)
{
  return sub_21F103BA4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_21F127438(void *a1)
{
  return sub_21F103CB4(0, a1[2], 0, a1);
}

char *sub_21F12744C(uint64_t a1)
{
  return sub_21F103ED4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21F127460(uint64_t a1)
{
  uint64_t v2 = swift_retain();
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  if (v3 < *(void *)(v2 + 16))
  {
    uint64_t v5 = type metadata accessor for FileRecipeDescriptor();
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t)(v4 + 4);
    while (1)
    {
      *(void *)(a1 + 24) = v3 + 1;
      uint64_t v8 = swift_allocObject();
      uint64_t v23 = v5;
      int64_t v24 = &off_26D0AE2B0;
      *(void *)&long long v22 = v8;
      uint64_t result = sub_21F0FB5B4(&v22, (uint64_t)v25);
      if (!v6)
      {
        unint64_t v10 = v4[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEB98);
        BOOL v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 40;
        v13[2] = v12;
        void v13[3] = 2 * v14;
        unint64_t v15 = (unint64_t)(v13 + 4);
        uint64_t v16 = v4[3] >> 1;
        if (v4[2])
        {
          if (v13 != v4 || v15 >= (unint64_t)&v4[5 * v16 + 4]) {
            memmove(v13 + 4, v4 + 4, 40 * v16);
          }
          v4[2] = 0;
        }
        uint64_t v7 = v15 + 40 * v16;
        uint64_t v6 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        uint64_t v4 = v13;
      }
      BOOL v18 = __OFSUB__(v6--, 1);
      if (v18) {
        break;
      }
      sub_21F0FB5B4(v25, v7);
      v7 += 40;
      uint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= *(void *)(a1 + 16)) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v6 = 0;
LABEL_21:
  uint64_t result = swift_release();
  unint64_t v19 = v4[3];
  if (v19 < 2) {
    return (uint64_t)v4;
  }
  unint64_t v20 = v19 >> 1;
  BOOL v18 = __OFSUB__(v20, v6);
  uint64_t v21 = v20 - v6;
  if (!v18)
  {
    v4[2] = v21;
    return (uint64_t)v4;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21F127620()
{
  uint64_t result = swift_retain();
  uint64_t v1 = *(void *)(result + 120);
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  if (v1 < *(void *)(v2 + 16))
  {
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x263F8EE78] + 32;
    uint64_t v32 = result;
    while (1)
    {
      if (v1 < 0)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      uint64_t v33 = v5;
      long long v34 = v3;
      uint64_t v6 = v2 + 88 * v1;
      uint64_t v7 = *(void *)(v6 + 80);
      uint64_t v35 = *(void *)(v6 + 72);
      uint64_t v8 = *(void *)(v6 + 88);
      unsigned __int8 v9 = *(unsigned char *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 104);
      uint64_t v11 = *(void *)(v6 + 112);
      uint64_t v12 = v4;
      uint64_t v13 = *(void *)(v6 + 56);
      uint64_t v14 = *(void *)(v6 + 64);
      uint64_t v15 = *(void *)(v6 + 40);
      uint64_t v16 = *(void *)(v6 + 48);
      int v17 = *(_DWORD *)(v6 + 32);
      *(void *)(result + 120) = v1 + 1;
      uint64_t v37 = &type metadata for DodMLRecipeDescriptor;
      long long v38 = &off_26D0ADCD0;
      uint64_t v18 = swift_allocObject();
      *(void *)&long long v36 = v18;
      *(_DWORD *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = v15;
      *(void *)(v18 + 32) = v16;
      uint64_t v19 = v13;
      uint64_t v20 = v12;
      *(void *)(v18 + 40) = v19;
      *(void *)(v18 + 48) = v14;
      *(void *)(v18 + 56) = v35;
      *(void *)(v18 + 64) = v7;
      *(void *)(v18 + 72) = v8;
      *(unsigned char *)(v18 + 80) = v9;
      *(void *)(v18 + 88) = v10;
      *(void *)(v18 + 96) = v11;
      uint64_t result = sub_21F0FB5B4(&v36, (uint64_t)v39);
      if (v12)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21F0FB9EC(v7, v8, v9);
        uint64_t result = swift_bridgeObjectRetain();
        uint64_t v21 = v33;
        uint64_t v3 = v34;
        BOOL v22 = __OFSUB__(v20, 1);
        uint64_t v4 = v20 - 1;
        if (v22) {
          goto LABEL_30;
        }
        goto LABEL_22;
      }
      unint64_t v23 = v34[3];
      if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_31;
      }
      int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
      if (v24 <= 1) {
        uint64_t v25 = 1;
      }
      else {
        uint64_t v25 = v24;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEB98);
      uint64_t v3 = (void *)swift_allocObject();
      uint64_t v26 = (uint64_t)(_swift_stdlib_malloc_size(v3) - 32) / 40;
      v3[2] = v25;
      v3[3] = 2 * v26;
      uint64_t v27 = v34[3] >> 1;
      uint64_t v21 = (uint64_t)&v3[5 * v27 + 4];
      uint64_t v28 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - v27;
      if (!v34[2])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21F0FB9EC(v7, v8, v9);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      }
      if (v3 < v34 || v3 + 4 >= &v34[5 * v27 + 4])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21F0FB9EC(v7, v8, v9);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21F0FB9EC(v7, v8, v9);
        if (v3 == v34) {
          goto LABEL_20;
        }
      }
      memmove(v3 + 4, v34 + 4, 40 * v27);
LABEL_20:
      swift_bridgeObjectRetain();
      v34[2] = 0;
LABEL_21:
      uint64_t result = swift_release();
      BOOL v22 = __OFSUB__(v28, 1);
      uint64_t v4 = v28 - 1;
      if (v22) {
        goto LABEL_30;
      }
LABEL_22:
      sub_21F0FB5B4(v39, v21);
      uint64_t v5 = v21 + 40;
      uint64_t result = v32;
      uint64_t v1 = *(void *)(v32 + 120);
      uint64_t v2 = *(void *)(v32 + 16);
      if (v1 >= *(void *)(v2 + 16)) {
        goto LABEL_25;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_25:
  uint64_t result = swift_release();
  unint64_t v29 = v3[3];
  if (v29 >= 2)
  {
    unint64_t v30 = v29 >> 1;
    BOOL v22 = __OFSUB__(v30, v4);
    uint64_t v31 = v30 - v4;
    if (v22) {
      goto LABEL_32;
    }
    v3[2] = v31;
  }
  return (uint64_t)v3;
}

uint64_t sub_21F127960(uint64_t a1)
{
  uint64_t v2 = swift_retain();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  if (v3 < *(void *)(v4 + 16))
  {
    uint64_t v6 = type metadata accessor for CKPolicyRecord(0);
    uint64_t v7 = 0;
    uint64_t v8 = (uint64_t)(v5 + 4);
    while (1)
    {
      uint64_t v25 = v6;
      uint64_t v26 = &off_26D0AD770;
      uint64_t result = (uint64_t)__swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
      if (v3 < 0) {
        break;
      }
      uint64_t result = sub_21F128B14(v4+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v3, result);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_25;
      }
      *(void *)(a1 + 24) = v12;
      uint64_t result = sub_21F0FB5B4(&v24, (uint64_t)v27);
      if (!v7)
      {
        unint64_t v13 = v5[3];
        if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_27;
        }
        int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1) {
          uint64_t v15 = 1;
        }
        else {
          uint64_t v15 = v14;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEB98);
        uint64_t v16 = (void *)swift_allocObject();
        uint64_t v17 = (uint64_t)(_swift_stdlib_malloc_size(v16) - 32) / 40;
        v16[2] = v15;
        v16[3] = 2 * v17;
        unint64_t v18 = (unint64_t)(v16 + 4);
        uint64_t v19 = v5[3] >> 1;
        if (v5[2])
        {
          uint64_t v20 = v5 + 4;
          if (v16 != v5 || v18 >= (unint64_t)v20 + 40 * v19) {
            memmove(v16 + 4, v20, 40 * v19);
          }
          void v5[2] = 0;
        }
        uint64_t v8 = v18 + 40 * v19;
        uint64_t v7 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        uint64_t result = swift_release();
        uint64_t v5 = v16;
      }
      BOOL v11 = __OFSUB__(v7--, 1);
      if (v11) {
        goto LABEL_26;
      }
      sub_21F0FB5B4(v27, v8);
      v8 += 40;
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= *(void *)(v4 + 16)) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = 0;
LABEL_20:
  uint64_t result = swift_release();
  unint64_t v21 = v5[3];
  if (v21 < 2) {
    return (uint64_t)v5;
  }
  unint64_t v22 = v21 >> 1;
  BOOL v11 = __OFSUB__(v22, v7);
  uint64_t v23 = v22 - v7;
  if (!v11)
  {
    void v5[2] = v23;
    return (uint64_t)v5;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F127B9C(uint64_t result, int64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  uint64_t v6 = 0;
  uint64_t v7 = 32;
  int64_t v8 = result;
  while (1)
  {
    BOOL v9 = v8 <= a2;
    if (a3 > 0) {
      BOOL v9 = v8 >= a2;
    }
    if (v9) {
      break;
    }
    BOOL v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10) {
      int64_t v8 = (v8 >> 63) ^ 0x8000000000000000;
    }
    v7 += 8;
    BOOL v10 = __OFADD__(v6++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (v6 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
    BOOL v11 = (int64_t *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v11);
    uint64_t v12 = result - 32;
    if (result < 32) {
      uint64_t v12 = result - 25;
    }
    uint64_t v13 = v12 >> 3;
    v11[2] = v6;
    v11[3] = 2 * v13;
    int64_t v14 = v11 + 4;
    uint64_t v15 = v13 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
    v15 -= v6;
    while (1)
    {
      BOOL v16 = v5 <= a2;
      if (a3 > 0) {
        BOOL v16 = v5 >= a2;
      }
      if (v16) {
        break;
      }
      if (__OFADD__(v5, a3)) {
        int64_t v17 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v17 = v5 + a3;
      }
      *v14++ = v5;
      uint64_t v5 = v17;
      if (!--v6) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  BOOL v11 = (int64_t *)MEMORY[0x263F8EE78];
  int64_t v14 = (int64_t *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v15 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
  if (v6) {
    goto LABEL_15;
  }
  int64_t v17 = result;
LABEL_23:
  BOOL v18 = v17 <= a2;
  if (a3 > 0) {
    BOOL v18 = v17 >= a2;
  }
  if (!v18)
  {
    uint64_t v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      int64_t v20 = v17 + a3;
      if (__OFADD__(v17, a3))
      {
        int64_t v20 = v19;
        if (!v15) {
          goto LABEL_32;
        }
        int64_t v20 = v19;
      }
      else if (!v15)
      {
LABEL_32:
        unint64_t v21 = v11[3];
        if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_58;
        }
        int64_t v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
        if (v22 <= 1) {
          uint64_t v23 = 1;
        }
        else {
          uint64_t v23 = v22;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
        long long v24 = (int64_t *)swift_allocObject();
        int64_t v25 = _swift_stdlib_malloc_size(v24);
        uint64_t v26 = v25 - 32;
        if (v25 < 32) {
          uint64_t v26 = v25 - 25;
        }
        uint64_t v27 = v26 >> 3;
        _OWORD v24[2] = v23;
        v24[3] = 2 * (v26 >> 3);
        unint64_t v28 = (unint64_t)(v24 + 4);
        unint64_t v29 = (unint64_t)v11[3] >> 1;
        if (v11[2])
        {
          if (v24 != v11 || v28 >= (unint64_t)&v11[v29 + 4]) {
            memmove(v24 + 4, v11 + 4, 8 * v29);
          }
          v11[2] = 0;
        }
        int64_t v14 = (int64_t *)(v28 + 8 * v29);
        uint64_t v15 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
        uint64_t result = swift_release();
        BOOL v11 = v24;
        uint64_t v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      BOOL v10 = __OFSUB__(v15--, 1);
      if (v10) {
        goto LABEL_57;
      }
      *v14++ = v17;
      BOOL v31 = v20 <= a2;
      if (a3 > 0) {
        BOOL v31 = v20 >= a2;
      }
      int64_t v17 = v20;
    }
    while (!v31);
  }
  unint64_t v32 = v11[3];
  if (v32 < 2) {
    return (uint64_t)v11;
  }
  unint64_t v33 = v32 >> 1;
  BOOL v10 = __OFSUB__(v33, v15);
  unint64_t v34 = v33 - v15;
  if (!v10)
  {
    v11[2] = v34;
    return (uint64_t)v11;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t *sub_21F127E20(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *result;
  if (*result)
  {
    BOOL v9 = (void *)*a3;
    if (a2)
    {
      *(void *)(v9[7] + 8 * a4) = v8;
    }
    else
    {
      v9[(a4 >> 6) + 8] |= 1 << a4;
      BOOL v10 = (void *)(v9[6] + 16 * a4);
      *BOOL v10 = a5;
      v10[1] = a6;
      *(void *)(v9[7] + 8 * a4) = v8;
      uint64_t v11 = v9[2];
      BOOL v12 = __OFADD__(v11, 1);
      uint64_t v13 = v11 + 1;
      if (v12)
      {
        __break(1u);
        return result;
      }
      v9[2] = v13;
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_21F126E4C(a4, *a3);
  }
  return (uint64_t *)swift_bridgeObjectRetain();
}

uint64_t sub_21F127EF8(uint64_t a1)
{
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0xE000000000000000;
  *(void *)(v1 + 96) = 1;
  *(unsigned char *)(v1 + 112) = 1;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 120) = sub_21F0FC630(MEMORY[0x263F8EE78]);
  *(void *)(v1 + 128) = sub_21F0FC820(v3);
  *(void *)(v1 + 136) = sub_21F0FC630(v3);
  *(void *)(v1 + 144) = sub_21F0FC820(v3);
  *(void *)(v1 + 152) = sub_21F0FC630(v3);
  *(void *)(v1 + 160) = sub_21F0FC820(v3);
  *(void *)(v1 + 168) = sub_21F0FC630(v3);
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 320) = 0u;
  *(_DWORD *)(v1 + 336) = 0;
  *(void *)(v1 + 344) = v3;
  *(void *)(v1 + 352) = v3;
  *(void *)(v1 + 360) = v3;
  *(void *)(v1 + 16) = a1;
  swift_retain();
  uint64_t result = espresso_create_context();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v1 + 24) = result;
  *(void *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  uint64_t result = espresso_create_plan();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v1 + 48) = result;
  *(void *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  uint64_t result = espresso_create_plan();
  if (result)
  {
    *(void *)(v1 + 72) = result;
    *(void *)(v1 + 104) = -1;
    return v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_21F128018()
{
  unint64_t result = qword_267EBEB88;
  if (!qword_267EBEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB88);
  }
  return result;
}

uint64_t sub_21F12806C@<X0>(uint64_t result@<X0>, int64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v4 = a3 >> 1;
  unint64_t v5 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v6 = v5 - 1;
  if ((uint64_t)v5 < 1)
  {
    uint64_t v13 = 1;
    uint64_t v9 = 1;
    uint64_t v7 = 1;
LABEL_21:
    uint64_t v11 = 1;
    goto LABEL_22;
  }
  if ((uint64_t)v5 <= a2 || v6 >= v4)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = *(void *)(result + 8 * v6);
  unint64_t v8 = v5 - 2;
  if (v5 < 2)
  {
    uint64_t v13 = 1;
    uint64_t v9 = 1;
    goto LABEL_21;
  }
  if ((uint64_t)v8 < a2 || v8 >= v4) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)(result + 8 * v8);
  unint64_t v10 = v5 - 3;
  if (v5 < 3)
  {
    uint64_t v13 = 1;
    goto LABEL_21;
  }
  if ((uint64_t)v10 < a2 || v10 >= v4) {
    goto LABEL_28;
  }
  uint64_t v11 = *(void *)(result + 8 * v10);
  unint64_t v12 = v5 - 4;
  if (v5 < 4)
  {
    uint64_t v13 = 1;
    goto LABEL_22;
  }
  if ((uint64_t)v12 < a2 || v12 >= v4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v13 = *(void *)(result + 8 * v12);
  unint64_t v14 = v5 - 5;
  if (v5 < 5)
  {
LABEL_22:
    uint64_t v15 = 1;
    goto LABEL_23;
  }
  if ((uint64_t)v14 >= a2 && v14 < v4)
  {
    uint64_t v15 = *(void *)(result + 8 * v14);
LABEL_23:
    *a4 = v7;
    a4[1] = v9;
    a4[2] = v11;
    a4[3] = v13;
    a4[4] = v15;
    a4[5] = v5;
    return result;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21F128160(uint64_t result, unsigned int a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v75 = *MEMORY[0x263EF8340];
  uint64_t v61 = *(void *)(a3 + 16);
  if (!v61) {
    return result;
  }
  int v74 = 0;
  uint64_t v59 = a2;
  uint64_t v60 = a3 + 32;
  memset(v73, 0, sizeof(v73));
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v15 = (uint64_t *)(v60 + 16 * v5);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *a4;
    *a4 = 0x8000000000000000;
    sub_21F10F2FC((uint64_t)v73, v16, v17, isUniquelyReferenced_nonNull_native);
    *a4 = v72[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_21F156F40();
    *(_OWORD *)(v19 + 32) = 0u;
    int64_t v20 = (char *)(v19 + 32);
    *(void *)(v19 + 16) = 10;
    *(_OWORD *)(v19 + 48) = 0u;
    *(_OWORD *)(v19 + 64) = 0u;
    *(_OWORD *)(v19 + 80) = 0u;
    *(_OWORD *)(v19 + 96) = 0u;
    v72[0] = 0;
    sub_21F156D20();
    espresso_network_query_blob_shape();
    swift_release();
    if (v72[0] < 0) {
      goto LABEL_50;
    }
    if (*(void *)(v19 + 16) < v72[0]) {
      goto LABEL_51;
    }
    if (v72[0])
    {
      unint64_t v21 = (uint64_t *)(v19 + 32);
      uint64_t v22 = v72[0];
      uint64_t v23 = 1;
      while (1)
      {
        uint64_t v24 = *v21++;
        unint64_t v25 = v23 * v24;
        if ((unsigned __int128)(v23 * (__int128)v24) >> 64 != (v23 * v24) >> 63) {
          break;
        }
        uint64_t v23 = v25;
        if (!--v22) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
    }
    unint64_t v25 = 1;
LABEL_13:
    uint64_t v65 = v72[0];
    uint64_t v62 = v5;
    unint64_t v63 = v63 & 0xFFFFFFFF00000000 | v59;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_21F11F40C(v25, 0);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *a5;
    *a5 = 0x8000000000000000;
    sub_21F10F1BC(v26, v16, v17, v27);
    *a5 = v72[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *a5;
    uint64_t v29 = v72[0];
    *a5 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_21F10E9C8(v16, v17);
    uint64_t v32 = *(void *)(v29 + 16);
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      goto LABEL_52;
    }
    char v35 = v30;
    if (*(void *)(v29 + 24) >= v34)
    {
      if (v28)
      {
        if ((v30 & 1) == 0) {
          goto LABEL_53;
        }
      }
      else
      {
        sub_21F126ABC();
        if ((v35 & 1) == 0) {
          goto LABEL_53;
        }
      }
    }
    else
    {
      sub_21F1261E8(v34, v28);
      unint64_t v36 = sub_21F10E9C8(v16, v17);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_56;
      }
      unint64_t v31 = v36;
      if ((v35 & 1) == 0) {
        goto LABEL_53;
      }
    }
    uint64_t v38 = v72[0];
    uint64_t v39 = *(void *)(*(void *)(v72[0] + 56) + 8 * v31);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v39 = sub_21F127410(v39);
    }
    unint64_t v40 = *(void *)(v39 + 16);
    if (v40 >> 61) {
      goto LABEL_54;
    }
    sub_21F120FF4(v39 + 32, v39 + 32 + 4 * v40, a4, v16, v17);
    v71[0] = v39;
    sub_21F127E20(v71, 1, v72, v31, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a5 = v38;
    swift_bridgeObjectRelease();
    sub_21F157650();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v41 = swift_dynamicCastClass();
    if (!v41)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = MEMORY[0x263F8EE78];
    }
    uint64_t v42 = *(void *)(v41 + 16);
    swift_release();
    if (v42 == v65)
    {
      if (!swift_dynamicCastClass()) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v65)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
        uint64_t v54 = 8 * v65;
        long long v55 = (char *)swift_allocObject();
        int64_t v56 = _swift_stdlib_malloc_size(v55);
        uint64_t v57 = v56 - 32;
        if (v56 < 32) {
          uint64_t v57 = v56 - 25;
        }
        *((void *)v55 + 2) = v65;
        *((void *)v55 + 3) = 2 * (v57 >> 3);
        long long v58 = v55 + 32;
        if (v20 < &v55[v54 + 32] && v58 < &v20[v54]) {
          goto LABEL_57;
        }
        memcpy(v58, v20, 8 * v65);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    long long v44 = (void *)*a4;
    *a4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_21F10E9C8(v16, v17);
    uint64_t v47 = v44[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      goto LABEL_55;
    }
    char v50 = v45;
    if (v44[3] < v49) {
      break;
    }
    if (v43)
    {
      uint64_t v53 = v62;
      if ((v45 & 1) == 0) {
        goto LABEL_46;
      }
    }
    else
    {
      sub_21F126898();
      uint64_t v53 = v62;
      if ((v50 & 1) == 0)
      {
LABEL_46:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_35:
    memmove(__dst, (const void *)(v44[7] + 168 * v46), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v69);
    espresso_buffer_pack_tensor_shape();
    sub_21F128854((uint64_t)v69, (uint64_t)v71);
    sub_21F128854((uint64_t)v71, (uint64_t)v72);
    if (sub_21F1288BC((uint64_t)v72) == 1)
    {
      swift_arrayDestroy();
      sub_21F127024(v46, (uint64_t)v44);
    }
    else
    {
      sub_21F128854((uint64_t)v71, (uint64_t)v67);
      uint64_t v6 = v44[7] + 168 * v46;
      long long v7 = v67[7];
      long long v8 = v67[8];
      long long v9 = v67[9];
      *(void *)(v6 + 160) = v68;
      *(_OWORD *)(v6 + 128) = v8;
      *(_OWORD *)(v6 + 144) = v9;
      *(_OWORD *)(v6 + 112) = v7;
      long long v10 = v67[3];
      long long v11 = v67[4];
      long long v12 = v67[6];
      *(_OWORD *)(v6 + 80) = v67[5];
      *(_OWORD *)(v6 + 96) = v12;
      *(_OWORD *)(v6 + 48) = v10;
      *(_OWORD *)(v6 + 64) = v11;
      long long v14 = v67[1];
      long long v13 = v67[2];
      *(_OWORD *)uint64_t v6 = v67[0];
      *(_OWORD *)(v6 + 16) = v14;
      *(_OWORD *)(v6 + 32) = v13;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v53 + 1;
    *a4 = (uint64_t)v44;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v5 == v61) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_21F125E84(v49, v43);
  unint64_t v51 = sub_21F10E9C8(v16, v17);
  if ((v50 & 1) == (v52 & 1))
  {
    unint64_t v46 = v51;
    uint64_t v53 = v62;
    if ((v50 & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_35;
  }
LABEL_56:
  sub_21F157680();
  __break(1u);
LABEL_57:
  unint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F12884C(uint64_t result)
{
  *(unsigned char *)(result + 168) = 0;
  return result;
}

uint64_t sub_21F128854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F1288BC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for EspressoMILTrainer()
{
  return self;
}

uint64_t method lookup function for EspressoMILTrainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EspressoMILTrainer);
}

uint64_t dispatch thunk of EspressoMILTrainer.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 704))();
}

uint64_t dispatch thunk of EspressoMILTrainer.unload(functions:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of EspressoMILTrainer.load(path:functions:inputs:outputs:weights:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of EspressoMILTrainer.loadInferenceModel(path:inputs:outputs:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of EspressoMILTrainer.finalize(batchSize:learningRate:)(uint64_t a1, unint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v2 + 752))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of EspressoMILTrainer.extractWeights(function:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of EspressoMILTrainer.extractOutputs(function:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of EspressoMILTrainer.train(_:featureSizes:numSamples:epochs:shuffleMethod:fullBatch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of EspressoMILTrainer.eval(_:featureSizes:numSamples:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t sub_21F128B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKPolicyRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F128B78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 80) != 255) {
    sub_21F0FB9E0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_21F128BE0(uint64_t result, unsigned int a2, uint64_t a3, uint64_t *a4)
{
  v52[22] = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  long long v7 = (uint64_t *)(a3 + 40);
  uint64_t v42 = a2;
  swift_bridgeObjectRetain();
  for (uint64_t i = v5 - 1; ; uint64_t i = v45 - 1)
  {
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F156F40();
    *(_OWORD *)(v11 + 32) = 0u;
    long long v12 = (char *)(v11 + 32);
    *(void *)(v11 + 16) = 10;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_OWORD *)(v11 + 96) = 0u;
    v52[0] = 0;
    sub_21F156D20();
    unint64_t v13 = v4 & 0xFFFFFFFF00000000 | v42;
    espresso_network_query_blob_shape();
    swift_release();
    uint64_t v14 = v52[0];
    if ((v52[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    if (*(void *)(v11 + 16) < v52[0]) {
      goto LABEL_33;
    }
    unint64_t v44 = v13;
    sub_21F157650();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v15 = swift_dynamicCastClass();
    if (!v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x263F8EE78];
    }
    uint64_t v16 = *(void *)(v15 + 16);
    swift_release();
    char v43 = v7;
    uint64_t v45 = i;
    if (v16 == v14)
    {
      if (!swift_dynamicCastClass()) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
        uint64_t v37 = 8 * v14;
        uint64_t v38 = (char *)swift_allocObject();
        int64_t v39 = _swift_stdlib_malloc_size(v38);
        uint64_t v40 = v39 - 32;
        if (v39 < 32) {
          uint64_t v40 = v39 - 25;
        }
        *((void *)v38 + 2) = v14;
        *((void *)v38 + 3) = 2 * (v40 >> 3);
        uint64_t v41 = v38 + 32;
        if (v12 < &v38[v37 + 32] && v41 < &v12[v37]) {
          goto LABEL_36;
        }
        memcpy(v41, v12, 8 * v14);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *a4;
    uint64_t v46 = *a4;
    uint64_t v19 = a4;
    *a4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_21F10E9C8(v9, v10);
    uint64_t v22 = *(void *)(v18 + 16);
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      goto LABEL_34;
    }
    char v25 = v20;
    if (*(void *)(v18 + 24) < v24) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v20 & 1) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_21F126898();
      if ((v25 & 1) == 0)
      {
LABEL_29:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_17:
    memmove(__dst, (const void *)(*(void *)(v46 + 56) + 168 * v21), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v49);
    espresso_buffer_pack_tensor_shape();
    sub_21F128854((uint64_t)v49, (uint64_t)v51);
    sub_21F128854((uint64_t)v51, (uint64_t)v52);
    if (sub_21F1288BC((uint64_t)v52) == 1)
    {
      swift_arrayDestroy();
      sub_21F127024(v21, v46);
    }
    else
    {
      sub_21F128854((uint64_t)v51, (uint64_t)v47);
      uint64_t v28 = *(void *)(v46 + 56) + 168 * v21;
      long long v29 = v47[7];
      long long v30 = v47[8];
      long long v31 = v47[9];
      *(void *)(v28 + 160) = v48;
      *(_OWORD *)(v28 + 128) = v30;
      *(_OWORD *)(v28 + 144) = v31;
      *(_OWORD *)(v28 + 112) = v29;
      long long v32 = v47[3];
      long long v33 = v47[4];
      long long v34 = v47[6];
      *(_OWORD *)(v28 + 80) = v47[5];
      *(_OWORD *)(v28 + 96) = v34;
      *(_OWORD *)(v28 + 48) = v32;
      *(_OWORD *)(v28 + 64) = v33;
      long long v36 = v47[1];
      long long v35 = v47[2];
      *(_OWORD *)uint64_t v28 = v47[0];
      *(_OWORD *)(v28 + 16) = v36;
      *(_OWORD *)(v28 + 32) = v35;
    }
    swift_bridgeObjectRelease();
    unint64_t v4 = v44;
    a4 = v19;
    *uint64_t v19 = v46;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!v45) {
      return swift_bridgeObjectRelease();
    }
    long long v7 = v43 + 2;
  }
  sub_21F125E84(v24, isUniquelyReferenced_nonNull_native);
  unint64_t v26 = sub_21F10E9C8(v9, v10);
  if ((v25 & 1) == (v27 & 1))
  {
    unint64_t v21 = v26;
    if ((v25 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_17;
  }
  sub_21F157680();
  __break(1u);
LABEL_36:
  unint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

BOOL static PFLStats.StdMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PFLStats.StdMethod.hash(into:)()
{
  return sub_21F157700();
}

uint64_t PFLStats.StdMethod.hashValue.getter()
{
  return sub_21F157710();
}

uint64_t static PFLStats.meanAndStd(_:_:)(uint64_t a1)
{
  unint64_t v1 = sub_21F129520(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t static PFLStats.meanAndStd(_:)(uint64_t a1)
{
  unint64_t v1 = sub_21F129520(a1);
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t static PFLStats.l2Norm(_:)(uint64_t a1)
{
  if (*(void *)(a1 + 16) >> 31) {
    __break(1u);
  }
  return MEMORY[0x270EDE480]();
}

float static PFLStats.mean(_:)(uint64_t a1)
{
  unint64_t v1 = (void (*)(uint64_t, uint64_t, float *, uint64_t))MEMORY[0x263EFAA70];
  return sub_21F129228(a1, v1);
}

float static PFLStats.sum(_:)(uint64_t a1)
{
  unint64_t v1 = (void (*)(uint64_t, uint64_t, float *, uint64_t))MEMORY[0x263EFAA78];
  return sub_21F129228(a1, v1);
}

float sub_21F129228(uint64_t a1, void (*a2)(uint64_t, uint64_t, float *, uint64_t))
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  float v4 = NAN;
  a2(a1 + 32, 1, &v4, v2);
  return v4;
}

uint64_t static PFLStats.cumsum(vector:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = sub_21F156F40();
  *(void *)(v3 + 16) = v1;
  bzero((void *)(v3 + 32), 4 * v1);
  uint64_t v4 = 0;
  float v5 = 0.0;
  do
  {
    float v5 = v5 + *(float *)(a1 + 32 + 4 * v4);
    *(float *)(v3 + 4 * v4++ + 32) = v5;
  }
  while (v1 != v4);
  return v3;
}

uint64_t static PFLStats.greater<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F12938C(a1, a2, a3, a4, MEMORY[0x263F8D168]);
}

uint64_t static PFLStats.greaterEqual<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F12938C(a1, a2, a3, a4, MEMORY[0x263F8D178]);
}

uint64_t static PFLStats.less<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F12938C(a1, a2, a3, a4, MEMORY[0x263F8D170]);
}

uint64_t static PFLStats.lessEqual<A>(vector:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F12938C(a1, a2, a3, a4, MEMORY[0x263F8D180]);
}

uint64_t sub_21F12938C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, uint64_t, uint64_t))
{
  char v20 = a5;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v13 = MEMORY[0x223C43DE0](v9, v12);
  uint64_t result = sub_21F11F5EC(0, v13);
  if ((v13 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
  }
  else
  {
    uint64_t v15 = result;
    if (v13)
    {
      unint64_t v16 = 0;
      uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        sub_21F156F90();
        char v18 = v20(v11, a2, a3, a4);
        (*v17)(v11, a3);
        if (v18)
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_21F12744C(v15);
            uint64_t v15 = result;
          }
          if (v16 >= *(void *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_12;
          }
          *(unsigned char *)(v15 + v16 + 32) = 1;
        }
        ++v16;
      }
      while (v13 != v16);
    }
    return v15;
  }
  return result;
}

unint64_t sub_21F129520(uint64_t a1)
{
  __Mean[1] = *MEMORY[0x263EF8340];
  vDSP_Length v1 = *(void *)(a1 + 16);
  if (v1 <= 1)
  {
    if (v1)
    {
      unsigned __int8 v2 = 0;
      unsigned int v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      unsigned int v3 = 0;
      unsigned __int8 v2 = 1;
    }
  }
  else
  {
    __Mean[0] = 0;
    vDSP_normalize((const float *)(a1 + 32), 1, 0, 1, (float *)__Mean + 1, (float *)__Mean, v1);
    unsigned __int8 v2 = 0;
    unsigned int v3 = HIDWORD(__Mean[0]);
  }
  return v3 | ((unint64_t)v2 << 32);
}

unint64_t sub_21F12960C()
{
  unint64_t result = qword_267EBEBA8;
  if (!qword_267EBEBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLStats()
{
  return &type metadata for PFLStats;
}

unsigned char *storeEnumTagSinglePayload for PFLStats.StdMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F12973CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLStats.StdMethod()
{
  return &type metadata for PFLStats.StdMethod;
}

PrivateFederatedLearning::PFLTaskDiscoveryError_optional __swiftcall PFLTaskDiscoveryError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 0;
  char v3 = 34;
  switch(rawValue)
  {
    case 9051:
      *vDSP_Length v1 = 51;
      return (PrivateFederatedLearning::PFLTaskDiscoveryError_optional)rawValue;
    case 9500:
      goto LABEL_37;
    case 9501:
      char v2 = 1;
      goto LABEL_37;
    case 9502:
      char v2 = 2;
      goto LABEL_37;
    case 9503:
      char v2 = 3;
      goto LABEL_37;
    case 9504:
      char v2 = 4;
      goto LABEL_37;
    case 9505:
      char v2 = 5;
      goto LABEL_37;
    case 9506:
      char v2 = 6;
      goto LABEL_37;
    case 9507:
      char v2 = 7;
      goto LABEL_37;
    case 9508:
      char v2 = 8;
      goto LABEL_37;
    case 9509:
      char v2 = 9;
      goto LABEL_37;
    case 9510:
      char v2 = 10;
      goto LABEL_37;
    case 9511:
      char v2 = 11;
      goto LABEL_37;
    case 9512:
      char v2 = 12;
      goto LABEL_37;
    case 9513:
      char v2 = 13;
      goto LABEL_37;
    case 9514:
      char v2 = 14;
      goto LABEL_37;
    case 9515:
      char v2 = 15;
      goto LABEL_37;
    case 9516:
      char v2 = 16;
      goto LABEL_37;
    case 9517:
      char v2 = 17;
      goto LABEL_37;
    case 9518:
      char v2 = 18;
      goto LABEL_37;
    case 9519:
      char v2 = 19;
      goto LABEL_37;
    case 9520:
      char v2 = 20;
      goto LABEL_37;
    case 9521:
      char v2 = 21;
      goto LABEL_37;
    case 9522:
      char v2 = 22;
      goto LABEL_37;
    case 9523:
      char v2 = 23;
      goto LABEL_37;
    case 9524:
      char v2 = 24;
      goto LABEL_37;
    case 9525:
      char v2 = 25;
      goto LABEL_37;
    case 9526:
      char v2 = 26;
      goto LABEL_37;
    case 9527:
      char v2 = 27;
      goto LABEL_37;
    case 9528:
      char v2 = 28;
      goto LABEL_37;
    case 9529:
      char v2 = 29;
      goto LABEL_37;
    case 9530:
      char v2 = 30;
      goto LABEL_37;
    case 9531:
      char v2 = 31;
      goto LABEL_37;
    case 9532:
      char v2 = 32;
      goto LABEL_37;
    case 9533:
      char v2 = 33;
LABEL_37:
      char v3 = v2;
      goto LABEL_38;
    case 9534:
LABEL_38:
      *vDSP_Length v1 = v3;
      break;
    case 9535:
      *vDSP_Length v1 = 35;
      break;
    case 9536:
      *vDSP_Length v1 = 36;
      break;
    case 9537:
      *vDSP_Length v1 = 37;
      break;
    case 9538:
      *vDSP_Length v1 = 38;
      break;
    case 9539:
      *vDSP_Length v1 = 39;
      break;
    case 9540:
      *vDSP_Length v1 = 40;
      break;
    case 9541:
      *vDSP_Length v1 = 41;
      break;
    case 9542:
      *vDSP_Length v1 = 42;
      break;
    case 9543:
      *vDSP_Length v1 = 43;
      break;
    case 9544:
      *vDSP_Length v1 = 44;
      break;
    case 9545:
      *vDSP_Length v1 = 45;
      break;
    case 9546:
      *vDSP_Length v1 = 46;
      break;
    case 9547:
      *vDSP_Length v1 = 47;
      break;
    case 9548:
      *vDSP_Length v1 = 48;
      break;
    case 9549:
      *vDSP_Length v1 = 49;
      break;
    case 9550:
      *vDSP_Length v1 = 50;
      break;
    default:
      *vDSP_Length v1 = 52;
      break;
  }
  return (PrivateFederatedLearning::PFLTaskDiscoveryError_optional)rawValue;
}

uint64_t PFLTaskDiscoveryError.rawValue.getter()
{
  return qword_21F15B180[*v0];
}

BOOL sub_21F12A178(char *a1, char *a2)
{
  return qword_21F15B180[*a1] == qword_21F15B180[*a2];
}

unint64_t sub_21F12A1A0()
{
  unint64_t result = qword_267EBEBB0;
  if (!qword_267EBEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBB0);
  }
  return result;
}

uint64_t sub_21F12A1F4()
{
  return sub_21F157710();
}

uint64_t sub_21F12A244()
{
  return sub_21F157700();
}

uint64_t sub_21F12A27C()
{
  return sub_21F157710();
}

PrivateFederatedLearning::PFLTaskDiscoveryError_optional sub_21F12A2C8(Swift::Int *a1)
{
  return PFLTaskDiscoveryError.init(rawValue:)(*a1);
}

void sub_21F12A2D0(void *a1@<X8>)
{
  *a1 = qword_21F15B180[*v1];
}

uint64_t sub_21F12A2E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21F12A4D4();
  unint64_t v5 = sub_21F12A528();
  return MEMORY[0x270F9FB50](a1, a2, v4, v5);
}

uint64_t getEnumTagSinglePayload for PFLTaskDiscoveryError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCD) {
    goto LABEL_17;
  }
  if (a2 + 51 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 51) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 51;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 51;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 51;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x34;
  int v8 = v6 - 52;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PFLTaskDiscoveryError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 51 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 51) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCC)
  {
    unsigned int v6 = ((a2 - 205) >> 8) + 1;
    *unint64_t result = a2 + 51;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F12A49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 51;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskDiscoveryError()
{
  return &type metadata for PFLTaskDiscoveryError;
}

unint64_t sub_21F12A4D4()
{
  unint64_t result = qword_267EBEBB8;
  if (!qword_267EBEBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBB8);
  }
  return result;
}

unint64_t sub_21F12A528()
{
  unint64_t result = qword_267EBEBC0;
  if (!qword_267EBEBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBC0);
  }
  return result;
}

char *sub_21F12A57C@<X0>(const char *a1@<X0>, char **a2@<X8>)
{
  unint64_t result = strdup(a1);
  *a2 = result;
  return result;
}

uint64_t EspressoEIRTrainer.__allocating_init(_:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_21F12EAD0(a1);
  swift_release();
  return v2;
}

uint64_t EspressoEIRTrainer.init(_:)(uint64_t a1)
{
  uint64_t v1 = sub_21F12EAD0(a1);
  swift_release();
  return v1;
}

uint64_t EspressoEIRTrainer.deinit()
{
  espresso_plan_destroy();
  espresso_context_destroy();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EspressoEIRTrainer.__deallocating_deinit()
{
  EspressoEIRTrainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F12A6D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = *a3;
  *(void *)(v7 + 56) = a1;
  *(void *)(v7 + 64) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 72) = v11;
  uint64_t v12 = *(void *)(v7 + 16);
  swift_retain();
  double Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *(void *)(v12 + 16);
  *(void *)(v12 + 16) = 0x8000000000000000;
  sub_21F10EFAC(0x6F4C2E6C65646F4DLL, 0xEA00000000006461, isUniquelyReferenced_nonNull_native, Current);
  *(void *)(v12 + 16) = v29;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  sub_21F156D20();
  swift_beginAccess();
  unint64_t v15 = espresso_plan_add_network();
  swift_endAccess();
  swift_release();
  if (v15)
  {
    char v16 = 8;
  }
  else
  {
    uint64_t v17 = *(void *)(a4 + 16);
    uint64_t v27 = a6;
    uint64_t v28 = a5;
    if (v17)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = a4 + 40;
      while (1)
      {
        uint64_t v19 = *(unsigned int *)(v7 + 32);
        sub_21F156D20();
        unint64_t v15 = v15 & 0xFFFFFFFF00000000 | v19;
        int v20 = espresso_network_declare_input();
        swift_release();
        if (v20) {
          break;
        }
        v18 += 16;
        if (!--v17)
        {
          swift_bridgeObjectRelease();
          a6 = v27;
          a5 = v28;
          goto LABEL_8;
        }
      }
      char v16 = 2;
    }
    else
    {
LABEL_8:
      uint64_t v21 = *(void *)(a5 + 16);
      if (!v21)
      {
LABEL_13:
        *(void *)(v7 + 480) = a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v7 + 488) = a5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v7 + 496) = a6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_21F10E6C0(0x6F4C2E6C65646F4DLL, 0xEA00000000006461);
        return swift_release();
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = a5 + 40;
      while (1)
      {
        uint64_t v23 = *(unsigned int *)(v7 + 32);
        sub_21F156D20();
        unint64_t v15 = v15 & 0xFFFFFFFF00000000 | v23;
        int v24 = espresso_network_declare_output();
        swift_release();
        if (v24) {
          break;
        }
        v22 += 16;
        if (!--v21)
        {
          a5 = v28;
          swift_bridgeObjectRelease();
          a6 = v27;
          goto LABEL_13;
        }
      }
      char v16 = 3;
    }
    swift_bridgeObjectRelease();
  }
  sub_21F128018();
  swift_allocError();
  *unint64_t v26 = v16;
  return swift_willThrow();
}

uint64_t sub_21F12A9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = 1;
  uint64_t result = sub_21F12A6D8(a1, a2, &v7, a3, a4, MEMORY[0x263F8EE78]);
  if (!v5) {
    *(unsigned char *)(v4 + 136) = 0;
  }
  return result;
}

uint64_t sub_21F12AA30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  if ((*(unsigned char *)(v2 + 72) & 2) != 0)
  {
    if ((a2 & 0x100000000) != 0)
    {
      sub_21F128018();
      swift_allocError();
      *int v8 = 21;
      return swift_willThrow();
    }
    *(_DWORD *)(v2 + 88) = a2;
  }
  sub_21F12C2DC((uint64_t *)v10);
  v11[0] = v10[0];
  v11[1] = v10[1];
  v11[2] = v10[2];
  sub_21F12E13C((char **)v11);
  if (v3) {
    goto LABEL_7;
  }
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_21F12D08C(v4, (uint64_t *)(v2 + 96), (uint64_t *)(v2 + 104));
  swift_endAccess();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_21F12D08C(v5, (uint64_t *)(v2 + 112), (uint64_t *)(v2 + 120));
  swift_endAccess();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_21F12D7AC(v6, (uint64_t *)(v2 + 128));
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_21F12C6F0();
  if (*(unsigned char *)(v2 + 136) != 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F12C210();
    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(_DWORD **)(v2 + 312);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v9 = *(_DWORD *)(v2 + 88);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_21F12AC8C(int32x2_t a1)
{
  uint64_t v3 = *(void *)(v1 + 496);
  unint64_t v31 = *(void *)(v3 + 16);
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v28 = v3;
    do
    {
      if (v4 >= *(void *)(v3 + 16))
      {
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_26:
        __break(1u);
      }
      uint64_t v6 = *(unsigned int *)(v1 + 32);
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_21F156F40();
      *(_OWORD *)(v7 + 32) = 0u;
      *(void *)(v7 + 16) = 10;
      *(_OWORD *)(v7 + 48) = 0u;
      *(_OWORD *)(v7 + 64) = 0u;
      *(_OWORD *)(v7 + 80) = 0u;
      *(_OWORD *)(v7 + 96) = 0u;
      sub_21F156D20();
      unint64_t v2 = v2 & 0xFFFFFFFF00000000 | v6;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (__OFADD__(v5++, 1)) {
        goto LABEL_21;
      }
      ++v4;
      uint64_t v1 = v32;
      uint64_t v3 = v28;
    }
    while (v4 != v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = 0;
  }
  a1.i32[0] = 1.0;
  uint64_t v9 = sub_21F11F40C(v5, a1);
  uint64_t v10 = *(void *)(v1 + 496);
  uint64_t v27 = *(void *)(v10 + 16);
  if (v27)
  {
    uint64_t v26 = v10 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    char v25 = (uint64_t *)(v1 + 128);
    swift_beginAccess();
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v24 = v10;
    do
    {
      if (v11 >= *(void *)(v10 + 16)) {
        goto LABEL_22;
      }
      uint64_t v29 = v12;
      uint64_t v13 = v9;
      uint64_t v14 = (uint64_t *)(v26 + 16 * v11);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      uint64_t v17 = *(unsigned int *)(v1 + 32);
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_21F156F40();
      *(void *)(v18 + 16) = 10;
      *(_OWORD *)(v18 + 48) = 0u;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *(_OWORD *)(v18 + 96) = 0u;
      *(_OWORD *)(v18 + 32) = 0u;
      uint64_t v30 = v15;
      sub_21F156D20();
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v9 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_21F127410(v13);
      }
      uint64_t v19 = *v25;
      if (!*(void *)(*v25 + 16)) {
        goto LABEL_23;
      }
      unint64_t v31 = v31 & 0xFFFFFFFF00000000 | v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_21F10E9C8(v30, v16);
      if ((v21 & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 168 * v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_26;
      }
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      uint64_t v12 = v29 + 1;
      uint64_t v1 = v32;
      if (__OFADD__(v29, 1)) {
        goto LABEL_24;
      }
      ++v11;
      uint64_t v10 = v24;
    }
    while (v11 != v27);
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_21F12B198()
{
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v31 = *(void *)(v1 + 16);
  if (v31)
  {
    uint64_t v30 = v1 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v29 = (uint64_t *)(v0 + 112);
    swift_beginAccess();
    unint64_t v2 = 0;
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    uint64_t v27 = v1;
    uint64_t v28 = v0;
    while (1)
    {
      if (v2 >= *(void *)(v1 + 16))
      {
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_29:
        __break(1u);
      }
      unint64_t v32 = v2;
      unint64_t v4 = (uint64_t *)(v30 + 16 * v2);
      uint64_t v6 = *v4;
      uint64_t v5 = v4[1];
      uint64_t v7 = *(unsigned int *)(v0 + 32);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_21F156F40();
      *(void *)(v8 + 16) = 10;
      *(_OWORD *)(v8 + 48) = 0u;
      *(_OWORD *)(v8 + 64) = 0u;
      *(_OWORD *)(v8 + 80) = 0u;
      *(_OWORD *)(v8 + 96) = 0u;
      *(_OWORD *)(v8 + 32) = 0u;
      sub_21F156D20();
      unint64_t v9 = v33 & 0xFFFFFFFF00000000 | v7;
      espresso_network_query_blob_shape();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_21F156F40();
      *(void *)(v10 + 16) = 1;
      bzero((void *)(v10 + 32), 4uLL);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_21F10F1BC(v10, v6, v5, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *v29;
      if (!*(void *)(*v29 + 16)) {
        goto LABEL_26;
      }
      unint64_t v33 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_21F10E9C8(v6, v5);
      if ((v14 & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 168 * v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v15) {
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_21F10E9C8(v6, v5);
      uint64_t v19 = v3[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_27;
      }
      char v22 = v17;
      if (v3[3] >= v21)
      {
        if (v16)
        {
          if ((v17 & 1) == 0) {
            goto LABEL_21;
          }
        }
        else
        {
          sub_21F126ABC();
          if ((v22 & 1) == 0)
          {
LABEL_21:
            __break(1u);
LABEL_22:
            swift_bridgeObjectRelease();
            return (uint64_t)v3;
          }
        }
      }
      else
      {
        sub_21F1261E8(v21, v16);
        unint64_t v23 = sub_21F10E9C8(v6, v5);
        if ((v22 & 1) != (v24 & 1))
        {
          uint64_t result = sub_21F157680();
          __break(1u);
          return result;
        }
        unint64_t v18 = v23;
        if ((v22 & 1) == 0) {
          goto LABEL_21;
        }
      }
      uint64_t v25 = *(void *)(v3[7] + 8 * v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v25 = sub_21F103A90(0, *(void *)(v25 + 16), 0, v25);
      }
      swift_bridgeObjectRetain();
      cblas_scopy_NEWLAPACK();
      if (v25)
      {
        *(void *)(v3[7] + 8 * v18) = v25;
      }
      else
      {
        swift_arrayDestroy();
        sub_21F126E4C(v18, (uint64_t)v3);
      }
      uint64_t v1 = v27;
      uint64_t v0 = v28;
      unint64_t v2 = v32 + 1;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32 + 1 == v31) {
        goto LABEL_22;
      }
    }
  }
  return MEMORY[0x263F8EE80];
}

uint64_t sub_21F12B69C(uint64_t a1, uint64_t a2, int64_t a3, int a4, unsigned __int8 *a5)
{
  return sub_21F12EBDC(a1, a2, a3, a4, a5);
}

uint64_t sub_21F12B6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  sub_21F128018();
  uint64_t v8 = (void *)swift_allocError();
  uint64_t v9 = (uint64_t)v8;
  *uint64_t v10 = 19;
  if ((*(unsigned char *)(v3 + 72) & 1) == 0)
  {
LABEL_2:
    swift_willThrow();
    return a3;
  }

  if (*(unsigned char *)(v3 + 136))
  {
    swift_beginAccess();
    uint64_t v12 = *(_DWORD **)(v3 + 144);
    if (!v12)
    {
LABEL_121:
      __break(1u);
LABEL_122:
      uint64_t result = sub_21F157400();
      __break(1u);
      goto LABEL_123;
    }
    *uint64_t v12 = 0;
  }
  uint64_t v58 = *(void *)(v3 + 80);
  if (!v58) {
    goto LABEL_108;
  }
  if (a3 == 0x8000000000000000 && v58 == -1) {
    goto LABEL_111;
  }
  uint64_t v13 = a3 / v58;
  if (a3 / v58 < 0)
  {
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    swift_bridgeObjectRelease();
LABEL_113:
    __break(1u);
LABEL_114:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_115:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    uint64_t v61 = sub_21F103DC4(0, v61[2] + 1, 1, v61);
LABEL_102:
    unint64_t v55 = v61[2];
    unint64_t v54 = v61[3];
    if (v55 >= v54 >> 1) {
      uint64_t v61 = sub_21F103DC4((void *)(v54 > 1), v55 + 1, 1, v61);
    }
    v61[2] = v55 + 1;
    v61[v55 + 4] = v9;
    sub_21F12E63C(a3);
    if (!v5) {
      return (uint64_t)v61;
    }
LABEL_61:
    swift_bridgeObjectRelease();
    return a3;
  }
  uint64_t v56 = a3;
  uint64_t v57 = v4;
  uint64_t v68 = v3;
  uint64_t v59 = a3 / v58;
  if (!v13)
  {
    a3 = MEMORY[0x263F8EE78];
    goto LABEL_59;
  }
  uint64_t v5 = 0;
  uint64_t v62 = a1 + 64;
  a3 = MEMORY[0x263F8EE78];
  uint64_t v66 = v3 + 96;
  while (2)
  {
    if (v5 == v13)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    uint64_t v60 = v5 + 1;
    uint64_t v61 = (void *)a3;
    uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v9 < 64) {
      uint64_t v14 = ~(-1 << v9);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & *(void *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    a3 = 0;
    int64_t v63 = (unint64_t)(v9 + 63) >> 6;
    if (v15)
    {
LABEL_18:
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (a3 << 6);
      goto LABEL_37;
    }
    while (1)
    {
      int64_t v18 = a3 + 1;
      if (__OFADD__(a3, 1))
      {
        __break(1u);
LABEL_101:
        uint64_t v9 = sub_21F12B198();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_118;
        }
        goto LABEL_102;
      }
      if (v18 >= v63) {
        goto LABEL_51;
      }
      unint64_t v19 = *(void *)(v62 + 8 * v18);
      ++a3;
      if (!v19)
      {
        a3 = v18 + 1;
        if (v18 + 1 >= v63) {
          goto LABEL_51;
        }
        unint64_t v19 = *(void *)(v62 + 8 * a3);
        if (!v19)
        {
          a3 = v18 + 2;
          if (v18 + 2 >= v63) {
            goto LABEL_51;
          }
          unint64_t v19 = *(void *)(v62 + 8 * a3);
          if (!v19)
          {
            a3 = v18 + 3;
            if (v18 + 3 >= v63) {
              goto LABEL_51;
            }
            unint64_t v19 = *(void *)(v62 + 8 * a3);
            if (!v19)
            {
              a3 = v18 + 4;
              if (v18 + 4 >= v63) {
                goto LABEL_51;
              }
              unint64_t v19 = *(void *)(v62 + 8 * a3);
              if (!v19) {
                break;
              }
            }
          }
        }
      }
LABEL_36:
      unint64_t v15 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (a3 << 6);
LABEL_37:
      uint64_t v21 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v17);
      uint64_t v9 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v23 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v23) {
        goto LABEL_113;
      }
      swift_bridgeObjectRetain();
      sub_21F10E9C8(v9, v22);
      if ((v24 & 1) == 0) {
        goto LABEL_112;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)v66;
      if (!*(void *)(*(void *)v66 + 16))
      {
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return a3;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_21F10E9C8(v9, v22);
      if ((v27 & 1) == 0) {
        goto LABEL_114;
      }
      uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 168 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(void *)(a2 + 16)) {
        goto LABEL_94;
      }
      swift_bridgeObjectRetain();
      uint64_t v29 = v9;
      uint64_t v9 = a2;
      unint64_t v30 = sub_21F10E9C8(v29, v22);
      if ((v31 & 1) == 0) {
        goto LABEL_115;
      }
      uint64_t v9 = *(void *)(*(void *)(a2 + 56) + 8 * v30);
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(v68 + 80);
      uint64_t v33 = v9 * v32;
      if ((unsigned __int128)(v9 * (__int128)v32) >> 64 != (v9 * v32) >> 63) {
        goto LABEL_95;
      }
      if (v33 < (uint64_t)0xFFFFFFFF80000000 || v33 >= 0x80000000) {
        goto LABEL_122;
      }
      if ((unsigned __int128)(v9 * (__int128)v5) >> 64 != (v9 * v5) >> 63) {
        goto LABEL_96;
      }
      if ((unsigned __int128)(v9 * v5 * (__int128)v32) >> 64 != (v9 * v5 * v32) >> 63) {
        goto LABEL_97;
      }
      if (!v28) {
        goto LABEL_116;
      }
      cblas_scopy_NEWLAPACK();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_18;
      }
    }
    int64_t v20 = v18 + 5;
    if (v20 < v63)
    {
      unint64_t v19 = *(void *)(v62 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          a3 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_107;
          }
          if (a3 >= v63) {
            goto LABEL_51;
          }
          unint64_t v19 = *(void *)(v62 + 8 * a3);
          ++v20;
          if (v19) {
            goto LABEL_36;
          }
        }
      }
      a3 = v20;
      goto LABEL_36;
    }
LABEL_51:
    swift_release();
    uint64_t v3 = v68;
    if (espresso_plan_execute_sync()) {
      goto LABEL_99;
    }
    uint64_t v9 = sub_21F12B198();
    a3 = (uint64_t)v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a3 = (uint64_t)sub_21F103DC4(0, v61[2] + 1, 1, v61);
    }
    unint64_t v35 = *(void *)(a3 + 16);
    unint64_t v34 = *(void *)(a3 + 24);
    if (v35 >= v34 >> 1) {
      a3 = (uint64_t)sub_21F103DC4((void *)(v34 > 1), v35 + 1, 1, (void *)a3);
    }
    *(void *)(a3 + 16) = v35 + 1;
    *(void *)(a3 + 8 * v35 + 32) = v9;
    uint64_t v13 = v59;
    uint64_t v5 = v60;
    if (v60 != v59) {
      continue;
    }
    break;
  }
LABEL_59:
  uint64_t v36 = v56 - v13 * v58;
  if (v36 < 1) {
    return a3;
  }
  uint64_t v61 = (void *)a3;
  a3 = *(void *)(v3 + 80);
  sub_21F12E63C(v56 - v13 * v58);
  uint64_t v9 = v57;
  if (v57) {
    goto LABEL_61;
  }
  if (*(unsigned char *)(v3 + 136) != 1)
  {
LABEL_66:
    uint64_t v5 = 0;
    uint64_t v64 = a1 + 64;
    uint64_t v38 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v39 = -1;
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    unint64_t v40 = v39 & *(void *)(a1 + 64);
    int64_t v67 = (unint64_t)(v38 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v41 = 0;
    if (!v40) {
      goto LABEL_70;
    }
LABEL_69:
    unint64_t v42 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    for (unint64_t i = v42 | (v41 << 6); ; unint64_t i = __clz(__rbit64(v45)) + (v41 << 6))
    {
      uint64_t v47 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
      uint64_t v48 = *v47;
      uint64_t v9 = v47[1];
      uint64_t v49 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v49) {
        goto LABEL_120;
      }
      swift_bridgeObjectRetain();
      unint64_t v50 = sub_21F10E9C8(v48, v9);
      if ((v51 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      uint64_t v52 = *(void *)(*(void *)(a1 + 56) + 8 * v50);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_21F12BFC0(v52 + 32, *(void *)(v52 + 16), v68, v48, v9, a2, v36, v59, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40) {
        goto LABEL_69;
      }
LABEL_70:
      if (__OFADD__(v41++, 1)) {
        goto LABEL_110;
      }
      if (v41 >= v67) {
        break;
      }
      unint64_t v45 = *(void *)(v64 + 8 * v41);
      if (!v45)
      {
        int64_t v46 = v41 + 1;
        if (v41 + 1 >= v67) {
          break;
        }
        unint64_t v45 = *(void *)(v64 + 8 * v46);
        if (!v45)
        {
          int64_t v46 = v41 + 2;
          if (v41 + 2 >= v67) {
            break;
          }
          unint64_t v45 = *(void *)(v64 + 8 * v46);
          if (!v45)
          {
            int64_t v46 = v41 + 3;
            if (v41 + 3 >= v67) {
              break;
            }
            unint64_t v45 = *(void *)(v64 + 8 * v46);
            if (!v45)
            {
              int64_t v46 = v41 + 4;
              if (v41 + 4 >= v67) {
                break;
              }
              unint64_t v45 = *(void *)(v64 + 8 * v46);
              if (!v45)
              {
                int64_t v46 = v41 + 5;
                if (v41 + 5 >= v67) {
                  break;
                }
                unint64_t v45 = *(void *)(v64 + 8 * v46);
                if (!v45)
                {
                  while (1)
                  {
                    int64_t v41 = v46 + 1;
                    if (__OFADD__(v46, 1)) {
                      goto LABEL_117;
                    }
                    if (v41 >= v67) {
                      goto LABEL_98;
                    }
                    unint64_t v45 = *(void *)(v64 + 8 * v41);
                    ++v46;
                    if (v45) {
                      goto LABEL_84;
                    }
                  }
                }
              }
            }
          }
        }
        int64_t v41 = v46;
      }
LABEL_84:
      unint64_t v40 = (v45 - 1) & v45;
    }
LABEL_98:
    swift_release();
    if (!espresso_plan_execute_sync()) {
      goto LABEL_101;
    }
LABEL_99:
    swift_bridgeObjectRelease();
    swift_allocError();
    *uint64_t v53 = 20;
    goto LABEL_2;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v37 = *(_DWORD **)(v68 + 144);
  if (v37)
  {
    _DWORD *v37 = 0;
    goto LABEL_66;
  }
LABEL_123:
  __break(1u);
  return result;
}

uint64_t sub_21F12BFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a1)
  {
    sub_21F106A1C();
    swift_allocError();
    *char v24 = 0;
    return swift_willThrow();
  }
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 96);
  if (!*(void *)(v15 + 16))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_21F10E9C8(a4, a5);
  if ((v17 & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 168 * v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(a6 + 16)) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_21F10E9C8(a4, a5);
  if (v20)
  {
    uint64_t v21 = *(void *)(*(void *)(a6 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 * a7;
    if ((unsigned __int128)(v21 * (__int128)a7) >> 64 == (v21 * a7) >> 63)
    {
      if (v22 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v22 >= 0x80000000) {
        goto LABEL_22;
      }
      if ((unsigned __int128)(v21 * (__int128)a8) >> 64 == (v21 * a8) >> 63)
      {
        if ((unsigned __int128)(v21 * a8 * (__int128)a9) >> 64 == (v21 * a8 * a9) >> 63)
        {
          if (v18) {
            return cblas_scopy_NEWLAPACK();
          }
          goto LABEL_21;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_21F157400();
  __break(1u);
  return result;
}

uint64_t sub_21F12C210()
{
  swift_beginAccess();
  if (espresso_network_set_function_name())
  {
    char v0 = 13;
  }
  else if (espresso_plan_execute_sync())
  {
    char v0 = 12;
  }
  else
  {
    get_main_function_name();
    uint64_t result = espresso_network_set_function_name();
    if (!result) {
      return result;
    }
    char v0 = 14;
  }
  sub_21F128018();
  swift_allocError();
  char *v2 = v0;
  return swift_willThrow();
}

uint64_t sub_21F12C2DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v36 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 480) + 16));
  uint64_t v3 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 480) + 16));
  uint64_t v4 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 480) + 16));
  uint64_t v5 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 480) + 16));
  uint64_t v6 = sub_21F11F500(0, *(void *)(*(void *)(v1 + 480) + 16));
  uint64_t result = sub_21F11F500(0, *(void *)(*(void *)(v1 + 480) + 16));
  uint64_t v8 = *(void *)(v1 + 480);
  uint64_t v31 = *(void *)(v8 + 16);
  if (v31)
  {
    uint64_t v34 = v6;
    uint64_t v35 = result;
    uint64_t v29 = a1;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v9 = 0;
    uint64_t v10 = v8 + 40;
    uint64_t v30 = v1;
    while (1)
    {
      uint64_t v32 = v5;
      uint64_t v33 = v4;
      swift_bridgeObjectRetain();
      sub_21F120EE8();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      unint64_t v16 = v15;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(v1 + 80);
      if ((v16 & 1) == 0 || (uint64_t result = swift_isUniquelyReferenced_nonNull(), (result & 1) == 0))
      {
        sub_21F12E9D8((uint64_t)v12, v14, v16);
        uint64_t v12 = v18;
        uint64_t v14 = v19;
        unint64_t v16 = v20;
        uint64_t result = swift_unknownObjectRelease();
      }
      if (v16 < 2 || v14 > 0) {
        break;
      }
      *uint64_t v12 = v17;
      uint64_t result = sub_21F12806C((uint64_t)v12, v14, v16, v37);
      int v22 = v37[0];
      if (v37[0] < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_46;
      }
      if (v37[0] > 0x7FFFFFFF) {
        goto LABEL_47;
      }
      uint64_t v23 = v37[1];
      uint64_t v24 = v37[2];
      uint64_t v26 = v37[3];
      uint64_t v25 = v37[4];
      uint64_t v27 = v37[5];
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t result = v36;
      }
      else {
        uint64_t result = (uint64_t)sub_21F127424(v36);
      }
      if (v9 >= *(void *)(result + 16)) {
        goto LABEL_48;
      }
      *(_DWORD *)(result + 4 * v9 + 32) = v22;
      if (v23 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_49;
      }
      if (v23 > 0x7FFFFFFF) {
        goto LABEL_50;
      }
      uint64_t v36 = result;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v3);
        uint64_t v3 = result;
      }
      if (v9 >= *(void *)(v3 + 16)) {
        goto LABEL_51;
      }
      *(_DWORD *)(v3 + 4 * v9 + 32) = v23;
      if (v24 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_52;
      }
      if (v24 > 0x7FFFFFFF) {
        goto LABEL_53;
      }
      uint64_t v4 = v33;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v33);
        uint64_t v4 = result;
      }
      uint64_t v1 = v30;
      if (v9 >= *(void *)(v4 + 16)) {
        goto LABEL_54;
      }
      *(_DWORD *)(v4 + 4 * v9 + 32) = v24;
      if (v26 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_55;
      }
      if (v26 > 0x7FFFFFFF) {
        goto LABEL_56;
      }
      uint64_t v5 = v32;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_21F127424(v32);
        uint64_t v5 = result;
      }
      if (v9 >= *(void *)(v5 + 16)) {
        goto LABEL_57;
      }
      *(_DWORD *)(v5 + 4 * v9 + 32) = v26;
      if (v25 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_58;
      }
      if (v25 > 0x7FFFFFFF) {
        goto LABEL_59;
      }
      uint64_t v28 = (char *)v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v28 = sub_21F127424(v34);
      }
      uint64_t result = v35;
      if (v9 >= *((void *)v28 + 2)) {
        goto LABEL_60;
      }
      *(_DWORD *)&v28[4 * v9 + 32] = v25;
      if (v27 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_61;
      }
      if (v27 > 0x7FFFFFFF) {
        goto LABEL_62;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t result = v35;
      }
      else {
        uint64_t result = (uint64_t)sub_21F127424(v35);
      }
      if (v9 >= *(void *)(result + 16)) {
        goto LABEL_63;
      }
      uint64_t v34 = (uint64_t)v28;
      uint64_t v35 = result;
      v10 += 16;
      *(_DWORD *)(result + 4 * v9 + 32) = v27;
      swift_unknownObjectRelease();
      if (v31 == ++v9)
      {
        swift_bridgeObjectRelease();
        a1 = v29;
        uint64_t v6 = (uint64_t)v28;
        uint64_t result = v35;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
LABEL_45:
    *a1 = v36;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    a1[4] = v6;
    a1[5] = result;
  }
  return result;
}

void sub_21F12C6F0()
{
  uint64_t v1 = v0;
  uint64_t v117 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v92 = v1;
  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v89 = (uint64_t *)(v1 + 96);
    uint64_t v4 = (uint64_t *)(v2 + 40);
    for (uint64_t i = v3 - 1; ; --i)
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v94 = v4;
      uint64_t v7 = *(unsigned int *)(v1 + 32);
      sub_21F156D20();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v112 = *(void *)(v1 + 96);
      uint64_t v9 = v112;
      *(void *)(v1 + 96) = 0x8000000000000000;
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_21F10E9C8(v5, v6);
      uint64_t v12 = *(void *)(v9 + 16);
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
      }
      char v15 = v10;
      if (*(void *)(v9 + 24) >= v14)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v10 & 1) == 0) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_21F126898();
          if ((v15 & 1) == 0) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        sub_21F125E84(v14, isUniquelyReferenced_nonNull_native);
        unint64_t v16 = sub_21F10E9C8(v5, v6);
        if ((v15 & 1) != (v17 & 1))
        {
LABEL_67:
          sub_21F157680();
          __break(1u);
          return;
        }
        unint64_t v11 = v16;
        if ((v15 & 1) == 0)
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          sub_21F128018();
          swift_allocError();
          char v31 = 4;
          goto LABEL_43;
        }
      }
      uint64_t v18 = v112;
      memmove(__dst, (const void *)(*(void *)(v112 + 56) + 168 * v11), 0xA8uLL);
      sub_21F12884C((uint64_t)__dst);
      sub_21F128854((uint64_t)__dst, (uint64_t)v113);
      unint64_t v19 = v93 & 0xFFFFFFFF00000000 | v7;
      int v20 = espresso_network_bind_buffer();
      sub_21F128854((uint64_t)v113, (uint64_t)v115);
      sub_21F128854((uint64_t)v115, (uint64_t)v116);
      if (sub_21F1288BC((uint64_t)v116) == 1)
      {
        swift_arrayDestroy();
        sub_21F127024(v11, v18);
      }
      else
      {
        sub_21F128854((uint64_t)v115, (uint64_t)&v100);
        uint64_t v21 = *(void *)(v18 + 56) + 168 * v11;
        long long v22 = v107;
        long long v23 = v108;
        long long v24 = v109;
        *(void *)(v21 + 160) = v110;
        *(_OWORD *)(v21 + 128) = v23;
        *(_OWORD *)(v21 + 144) = v24;
        *(_OWORD *)(v21 + 112) = v22;
        long long v25 = v103;
        long long v26 = v104;
        long long v27 = v106;
        *(_OWORD *)(v21 + 80) = v105;
        *(_OWORD *)(v21 + 96) = v27;
        *(_OWORD *)(v21 + 48) = v25;
        *(_OWORD *)(v21 + 64) = v26;
        long long v29 = v101;
        long long v28 = v102;
        *(_OWORD *)uint64_t v21 = v100;
        *(_OWORD *)(v21 + 16) = v29;
        *(_OWORD *)(v21 + 32) = v28;
      }
      swift_bridgeObjectRelease();
      uint64_t v1 = v92;
      *uint64_t v89 = v18;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_18;
      }
      if (!i) {
        break;
      }
      unint64_t v93 = v19;
      uint64_t v4 = v94 + 2;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = *(void *)(v1 + 488);
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    vDSP_Length v90 = (uint64_t *)(v1 + 112);
    uint64_t v34 = (uint64_t *)(v32 + 40);
    for (uint64_t j = v33 - 1; ; --j)
    {
      uint64_t v35 = *(v34 - 1);
      uint64_t v36 = *v34;
      uint64_t v95 = v34;
      uint64_t v37 = *(unsigned int *)(v1 + 32);
      sub_21F156D20();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v38 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v111 = *(void *)(v1 + 112);
      uint64_t v39 = v111;
      *(void *)(v1 + 112) = 0x8000000000000000;
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_21F10E9C8(v35, v36);
      uint64_t v42 = *(void *)(v39 + 16);
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43)) {
        goto LABEL_65;
      }
      char v45 = v40;
      if (*(void *)(v39 + 24) >= v44)
      {
        if (v38)
        {
          if ((v40 & 1) == 0) {
            goto LABEL_36;
          }
        }
        else
        {
          sub_21F126898();
          if ((v45 & 1) == 0) {
            goto LABEL_36;
          }
        }
      }
      else
      {
        sub_21F125E84(v44, v38);
        unint64_t v46 = sub_21F10E9C8(v35, v36);
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_67;
        }
        unint64_t v41 = v46;
        if ((v45 & 1) == 0)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRelease();
          sub_21F128018();
          swift_allocError();
          char v31 = 5;
          goto LABEL_43;
        }
      }
      uint64_t v48 = v111;
      memmove(__dst, (const void *)(*(void *)(v111 + 56) + 168 * v41), 0xA8uLL);
      sub_21F12884C((uint64_t)__dst);
      sub_21F128854((uint64_t)__dst, (uint64_t)v113);
      unint64_t v49 = v93 & 0xFFFFFFFF00000000 | v37;
      int v50 = espresso_network_bind_buffer();
      sub_21F128854((uint64_t)v113, (uint64_t)v115);
      sub_21F128854((uint64_t)v115, (uint64_t)v116);
      if (sub_21F1288BC((uint64_t)v116) == 1)
      {
        swift_arrayDestroy();
        sub_21F127024(v41, v48);
      }
      else
      {
        sub_21F128854((uint64_t)v115, (uint64_t)&v100);
        uint64_t v51 = *(void *)(v48 + 56) + 168 * v41;
        long long v52 = v107;
        long long v53 = v108;
        long long v54 = v109;
        *(void *)(v51 + 160) = v110;
        *(_OWORD *)(v51 + 128) = v53;
        *(_OWORD *)(v51 + 144) = v54;
        *(_OWORD *)(v51 + 112) = v52;
        long long v55 = v103;
        long long v56 = v104;
        long long v57 = v106;
        *(_OWORD *)(v51 + 80) = v105;
        *(_OWORD *)(v51 + 96) = v57;
        *(_OWORD *)(v51 + 48) = v55;
        *(_OWORD *)(v51 + 64) = v56;
        long long v59 = v101;
        long long v58 = v102;
        *(_OWORD *)uint64_t v51 = v100;
        *(_OWORD *)(v51 + 16) = v59;
        *(_OWORD *)(v51 + 32) = v58;
      }
      swift_bridgeObjectRelease();
      uint64_t v1 = v92;
      *vDSP_Length v90 = v48;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      if (v50) {
        goto LABEL_37;
      }
      if (!j) {
        break;
      }
      unint64_t v93 = v49;
      uint64_t v34 = v95 + 2;
    }
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v1 + 136) == 1)
  {
    swift_beginAccess();
    swift_beginAccess();
    int v60 = espresso_network_bind_buffer_to_global();
    swift_endAccess();
    if (v60 || (swift_beginAccess(), int v61 = espresso_network_bind_buffer_to_global(), swift_endAccess(), v61))
    {
      sub_21F128018();
      swift_allocError();
      char v31 = 7;
      goto LABEL_43;
    }
    uint64_t v62 = *(void *)(v1 + 496);
    uint64_t v63 = *(void *)(v62 + 16);
    if (v63)
    {
      uint64_t v64 = (uint64_t *)(v62 + 40);
      swift_bridgeObjectRetain();
      uint64_t v99 = v63 - 1;
      unsigned int v91 = (void *)(v1 + 128);
      while (1)
      {
        uint64_t v65 = *(v64 - 1);
        uint64_t v66 = *v64;
        uint64_t v96 = v64;
        uint64_t v67 = *(unsigned int *)(v1 + 32);
        sub_21F156D20();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        char v68 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v69 = *(void **)(v1 + 128);
        *(void *)(v1 + 128) = 0x8000000000000000;
        swift_bridgeObjectRetain();
        unint64_t v71 = sub_21F10E9C8(v65, v66);
        uint64_t v72 = v69[2];
        BOOL v73 = (v70 & 1) == 0;
        uint64_t v74 = v72 + v73;
        if (__OFADD__(v72, v73)) {
          goto LABEL_66;
        }
        char v75 = v70;
        if (v69[3] >= v74)
        {
          if (v68)
          {
            if ((v70 & 1) == 0) {
              goto LABEL_60;
            }
          }
          else
          {
            sub_21F126898();
            if ((v75 & 1) == 0) {
              goto LABEL_60;
            }
          }
        }
        else
        {
          sub_21F125E84(v74, v68);
          unint64_t v76 = sub_21F10E9C8(v65, v66);
          if ((v75 & 1) != (v77 & 1)) {
            goto LABEL_67;
          }
          unint64_t v71 = v76;
          if ((v75 & 1) == 0)
          {
LABEL_60:
            __break(1u);
LABEL_61:
            swift_bridgeObjectRelease();
            sub_21F128018();
            swift_allocError();
            char v31 = 6;
LABEL_43:
            char *v30 = v31;
            swift_willThrow();
            return;
          }
        }
        memmove(__dst, (const void *)(v69[7] + 168 * v71), 0xA8uLL);
        sub_21F12884C((uint64_t)__dst);
        sub_21F128854((uint64_t)__dst, (uint64_t)v113);
        unint64_t v78 = v93 & 0xFFFFFFFF00000000 | v67;
        int v79 = espresso_network_bind_buffer_to_global();
        sub_21F128854((uint64_t)v113, (uint64_t)v115);
        sub_21F128854((uint64_t)v115, (uint64_t)v116);
        if (sub_21F1288BC((uint64_t)v116) == 1)
        {
          swift_arrayDestroy();
          sub_21F127024(v71, (uint64_t)v69);
        }
        else
        {
          sub_21F128854((uint64_t)v115, (uint64_t)&v100);
          uint64_t v80 = v69[7] + 168 * v71;
          long long v81 = v107;
          long long v82 = v108;
          long long v83 = v109;
          *(void *)(v80 + 160) = v110;
          *(_OWORD *)(v80 + 128) = v82;
          *(_OWORD *)(v80 + 144) = v83;
          *(_OWORD *)(v80 + 112) = v81;
          long long v84 = v103;
          long long v85 = v104;
          long long v86 = v106;
          *(_OWORD *)(v80 + 80) = v105;
          *(_OWORD *)(v80 + 96) = v86;
          *(_OWORD *)(v80 + 48) = v84;
          *(_OWORD *)(v80 + 64) = v85;
          long long v88 = v101;
          long long v87 = v102;
          *(_OWORD *)uint64_t v80 = v100;
          *(_OWORD *)(v80 + 16) = v88;
          *(_OWORD *)(v80 + 32) = v87;
        }
        swift_bridgeObjectRelease();
        uint64_t v1 = v92;
        *unsigned int v91 = v69;
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
        if (v79) {
          goto LABEL_61;
        }
        if (!v99)
        {
          swift_bridgeObjectRelease();
          return;
        }
        unint64_t v93 = v78;
        uint64_t v64 = v96 + 2;
        --v99;
      }
    }
  }
}

uint64_t sub_21F12D08C(uint64_t result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v75 = *MEMORY[0x263EF8340];
  uint64_t v61 = *(void *)(result + 16);
  if (!v61) {
    return result;
  }
  uint64_t v4 = v3;
  int v74 = 0;
  uint64_t v60 = result + 32;
  memset(v73, 0, sizeof(v73));
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v5 = 0;
  for (i = v3; ; uint64_t v4 = i)
  {
    uint64_t v62 = v5;
    uint64_t v6 = (uint64_t *)(v60 + 16 * v5);
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *a2;
    *a2 = 0x8000000000000000;
    sub_21F10F2FC((uint64_t)v73, v7, v8, isUniquelyReferenced_nonNull_native);
    *a2 = v72[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(unsigned int *)(v4 + 32);
    uint64_t v11 = sub_21F156F40();
    *(_OWORD *)(v11 + 32) = 0u;
    uint64_t v12 = (char *)(v11 + 32);
    *(void *)(v11 + 16) = 10;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_OWORD *)(v11 + 80) = 0u;
    *(_OWORD *)(v11 + 96) = 0u;
    v72[0] = 0;
    sub_21F156D20();
    unint64_t v13 = v63 & 0xFFFFFFFF00000000 | v10;
    espresso_network_query_blob_shape();
    swift_release();
    if (v72[0] < 0) {
      goto LABEL_51;
    }
    if (*(void *)(v11 + 16) < v72[0]) {
      goto LABEL_52;
    }
    if (v72[0])
    {
      uint64_t v14 = (uint64_t *)(v11 + 32);
      uint64_t v15 = v72[0];
      uint64_t v16 = 1;
      while (1)
      {
        uint64_t v17 = *v14++;
        unint64_t v18 = v16 * v17;
        if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63) {
          break;
        }
        uint64_t v16 = v18;
        if (!--v15) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
    }
    unint64_t v18 = 1;
LABEL_11:
    uint64_t v65 = v72[0];
    unint64_t v63 = v13;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_21F11F40C(v18, 0);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_21F10F1BC(v19, v7, v8, v20);
    *a3 = v72[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    v72[0] = *a3;
    uint64_t v22 = v72[0];
    *a3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_21F10E9C8(v7, v8);
    uint64_t v25 = *(void *)(v22 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      goto LABEL_53;
    }
    char v28 = v23;
    if (*(void *)(v22 + 24) >= v27)
    {
      if (v21)
      {
        if ((v23 & 1) == 0) {
          goto LABEL_54;
        }
      }
      else
      {
        sub_21F126ABC();
        if ((v28 & 1) == 0) {
          goto LABEL_54;
        }
      }
    }
    else
    {
      sub_21F1261E8(v27, v21);
      unint64_t v29 = sub_21F10E9C8(v7, v8);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_57;
      }
      unint64_t v24 = v29;
      if ((v28 & 1) == 0) {
        goto LABEL_54;
      }
    }
    uint64_t v31 = *(void *)(*(void *)(v72[0] + 56) + 8 * v24);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v31 = sub_21F127410(v31);
    }
    unint64_t v32 = *(void *)(v31 + 16);
    if (v32 >> 61) {
      goto LABEL_55;
    }
    sub_21F120FF4(v31 + 32, v31 + 32 + 4 * v32, a2, v7, v8);
    v71[0] = v31;
    sub_21F127E20(v71, 1, v72, v24, v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a3 = v72[0];
    swift_bridgeObjectRelease();
    sub_21F157650();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v33 = swift_dynamicCastClass();
    if (!v33)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x263F8EE78];
    }
    uint64_t v34 = *(void *)(v33 + 16);
    swift_release();
    if (v34 == v65)
    {
      if (!swift_dynamicCastClass()) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v65)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
        uint64_t v54 = 8 * v65;
        long long v55 = (char *)swift_allocObject();
        int64_t v56 = _swift_stdlib_malloc_size(v55);
        uint64_t v57 = v56 - 32;
        if (v56 < 32) {
          uint64_t v57 = v56 - 25;
        }
        *((void *)v55 + 2) = v65;
        *((void *)v55 + 3) = 2 * (v57 >> 3);
        long long v58 = v55 + 32;
        if (v12 < &v55[v54 + 32] && v58 < &v12[v54]) {
          goto LABEL_58;
        }
        memcpy(v58, v12, 8 * v65);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = (void *)*a2;
    *a2 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v38 = sub_21F10E9C8(v7, v8);
    uint64_t v39 = v36[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      goto LABEL_56;
    }
    char v42 = v37;
    if (v36[3] < v41) {
      break;
    }
    if (v35)
    {
      if ((v37 & 1) == 0) {
        goto LABEL_47;
      }
    }
    else
    {
      sub_21F126898();
      if ((v42 & 1) == 0)
      {
LABEL_47:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_33:
    memmove(__dst, (const void *)(v36[7] + 168 * v38), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v69);
    espresso_buffer_pack_tensor_shape();
    sub_21F128854((uint64_t)v69, (uint64_t)v71);
    sub_21F128854((uint64_t)v71, (uint64_t)v72);
    if (sub_21F1288BC((uint64_t)v72) == 1)
    {
      swift_arrayDestroy();
      sub_21F127024(v38, (uint64_t)v36);
    }
    else
    {
      sub_21F128854((uint64_t)v71, (uint64_t)v67);
      uint64_t v45 = v36[7] + 168 * v38;
      long long v46 = v67[2];
      long long v47 = v67[1];
      *(_OWORD *)uint64_t v45 = v67[0];
      *(_OWORD *)(v45 + 16) = v47;
      *(_OWORD *)(v45 + 32) = v46;
      long long v48 = v67[6];
      long long v49 = v67[4];
      long long v50 = v67[3];
      *(_OWORD *)(v45 + 80) = v67[5];
      *(_OWORD *)(v45 + 96) = v48;
      *(_OWORD *)(v45 + 48) = v50;
      *(_OWORD *)(v45 + 64) = v49;
      long long v51 = v67[9];
      long long v52 = v67[8];
      long long v53 = v67[7];
      *(void *)(v45 + 160) = v68;
      *(_OWORD *)(v45 + 128) = v52;
      *(_OWORD *)(v45 + 144) = v51;
      *(_OWORD *)(v45 + 112) = v53;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v62 + 1;
    *a2 = (uint64_t)v36;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v62 + 1 == v61) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_21F125E84(v41, v35);
  unint64_t v43 = sub_21F10E9C8(v7, v8);
  if ((v42 & 1) == (v44 & 1))
  {
    unint64_t v38 = v43;
    if ((v42 & 1) == 0) {
      goto LABEL_47;
    }
    goto LABEL_33;
  }
LABEL_57:
  sub_21F157680();
  __break(1u);
LABEL_58:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F12D7AC(uint64_t result, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    return result;
  }
  uint64_t v6 = result;
  int v57 = 0;
  memset(v56, 0, sizeof(v56));
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v45 = v3;
  uint64_t v7 = (uint64_t *)(v6 + 40);
  for (uint64_t i = v4 - 1; ; uint64_t i = v29 - 1)
  {
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    long long v46 = v7;
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55[0] = *a2;
    *a2 = 0x8000000000000000;
    sub_21F10F2FC((uint64_t)v56, v9, v10, isUniquelyReferenced_nonNull_native);
    *a2 = v55[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(unsigned int *)(v3 + 32);
    uint64_t v13 = sub_21F156F40();
    *(_OWORD *)(v13 + 32) = 0u;
    uint64_t v14 = (char *)(v13 + 32);
    *(void *)(v13 + 16) = 10;
    *(_OWORD *)(v13 + 48) = 0u;
    *(_OWORD *)(v13 + 64) = 0u;
    *(_OWORD *)(v13 + 80) = 0u;
    *(_OWORD *)(v13 + 96) = 0u;
    v55[0] = 0;
    sub_21F156D20();
    unint64_t v15 = v48 & 0xFFFFFFFF00000000 | v12;
    espresso_network_query_blob_shape();
    swift_release();
    uint64_t v16 = v55[0];
    if ((v55[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    if (*(void *)(v13 + 16) < v55[0]) {
      goto LABEL_33;
    }
    unint64_t v48 = v15;
    sub_21F157650();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v17 = swift_dynamicCastClass();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    uint64_t v18 = *(void *)(v17 + 16);
    swift_release();
    uint64_t v47 = i;
    if (v18 == v16)
    {
      if (!swift_dynamicCastClass()) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v16)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
        uint64_t v40 = 8 * v16;
        uint64_t v41 = (char *)swift_allocObject();
        int64_t v42 = _swift_stdlib_malloc_size(v41);
        uint64_t v43 = v42 - 32;
        if (v42 < 32) {
          uint64_t v43 = v42 - 25;
        }
        *((void *)v41 + 2) = v16;
        *((void *)v41 + 3) = 2 * (v43 >> 3);
        char v44 = v41 + 32;
        if (v14 < &v41[v40 + 32] && v44 < &v14[v40]) {
          goto LABEL_36;
        }
        memcpy(v44, v14, 8 * v16);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *a2;
    uint64_t v49 = *a2;
    *a2 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_21F10E9C8(v9, v10);
    uint64_t v23 = *(void *)(v20 + 16);
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      goto LABEL_34;
    }
    char v26 = v21;
    if (*(void *)(v20 + 24) < v25) {
      break;
    }
    if (v19)
    {
      uint64_t v29 = v47;
      if ((v21 & 1) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_21F126898();
      uint64_t v29 = v47;
      if ((v26 & 1) == 0)
      {
LABEL_29:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_17:
    memmove(__dst, (const void *)(*(void *)(v49 + 56) + 168 * v22), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v52);
    espresso_buffer_pack_tensor_shape();
    sub_21F128854((uint64_t)v52, (uint64_t)v54);
    sub_21F128854((uint64_t)v54, (uint64_t)v55);
    if (sub_21F1288BC((uint64_t)v55) == 1)
    {
      uint64_t v30 = v49;
      swift_arrayDestroy();
      sub_21F127024(v22, v49);
    }
    else
    {
      sub_21F128854((uint64_t)v54, (uint64_t)v50);
      uint64_t v30 = v49;
      uint64_t v31 = *(void *)(v49 + 56) + 168 * v22;
      long long v32 = v50[2];
      long long v33 = v50[1];
      *(_OWORD *)uint64_t v31 = v50[0];
      *(_OWORD *)(v31 + 16) = v33;
      *(_OWORD *)(v31 + 32) = v32;
      long long v34 = v50[6];
      long long v35 = v50[4];
      long long v36 = v50[3];
      *(_OWORD *)(v31 + 80) = v50[5];
      *(_OWORD *)(v31 + 96) = v34;
      *(_OWORD *)(v31 + 48) = v36;
      *(_OWORD *)(v31 + 64) = v35;
      long long v37 = v50[8];
      long long v38 = v50[9];
      long long v39 = v50[7];
      *(void *)(v31 + 160) = v51;
      *(_OWORD *)(v31 + 128) = v37;
      *(_OWORD *)(v31 + 144) = v38;
      *(_OWORD *)(v31 + 112) = v39;
    }
    swift_bridgeObjectRelease();
    *a2 = v30;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!v29) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v3 = v45;
    uint64_t v7 = v46 + 2;
  }
  sub_21F125E84(v25, v19);
  unint64_t v27 = sub_21F10E9C8(v9, v10);
  if ((v26 & 1) == (v28 & 1))
  {
    unint64_t v22 = v27;
    uint64_t v29 = v47;
    if ((v26 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_17;
  }
  sub_21F157680();
  __break(1u);
LABEL_36:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F12DCB0(uint64_t result, uint64_t *a2)
{
  v52[25] = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return result;
  }
  uint64_t v5 = result;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v42 = v2;
  uint64_t v6 = (uint64_t *)(v5 + 40);
  for (uint64_t i = v3 - 1; ; --i)
  {
    uint64_t v7 = *(v6 - 1);
    uint64_t v8 = *v6;
    uint64_t v9 = *(unsigned int *)(v2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21F156F40();
    *(_OWORD *)(v10 + 32) = 0u;
    uint64_t v11 = (char *)(v10 + 32);
    *(void *)(v10 + 16) = 10;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(_OWORD *)(v10 + 80) = 0u;
    *(_OWORD *)(v10 + 96) = 0u;
    v52[0] = 0;
    sub_21F156D20();
    unint64_t v12 = v45 & 0xFFFFFFFF00000000 | v9;
    espresso_network_query_blob_shape();
    swift_release();
    uint64_t v13 = v52[0];
    if ((v52[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    if (*(void *)(v10 + 16) < v52[0]) {
      goto LABEL_33;
    }
    sub_21F157650();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v14 = swift_dynamicCastClass();
    if (!v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = MEMORY[0x263F8EE78];
    }
    uint64_t v15 = *(void *)(v14 + 16);
    swift_release();
    uint64_t v43 = v6;
    unint64_t v45 = v12;
    if (v15 == v13)
    {
      if (!swift_dynamicCastClass()) {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v13)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
        uint64_t v37 = 8 * v13;
        long long v38 = (char *)swift_allocObject();
        int64_t v39 = _swift_stdlib_malloc_size(v38);
        uint64_t v40 = v39 - 32;
        if (v39 < 32) {
          uint64_t v40 = v39 - 25;
        }
        *((void *)v38 + 2) = v13;
        *((void *)v38 + 3) = 2 * (v40 >> 3);
        uint64_t v41 = v38 + 32;
        if (v11 < &v38[v37 + 32] && v41 < &v11[v37]) {
          goto LABEL_36;
        }
        memcpy(v41, v11, 8 * v13);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *a2;
    uint64_t v46 = *a2;
    uint64_t v18 = a2;
    *a2 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_21F10E9C8(v7, v8);
    uint64_t v21 = *(void *)(v17 + 16);
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      goto LABEL_34;
    }
    char v24 = v19;
    if (*(void *)(v17 + 24) < v23) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v19 & 1) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_21F126898();
      if ((v24 & 1) == 0)
      {
LABEL_29:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_17:
    memmove(__dst, (const void *)(*(void *)(v46 + 56) + 168 * v20), 0xA8uLL);
    sub_21F12884C((uint64_t)__dst);
    sub_21F128854((uint64_t)__dst, (uint64_t)v49);
    espresso_buffer_pack_tensor_shape();
    sub_21F128854((uint64_t)v49, (uint64_t)v51);
    sub_21F128854((uint64_t)v51, (uint64_t)v52);
    if (sub_21F1288BC((uint64_t)v52) == 1)
    {
      uint64_t v27 = v46;
      swift_arrayDestroy();
      sub_21F127024(v20, v46);
    }
    else
    {
      sub_21F128854((uint64_t)v51, (uint64_t)v47);
      uint64_t v27 = v46;
      uint64_t v28 = *(void *)(v46 + 56) + 168 * v20;
      long long v29 = v47[2];
      long long v30 = v47[1];
      *(_OWORD *)uint64_t v28 = v47[0];
      *(_OWORD *)(v28 + 16) = v30;
      *(_OWORD *)(v28 + 32) = v29;
      long long v31 = v47[6];
      long long v32 = v47[4];
      long long v33 = v47[3];
      *(_OWORD *)(v28 + 80) = v47[5];
      *(_OWORD *)(v28 + 96) = v31;
      *(_OWORD *)(v28 + 48) = v33;
      *(_OWORD *)(v28 + 64) = v32;
      long long v34 = v47[8];
      long long v35 = v47[9];
      long long v36 = v47[7];
      *(void *)(v28 + 160) = v48;
      *(_OWORD *)(v28 + 128) = v34;
      *(_OWORD *)(v28 + 144) = v35;
      *(_OWORD *)(v28 + 112) = v36;
    }
    swift_bridgeObjectRelease();
    a2 = v18;
    *uint64_t v18 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!i) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v2 = v42;
    uint64_t v6 = v43 + 2;
  }
  sub_21F125E84(v23, isUniquelyReferenced_nonNull_native);
  unint64_t v25 = sub_21F10E9C8(v7, v8);
  if ((v24 & 1) == (v26 & 1))
  {
    unint64_t v20 = v25;
    if ((v24 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_17;
  }
  sub_21F157680();
  __break(1u);
LABEL_36:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F12E13C(char **a1)
{
  if (*(void *)(*(void *)(v1 + 480) + 16) >> 60)
  {
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v3 = (char *)swift_slowAlloc();
  uint64_t v4 = *(void *)(v1 + 480);
  int64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v31 = v1;
  long long v32 = v3;
  if (v5)
  {
    long long v36 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21F132D0C(0, v5, 0);
    uint64_t v7 = (uint64_t *)(v4 + 40);
    while (1)
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      if ((*v7 & 0x1000000000000000) != 0 || !(v8 & 0x2000000000000000 | v9 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEBA0);
        sub_21F1572D0();
        unint64_t v12 = v35;
        if (!v35) {
          goto LABEL_54;
        }
        goto LABEL_12;
      }
      if ((v8 & 0x2000000000000000) != 0)
      {
        *(void *)__s1 = *(v7 - 1);
        uint64_t v34 = v8 & 0xFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        uint64_t v11 = __s1;
      }
      else
      {
        if ((v9 & 0x1000000000000000) != 0)
        {
          uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_9:
          swift_bridgeObjectRetain();
          uint64_t v11 = (char *)v10;
          goto LABEL_11;
        }
        uint64_t v10 = sub_21F157380();
        if (v10) {
          goto LABEL_9;
        }
        swift_bridgeObjectRetain();
        uint64_t v11 = 0;
      }
LABEL_11:
      long long v35 = strdup(v11);
      unint64_t v12 = v35;
      if (!v35) {
        goto LABEL_54;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F132D0C(0, v6[2] + 1, 1);
        uint64_t v6 = v36;
      }
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_21F132D0C(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v36;
      }
      v7 += 2;
      _OWORD v6[2] = v14 + 1;
      v6[v14 + 4] = v12;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v31;
        uint64_t v3 = v32;
        uint64_t v15 = *(void *)(*(void *)(v31 + 480) + 16);
        goto LABEL_23;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_23:
  if (v6 + 4 < (void *)&v3[8 * v15] && v3 < (char *)&v6[v15 + 4]) {
    goto LABEL_55;
  }
  memcpy(v3, v6 + 4, 8 * v15);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 480) + 16) >> 31)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    uint64_t result = sub_21F157460();
    __break(1u);
    return result;
  }
  uint64_t v17 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_21F103BA4(0, *((void *)v17 + 2), 0, v17);
  }
  *a1 = v17;
  uint64_t v18 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v18 = sub_21F103BA4(0, *((void *)v18 + 2), 0, v18);
  }
  a1[1] = v18;
  char v19 = a1[2];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v19 = sub_21F103BA4(0, *((void *)v19 + 2), 0, v19);
  }
  a1[2] = v19;
  unint64_t v20 = a1[3];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v20 = sub_21F103BA4(0, *((void *)v20 + 2), 0, v20);
  }
  a1[3] = v20;
  uint64_t v21 = a1[4];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v21 = sub_21F103BA4(0, *((void *)v21 + 2), 0, v21);
  }
  a1[4] = v21;
  BOOL v22 = a1[5];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    BOOL v22 = sub_21F103BA4(0, *((void *)v22 + 2), 0, v22);
  }
  a1[5] = v22;
  int v23 = espresso_network_change_input_blob_shapes_seq_rank();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23)
  {
    char v24 = 1;
LABEL_50:
    sub_21F128018();
    swift_allocError();
    char *v30 = v24;
    return swift_willThrow();
  }
  uint64_t v25 = *(void *)(*(void *)(v31 + 480) + 16);
  if (v25)
  {
    char v26 = (uint64_t *)v32;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v27 = v28;
      if (v28) {
        MEMORY[0x223C45170](v27, -1, -1);
      }
      --v25;
    }
    while (v25);
  }
  MEMORY[0x223C45170](v32, -1, -1);
  uint64_t result = espresso_plan_build();
  if (result)
  {
    char v24 = 9;
    goto LABEL_50;
  }
  return result;
}

uint64_t sub_21F12E63C(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  sub_21F12C2DC(v8);
  v9[0] = (char *)v8[0];
  v9[1] = (char *)v8[1];
  v9[2] = (char *)v8[2];
  v9[3] = (char *)v8[3];
  v9[4] = (char *)v8[4];
  v9[5] = (char *)v8[5];
  if (espresso_plan_build_clean())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F128018();
    swift_allocError();
    *uint64_t v3 = 22;
    return swift_willThrow();
  }
  else
  {
    sub_21F12E13C(v9);
    if (v2) {
      goto LABEL_7;
    }
    swift_beginAccess();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_21F12DCB0(v5, (uint64_t *)(v1 + 96));
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_21F12DCB0(v6, (uint64_t *)(v1 + 112));
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_21F12C6F0();
    if (*(unsigned char *)(v1 + 136) != 1)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v7 = *(_DWORD **)(v1 + 312);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v7 = *(_DWORD *)(v1 + 88);
        return sub_21F12C210();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_21F12E854@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for EspressoEIRTrainer();
  swift_allocObject();
  uint64_t v4 = sub_21F12EAD0(a1);
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_21F12E8AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F12A6D8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F12E8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *v4;
  uint64_t v8 = 1;
  uint64_t result = sub_21F12A6D8(a1, a2, &v8, a3, a4, MEMORY[0x263F8EE78]);
  if (!v5) {
    *(unsigned char *)(v6 + 136) = 0;
  }
  return result;
}

uint64_t sub_21F12E918(uint64_t a1, unint64_t a2)
{
  return sub_21F12AA30(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t sub_21F12E948(int32x2_t a1)
{
  return sub_21F12AC8C(a1);
}

uint64_t sub_21F12E96C()
{
  return sub_21F12B198();
}

uint64_t sub_21F12E990(uint64_t a1, uint64_t a2, int64_t a3, int a4, unsigned __int8 *a5)
{
  return sub_21F12EBDC(a1, a2, a3, a4, a5);
}

uint64_t sub_21F12E9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F12B6B4(a1, a2, a3);
}

uint64_t sub_21F12E9D8(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  uint64_t v4 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2)) {
    goto LABEL_13;
  }
  uint64_t v6 = result;
  if (!v4)
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    if (v3 >= a2) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE618);
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v7);
  uint64_t v8 = result - 32;
  if (result < 32) {
    uint64_t v8 = result - 25;
  }
  _OWORD v7[2] = v4;
  v7[3] = 2 * (v8 >> 3);
  if (v3 < a2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t result = (uint64_t)memcpy(v7 + 4, (const void *)(v6 + 8 * a2), 8 * v4);
  if (__OFSUB__(0, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v7[2];
  BOOL v10 = __OFADD__(a2, v9);
  uint64_t v11 = a2 + v9;
  if (v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v11 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((v11 & 0x8000000000000000) == 0) {
    return (uint64_t)v7;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_21F12EAD0(uint64_t a1)
{
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0xE000000000000000;
  *(void *)(v1 + 72) = 1;
  *(_DWORD *)(v1 + 88) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 96) = sub_21F0FC630(MEMORY[0x263F8EE78]);
  *(void *)(v1 + 104) = sub_21F0FC820(v3);
  *(void *)(v1 + 112) = sub_21F0FC630(v3);
  *(void *)(v1 + 120) = sub_21F0FC820(v3);
  *(void *)(v1 + 128) = sub_21F0FC630(v3);
  *(unsigned char *)(v1 + 136) = 1;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_DWORD *)(v1 + 304) = 0;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(_OWORD *)(v1 + 344) = 0u;
  *(_OWORD *)(v1 + 360) = 0u;
  *(_OWORD *)(v1 + 376) = 0u;
  *(_OWORD *)(v1 + 392) = 0u;
  *(_OWORD *)(v1 + 408) = 0u;
  *(_OWORD *)(v1 + 424) = 0u;
  *(_OWORD *)(v1 + 440) = 0u;
  *(_OWORD *)(v1 + 456) = 0u;
  *(_DWORD *)(v1 + 472) = 0;
  *(void *)(v1 + 480) = v3;
  *(void *)(v1 + 488) = v3;
  *(void *)(v1 + 496) = v3;
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  swift_retain();
  uint64_t result = espresso_create_context();
  if (result)
  {
    *(void *)(v1 + 40) = result;
    uint64_t result = espresso_create_plan();
    if (result)
    {
      *(void *)(v1 + 48) = result;
      *(void *)(v1 + 80) = -1;
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F12EBDC(uint64_t a1, uint64_t a2, int64_t a3, int a4, unsigned __int8 *a5)
{
  uint64_t v6 = v5;
  v103[13] = *MEMORY[0x263EF8340];
  int v89 = *a5;
  sub_21F128018();
  uint64_t v9 = (void *)swift_allocError();
  *BOOL v10 = 18;
  if ((*(unsigned char *)(v5 + 72) & 2) == 0) {
    return swift_willThrow();
  }

  swift_beginAccess();
  unint64_t v12 = *(_DWORD **)(v5 + 144);
  if (!v12)
  {
    __break(1u);
LABEL_151:
    swift_bridgeObjectRelease();
LABEL_152:
    __break(1u);
LABEL_153:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_154:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_155:
    uint64_t result = sub_21F157400();
    __break(1u);
    return result;
  }
  *unint64_t v12 = 1065353216;
  uint64_t v92 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t v96 = (uint64_t *)(v6 + 96);
  swift_beginAccess();
  swift_beginAccess();
  int64_t v16 = 0;
  int64_t v91 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v95 = a1;
  uint64_t v93 = a2;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      uint64_t v18 = (v15 - 1) & v15;
      unint64_t v19 = v17 | (v16 << 6);
      goto LABEL_27;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_134:
      swift_allocError();
      unsigned char *v84 = 15;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    if (v20 >= v91) {
      break;
    }
    unint64_t v21 = *(void *)(v92 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v91) {
        break;
      }
      unint64_t v21 = *(void *)(v92 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v91) {
          break;
        }
        unint64_t v21 = *(void *)(v92 + 8 * v16);
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v91) {
            break;
          }
          unint64_t v21 = *(void *)(v92 + 8 * v16);
          if (!v21)
          {
            int64_t v16 = v20 + 4;
            if (v20 + 4 >= v91) {
              break;
            }
            unint64_t v21 = *(void *)(v92 + 8 * v16);
            if (!v21)
            {
              int64_t v22 = v20 + 5;
              if (v22 >= v91) {
                break;
              }
              unint64_t v21 = *(void *)(v92 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v16 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_145;
                  }
                  if (v16 >= v91) {
                    goto LABEL_47;
                  }
                  unint64_t v21 = *(void *)(v92 + 8 * v16);
                  ++v22;
                  if (v21) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v16 = v22;
            }
          }
        }
      }
    }
LABEL_26:
    uint64_t v18 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_27:
    if (!*(void *)(*v96 + 16)) {
      goto LABEL_43;
    }
    unint64_t v99 = v18;
    int64_t v101 = v16;
    int v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v19);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_21F10E9C8(v25, v24);
    char v27 = v26;
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
LABEL_43:
      swift_allocError();
      char v39 = 10;
LABEL_46:
      *long long v38 = v39;
      swift_willThrow();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    if (!*(void *)(a2 + 16)) {
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_21F10E9C8(v25, v24);
    if ((v29 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_43;
    }
    uint64_t v30 = *(void *)(*(void *)(a2 + 56) + 8 * v28);
    swift_bridgeObjectRelease();
    uint64_t v31 = *(unsigned int *)(v6 + 32);
    uint64_t v32 = sub_21F156F40();
    *(void *)(v32 + 16) = 10;
    *(_OWORD *)(v32 + 48) = 0u;
    *(_OWORD *)(v32 + 64) = 0u;
    *(_OWORD *)(v32 + 80) = 0u;
    *(_OWORD *)(v32 + 96) = 0u;
    *(_OWORD *)(v32 + 32) = 0u;
    v103[1] = 0;
    sub_21F156D20();
    espresso_network_query_blob_shape();
    swift_release();
    unint64_t v97 = v97 & 0xFFFFFFFF00000000 | v31;
    swift_bridgeObjectRelease();
    a1 = v95;
    if (v30 <= 0)
    {
      swift_bridgeObjectRelease();
LABEL_45:
      swift_allocError();
      char v39 = 11;
      goto LABEL_46;
    }
    if ((unsigned __int128)(v30 * (__int128)a3) >> 64 != (v30 * a3) >> 63) {
      goto LABEL_130;
    }
    if (!*(void *)(v95 + 16)) {
      goto LABEL_148;
    }
    unint64_t v33 = sub_21F10E9C8(v25, v24);
    if ((v34 & 1) == 0) {
      goto LABEL_148;
    }
    uint64_t v35 = *(void *)(*(void *)(v95 + 56) + 8 * v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)(v35 + 16);
    swift_bridgeObjectRelease();
    a2 = v93;
    unint64_t v15 = v99;
    int64_t v16 = v101;
    if (v30 * a3 == v36)
    {
      uint64_t v37 = *(void *)(v6 + 80);
      if ((unsigned __int128)(v37 * (__int128)v30) >> 64 != (v37 * v30) >> 63) {
        goto LABEL_131;
      }
      if (v37 * v30 == 1) {
        continue;
      }
    }
    goto LABEL_45;
  }
LABEL_47:
  swift_release();
  uint64_t v40 = (void *)sub_21F127B9C(0, a3, 1);
  if (!a4) {
    return swift_release();
  }
  int v87 = 0;
  while (2)
  {
    if (v89)
    {
      unint64_t v41 = v40[2];
      if (v41 >= 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = sub_21F127438(v40);
        }
        unint64_t v42 = 0;
        uint64_t v43 = v40 + 4;
        do
        {
          v103[0] = 0;
          MEMORY[0x223C45180](v103, 8);
          uint64_t v45 = (v103[0] * (unsigned __int128)v41) >> 64;
          if (v41 > v103[0] * v41)
          {
            unint64_t v46 = -(uint64_t)v41 % v41;
            if (v46 > v103[0] * v41)
            {
              do
              {
                v103[0] = 0;
                MEMORY[0x223C45180](v103, 8);
              }
              while (v46 > v103[0] * v41);
              uint64_t v45 = (v103[0] * (unsigned __int128)v41) >> 64;
            }
          }
          BOOL v47 = __OFADD__(v42, v45);
          unint64_t v48 = v42 + v45;
          if (v47) {
            goto LABEL_138;
          }
          a1 = v95;
          if (v42 != v48)
          {
            unint64_t v49 = v40[2];
            if (v42 >= v49) {
              goto LABEL_139;
            }
            if (v48 >= v49) {
              goto LABEL_140;
            }
            uint64_t v50 = v43[v42];
            uint64_t v51 = v48;
            v43[v42] = v43[v51];
            v43[v51] = v50;
          }
          ++v42;
        }
        while ((uint64_t)v41-- > 2);
      }
    }
    uint64_t v52 = *(void *)(v6 + 80);
    if (!v52) {
      goto LABEL_142;
    }
    long long v102 = v40;
    if (a3 == 0x8000000000000000 && v52 == -1) {
      goto LABEL_146;
    }
    uint64_t v53 = a3 / v52;
    if (a3 / v52 < 0) {
      goto LABEL_143;
    }
    uint64_t v54 = v6;
    if (!v53)
    {
LABEL_119:
      ++v87;
      uint64_t v6 = v54;
      uint64_t v40 = v102;
      if (v87 == a4) {
        return swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  uint64_t v55 = 0;
  long long v100 = v40 + 4;
  uint64_t v85 = a3 / v52;
  while (2)
  {
    if (v55 == v53) {
      goto LABEL_144;
    }
    uint64_t v86 = v55 + 1;
    uint64_t v56 = 1 << *(unsigned char *)(a1 + 32);
    if (v56 < 64) {
      uint64_t v57 = ~(-1 << v56);
    }
    else {
      uint64_t v57 = -1;
    }
    unint64_t v58 = v57 & *(void *)(a1 + 64);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    int64_t v59 = 0;
    int64_t v88 = (unint64_t)(v56 + 63) >> 6;
LABEL_76:
    if (v58)
    {
      unint64_t v60 = __clz(__rbit64(v58));
      uint64_t v61 = (v58 - 1) & v58;
      unint64_t v62 = v60 | (v59 << 6);
      uint64_t v63 = v93;
      goto LABEL_96;
    }
    int64_t v64 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      goto LABEL_141;
    }
    uint64_t v63 = v93;
    if (v64 >= v88)
    {
LABEL_117:
      swift_release();
      if (espresso_plan_execute_sync()) {
        goto LABEL_134;
      }
      uint64_t v53 = v85;
      ++v55;
      if (v86 == v85) {
        goto LABEL_119;
      }
      continue;
    }
    break;
  }
  unint64_t v65 = *(void *)(v92 + 8 * v64);
  ++v59;
  if (!v65)
  {
    int64_t v59 = v64 + 1;
    if (v64 + 1 >= v88) {
      goto LABEL_117;
    }
    unint64_t v65 = *(void *)(v92 + 8 * v59);
    if (!v65)
    {
      int64_t v59 = v64 + 2;
      if (v64 + 2 >= v88) {
        goto LABEL_117;
      }
      unint64_t v65 = *(void *)(v92 + 8 * v59);
      if (!v65)
      {
        int64_t v59 = v64 + 3;
        if (v64 + 3 >= v88) {
          goto LABEL_117;
        }
        unint64_t v65 = *(void *)(v92 + 8 * v59);
        if (!v65)
        {
          int64_t v59 = v64 + 4;
          if (v64 + 4 >= v88) {
            goto LABEL_117;
          }
          unint64_t v65 = *(void *)(v92 + 8 * v59);
          if (!v65)
          {
            int64_t v66 = v64 + 5;
            if (v66 >= v88) {
              goto LABEL_117;
            }
            unint64_t v65 = *(void *)(v92 + 8 * v66);
            if (v65)
            {
              int64_t v59 = v66;
              goto LABEL_95;
            }
            while (1)
            {
              int64_t v59 = v66 + 1;
              if (__OFADD__(v66, 1)) {
                break;
              }
              if (v59 >= v88) {
                goto LABEL_117;
              }
              unint64_t v65 = *(void *)(v92 + 8 * v59);
              ++v66;
              if (v65) {
                goto LABEL_95;
              }
            }
LABEL_149:
            __break(1u);
          }
        }
      }
    }
  }
LABEL_95:
  uint64_t v61 = (v65 - 1) & v65;
  unint64_t v62 = __clz(__rbit64(v65)) + (v59 << 6);
LABEL_96:
  uint64_t v67 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v62);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  uint64_t v70 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v70) {
    goto LABEL_152;
  }
  swift_bridgeObjectRetain();
  sub_21F10E9C8(v69, v68);
  if ((v71 & 1) == 0) {
    goto LABEL_151;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = *v96;
  if (!*(void *)(*v96 + 16))
  {
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_149;
  }
  unint64_t v98 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v73 = sub_21F10E9C8(v69, v68);
  if ((v74 & 1) == 0) {
    goto LABEL_153;
  }
  uint64_t v75 = *(void *)(*(void *)(v72 + 56) + 168 * v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v63 + 16)) {
    goto LABEL_136;
  }
  swift_bridgeObjectRetain();
  unint64_t v76 = sub_21F10E9C8(v69, v68);
  if ((v77 & 1) == 0) {
    goto LABEL_154;
  }
  uint64_t v78 = *(void *)(*(void *)(v63 + 56) + 8 * v76);
  swift_bridgeObjectRelease();
  uint64_t v79 = *(void *)(v54 + 80);
  if (v79 < 0) {
    goto LABEL_137;
  }
  if (!v79)
  {
LABEL_75:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v95;
    unint64_t v58 = v98;
    goto LABEL_76;
  }
  uint64_t v80 = 0;
  while (v79 != v80)
  {
    uint64_t v81 = *(void *)(v54 + 80);
    uint64_t v82 = v55 * v81;
    if ((unsigned __int128)(v55 * (__int128)v81) >> 64 != (v55 * v81) >> 63) {
      goto LABEL_123;
    }
    BOOL v47 = __OFADD__(v82, v80);
    unint64_t v83 = v82 + v80;
    if (v47) {
      goto LABEL_124;
    }
    if (v78 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL || v78 >= 0x80000000) {
      goto LABEL_155;
    }
    if ((v83 & 0x8000000000000000) != 0) {
      goto LABEL_125;
    }
    if (v83 >= v102[2]) {
      goto LABEL_126;
    }
    if ((unsigned __int128)(v78 * (__int128)(uint64_t)v100[v83]) >> 64 != (v78 * v100[v83]) >> 63) {
      goto LABEL_127;
    }
    if (!v75) {
      goto LABEL_147;
    }
    if ((unsigned __int128)(v78 * (__int128)v80) >> 64 != (v78 * v80) >> 63) {
      goto LABEL_128;
    }
    ++v80;
    cblas_scopy_NEWLAPACK();
    if (v79 == v80) {
      goto LABEL_75;
    }
  }
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
  __break(1u);
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EspressoEIRTrainer()
{
  return self;
}

uint64_t method lookup function for EspressoEIRTrainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EspressoEIRTrainer);
}

uint64_t dispatch thunk of EspressoEIRTrainer.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.load(path:functions:inputs:outputs:weights:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.loadInferenceModel(path:inputs:outputs:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.finalize(batchSize:learningRate:)(uint64_t a1, unint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v2 + 688))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of EspressoEIRTrainer.extractWeights(function:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.extractOutputs(function:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.train(_:featureSizes:numSamples:epochs:shuffleMethod:fullBatch:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.eval(_:featureSizes:numSamples:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of EspressoEIRTrainer.unload(functions:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

PrivateFederatedLearning::EspressoError_optional __swiftcall EspressoError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 0;
  char v3 = 23;
  switch(rawValue)
  {
    case 9100:
      goto LABEL_24;
    case 9101:
      char v2 = 1;
      goto LABEL_24;
    case 9102:
      char v2 = 2;
      goto LABEL_24;
    case 9103:
      char v2 = 3;
      goto LABEL_24;
    case 9104:
      char v2 = 4;
      goto LABEL_24;
    case 9105:
      char v2 = 5;
      goto LABEL_24;
    case 9106:
      char v2 = 6;
      goto LABEL_24;
    case 9107:
      char v2 = 7;
      goto LABEL_24;
    case 9108:
      char v2 = 8;
      goto LABEL_24;
    case 9109:
      char v2 = 9;
      goto LABEL_24;
    case 9110:
      char v2 = 10;
      goto LABEL_24;
    case 9111:
      char v2 = 11;
      goto LABEL_24;
    case 9112:
      char v2 = 12;
      goto LABEL_24;
    case 9113:
      char v2 = 13;
      goto LABEL_24;
    case 9114:
      char v2 = 14;
      goto LABEL_24;
    case 9115:
      char v2 = 15;
      goto LABEL_24;
    case 9116:
      char v2 = 16;
      goto LABEL_24;
    case 9117:
      char v2 = 17;
      goto LABEL_24;
    case 9118:
      char v2 = 18;
      goto LABEL_24;
    case 9119:
      char v2 = 19;
      goto LABEL_24;
    case 9120:
      char v2 = 20;
      goto LABEL_24;
    case 9121:
      char v2 = 21;
      goto LABEL_24;
    case 9122:
      char v2 = 22;
LABEL_24:
      char v3 = v2;
      goto LABEL_25;
    case 9123:
LABEL_25:
      *uint64_t v1 = v3;
      break;
    case 9124:
      *uint64_t v1 = 24;
      break;
    case 9125:
      *uint64_t v1 = 25;
      break;
    case 9126:
      *uint64_t v1 = 26;
      break;
    case 9150:
      *uint64_t v1 = 27;
      break;
    case 9151:
      *uint64_t v1 = 28;
      break;
    case 9152:
      *uint64_t v1 = 29;
      break;
    case 9153:
      *uint64_t v1 = 30;
      break;
    case 9154:
      *uint64_t v1 = 31;
      break;
    case 9155:
      *uint64_t v1 = 32;
      break;
    case 9156:
      *uint64_t v1 = 33;
      break;
    case 9157:
      *uint64_t v1 = 34;
      break;
    case 9158:
      *uint64_t v1 = 35;
      break;
    case 9159:
      *uint64_t v1 = 36;
      break;
    case 9160:
      *uint64_t v1 = 37;
      break;
    case 9161:
      *uint64_t v1 = 38;
      break;
    case 9162:
      *uint64_t v1 = 39;
      break;
    case 9163:
      *uint64_t v1 = 40;
      break;
    default:
      *uint64_t v1 = 41;
      break;
  }
  return (PrivateFederatedLearning::EspressoError_optional)rawValue;
}

uint64_t EspressoError.rawValue.getter()
{
  return qword_21F15B5B0[*v0];
}

BOOL sub_21F12FC70(char *a1, char *a2)
{
  return qword_21F15B5B0[*a1] == qword_21F15B5B0[*a2];
}

unint64_t sub_21F12FC98()
{
  unint64_t result = qword_267EBEBC8;
  if (!qword_267EBEBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBC8);
  }
  return result;
}

uint64_t sub_21F12FCEC()
{
  return sub_21F157710();
}

uint64_t sub_21F12FD3C()
{
  return sub_21F157700();
}

uint64_t sub_21F12FD74()
{
  return sub_21F157710();
}

PrivateFederatedLearning::EspressoError_optional sub_21F12FDC0(Swift::Int *a1)
{
  return EspressoError.init(rawValue:)(*a1);
}

void sub_21F12FDC8(void *a1@<X8>)
{
  *a1 = qword_21F15B5B0[*v1];
}

uint64_t sub_21F12FDE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21F12FFCC();
  unint64_t v5 = sub_21F12A528();
  return MEMORY[0x270F9FB50](a1, a2, v4, v5);
}

uint64_t getEnumTagSinglePayload for EspressoError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD8) {
    goto LABEL_17;
  }
  if (a2 + 40 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 40) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 40;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 40;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 40;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x29;
  int v8 = v6 - 41;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EspressoError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 40 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 40) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD7)
  {
    unsigned int v6 = ((a2 - 216) >> 8) + 1;
    *unint64_t result = a2 + 40;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F12FF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 40;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EspressoError()
{
  return &type metadata for EspressoError;
}

unint64_t sub_21F12FFCC()
{
  unint64_t result = qword_267EBEBD0;
  if (!qword_267EBEBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBD0);
  }
  return result;
}

PrivateFederatedLearning::PFLError_optional __swiftcall PFLError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = rawValue - 40;
  if ((unint64_t)(rawValue - 9000) >= 7) {
    char v2 = 7;
  }
  *uint64_t v1 = v2;
  return (PrivateFederatedLearning::PFLError_optional)rawValue;
}

uint64_t PFLError.rawValue.getter()
{
  return *v0 + 9000;
}

unint64_t sub_21F130050()
{
  unint64_t result = qword_267EBEBD8;
  if (!qword_267EBEBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBD8);
  }
  return result;
}

uint64_t sub_21F1300A4()
{
  return sub_21F157710();
}

uint64_t sub_21F1300F0()
{
  return sub_21F157700();
}

uint64_t sub_21F130124()
{
  return sub_21F157710();
}

PrivateFederatedLearning::PFLError_optional sub_21F13016C(Swift::Int *a1)
{
  return PFLError.init(rawValue:)(*a1);
}

void sub_21F130174(void *a1@<X8>)
{
  *a1 = *v1 + 9000;
}

uint64_t sub_21F130188(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21F130374();
  unint64_t v5 = sub_21F12A528();
  return MEMORY[0x270F9FB50](a1, a2, v4, v5);
}

uint64_t getEnumTagSinglePayload for PFLError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PFLError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F13033CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLError()
{
  return &type metadata for PFLError;
}

unint64_t sub_21F130374()
{
  unint64_t result = qword_267EBEBE0;
  if (!qword_267EBEBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEBE0);
  }
  return result;
}

uint64_t sub_21F1303C8(uint64_t a1, uint64_t a2)
{
  sub_21F10E4F8(a1, (uint64_t)v24, &qword_267EBE3F8);
  if (!v25)
  {
    sub_21F0FC154((uint64_t)v24, &qword_267EBE3F8);
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    char v12 = 0;
    return v12 & 1;
  }
  if (*(void *)(v22 + 16))
  {
    unint64_t v3 = sub_21F10E9C8(28783, 0xE200000000000000);
    if (v4)
    {
      sub_21F0ED61C(*(void *)(v22 + 56) + 32 * v3, (uint64_t)v24);
      if (swift_dynamicCast())
      {
        uint64_t v5 = sub_21F134210((uint64_t)&unk_26D0ACD90);
        swift_arrayDestroy();
        uint64_t v21 = sub_21F134210((uint64_t)&unk_26D0ACDE0);
        swift_arrayDestroy();
        uint64_t v20 = sub_21F134210((uint64_t)&unk_26D0ACE20);
        swift_arrayDestroy();
        uint64_t v6 = sub_21F134210((uint64_t)&unk_26D0ACEC0);
        swift_arrayDestroy();
        uint64_t v7 = sub_21F134210((uint64_t)&unk_26D0ACF00);
        swift_arrayDestroy();
        uint64_t v8 = sub_21F134210((uint64_t)&unk_26D0ACF40);
        swift_arrayDestroy();
        uint64_t v9 = sub_21F134210((uint64_t)&unk_26D0ACF80);
        swift_arrayDestroy();
        char v10 = sub_21F132994(v22, v23, v5);
        swift_bridgeObjectRelease();
        if (v10)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v11 = sub_21F13182C(v22, a2);
LABEL_22:
          char v12 = v11;
          swift_bridgeObjectRelease();
          return v12 & 1;
        }
        char v13 = sub_21F132994(v22, v23, v21);
        swift_bridgeObjectRelease();
        if (v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v11 = sub_21F130D88(v22, a2);
          goto LABEL_22;
        }
        char v14 = sub_21F132994(v22, v23, v20);
        swift_bridgeObjectRelease();
        if (v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v11 = sub_21F130F08(v22, a2);
          goto LABEL_22;
        }
        char v15 = sub_21F132994(v22, v23, v6);
        swift_bridgeObjectRelease();
        if (v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v11 = sub_21F131260(v22, a2);
          goto LABEL_22;
        }
        char v16 = sub_21F132994(v22, v23, v7);
        swift_bridgeObjectRelease();
        if (v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v11 = sub_21F131534(v22, a2);
          goto LABEL_22;
        }
        char v17 = sub_21F132994(v22, v23, v8);
        swift_bridgeObjectRelease();
        if (v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v11 = sub_21F132594(v22, a2);
          goto LABEL_22;
        }
        char v18 = sub_21F132994(v22, v23, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18)
        {
          char v11 = sub_21F131BD0(v22, a2);
          goto LABEL_22;
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_21F130838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_21F1343B4(a1);
  sub_21F10E4F8(a2, (uint64_t)v37, &qword_267EBE3F8);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return sub_21F10FD8C((uint64_t)v37, a3);
  }
  unint64_t v33 = (_OWORD *)a3;
  unint64_t v7 = 0;
  while (1)
  {
    if (v7 >= *(void *)(v5 + 16))
    {
      __break(1u);
LABEL_81:
      swift_bridgeObjectRelease();
LABEL_77:
      swift_bridgeObjectRelease();
LABEL_78:
      swift_bridgeObjectRelease();
LABEL_79:
      uint64_t result = sub_21F0FC154((uint64_t)v37, &qword_267EBE3F8);
      *unint64_t v33 = 0u;
      v33[1] = 0u;
      return result;
    }
    uint64_t v8 = (uint64_t *)(v5 + 32 + 16 * v7);
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    sub_21F10E4F8((uint64_t)v37, (uint64_t)&v35, &qword_267EBE3F8);
    if (!*((void *)&v36 + 1))
    {
      sub_21F0FC154((uint64_t)&v35, &qword_267EBE3F8);
      swift_bridgeObjectRelease();
      goto LABEL_79;
    }
    swift_bridgeObjectRetain();
    sub_21F0FC154((uint64_t)&v35, &qword_267EBE3F8);
    sub_21F10E4F8((uint64_t)v37, (uint64_t)&v35, &qword_267EBE3F8);
    if (*((void *)&v36 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
      if (swift_dynamicCast())
      {
        if (*(void *)(v34 + 16) && (unint64_t v11 = sub_21F10E9C8(v9, v10), (v12 & 1) != 0))
        {
          sub_21F0ED61C(*(void *)(v34 + 56) + 32 * v11, (uint64_t)&v35);
        }
        else
        {
          long long v35 = 0u;
          long long v36 = 0u;
        }
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    else
    {
      sub_21F0FC154((uint64_t)&v35, &qword_267EBE3F8);
    }
    sub_21F10E4F8((uint64_t)v37, (uint64_t)&v35, &qword_267EBE3F8);
    if (!*((void *)&v36 + 1))
    {
      swift_bridgeObjectRelease();
      sub_21F0FC154((uint64_t)&v35, &qword_267EBE3F8);
      goto LABEL_78;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE450);
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0) {
      goto LABEL_77;
    }
    uint64_t v14 = HIBYTE(v10) & 0xF;
    uint64_t v15 = v9 & 0xFFFFFFFFFFFFLL;
    if ((v10 & 0x2000000000000000) != 0) {
      uint64_t v16 = HIBYTE(v10) & 0xF;
    }
    else {
      uint64_t v16 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16) {
      goto LABEL_81;
    }
    if ((v10 & 0x1000000000000000) == 0) {
      break;
    }
    uint64_t v18 = (uint64_t)sub_21F1339C0(v9, v10, 10);
    LOBYTE(v9) = v32;
LABEL_59:
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0 || v18 < 0 || (unint64_t)v18 >= *(void *)(v34 + 16)) {
      goto LABEL_77;
    }
    sub_21F0ED61C(v34 + 32 * v18 + 32, (uint64_t)&v35);
LABEL_5:
    swift_bridgeObjectRelease();
    sub_21F0FC154((uint64_t)v37, &qword_267EBE3F8);
    sub_21F10FD8C((uint64_t)&v35, (uint64_t)v37);
    if (++v7 == v6)
    {
      swift_bridgeObjectRelease();
      a3 = (uint64_t)v33;
      return sub_21F10FD8C((uint64_t)v37, a3);
    }
  }
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0) {
      char v17 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      char v17 = (unsigned __int8 *)sub_21F157380();
    }
    uint64_t v18 = (uint64_t)sub_21F133AA8(v17, v15, 10);
    LOBYTE(v9) = v19 & 1;
    goto LABEL_59;
  }
  *(void *)&long long v35 = v9;
  *((void *)&v35 + 1) = v10 & 0xFFFFFFFFFFFFFFLL;
  if (v9 == 43)
  {
    if (!v14) {
      goto LABEL_83;
    }
    if (v14 == 1 || (BYTE1(v9) - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v18 = (BYTE1(v9) - 48);
    if (v14 != 2)
    {
      if ((BYTE2(v9) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v18 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
      uint64_t v20 = v14 - 3;
      if (v20)
      {
        uint64_t v21 = (unsigned __int8 *)&v35 + 3;
        while (1)
        {
          unsigned int v22 = *v21 - 48;
          if (v22 > 9) {
            goto LABEL_46;
          }
          uint64_t v23 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
            goto LABEL_46;
          }
          uint64_t v18 = v23 + v22;
          if (__OFADD__(v23, v22)) {
            goto LABEL_46;
          }
          LOBYTE(v9) = 0;
          ++v21;
          if (!--v20) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_58:
    LOBYTE(v9) = 0;
    goto LABEL_59;
  }
  if (v9 != 45)
  {
    if (!v14 || (v9 - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v18 = (v9 - 48);
    if (v14 != 1)
    {
      if ((BYTE1(v9) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v18 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
      uint64_t v24 = v14 - 2;
      if (v24)
      {
        uint64_t v25 = (unsigned __int8 *)&v35 + 2;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_46;
          }
          uint64_t v27 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
            goto LABEL_46;
          }
          uint64_t v18 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_46;
          }
          LOBYTE(v9) = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_59;
          }
        }
      }
    }
    goto LABEL_58;
  }
  if (v14)
  {
    if (v14 == 1 || (BYTE1(v9) - 48) > 9u) {
      goto LABEL_46;
    }
    if (v14 == 2)
    {
      LOBYTE(v9) = 0;
      uint64_t v18 = -(uint64_t)(BYTE1(v9) - 48);
      goto LABEL_59;
    }
    if ((BYTE2(v9) - 48) > 9u) {
      goto LABEL_46;
    }
    uint64_t v18 = -10 * (BYTE1(v9) - 48) - (BYTE2(v9) - 48);
    uint64_t v28 = v14 - 3;
    if (v28)
    {
      char v29 = (unsigned __int8 *)&v35 + 3;
      while (1)
      {
        unsigned int v30 = *v29 - 48;
        if (v30 > 9) {
          break;
        }
        uint64_t v31 = 10 * v18;
        if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
          break;
        }
        uint64_t v18 = v31 - v30;
        if (__OFSUB__(v31, v30)) {
          break;
        }
        LOBYTE(v9) = 0;
        ++v29;
        if (!--v28) {
          goto LABEL_59;
        }
      }
LABEL_46:
      uint64_t v18 = 0;
      LOBYTE(v9) = 1;
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  __break(1u);
LABEL_83:
  __break(1u);
  return result;
}

uint64_t sub_21F130D88(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v5 & 1) != 0)) {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v13);
  }
  else {
    memset(v13, 0, sizeof(v13));
  }
  sub_21F130838((uint64_t)v13, a2, (uint64_t)v14);
  sub_21F0FC154((uint64_t)v13, &qword_267EBE3F8);
  if (*(void *)(a1 + 16)
    && (unint64_t v6 = sub_21F10E9C8(28783, 0xE200000000000000), (v7 & 1) != 0)
    && (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v6, (uint64_t)v13), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v8 = v15;
    if (v12)
    {
      if (v11 == 0x64656E69666564 && v12 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        char v9 = 1;
      }
      else
      {
        char v9 = sub_21F157600();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v9 = 0;
    }
  }
  else
  {
    char v9 = 0;
    uint64_t v8 = v15;
  }
  sub_21F0FC154((uint64_t)v14, &qword_267EBE3F8);
  return ((v8 == 0) ^ v9) & 1;
}

uint64_t sub_21F130F08(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_21F10E9C8(28783, 0xE200000000000000), (v5 & 1) != 0)
    && (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v28), swift_dynamicCast()))
  {
    uint64_t v6 = *((void *)&v26 + 1);
    uint64_t v7 = v26;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0xE000000000000000;
  }
  uint64_t v29 = v7;
  uint64_t v30 = v6;
  if (!*(void *)(a1 + 16)
    || (unint64_t v8 = sub_21F10E9C8(0x65756C6176, 0xE500000000000000), (v9 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)v28), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_13:
    char v13 = 0;
    return v13 & 1;
  }
  long long v10 = v26;
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v12 & 1) != 0)) {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v25);
  }
  else {
    memset(v25, 0, sizeof(v25));
  }
  sub_21F130838((uint64_t)v25, a2, (uint64_t)&v26);
  sub_21F0FC154((uint64_t)v25, &qword_267EBE3F8);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F0FC154((uint64_t)&v26, &qword_267EBE3F8);
    goto LABEL_13;
  }
  sub_21F0ED188(&v26, v28);
  sub_21F0ED61C((uint64_t)v28, (uint64_t)&v26);
  if (swift_dynamicCast())
  {
    uint64_t v15 = *((void *)&v25[0] + 1);
    uint64_t v16 = *(void *)&v25[0];
  }
  else
  {
    *(void *)&long long v26 = 0;
    *((void *)&v26 + 1) = 0xE000000000000000;
    sub_21F1573F0();
    uint64_t v15 = *((void *)&v26 + 1);
    uint64_t v16 = v26;
  }
  swift_bridgeObjectRetain();
  char v17 = sub_21F156E60();
  uint64_t v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    sub_21F1311F8(v18);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_21F156D10();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_21F156D10();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    char v13 = sub_21F134628(v29, v30, v19, v21, v22, v24);
  }
  else
  {
    char v13 = sub_21F134628(v7, v6, v16, v15, v10, *((uint64_t *)&v10 + 1));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  return v13 & 1;
}

uint64_t sub_21F1311F8(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return MEMORY[0x270F9D7B8](a1);
  }
LABEL_5:
  a1 = sub_21F156DB0();
  return MEMORY[0x270F9D7B8](a1);
}

BOOL sub_21F131260(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_21F10E9C8(28783, 0xE200000000000000);
    if (v5)
    {
      sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v21);
      if (swift_dynamicCast())
      {
        if (*(void *)(a1 + 16)
          && (unint64_t v6 = sub_21F10E9C8(0x65756C6176, 0xE500000000000000), (v7 & 1) != 0)
          && (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v6, (uint64_t)v21), (swift_dynamicCast() & 1) != 0))
        {
          long long v8 = v19;
          if (*(void *)(a1 + 16) && (unint64_t v9 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v10 & 1) != 0)) {
            sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v18);
          }
          else {
            memset(v18, 0, sizeof(v18));
          }
          sub_21F130838((uint64_t)v18, a2, (uint64_t)&v19);
          sub_21F0FC154((uint64_t)v18, &qword_267EBE3F8);
          if (v20)
          {
            sub_21F0ED188(&v19, v21);
            sub_21F0ED61C((uint64_t)v21, (uint64_t)&v19);
            if (!swift_dynamicCast())
            {
              *(void *)&long long v19 = 0;
              *((void *)&v19 + 1) = 0xE000000000000000;
              sub_21F1573F0();
            }
            char v12 = sub_21F156E60();
            swift_bridgeObjectRelease();
            id v13 = objc_allocWithZone(MEMORY[0x263F08AE8]);
            id v14 = sub_21F132ACC(v8, *((uint64_t *)&v8 + 1), v12 & 1);
            if (v14)
            {
              uint64_t v15 = (void *)sub_21F156C90();
              uint64_t v16 = sub_21F156D90();
              swift_bridgeObjectRelease();
              id v17 = objc_msgSend(v14, sel_numberOfMatchesInString_options_range_, v15, 0, 0, v16);

              __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
              return (uint64_t)v17 > 0;
            }
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21F0FC154((uint64_t)&v19, &qword_267EBE3F8);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  return 0;
}

uint64_t sub_21F131534(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_21F10E9C8(28783, 0xE200000000000000);
  if ((v5 & 1) == 0) {
    return 0;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v24);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *((void *)&v22 + 1);
  if (!*(void *)(a1 + 16)
    || (uint64_t v7 = v22, v8 = sub_21F10E9C8(0x65756C6176, 0xE500000000000000), (v9 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)v24),
        sub_21F0FBF34(0, (unint64_t *)&qword_267EBE408),
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  char v10 = (void *)v22;
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v12 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_21F130838((uint64_t)&v20, a2, (uint64_t)&v22);
  sub_21F0FC154((uint64_t)&v20, &qword_267EBE3F8);
  if (!v23)
  {
    swift_bridgeObjectRelease();

    sub_21F0FC154((uint64_t)&v22, &qword_267EBE3F8);
    return 0;
  }
  sub_21F0ED188(&v22, v24);
  sub_21F0ED61C((uint64_t)v24, (uint64_t)&v22);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    return 0;
  }
  uint64_t v15 = (void *)v20;
  if ((v7 != 1936942444 || v6 != 0xE400000000000000) && (sub_21F157600() & 1) == 0)
  {
    if (v7 == 1701998445 && v6 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_31:
      id v19 = objc_msgSend(v15, sel_compare_, v10, v20, v21);

      BOOL v17 = v19 == (id)1;
      goto LABEL_23;
    }
    char v18 = sub_21F157600();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_31;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);

    return 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = (char *)objc_msgSend(v15, sel_compare_, v10);

  BOOL v17 = v16 + 1 == 0;
LABEL_23:
  uint64_t v13 = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v13;
}

uint64_t sub_21F13182C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_21F10E9C8(28783, 0xE200000000000000);
    if (v5)
    {
      sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v30);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *((void *)&v29[0] + 1);
        if (*(void *)(a1 + 16)
          && (uint64_t v7 = *(void *)&v29[0], v8 = sub_21F10E9C8(0x796C707061, 0xE500000000000000), (v9 & 1) != 0)
          && (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)v30),
              __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE450),
              (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v10 = *(void *)&v29[0];
          if (*(void *)(a1 + 16) && (unint64_t v11 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v12 & 1) != 0)) {
            sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v29);
          }
          else {
            memset(v29, 0, sizeof(v29));
          }
          sub_21F130838((uint64_t)v29, a2, (uint64_t)v30);
          sub_21F0FC154((uint64_t)v29, &qword_267EBE3F8);
          if (v7 == 6581857 && v6 == 0xE300000000000000 || (sub_21F157600() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v15 = *(void *)(v10 + 16);
            if (v15)
            {
              uint64_t v16 = v10 + 32;
              swift_bridgeObjectRetain();
              uint64_t v17 = v15 - 1;
              do
              {
                sub_21F0ED61C(v16, (uint64_t)v29);
                LOBYTE(v13) = sub_21F1303C8(v29, v30);
                sub_21F0FC154((uint64_t)v29, &qword_267EBE3F8);
                BOOL v19 = v17-- != 0;
                if ((v13 & 1) == 0) {
                  break;
                }
                v16 += 32;
              }
              while (v19);
              goto LABEL_33;
            }
            goto LABEL_34;
          }
          if (v7 == 7630702 && v6 == 0xE300000000000000 || (sub_21F157600() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v20 = *(void *)(v10 + 16);
            if (v20)
            {
              uint64_t v21 = v10 + 32;
              swift_bridgeObjectRetain();
              uint64_t v22 = v20 - 1;
              do
              {
                uint64_t v23 = v22;
                sub_21F0ED61C(v21, (uint64_t)v29);
                char v24 = sub_21F1303C8(v29, v30);
                sub_21F0FC154((uint64_t)v29, &qword_267EBE3F8);
                if (v24) {
                  break;
                }
                uint64_t v22 = v23 - 1;
                v21 += 32;
              }
              while (v23);
              LOBYTE(v13) = v24 ^ 1;
LABEL_33:
              swift_bridgeObjectRelease();
LABEL_35:
              sub_21F0FC154((uint64_t)v30, &qword_267EBE3F8);
              swift_bridgeObjectRelease();
              return v13 & 1;
            }
LABEL_34:
            LOBYTE(v13) = 1;
            goto LABEL_35;
          }
          if (v7 == 29295 && v6 == 0xE200000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_40:
            uint64_t v13 = *(void *)(v10 + 16);
            if (!v13) {
              goto LABEL_35;
            }
            uint64_t v26 = v10 + 32;
            swift_bridgeObjectRetain();
            uint64_t v27 = v13 - 1;
            do
            {
              uint64_t v28 = v27;
              sub_21F0ED61C(v26, (uint64_t)v29);
              LOBYTE(v13) = sub_21F1303C8(v29, v30);
              sub_21F0FC154((uint64_t)v29, &qword_267EBE3F8);
              if (v13) {
                break;
              }
              uint64_t v27 = v28 - 1;
              v26 += 32;
            }
            while (v28);
            goto LABEL_33;
          }
          char v25 = sub_21F157600();
          swift_bridgeObjectRelease();
          if (v25) {
            goto LABEL_40;
          }
          swift_bridgeObjectRelease();
          sub_21F0FC154((uint64_t)v30, &qword_267EBE3F8);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  LOBYTE(v13) = 0;
  return v13 & 1;
}

uint64_t sub_21F131BD0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16)) {
    goto LABEL_42;
  }
  unint64_t v4 = sub_21F10E9C8(0x65756C6176, 0xE500000000000000);
  if ((v5 & 1) == 0) {
    goto LABEL_42;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v30);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_42;
  }
  long long v6 = v28;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v8 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_21F130838((uint64_t)&v26, a2, (uint64_t)&v28);
  sub_21F0FC154((uint64_t)&v26, &qword_267EBE3F8);
  if (!v29)
  {
    sub_21F0FC154((uint64_t)&v28, &qword_267EBE3F8);
    if (v6 == __PAIR128__(0xE900000000000064, 0x656E696665646E75))
    {
      swift_bridgeObjectRelease();
      char v9 = 1;
    }
    else
    {
      char v9 = sub_21F157600();
      swift_bridgeObjectRelease();
    }
    return v9 & 1;
  }
  sub_21F0ED188(&v28, v30);
  if (v6 != __PAIR128__(0xE600000000000000, 0x676E69727473) && (sub_21F157600() & 1) == 0)
  {
    if (v6 == __PAIR128__(0xE600000000000000, 0x7265626D756ELL) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      char v11 = sub_21F134874((uint64_t)v30);
LABEL_20:
      char v9 = v11;
LABEL_21:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
      return v9 & 1;
    }
    if (v6 == __PAIR128__(0xE700000000000000, 0x6E61656C6F6F62) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
      char v11 = swift_dynamicCast();
      goto LABEL_20;
    }
    if (v6 == __PAIR128__(0xE600000000000000, 0x7463656A626FLL) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_21F0ED188(v30, &v28);
      char v12 = &qword_267EBE3F0;
      goto LABEL_28;
    }
    if (v6 == __PAIR128__(0xE500000000000000, 0x7961727261) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_21F0ED188(v30, &v28);
      char v12 = &qword_267EBE450;
LABEL_28:
      __swift_instantiateConcreteTypeFromMangledName(v12);
      int v13 = swift_dynamicCast();
      char v9 = v13;
      if (!v13) {
        return v9 & 1;
      }
      goto LABEL_15;
    }
    if (v6 == __PAIR128__(0xE400000000000000, 1819047278) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
      sub_21F0FBF34(0, &qword_267EBEBF0);
      if (swift_dynamicCast())
      {

        sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
        char v9 = 1;
      }
      else
      {
        sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
        char v9 = sub_21F134940((uint64_t)&v28);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
      goto LABEL_21;
    }
    if (v6 == __PAIR128__(0xE900000000000064, 0x656E696665646E75) || (sub_21F157600() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
      swift_bridgeObjectRelease();
LABEL_42:
      char v9 = 0;
      return v9 & 1;
    }
    if (v6 == __PAIR128__(0xE400000000000000, 1702125924) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
      sub_21F10E4F8((uint64_t)&v28, (uint64_t)&v26, &qword_267EBE3F8);
      if (*((void *)&v27 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_68:
          char v9 = 0;
LABEL_69:
          sub_21F0FC154((uint64_t)&v28, &qword_267EBE3F8);
          goto LABEL_21;
        }
        id v15 = objc_allocWithZone(MEMORY[0x263F08AE8]);
        id v16 = sub_21F132ACC(0xD00000000000001FLL, 0x800000021F1605A0, 0);
        if (v16)
        {
LABEL_57:
          id v18 = v16;
          BOOL v19 = (void *)sub_21F156C90();
          uint64_t v20 = sub_21F156D90();
          swift_bridgeObjectRelease();
          id v21 = objc_msgSend(v18, sel_matchesInString_options_range_, v19, 0, 0, v20);

          sub_21F0FBF34(0, &qword_267EBEBE8);
          unint64_t v22 = sub_21F156EF0();

          if (v22 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_21F157420();

            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRelease();
          }
          char v9 = v23 == 1;
          goto LABEL_69;
        }
LABEL_49:
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
    }
    else if (v6 == __PAIR128__(0xE900000000000065, 0x6D69742D65746164) || (sub_21F157600() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
      sub_21F10E4F8((uint64_t)&v28, (uint64_t)&v26, &qword_267EBE3F8);
      if (*((void *)&v27 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_68;
        }
        id v17 = objc_allocWithZone(MEMORY[0x263F08AE8]);
        id v16 = sub_21F132ACC(0xD00000000000006ELL, 0x800000021F160530, 0);
        if (v16) {
          goto LABEL_57;
        }
        goto LABEL_49;
      }
    }
    else
    {
      if (v6 == __PAIR128__(0xE400000000000000, 1701669236))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v24 = sub_21F157600();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
          goto LABEL_42;
        }
      }
      sub_21F0ED61C((uint64_t)v30, (uint64_t)&v28);
      sub_21F10E4F8((uint64_t)&v28, (uint64_t)&v26, &qword_267EBE3F8);
      if (*((void *)&v27 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_68;
        }
        id v25 = objc_allocWithZone(MEMORY[0x263F08AE8]);
        id v16 = sub_21F132ACC(0xD00000000000004DLL, 0x800000021F1604E0, 0);
        if (v16) {
          goto LABEL_57;
        }
        goto LABEL_49;
      }
    }
    sub_21F0FC154((uint64_t)&v26, &qword_267EBE3F8);
    goto LABEL_68;
  }
  swift_bridgeObjectRelease();
  sub_21F0ED188(v30, &v28);
  int v10 = swift_dynamicCast();
  char v9 = v10;
  if (v10) {
LABEL_15:
  }
    swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_21F132594(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_21F10E9C8(0x65756C6176, 0xE500000000000000);
  if ((v5 & 1) == 0) {
    return 0;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE450);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = v24;
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_21F10E9C8(1752457584, 0xE400000000000000), (v8 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_21F130838((uint64_t)&v24, a2, (uint64_t)v26);
  sub_21F0FC154((uint64_t)&v24, &qword_267EBE3F8);
  sub_21F10E4F8((uint64_t)v26, (uint64_t)&v22, &qword_267EBE3F8);
  if (!v23)
  {
    sub_21F0FC154((uint64_t)v26, &qword_267EBE3F8);
    swift_bridgeObjectRelease();
    sub_21F0FC154((uint64_t)&v22, &qword_267EBE3F8);
    return 0;
  }
  sub_21F0ED188(&v22, &v24);
  if (*(void *)(a1 + 16)
    && (unint64_t v9 = sub_21F10E9C8(28783, 0xE200000000000000), (v10 & 1) != 0)
    && (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v22), (swift_dynamicCast() & 1) != 0))
  {
    if (v20 == 2977385 && v21 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      char v11 = 1;
      uint64_t v12 = *(void *)(v6 + 16);
      if (!v12) {
        goto LABEL_30;
      }
      goto LABEL_17;
    }
    char v11 = sub_21F157600();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v6 + 16);
    if (!v12)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      sub_21F0FC154((uint64_t)v26, &qword_267EBE3F8);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v24);
      return 0;
    }
  }
  else
  {
    char v11 = 0;
    uint64_t v12 = *(void *)(v6 + 16);
    if (!v12) {
      goto LABEL_30;
    }
  }
LABEL_17:
  uint64_t v13 = v6 + 32;
  while (1)
  {
    sub_21F0ED61C(v13, (uint64_t)&v22);
    sub_21F0ED61C((uint64_t)&v24, (uint64_t)&v20);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_19;
    }
    sub_21F0ED61C((uint64_t)&v22, (uint64_t)&v20);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      __swift_project_boxed_opaque_existential_1(&v22, v23);
      id v14 = (void *)sub_21F1575F0();
      __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      unsigned __int8 v15 = objc_msgSend(v14, sel_isEqual_, sub_21F1575F0());
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (v15) {
        goto LABEL_32;
      }
      goto LABEL_20;
    }
    if ((v11 & 1) == 0) {
      break;
    }
    uint64_t v20 = v18;
    uint64_t v21 = v19;
    sub_21F0FB854();
    uint64_t v16 = sub_21F157230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v16) {
      goto LABEL_32;
    }
LABEL_20:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
    v13 += 32;
    if (!--v12) {
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_32:
  swift_bridgeObjectRelease();
  sub_21F0FC154((uint64_t)v26, &qword_267EBE3F8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v24);
  return 1;
}

uint64_t sub_21F132994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_21F1576F0();
    sub_21F156D80();
    uint64_t v6 = sub_21F157710();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_21F157600() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_21F157600() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

id sub_21F132ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  char v5 = (void *)sub_21F156C90();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_21F1566F0();

    swift_willThrow();
  }
  return v6;
}

void *sub_21F132BA8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5C8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21F132C10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_21F156E40();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x223C43C90](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_21F132C8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F132D2C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_21F132CAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F132E8C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_21F132CCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F133238(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_21F132CEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F1336D8(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_21F132D0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F133860(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_21F132D2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE620);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F132E8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F132FF8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5D0);
  uint64_t v10 = *(void *)(type metadata accessor for CKPolicyRecord(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  _OWORD v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for CKPolicyRecord(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F133238(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F1333A4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE638);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    id v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE640);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F133530(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC20);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    id v10[2] = v8;
    _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4B8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F1336D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC08);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F133860(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC18);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

unsigned __int8 *sub_21F1339C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_21F156E90();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_21F133D24();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v7 = (unsigned __int8 *)sub_21F157380();
  }
LABEL_7:
  int64_t v11 = sub_21F133AA8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_21F133AA8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_21F133D24()
{
  unint64_t v0 = sub_21F156EA0();
  uint64_t v4 = sub_21F133DA4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F133DA4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_21F133EFC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_21F132BA8(v9, 0);
      unint64_t v12 = sub_21F133FFC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_21F157380();
LABEL_4:
        JUMPOUT(0x223C43BF0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x223C43BF0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x223C43BF0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_21F133EFC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_21F132C10(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_21F132C10(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_21F133FFC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_21F132C10(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_21F156E30();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_21F157380();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_21F132C10(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_21F156E00();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_21F134210(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE418);
    uint64_t v3 = sub_21F1572C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_21F1576F0();
      swift_bridgeObjectRetain();
      sub_21F156D80();
      uint64_t result = sub_21F157710();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_21F157600(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_21F157600();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_21F1343B4(uint64_t a1)
{
  sub_21F10E4F8(a1, (uint64_t)&v20, &qword_267EBE3F8);
  if (!v22)
  {
    sub_21F0FC154((uint64_t)&v20, &qword_267EBE3F8);
    return MEMORY[0x263F8EE78];
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  sub_21F0FB854();
  uint64_t v1 = sub_21F157210();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = v2 != 0;
  uint64_t v4 = v2 - v3;
  if (v2 == v3)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t result = sub_21F132CAC(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v17;
    unint64_t v16 = v2;
    uint64_t v7 = (uint64_t *)(v1 + 16 * v3 + 40);
    while (v3 < v2)
    {
      uint64_t v8 = *v7;
      uint64_t v20 = *(v7 - 1);
      uint64_t v21 = v8;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_21F157220();
      uint64_t v21 = v9;
      uint64_t v10 = sub_21F157220();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)(v17 + 16);
      unint64_t v13 = *(void *)(v17 + 24);
      if (v14 >= v13 >> 1) {
        uint64_t result = sub_21F132CAC(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v17 + 16) = v14 + 1;
      uint64_t v15 = v17 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      ++v3;
      v7 += 2;
      unint64_t v2 = v16;
      if (v16 == v3)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21F134628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v10 = a1 == 0x737472617473 && a2 == 0xE600000000000000;
  if (v10 || (sub_21F157600() & 1) != 0)
  {
    return sub_21F156E50();
  }
  if (a1 == 1935961701 && a2 == 0xE400000000000000 || (sub_21F157600() & 1) != 0)
  {
    return sub_21F156E60();
  }
  if (a1 == 0x736E6961746E6F63 && a2 == 0xE800000000000000 || (sub_21F157600() & 1) != 0)
  {
    sub_21F0FB854();
    char v14 = sub_21F157240();
    return v14 & 1;
  }
  if (a1 != 1953719668 || a2 != 0xE400000000000000)
  {
    char v15 = sub_21F157600();
    char v14 = 0;
    if ((v15 & 1) == 0) {
      return v14 & 1;
    }
  }
  if (a3 == a5 && a4 == a6)
  {
    char v14 = 1;
    return v14 & 1;
  }
  return sub_21F157600();
}

uint64_t sub_21F134874(uint64_t a1)
{
  sub_21F0ED61C(a1, (uint64_t)v4);
  sub_21F0FBF34(0, (unint64_t *)&qword_267EBE408);
  if (swift_dynamicCast())
  {

    sub_21F0ED61C(a1, (uint64_t)v4);
    sub_21F0ED188(v4, &v3);
    return swift_dynamicCast() ^ 1;
  }
  else
  {
    sub_21F0ED61C(a1, (uint64_t)v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
    return 0;
  }
}

uint64_t sub_21F134940(uint64_t a1)
{
  uint64_t v2 = sub_21F157730();
  uint64_t v3 = *(void *)(v2 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v31 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEBF8) - 8;
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC00);
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  char v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v31 - v13;
  uint64_t v34 = sub_21F157760();
  uint64_t v15 = *(void *)(v34 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v34);
  unint64_t v33 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v31 - v18;
  sub_21F0ED61C(a1, (uint64_t)v35);
  sub_21F157720();
  sub_21F157740();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v12, *MEMORY[0x263F8E810], v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  uint64_t v20 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_21F10E4F8((uint64_t)v14, (uint64_t)v7, &qword_267EBEC00);
  sub_21F10E4F8((uint64_t)v12, v20, &qword_267EBEC00);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v21((uint64_t)v7, 1, v2) == 1)
  {
    sub_21F0FC154((uint64_t)v12, &qword_267EBEC00);
    sub_21F0FC154((uint64_t)v14, &qword_267EBEC00);
    if (v21(v20, 1, v2) == 1)
    {
      sub_21F0FC154((uint64_t)v7, &qword_267EBEC00);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v33, v19, v34);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_21F10E4F8((uint64_t)v7, (uint64_t)v32, &qword_267EBEC00);
  if (v21(v20, 1, v2) == 1)
  {
    sub_21F0FC154((uint64_t)v12, &qword_267EBEC00);
    sub_21F0FC154((uint64_t)v14, &qword_267EBEC00);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v32, v2);
LABEL_6:
    sub_21F0FC154((uint64_t)v7, &qword_267EBEBF8);
    BOOL v23 = v33;
    uint64_t v22 = v34;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v33, v19, v34);
LABEL_10:
    char v29 = 0;
    goto LABEL_11;
  }
  uint64_t v24 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v31, v20, v2);
  char v25 = sub_21F156C50();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v24, v2);
  sub_21F0FC154((uint64_t)v12, &qword_267EBEC00);
  sub_21F0FC154((uint64_t)v14, &qword_267EBEC00);
  v26(v32, v2);
  sub_21F0FC154((uint64_t)v7, &qword_267EBEC00);
  BOOL v23 = v33;
  uint64_t v22 = v34;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v33, v19, v34);
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  sub_21F157750();
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v27 = sub_21F157320();
  swift_getObjectType();
  uint64_t result = sub_21F157320();
  if (v27 == result)
  {
    char v29 = sub_21F157330();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    BOOL v23 = v33;
    uint64_t v22 = v34;
LABEL_11:
    uint64_t v30 = *(void (**)(char *, uint64_t))(v15 + 8);
    v30(v23, v22);
    v30(v19, v22);
    return v29 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F134EEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC10);
    uint64_t v3 = sub_21F1572C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_21F156CC0();
      sub_21F1576F0();
      id v7 = v6;
      sub_21F156D80();
      uint64_t v8 = sub_21F157710();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_21F156CC0();
        uint64_t v17 = v16;
        if (v15 == sub_21F156CC0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_21F157600();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_21F156CC0();
          uint64_t v24 = v23;
          if (v22 == sub_21F156CC0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_21F157600();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_21F13511C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOPort()
{
  return self;
}

unint64_t PFLTaskDiscoveryReachLocation.description.getter()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
    case 2:
    case 4:
      sub_21F157300();
      swift_bridgeObjectRelease();
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
    case 6:
    case 8:
      sub_21F157300();
      swift_bridgeObjectRelease();
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      sub_21F157300();
      swift_bridgeObjectRelease();
      unint64_t result = 0xD000000000000020;
      break;
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      sub_21F157300();
      swift_bridgeObjectRelease();
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t PFLTaskDiscovery.__allocating_init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  PFLTaskDiscovery.init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t sub_21F135458()
{
  return sub_21F157710();
}

uint64_t sub_21F135560()
{
  return sub_21F157710();
}

uint64_t sub_21F1356B0()
{
  return sub_21F157710();
}

PrivateFederatedLearning::PFLTaskDiscoveryReachLocation_optional __swiftcall PFLTaskDiscoveryReachLocation.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = rawValue - 100;
  if ((unint64_t)(rawValue - 100) >= 0xA) {
    char v2 = 10;
  }
  *uint64_t v1 = v2;
  return (PrivateFederatedLearning::PFLTaskDiscoveryReachLocation_optional)rawValue;
}

void *static PFLTaskDiscoveryReachLocation.allCases.getter()
{
  return &unk_26D0AD2A8;
}

uint64_t PFLTaskDiscoveryReachLocation.rawValue.getter()
{
  return *v0 + 100;
}

uint64_t sub_21F135794()
{
  return sub_21F157710();
}

uint64_t sub_21F1357DC()
{
  return sub_21F157700();
}

uint64_t sub_21F13580C()
{
  return sub_21F157710();
}

PrivateFederatedLearning::PFLTaskDiscoveryReachLocation_optional sub_21F135850(Swift::Int *a1)
{
  return PFLTaskDiscoveryReachLocation.init(rawValue:)(*a1);
}

void sub_21F135858(void *a1@<X8>)
{
  *a1 = *v1 + 100;
}

void sub_21F13586C(void *a1@<X8>)
{
  *a1 = &unk_26D0AD2A8;
}

uint64_t sub_21F13587C(unsigned __int8 *a1, char *a2)
{
  return sub_21F151474(*a1, *a2);
}

uint64_t sub_21F135888()
{
  return sub_21F135560();
}

uint64_t sub_21F135894()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F1359D0()
{
  return sub_21F135560();
}

uint64_t sub_21F1359D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F13F5C8();
  *a1 = result;
  return result;
}

void sub_21F135A08(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA0000000000646FLL;
  uint64_t v3 = 0x72505F4C4D646F44;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000797272;
      uint64_t v3 = 0x61435F4C4D646F44;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "DodML_Staging");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x646F72505F4B43;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      *(void *)a1 = 0x79727261435F4B43;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x69676174535F4B43;
      *(void *)(a1 + 8) = 0xEA0000000000676ELL;
      break;
    case 6:
      *(void *)a1 = 0x69445F6C61636F4CLL;
      *(void *)(a1 + 8) = 0xEF79726F74636572;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_21F135B28()
{
  uint64_t result = 0x72505F4C4D646F44;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x61435F4C4D646F44;
      break;
    case 2:
      uint64_t result = 0x74535F4C4D646F44;
      break;
    case 3:
      uint64_t result = 0x646F72505F4B43;
      break;
    case 4:
      uint64_t result = 0x79727261435F4B43;
      break;
    case 5:
      uint64_t result = 0x69676174535F4B43;
      break;
    case 6:
      uint64_t result = 0x69445F6C61636F4CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F135C30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F13F5C8();
  *a1 = result;
  return result;
}

void sub_21F135C58(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_21F135C64(uint64_t a1)
{
  unint64_t v2 = sub_21F13DC2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135CA0(uint64_t a1)
{
  unint64_t v2 = sub_21F13DC2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PFLTaskSource.nonprodSource.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[1];
  if (v2 == 3)
  {
    long long v3 = xmmword_21F15B850;
    goto LABEL_5;
  }
  if (!v2)
  {
    long long v3 = xmmword_21F15B860;
LABEL_5:
    *(_OWORD *)a1 = v3;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    return result;
  }
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = *v1;
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return sub_21F0FC10C(v6, v2);
}

uint64_t sub_21F135D20()
{
  return 0;
}

void sub_21F135D2C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21F135D38(uint64_t a1)
{
  unint64_t v2 = sub_21F13DD28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135D74(uint64_t a1)
{
  unint64_t v2 = sub_21F13DD28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F135DB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_21F135DE0(uint64_t a1)
{
  unint64_t v2 = sub_21F13DD7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135E1C(uint64_t a1)
{
  unint64_t v2 = sub_21F13DD7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F135E58(uint64_t a1)
{
  unint64_t v2 = sub_21F13DCD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135E94(uint64_t a1)
{
  unint64_t v2 = sub_21F13DCD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F135ED0(uint64_t a1)
{
  unint64_t v2 = sub_21F13DE24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135F0C(uint64_t a1)
{
  unint64_t v2 = sub_21F13DE24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F135F48(uint64_t a1)
{
  unint64_t v2 = sub_21F13DE78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135F84(uint64_t a1)
{
  unint64_t v2 = sub_21F13DE78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F135FC0(uint64_t a1)
{
  unint64_t v2 = sub_21F13DDD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F135FFC(uint64_t a1)
{
  unint64_t v2 = sub_21F13DDD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F136038()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6150657069636572;
  }
}

uint64_t sub_21F13607C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F13F614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F1360A4(uint64_t a1)
{
  unint64_t v2 = sub_21F13DC80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F1360E0(uint64_t a1)
{
  unint64_t v2 = sub_21F13DC80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PFLTaskSource.encode(to:)(void *a1)
{
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC30);
  uint64_t v51 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC38);
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC40);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  BOOL v47 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC48);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  char v44 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC50);
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v41 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC58);
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  MEMORY[0x270FA5388](v12);
  long long v36 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC60);
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC68);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v56 = v16;
  uint64_t v57 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v1[1];
  uint64_t v35 = *v1;
  uint64_t v21 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F13DC2C();
  sub_21F1577B0();
  switch(v20)
  {
    case 0:
      char v59 = 0;
      sub_21F13DE78();
      uint64_t v22 = v56;
      sub_21F157550();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v19, v22);
    case 1:
      char v60 = 1;
      sub_21F13DE24();
      uint64_t v30 = v36;
      uint64_t v22 = v56;
      sub_21F157550();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v19, v22);
    case 2:
      char v61 = 2;
      sub_21F13DDD0();
      uint64_t v31 = v41;
      uint64_t v32 = v56;
      sub_21F157550();
      uint64_t v34 = v42;
      uint64_t v33 = v43;
      goto LABEL_12;
    case 3:
      char v62 = 3;
      sub_21F13DD7C();
      uint64_t v31 = v44;
      uint64_t v32 = v56;
      sub_21F157550();
      uint64_t v34 = v45;
      uint64_t v33 = v46;
      goto LABEL_12;
    case 4:
      char v63 = 4;
      sub_21F13DD28();
      uint64_t v31 = v47;
      uint64_t v32 = v56;
      sub_21F157550();
      uint64_t v34 = v48;
      uint64_t v33 = v49;
      goto LABEL_12;
    case 5:
      char v64 = 5;
      sub_21F13DCD4();
      uint64_t v31 = v50;
      uint64_t v32 = v56;
      sub_21F157550();
      uint64_t v34 = v52;
      uint64_t v33 = v53;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v19, v32);
      break;
    default:
      uint64_t v53 = v21;
      uint64_t v23 = v51;
      char v67 = 6;
      sub_21F13DC80();
      uint64_t v24 = v54;
      uint64_t v25 = v56;
      uint64_t v26 = v19;
      sub_21F157550();
      char v66 = 0;
      uint64_t v27 = v55;
      uint64_t v28 = v58;
      sub_21F157580();
      if (!v28)
      {
        char v65 = 1;
        sub_21F157580();
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v27);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v26, v25);
      break;
  }
  return result;
}

uint64_t PFLTaskSource.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECB0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  uint64_t v66 = v4;
  MEMORY[0x270FA5388](v3);
  char v67 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECB8);
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v73 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECC0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  uint64_t v62 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v72 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECC8);
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECD0);
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v69 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECD8);
  uint64_t v56 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECE0);
  uint64_t v55 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECE8);
  uint64_t v21 = *(void (***)(char *, uint64_t))(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  char v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_21F13DC2C();
  uint64_t v25 = v75;
  sub_21F157790();
  if (v25) {
    goto LABEL_11;
  }
  uint64_t v53 = v20;
  uint64_t v51 = v18;
  uint64_t v54 = v17;
  uint64_t v52 = v15;
  uint64_t v27 = v69;
  uint64_t v26 = v70;
  uint64_t v28 = v72;
  BOOL v29 = v73;
  uint64_t v75 = v21;
  uint64_t v30 = v71;
  uint64_t v31 = sub_21F157540();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v37 = sub_21F157370();
    swift_allocError();
    uint64_t v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBECF0);
    void *v39 = &type metadata for PFLTaskSource;
    sub_21F1574B0();
    sub_21F157360();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    v75[1](v23, v30);
LABEL_11:
    uint64_t v41 = (uint64_t)v74;
    return __swift_destroy_boxed_opaque_existential_0(v41);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v77 = 1;
      sub_21F13DE24();
      uint64_t v40 = v54;
      sub_21F1574A0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v52);
      swift_bridgeObjectRelease();
      v75[1](v23, v30);
      uint64_t v33 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v34 = 1;
      break;
    case 2:
      char v78 = 2;
      sub_21F13DDD0();
      sub_21F1574A0();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v58);
      swift_bridgeObjectRelease();
      v75[1](v23, v30);
      uint64_t v33 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v34 = 2;
      break;
    case 3:
      char v79 = 3;
      sub_21F13DD7C();
      sub_21F1574A0();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v26, v60);
      swift_bridgeObjectRelease();
      v75[1](v23, v30);
      uint64_t v33 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v34 = 3;
      break;
    case 4:
      char v80 = 4;
      sub_21F13DD28();
      sub_21F1574A0();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v61);
      swift_bridgeObjectRelease();
      v75[1](v23, v30);
      uint64_t v33 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v34 = 4;
      break;
    case 5:
      char v81 = 5;
      sub_21F13DCD4();
      sub_21F1574A0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v64);
      swift_bridgeObjectRelease();
      v75[1](v23, v30);
      uint64_t v33 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v34 = 5;
      break;
    case 6:
      char v84 = 6;
      sub_21F13DC80();
      uint64_t v43 = v67;
      uint64_t v44 = v30;
      sub_21F1574A0();
      char v83 = 0;
      uint64_t v45 = v65;
      uint64_t v33 = sub_21F1574E0();
      uint64_t v34 = v47;
      unint64_t v73 = v23;
      char v82 = 1;
      uint64_t v48 = sub_21F1574E0();
      uint64_t v36 = v49;
      ++v75;
      uint64_t v35 = v48;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v45);
      swift_bridgeObjectRelease();
      (*v75)(v73, v44);
      break;
    default:
      char v76 = 0;
      sub_21F13DE78();
      uint64_t v32 = v53;
      sub_21F1574A0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v51);
      swift_bridgeObjectRelease();
      v75[1](v23, v30);
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      break;
  }
  uint64_t v41 = (uint64_t)v74;
  uint64_t v46 = v68;
  *uint64_t v68 = v33;
  v46[1] = v34;
  _OWORD v46[2] = v35;
  v46[3] = v36;
  return __swift_destroy_boxed_opaque_existential_0(v41);
}

uint64_t sub_21F1373A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PFLTaskSource.init(from:)(a1, a2);
}

uint64_t sub_21F1373BC(void *a1)
{
  return PFLTaskSource.encode(to:)(a1);
}

uint64_t Dictionary<>.parameter<A>(for:default:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21F1571C0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v22 - v16;
  if (*(void *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_21F10E9C8(a1, a2);
    if (v19)
    {
      sub_21F0ED61C(*(void *)(a4 + 56) + 32 * v18, (uint64_t)&v24);
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F8);
  int v20 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, v20 ^ 1u, 1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, a5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23, v13, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23, v17, a5);
  }
}

uint64_t sub_21F137668()
{
  return swift_retain();
}

uint64_t PFLTaskDiscovery.init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v37 = a8;
  uint64_t v36 = a7;
  HIDWORD(v35) = a6;
  uint64_t v15 = type metadata accessor for PFLTaskPreferences(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)(v9 + 120) = 0;
  *(_OWORD *)(v9 + 104) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(void *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries) = 0;
  uint64_t v18 = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
  type metadata accessor for PerformanceMeasure();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = MEMORY[0x263F8EE80];
  *(void *)(v9 + v18) = v19;
  *(void *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds) = 0;
  *(void *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds) = 0;
  uint64_t v38 = a1;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  if (*((unsigned char *)a5 + *(int *)(v15 + 24)) == 1)
  {
    int v20 = (uint64_t *)((char *)a5 + *(int *)(v15 + 20));
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    unint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    sub_21F0F0BA4((uint64_t)a5, (uint64_t)v17);
    if (v22 == 6)
    {
      uint64_t v21 = *v17;
      unint64_t v23 = v17[1];
      uint64_t v25 = v17[2];
      uint64_t v24 = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F0FC10C(v21, v23);
      sub_21F0F0C08((uint64_t)v17);
      if (v23 == 3)
      {
        uint64_t v21 = 0;
        unint64_t v23 = 0;
        uint64_t v24 = 0;
        unint64_t v22 = 4;
      }
      else if (v23)
      {
        unint64_t v26 = v25;
        unint64_t v22 = v23;
        unint64_t v23 = v26;
      }
      else
      {
        unint64_t v22 = 1;
        uint64_t v21 = 0;
        uint64_t v24 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F13DECC(v21, v22);
      sub_21F0F0C08((uint64_t)v17);
    }
  }
  else
  {
    uint64_t v21 = *a5;
    unint64_t v22 = a5[1];
    unint64_t v23 = a5[2];
    uint64_t v24 = a5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F0FC10C(v21, v22);
  }
  uint64_t v43 = v21;
  unint64_t v44 = v22;
  unint64_t v45 = v23;
  uint64_t v46 = v24;
  sub_21F137B74(&v43, a3, a4, BYTE4(v35) & 1, (uint64_t *)v47);
  swift_bridgeObjectRelease();
  sub_21F0FC0C4(v21, v22);
  sub_21F0FB5B4(v47, v9 + 48);
  type metadata accessor for PopulationSegmentation();
  swift_initStackObject();
  sub_21F10D47C();
  *(void *)&v47[0] = 0x2D676553706F50;
  *((void *)&v47[0] + 1) = 0xE700000000000000;
  uint64_t v43 = v38;
  unint64_t v44 = a2;
  uint64_t v41 = 46;
  unint64_t v42 = 0xE100000000000000;
  uint64_t v39 = 95;
  unint64_t v40 = 0xE100000000000000;
  sub_21F0FB854();
  sub_21F157220();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  unint64_t v27 = sub_21F10DE34(*(uint64_t *)&v47[0], *((uint64_t *)&v47[0] + 1));
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v29)
  {
    swift_release();
  }
  else
  {
    int64_t v30 = sub_21F13D94C(0x64uLL) + 1;
    if (v30 <= 100)
    {
      uint64_t v31 = v38;
      if (v30 < 91)
      {
        if (v30 <= 80) {
          unint64_t v27 = 0x6E69617274;
        }
        else {
          unint64_t v27 = 7102838;
        }
        if (v30 <= 80) {
          uint64_t v29 = 0xE500000000000000;
        }
        else {
          uint64_t v29 = 0xE300000000000000;
        }
      }
      else
      {
        uint64_t v29 = 0xE400000000000000;
        unint64_t v27 = 1953719668;
      }
    }
    else
    {
      uint64_t v29 = 0xEB00000000646572;
      unint64_t v27 = 0x6574736575716573;
      uint64_t v31 = v38;
    }
    *(void *)&v47[0] = 0x2D676553706F50;
    *((void *)&v47[0] + 1) = 0xE700000000000000;
    uint64_t v43 = v31;
    unint64_t v44 = a2;
    uint64_t v41 = 46;
    unint64_t v42 = 0xE100000000000000;
    uint64_t v39 = 95;
    unint64_t v40 = 0xE100000000000000;
    sub_21F157220();
    sub_21F156DD0();
    swift_bridgeObjectRelease();
    sub_21F10DCDC(*(uint64_t *)&v47[0], *((uint64_t *)&v47[0] + 1), v27, v29);
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(void *)(v9 + 128) = v27;
  *(void *)(v9 + 136) = v29;
  sub_21F11B784((uint64_t)a5, v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences);
  uint64_t v32 = (void *)(v9 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting);
  uint64_t v33 = v37;
  *uint64_t v32 = v36;
  v32[1] = v33;
  return v9;
}

uint64_t sub_21F137B74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v9 = a1[3];
  if (v7 < 3)
  {
    *(void *)&long long v19 = *a1;
    *((void *)&v19 + 1) = v7;
    uint64_t v20 = v10;
    uint64_t v21 = v9;
    uint64_t v16 = type metadata accessor for PFLDodMLTaskDownloader();
    swift_allocObject();
    sub_21F0FC10C(v8, v7);
    uint64_t result = sub_21F113BE0(&v19, a4 & 1);
    uint64_t v15 = &off_26D0ADCE8;
    a5[3] = v16;
    goto LABEL_5;
  }
  if (v7 - 3 < 3)
  {
    *(void *)&long long v19 = *a1;
    *((void *)&v19 + 1) = v7;
    uint64_t v20 = v10;
    uint64_t v21 = v9;
    uint64_t v13 = type metadata accessor for PFLCKTaskDownloader();
    swift_allocObject();
    sub_21F0FC10C(v8, v7);
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t)sub_21F0F68D4((uint64_t *)&v19, a2, a3, a4 & 1);
    uint64_t v15 = &off_26D0AD750;
    a5[3] = v13;
LABEL_5:
    a5[4] = (uint64_t)v15;
    *a5 = result;
    return result;
  }
  uint64_t v17 = type metadata accessor for PFLLocalTaskDownloader();
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v8;
  void v18[3] = v7;
  void v18[4] = v10;
  v18[5] = v9;
  a5[3] = v17;
  a5[4] = (uint64_t)&off_26D0AE268;
  *a5 = (uint64_t)v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_21F137D10()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2) {
    __break(1u);
  }
  else {
    *(void *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries) = v3;
  }
}

uint64_t sub_21F137D30()
{
  *(void *)(v1 + 616) = v0;
  return MEMORY[0x270FA2498](sub_21F137D50, 0, 0);
}

uint64_t sub_21F137D50()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 616) + 88;
  swift_beginAccess();
  sub_21F13DEDC(v1, v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_21F13DF44(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 616);
  if (v2)
  {
    sub_21F13DEDC((uint64_t)(v3 + 11), v0 + 176);
    if (*(void *)(v0 + 200))
    {
      sub_21F0FB5B4((long long *)(v0 + 176), v0 + 136);
      uint64_t v4 = *(void *)(v0 + 160);
      uint64_t v5 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v4);
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))(v7, v5, v4);
      *(void *)(v0 + 240) = swift_getAssociatedTypeWitness();
      *(void *)(v0 + 248) = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 216));
      sub_21F156EB0();
      swift_task_dealloc();
      *(void *)(v0 + 712) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
      *(void *)(v0 + 720) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences;
      *(void *)(v0 + 728) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
      *(void *)(v0 + 736) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
      *(void *)(v0 + 744) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting;
      __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
      sub_21F1571E0();
      if (*(void *)(v0 + 280))
      {
        uint64_t v8 = *(void *)(v0 + 616);
        uint64_t v9 = *(void *)(v0 + 712);
        sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
        uint64_t v10 = *(void *)(v8 + v9);
        uint64_t v11 = *(void *)(v0 + 160);
        uint64_t v12 = *(void *)(v0 + 168);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v11);
        if (v10 < (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12))
        {
          uint64_t v13 = *(void **)(v0 + 616);
          uint64_t v14 = (char *)v13 + *(void *)(v0 + 720);
          *(void *)(v0 + 464) = 0;
          *(void *)(v0 + 472) = 0xE000000000000000;
          sub_21F157300();
          swift_bridgeObjectRelease();
          *(void *)(v0 + 752) = v13[2];
          *(void *)(v0 + 760) = v13[3];
          uint64_t v15 = *(void *)(v0 + 320);
          uint64_t v16 = *(void *)(v0 + 328);
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v15);
          (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
          *(void *)(v0 + 768) = v17;
          *(void *)(v0 + 776) = v13[4];
          *(void *)(v0 + 784) = v13[5];
          uint64_t v19 = *(void *)(v0 + 320);
          uint64_t v18 = *(void *)(v0 + 328);
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v19);
          uint64_t v20 = v13[16];
          uint64_t v21 = v13[17];
          uint64_t v22 = type metadata accessor for PFLTaskPreferences(0);
          if (v14[*(int *)(v22 + 24)] == 1
            && (unint64_t v23 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v22 + 20) + 32)) != 0)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            unint64_t v23 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
          }
          (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v18 + 8))(v20, v21, v23, v19, v18);
          *(void *)(v0 + 792) = 0;
          swift_bridgeObjectRelease();
          uint64_t v39 = (char *)&dword_267EBEE20 + dword_267EBEE20;
          uint64_t v37 = (void *)swift_task_alloc();
          *(void *)(v0 + 800) = v37;
          void *v37 = v0;
          v37[1] = sub_21F1398C4;
          uint64_t v43 = 0;
          uint64_t v44 = 0;
          char v46 = 1;
          unint64_t v45 = 0xE000000000000000;
          __asm { BR              X8; sub_21F141508 }
        }
        __swift_destroy_boxed_opaque_existential_0(v0 + 296);
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 216);
      __swift_destroy_boxed_opaque_existential_0(v0 + 136);
    }
    else
    {
      sub_21F13DF44(v0 + 176);
    }
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36(0);
  }
  else
  {
    uint64_t v24 = v3[10];
    __swift_project_boxed_opaque_existential_1(v3 + 6, v3[9]);
    *(void *)(v0 + 624) = v3[2];
    *(void *)(v0 + 632) = v3[3];
    uint64_t v25 = (*(uint64_t (**)(void))(v24 + 16))();
    unint64_t v27 = v26;
    *(void *)(v0 + 640) = v25;
    *(void *)(v0 + 648) = v26;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_21F156B90();
    *(void *)(v0 + 656) = __swift_project_value_buffer(v28, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_21F156B70();
    os_log_type_t v30 = sub_21F157110();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v40[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 544) = sub_21F103FD0(v25, v27, v40);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F0DC000, v29, v30, "Start download policy %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v32, -1, -1);
      MEMORY[0x223C45170](v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v33 = *(void *)(v0 + 616);
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    sub_21F157300();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 664) = *(void *)(v33 + 32);
    *(void *)(v0 + 672) = *(void *)(v33 + 40);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 680) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_21F1385E8;
    uint64_t v35 = *(void *)(v0 + 616);
    v34[16] = v0 + 96;
    v34[17] = v35;
    return MEMORY[0x270FA2498](sub_21F13CEA4, 0, 0);
  }
}

uint64_t sub_21F1385E8()
{
  *(void *)(*(void *)v1 + 688) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21F138F5C;
  }
  else {
    uint64_t v2 = sub_21F1386FC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_21F1386FC()
{
  uint64_t v1 = *(void *)(v0 + 616) + 88;
  sub_21F13DFB4(v0 + 96, v0 + 336);
  swift_beginAccess();
  sub_21F13E01C(v0 + 336, v1);
  swift_endAccess();
  uint64_t v3 = (char *)&dword_267EBEE20 + dword_267EBEE20;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v2;
  void *v2 = v0;
  v2[1] = sub_21F138830;
  __asm { BR              X8; sub_21F141508 }
}

uint64_t sub_21F138830()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F13892C, 0, 0);
}

uint64_t sub_21F13892C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 688);
  sub_21F13DEDC(*(void *)(v0 + 616) + 88, v0 + 176);
  if (*(void *)(v0 + 200))
  {
    sub_21F0FB5B4((long long *)(v0 + 176), v0 + 136);
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v2);
    uint64_t v4 = *(void *)(v2 - 8);
    uint64_t v5 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 16))(v5, v3, v2);
    *(void *)(v0 + 240) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 248) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 216));
    sub_21F156EB0();
    swift_task_dealloc();
    *(void *)(v0 + 712) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
    *(void *)(v0 + 720) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences;
    *(void *)(v0 + 728) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
    *(void *)(v0 + 736) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
    *(void *)(v0 + 744) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
    sub_21F1571E0();
    if (*(void *)(v0 + 280))
    {
      uint64_t v6 = *(void *)(v0 + 616);
      uint64_t v7 = *(void *)(v0 + 712);
      sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
      uint64_t v8 = *(void *)(v6 + v7);
      uint64_t v9 = *(void *)(v0 + 160);
      uint64_t v10 = *(void *)(v0 + 168);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v9);
      if (v8 < (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10))
      {
        uint64_t v11 = *(void **)(v0 + 616);
        uint64_t v12 = (char *)v11 + *(void *)(v0 + 720);
        *(void *)(v0 + 464) = 0;
        *(void *)(v0 + 472) = 0xE000000000000000;
        sub_21F157300();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 752) = v11[2];
        *(void *)(v0 + 760) = v11[3];
        uint64_t v13 = *(void *)(v0 + 320);
        uint64_t v14 = *(void *)(v0 + 328);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v13);
        (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
        *(void *)(v0 + 768) = v15;
        *(void *)(v0 + 776) = v11[4];
        *(void *)(v0 + 784) = v11[5];
        uint64_t v17 = *(void *)(v0 + 320);
        uint64_t v16 = *(void *)(v0 + 328);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v17);
        uint64_t v19 = v11[16];
        uint64_t v18 = v11[17];
        uint64_t v20 = type metadata accessor for PFLTaskPreferences(0);
        if (v12[*(int *)(v20 + 24)] == 1
          && (unint64_t v21 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v20 + 20) + 32)) != 0)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          unint64_t v21 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
        }
        (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v16 + 8))(v19, v18, v21, v17, v16);
        *(void *)(v0 + 792) = v1;
        swift_bridgeObjectRelease();
        if (v1)
        {
          *(void *)(v0 + 584) = v1;
          id v24 = v1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE560);
          if (!swift_dynamicCast())
          {
            *(void *)(v0 + 568) = v1;
            id v27 = v1;
            if ((swift_dynamicCast() & 1) == 0)
            {
              uint64_t v28 = (void *)sub_21F1566E0();
              objc_msgSend(v28, sel_code);
            }
          }
          uint64_t v29 = (void *)sub_21F1566E0();
          id v30 = objc_msgSend(v29, sel_domain);

          sub_21F156CC0();
          uint64_t v32 = v31;

          *(void *)(v0 + 840) = v32;
          uint64_t v35 = (char *)&dword_267EBEE20 + dword_267EBEE20;
          uint64_t v33 = (void *)swift_task_alloc();
          *(void *)(v0 + 848) = v33;
          *uint64_t v33 = v0;
          v33[1] = sub_21F139C98;
          unint64_t v26 = v35;
        }
        else
        {
          uint64_t v34 = (char *)&dword_267EBEE20 + dword_267EBEE20;
          uint64_t v25 = (void *)swift_task_alloc();
          *(void *)(v0 + 800) = v25;
          *uint64_t v25 = v0;
          v25[1] = sub_21F1398C4;
          unint64_t v26 = v34;
        }
        __asm { BR              X8 }
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 296);
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 216);
    __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  }
  else
  {
    sub_21F13DF44(v0 + 176);
  }
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22(0);
}

void sub_21F138F5C()
{
  uint64_t v2 = (char *)&dword_267EBEE10 + dword_267EBEE10;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 704) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_21F139040;
  __asm { BR              X8; sub_21F141ADC }
}

uint64_t sub_21F139040()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F13913C, 0, 0);
}

uint64_t sub_21F13913C()
{
  uint64_t v1 = (long long *)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 688);
  swift_willThrow();
  swift_bridgeObjectRelease();
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_21F156B70();
  os_log_type_t v6 = sub_21F157120();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void **)(v0 + 688);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 608) = v11;
    sub_21F1571F0();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_21F0DC000, v5, v6, "Failed to download policy with error %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    uint64_t v12 = v9;
    uint64_t v1 = (long long *)(v0 + 176);
    MEMORY[0x223C45170](v12, -1, -1);
    MEMORY[0x223C45170](v8, -1, -1);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 688);
  }
  sub_21F13DEDC(*(void *)(v0 + 616) + 88, (uint64_t)v1);
  if (*(void *)(v0 + 200))
  {
    sub_21F0FB5B4(v1, v0 + 136);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v14);
    uint64_t v16 = *(void *)(v14 - 8);
    uint64_t v17 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v16 + 16))(v17, v15, v14);
    *(void *)(v0 + 240) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 248) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 216));
    sub_21F156EB0();
    swift_task_dealloc();
    *(void *)(v0 + 712) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_numDeliveries;
    *(void *)(v0 + 720) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences;
    *(void *)(v0 + 728) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm;
    *(void *)(v0 + 736) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds;
    *(void *)(v0 + 744) = OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
    sub_21F1571E0();
    if (*(void *)(v0 + 280))
    {
      uint64_t v18 = *(void *)(v0 + 616);
      uint64_t v19 = *(void *)(v0 + 712);
      sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
      uint64_t v20 = *(void *)(v18 + v19);
      uint64_t v21 = *(void *)(v0 + 160);
      uint64_t v22 = *(void *)(v0 + 168);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v21);
      if (v20 < (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22))
      {
        unint64_t v23 = *(void **)(v0 + 616);
        id v24 = (char *)v23 + *(void *)(v0 + 720);
        *(void *)(v0 + 464) = 0;
        *(void *)(v0 + 472) = 0xE000000000000000;
        sub_21F157300();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 752) = v23[2];
        *(void *)(v0 + 760) = v23[3];
        uint64_t v25 = *(void *)(v0 + 320);
        uint64_t v26 = *(void *)(v0 + 328);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v25);
        (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
        *(void *)(v0 + 768) = v27;
        *(void *)(v0 + 776) = v23[4];
        *(void *)(v0 + 784) = v23[5];
        uint64_t v29 = *(void *)(v0 + 320);
        uint64_t v28 = *(void *)(v0 + 328);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v29);
        uint64_t v30 = v23[16];
        uint64_t v31 = v23[17];
        uint64_t v32 = type metadata accessor for PFLTaskPreferences(0);
        if (v24[*(int *)(v32 + 24)] == 1
          && (unint64_t v33 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v32 + 20) + 32)) != 0)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          unint64_t v33 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
        }
        (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v28 + 8))(v30, v31, v33, v29, v28);
        *(void *)(v0 + 792) = 0;
        swift_bridgeObjectRelease();
        uint64_t v37 = (char *)&dword_267EBEE20 + dword_267EBEE20;
        uint64_t v36 = (void *)swift_task_alloc();
        *(void *)(v0 + 800) = v36;
        *uint64_t v36 = v0;
        v36[1] = sub_21F1398C4;
        __asm { BR              X8; sub_21F141508 }
      }
      __swift_destroy_boxed_opaque_existential_0(v0 + 296);
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 216);
    __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  }
  else
  {
    sub_21F13DF44((uint64_t)v1);
  }
  uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34(0);
}

uint64_t sub_21F1398C4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F1399C0, 0, 0);
}

uint64_t sub_21F1399C0()
{
  uint64_t v1 = v0[91];
  uint64_t v2 = v0[90];
  id v3 = (char *)v0[77];
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)&v3[v1];
  v0[101] = v4;
  double Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v4 + 16);
  *(void *)(v4 + 16) = 0x8000000000000000;
  sub_21F10EFAC(0x6E776F446B736154, 0xEC00000064616F6CLL, isUniquelyReferenced_nonNull_native, Current);
  *(void *)(v4 + 16) = v12;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v7 = *((void *)v3 + 9);
  uint64_t v8 = *((void *)v3 + 10);
  __swift_project_boxed_opaque_existential_1((void *)v3 + 6, v7);
  uint64_t v11 = (uint64_t (*)(void *, char *, uint64_t, uint64_t))(*(void *)(v8 + 24) + **(int **)(v8 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[102] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_21F139B80;
  return v11(v0 + 37, &v3[v2], v7, v8);
}

uint64_t sub_21F139B80(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 824) = a1;
  *(void *)(v3 + 832) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_21F13C524;
  }
  else {
    uint64_t v4 = sub_21F13A29C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_21F139C98()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F139DB0, 0, 0);
}

uint64_t sub_21F139DB0()
{
  uint64_t v1 = *(void **)(v0 + 792);
  swift_willThrow();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
  sub_21F1571E0();
  if (*(void *)(v0 + 280))
  {
    uint64_t v2 = *(void *)(v0 + 712);
    uint64_t v3 = *(void *)(v0 + 616);
    sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
    uint64_t v4 = *(void *)(v3 + v2);
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v5);
    if (v4 < (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6))
    {
      uint64_t v7 = *(void **)(v0 + 616);
      uint64_t v8 = (char *)v7 + *(void *)(v0 + 720);
      *(void *)(v0 + 464) = 0;
      *(void *)(v0 + 472) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 752) = v7[2];
      *(void *)(v0 + 760) = v7[3];
      uint64_t v9 = *(void *)(v0 + 320);
      uint64_t v10 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v9);
      (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
      *(void *)(v0 + 768) = v11;
      *(void *)(v0 + 776) = v7[4];
      *(void *)(v0 + 784) = v7[5];
      uint64_t v13 = *(void *)(v0 + 320);
      uint64_t v12 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v13);
      uint64_t v14 = v7[16];
      uint64_t v15 = v7[17];
      uint64_t v16 = type metadata accessor for PFLTaskPreferences(0);
      if (v8[*(int *)(v16 + 24)] == 1
        && (unint64_t v17 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v16 + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v17 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 8))(v14, v15, v17, v13, v12);
      *(void *)(v0 + 792) = 0;
      swift_bridgeObjectRelease();
      uint64_t v21 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 800) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_21F1398C4;
      __asm { BR              X8; sub_21F141508 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18(0);
}

void sub_21F13A29C()
{
  uint64_t v1 = v0 + 37;
  uint64_t v2 = v0[92];
  uint64_t v3 = v0[77];
  *(double *)(v3 + v2) = sub_21F10E6C0(0x6E776F446B736154, 0xEC00000064616F6CLL);
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_21F156B90();
  __swift_project_value_buffer(v4, (uint64_t)qword_267EBEF18);
  sub_21F105934((uint64_t)(v0 + 37), (uint64_t)(v0 + 7));
  uint64_t v5 = sub_21F156B70();
  os_log_type_t v6 = sub_21F157110();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = v0[10];
    uint64_t v10 = v0[11];
    __swift_project_boxed_opaque_existential_1(v0 + 7, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    v0[75] = sub_21F103FD0(v11, v12, &v18);
    uint64_t v1 = v0 + 37;
    sub_21F1571F0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
    _os_log_impl(&dword_21F0DC000, v5, v6, "Recipe %s is ready.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v8, -1, -1);
    MEMORY[0x223C45170](v7, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  }

  v0[64] = 0;
  v0[65] = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0[40];
  uint64_t v14 = v0[41];
  __swift_project_boxed_opaque_existential_1(v1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v0[107] = v15;
  unint64_t v17 = (char *)&dword_267EBEE20 + dword_267EBEE20;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[108] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_21F13A5C4;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  char v23 = 1;
  unint64_t v22 = 0xE000000000000000;
  __asm { BR              X8; sub_21F141508 }
}

uint64_t sub_21F13A5C4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F13A6DC, 0, 0);
}

void sub_21F13A6DC()
{
  v0[62] = 0;
  v0[63] = 0xE000000000000000;
  sub_21F157300();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[41];
  __swift_project_boxed_opaque_existential_1(v0 + 37, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v0[109] = v3;
  uint64_t v5 = (char *)&dword_267EBEE20 + dword_267EBEE20;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[110] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_21F13A82C;
  __asm { BR              X8; sub_21F141508 }
}

uint64_t sub_21F13A82C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F13A944, 0, 0);
}

void sub_21F13A944()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v1 + v0[93];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))v2;
  v0[111] = *(void *)v2;
  v0[112] = *(void *)(v2 + 8);
  if (v3)
  {
    uint64_t v18 = v0[104];
    uint64_t v4 = v0[103];
    uint64_t v5 = v0[98];
    uint64_t v6 = v0[97];
    v0[60] = 0;
    v0[61] = 0xE000000000000000;
    swift_retain();
    sub_21F157300();
    swift_bridgeObjectRelease();
    uint64_t v7 = v0[40];
    uint64_t v8 = v0[41];
    __swift_project_boxed_opaque_existential_1(v0 + 37, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    v0[113] = v9;
    v3(v4, v6, v5);
    v0[114] = v18;
    if (v18)
    {
      uint64_t v19 = (char *)&dword_267EBEE10 + dword_267EBEE10;
      uint64_t v10 = (void *)swift_task_alloc();
      v0[116] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_21F13AE0C;
      __asm { BR              X8; sub_21F141ADC }
    }
    uint64_t v20 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    unint64_t v17 = (void *)swift_task_alloc();
    v0[115] = v17;
    *unint64_t v17 = v0;
    v17[1] = sub_21F13AC50;
    __asm { BR              X8; sub_21F141508 }
  }
  uint64_t v11 = v0[89];
  uint64_t v12 = *(void *)(v1 + v11);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v0[103];
    *(void *)(v1 + v11) = v14;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 37));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 27));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 17));
    uint64_t v16 = (void (*)(uint64_t))v0[1];
    v16(v15);
  }
}

uint64_t sub_21F13AC50()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F13AD4C, 0, 0);
}

uint64_t sub_21F13AD4C()
{
  uint64_t v1 = v0[111];
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F13DFA4(v1);
  uint64_t v3 = v0[89];
  uint64_t v4 = v0[77];
  uint64_t v5 = *(void *)(v4 + v3);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v0[103];
    *(void *)(v4 + v3) = v7;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 37));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 27));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 17));
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  return result;
}

uint64_t sub_21F13AE0C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F13AF08, 0, 0);
}

uint64_t sub_21F13AF08()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 888);
  swift_willThrow();
  sub_21F13DFA4(v1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + 912);
  *(void *)(v0 + 936) = v2;
  *(void *)(v0 + 592) = v2;
  id v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE560);
  if (swift_dynamicCast())
  {
    char v4 = *(unsigned char *)(v0 + 448);
    *(unsigned char *)(v0 + 1003) = v4;
    uint64_t v5 = *(void **)(v0 + 456);
    *(void *)(v0 + 944) = v5;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_21F156B90();
    __swift_project_value_buffer(v6, (uint64_t)qword_267EBEF18);
    id v7 = v5;
    id v8 = v5;
    id v9 = v5;
    id v10 = v5;
    uint64_t v11 = sub_21F156B70();
    os_log_type_t v12 = sub_21F157110();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v51 = v48;
      *(_DWORD *)uint64_t v13 = 136315394;
      char v14 = v4;
      char v58 = v4;
      unint64_t v15 = PFLTaskDiscoveryReachLocation.description.getter();
      *(void *)(v0 + 552) = sub_21F103FD0(v15, v16, &v51);
      sub_21F1571F0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      id v17 = v5;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 560) = v18;
      sub_21F1571F0();
      *uint64_t v47 = v18;
      char v4 = v14;

      _os_log_impl(&dword_21F0DC000, v11, v12, "Failed to download task with location: %s, error %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v47, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v48, -1, -1);
      MEMORY[0x223C45170](v13, -1, -1);
    }
    else
    {
    }
    LOBYTE(v51) = v4;
    PFLTaskDiscoveryReachLocation.description.getter();
    *(void *)(v0 + 952) = v35;
    uint64_t v36 = *(void *)(v0 + 320);
    uint64_t v37 = *(void *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v36);
    (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
    *(void *)(v0 + 960) = v38;
    *(void *)(v0 + 576) = v5;
    id v39 = v5;
    if (swift_dynamicCast()) {
      char v40 = *(unsigned char *)(v0 + 1001);
    }
    else {
      char v40 = 0;
    }
    sub_21F0FB4FC();
    uint64_t v41 = swift_allocError();
    *uint64_t v42 = v40;
    *(void *)(v0 + 968) = v41;
    uint64_t v50 = (char *)&dword_267EBEE10 + dword_267EBEE10;
    uint64_t v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 976) = v43;
    *uint64_t v43 = v0;
    v43[1] = sub_21F13B7E8;
    char v57 = 1;
    unint64_t v56 = v41;
    __asm { BR              X8; sub_21F141ADC }
  }

  __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
  sub_21F1571E0();
  if (*(void *)(v0 + 280))
  {
    uint64_t v19 = *(void *)(v0 + 712);
    uint64_t v20 = *(void *)(v0 + 616);
    sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
    uint64_t v21 = *(void *)(v20 + v19);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v22);
    if (v21 < (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23))
    {
      id v24 = *(void **)(v0 + 616);
      uint64_t v25 = (char *)v24 + *(void *)(v0 + 720);
      *(void *)(v0 + 464) = 0;
      *(void *)(v0 + 472) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 752) = v24[2];
      *(void *)(v0 + 760) = v24[3];
      uint64_t v26 = *(void *)(v0 + 320);
      uint64_t v27 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v26);
      (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
      *(void *)(v0 + 768) = v28;
      *(void *)(v0 + 776) = v24[4];
      *(void *)(v0 + 784) = v24[5];
      uint64_t v29 = *(void *)(v0 + 320);
      uint64_t v30 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v29);
      uint64_t v31 = v24[16];
      uint64_t v32 = v24[17];
      uint64_t v33 = type metadata accessor for PFLTaskPreferences(0);
      if (v25[*(int *)(v33 + 24)] == 1
        && (unint64_t v34 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v33 + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v34 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v30 + 8))(v31, v32, v34, v29, v30);
      *(void *)(v0 + 792) = 0;
      swift_bridgeObjectRelease();
      uint64_t v49 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      char v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 800) = v46;
      *char v46 = v0;
      v46[1] = sub_21F1398C4;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      char v57 = 1;
      unint64_t v56 = 0xE000000000000000;
      __asm { BR              X8 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44(0);
}

uint64_t sub_21F13B7E8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 968);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F13B940, 0, 0);
}

uint64_t sub_21F13B940()
{
  if (*(unsigned char *)(v0 + 1003) == 5)
  {
    *(void *)(v0 + 528) = 0;
    *(void *)(v0 + 536) = 0xE000000000000000;
    sub_21F157300();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void *)(v0 + 320);
    uint64_t v2 = *(void *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v1);
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
    *(void *)(v0 + 984) = v3;
    uint64_t v27 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    char v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 992) = v4;
    *char v4 = v0;
    v4[1] = sub_21F13BF2C;
    uint64_t v5 = v27;
    goto LABEL_14;
  }
  uint64_t v6 = *(void **)(v0 + 944);

  __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
  sub_21F1571E0();
  if (*(void *)(v0 + 280))
  {
    uint64_t v7 = *(void *)(v0 + 712);
    uint64_t v8 = *(void *)(v0 + 616);
    sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v10);
    if (v9 < (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11))
    {
      os_log_type_t v12 = *(void **)(v0 + 616);
      uint64_t v13 = (char *)v12 + *(void *)(v0 + 720);
      *(void *)(v0 + 464) = 0;
      *(void *)(v0 + 472) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 752) = v12[2];
      *(void *)(v0 + 760) = v12[3];
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v15 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v14);
      (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      *(void *)(v0 + 768) = v16;
      *(void *)(v0 + 776) = v12[4];
      *(void *)(v0 + 784) = v12[5];
      uint64_t v18 = *(void *)(v0 + 320);
      uint64_t v17 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v18);
      uint64_t v20 = v12[16];
      uint64_t v19 = v12[17];
      uint64_t v21 = type metadata accessor for PFLTaskPreferences(0);
      if (v13[*(int *)(v21 + 24)] == 1
        && (unint64_t v22 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v21 + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v22 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v17 + 8))(v20, v19, v22, v18, v17);
      *(void *)(v0 + 792) = 0;
      swift_bridgeObjectRelease();
      uint64_t v26 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 800) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_21F1398C4;
      uint64_t v5 = v26;
LABEL_14:
      __asm { BR              X8; sub_21F141508 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23(0);
}

uint64_t sub_21F13BF2C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_21F13C044, 0, 0);
}

uint64_t sub_21F13C044()
{
  uint64_t v1 = *(void **)(v0 + 944);

  __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
  sub_21F1571E0();
  if (*(void *)(v0 + 280))
  {
    uint64_t v2 = *(void *)(v0 + 712);
    uint64_t v3 = *(void *)(v0 + 616);
    sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
    uint64_t v4 = *(void *)(v3 + v2);
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v5);
    if (v4 < (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6))
    {
      uint64_t v7 = *(void **)(v0 + 616);
      uint64_t v8 = (char *)v7 + *(void *)(v0 + 720);
      *(void *)(v0 + 464) = 0;
      *(void *)(v0 + 472) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 752) = v7[2];
      *(void *)(v0 + 760) = v7[3];
      uint64_t v9 = *(void *)(v0 + 320);
      uint64_t v10 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v9);
      (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
      *(void *)(v0 + 768) = v11;
      *(void *)(v0 + 776) = v7[4];
      *(void *)(v0 + 784) = v7[5];
      uint64_t v13 = *(void *)(v0 + 320);
      uint64_t v12 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v13);
      uint64_t v15 = v7[16];
      uint64_t v14 = v7[17];
      uint64_t v16 = type metadata accessor for PFLTaskPreferences(0);
      if (v8[*(int *)(v16 + 24)] == 1
        && (unint64_t v17 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v16 + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v17 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 8))(v15, v14, v17, v13, v12);
      *(void *)(v0 + 792) = 0;
      swift_bridgeObjectRelease();
      uint64_t v21 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 800) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_21F1398C4;
      __asm { BR              X8; sub_21F141508 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18(0);
}

uint64_t sub_21F13C524()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void **)(v0 + 832);
  uint64_t v2 = (void *)(v0 + 296);
  *(void *)(v0 + 936) = v1;
  *(void *)(v0 + 592) = v1;
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE560);
  if (swift_dynamicCast())
  {
    char v4 = *(unsigned char *)(v0 + 448);
    *(unsigned char *)(v0 + 1003) = v4;
    uint64_t v5 = *(void **)(v0 + 456);
    *(void *)(v0 + 944) = v5;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_21F156B90();
    __swift_project_value_buffer(v6, (uint64_t)qword_267EBEF18);
    id v7 = v5;
    id v8 = v5;
    id v9 = v5;
    id v10 = v5;
    uint64_t v11 = sub_21F156B70();
    os_log_type_t v12 = sub_21F157110();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v51 = v48;
      *(_DWORD *)uint64_t v13 = 136315394;
      char v58 = v4;
      unint64_t v15 = PFLTaskDiscoveryReachLocation.description.getter();
      *(void *)(v0 + 552) = sub_21F103FD0(v15, v16, &v51);
      sub_21F1571F0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      id v17 = v5;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 560) = v18;
      sub_21F1571F0();
      *uint64_t v14 = v18;

      _os_log_impl(&dword_21F0DC000, v11, v12, "Failed to download task with location: %s, error %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v48, -1, -1);
      uint64_t v19 = v13;
      uint64_t v2 = (void *)(v0 + 296);
      MEMORY[0x223C45170](v19, -1, -1);
    }
    else
    {
    }
    LOBYTE(v51) = v4;
    PFLTaskDiscoveryReachLocation.description.getter();
    *(void *)(v0 + 952) = v36;
    uint64_t v37 = *(void *)(v0 + 320);
    uint64_t v38 = *(void *)(v0 + 328);
    __swift_project_boxed_opaque_existential_1(v2, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    *(void *)(v0 + 960) = v39;
    *(void *)(v0 + 576) = v5;
    id v40 = v5;
    if (swift_dynamicCast()) {
      char v41 = *(unsigned char *)(v0 + 1001);
    }
    else {
      char v41 = 0;
    }
    sub_21F0FB4FC();
    uint64_t v42 = swift_allocError();
    *uint64_t v43 = v41;
    *(void *)(v0 + 968) = v42;
    uint64_t v50 = (char *)&dword_267EBEE10 + dword_267EBEE10;
    uint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v0 + 976) = v44;
    *uint64_t v44 = v0;
    v44[1] = sub_21F13B7E8;
    char v57 = 1;
    unint64_t v56 = v42;
    __asm { BR              X8; sub_21F141ADC }
  }

  __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 216, *(void *)(v0 + 240));
  sub_21F1571E0();
  if (*(void *)(v0 + 280))
  {
    uint64_t v20 = *(void *)(v0 + 712);
    uint64_t v21 = *(void *)(v0 + 616);
    sub_21F0FB5B4((long long *)(v0 + 256), v0 + 296);
    uint64_t v22 = *(void *)(v21 + v20);
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 168);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v23);
    if (v22 < (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24))
    {
      uint64_t v25 = *(void **)(v0 + 616);
      uint64_t v26 = (char *)v25 + *(void *)(v0 + 720);
      *(void *)(v0 + 464) = 0;
      *(void *)(v0 + 472) = 0xE000000000000000;
      sub_21F157300();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 752) = v25[2];
      *(void *)(v0 + 760) = v25[3];
      uint64_t v27 = *(void *)(v0 + 320);
      uint64_t v28 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v27);
      (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
      *(void *)(v0 + 768) = v29;
      *(void *)(v0 + 776) = v25[4];
      *(void *)(v0 + 784) = v25[5];
      uint64_t v30 = *(void *)(v0 + 320);
      uint64_t v31 = *(void *)(v0 + 328);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v30);
      uint64_t v32 = v25[16];
      uint64_t v33 = v25[17];
      uint64_t v34 = type metadata accessor for PFLTaskPreferences(0);
      if (v26[*(int *)(v34 + 24)] == 1
        && (unint64_t v35 = *(void *)(*(void *)(v0 + 616) + *(void *)(v0 + 720) + *(int *)(v34 + 20) + 32)) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v35 = sub_21F0FC2DC(MEMORY[0x263F8EE78]);
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v31 + 8))(v32, v33, v35, v30, v31);
      *(void *)(v0 + 792) = 0;
      swift_bridgeObjectRelease();
      uint64_t v49 = (char *)&dword_267EBEE20 + dword_267EBEE20;
      uint64_t v47 = (void *)swift_task_alloc();
      *(void *)(v0 + 800) = v47;
      *uint64_t v47 = v0;
      v47[1] = sub_21F1398C4;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      char v57 = 1;
      unint64_t v56 = 0xE000000000000000;
      __asm { BR              X8 }
    }
    __swift_destroy_boxed_opaque_existential_0(v0 + 296);
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 216);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  unint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45(0);
}

unint64_t sub_21F13CDD0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F1596F0;
  strcpy((char *)(inited + 32), "PolicyDownload");
  *(unsigned char *)(inited + 47) = -18;
  uint64_t v2 = MEMORY[0x263F8D538];
  *(void *)(inited + 48) = *(void *)(v0
                                       + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds);
  *(void *)(inited + 72) = v2;
  strcpy((char *)(inited + 80), "TaskDownload");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskDownloadTimeSeconds);
  *(void *)(inited + 120) = v2;
  *(void *)(inited + 96) = v3;
  return sub_21F0FC1B0(inited);
}

uint64_t sub_21F13CE84(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x270FA2498](sub_21F13CEA4, 0, 0);
}

uint64_t sub_21F13CEA4()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = *(void *)((char *)v1 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_pm);
  v0[18] = v2;
  double Current = CFAbsoluteTimeGetCurrent();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_21F10EFAC(0x6F447963696C6F50, 0xEE0064616F6C6E77, isUniquelyReferenced_nonNull_native, Current);
  *(void *)(v2 + 16) = v13;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v5 = v1[9];
  uint64_t v6 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v5);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  os_log_type_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  id v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  *id v9 = v0;
  v9[1] = sub_21F13D05C;
  uint64_t v10 = v0[16];
  return v12(v10, v7, v8, v5, v6);
}

uint64_t sub_21F13D05C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_21F13D190, 0, 0);
  }
}

uint64_t sub_21F13D190()
{
  id v17 = v0;
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[20];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0(v0[16]);
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[16];
    uint64_t v7 = sub_21F156B90();
    __swift_project_value_buffer(v7, (uint64_t)qword_267EBEF18);
    sub_21F105934(v6, (uint64_t)(v0 + 2));
    uint64_t v8 = sub_21F156B70();
    os_log_type_t v9 = sub_21F157110();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v16 = v11;
      sub_21F105934((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEDF8);
      uint64_t v12 = sub_21F156D00();
      v0[15] = sub_21F103FD0(v12, v13, &v16);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
      _os_log_impl(&dword_21F0DC000, v8, v9, "Policy downloaded %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v11, -1, -1);
      MEMORY[0x223C45170](v10, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    }

    uint64_t v14 = v0[17];
    *(double *)(v14 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_policyDownloadTimeSeconds) = sub_21F10E6C0(0x6F447963696C6F50, 0xEE0064616F6C6E77);
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t PFLTaskDiscovery.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  sub_21F13DF44(v0 + 88);
  swift_bridgeObjectRelease();
  sub_21F0F0C08(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_taskPreferences);
  swift_release();
  sub_21F13DFA4(*(void *)(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning16PFLTaskDiscovery_customTargeting));
  return v0;
}

uint64_t PFLTaskDiscovery.__deallocating_deinit()
{
  PFLTaskDiscovery.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F13D4E8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_21F13D598;
  v4[77] = v3;
  return MEMORY[0x270FA2498](sub_21F137D50, 0, 0);
}

uint64_t sub_21F13D598(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_21F13D6AC(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v4 = sub_21F156FA0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v3[4] = v4;
  v3[5] = v6;
  return MEMORY[0x270FA2498](sub_21F13D74C, v4, v6);
}

uint64_t sub_21F13D74C()
{
  uint64_t v1 = **(void **)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  void *v2 = v0;
  v2[1] = sub_21F13D7FC;
  v2[77] = v1;
  return MEMORY[0x270FA2498](sub_21F137D50, 0, 0);
}

uint64_t sub_21F13D7FC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 32);
  return MEMORY[0x270FA2498](sub_21F13D924, v4, v3);
}

uint64_t sub_21F13D924()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21F13D94C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x223C45180](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x223C45180](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F13D9D8(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = result;
    unsigned int v2 = result;
    uint64_t v6 = 0;
    MEMORY[0x223C45180](&v6, 8);
    unint64_t v3 = v6 * (unint64_t)v2;
    uint64_t result = HIDWORD(v3);
    if (v3 < v1)
    {
      unsigned int v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          uint64_t v6 = 0;
          MEMORY[0x223C45180](&v6, 8);
          int64_t v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s24PrivateFederatedLearning13PFLTaskSourceO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  switch(v3)
  {
    case 0uLL:
      if (v7) {
        goto LABEL_25;
      }
      unint64_t v3 = 0;
      char v10 = 1;
      break;
    case 1uLL:
      if (v7 != 1) {
        goto LABEL_25;
      }
      unint64_t v3 = 1;
      char v10 = 1;
      break;
    case 2uLL:
      if (v7 != 2) {
        goto LABEL_25;
      }
      char v10 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v7 != 3) {
        goto LABEL_25;
      }
      char v10 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v7 != 4) {
        goto LABEL_25;
      }
      char v10 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v7 != 5) {
        goto LABEL_25;
      }
      char v10 = 1;
      unint64_t v3 = 5;
      break;
    default:
      if (v7 < 6)
      {
LABEL_25:
        char v10 = 0;
      }
      else
      {
        BOOL v11 = v2 == v6 && v3 == v7;
        if (v11 || (char v10 = 0, (sub_21F157600() & 1) != 0))
        {
          if (v4 == v8 && v5 == v9) {
            char v10 = 1;
          }
          else {
            char v10 = sub_21F157600();
          }
        }
      }
      sub_21F0FC10C(v6, v7);
      sub_21F0FC10C(v2, v3);
      break;
  }
  sub_21F0FC0C4(v2, v3);
  sub_21F0FC0C4(v6, v7);
  return v10 & 1;
}

unint64_t sub_21F13DC2C()
{
  unint64_t result = qword_267EBEC70;
  if (!qword_267EBEC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEC70);
  }
  return result;
}

unint64_t sub_21F13DC80()
{
  unint64_t result = qword_267EBEC78;
  if (!qword_267EBEC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEC78);
  }
  return result;
}

unint64_t sub_21F13DCD4()
{
  unint64_t result = qword_267EBEC80;
  if (!qword_267EBEC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEC80);
  }
  return result;
}

unint64_t sub_21F13DD28()
{
  unint64_t result = qword_267EBEC88;
  if (!qword_267EBEC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEC88);
  }
  return result;
}

unint64_t sub_21F13DD7C()
{
  unint64_t result = qword_267EBEC90;
  if (!qword_267EBEC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEC90);
  }
  return result;
}

unint64_t sub_21F13DDD0()
{
  unint64_t result = qword_267EBEC98;
  if (!qword_267EBEC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEC98);
  }
  return result;
}

unint64_t sub_21F13DE24()
{
  unint64_t result = qword_267EBECA0;
  if (!qword_267EBECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBECA0);
  }
  return result;
}

unint64_t sub_21F13DE78()
{
  unint64_t result = qword_267EBECA8;
  if (!qword_267EBECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBECA8);
  }
  return result;
}

uint64_t sub_21F13DECC(uint64_t a1, unint64_t a2)
{
  if (a2 != 6) {
    return sub_21F0FC10C(a1, a2);
  }
  return a1;
}

uint64_t sub_21F13DEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBED00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F13DF44(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBED00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F13DFA4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_21F13DFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBED00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F13E01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBED00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F13E088()
{
  unint64_t result = qword_267EBED10;
  if (!qword_267EBED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED10);
  }
  return result;
}

unint64_t sub_21F13E0E0()
{
  unint64_t result = qword_267EBED18;
  if (!qword_267EBED18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBED20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED18);
  }
  return result;
}

unint64_t sub_21F13E140()
{
  unint64_t result = qword_267EBED28[0];
  if (!qword_267EBED28[0])
  {
    type metadata accessor for PFLTaskDiscovery();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267EBED28);
  }
  return result;
}

uint64_t type metadata accessor for PFLTaskDiscovery()
{
  uint64_t result = qword_267EBED50;
  if (!qword_267EBED50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F13E1E4()
{
  return MEMORY[0x263F8E658];
}

uint64_t getEnumTagSinglePayload for PFLTaskDiscoveryReachLocation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PFLTaskDiscoveryReachLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F13E34CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskDiscoveryReachLocation()
{
  return &type metadata for PFLTaskDiscoveryReachLocation;
}

unint64_t destroy for PFLTaskSource(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PFLTaskSource(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for PFLTaskSource(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PFLTaskSource(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PFLTaskSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PFLTaskSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_21F13E64C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_21F13E664(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskSource()
{
  return &type metadata for PFLTaskSource;
}

uint64_t dispatch thunk of PFLRecipeDescriptor.performTargeting(populationSegmentation:targetingSubjectOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PFLRecipeDescriptor.recipeId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PFLPolicy.validate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PFLPolicy.recipesLimit()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PFLTaskDownloader.downloadPolicy(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  BOOL v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *BOOL v11 = v5;
  v11[1] = sub_21F0FB170;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PFLTaskDownloader.policyId(plugin:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PFLTaskDownloader.downloadTask(rd:preference:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_21F1060AC;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_21F13E950()
{
  return type metadata accessor for PFLTaskDiscovery();
}

uint64_t sub_21F13E958()
{
  uint64_t result = type metadata accessor for PFLTaskPreferences(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PFLTaskDiscovery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PFLTaskDiscovery);
}

uint64_t dispatch thunk of PFLTaskDiscovery.makeAsyncIterator()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PFLTaskDiscovery.__allocating_init(for:useCase:taskPreferences:allowsCellularAccess:customTargeting:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of PFLTaskDiscovery.continueWithTaskFailure(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of PFLTaskDiscovery.next()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 296) + **(int **)(*(void *)v0 + 296));
  int v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_21F105E8C;
  return v4();
}

uint64_t dispatch thunk of PFLTaskDiscovery.getMetrics()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t initializeBufferWithCopyOfBuffer for PFLTaskLocationalError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = *(void **)(a2 + 8);
  id v4 = v3;
  *(void *)(a1 + 8) = v3;
  return a1;
}

void destroy for PFLTaskLocationalError(uint64_t a1)
{
}

uint64_t assignWithCopy for PFLTaskLocationalError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = *(void **)(a2 + 8);
  id v4 = v3;
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v3;

  return a1;
}

uint64_t assignWithTake for PFLTaskLocationalError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for PFLTaskLocationalError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PFLTaskLocationalError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskLocationalError()
{
  return &type metadata for PFLTaskLocationalError;
}

unsigned char *storeEnumTagSinglePayload for PFLTaskSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F13EDFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CodingKeys()
{
  return &type metadata for PFLTaskSource.CodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.DodMLProdCodingKeys()
{
  return &type metadata for PFLTaskSource.DodMLProdCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.DodMLCarryCodingKeys()
{
  return &type metadata for PFLTaskSource.DodMLCarryCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.DodMLStagingCodingKeys()
{
  return &type metadata for PFLTaskSource.DodMLStagingCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CKProdCodingKeys()
{
  return &type metadata for PFLTaskSource.CKProdCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CKCarryCodingKeys()
{
  return &type metadata for PFLTaskSource.CKCarryCodingKeys;
}

ValueMetadata *type metadata accessor for PFLTaskSource.CKStagingCodingKeys()
{
  return &type metadata for PFLTaskSource.CKStagingCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PFLTaskSource.LocalDirectoryCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F13EF60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLTaskSource.LocalDirectoryCodingKeys()
{
  return &type metadata for PFLTaskSource.LocalDirectoryCodingKeys;
}

unint64_t sub_21F13EF9C()
{
  unint64_t result = qword_267EBED68;
  if (!qword_267EBED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED68);
  }
  return result;
}

unint64_t sub_21F13EFF4()
{
  unint64_t result = qword_267EBED70;
  if (!qword_267EBED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED70);
  }
  return result;
}

unint64_t sub_21F13F04C()
{
  unint64_t result = qword_267EBED78;
  if (!qword_267EBED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED78);
  }
  return result;
}

unint64_t sub_21F13F0A4()
{
  unint64_t result = qword_267EBED80;
  if (!qword_267EBED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED80);
  }
  return result;
}

unint64_t sub_21F13F0FC()
{
  unint64_t result = qword_267EBED88;
  if (!qword_267EBED88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED88);
  }
  return result;
}

unint64_t sub_21F13F154()
{
  unint64_t result = qword_267EBED90;
  if (!qword_267EBED90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED90);
  }
  return result;
}

unint64_t sub_21F13F1AC()
{
  unint64_t result = qword_267EBED98;
  if (!qword_267EBED98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBED98);
  }
  return result;
}

unint64_t sub_21F13F204()
{
  unint64_t result = qword_267EBEDA0;
  if (!qword_267EBEDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDA0);
  }
  return result;
}

unint64_t sub_21F13F25C()
{
  unint64_t result = qword_267EBEDA8;
  if (!qword_267EBEDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDA8);
  }
  return result;
}

unint64_t sub_21F13F2B4()
{
  unint64_t result = qword_267EBEDB0;
  if (!qword_267EBEDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDB0);
  }
  return result;
}

unint64_t sub_21F13F30C()
{
  unint64_t result = qword_267EBEDB8;
  if (!qword_267EBEDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDB8);
  }
  return result;
}

unint64_t sub_21F13F364()
{
  unint64_t result = qword_267EBEDC0;
  if (!qword_267EBEDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDC0);
  }
  return result;
}

unint64_t sub_21F13F3BC()
{
  unint64_t result = qword_267EBEDC8;
  if (!qword_267EBEDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDC8);
  }
  return result;
}

unint64_t sub_21F13F414()
{
  unint64_t result = qword_267EBEDD0;
  if (!qword_267EBEDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDD0);
  }
  return result;
}

unint64_t sub_21F13F46C()
{
  unint64_t result = qword_267EBEDD8;
  if (!qword_267EBEDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDD8);
  }
  return result;
}

unint64_t sub_21F13F4C4()
{
  unint64_t result = qword_267EBEDE0;
  if (!qword_267EBEDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDE0);
  }
  return result;
}

unint64_t sub_21F13F51C()
{
  unint64_t result = qword_267EBEDE8;
  if (!qword_267EBEDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDE8);
  }
  return result;
}

unint64_t sub_21F13F574()
{
  unint64_t result = qword_267EBEDF0;
  if (!qword_267EBEDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEDF0);
  }
  return result;
}

uint64_t sub_21F13F5C8()
{
  unint64_t v0 = sub_21F157480();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_21F13F614(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6150657069636572 && a2 == 0xEA00000000006874;
  if (v2 || (sub_21F157600() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021F1601C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_21F157600();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static PFLTelemetry.sendPFLPluginLocation(location:plugin:taskId:useCase:error:forwardToMLHost:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267EBEE10 + dword_267EBEE10);
  id v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *id v17 = v9;
  v17[1] = sub_21F0FB170;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t static PFLTelemetry.sendPFLPluginLocation<A>(location:plugin:taskId:useCase:force:forwardToMLHost:work:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_WORD *)(v8 + 112) = v15;
  *(void *)(v8 + 64) = a8;
  *(void *)(v8 + 72) = v14;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 32) = a4;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 80) = v10;
  *char v10 = v8;
  v10[1] = sub_21F13F924;
  return v12(a1);
}

{
  uint64_t v8;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  *(void *)(v8 + 88) = v12;
  *(void *)(v8 + 96) = v13;
  *(_WORD *)(v8 + 128) = v11;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 80) = v10;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F13FE34, 0, 0);
}

uint64_t sub_21F13F924()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v8 = (char *)&dword_267EBEE10 + dword_267EBEE10;
    unsigned int v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 104) = v4;
    *unsigned int v4 = v3;
    v4[1] = sub_21F13FC7C;
    __asm { BR              X8; sub_21F141ADC }
  }
  if (*(unsigned char *)(v2 + 112) == 1)
  {
    uint64_t v9 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v2 + 96) = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_21F13FB84;
    __asm { BR              X8; sub_21F141508 }
  }
  char v6 = *(uint64_t (**)(void))(v3 + 8);
  return v6();
}

uint64_t sub_21F13FB84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21F13FC7C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F13FD78, 0, 0);
}

uint64_t sub_21F13FD78()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21F13FE34()
{
  (*(void (**)(void))(v0 + 88))();
  *(void *)(v0 + 104) = 0;
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    uint64_t v4 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_21F140008;
    __asm { BR              X8; sub_21F141508 }
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_21F140008()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21F140100()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F1401FC, 0, 0);
}

uint64_t sub_21F1401FC()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static PFLTelemetry.sendPFLPluginReachTelemetryLazy(location:plugin:taskId:useCase:errorCode:errorDomain:forwardToMLHost:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267EBEE20 + dword_267EBEE20);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_21F105E8C;
  return v16(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t PFLPluginState.__allocating_init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t PFLPluginState.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

void sub_21F1403C4()
{
  uint64_t v0 = qword_26D0AD2B8;
  uint64_t v1 = MEMORY[0x263F8EE78];
  if (qword_26D0AD2B8)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_21F1573C0();
    uint64_t v2 = &byte_26D0AD2C8;
    do
    {
      ++v2;
      unint64_t v3 = PFLTaskDiscoveryReachLocation.description.getter();
      uint64_t v5 = v4;
      type metadata accessor for PFLPluginState();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v3;
      *(void *)(v6 + 24) = v5;
      sub_21F1573A0();
      sub_21F1573D0();
      sub_21F1573E0();
      sub_21F1573B0();
      --v0;
    }
    while (v0);
    uint64_t v1 = v7;
  }
  qword_267EBEE00 = v1;
}

uint64_t static PFLPluginState.allCases.getter()
{
  if (qword_267EBE2B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PFLPluginState.allCases.setter(uint64_t a1)
{
  if (qword_267EBE2B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_267EBEE00 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PFLPluginState.allCases.modify())()
{
  if (qword_267EBE2B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PFLPluginState.rawValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PFLPluginState.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PFLPluginState.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21F1406A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_21F1406E8@<X0>(void *a1@<X8>)
{
  if (qword_267EBE2B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_267EBEE00;
  return swift_bridgeObjectRetain();
}

id sub_21F140768(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_21F141FEC();
    uint64_t v4 = (void *)sub_21F156BC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t sub_21F1407F4()
{
  sub_21F156B00();
  uint64_t result = sub_21F156AF0();
  qword_26AD3F000 = result;
  return result;
}

uint64_t static PFLTelemetry.sendPFLPluginLocation(location:plugin:taskId:useCase:error:force:forwardToMLHost:work:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 88) = v12;
  *(void *)(v8 + 96) = v13;
  *(_WORD *)(v8 + 120) = v11;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 80) = v10;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21F140878, 0, 0);
}

{
  uint64_t v8;
  void *v9;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  int *v15;

  *(_WORD *)(v8 + 112) = v14;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 80) = v13;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 16) = a1;
  __int16 v11 = (uint64_t (*)(void))((char *)v15 + *v15);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 88) = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_21F140D28;
  return v11();
}

uint64_t sub_21F140878()
{
  char v1 = (*(uint64_t (**)(void))(v0 + 88))();
  *(unsigned char *)(v0 + 122) = v1 & 1;
  if ((v1 & 1) == 0)
  {
    uint64_t v7 = (char *)&dword_267EBEE10 + dword_267EBEE10;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_21F140A3C;
    __asm { BR              X8; sub_21F141ADC }
  }
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    uint64_t v6 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v2;
    void *v2 = v0;
    v2[1] = sub_21F140B38;
    __asm { BR              X8; sub_21F141508 }
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(1);
}

uint64_t sub_21F140A3C()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 122);
  return v2(v3);
}

uint64_t sub_21F140B38()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 122);
  return v2(v3);
}

uint64_t sub_21F140D28(char a1)
{
  uint64_t v3 = *v1;
  *(unsigned char *)(v3 + 114) = a1;
  swift_task_dealloc();
  if ((a1 & 1) == 0)
  {
    uint64_t v10 = (char *)&dword_267EBEE10 + dword_267EBEE10;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 96) = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_21F140F84;
    __asm { BR              X8 }
  }
  if (*(unsigned char *)(v3 + 112) == 1)
  {
    uint64_t v9 = (char *)&dword_267EBEE20 + dword_267EBEE20;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v3 + 104) = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_21F141080;
    __asm { BR              X8 }
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v3 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v3 + 114);
  return v6(v7);
}

uint64_t sub_21F140F84()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 114);
  return v2(v3);
}

uint64_t sub_21F141080()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 114);
  return v2(v3);
}

uint64_t sub_21F14117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = a8;
  v8[11] = v10;
  v8[8] = a6;
  v8[9] = a7;
  uint64_t v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  _OWORD v8[3] = a1;
  return MEMORY[0x270FA2498](sub_21F1411B4, 0, 0);
}

uint64_t sub_21F1411B4()
{
  uint64_t v1 = v0[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F156DD0();
  sub_21F156DD0();
  id v2 = objc_allocWithZone((Class)sub_21F156B60());
  uint64_t v3 = (void *)sub_21F156B50();
  v0[12] = v3;
  if (v1 || (sub_21F156E50() & 1) == 0)
  {

    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v5 = v0[3];
    uint64_t v4 = v0[4];
    v0[13] = type metadata accessor for PFLPluginState();
    uint64_t v6 = swift_allocObject();
    v0[14] = v6;
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    uint64_t v7 = qword_267EBE2B8;
    swift_bridgeObjectRetain();
    if (v7 != -1) {
      swift_once();
    }
    v0[15] = qword_26AD3F000;
    v0[2] = v6;
    sub_21F156B00();
    sub_21F141FA4(&qword_267EBEE78, 255, MEMORY[0x263F51590]);
    uint64_t v9 = sub_21F156FA0();
    return MEMORY[0x270FA2498](sub_21F1413E0, v9, v8);
  }
}

uint64_t sub_21F1413E0(uint64_t a1, uint64_t a2)
{
  sub_21F141FA4(&qword_267EBEE80, a2, (void (*)(uint64_t))type metadata accessor for PFLPluginState);
  sub_21F156AE0();
  return MEMORY[0x270FA2498](sub_21F14149C, 0, 0);
}

uint64_t sub_21F14149C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21F141508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 344) = v12;
  *(void *)(v8 + 320) = v11;
  *(_OWORD *)(v8 + 304) = v10;
  *(void *)(v8 + 288) = a7;
  *(void *)(v8 + 296) = a8;
  *(void *)(v8 + 272) = a5;
  *(void *)(v8 + 280) = a6;
  *(void *)(v8 + 256) = a3;
  *(void *)(v8 + 264) = a4;
  *(void *)(v8 + 240) = a1;
  *(void *)(v8 + 248) = a2;
  return MEMORY[0x270FA2498](sub_21F141550, 0, 0);
}

uint64_t sub_21F141550()
{
  int v14 = *(unsigned __int8 *)(v0 + 344);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEE68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F15C4F0;
  *(void *)(inited + 32) = 0x6E6967756C70;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = sub_21F156C90();
  *(void *)(inited + 56) = 0x64496B736174;
  *(void *)(inited + 64) = 0xE600000000000000;
  *(void *)(inited + 72) = sub_21F156C90();
  *(void *)(inited + 80) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = sub_21F156C90();
  *(void *)(inited + 104) = 0x65736143657375;
  *(void *)(inited + 112) = 0xE700000000000000;
  *(void *)(inited + 120) = sub_21F156C90();
  *(void *)(inited + 128) = 0x646F43726F727265;
  *(void *)(inited + 136) = 0xE900000000000065;
  *(void *)(inited + 144) = sub_21F157060();
  *(void *)(inited + 152) = 0x6D6F44726F727265;
  *(void *)(inited + 160) = 0xEB000000006E6961;
  *(void *)(inited + 168) = sub_21F156C90();
  *(void *)(v0 + 328) = sub_21F0FC514(inited);
  if (v14 == 1)
  {
    uint64_t v2 = swift_task_alloc();
    *(void *)(v0 + 336) = v2;
    *(void *)uint64_t v2 = v0;
    *(void *)(v2 + 8) = sub_21F1418A4;
    uint64_t v3 = *(void *)(v0 + 288);
    long long v5 = *(_OWORD *)(v0 + 256);
    long long v4 = *(_OWORD *)(v0 + 272);
    long long v6 = *(_OWORD *)(v0 + 240);
    *(void *)(v2 + 80) = *(void *)(v0 + 296);
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 72) = v3;
    *(_OWORD *)(v2 + 56) = v4;
    *(_OWORD *)(v2 + 40) = v5;
    *(_OWORD *)(v2 + 24) = v6;
    return MEMORY[0x270FA2498](sub_21F1411B4, 0, 0);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 328);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    uint64_t v9 = (void *)sub_21F156C90();
    *(void *)(v0 + 224) = sub_21F141F84;
    *(void *)(v0 + 232) = v8;
    *(void *)(v0 + 192) = MEMORY[0x263EF8330];
    *(void *)(v0 + 200) = 1107296256;
    *(void *)(v0 + 208) = sub_21F140768;
    *(void *)(v0 + 216) = &block_descriptor;
    long long v10 = _Block_copy((const void *)(v0 + 192));
    swift_retain();
    uint64_t v11 = AnalyticsSendEventLazy();

    _Block_release(v10);
    swift_release();
    swift_release();
    char v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v12(v11);
  }
}

uint64_t sub_21F1418A4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F1419A0, 0, 0);
}

uint64_t sub_21F1419A0()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)sub_21F156C90();
  v0[28] = sub_21F141F84;
  v0[29] = v2;
  v0[24] = MEMORY[0x263EF8330];
  v0[25] = 1107296256;
  v0[26] = sub_21F140768;
  v0[27] = &block_descriptor;
  long long v4 = _Block_copy(v0 + 24);
  swift_retain();
  uint64_t v5 = AnalyticsSendEventLazy();

  _Block_release(v4);
  swift_release();
  swift_release();
  long long v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_21F141ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 122) = v11;
  *(void *)(v8 + 88) = a8;
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 56) = a4;
  *(void *)(v8 + 64) = a5;
  *(void *)(v8 + 40) = a2;
  *(void *)(v8 + 48) = a3;
  *(void *)(v8 + 32) = a1;
  return MEMORY[0x270FA2498](sub_21F141B1C, 0, 0);
}

void sub_21F141B1C()
{
  uint64_t v1 = (void *)v0[12];
  v0[2] = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE560);
  if (!swift_dynamicCast())
  {
    uint64_t v3 = (void *)v0[12];
    v0[3] = v3;
    id v4 = v3;
    if (!swift_dynamicCast())
    {
      uint64_t v5 = (void *)sub_21F1566E0();
      objc_msgSend(v5, sel_code);
    }
  }
  long long v6 = (void *)sub_21F1566E0();
  id v7 = objc_msgSend(v6, sel_domain);

  sub_21F156CC0();
  uint64_t v9 = v8;

  v0[13] = v9;
  char v11 = (char *)&dword_267EBEE20 + dword_267EBEE20;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[14] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_21F141CEC;
  __asm { BR              X8 }
}

uint64_t sub_21F141CEC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21F141DFC(uint64_t a1, uint64_t a2)
{
  return sub_21F141FA4(&qword_267EBEE48, a2, (void (*)(uint64_t))type metadata accessor for PFLPluginState);
}

uint64_t type metadata accessor for PFLPluginState()
{
  return self;
}

uint64_t sub_21F141E68(uint64_t a1, uint64_t a2)
{
  return sub_21F141FA4(&qword_267EBEE50, a2, (void (*)(uint64_t))type metadata accessor for PFLPluginState);
}

unint64_t sub_21F141EB4()
{
  unint64_t result = qword_267EBEE58;
  if (!qword_267EBEE58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBEE60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEE58);
  }
  return result;
}

uint64_t method lookup function for PFLPluginState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PFLPluginState);
}

uint64_t dispatch thunk of PFLPluginState.__allocating_init(rawValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for PFLTelemetry()
{
  return &type metadata for PFLTelemetry;
}

uint64_t sub_21F141F4C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21F141F84()
{
  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_21F141FA4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F141FEC()
{
  unint64_t result = qword_267EBEE88;
  if (!qword_267EBEE88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EBEE88);
  }
  return result;
}

id sub_21F14202C(void *a1, uint64_t (*a2)(void))
{
  id result = (id)a2();
  if (v2)
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21F156B90();
    __swift_project_value_buffer(v5, (uint64_t)qword_267EBEF18);
    id v6 = v2;
    id v7 = a1;
    id v8 = v2;
    id v9 = a1;
    uint64_t v10 = sub_21F156B70();
    os_log_type_t v11 = sub_21F157120();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      id v14 = v2;
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      void *v13 = v15;

      *(_WORD *)(v12 + 12) = 2112;
      id v16 = a1;
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F1571F0();
      v13[1] = v17;

      _os_log_impl(&dword_21F0DC000, v10, v11, "Override error: %@ -> with %@", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v13, -1, -1);
      MEMORY[0x223C45170](v12, -1, -1);
    }
    else
    {
    }
    swift_willThrow();

    return a1;
  }
  return result;
}

uint64_t sub_21F142274()
{
  uint64_t v38 = sub_21F156720();
  uint64_t v0 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_21F156960();
  uint64_t v3 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21F156820();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v11 = (char *)&v35 - v10;
  sub_21F156780();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F1596F0;
  *(void *)(v12 + 32) = 0x617474612D6C6670;
  *(void *)(v12 + 40) = 0xEF73746E656D6863;
  sub_21F156950();
  uint64_t v13 = sub_21F156940();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v37);
  *(void *)(v12 + 48) = v13;
  *(void *)(v12 + 56) = v15;
  uint64_t v16 = v40;
  uint64_t v17 = v38;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F06E30], v38);
  sub_21F0FB854();
  sub_21F156800();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v17);
  uint64_t v18 = v39;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v39 + 8);
  v19(v9, v6);
  uint64_t v20 = v16 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl;
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  uint64_t v22 = v11;
  uint64_t v38 = v6;
  v21(v16 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl, v11, v6);
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_21F156B90();
  __swift_project_value_buffer(v23, (uint64_t)qword_267EBEF18);
  swift_retain_n();
  uint64_t v24 = sub_21F156B70();
  os_log_type_t v25 = sub_21F157110();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v36 = v19;
    uint64_t v28 = v27;
    uint64_t v42 = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v37 = (uint64_t)(v26 + 4);
    uint64_t v29 = v38;
    uint64_t v30 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v22, v20, v38);
    uint64_t v31 = sub_21F1567C0();
    unint64_t v33 = v32;
    v36(v30, v29);
    uint64_t v41 = sub_21F103FD0(v31, v33, &v42);
    uint64_t v16 = v40;
    sub_21F1571F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v24, v25, "Task path: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v28, -1, -1);
    MEMORY[0x223C45170](v26, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return v16;
}

void sub_21F142750(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v23 = a1;
  uint64_t v24 = a3;
  uint64_t v8 = sub_21F156720();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21F156820();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v5 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl, v12);
  uint64_t v26 = a2;
  uint64_t v27 = v24;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F06E50], v8);
  sub_21F0FB854();
  sub_21F156810();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v13 + 8);
  v16(v15, v12);
  sub_21F0FB4FC();
  uint64_t v17 = (void *)swift_allocError();
  *uint64_t v18 = 39;
  os_log_type_t v25 = a4;
  uint64_t v19 = v28;
  sub_21F14202C(v17, (uint64_t (*)(void))sub_21F1443C8);
  if (v19)
  {
    v16(a4, v12);
  }
  else
  {

    uint64_t v20 = (void *)swift_allocError();
    *uint64_t v21 = 40;
    uint64_t v22 = (void *)MEMORY[0x270FA5388](v20);
    *(&v23 - 2) = v23;
    *(&v23 - 1) = (uint64_t)a4;
    sub_21F14202C(v22, (uint64_t (*)(void))sub_21F1443E4);
  }
}

id sub_21F142A58()
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = sub_21F156820();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_defaultManager);
  sub_21F1567A0();
  uint64_t v5 = (void *)sub_21F156790();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8[0] = 0;
  LOBYTE(v0) = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 1, 0, v8);

  id result = v8[0];
  if ((v0 & 1) == 0)
  {
    uint64_t v7 = result;
    sub_21F1566F0();

    return (id)swift_willThrow();
  }
  return result;
}

id sub_21F142BE0()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_21F156790();
  uint64_t v2 = (void *)sub_21F156790();
  v6[0] = 0;
  unsigned int v3 = objc_msgSend(v0, sel_moveItemAtURL_toURL_error_, v1, v2, v6);

  if (v3) {
    return v6[0];
  }
  id v5 = v6[0];
  sub_21F1566F0();

  return (id)swift_willThrow();
}

void sub_21F142CE8(void *a1)
{
  uint64_t v2 = v1;
  id v144 = a1;
  uint64_t v139 = sub_21F156B90();
  os_log_t v137 = *(os_log_t *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  v136 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v135 = (uint64_t *)((char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v141 = sub_21F156710();
  os_log_t v140 = *(os_log_t *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v142 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_21F156820();
  uint64_t v138 = *(void *)(v143 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v143);
  uint64_t v9 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v121 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v121 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v121 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v121 - v19;
  unint64_t v21 = sub_21F0FB4FC();
  uint64_t v22 = (void *)swift_allocError();
  *uint64_t v23 = 39;
  swift_retain();
  uint64_t v24 = v145;
  sub_21F108348(v22, v2);
  if (v24)
  {

    return;
  }
  unint64_t v127 = v18;
  uint64_t v132 = v9;
  uint64_t v128 = v12;
  unint64_t v126 = v15;
  uint64_t v145 = (void (*)(void, void, void))v20;
  uint64_t v134 = v2;

  id v25 = objc_allocWithZone(MEMORY[0x263EFF950]);
  uint64_t v26 = (void *)sub_21F156790();
  id v27 = objc_msgSend(v25, sel_initWithURL_, v26);

  if (!v27)
  {
    swift_allocError();
    *char v58 = 36;
    swift_willThrow();
    return;
  }
  uint64_t v123 = 0;
  unint64_t v129 = v21;
  objc_msgSend(v27, sel_open);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F1596F0;
  strcpy((char *)(inited + 32), "extractPKZip");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  uint64_t v29 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 72) = v29;
  *(void *)(inited + 80) = 0x7274537475706E69;
  *(void *)(inited + 88) = 0xEB000000006D6165;
  *(void *)(inited + 120) = sub_21F144330();
  *(void *)(inited + 96) = v27;
  id v30 = v27;
  sub_21F0FC1B0(inited);
  uint64_t v31 = sub_21F156BC0();
  uint64_t v32 = v143;
  unint64_t v33 = (void *)v31;
  swift_bridgeObjectRelease();
  BOMCopierNew();
  uint64_t v34 = v138;
  uint64_t v35 = *(void (**)(char *, id, uint64_t))(v138 + 16);
  uint64_t v36 = v145;
  uint64_t v125 = v134 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl;
  uint64_t v131 = v138 + 16;
  uint64_t v133 = v35;
  ((void (*)(void))v35)(v145);
  uint64_t v37 = (void *)sub_21F156790();
  uint64_t v38 = *(void (**)(void, void))(v34 + 8);
  v38(v36, v32);
  objc_msgSend(v37, sel_fileSystemRepresentation);
  id v39 = v37;
  id v40 = v30;
  id v130 = v33;
  int v41 = BOMCopierCopyWithOptions();
  BOMCopierFree();
  objc_msgSend(v40, sel_close);
  if (v41)
  {
    LODWORD(v142) = v41;
    uint64_t v42 = v139;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v42, (uint64_t)qword_267EBEF18);
    uint64_t v43 = v132;
    uint64_t v44 = v143;
    v133(v132, v144, v143);
    swift_retain_n();
    unint64_t v45 = sub_21F156B70();
    os_log_type_t v46 = sub_21F157120();
    LODWORD(v144) = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      unint64_t v124 = v38;
      uint64_t v48 = v47;
      uint64_t v141 = swift_slowAlloc();
      v146[0] = v141;
      *(_DWORD *)uint64_t v48 = 136315650;
      sub_21F144370();
      id v122 = v40;
      os_log_t v140 = v45;
      uint64_t v49 = sub_21F1575D0();
      uint64_t v148 = sub_21F103FD0(v49, v50, v146);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      uint64_t v51 = v124;
      v124(v43, v44);
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v139 = v48 + 14;
      uint64_t v52 = v145;
      v133((char *)v145, (id)v125, v44);
      id v40 = v122;
      uint64_t v53 = sub_21F1575D0();
      unint64_t v55 = v54;
      v51(v52, v44);
      uint64_t v148 = sub_21F103FD0(v53, v55, v146);
      sub_21F1571F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 1024;
      LODWORD(v148) = v142;
      sub_21F1571F0();
      os_log_t v56 = v140;
      _os_log_impl(&dword_21F0DC000, v140, (os_log_type_t)v144, "Failed to unzip %s to %s with error: %d", (uint8_t *)v48, 0x1Cu);
      uint64_t v57 = v141;
      swift_arrayDestroy();
      MEMORY[0x223C45170](v57, -1, -1);
      MEMORY[0x223C45170](v48, -1, -1);
    }
    else
    {
      v38(v43, v44);

      swift_release_n();
    }
    swift_allocError();
    unsigned char *v80 = 37;
    swift_willThrow();

    goto LABEL_24;
  }
  unint64_t v124 = v38;
  id v59 = objc_msgSend(v40, sel_streamError);
  uint64_t v60 = v139;
  if (!v59)
  {
    uint64_t v81 = v143;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v60, (uint64_t)qword_267EBEF18);
    char v82 = v127;
    char v83 = v133;
    v133(v127, v144, v81);
    swift_retain_n();
    char v84 = sub_21F156B70();
    os_log_type_t v85 = sub_21F157110();
    int v86 = v85;
    BOOL v87 = os_log_type_enabled(v84, v85);
    id v122 = v40;
    uint64_t v121 = v34 + 8;
    if (v87)
    {
      uint64_t v88 = swift_slowAlloc();
      LODWORD(v144) = v86;
      uint64_t v89 = v88;
      uint64_t v139 = swift_slowAlloc();
      v146[0] = v139;
      *(_DWORD *)uint64_t v89 = 136315394;
      sub_21F144370();
      os_log_t v137 = v84;
      uint64_t v90 = sub_21F1575D0();
      uint64_t v148 = sub_21F103FD0(v90, v91, v146);
      sub_21F1571F0();
      swift_bridgeObjectRelease();
      uint64_t v92 = v82;
      uint64_t v93 = (void (*)(char *, uint64_t))v124;
      v124(v92, v81);
      *(_WORD *)(v89 + 12) = 2080;
      v136 = (char *)(v89 + 14);
      uint64_t v94 = (char *)v145;
      uint64_t v95 = v125;
      v133((char *)v145, (id)v125, v81);
      uint64_t v96 = sub_21F1575D0();
      unint64_t v98 = v97;
      v93(v94, v81);
      uint64_t v148 = sub_21F103FD0(v96, v98, v146);
      uint64_t v34 = v138;
      sub_21F1571F0();
      swift_release_n();
      char v83 = v133;
      swift_bridgeObjectRelease();
      os_log_t v99 = v137;
      _os_log_impl(&dword_21F0DC000, v137, (os_log_type_t)v144, "Successfully unziped %s to %s ", (uint8_t *)v89, 0x16u);
      uint64_t v100 = v139;
      swift_arrayDestroy();
      MEMORY[0x223C45170](v100, -1, -1);
      uint64_t v101 = v89;
      long long v102 = v93;
      MEMORY[0x223C45170](v101, -1, -1);

      long long v103 = v142;
    }
    else
    {
      long long v102 = (void (*)(char *, uint64_t))v124;
      v124(v82, v81);

      swift_release_n();
      uint64_t v94 = (char *)v145;
      long long v103 = v142;
      uint64_t v95 = v125;
    }
    id v105 = objc_msgSend(self, sel_defaultManager);
    v83(v94, (id)v95, v81);
    long long v106 = (void *)sub_21F1570F0();

    v102(v94, v81);
    if (!v106)
    {

      return;
    }
    sub_21F1570C0();
    sub_21F156700();
    if (!v147)
    {
      uint64_t v113 = v141;
      os_log_t v112 = v140;
      goto LABEL_43;
    }
    long long v107 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
    long long v108 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    long long v109 = (void (**)(void, void, void))(v34 + 32);
    unint64_t v110 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v111 = (uint64_t)v135;
      while (1)
      {
        int v114 = swift_dynamicCast();
        uint64_t v115 = *v107;
        if (v114) {
          break;
        }
        v115(v111, 1, 1, v81);
LABEL_31:
        sub_21F11F2A8(v111);
        sub_21F156700();
        os_log_t v112 = v140;
        uint64_t v113 = v141;
        if (!v147)
        {
          long long v103 = v142;
          goto LABEL_43;
        }
      }
      v115(v111, 0, 1, v81);
      if ((*v108)(v111, 1, v81) == 1) {
        goto LABEL_31;
      }
      uint64_t v145 = *v109;
      v145(v126, v111, v81);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v110 = sub_21F1036DC(0, *(void *)(v110 + 16) + 1, 1, v110);
      }
      long long v103 = v142;
      unint64_t v117 = *(void *)(v110 + 16);
      unint64_t v116 = *(void *)(v110 + 24);
      int64_t v118 = v117 + 1;
      uint64_t v119 = v126;
      if (v117 >= v116 >> 1)
      {
        uint64_t v120 = sub_21F1036DC(v116 > 1, v118, 1, v110);
        int64_t v118 = v117 + 1;
        uint64_t v119 = v126;
        unint64_t v110 = v120;
      }
      *(void *)(v110 + 16) = v118;
      v145(v110+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ *(void *)(v138 + 72) * v117, v119, v81);
      sub_21F156700();
      uint64_t v113 = v141;
      os_log_t v112 = v140;
      if (!v147)
      {
LABEL_43:
        ((void (*)(char *, uint64_t))v112[1].isa)(v103, v113);

        return;
      }
    }
  }

  uint64_t v61 = v143;
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v60, (uint64_t)qword_267EBEF18);
  os_log_t v63 = v137;
  uint64_t v64 = v136;
  ((void (*)(char *, uint64_t, uint64_t))v137[2].isa)(v136, v62, v60);
  uint64_t v65 = v128;
  v133(v128, v144, v61);
  swift_retain_n();
  id v144 = v40;
  uint64_t v66 = sub_21F156B70();
  LODWORD(v142) = sub_21F157120();
  if (!os_log_type_enabled(v66, (os_log_type_t)v142))
  {
    v124(v65, v61);

    id v75 = v144;
    swift_release_n();
    ((void (*)(char *, uint64_t))v63[1].isa)(v64, v60);
    goto LABEL_23;
  }
  os_log_t v140 = v66;
  uint64_t v67 = swift_slowAlloc();
  uint64_t v135 = (void *)swift_slowAlloc();
  uint64_t v138 = swift_slowAlloc();
  v146[0] = v138;
  *(_DWORD *)uint64_t v67 = 136315650;
  uint64_t v141 = v67 + 4;
  sub_21F144370();
  uint64_t v68 = sub_21F1575D0();
  uint64_t v148 = sub_21F103FD0(v68, v69, v146);
  sub_21F1571F0();
  swift_bridgeObjectRelease();
  uint64_t v70 = v124;
  v124(v65, v61);
  *(_WORD *)(v67 + 12) = 2080;
  uint64_t v71 = v145;
  v133((char *)v145, (id)v125, v61);
  uint64_t v72 = sub_21F1575D0();
  unint64_t v74 = v73;
  v70(v71, v61);
  uint64_t v148 = sub_21F103FD0(v72, v74, v146);
  sub_21F1571F0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v67 + 22) = 2112;
  id v75 = v144;
  if (objc_msgSend(v144, sel_streamError))
  {
    uint64_t v76 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v148 = v76;
    sub_21F1571F0();
    char v77 = v135;
    *uint64_t v135 = v76;

    os_log_t v78 = v140;
    _os_log_impl(&dword_21F0DC000, v140, (os_log_type_t)v142, "Failed to unzip %s to %s with stream error: %@", (uint8_t *)v67, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE520);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v77, -1, -1);
    uint64_t v79 = v138;
    swift_arrayDestroy();
    MEMORY[0x223C45170](v79, -1, -1);
    MEMORY[0x223C45170](v67, -1, -1);

    ((void (*)(char *, uint64_t))v137[1].isa)(v136, v139);
LABEL_23:
    swift_allocError();
    *long long v104 = 38;
    swift_willThrow();

LABEL_24:
    return;
  }

  __break(1u);
}

id sub_21F144004(uint64_t a1)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_21F156820();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_defaultManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl, v2);
  uint64_t v7 = (void *)sub_21F156790();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10[0] = 0;
  LOBYTE(v2) = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, v10);

  id result = v10[0];
  if ((v2 & 1) == 0)
  {
    uint64_t v9 = result;
    sub_21F1566F0();

    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_21F1441AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC24PrivateFederatedLearning14PFLTaskStorage_baseUrl;
  uint64_t v2 = sub_21F156820();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21F14424C()
{
  return type metadata accessor for PFLTaskStorage();
}

uint64_t type metadata accessor for PFLTaskStorage()
{
  uint64_t result = qword_267EBEE90;
  if (!qword_267EBEE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F1442A0()
{
  uint64_t result = sub_21F156820();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_21F144330()
{
  unint64_t result = qword_267EBEEA0;
  if (!qword_267EBEEA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EBEEA0);
  }
  return result;
}

unint64_t sub_21F144370()
{
  unint64_t result = qword_267EBEB80;
  if (!qword_267EBEB80)
  {
    sub_21F156820();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEB80);
  }
  return result;
}

id sub_21F1443C8()
{
  return sub_21F142A58();
}

id sub_21F1443E4()
{
  return sub_21F142BE0();
}

uint64_t sub_21F144400@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_21F156720();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F156820();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v29 = type metadata accessor for PFLDecodableTaskParameters(0);
  if (a1)
  {
    sub_21F156750();
    uint64_t v30 = 0x6574656D61726170;
    unint64_t v31 = 0xEF6E6F736A2E7372;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F06E38], v3);
    sub_21F0FB854();
    id v27 = v14;
    sub_21F156810();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_21F156830();
    unint64_t v23 = v22;
    sub_21F1565C0();
    swift_allocObject();
    sub_21F1565B0();
    sub_21F147678();
    sub_21F1565A0();
    swift_release();
    sub_21F0FB8BC(v21, v23);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24(v12, v7);
    v24(v27, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1);
  }
  else
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_21F156B90();
    __swift_project_value_buffer(v15, (uint64_t)qword_267EBEF18);
    uint64_t v16 = sub_21F156B70();
    os_log_type_t v17 = sub_21F157110();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_21F0DC000, v16, v17, "No task folder", v18, 2u);
      MEMORY[0x223C45170](v18, -1, -1);
    }

    uint64_t v19 = v28;
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    return v20(v19, 1, 1);
  }
}

uint64_t static PFLTaskPreferences.loadTaskPreferences(preferredTaskSource:from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEEA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[3];
  unint64_t v27 = v13;
  uint64_t v28 = v15;
  sub_21F144400(a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21F0FC154((uint64_t)v8, &qword_267EBEEA8);
    uint64_t v17 = type metadata accessor for PFLTaskPreferences(0);
    uint64_t v18 = (char *)a3 + *(int *)(v17 + 20);
    unint64_t v20 = v27;
    uint64_t v19 = v28;
    sub_21F0FC10C(v14, v27);
    sub_21F156910();
    sub_21F1568D0();
    *(_OWORD *)uint64_t v18 = xmmword_21F15C7B0;
    *((void *)v18 + 3) = 0;
    *((void *)v18 + 4) = 0;
    *((void *)v18 + 2) = 0;
    v18[40] = 0;
    v18[*(int *)(v9 + 40)] = 0;
    v18[*(int *)(v9 + 44)] = 0;
    *((void *)v18 + 6) = 0x3FF0000000000000;
    uint64_t v21 = *(int *)(v17 + 24);
    uint64_t result = os_variant_has_internal_content();
    *((unsigned char *)a3 + v21) = result;
    *a3 = v14;
    a3[1] = v20;
    a3[2] = v19;
    a3[3] = v16;
  }
  else
  {
    sub_21F144F7C((uint64_t)v8, (uint64_t)v12);
    uint64_t v23 = type metadata accessor for PFLTaskPreferences(0);
    sub_21F1452EC((uint64_t)v12, (uint64_t)a3 + *(int *)(v23 + 20), type metadata accessor for PFLDecodableTaskParameters);
    uint64_t v24 = *(int *)(v23 + 24);
    unint64_t v26 = v27;
    uint64_t v25 = v28;
    sub_21F0FC10C(v14, v27);
    *((unsigned char *)a3 + v24) = os_variant_has_internal_content();
    *a3 = v14;
    a3[1] = v26;
    a3[2] = v25;
    a3[3] = v16;
    return sub_21F145354((uint64_t)v12, type metadata accessor for PFLDecodableTaskParameters);
  }
  return result;
}

uint64_t type metadata accessor for PFLDecodableTaskParameters(uint64_t a1)
{
  return sub_21F144F44(a1, (uint64_t *)&unk_267EBEEC8);
}

uint64_t type metadata accessor for PFLTaskPreferences(uint64_t a1)
{
  return sub_21F144F44(a1, (uint64_t *)&unk_267EBEEB8);
}

uint64_t sub_21F144F44(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F144F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PFLDecodableTaskParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F144FE0()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t PFLTaskPreferences.taskSource.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PFLTaskPreferences(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((unsigned char *)v1 + *(int *)(v4 + 24)))
  {
    uint64_t v7 = (uint64_t *)((char *)v1 + *(int *)(v4 + 20));
    uint64_t v9 = *v7;
    unint64_t v8 = v7[1];
    uint64_t v10 = v7[2];
    uint64_t v11 = v7[3];
    sub_21F1452EC((uint64_t)v1, (uint64_t)v6, type metadata accessor for PFLTaskPreferences);
    if (v8 != 6)
    {
      sub_21F0FC10C(v9, v8);
      uint64_t result = sub_21F145354((uint64_t)v6, type metadata accessor for PFLTaskPreferences);
      *a1 = v9;
      a1[1] = v8;
      a1[2] = v10;
      a1[3] = v11;
      return result;
    }
    uint64_t v13 = *v6;
    unint64_t v12 = v6[1];
    uint64_t v14 = v6[2];
    uint64_t v15 = v6[3];
    sub_21F0FC10C(*v6, v12);
    uint64_t result = sub_21F145354((uint64_t)v6, type metadata accessor for PFLTaskPreferences);
    if (v12 == 3)
    {
      long long v17 = xmmword_21F15B850;
      goto LABEL_11;
    }
    if (!v12)
    {
      long long v17 = xmmword_21F15B860;
LABEL_11:
      *(_OWORD *)a1 = v17;
      a1[2] = 0;
      a1[3] = 0;
      return result;
    }
    *a1 = v13;
    a1[1] = v12;
    a1[2] = v14;
    a1[3] = v15;
  }
  else
  {
    uint64_t v18 = *v1;
    unint64_t v19 = v1[1];
    uint64_t v20 = v1[2];
    uint64_t v21 = v1[3];
    *a1 = *v1;
    a1[1] = v19;
    a1[2] = v20;
    a1[3] = v21;
    return sub_21F0FC10C(v18, v19);
  }
  return result;
}

uint64_t sub_21F1452EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F145354(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for PFLTaskPreferences(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 >= 6)
    {
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
    }
    uint64_t v11 = *(int *)(a3 + 20);
    unint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    unint64_t v14 = *(void *)((char *)a2 + v11 + 8);
    uint64_t v24 = a3;
    if (v14 > 6)
    {
      *(void *)unint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = v14;
      uint64_t v22 = *((void *)v13 + 3);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *((_OWORD *)v13 + 1);
      *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v15;
    }
    *((void *)v12 + 4) = *((void *)v13 + 4);
    v12[40] = v13[40];
    *((void *)v12 + 6) = *((void *)v13 + 6);
    uint64_t v16 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
    uint64_t v17 = v16[8];
    uint64_t v23 = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = sub_21F156930();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v23, v18, v19);
    v20(&v12[v16[9]], &v13[v16[9]], v19);
    v12[v16[10]] = v13[v16[10]];
    v12[v16[11]] = v13[v16[11]];
    *((unsigned char *)a1 + *(int *)(v24 + 24)) = *((unsigned char *)a2 + *(int *)(v24 + 24));
  }
  return a1;
}

uint64_t destroy for PFLTaskPreferences(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 6uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  if (*(void *)(v4 + 8) >= 7uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = sub_21F156930();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  uint64_t v8 = v4 + *(int *)(v5 + 36);
  return v10(v8, v7);
}

void *initializeWithCopy for PFLTaskPreferences(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = a2[1];
  if (v6 >= 6)
  {
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  unint64_t v12 = *(void *)((char *)a2 + v9 + 8);
  uint64_t v22 = a3;
  if (v12 > 6)
  {
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v21 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v13;
  }
  *((void *)v10 + 4) = *((void *)v11 + 4);
  v10[40] = v11[40];
  *((void *)v10 + 6) = *((void *)v11 + 6);
  unint64_t v14 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v15 = v14[8];
  uint64_t v16 = &v10[v15];
  uint64_t v17 = &v11[v15];
  uint64_t v18 = sub_21F156930();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v19(&v10[v14[9]], &v11[v14[9]], v18);
  v10[v14[10]] = v11[v14[10]];
  v10[v14[11]] = v11[v14[11]];
  *((unsigned char *)a1 + *(int *)(v22 + 24)) = *((unsigned char *)a2 + *(int *)(v22 + 24));
  return a1;
}

void *assignWithCopy for PFLTaskPreferences(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = a2[1];
  if (a1[1] >= 6uLL)
  {
    if (v6 >= 6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F0FC154((uint64_t)a1, &qword_267EBEEB0);
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
    }
  }
  else if (v6 >= 6)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  unint64_t v12 = *(void *)((char *)a1 + v9 + 8);
  unint64_t v13 = *(void *)((char *)a2 + v9 + 8);
  if (v12 != 6)
  {
    if (v13 == 6)
    {
      sub_21F145AD0(v10);
    }
    else
    {
      if (v12 < 6)
      {
        if (v13 < 6) {
          goto LABEL_10;
        }
LABEL_15:
        *(void *)uint64_t v10 = *(void *)v11;
        *(void *)(v10 + 8) = *((void *)v11 + 1);
        *(void *)(v10 + 16) = *((void *)v11 + 2);
        *(void *)(v10 + 24) = *((void *)v11 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      }
      if (v13 >= 6)
      {
        *(void *)uint64_t v10 = *(void *)v11;
        *(void *)(v10 + 8) = *((void *)v11 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v10 + 16) = *((void *)v11 + 2);
        *(void *)(v10 + 24) = *((void *)v11 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      sub_21F0FC154(v10, &qword_267EBEEB0);
    }
    long long v15 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v15;
    goto LABEL_19;
  }
  if (v13 > 6) {
    goto LABEL_15;
  }
LABEL_10:
  long long v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v14;
LABEL_19:
  *(void *)(v10 + 32) = *((void *)v11 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 40) = v11[40];
  *(void *)(v10 + 48) = *((void *)v11 + 6);
  uint64_t v16 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v17 = v16[8];
  uint64_t v18 = v10 + v17;
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_21F156930();
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(v10 + v16[9], &v11[v16[9]], v20);
  *(unsigned char *)(v10 + v16[10]) = v11[v16[10]];
  *(unsigned char *)(v10 + v16[11]) = v11[v16[11]];
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_21F145AD0(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for PFLTaskPreferences(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  long long v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  long long v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)long long v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  *((void *)v7 + 4) = *(void *)((char *)a2 + v6 + 32);
  v7[40] = *((unsigned char *)a2 + v6 + 40);
  *((void *)v7 + 6) = *(void *)((char *)a2 + v6 + 48);
  uint64_t v10 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v11 = v10[8];
  unint64_t v12 = &v7[v11];
  unint64_t v13 = &v8[v11];
  uint64_t v14 = sub_21F156930();
  long long v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(&v7[v10[9]], &v8[v10[9]], v14);
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for PFLTaskPreferences(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8) < 6uLL) {
    goto LABEL_4;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  if (v6 < 6)
  {
    sub_21F0FC154(a1, &qword_267EBEEB0);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  unint64_t v12 = *(void *)(a1 + v9 + 8);
  unint64_t v13 = *(void *)(a2 + v9 + 8);
  if (v12 != 6)
  {
    if (v13 == 6)
    {
      sub_21F145AD0(v10);
    }
    else if (v12 >= 6)
    {
      if (v13 >= 6)
      {
        *(void *)uint64_t v10 = *(void *)v11;
        *(void *)(v10 + 8) = v13;
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void *)(v11 + 24);
        *(void *)(v10 + 16) = *(void *)(v11 + 16);
        *(void *)(v10 + 24) = v22;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_21F0FC154(v10, &qword_267EBEEB0);
    }
  }
  long long v14 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v14;
LABEL_13:
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 40) = *(unsigned char *)(v11 + 40);
  *(void *)(v10 + 48) = *(void *)(v11 + 48);
  long long v15 = (int *)type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v16 = v15[8];
  uint64_t v17 = v10 + v16;
  uint64_t v18 = v11 + v16;
  uint64_t v19 = sub_21F156930();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(v10 + v15[9], v11 + v15[9], v19);
  *(unsigned char *)(v10 + v15[10]) = *(unsigned char *)(v11 + v15[10]);
  *(unsigned char *)(v10 + v15[11]) = *(unsigned char *)(v11 + v15[11]);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for PFLTaskPreferences(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F145E40);
}

uint64_t sub_21F145E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483641)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 6;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for PFLDecodableTaskParameters(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for PFLTaskPreferences(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F145F14);
}

uint64_t sub_21F145F14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483641)
  {
    *(void *)(result + 8) = (a2 + 5);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PFLDecodableTaskParameters(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21F145FC0()
{
  uint64_t result = type metadata accessor for PFLDecodableTaskParameters(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F146060(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 > 6)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v17 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v9 = a3[8];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_21F156930();
    unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13(a1 + a3[9], (uint64_t)a2 + a3[9], v12);
    uint64_t v14 = a3[11];
    *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(unsigned char *)(a1 + v14) = *((unsigned char *)a2 + v14);
  }
  return a1;
}

uint64_t sub_21F1461D0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 7uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_21F156930();
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  return v8(v6, v5);
}

uint64_t sub_21F146298(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (v6 > 6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v15 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_21F156930();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(a1 + a3[9], a2 + a3[9], v11);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_21F1463B8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a2 + 8);
  if (v6 != 6)
  {
    if (v7 == 6)
    {
      sub_21F145AD0(a1);
    }
    else
    {
      if (v6 < 6)
      {
        if (v7 < 6) {
          goto LABEL_3;
        }
LABEL_8:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
      if (v7 >= 6)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      sub_21F0FC154(a1, &qword_267EBEEB0);
    }
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_12;
  }
  if (v7 > 6) {
    goto LABEL_8;
  }
LABEL_3:
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_12:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_21F156930();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[9], a2 + a3[9], v13);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_21F146584(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_21F156930();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_21F146664(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a2 + 8);
  if (v6 != 6)
  {
    if (v7 == 6)
    {
      sub_21F145AD0(a1);
    }
    else if (v6 >= 6)
    {
      if (v7 >= 6)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v7;
        swift_bridgeObjectRelease();
        uint64_t v16 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v16;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_21F0FC154(a1, &qword_267EBEEB0);
    }
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_21F156930();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(a1 + a3[9], a2 + a3[9], v12);
  uint64_t v14 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_21F1467B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F1467CC);
}

uint64_t sub_21F1467CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_21F156930();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_21F146888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F14689C);
}

uint64_t sub_21F14689C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = sub_21F156930();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21F146944()
{
  uint64_t result = sub_21F156930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21F146A00(char a1)
{
  unint64_t result = 0x756F735F6B736174;
  switch(a1)
  {
    case 1:
    case 3:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x69745F7472617473;
      break;
    case 7:
      unint64_t result = 0x656D69745F646E65;
      break;
    case 8:
      unint64_t result = 0x617261506B736174;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21F146B2C(char a1)
{
  unint64_t result = 0x756F735F6B736174;
  switch(a1)
  {
    case 1:
    case 3:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x69745F7472617473;
      break;
    case 7:
      unint64_t result = 0x656D69745F646E65;
      break;
    case 8:
      unint64_t result = 0x617261506B736174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F146C58(unsigned __int8 *a1, char *a2)
{
  return sub_21F150EBC(*a1, *a2);
}

uint64_t sub_21F146C64()
{
  return sub_21F157710();
}

uint64_t sub_21F146CAC()
{
  return sub_21F144FE0();
}

uint64_t sub_21F146CB4()
{
  return sub_21F157710();
}

uint64_t sub_21F146CF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F147A00();
  *a1 = result;
  return result;
}

unint64_t sub_21F146D28@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21F146A00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F146D54()
{
  return sub_21F146B2C(*v0);
}

uint64_t sub_21F146D5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F147A00();
  *a1 = result;
  return result;
}

void sub_21F146D84(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_21F146D90(uint64_t a1)
{
  unint64_t v2 = sub_21F1476D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F146DCC(uint64_t a1)
{
  unint64_t v2 = sub_21F1476D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F146E08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v64 = sub_21F156930();
  uint64_t v58 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  id v59 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21F156CF0();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v62 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEEE0);
  uint64_t v63 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PFLDecodableTaskParameters(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)((char *)&v51 - v13);
  *(_OWORD *)uint64_t v14 = xmmword_21F15C7B0;
  void v14[3] = 0;
  v14[4] = 0;
  _OWORD v14[2] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F1476D0();
  uint64_t v15 = (uint64_t)v65;
  sub_21F157790();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_21F147724(*v14, v14[1]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v54 = v14;
    unint64_t v55 = (int *)v9;
    uint64_t v17 = v62;
    uint64_t v52 = v12;
    uint64_t v53 = a1;
    LOBYTE(v67) = 8;
    uint64_t v61 = v6;
    uint64_t v65 = v8;
    sub_21F1574E0();
    uint64_t v18 = v17;
    sub_21F156CE0();
    uint64_t v19 = sub_21F156CD0();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v57);
    uint64_t v22 = v63;
    if (v21 >> 60 == 15)
    {
      char v66 = 0;
      sub_21F147734();
      sub_21F157530();
      uint64_t v23 = (uint64_t)v54;
      uint64_t v24 = v67;
      uint64_t v25 = v68;
      uint64_t v26 = v69;
      uint64_t v27 = v70;
      sub_21F147724(*v54, v54[1]);
      *(void *)uint64_t v23 = v24;
      *(void *)(v23 + 8) = v25;
      *(void *)(v23 + 16) = v26;
      *(void *)(v23 + 24) = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE420);
      char v66 = 1;
      sub_21F147788();
      sub_21F157530();
      uint64_t v28 = v67;
      uint64_t v30 = v58;
      uint64_t v29 = v59;
      uint64_t v31 = v61;
      swift_bridgeObjectRelease();
      *(void *)(v23 + 32) = v28;
      LOBYTE(v67) = 2;
      char v32 = sub_21F1574F0();
      unint64_t v33 = v55;
      *(unsigned char *)(v23 + 40) = v32 & 1;
      LOBYTE(v67) = 3;
      *(unsigned char *)(v23 + v33[10]) = sub_21F1574F0() & 1;
      LOBYTE(v67) = 4;
      *(unsigned char *)(v23 + v33[11]) = sub_21F1574F0() & 1;
      LOBYTE(v67) = 5;
      sub_21F157500();
      *(void *)(v23 + 48) = v34;
      LOBYTE(v67) = 6;
      sub_21F157500();
      sub_21F1568F0();
      LOBYTE(v67) = 7;
      sub_21F157500();
      uint64_t v35 = (uint64_t)v53;
      uint64_t v36 = v60;
      uint64_t v37 = v64;
      sub_21F1568F0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v31);
      uint64_t v38 = v33 + 9;
    }
    else
    {
      sub_21F1565C0();
      swift_allocObject();
      sub_21F1565B0();
      sub_21F147678();
      uint64_t v39 = (uint64_t)v52;
      sub_21F1565A0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v65, v61);
      swift_release();
      sub_21F0FB8A8(v19, v21);
      uint64_t v35 = (uint64_t)v53;
      uint64_t v23 = (uint64_t)v54;
      uint64_t v40 = *(void *)v39;
      unint64_t v41 = *(void *)(v39 + 8);
      uint64_t v42 = *(void *)(v39 + 16);
      uint64_t v43 = *(void *)(v39 + 24);
      unint64_t v44 = v54[1];
      uint64_t v65 = (char *)*v54;
      uint64_t v45 = v54[2];
      uint64_t v62 = (char *)v54[3];
      uint64_t v63 = v45;
      sub_21F13DECC(v40, v41);
      sub_21F147724((uint64_t)v65, v44);
      *(void *)uint64_t v23 = v40;
      *(void *)(v23 + 8) = v41;
      *(void *)(v23 + 16) = v42;
      *(void *)(v23 + 24) = v43;
      uint64_t v46 = *(void *)(v39 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 32) = v46;
      *(unsigned char *)(v23 + 40) = *(unsigned char *)(v39 + 40);
      uint64_t v47 = v55;
      *(unsigned char *)(v23 + v55[10]) = *(unsigned char *)(v39 + v55[10]);
      *(unsigned char *)(v23 + v47[11]) = *(unsigned char *)(v39 + v47[11]);
      *(void *)(v23 + 48) = *(void *)(v39 + 48);
      uint64_t v48 = v47;
      uint64_t v30 = v58;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
      uint64_t v37 = v64;
      v49(v23 + v47[8], v39 + v47[8], v64);
      uint64_t v50 = v48[9];
      unint64_t v55 = v48 + 9;
      uint64_t v29 = v59;
      v49((uint64_t)v59, v39 + v50, v37);
      sub_21F145354(v39, type metadata accessor for PFLDecodableTaskParameters);
      uint64_t v36 = v60;
      uint64_t v38 = v55;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v23 + *v38, v29, v37);
    sub_21F1452EC(v23, v36, type metadata accessor for PFLDecodableTaskParameters);
    __swift_destroy_boxed_opaque_existential_0(v35);
    return sub_21F145354(v23, type metadata accessor for PFLDecodableTaskParameters);
  }
}

uint64_t sub_21F147638@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F146E08(a1, a2);
}

unint64_t sub_21F147650(uint64_t a1)
{
  unint64_t result = sub_21F147678();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F147678()
{
  unint64_t result = qword_267EBEED8;
  if (!qword_267EBEED8)
  {
    type metadata accessor for PFLDecodableTaskParameters(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEED8);
  }
  return result;
}

unint64_t sub_21F1476D0()
{
  unint64_t result = qword_267EBEEE8;
  if (!qword_267EBEEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEEE8);
  }
  return result;
}

uint64_t sub_21F147724(uint64_t a1, unint64_t a2)
{
  if (a2 != 6) {
    return sub_21F0FC0C4(a1, a2);
  }
  return a1;
}

unint64_t sub_21F147734()
{
  unint64_t result = qword_267EBEEF0;
  if (!qword_267EBEEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEEF0);
  }
  return result;
}

unint64_t sub_21F147788()
{
  unint64_t result = qword_267EBEEF8;
  if (!qword_267EBEEF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EBE420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEEF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PFLDecodableTaskParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F1478C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PFLDecodableTaskParameters.CodingKeys()
{
  return &type metadata for PFLDecodableTaskParameters.CodingKeys;
}

unint64_t sub_21F1478FC()
{
  unint64_t result = qword_267EBEF00;
  if (!qword_267EBEF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEF00);
  }
  return result;
}

unint64_t sub_21F147954()
{
  unint64_t result = qword_267EBEF08;
  if (!qword_267EBEF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEF08);
  }
  return result;
}

unint64_t sub_21F1479AC()
{
  unint64_t result = qword_267EBEF10;
  if (!qword_267EBEF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEF10);
  }
  return result;
}

uint64_t sub_21F147A00()
{
  unint64_t v0 = sub_21F157480();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t static PFLLogging.framework.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21F147B4C(&qword_267EBE2C0, (uint64_t)qword_267EBEF18, a1);
}

uint64_t sub_21F147A70(uint64_t a1)
{
  return sub_21F147AB0(a1, qword_267EBEF18);
}

uint64_t sub_21F147A94(uint64_t a1)
{
  return sub_21F147AB0(a1, qword_267EBEF30);
}

uint64_t sub_21F147AB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_21F156B90();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_21F156B80();
}

uint64_t static PFLLogging.plugin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21F147B4C(&qword_267EBE2C8, (uint64_t)qword_267EBEF30, a1);
}

uint64_t sub_21F147B4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_21F156B90();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

ValueMetadata *type metadata accessor for PFLLogging()
{
  return &type metadata for PFLLogging;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_21F147C58()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Buffer()
{
  return self;
}

uint64_t type metadata accessor for PFLChunk()
{
  return self;
}

uint64_t sub_21F147D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _OWORD v18[2] = *MEMORY[0x263EF8340];
  if (a2 == a3)
  {
    uint64_t v6 = v5;
    MEMORY[0x270FA5388](a1);
    switch(a5 >> 62)
    {
      case 1uLL:
        if (a4 >> 32 < (int)a4) {
          __break(1u);
        }
        sub_21F0FBDC0(a4, a5);
        sub_21F1481F4((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, sub_21F149140);
        if (v5) {
          goto LABEL_14;
        }
        uint64_t result = sub_21F0FB8BC(a4, a5);
        break;
      case 2uLL:
        a5 &= 0x3FFFFFFFFFFFFFFFuLL;
        uint64_t v16 = *(void *)(a4 + 16);
        uint64_t v17 = *(void *)(a4 + 24);
        swift_retain();
        swift_retain();
        sub_21F1481F4(v16, v17, a5, sub_21F149140);
        if (v6)
        {
          swift_release();
          swift_release();
          __break(1u);
LABEL_14:
          sub_21F0FB8BC(a4, a5);
          __break(1u);
          JUMPOUT(0x21F147F9CLL);
        }
        swift_release();
        uint64_t result = swift_release();
        break;
      case 3uLL:
        memset(v18, 0, 14);
        uint64_t v13 = 0;
        goto LABEL_8;
      default:
        v18[0] = a4;
        LOWORD(v18[1]) = a5;
        BYTE2(v18[1]) = BYTE2(a5);
        BYTE3(v18[1]) = BYTE3(a5);
        BYTE4(v18[1]) = BYTE4(a5);
        uint64_t v13 = (a5 >> 50) & 0x3F;
        BYTE5(v18[1]) = BYTE5(a5);
LABEL_8:
        uint64_t result = sub_21F147FAC((uint64_t)v18, v13, v10, v9, v10, v11, v12);
        break;
    }
  }
  else
  {
    sub_21F0ED588();
    swift_allocError();
    *uint64_t v14 = 14;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_21F147FAC(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  if (a3 < 0)
  {
LABEL_21:
    __break(1u);
  }
  else
  {
    uint64_t v7 = a3;
    if (a3)
    {
      uint64_t v10 = (int *)result;
      do
      {
        unsigned int v12 = *a4++;
        unint64_t v11 = v12;
        if (v12) {
          BOOL v13 = (uint64_t)v11 <= a6;
        }
        else {
          BOOL v13 = 0;
        }
        if (v13)
        {
          uint64_t result = v11 - 1;
          uint64_t v14 = *a7;
          if ((*a7 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x223C441C0](result);
          }
          else
          {
            if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) < v11)
            {
              __break(1u);
              goto LABEL_21;
            }
            uint64_t v15 = *(void *)(v14 + 8 * result + 32);
            swift_retain();
          }
          int v16 = *v10;
          uint64_t v17 = (uint64_t *)(v15 + 40);
          swift_beginAccess();
          uint64_t v18 = *(void *)(v15 + 40);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v15 + 40) = v18;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v18 = sub_21F103A90(0, *(void *)(v18 + 16) + 1, 1, v18);
            *uint64_t v17 = v18;
          }
          unint64_t v21 = *(void *)(v18 + 16);
          unint64_t v20 = *(void *)(v18 + 24);
          if (v21 >= v20 >> 1)
          {
            uint64_t v18 = sub_21F103A90(v20 > 1, v21 + 1, 1, v18);
            *uint64_t v17 = v18;
          }
          *(void *)(v18 + 16) = v21 + 1;
          *(_DWORD *)(v18 + 4 * v21 + 32) = v16;
          swift_endAccess();
          uint64_t result = swift_release();
        }
        ++v10;
        --v7;
      }
      while (v7);
    }
  }
  return result;
}

uint64_t type metadata accessor for PFLSparsifier()
{
  return self;
}

uint64_t sub_21F14814C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = sub_21F156670();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_21F1566A0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_21F156690();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a4(v8, v13);
}

uint64_t sub_21F1481F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = sub_21F156670();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_21F1566A0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_21F156690();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = v12 / 4;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  return a4(v8, v14);
}

uint64_t sub_21F1482AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v102 = a2;
  uint64_t v97 = a4;
  uint64_t v109 = *MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F156720();
  *(void *)&long long v98 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_21F156820();
  uint64_t v99 = *(void *)(v12 - 8);
  uint64_t v100 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a3 + 32);
  if (!*(void *)(v15 + 16))
  {
    long long v107 = 0u;
    long long v108 = 0u;
LABEL_17:
    sub_21F0ED4F0((uint64_t)&v107);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_21F10E9C8(0x6966697372617073, 0xEE006E6F69746163);
  if (v17)
  {
    sub_21F0ED61C(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v108 + 1)) {
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_21F0ED588();
    swift_allocError();
    char v28 = 9;
LABEL_19:
    *uint64_t v27 = v28;
    return swift_willThrow();
  }
  uint64_t v18 = v104;
  if (!*(void *)(v104 + 16)) {
    goto LABEL_25;
  }
  unint64_t v19 = sub_21F10E9C8(0x6B6E7568436D756ELL, 0xE900000000000073);
  if ((v20 & 1) == 0) {
    goto LABEL_25;
  }
  sub_21F0ED61C(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v107);
  sub_21F0ED5DC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v96 = a1;
  unint64_t v21 = (void *)v104;
  id v22 = objc_msgSend((id)v104, sel_integerValue);

  if (!*(void *)(v18 + 16)) {
    goto LABEL_25;
  }
  unint64_t v23 = sub_21F10E9C8(0xD000000000000013, 0x800000021F160940);
  if ((v24 & 1) == 0) {
    goto LABEL_25;
  }
  sub_21F0ED61C(*(void *)(v18 + 56) + 32 * v23, (uint64_t)&v107);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE440);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  unint64_t v95 = v104;
  if (*(void *)(v18 + 16) && (unint64_t v25 = sub_21F10E9C8(0xD000000000000015, 0x800000021F160960), (v26 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(v18 + 56) + 32 * v25, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  uint64_t v30 = v96;
  swift_bridgeObjectRelease();
  if (!*((void *)&v108 + 1))
  {
    swift_bridgeObjectRelease();
    sub_21F0ED4F0((uint64_t)&v107);
    goto LABEL_26;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
LABEL_26:
    sub_21F0ED588();
    swift_allocError();
    char v28 = 10;
    goto LABEL_19;
  }
  uint64_t v32 = *((void *)&v104 + 1);
  uint64_t v31 = v104;
  unint64_t v33 = v102 >> 62;
  uint64_t v34 = 0;
  switch(v102 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v30), v30))
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      uint64_t v34 = HIDWORD(v30) - (int)v30;
LABEL_31:
      if (v34 >= 0) {
        uint64_t v38 = v34;
      }
      else {
        uint64_t v38 = v34 + 3;
      }
      if (v95 >> 62)
      {
        uint64_t v91 = v104;
        uint64_t v92 = v34;
        unint64_t v93 = v102 >> 62;
        uint64_t v94 = (uint64_t)v22;
        uint64_t v86 = *((void *)&v104 + 1);
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_21F157420();
        swift_bridgeObjectRelease();
        uint64_t v31 = v91;
        uint64_t v34 = v92;
        uint64_t v32 = v86;
        unint64_t v33 = v93;
        id v22 = (id)v94;
        if (v94 != v87) {
          goto LABEL_71;
        }
      }
      else if (v22 != *(id *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_71:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21F0ED588();
        swift_allocError();
        char v28 = 11;
        goto LABEL_19;
      }
      uint64_t v39 = v38 >> 2;
      if (v39 < (uint64_t)v22) {
        goto LABEL_71;
      }
      unint64_t v93 = v33;
      uint64_t v94 = (uint64_t)v22;
      uint64_t v92 = v34;
      sub_21F149414(v31, v32);
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      if (!v41)
      {
        swift_bridgeObjectRelease();
        sub_21F0ED588();
        swift_allocError();
        char v28 = 12;
        goto LABEL_19;
      }
      uint64_t v91 = v39;
      (*(void (**)(char *, void, uint64_t))(v98 + 104))(v11, *MEMORY[0x263F06E38], v9);
      uint64_t v43 = v99;
      uint64_t v42 = v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v8, 1, 1, v100);
      sub_21F1567F0();
      unint64_t v44 = (void *)v101;
      uint64_t v45 = sub_21F156830();
      if (v44)
      {
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v42);
        sub_21F0ED588();
        swift_allocError();
        char v28 = 13;
        goto LABEL_19;
      }
      uint64_t v89 = v45;
      unint64_t v90 = v46;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v42);
      uint64_t v103 = MEMORY[0x263F8EE78];
      uint64_t v47 = v94;
      if (v94 < 0) {
        goto LABEL_74;
      }
      if (v94)
      {
        unint64_t v101 = v95 & 0xC000000000000001;
        if ((v95 & 0xC000000000000001) != 0
          || (unint64_t)(v94 - 1) < *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v48 = 0;
          long long v49 = *(_OWORD *)(v97 + 16);
          long long v105 = *(_OWORD *)(v97 + 32);
          v106[0] = v49;
          uint64_t v50 = *(void *)v97;
          uint64_t v99 = *(void *)(v97 + 8);
          uint64_t v100 = v50;
          long long v98 = xmmword_21F15C4F0;
          do
          {
            uint64_t v51 = v48 + 1;
            __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v98;
            *(void *)(inited + 32) = 7104112;
            uint64_t v53 = v100;
            *(void *)(inited + 40) = 0xE300000000000000;
            *(void *)(inited + 48) = v53;
            *(void *)(inited + 56) = v99;
            *(void *)(inited + 64) = 0x73746C75736572;
            *(void *)(inited + 72) = 0xE700000000000000;
            *(void *)&long long v107 = v48 + 1;
            swift_bridgeObjectRetain();
            *(void *)(inited + 80) = sub_21F1575D0();
            *(void *)(inited + 88) = v54;
            long long v55 = v105;
            *(_OWORD *)(inited + 96) = v106[0];
            *(_OWORD *)(inited + 112) = v55;
            sub_21F106734((uint64_t)v106);
            sub_21F106734((uint64_t)&v105);
            uint64_t v56 = sub_21F11DF24(inited);
            uint64_t v58 = v57;
            swift_setDeallocating();
            swift_arrayDestroy();
            if (v101) {
              id v59 = (id)MEMORY[0x223C441C0](v48, v95);
            }
            else {
              id v59 = *(id *)(v95 + 8 * v48 + 32);
            }
            uint64_t v60 = v59;
            objc_msgSend(v59, sel_doubleValue);
            uint64_t v62 = v61;

            type metadata accessor for PFLChunk();
            uint64_t v63 = (void *)swift_allocObject();
            v63[2] = v56;
            v63[3] = v58;
            v63[4] = v62;
            v63[5] = MEMORY[0x263F8EE78];
            uint64_t v64 = swift_retain();
            MEMORY[0x223C43D50](v64);
            if (*(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_21F156F20();
            }
            sub_21F156F50();
            sub_21F156F00();
            swift_release();
            uint64_t v48 = v51;
          }
          while (v47 != v51);
          goto LABEL_52;
        }
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        swift_release();
        swift_release();
        __break(1u);
        sub_21F0FB8BC(v96, v102);
        __break(1u);
        JUMPOUT(0x21F1490D4);
      }
LABEL_52:
      uint64_t v65 = swift_bridgeObjectRelease();
      uint64_t v66 = MEMORY[0x270FA5388](v65);
      unint64_t v67 = v90;
      uint64_t v68 = v96;
      *(&v88 - 6) = v91;
      *(&v88 - 5) = v68;
      *(&v88 - 4) = v102;
      *(&v88 - 3) = v47;
      *(&v88 - 2) = (uint64_t)&v103;
      switch(v67 >> 62)
      {
        case 1uLL:
          uint64_t v79 = (int)v89;
          uint64_t v80 = v89 >> 32;
          if (v89 >> 32 < (int)v89) {
            goto LABEL_76;
          }
          unint64_t v81 = v90 & 0x3FFFFFFFFFFFFFFFLL;
          sub_21F0FBDC0(v89, v90);
          sub_21F14814C(v79, v80, v81, sub_21F149114);
          sub_21F0FB8BC(v89, v90);
          goto LABEL_69;
        case 2uLL:
          uint64_t v72 = v67 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v73 = *(void *)(v89 + 16);
          uint64_t v74 = *(void *)(v89 + 24);
          swift_retain();
          swift_retain();
          sub_21F14814C(v73, v74, v72, sub_21F149114);
          swift_release();
          swift_release();
          goto LABEL_69;
        case 3uLL:
          *(void *)((char *)&v107 + 6) = 0;
          *(void *)&long long v107 = 0;
          if ((unint64_t)(v92 + 3) <= 6)
          {
            MEMORY[0x270FA5388](v66);
            *(&v88 - 6) = 0;
            *(&v88 - 5) = (uint64_t)&v107;
            *(&v88 - 4) = 0;
            *(&v88 - 3) = v47;
            uint64_t v75 = v93;
            *(&v88 - 2) = (uint64_t)&v103;
            switch(v75)
            {
              case 1:
                uint64_t v76 = (int)v96;
                uint64_t v77 = v96 >> 32;
                if (v96 >> 32 >= (int)v96) {
                  goto LABEL_68;
                }
                goto LABEL_77;
              case 2:
                goto LABEL_64;
              default:
                goto LABEL_69;
            }
          }
          goto LABEL_61;
        default:
          *(void *)&long long v107 = v89;
          WORD4(v107) = v67;
          BYTE10(v107) = BYTE2(v67);
          BYTE11(v107) = BYTE3(v67);
          BYTE12(v107) = BYTE4(v67);
          BYTE13(v107) = BYTE5(v67);
          if (v91 == BYTE6(v67))
          {
            MEMORY[0x270FA5388](v66);
            uint64_t v69 = v91;
            *(&v88 - 6) = v91;
            *(&v88 - 5) = (uint64_t)&v107;
            *(&v88 - 4) = v69;
            *(&v88 - 3) = v47;
            uint64_t v70 = v93;
            *(&v88 - 2) = (uint64_t)&v103;
            switch(v70)
            {
              case 1:
                uint64_t v76 = (int)v96;
                uint64_t v77 = v96 >> 32;
                if (v96 >> 32 < (int)v96) {
                  goto LABEL_78;
                }
LABEL_68:
                unint64_t v85 = v102 & 0x3FFFFFFFFFFFFFFFLL;
                sub_21F0FBDC0(v96, v102);
                sub_21F1481F4(v76, v77, v85, sub_21F149140);
                sub_21F0FB8BC(v96, v102);
                break;
              case 2:
LABEL_64:
                unint64_t v82 = v102 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v83 = *(void *)(v96 + 16);
                uint64_t v84 = *(void *)(v96 + 24);
                swift_retain();
                swift_retain();
                sub_21F1481F4(v83, v84, v82, sub_21F149140);
                swift_release();
                swift_release();
                break;
              case 3:
                *(void *)((char *)&v104 + 6) = 0;
                *(void *)&long long v104 = 0;
                unint64_t v71 = 0;
                goto LABEL_66;
              default:
                *(void *)&long long v104 = v96;
                DWORD2(v104) = v102;
                WORD6(v104) = WORD2(v102);
                unint64_t v71 = (v102 >> 50) & 0x3F;
LABEL_66:
                sub_21F147FAC((uint64_t)&v104, v71, v91, (unsigned __int8 *)&v107, v91, v47, &v103);
                break;
            }
LABEL_69:
            sub_21F104A14();
            sub_21F0FB8BC(v89, v90);
            uint64_t result = v103;
          }
          else
          {
LABEL_61:
            sub_21F0ED588();
            swift_allocError();
            *os_log_t v78 = 14;
            swift_willThrow();
            sub_21F0FB8BC(v89, v90);
            uint64_t result = swift_bridgeObjectRelease();
          }
          break;
      }
      return result;
    case 2uLL:
      uint64_t v36 = *(void *)(v30 + 16);
      uint64_t v35 = *(void *)(v30 + 24);
      BOOL v37 = __OFSUB__(v35, v36);
      uint64_t v34 = v35 - v36;
      if (!v37) {
        goto LABEL_31;
      }
      goto LABEL_73;
    case 3uLL:
      goto LABEL_31;
    default:
      uint64_t v34 = BYTE6(v102);
      goto LABEL_31;
  }
}

uint64_t sub_21F149114(uint64_t a1, uint64_t a2)
{
  return sub_21F14916C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_21F147D08);
}

uint64_t sub_21F149140(uint64_t a1, uint64_t a2)
{
  return sub_21F14916C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_21F147FAC);
}

uint64_t sub_21F14916C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_21F149198(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F1491F8()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21F149244(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F1492A4()
{
  return swift_bridgeObjectRetain();
}

void *PFLTask.__allocating_init(recipeId:recipe:attachments:taskPreferences:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for PFLTaskPreferences(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F0F0BA4(a5, (uint64_t)v12);
  type metadata accessor for PFLTask();
  uint64_t v13 = (void *)swift_allocObject();
  v13[5] = a4;
  uint64_t v13[6] = 0;
  _OWORD v13[2] = a1;
  void v13[3] = a2;
  void v13[4] = a3;
  sub_21F11B784((uint64_t)v12, (uint64_t)v13 + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences);
  uint64_t v13[6] = 0;
  swift_release();
  sub_21F0F0C08(a5);
  return v13;
}

uint64_t type metadata accessor for PFLTask()
{
  uint64_t result = qword_267EBEF48;
  if (!qword_267EBEF48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F149414(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v3 = sub_21F156820();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v12 = v4 + 16;
    uint64_t v14 = v10 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    unint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    unint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    char v26 = v13;
    char v24 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v22 = v15;
    unint64_t v23 = (void (**)(char *, uint64_t))(v12 - 8);
    v21[1] = v10;
    swift_bridgeObjectRetain();
    v21[0] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v26(v9, v14, v3);
      char v17 = *v16;
      (*v16)(v9, 0, 1, v3);
      if ((*v25)(v9, 1, v3) == 1) {
        break;
      }
      (*v24)(v6, v9, v3);
      sub_21F1567C0();
      char v18 = sub_21F156E60();
      swift_bridgeObjectRelease();
      if (v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = sub_21F1567C0();
        (*v23)(v6, v3);
        return v19;
      }
      (*v23)(v6, v3);
      v14 += v22;
      if (!--v11) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    char v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v17(v9, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_21F1496F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_beginAccess();
  uint64_t v11 = *(void *)(v5 + 32);
  swift_bridgeObjectRetain();
  Dictionary<>.parameter<A>(for:default:)(a1, a2, a3, v11, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F149780()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  if (!*(void *)(v1 + 16))
  {
    long long v5 = 0u;
    long long v6 = 0u;
LABEL_9:
    sub_21F0ED4F0((uint64_t)&v5);
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_21F10E9C8(0x6966697372617073, 0xEE006E6F69746163);
  if (v3)
  {
    sub_21F0ED61C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v5);
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v6 + 1)) {
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_21F149878()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  if (!*(void *)(v1 + 16))
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    sub_21F0ED4F0((uint64_t)&v6);
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_21F10E9C8(0xD000000000000013, 0x800000021F1609E0);
  if (v3)
  {
    sub_21F0ED61C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t PFLTask.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F0F0C08(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences);
  return v0;
}

uint64_t PFLTask.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F0F0C08(v0 + OBJC_IVAR____TtC24PrivateFederatedLearning7PFLTask_taskPreferences);
  return swift_deallocClassInstance();
}

uint64_t sub_21F149A30@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F149A80@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F149AD0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F149B20()
{
  return type metadata accessor for PFLTask();
}

uint64_t sub_21F149B28()
{
  uint64_t result = type metadata accessor for PFLTaskPreferences(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PFLTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PFLTask);
}

uint64_t dispatch thunk of PFLTask.recipeId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of PFLTask.recipe.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PFLTask.attachments.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PFLTask.attachmentPath(name:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PFLTask.parameter<A>(for:default:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of PFLTask.shouldApplySparsification()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t *sub_21F149CCC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F156930();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v10 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    unint64_t v16 = (uint64_t *)((char *)a1 + v15);
    char v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *unint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[16];
    uint64_t v21 = a3[17];
    uint64_t v22 = (uint64_t *)((char *)a1 + v20);
    unint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    unint64_t v25 = (uint64_t *)((char *)a1 + v21);
    char v26 = (uint64_t *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[18];
    uint64_t v29 = a3[19];
    uint64_t v30 = (uint64_t *)((char *)a1 + v28);
    uint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    *(uint64_t *)((char *)a1 + v29) = *(uint64_t *)((char *)a2 + v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_21F149ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F156930();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F14A004(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F156930();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v15 = (void *)(a1 + v14);
  unint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[16];
  uint64_t v20 = a3[17];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)(a1 + v20);
  unint64_t v25 = (void *)(a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[18];
  uint64_t v28 = a3[19];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F14A1C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F156930();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[11];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[13];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v14 = a3[16];
  uint64_t v15 = (void *)(a1 + v14);
  unint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[17];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[18];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F14A400(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F156930();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  uint64_t v11 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t sub_21F14A524(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F156930();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[11];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[13];
  unint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *unint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[17];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[18];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F14A6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F14A6EC);
}

uint64_t sub_21F14A6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F156930();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_21F14A7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F14A7C0);
}

uint64_t sub_21F14A7C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_21F156930();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CKPolicyRecord(uint64_t a1)
{
  return sub_21F144F44(a1, qword_267EBEF88);
}

uint64_t sub_21F14A89C()
{
  uint64_t result = sub_21F156930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F14A964(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21F14A99C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFA8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v217 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v217 - v8;
  uint64_t v10 = sub_21F156930();
  uint64_t v234 = *(void *)(v10 - 8);
  v235 = (int *)v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  v228 = (char *)&v217 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v229 = (char *)&v217 - v13;
  uint64_t v14 = (int *)type metadata accessor for CKPolicyRecord(0);
  uint64_t v15 = *((void *)v14 - 1);
  unint64_t v16 = (int *)MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v217 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v16[7];
  *(void *)&v18[v19] = &unk_26D0ACFB0;
  uint64_t v239 = v16[9];
  *(void *)&v18[v239] = &unk_26D0ACFE0;
  uint64_t v240 = v16[10];
  *(void *)&v18[v240] = &unk_26D0AD010;
  uint64_t v237 = v16[12];
  *(void *)&v18[v237] = &unk_26D0AD040;
  uint64_t v236 = v16[14];
  *(void *)&v18[v236] = &unk_26D0AD070;
  uint64_t v20 = sub_21F157190();
  uint64_t v238 = v19;
  if (v20 == *(void *)aPolicy_1 && v21 == unk_267EBEF68)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = sub_21F157600();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      if (qword_267EBE2C0 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_21F156B90();
      __swift_project_value_buffer(v65, (uint64_t)qword_267EBEF18);
      id v66 = a1;
      unint64_t v67 = sub_21F156B70();
      os_log_type_t v68 = sub_21F157110();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        v235 = v14;
        uint64_t v233 = a2;
        uint64_t v70 = (uint8_t *)v69;
        uint64_t v71 = v15;
        uint64_t v72 = swift_slowAlloc();
        uint64_t v241 = v72;
        *(_DWORD *)uint64_t v70 = 136315138;
        uint64_t v73 = sub_21F157190();
        uint64_t v243 = sub_21F103FD0(v73, v74, &v241);
        sub_21F1571F0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21F0DC000, v67, v68, "Invalid recordType: %s", v70, 0xCu);
        swift_arrayDestroy();
        uint64_t v75 = v72;
        uint64_t v15 = v71;
        MEMORY[0x223C45170](v75, -1, -1);
        uint64_t v76 = v70;
        a2 = v233;
        uint64_t v14 = v235;
        MEMORY[0x223C45170](v76, -1, -1);
      }
      else
      {
      }
      goto LABEL_36;
    }
  }
  v230 = v18;
  uint64_t v231 = v15;
  id v232 = a1;
  uint64_t v233 = a2;
  id v23 = objc_msgSend(a1, sel_values);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFA0);
  uint64_t v25 = sub_21F156BD0();

  if (!*(void *)(v25 + 16) || (unint64_t v26 = sub_21F10E9C8(0x61645F7472617473, 0xEE00656D69746574), (v27 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v234 + 56))(v9, 1, 1, v235);
    goto LABEL_19;
  }
  uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = v28;
  uint64_t v29 = v235;
  int v30 = swift_dynamicCast();
  uint64_t v31 = v234;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, int *))(v234 + 56);
  v32(v9, v30 ^ 1u, 1, v29);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, int *))(v31 + 48);
  if (v33(v9, 1, v29) == 1)
  {
LABEL_19:
    sub_21F0FC154((uint64_t)v9, &qword_267EBEFA8);
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_21F156B90();
    __swift_project_value_buffer(v59, (uint64_t)qword_267EBEF18);
    uint64_t v60 = sub_21F156B70();
    os_log_type_t v61 = sub_21F157110();
    BOOL v62 = os_log_type_enabled(v60, v61);
    uint64_t v15 = v231;
    id v63 = v232;
    if (v62)
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_21F0DC000, v60, v61, "Failed at parsing start_datetime", v64, 2u);
      MEMORY[0x223C45170](v64, -1, -1);
    }

    a2 = v233;
    goto LABEL_36;
  }
  v226 = *(void (**)(char *, char *, int *))(v31 + 32);
  uint64_t v227 = v31 + 32;
  v226(v229, v9, v29);
  id v34 = objc_msgSend(v232, sel_values);
  uint64_t v35 = sub_21F156BD0();

  if (!*(void *)(v35 + 16)
    || (uint64_t v36 = v24, v37 = sub_21F10E9C8(0x657461645F646E65, 0xEC000000656D6974), (v38 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v32(v7, 1, 1, v235);
    a2 = v233;
    goto LABEL_31;
  }
  uint64_t v39 = *(void *)(*(void *)(v35 + 56) + 8 * v37);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = v39;
  uint64_t v40 = v235;
  int v41 = swift_dynamicCast();
  v32(v7, v41 ^ 1u, 1, v40);
  unsigned int v42 = v33(v7, 1, v40);
  a2 = v233;
  uint64_t v43 = v230;
  if (v42 == 1)
  {
LABEL_31:
    sub_21F0FC154((uint64_t)v7, &qword_267EBEFA8);
    uint64_t v15 = v231;
    uint64_t v77 = v234;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_21F156B90();
    __swift_project_value_buffer(v78, (uint64_t)qword_267EBEF18);
    uint64_t v79 = sub_21F156B70();
    os_log_type_t v80 = sub_21F157110();
    if (os_log_type_enabled(v79, v80))
    {
      unint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v81 = 0;
      _os_log_impl(&dword_21F0DC000, v79, v80, "Failed at parsing end_datetime", v81, 2u);
      unint64_t v82 = v81;
      uint64_t v15 = v231;
      MEMORY[0x223C45170](v82, -1, -1);
    }

    (*(void (**)(char *, int *))(v77 + 8))(v229, v235);
    goto LABEL_36;
  }
  v226(v228, v7, v40);
  id v44 = v232;
  id v45 = objc_msgSend(v232, sel_values);
  uint64_t v225 = v36;
  uint64_t v46 = sub_21F156BD0();

  uint64_t v15 = v231;
  uint64_t v47 = v238;
  uint64_t v48 = v234;
  if (!*(void *)(v46 + 16) || (unint64_t v49 = sub_21F10E9C8(0x74726F686F63, 0xE600000000000000), (v50 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  uint64_t v51 = *(void *)(*(void *)(v46 + 56) + 8 * v49);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = v51;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_38:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_21F156B90();
    __swift_project_value_buffer(v84, (uint64_t)qword_267EBEF18);
    unint64_t v85 = sub_21F156B70();
    os_log_type_t v86 = sub_21F157110();
    if (!os_log_type_enabled(v85, v86)) {
      goto LABEL_43;
    }
    uint64_t v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v87 = 0;
    uint64_t v88 = "Failed at parsing cohort";
    goto LABEL_42;
  }
  uint64_t v52 = v243;
  id v53 = objc_msgSend(v44, sel_values);
  uint64_t v54 = sub_21F156BD0();

  if (*(void *)(v54 + 16) && (unint64_t v55 = sub_21F10E9C8(0x73656369766564, 0xE700000000000000), (v56 & 1) != 0))
  {
    uint64_t v57 = *(void *)(*(void *)(v54 + 56) + 8 * v55);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v241 = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    if (swift_dynamicCast())
    {
      uint64_t v58 = v243;
      swift_bridgeObjectRelease();
      *(void *)&v43[v47] = v58;
      goto LABEL_50;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v92 = sub_21F156B90();
  __swift_project_value_buffer(v92, (uint64_t)qword_267EBEF18);
  unint64_t v93 = sub_21F156B70();
  os_log_type_t v94 = sub_21F157110();
  if (os_log_type_enabled(v93, v94))
  {
    uint64_t v95 = v52;
    uint64_t v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v96 = 0;
    _os_log_impl(&dword_21F0DC000, v93, v94, "devices not set in the CK record. Interpreting this as all device types.", v96, 2u);
    uint64_t v97 = v96;
    uint64_t v52 = v95;
    id v44 = v232;
    MEMORY[0x223C45170](v97, -1, -1);
  }

LABEL_50:
  id v98 = objc_msgSend(v44, sel_values);
  uint64_t v99 = sub_21F156BD0();

  if (!*(void *)(v99 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_60:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v112 = sub_21F156B90();
    __swift_project_value_buffer(v112, (uint64_t)qword_267EBEF18);
    unint64_t v85 = sub_21F156B70();
    os_log_type_t v86 = sub_21F157110();
    if (!os_log_type_enabled(v85, v86)) {
      goto LABEL_43;
    }
    uint64_t v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v87 = 0;
    uint64_t v88 = "Failed at parsing iteration";
    goto LABEL_42;
  }
  unint64_t v100 = sub_21F10E9C8(0x6F69746172657469, 0xE90000000000006ELL);
  if ((v101 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  uint64_t v102 = *(void *)(*(void *)(v99 + 56) + 8 * v100);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = v102;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_59:
    a2 = v233;
    goto LABEL_60;
  }
  uint64_t v224 = v243;
  id v103 = objc_msgSend(v44, sel_values);
  uint64_t v104 = sub_21F156BD0();

  uint64_t v105 = *(void *)(v104 + 16);
  uint64_t v223 = v52;
  if (v105 && (unint64_t v106 = sub_21F10E9C8(0x65676175676E616CLL, 0xE900000000000073), (v107 & 1) != 0))
  {
    uint64_t v108 = *(void *)(*(void *)(v104 + 56) + 8 * v106);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v241 = v108;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    char v109 = swift_dynamicCast();
    a2 = v233;
    if (v109)
    {
      uint64_t v110 = v243;
      uint64_t v111 = v239;
      swift_bridgeObjectRelease();
      *(void *)&v43[v111] = v110;
      goto LABEL_70;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    a2 = v233;
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v113 = sub_21F156B90();
  __swift_project_value_buffer(v113, (uint64_t)qword_267EBEF18);
  int v114 = sub_21F156B70();
  os_log_type_t v115 = sub_21F157110();
  if (os_log_type_enabled(v114, v115))
  {
    unint64_t v116 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v116 = 0;
    _os_log_impl(&dword_21F0DC000, v114, v115, "languages not set in the CK record. Interpreting this as all languages.", v116, 2u);
    MEMORY[0x223C45170](v116, -1, -1);
  }

LABEL_70:
  id v117 = objc_msgSend(v44, sel_values);
  uint64_t v118 = sub_21F156BD0();

  if (*(void *)(v118 + 16) && (unint64_t v119 = sub_21F10E9C8(0x73656C61636F6CLL, 0xE700000000000000), (v120 & 1) != 0))
  {
    uint64_t v121 = *(void *)(*(void *)(v118 + 56) + 8 * v119);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v241 = v121;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    if (swift_dynamicCast())
    {
      uint64_t v122 = v243;
      uint64_t v123 = v240;
      swift_bridgeObjectRelease();
      *(void *)&v43[v123] = v122;
      goto LABEL_80;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v124 = sub_21F156B90();
  __swift_project_value_buffer(v124, (uint64_t)qword_267EBEF18);
  uint64_t v125 = sub_21F156B70();
  os_log_type_t v126 = sub_21F157110();
  if (os_log_type_enabled(v125, v126))
  {
    unint64_t v127 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v127 = 0;
    _os_log_impl(&dword_21F0DC000, v125, v126, "locales not set in the CK record. Interpreting this as all locales.", v127, 2u);
    MEMORY[0x223C45170](v127, -1, -1);
  }

LABEL_80:
  id v128 = objc_msgSend(v44, sel_values);
  uint64_t v129 = sub_21F156BD0();

  if (!*(void *)(v129 + 16) || (unint64_t v130 = sub_21F10E9C8(0x695F6E6967756C70, 0xE900000000000064), (v131 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_88;
  }
  uint64_t v132 = *(void *)(*(void *)(v129 + 56) + 8 * v130);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v243 = v132;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_88:
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v143 = sub_21F156B90();
    __swift_project_value_buffer(v143, (uint64_t)qword_267EBEF18);
    unint64_t v85 = sub_21F156B70();
    os_log_type_t v86 = sub_21F157110();
    if (!os_log_type_enabled(v85, v86)) {
      goto LABEL_43;
    }
    uint64_t v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v87 = 0;
    uint64_t v88 = "Failed at parsing plugin_id";
LABEL_42:
    _os_log_impl(&dword_21F0DC000, v85, v86, v88, v87, 2u);
    uint64_t v89 = v87;
    uint64_t v15 = v231;
    MEMORY[0x223C45170](v89, -1, -1);
LABEL_43:

    unint64_t v90 = *(void (**)(char *, int *))(v48 + 8);
    uint64_t v91 = v235;
    v90(v228, v235);
    v90(v229, v91);
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v15 + 56))(a2, 1, 1, v14);
  }
  uint64_t v133 = v224;
  uint64_t v134 = v242;
  uint64_t v222 = v241;
  id v135 = objc_msgSend(v44, sel_values);
  uint64_t v136 = sub_21F156BD0();

  if (*(void *)(v136 + 16) && (unint64_t v137 = sub_21F10E9C8(0xD000000000000013, 0x800000021F15F620), (v138 & 1) != 0))
  {
    uint64_t v139 = *(void *)(*(void *)(v136 + 56) + 8 * v137);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v241 = v139;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    if (swift_dynamicCast())
    {
      uint64_t v140 = v243;
      uint64_t v141 = v237;
      uint64_t v142 = v230;
      swift_bridgeObjectRelease();
      *(void *)&v142[v141] = v140;
      goto LABEL_98;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v144 = sub_21F156B90();
  __swift_project_value_buffer(v144, (uint64_t)qword_267EBEF18);
  uint64_t v145 = sub_21F156B70();
  os_log_type_t v146 = sub_21F157110();
  if (os_log_type_enabled(v145, v146))
  {
    uint64_t v147 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v147 = 0;
    _os_log_impl(&dword_21F0DC000, v145, v146, "population_category not set in the CK record. Interpreting this as $all.", v147, 2u);
    MEMORY[0x223C45170](v147, -1, -1);
  }

LABEL_98:
  id v148 = objc_msgSend(v232, sel_values);
  uint64_t v149 = sub_21F156BD0();

  if (!*(void *)(v149 + 16) || (unint64_t v150 = sub_21F10E9C8(0x695F657069636572, 0xE900000000000064), (v151 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_106;
  }
  uint64_t v152 = *(void *)(*(void *)(v149 + 56) + 8 * v150);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v243 = v152;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_106:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v161 = sub_21F156B90();
    __swift_project_value_buffer(v161, (uint64_t)qword_267EBEF18);
    v162 = sub_21F156B70();
    os_log_type_t v163 = sub_21F157110();
    if (!os_log_type_enabled(v162, v163)) {
      goto LABEL_111;
    }
    v164 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v164 = 0;
    v165 = "Failed at parsing recipe_id";
    goto LABEL_110;
  }
  uint64_t v220 = v241;
  uint64_t v221 = v242;
  id v153 = objc_msgSend(v232, sel_values);
  uint64_t v154 = sub_21F156BD0();

  if (*(void *)(v154 + 16) && (unint64_t v155 = sub_21F10E9C8(0x736E6F69676572, 0xE700000000000000), (v156 & 1) != 0))
  {
    uint64_t v157 = *(void *)(*(void *)(v154 + 56) + 8 * v155);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v241 = v157;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
    if (swift_dynamicCast())
    {
      uint64_t v158 = v243;
      uint64_t v159 = v236;
      v160 = v230;
      swift_bridgeObjectRelease();
      *(void *)&v160[v159] = v158;
      goto LABEL_118;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v168 = sub_21F156B90();
  __swift_project_value_buffer(v168, (uint64_t)qword_267EBEF18);
  v169 = sub_21F156B70();
  os_log_type_t v170 = sub_21F157110();
  if (os_log_type_enabled(v169, v170))
  {
    v171 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v171 = 0;
    _os_log_impl(&dword_21F0DC000, v169, v170, "regions not set in the CK record. Interpreting this as all regions.", v171, 2u);
    MEMORY[0x223C45170](v171, -1, -1);
  }

LABEL_118:
  id v172 = objc_msgSend(v232, sel_values);
  uint64_t v173 = sub_21F156BD0();

  if (!*(void *)(v173 + 16) || (unint64_t v174 = sub_21F10E9C8(0x676E696C706D6173, 0xED0000657461725FLL), (v175 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_135:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v201 = sub_21F156B90();
    __swift_project_value_buffer(v201, (uint64_t)qword_267EBEF18);
    v162 = sub_21F156B70();
    os_log_type_t v163 = sub_21F157110();
    if (!os_log_type_enabled(v162, v163)) {
      goto LABEL_111;
    }
    v164 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v164 = 0;
    v165 = "Failed at parsing sampling_rate";
    goto LABEL_110;
  }
  uint64_t v176 = *(void *)(*(void *)(v173 + 56) + 8 * v174);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = v176;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_135;
  }
  uint64_t v177 = v243;
  id v178 = objc_msgSend(v232, sel_values);
  uint64_t v179 = sub_21F156BD0();

  if (!*(void *)(v179 + 16) || (unint64_t v180 = sub_21F10E9C8(0x737574617473, 0xE600000000000000), (v181 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_141:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v202 = sub_21F156B90();
    __swift_project_value_buffer(v202, (uint64_t)qword_267EBEF18);
    v162 = sub_21F156B70();
    os_log_type_t v163 = sub_21F157110();
    if (!os_log_type_enabled(v162, v163)) {
      goto LABEL_111;
    }
    v164 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v164 = 0;
    v165 = "Failed at parsing status";
    goto LABEL_110;
  }
  uint64_t v182 = *(void *)(*(void *)(v179 + 56) + 8 * v180);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v243 = v182;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_141;
  }
  uint64_t v218 = v241;
  uint64_t v219 = v242;
  id v183 = objc_msgSend(v232, sel_values);
  uint64_t v184 = sub_21F156BD0();

  if (!*(void *)(v184 + 16) || (unint64_t v185 = sub_21F10E9C8(0x635F746567726174, 0xEF61697265746972), (v186 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_147:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v203 = sub_21F156B90();
    __swift_project_value_buffer(v203, (uint64_t)qword_267EBEF18);
    v162 = sub_21F156B70();
    os_log_type_t v163 = sub_21F157110();
    if (!os_log_type_enabled(v162, v163)) {
      goto LABEL_111;
    }
    v164 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v164 = 0;
    v165 = "Failed at reading target_criteria_str from CK record.";
    goto LABEL_110;
  }
  uint64_t v187 = *(void *)(*(void *)(v184 + 56) + 8 * v185);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v243 = v187;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_147;
  }
  uint64_t v188 = v242;
  uint64_t v217 = v241;
  id v189 = objc_msgSend(v232, sel_values);
  uint64_t v190 = sub_21F156BD0();

  if (!*(void *)(v190 + 16) || (unint64_t v191 = sub_21F10E9C8(0x64695F6B736174, 0xE700000000000000), (v192 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_153:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v204 = sub_21F156B90();
    __swift_project_value_buffer(v204, (uint64_t)qword_267EBEF18);
    v162 = sub_21F156B70();
    os_log_type_t v163 = sub_21F157110();
    if (!os_log_type_enabled(v162, v163)) {
      goto LABEL_111;
    }
    v164 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v164 = 0;
    v165 = "Failed at parsing task_id";
LABEL_110:
    _os_log_impl(&dword_21F0DC000, v162, v163, v165, v164, 2u);
    MEMORY[0x223C45170](v164, -1, -1);
LABEL_111:

    v166 = v235;
    v167 = *(void (**)(char *, int *))(v234 + 8);
    v167(v228, v235);
    v167(v229, v166);
    a2 = v233;
    uint64_t v15 = v231;
    goto LABEL_36;
  }
  uint64_t v193 = *(void *)(*(void *)(v190 + 56) + 8 * v191);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v243 = v193;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_153;
  }
  uint64_t v194 = v241;
  uint64_t v240 = v242;
  id v195 = objc_msgSend(v232, sel_values);
  uint64_t v196 = sub_21F156BD0();

  if (!*(void *)(v196 + 16) || (unint64_t v197 = sub_21F10E9C8(0x7364656573, 0xE500000000000000), (v198 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_159;
  }
  uint64_t v199 = *(void *)(*(void *)(v196 + 56) + 8 * v197);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = v199;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_159:

    uint64_t v200 = MEMORY[0x263F8EE78];
    goto LABEL_160;
  }
  uint64_t v200 = v243;

LABEL_160:
  uint64_t v205 = (uint64_t)v230;
  v206 = v235;
  v207 = (void (*)(uint64_t, char *, int *))v226;
  v226(v230, v229, v235);
  v207(v205 + v14[5], v228, v206);
  *(void *)(v205 + v14[6]) = v223;
  *(void *)(v205 + v14[8]) = v133;
  v208 = (uint64_t *)(v205 + v14[11]);
  uint64_t *v208 = v222;
  v208[1] = v134;
  v209 = (uint64_t *)(v205 + v14[13]);
  uint64_t v210 = v221;
  uint64_t *v209 = v220;
  v209[1] = v210;
  *(void *)(v205 + v14[15]) = v177;
  v211 = (uint64_t *)(v205 + v14[16]);
  uint64_t v212 = v219;
  uint64_t *v211 = v218;
  v211[1] = v212;
  v213 = (uint64_t *)(v205 + v14[17]);
  uint64_t *v213 = v217;
  v213[1] = v188;
  v214 = (uint64_t *)(v205 + v14[18]);
  uint64_t v215 = v240;
  uint64_t *v214 = v194;
  v214[1] = v215;
  *(void *)(v205 + v14[19]) = v200;
  uint64_t v216 = v233;
  sub_21F128B14(v205, v233);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v231 + 56))(v216, 0, 1, v14);
  return sub_21F14D1BC(v205);
}

uint64_t sub_21F14C7DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F156820();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v62 - v11;
  uint64_t v13 = type metadata accessor for CKPayloadRecord(0);
  uint64_t v68 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_21F157190() == *(void *)aPayload && v16 == unk_267EBEF78)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v67 = v13;
    id v18 = objc_msgSend(a1, sel_values);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFA0);
    uint64_t v19 = sub_21F156BD0();

    if (*(void *)(v19 + 16) && (unint64_t v20 = sub_21F10E9C8(0x695F6E6967756C70, 0xE900000000000064), (v21 & 1) != 0))
    {
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v71 = v22;
      if (swift_dynamicCast())
      {
        uint64_t v64 = v69;
        unint64_t v65 = v70;
        id v23 = objc_msgSend(a1, sel_values);
        uint64_t v24 = sub_21F156BD0();

        if (*(void *)(v24 + 16) && (unint64_t v25 = sub_21F10E9C8(0x657069636572, 0xE600000000000000), (v26 & 1) != 0))
        {
          uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v71 = v27;
          if (swift_dynamicCast())
          {
            uint64_t v62 = v69;
            unint64_t v63 = v70;
            id v28 = objc_msgSend(a1, sel_values);
            uint64_t v29 = sub_21F156BD0();

            if (*(void *)(v29 + 16) && (sub_21F10E9C8(0x656D686361747461, 0xEA0000000000746ELL), (v30 & 1) != 0))
            {
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease();
              self;
              uint64_t v31 = (void *)swift_dynamicCastObjCClass();
              if (v31)
              {
                id v32 = objc_msgSend(v31, sel_fileURL);
                if (v32)
                {
                  uint64_t v33 = v32;
                  sub_21F1567B0();
                  swift_unknownObjectRelease();

                  uint64_t v34 = v66;
                  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
                  v35(v6, v10, v7);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v6, 0, 1, v7);
                  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v6, 1, v7);
                  uint64_t v37 = v68;
                  if (v36 != 1)
                  {

                    v35(v12, v6, v7);
                    uint64_t v38 = v65;
                    *uint64_t v15 = v64;
                    v15[1] = v38;
                    unint64_t v39 = v63;
                    long long v15[2] = v62;
                    v15[3] = v39;
                    uint64_t v40 = v67;
                    v35((char *)v15 + *(int *)(v67 + 24), v12, v7);
                    uint64_t v13 = v40;
                    sub_21F14D158((uint64_t)v15, a2);
                    uint64_t v41 = 0;
                    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v41, 1, v13);
                  }
                }
                else
                {
                  swift_unknownObjectRelease();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v6, 1, 1, v7);
                  uint64_t v37 = v68;
                }
                swift_bridgeObjectRelease();
                sub_21F0FC154((uint64_t)v6, &qword_267EBE730);
                goto LABEL_39;
              }
              swift_unknownObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            uint64_t v37 = v68;
LABEL_39:
            uint64_t v58 = v62;
            unint64_t v57 = v63;
            if (qword_267EBE2C0 != -1) {
              swift_once();
            }
            uint64_t v59 = sub_21F156B90();
            __swift_project_value_buffer(v59, (uint64_t)qword_267EBEF18);
            uint64_t v43 = sub_21F156B70();
            os_log_type_t v60 = sub_21F157110();
            if (os_log_type_enabled(v43, v60))
            {
              os_log_type_t v61 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)os_log_type_t v61 = 0;
              _os_log_impl(&dword_21F0DC000, v43, v60, "Failed at parsing attachment", v61, 2u);
              MEMORY[0x223C45170](v61, -1, -1);
            }
            sub_21F0FB8BC(v58, v57);
            goto LABEL_23;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v37 = v68;
        if (qword_267EBE2C0 != -1) {
          swift_once();
        }
        uint64_t v56 = sub_21F156B90();
        __swift_project_value_buffer(v56, (uint64_t)qword_267EBEF18);
        uint64_t v43 = sub_21F156B70();
        os_log_type_t v44 = sub_21F157110();
        if (!os_log_type_enabled(v43, v44)) {
          goto LABEL_23;
        }
        id v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v45 = 0;
        uint64_t v46 = "Failed at parsing recipe";
LABEL_22:
        _os_log_impl(&dword_21F0DC000, v43, v44, v46, v45, 2u);
        MEMORY[0x223C45170](v45, -1, -1);
LABEL_23:

        uint64_t v41 = 1;
        uint64_t v13 = v67;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v41, 1, v13);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v37 = v68;
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_21F156B90();
    __swift_project_value_buffer(v42, (uint64_t)qword_267EBEF18);
    uint64_t v43 = sub_21F156B70();
    os_log_type_t v44 = sub_21F157110();
    if (!os_log_type_enabled(v43, v44)) {
      goto LABEL_23;
    }
    id v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v45 = 0;
    uint64_t v46 = "Failed at parsing plugin_id";
    goto LABEL_22;
  }
  char v17 = sub_21F157600();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_5;
  }
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_21F156B90();
  __swift_project_value_buffer(v47, (uint64_t)qword_267EBEF18);
  id v48 = a1;
  unint64_t v49 = sub_21F156B70();
  os_log_type_t v50 = sub_21F157110();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v69 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v53 = sub_21F157190();
    uint64_t v71 = sub_21F103FD0(v53, v54, &v69);
    sub_21F1571F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v49, v50, "Invalid recordType: %s", v51, 0xCu);
    uint64_t v41 = 1;
    swift_arrayDestroy();
    MEMORY[0x223C45170](v52, -1, -1);
    MEMORY[0x223C45170](v51, -1, -1);
  }
  else
  {

    uint64_t v41 = 1;
  }
  uint64_t v37 = v68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v41, 1, v13);
}

uint64_t type metadata accessor for CKPayloadRecord(uint64_t a1)
{
  return sub_21F144F44(a1, (uint64_t *)&unk_267EBEFB8);
}

uint64_t sub_21F14D158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKPayloadRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F14D1BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CKPolicyRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_21F14D218(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[2];
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_21F0FBDC0(v8, v9);
    a1[2] = v8;
    a1[3] = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_21F156820();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_21F14D30C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_21F0FB8BC(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_21F156820();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_21F14D38C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  sub_21F0FBDC0(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_21F156820();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

void *sub_21F14D430(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_21F0FBDC0(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_21F0FB8BC(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_21F156820();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_21F14D4F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_21F156820();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_21F14D56C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_21F0FB8BC(v7, v8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_21F156820();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_21F14D608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F14D61C);
}

uint64_t sub_21F14D61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F156820();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21F14D6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F14D6E0);
}

uint64_t sub_21F14D6E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21F156820();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21F14D788()
{
  uint64_t result = sub_21F156820();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DediscoError.rawValue.getter()
{
  return *v0 + 9600;
}

PrivateFederatedLearning::DediscoError_optional __swiftcall DediscoError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = rawValue + 0x80;
  if ((unint64_t)(rawValue - 9600) >= 0x12) {
    char v2 = 18;
  }
  *unint64_t v1 = v2;
  return (PrivateFederatedLearning::DediscoError_optional)rawValue;
}

unint64_t sub_21F14D858()
{
  unint64_t result = qword_267EBEFC8;
  if (!qword_267EBEFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEFC8);
  }
  return result;
}

uint64_t sub_21F14D8AC()
{
  return sub_21F157710();
}

uint64_t sub_21F14D8F8()
{
  return sub_21F157700();
}

uint64_t sub_21F14D92C()
{
  return sub_21F157710();
}

PrivateFederatedLearning::DediscoError_optional sub_21F14D974(Swift::Int *a1)
{
  return DediscoError.init(rawValue:)(*a1);
}

void sub_21F14D97C(void *a1@<X8>)
{
  *a1 = *v1 + 9600;
}

uint64_t sub_21F14D990(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21F14DB7C();
  unint64_t v5 = sub_21F12A528();
  return MEMORY[0x270F9FB50](a1, a2, v4, v5);
}

uint64_t getEnumTagSinglePayload for DediscoError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DediscoError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F14DB44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DediscoError()
{
  return &type metadata for DediscoError;
}

unint64_t sub_21F14DB7C()
{
  unint64_t result = qword_267EBEFD0;
  if (!qword_267EBEFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEFD0);
  }
  return result;
}

uint64_t type metadata accessor for DediscoNumericMetadataEncoder()
{
  return self;
}

uint64_t sub_21F14DBF4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = sub_21F11F40C(a3, 0);
  uint64_t v4 = sub_21F0F34A0(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F14DC44(unint64_t a1, float a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE620);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F159670;
  *(float *)(inited + 32) = a2;
  uint64_t v5 = sub_21F14DD68(inited, a1);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_21F14DCC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_21F11F40C(a2, 0);
  uint64_t v3 = sub_21F0F34A0(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_21F14DD1C(unint64_t a1)
{
  uint64_t v1 = sub_21F11F40C(a1, 0);
  uint64_t v2 = sub_21F0F34A0(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21F14DD68(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2;
  uint64_t v5 = sub_21F11F40C(a2, 0);
  unint64_t v6 = *(void *)(a1 + 16);
  if ((uint64_t)v6 < (uint64_t)v3) {
    unint64_t v3 = *(void *)(a1 + 16);
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  if (!v3) {
    goto LABEL_15;
  }
  if (!v6) {
    goto LABEL_17;
  }
  if (v3 - 1 >= v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 - 1 >= *(void *)(v5 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_20:
  }
    uint64_t v2 = sub_21F127410(v2);
  unint64_t v7 = 0;
  if (v3 < 8) {
    goto LABEL_23;
  }
  if ((unint64_t)(v2 - a1) < 0x20) {
    goto LABEL_23;
  }
  uint64_t v8 = 0;
  unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v3 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    long long v10 = *(_OWORD *)(a1 + v8 + 48);
    uint64_t v11 = v2 + v8;
    *(_OWORD *)(v11 + 32) = *(_OWORD *)(a1 + v8 + 32);
    *(_OWORD *)(v11 + 48) = v10;
    v8 += 32;
    v9 -= 8;
  }
  while (v9);
  if (v3 != v7)
  {
LABEL_23:
    do
    {
      *(_DWORD *)(v2 + 4 * v7 + 32) = *(_DWORD *)(a1 + 32 + 4 * v7);
      ++v7;
    }
    while (v3 != v7);
  }
LABEL_15:
  uint64_t v12 = sub_21F0F34A0(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_21F1571C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v17 = (char *)&v45 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v53 = 46;
  unint64_t v54 = 0xE100000000000000;
  sub_21F0FB854();
  unint64_t v20 = (void *)sub_21F157210();
  char v21 = v20;
  uint64_t v22 = v20[2];
  if (!v22)
  {
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return swift_bridgeObjectRelease();
  }
  uint64_t v51 = v11;
  uint64_t v23 = v22 - 1;
  if (!v23)
  {
    uint64_t v24 = v20[4];
    uint64_t v25 = v20[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v55 = v24;
    uint64_t v56 = v25;
    MEMORY[0x223C43A90](&v55, a3, MEMORY[0x263F8D310], a4, MEMORY[0x263F8D320]);
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, a4) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v19, v10);
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
    }
    else
    {
      *(void *)(a5 + 24) = a4;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
      return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v26 + 32))(boxed_opaque_existential_1, v19, a4);
    }
    return result;
  }
  uint64_t v47 = v14;
  uint64_t v48 = v10;
  unint64_t v49 = (uint64_t *)a5;
  uint64_t v46 = v20 + 4;
  uint64_t v28 = v23 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v52 = a4 - 8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v50 = v21;
  uint64_t v29 = v21 + 5;
  uint64_t v30 = MEMORY[0x263F8D310];
  uint64_t v31 = MEMORY[0x263F8D320];
  do
  {
    if (!v28)
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v32 = *v29;
    uint64_t v55 = *(v29 - 1);
    uint64_t v56 = v32;
    swift_bridgeObjectRetain();
    MEMORY[0x223C43A90](&v55, a3, v30, a4, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(a4 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    if (v34(v17, 1, a4) == 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v48);
LABEL_17:
      uint64_t result = swift_unknownObjectRelease();
      goto LABEL_18;
    }
    sub_21F156C00();
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    a3 = v55;
    v29 += 2;
    --v28;
  }
  while (v28);
  uint64_t v35 = v50;
  swift_unknownObjectRelease();
  uint64_t v36 = v35[2];
  if (!v36)
  {
LABEL_22:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v37 = &v46[2 * v36];
  uint64_t v38 = *(v37 - 2);
  uint64_t v39 = *(v37 - 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = v38;
  uint64_t v56 = v39;
  uint64_t v40 = v47;
  MEMORY[0x223C43A90](&v55, a3, MEMORY[0x263F8D310], a4, MEMORY[0x263F8D320]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34(v40, 1, a4) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v40, v48);
LABEL_18:
    uint64_t v42 = v49;
    *(_OWORD *)unint64_t v49 = 0u;
    *((_OWORD *)v42 + 1) = 0u;
    return result;
  }
  uint64_t v43 = v49;
  v49[3] = a4;
  os_log_type_t v44 = __swift_allocate_boxed_opaque_existential_1(v43);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v33 + 32))(v44, v40, a4);
}

uint64_t sub_21F14E330(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

_OWORD *sub_21F14E370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&long long v32 = a1;
  *((void *)&v32 + 1) = a2;
  uint64_t v34 = 46;
  unint64_t v35 = 0xE100000000000000;
  sub_21F0FB854();
  unint64_t v6 = (void *)sub_21F157210();
  unint64_t v7 = v6;
  uint64_t v8 = v6[2];
  if (!v8)
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return (_OWORD *)swift_bridgeObjectRelease();
  }
  if (v8 == 1)
  {
    uint64_t v9 = v6[4];
    uint64_t v10 = v6[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(a3 + 16) && (unint64_t v11 = sub_21F10E9C8(v9, v10), (v12 & 1) != 0))
    {
      sub_21F0ED61C(*(void *)(a3 + 56) + 32 * v11, (uint64_t)&v32);
    }
    else
    {
      long long v32 = 0u;
      long long v33 = 0u;
    }
    goto LABEL_28;
  }
  sub_21F14E330(1, (uint64_t)v6);
  int64_t v17 = v16 >> 1;
  if (v15 != v16 >> 1)
  {
    uint64_t v18 = v14;
    uint64_t v19 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = (uint64_t *)(v18 + 16 * v19 + 8);
    while (v19 < v17)
    {
      if (*(void *)(a3 + 16))
      {
        uint64_t v21 = *(v20 - 1);
        uint64_t v22 = *v20;
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_21F10E9C8(v21, v22);
        if (v24)
        {
          sub_21F0ED61C(*(void *)(a3 + 56) + 32 * v23, (uint64_t)&v32);
        }
        else
        {
          long long v32 = 0u;
          long long v33 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v32 = 0u;
        long long v33 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v33 + 1))
      {
        swift_bridgeObjectRelease();
        sub_21F0FC154((uint64_t)&v32, &qword_267EBE3F8);
        uint64_t result = (_OWORD *)swift_unknownObjectRelease();
        goto LABEL_33;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_unknownObjectRelease();
        uint64_t result = (_OWORD *)swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      ++v19;
      a3 = v34;
      v20 += 2;
      if (v17 == v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_22:
  swift_unknownObjectRelease();
  uint64_t v25 = v7[2];
  if (!v25)
  {
LABEL_36:
    uint64_t result = (_OWORD *)swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v26 = &v7[2 * v25];
  uint64_t v27 = v26[2];
  uint64_t v28 = v26[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(a3 + 16) && (unint64_t v29 = sub_21F10E9C8(v27, v28), (v30 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a3 + 56) + 32 * v29, (uint64_t)&v32);
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
  }
  swift_bridgeObjectRelease();
LABEL_28:
  swift_bridgeObjectRelease();
  if (*((void *)&v33 + 1))
  {
    *(void *)(a4 + 24) = MEMORY[0x263F8EE58] + 8;
    uint64_t v31 = swift_allocObject();
    *(void *)a4 = v31;
    return sub_21F0ED188(&v32, (_OWORD *)(v31 + 16));
  }
  else
  {
    uint64_t result = (_OWORD *)sub_21F0FC154((uint64_t)&v32, &qword_267EBE3F8);
LABEL_33:
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for DediscoAggregatableMetadata()
{
  return self;
}

uint64_t sub_21F14E6AC(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_21F105050(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  uint64_t result = sub_21F14E718(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21F14E718(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_21F1575C0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_148;
    }
    if (v3) {
      return sub_21F14EF04(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_156;
  }
  uint64_t v106 = result;
  uint64_t v115 = v1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v105 = MEMORY[0x263F8EE78];
    if (v3 != 1)
    {
      unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_115:
      uint64_t v96 = v8;
      if (v10 >= 2)
      {
        uint64_t v97 = *v2;
        do
        {
          unint64_t v98 = v10 - 2;
          if (v10 < 2) {
            goto LABEL_143;
          }
          if (!v97) {
            goto LABEL_155;
          }
          uint64_t v99 = v96;
          uint64_t v100 = *(void *)&v96[16 * v98 + 32];
          uint64_t v101 = *(void *)&v96[16 * v10 + 24];
          uint64_t v102 = v115;
          sub_21F14F054((char *)(v97 + 48 * v100), (char *)(v97 + 48 * *(void *)&v96[16 * v10 + 16]), v97 + 48 * v101, __dst);
          uint64_t v115 = v102;
          if (v102) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_144;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v99 = sub_21F14F5D0((uint64_t)v99);
          }
          if (v98 >= *((void *)v99 + 2)) {
            goto LABEL_145;
          }
          id v103 = &v99[16 * v98 + 32];
          *(void *)id v103 = v100;
          *((void *)v103 + 1) = v101;
          unint64_t v104 = *((void *)v99 + 2);
          if (v10 > v104) {
            goto LABEL_146;
          }
          memmove(&v99[16 * v10 + 16], &v99[16 * v10 + 32], 16 * (v104 - v10));
          uint64_t v96 = v99;
          *((void *)v99 + 2) = v104 - 1;
          unint64_t v10 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(void *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4B8);
    uint64_t v7 = sub_21F156F40();
    *(void *)(v7 + 16) = v6;
    uint64_t v105 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v11 = v9++;
    if (v9 >= v3) {
      goto LABEL_41;
    }
    uint64_t v12 = *v2;
    sub_21F10E4F8(*v2 + 48 * v9, (uint64_t)&v113, &qword_267EBE4B8);
    uint64_t v13 = v12;
    sub_21F10E4F8(v12 + 48 * v11, (uint64_t)&v111, &qword_267EBE4B8);
    if (v113 == v111 && v114 == v112) {
      int v14 = 0;
    }
    else {
      int v14 = sub_21F157600();
    }
    sub_21F0FC154((uint64_t)&v111, &qword_267EBE4B8);
    sub_21F0FC154((uint64_t)&v113, &qword_267EBE4B8);
    uint64_t v9 = v11 + 2;
    if (v11 + 2 >= v3)
    {
      if ((v14 & 1) == 0) {
        goto LABEL_41;
      }
LABEL_34:
      if (v9 < v11) {
        goto LABEL_149;
      }
      if (v11 < v9)
      {
        uint64_t v18 = (long long *)(v13 + 48 * v9 - 48);
        uint64_t v19 = (long long *)(v13 + 48 * v11);
        uint64_t v20 = v9;
        uint64_t v21 = v11;
        while (1)
        {
          if (v21 != --v20)
          {
            if (!v13) {
              goto LABEL_154;
            }
            long long v22 = *v19;
            long long v23 = v19[1];
            long long v24 = v19[2];
            long long v26 = v18[1];
            long long v25 = v18[2];
            *uint64_t v19 = *v18;
            v19[1] = v26;
            v19[2] = v25;
            v18[1] = v23;
            _OWORD v18[2] = v24;
            *uint64_t v18 = v22;
          }
          ++v21;
          v18 -= 3;
          v19 += 3;
          if (v21 >= v20) {
            goto LABEL_41;
          }
        }
      }
      goto LABEL_41;
    }
    uint64_t v107 = v13;
    uint64_t v15 = v13 + 48 * v11 + 48;
    while (1)
    {
      sub_21F10E4F8(v15 + 48, (uint64_t)&v113, &qword_267EBE4B8);
      sub_21F10E4F8(v15, (uint64_t)&v111, &qword_267EBE4B8);
      BOOL v16 = v113 == v111 && v114 == v112;
      int v17 = v16 ? 0 : sub_21F157600();
      sub_21F0FC154((uint64_t)&v111, &qword_267EBE4B8);
      sub_21F0FC154((uint64_t)&v113, &qword_267EBE4B8);
      if ((v14 ^ v17)) {
        break;
      }
      ++v9;
      v15 += 48;
      if (v3 == v9)
      {
        uint64_t v9 = v3;
        break;
      }
    }
    uint64_t v13 = v107;
    if (v14) {
      goto LABEL_34;
    }
LABEL_41:
    if (v9 >= v3) {
      goto LABEL_64;
    }
    if (__OFSUB__(v9, v11)) {
      goto LABEL_147;
    }
    if (v9 - v11 >= v106) {
      goto LABEL_64;
    }
    if (__OFADD__(v11, v106)) {
      goto LABEL_150;
    }
    uint64_t v27 = v11;
    uint64_t v28 = v11 + v106 >= v3 ? v3 : v11 + v106;
    uint64_t v108 = v27;
    if (v28 < v27) {
      break;
    }
    if (v9 != v28)
    {
      uint64_t v29 = 48 * v9;
      do
      {
        uint64_t v30 = v108;
        uint64_t v31 = v29;
        while (1)
        {
          uint64_t v32 = *v2 + v31;
          sub_21F10E4F8(v32, (uint64_t)&v113, &qword_267EBE4B8);
          sub_21F10E4F8(v32 - 48, (uint64_t)&v111, &qword_267EBE4B8);
          if (v113 == v111 && v114 == v112) {
            break;
          }
          char v34 = sub_21F157600();
          sub_21F0FC154((uint64_t)&v111, &qword_267EBE4B8);
          sub_21F0FC154((uint64_t)&v113, &qword_267EBE4B8);
          if ((v34 & 1) == 0) {
            goto LABEL_52;
          }
          if (!*v2) {
            goto LABEL_152;
          }
          unint64_t v35 = (long long *)(*v2 + v31);
          long long v37 = v35[1];
          long long v36 = v35[2];
          long long v38 = *v35;
          long long v39 = *(v35 - 2);
          *unint64_t v35 = *(v35 - 3);
          v35[1] = v39;
          _OWORD v35[2] = *(v35 - 1);
          *(v35 - 3) = v38;
          *(v35 - 2) = v37;
          *(v35 - 1) = v36;
          v31 -= 48;
          if (v9 == ++v30) {
            goto LABEL_52;
          }
        }
        sub_21F0FC154((uint64_t)&v111, &qword_267EBE4B8);
        sub_21F0FC154((uint64_t)&v113, &qword_267EBE4B8);
LABEL_52:
        ++v9;
        v29 += 48;
      }
      while (v9 != v28);
      uint64_t v9 = v28;
    }
    uint64_t v11 = v108;
LABEL_64:
    if (v9 < v11) {
      goto LABEL_142;
    }
    uint64_t v40 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_21F14F404(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v42 = *((void *)v8 + 2);
    unint64_t v41 = *((void *)v8 + 3);
    unint64_t v10 = v42 + 1;
    if (v42 >= v41 >> 1) {
      uint64_t v8 = sub_21F14F404((char *)(v41 > 1), v42 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10;
    uint64_t v43 = v8 + 32;
    os_log_type_t v44 = &v8[16 * v42 + 32];
    *(void *)os_log_type_t v44 = v40;
    *((void *)v44 + 1) = v9;
    if (v42)
    {
      uint64_t v109 = v9;
      while (1)
      {
        unint64_t v45 = v10 - 1;
        if (v10 >= 4)
        {
          os_log_type_t v50 = &v43[16 * v10];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_131;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_132;
          }
          unint64_t v57 = v10 - 2;
          uint64_t v58 = &v43[16 * v10 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_134;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_137;
          }
          if (v62 >= v53)
          {
            os_log_type_t v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_141;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_102;
          }
        }
        else
        {
          if (v10 != 3)
          {
            uint64_t v74 = *((void *)v8 + 4);
            uint64_t v75 = *((void *)v8 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_96;
          }
          uint64_t v47 = *((void *)v8 + 4);
          uint64_t v46 = *((void *)v8 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_133;
        }
        unint64_t v57 = v10 - 2;
        unint64_t v63 = &v43[16 * v10 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_136;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_139;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_140;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_102:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_104;
        }
LABEL_96:
        if (v68) {
          goto LABEL_135;
        }
        uint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_138;
        }
        if (v79 < v67) {
          goto LABEL_14;
        }
LABEL_104:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v10)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        uint64_t v85 = *v2;
        if (!*v2) {
          goto LABEL_153;
        }
        os_log_type_t v86 = v8;
        uint64_t v87 = v2;
        uint64_t v88 = &v43[16 * v84];
        uint64_t v89 = *(void *)v88;
        unint64_t v90 = v43;
        unint64_t v91 = v45;
        uint64_t v92 = &v43[16 * v45];
        uint64_t v93 = *((void *)v92 + 1);
        uint64_t v94 = v115;
        sub_21F14F054((char *)(v85 + 48 * *(void *)v88), (char *)(v85 + 48 * *(void *)v92), v85 + 48 * v93, __dst);
        uint64_t v115 = v94;
        if (v94) {
          goto LABEL_112;
        }
        if (v93 < v89) {
          goto LABEL_128;
        }
        if (v91 > *((void *)v86 + 2)) {
          goto LABEL_129;
        }
        *(void *)uint64_t v88 = v89;
        *(void *)&v90[16 * v84 + 8] = v93;
        unint64_t v95 = *((void *)v86 + 2);
        if (v91 >= v95) {
          goto LABEL_130;
        }
        uint64_t v8 = v86;
        unint64_t v10 = v95 - 1;
        memmove(v92, v92 + 16, 16 * (v95 - 1 - v91));
        uint64_t v43 = v90;
        *((void *)v86 + 2) = v95 - 1;
        uint64_t v2 = v87;
        uint64_t v9 = v109;
        if (v95 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v10 = 1;
LABEL_14:
    uint64_t v3 = v2[1];
    if (v9 >= v3) {
      goto LABEL_115;
    }
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  uint64_t result = sub_21F157400();
  __break(1u);
  return result;
}

uint64_t sub_21F14EF04(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = result;
    uint64_t v8 = 48 * a3;
LABEL_6:
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = *a4 + v10;
      sub_21F10E4F8(v11, (uint64_t)v20, &qword_267EBE4B8);
      sub_21F10E4F8(v11 - 48, (uint64_t)v19, &qword_267EBE4B8);
      if (v20[0] == v19[0] && v20[1] == v19[1])
      {
        sub_21F0FC154((uint64_t)v19, &qword_267EBE4B8);
        uint64_t result = sub_21F0FC154((uint64_t)v20, &qword_267EBE4B8);
LABEL_5:
        ++v5;
        v8 += 48;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v13 = sub_21F157600();
      sub_21F0FC154((uint64_t)v19, &qword_267EBE4B8);
      uint64_t result = sub_21F0FC154((uint64_t)v20, &qword_267EBE4B8);
      if ((v13 & 1) == 0) {
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      int v14 = (long long *)(*a4 + v10);
      long long v16 = v14[1];
      long long v15 = v14[2];
      long long v17 = *v14;
      long long v18 = *(v14 - 2);
      *int v14 = *(v14 - 3);
      v14[1] = v18;
      _OWORD v14[2] = *(v14 - 1);
      *(v14 - 3) = v17;
      *(v14 - 2) = v16;
      *(v14 - 1) = v15;
      v10 -= 48;
      if (v5 == ++v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21F14F054(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v40 = __src;
  long long v39 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      long long v22 = &v4[48 * v11];
      long long v38 = v22;
      uint64_t v40 = v6;
      if (__src < v6 && v10 >= 48)
      {
        long long v23 = (char *)(a3 - 48);
        do
        {
          sub_21F10E4F8((uint64_t)(v22 - 48), (uint64_t)&v36, &qword_267EBE4B8);
          long long v26 = v6 - 48;
          sub_21F10E4F8((uint64_t)(v6 - 48), (uint64_t)&v34, &qword_267EBE4B8);
          if (v36 == v34 && v37 == v35) {
            char v28 = 0;
          }
          else {
            char v28 = sub_21F157600();
          }
          uint64_t v29 = v23 + 48;
          sub_21F0FC154((uint64_t)&v34, &qword_267EBE4B8);
          sub_21F0FC154((uint64_t)&v36, &qword_267EBE4B8);
          if (v28)
          {
            if (v29 != v6 || v23 >= v6)
            {
              long long v24 = *(_OWORD *)v26;
              long long v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v23 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v23 + 2) = v25;
              *(_OWORD *)long long v23 = v24;
            }
            v40 -= 48;
            long long v22 = v38;
            if (v38 <= v4) {
              break;
            }
          }
          else
          {
            unint64_t v30 = (unint64_t)v38;
            long long v22 = v38 - 48;
            v38 -= 48;
            if ((unint64_t)v29 < v30 || (unint64_t)v23 >= v30 || v29 != (char *)v30)
            {
              long long v31 = *(_OWORD *)v22;
              long long v32 = *(_OWORD *)(v30 - 16);
              *((_OWORD *)v23 + 1) = *(_OWORD *)(v30 - 32);
              *((_OWORD *)v23 + 2) = v32;
              *(_OWORD *)long long v23 = v31;
            }
            long long v26 = v6;
            if (v22 <= v4) {
              break;
            }
          }
          v23 -= 48;
          uint64_t v6 = v26;
        }
        while (v26 > __src);
      }
LABEL_51:
      sub_21F14F500((void **)&v40, (const void **)&v39, &v38);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[48 * v9];
    long long v38 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      while (1)
      {
        sub_21F10E4F8((uint64_t)v6, (uint64_t)&v36, &qword_267EBE4B8);
        sub_21F10E4F8((uint64_t)v4, (uint64_t)&v34, &qword_267EBE4B8);
        if (v36 == v34 && v37 == v35) {
          break;
        }
        char v14 = sub_21F157600();
        sub_21F0FC154((uint64_t)&v34, &qword_267EBE4B8);
        sub_21F0FC154((uint64_t)&v36, &qword_267EBE4B8);
        if ((v14 & 1) == 0) {
          goto LABEL_18;
        }
        long long v15 = v40;
        unint64_t v16 = (unint64_t)(v6 + 48);
        if (v40 >= v6 && (unint64_t)v40 < v16 && v40 == v6)
        {
          long long v15 = v6;
        }
        else
        {
          long long v17 = *(_OWORD *)v6;
          long long v18 = *((_OWORD *)v6 + 2);
          *((_OWORD *)v40 + 1) = *((_OWORD *)v6 + 1);
          *((_OWORD *)v15 + 2) = v18;
          *(_OWORD *)long long v15 = v17;
        }
LABEL_22:
        uint64_t v40 = v15 + 48;
        uint64_t v4 = v39;
        if ((unint64_t)v39 < v12)
        {
          uint64_t v6 = (char *)v16;
          if (v16 < a3) {
            continue;
          }
        }
        goto LABEL_51;
      }
      sub_21F0FC154((uint64_t)&v34, &qword_267EBE4B8);
      sub_21F0FC154((uint64_t)&v36, &qword_267EBE4B8);
LABEL_18:
      long long v15 = v40;
      uint64_t v19 = v39 + 48;
      if (v40 != v39 || v40 >= v19)
      {
        long long v20 = *(_OWORD *)v39;
        long long v21 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v40 + 1) = *((_OWORD *)v39 + 1);
        *((_OWORD *)v15 + 2) = v21;
        *(_OWORD *)long long v15 = v20;
      }
      long long v39 = v19;
      unint64_t v16 = (unint64_t)v6;
      goto LABEL_22;
    }
    goto LABEL_51;
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

char *sub_21F14F404(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFD8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  char v13 = v10 + 32;
  char v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21F14F500(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_21F157460();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_21F14F5D0(uint64_t a1)
{
  return sub_21F14F404(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21F14F5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v85 = xmmword_21F15CD30;
  long long v86 = xmmword_21F15CD30;
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v8 = sub_21F10E9C8(0xD000000000000010, 0x800000021F160A80);
  if ((v9 & 1) == 0) {
    return 0;
  }
  sub_21F0ED61C(*(void *)(a2 + 56) + 32 * v8, (uint64_t)&v82);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  int64_t v11 = (void *)sub_21F155704(v10);
  swift_bridgeObjectRelease();
  uint64_t v82 = v11;
  sub_21F14E6AC(&v82);
  if (v3)
  {
LABEL_83:
    swift_release();
    __break(1u);
    JUMPOUT(0x21F150178);
  }
  uint64_t v12 = 0;
  swift_bridgeObjectRelease();
  unint64_t v13 = 0;
  BOOL v66 = v82 + 4;
  uint64_t v67 = v82;
  unint64_t v14 = v82[2];
  unint64_t v68 = v14;
  uint64_t v69 = a3;
  while (1)
  {
    if (v13 == v14)
    {
      long long v80 = 0u;
      long long v81 = 0u;
      unint64_t v16 = v14;
      long long v79 = 0u;
    }
    else
    {
      if ((v13 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      if (v13 >= v67[2]) {
        goto LABEL_77;
      }
      sub_21F10E4F8((uint64_t)&v66[6 * v13], (uint64_t)&v79, &qword_267EBE4B8);
      unint64_t v16 = v13 + 1;
    }
    sub_21F150188((uint64_t)&v79, (uint64_t)&v82);
    uint64_t v4 = v83;
    if (!v83)
    {
      swift_release();
      return v85;
    }
    unint64_t v5 = (unint64_t)v82;
    sub_21F0ED188(&v84, &v79);
    if (!swift_dynamicCast()) {
      break;
    }
    unint64_t v71 = v16;
    uint64_t v17 = v78[0];
    type metadata accessor for DediscoMetadataSchema();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_21F151BEC(v17, a3);
    if (v12)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    uint64_t v19 = v18;
    sub_21F14E370(v5, v4, a1, (uint64_t)v78);
    sub_21F10E4F8((uint64_t)v78, (uint64_t)v76, &qword_267EBE3F8);
    if (v77)
    {
      sub_21F10E4F8((uint64_t)v76, (uint64_t)v75, &qword_267EBE3F8);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_21F105934(v19 + 48, (uint64_t)&v79);
        uint64_t v20 = *((void *)&v80 + 1);
        uint64_t v21 = v81;
        __swift_project_boxed_opaque_existential_1(&v79, *((uint64_t *)&v80 + 1));
        uint64_t v22 = (*(uint64_t (**)(unint64_t, uint64_t, void, uint64_t, uint64_t))(v21 + 8))(v73, v74, *(void *)(v19 + 24), v20, v21);
LABEL_21:
        uint64_t v4 = v22;
        unint64_t v5 = v23;
        goto LABEL_22;
      }
      sub_21F0ED5DC();
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_21F105934(v19 + 48, (uint64_t)&v79);
        uint64_t v24 = *((void *)&v80 + 1);
        uint64_t v25 = v81;
        __swift_project_boxed_opaque_existential_1(&v79, *((uint64_t *)&v80 + 1));
        objc_msgSend((id)v73, sel_floatValue);
        uint64_t v4 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v25 + 16))(*(void *)(v19 + 24), v24, v25);
        unint64_t v5 = v26;

        goto LABEL_25;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE448);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_21F105934(v19 + 48, (uint64_t)&v79);
        uint64_t v28 = *((void *)&v80 + 1);
        uint64_t v29 = v81;
        __swift_project_boxed_opaque_existential_1(&v79, *((uint64_t *)&v80 + 1));
        uint64_t v22 = (*(uint64_t (**)(unint64_t, void, uint64_t, uint64_t))(v29 + 24))(v73, *(void *)(v19 + 24), v28, v29);
        goto LABEL_21;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE440);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        unint64_t v30 = v73;
        sub_21F105934(v19 + 48, (uint64_t)&v79);
        uint64_t v31 = *((void *)&v80 + 1);
        uint64_t v32 = v81;
        __swift_project_boxed_opaque_existential_1(&v79, *((uint64_t *)&v80 + 1));
        if (v73 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_21F157420();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v65 = v31;
        if (v33)
        {
          uint64_t v64 = 0;
          uint64_t v72 = MEMORY[0x263F8EE78];
          sub_21F132C8C(0, v33 & ~(v33 >> 63), 0);
          if (v33 < 0)
          {
            __break(1u);
            goto LABEL_83;
          }
          uint64_t v34 = 0;
          uint64_t v35 = v72;
          do
          {
            if ((v73 & 0xC000000000000001) != 0) {
              id v36 = (id)MEMORY[0x223C441C0](v34, v30);
            }
            else {
              id v36 = *(id *)(v30 + 8 * v34 + 32);
            }
            uint64_t v37 = v36;
            objc_msgSend(v36, sel_floatValue, v64);
            int v39 = v38;

            unint64_t v41 = *(void *)(v72 + 16);
            unint64_t v40 = *(void *)(v72 + 24);
            if (v41 >= v40 >> 1) {
              sub_21F132C8C(v40 > 1, v41 + 1, 1);
            }
            ++v34;
            *(void *)(v72 + 16) = v41 + 1;
            *(_DWORD *)(v72 + 4 * v41 + 32) = v39;
            unint64_t v30 = v73;
          }
          while (v33 != v34);
          swift_bridgeObjectRelease();
          uint64_t v12 = v64;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = MEMORY[0x263F8EE78];
        }
        uint64_t v4 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v32 + 32))(v35, *(void *)(v19 + 24), v65);
        unint64_t v5 = v57;
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_25:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v79);
        uint64_t v27 = (long long *)v75;
        goto LABEL_48;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
    }
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_21F156B90();
    __swift_project_value_buffer(v42, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_21F156B70();
    os_log_type_t v44 = sub_21F157120();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(void *)&long long v79 = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v45 + 4) = sub_21F103FD0(v5, v4, (uint64_t *)&v79);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F0DC000, v43, v44, "Metadata %s is not found, or can't be converted to String, NSNumber, [String] or [NSNumber]", (uint8_t *)v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v46, -1, -1);
      MEMORY[0x223C45170](v45, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_21F105934(v19 + 48, (uint64_t)&v79);
    uint64_t v47 = *((void *)&v80 + 1);
    uint64_t v48 = v81;
    __swift_project_boxed_opaque_existential_1(&v79, *((uint64_t *)&v80 + 1));
    uint64_t v4 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v48 + 40))(*(void *)(v19 + 24), v47, v48);
    unint64_t v5 = v49;
    uint64_t v27 = &v79;
LABEL_48:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    sub_21F0FC154((uint64_t)v76, &qword_267EBE3F8);
    if (*(unsigned char *)(v19 + 16) == 1)
    {
      a3 = v69;
      if (*(unsigned char *)(v19 + 88) == 1)
      {
        switch(v5 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v4), v4)) {
              goto LABEL_79;
            }
            uint64_t v50 = HIDWORD(v4) - (int)v4;
LABEL_56:
            if (v50)
            {
              if (v50 <= 14)
              {
                if (v50 < 0) {
                  goto LABEL_80;
                }
                unint64_t v56 = (unint64_t)v50 << 48;
                sub_21F0FBDC0(v4, v5);
                uint64_t v55 = 0;
              }
              else
              {
                sub_21F1566B0();
                swift_allocObject();
                sub_21F0FBDC0(v4, v5);
                uint64_t v53 = sub_21F156680();
                uint64_t v54 = v53;
                if ((unint64_t)v50 >= 0x7FFFFFFF)
                {
                  sub_21F156860();
                  uint64_t v55 = swift_allocObject();
                  *(void *)(v55 + 16) = 0;
                  *(void *)(v55 + 24) = v50;
                  unint64_t v56 = v54 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v55 = v50 << 32;
                  unint64_t v56 = v53 | 0x4000000000000000;
                }
              }
            }
            else
            {
LABEL_60:
              sub_21F0FBDC0(v4, v5);
              uint64_t v55 = 0;
              unint64_t v56 = 0xC000000000000000;
            }
            sub_21F1568B0();
            sub_21F1568B0();
            sub_21F0FB8BC(v55, v56);
            break;
          case 2uLL:
            uint64_t v52 = *(void *)(v4 + 16);
            uint64_t v51 = *(void *)(v4 + 24);
            uint64_t v50 = v51 - v52;
            if (!__OFSUB__(v51, v52)) {
              goto LABEL_56;
            }
            goto LABEL_78;
          case 3uLL:
            goto LABEL_60;
          default:
            uint64_t v50 = BYTE6(v5);
            goto LABEL_56;
        }
      }
      else
      {
        sub_21F0FBDC0(v4, v5);
        sub_21F1568B0();
      }
    }
    else
    {
      sub_21F0FBDC0(v4, v5);
      sub_21F1568B0();
      a3 = v69;
    }
    sub_21F0FB8A8(v4, v5);
    swift_release();
    sub_21F0FB8A8(v4, v5);
    sub_21F0FC154((uint64_t)v78, &qword_267EBE3F8);
    unint64_t v13 = v71;
    unint64_t v14 = v68;
  }
  swift_release();
  if (qword_267EBE2C0 == -1) {
    goto LABEL_70;
  }
LABEL_81:
  swift_once();
LABEL_70:
  uint64_t v58 = sub_21F156B90();
  __swift_project_value_buffer(v58, (uint64_t)qword_267EBEF18);
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_21F156B70();
  os_log_type_t v60 = sub_21F157120();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(void *)&long long v79 = v62;
    *(_DWORD *)uint64_t v61 = 136315138;
    swift_bridgeObjectRetain();
    v78[0] = sub_21F103FD0(v5, v4, (uint64_t *)&v79);
    sub_21F1571F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F0DC000, v59, v60, "Metadata schema for %s is not type of [String: Any]", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v62, -1, -1);
    MEMORY[0x223C45170](v61, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_21F0ED588();
  swift_allocError();
  *unint64_t v63 = 2;
  swift_willThrow();
LABEL_75:
  sub_21F0FB8BC(v85, *((unint64_t *)&v85 + 1));
  return sub_21F0FB8BC(v86, *((unint64_t *)&v86 + 1));
}

uint64_t sub_21F150188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F1501F0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F150228(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21F156CF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F156CE0();
  uint64_t v10 = sub_21F156CD0();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12 >> 60 == 15
    || (unint64_t v13 = (void *)sub_21F156880(),
        id v14 = objc_msgSend(self, sel_keyFromData_, v13),
        sub_21F0FB8A8(v10, v12),
        v13,
        !v14))
  {
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_21F156B90();
    __swift_project_value_buffer(v15, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_21F156B70();
    os_log_type_t v17 = sub_21F157110();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      v22[1] = sub_21F103FD0(a1, a2, &v23);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F0DC000, v16, v17, "Invalid certificate %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v19, -1, -1);
      MEMORY[0x223C45170](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_21F0FB4FC();
    swift_allocError();
    *uint64_t v20 = 5;
    swift_willThrow();
    type metadata accessor for PFLDodMLTaskValidator();
    swift_deallocPartialClassInstance();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v3 + 16) = v14;
  }
  return v3;
}

uint64_t sub_21F150548()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PFLDodMLTaskValidator()
{
  return self;
}

unint64_t sub_21F1505A4(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE658);
    uint64_t v2 = (void *)sub_21F157450();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_21F0ED6C8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_21F0ED188(v6, v7);
    sub_21F0ED188(v7, v40);
    sub_21F0ED188(v40, &v38);
    unint64_t result = sub_21F10E9C8(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      unint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      os_log_type_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *os_log_type_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_21F0ED188(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_21F0ED188(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_21F150910(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFE8);
    uint64_t v2 = sub_21F157450();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    os_log_type_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_21F0ED188(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_21F0ED188(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_21F0ED188(v36, v37);
    sub_21F0ED188(v37, &v33);
    uint64_t result = sub_21F157290();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_21F0ED188(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_21F0ED6C8();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DediscoRecorderImpl()
{
  return self;
}

id sub_21F150CFC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v8 = objc_allocWithZone(MEMORY[0x263F3A200]);
  unint64_t v9 = (void *)sub_21F156C90();
  id v10 = objc_msgSend(v8, sel_initWithKey_, v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFE0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21F159670;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  sub_21F0FBDC0(a3, a4);
  unint64_t v12 = (void *)sub_21F156EE0();
  swift_bridgeObjectRelease();
  sub_21F150910(a5);
  int64_t v13 = (void *)sub_21F156BC0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v10, sel_recordFloatVectors_metadata_, v12, v13);

  return v14;
}

uint64_t sub_21F150E30()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5Library()
{
  return self;
}

uint64_t sub_21F150EBC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656372;
  uint64_t v3 = 0x756F735F6B736174;
  uint64_t v4 = a1;
  unint64_t v5 = 0x756F735F6B736174;
  unint64_t v6 = 0xEB00000000656372;
  switch(v4)
  {
    case 1:
      uint64_t v7 = "targeting_subject";
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0xD000000000000019;
      id v8 = "skip_privacy_budget_check";
      goto LABEL_6;
    case 3:
      uint64_t v7 = "store_task_result";
      goto LABEL_8;
    case 4:
      unint64_t v5 = 0xD000000000000014;
      id v8 = "allow_none_mechanism";
LABEL_6:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 5:
      uint64_t v7 = "rate_limit_window";
LABEL_8:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v5 = 0x69745F7472617473;
      unint64_t v6 = 0xEA0000000000656DLL;
      break;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x656D69745F646E65;
      break;
    case 8:
      unint64_t v5 = 0x617261506B736174;
      unint64_t v6 = 0xEE0073726574656DLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v9 = "targeting_subject";
      goto LABEL_20;
    case 2:
      unint64_t v10 = 0xD000000000000019;
      uint64_t v11 = "skip_privacy_budget_check";
      goto LABEL_17;
    case 3:
      unint64_t v9 = "store_task_result";
      goto LABEL_20;
    case 4:
      unint64_t v10 = 0xD000000000000014;
      uint64_t v11 = "allow_none_mechanism";
LABEL_17:
      unint64_t v2 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v5 != v10) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 5:
      unint64_t v9 = "rate_limit_window";
LABEL_20:
      unint64_t v2 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000011) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 6:
      unint64_t v2 = 0xEA0000000000656DLL;
      if (v5 != 0x69745F7472617473) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 7:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656D69745F646E65;
      goto LABEL_25;
    case 8:
      unint64_t v2 = 0xEE0073726574656DLL;
      if (v5 != 0x617261506B736174) {
        goto LABEL_29;
      }
      goto LABEL_26;
    default:
LABEL_25:
      if (v5 != v3) {
        goto LABEL_29;
      }
LABEL_26:
      if (v6 == v2) {
        char v12 = 1;
      }
      else {
LABEL_29:
      }
        char v12 = sub_21F157600();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_21F151170(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x676E696C706D6173;
  }
  else {
    uint64_t v3 = 0x7461636964657270;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xED0000657461725FLL;
  }
  if (a2) {
    uint64_t v5 = 0x676E696C706D6173;
  }
  else {
    uint64_t v5 = 0x7461636964657270;
  }
  if (a2) {
    unint64_t v6 = 0xED0000657461725FLL;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21F157600();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21F151228(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x800000021F15F080;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x6365735F656D6974;
    }
    else {
      unint64_t v5 = 0x635F657069636572;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC00000073646E6FLL;
    }
    else {
      unint64_t v6 = 0xEC000000746E756FLL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x800000021F15F080;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x6365735F656D6974;
    }
    else {
      unint64_t v2 = 0x635F657069636572;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xEC00000073646E6FLL;
    }
    else {
      unint64_t v3 = 0xEC000000746E756FLL;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21F157600();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F151358(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00746E65746E6FLL;
  unint64_t v3 = 0x635F7963696C6F70;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000010;
    }
    else {
      unint64_t v5 = 0xD000000000000019;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000021F15F0C0;
    }
    else {
      unint64_t v6 = 0x800000021F15F0E0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x635F7963696C6F70;
  unint64_t v6 = 0xEE00746E65746E6FLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000010;
    }
    else {
      unint64_t v3 = 0xD000000000000019;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x800000021F15F0C0;
    }
    else {
      unint64_t v2 = 0x800000021F15F0E0;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_21F157600();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F151474(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000646FLL;
  uint64_t v3 = 0x72505F4C4D646F44;
  unint64_t v4 = 0xEA0000000000646FLL;
  uint64_t v5 = a1;
  uint64_t v6 = 0x72505F4C4D646F44;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x61435F4C4D646F44;
      unint64_t v4 = 0xEB00000000797272;
      break;
    case 2:
      uint64_t v6 = 0x74535F4C4D646F44;
      unint64_t v4 = 0xED0000676E696761;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x646F72505F4B43;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x79727261435F4B43;
      break;
    case 5:
      uint64_t v6 = 0x69676174535F4B43;
      unint64_t v4 = 0xEA0000000000676ELL;
      break;
    case 6:
      uint64_t v6 = 0x69445F6C61636F4CLL;
      unint64_t v4 = 0xEF79726F74636572;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000797272;
      if (v6 == 0x61435F4C4D646F44) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xED0000676E696761;
      if (v6 != 0x74535F4C4D646F44) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v6 != 0x646F72505F4B43) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v6 != 0x79727261435F4B43) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x69676174535F4B43;
      unint64_t v2 = 0xEA0000000000676ELL;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xEF79726F74636572;
      if (v6 != 0x69445F6C61636F4CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v6 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_21F157600();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21F151708(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x69726F6765746163;
  }
  else {
    uint64_t v3 = 0x636972656D756ELL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEB000000006C6163;
  }
  if (a2) {
    uint64_t v5 = 0x69726F6765746163;
  }
  else {
    uint64_t v5 = 0x636972656D756ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEB000000006C6163;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_21F157600();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21F1517B8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x73657069636572;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x73657069636572;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1953722216;
      break;
    case 2:
      unint64_t v5 = 0x725F6E7275746572;
      unint64_t v3 = 0xED0000736574756FLL;
      break;
    case 3:
      unint64_t v3 = 0x800000021F15F120;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v5 = 0x735F7963696C6F70;
      unint64_t v3 = 0xEE00676E696E6769;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1953722216) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xED0000736574756FLL;
      if (v5 != 0x725F6E7275746572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x800000021F15F120;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEE00676E696E6769;
      if (v5 != 0x735F7963696C6F70) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_21F157600();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_21F1519AC(char *a1, char *a2)
{
  return sub_21F151708(*a1, *a2);
}

uint64_t sub_21F1519B8()
{
  return sub_21F157710();
}

uint64_t sub_21F151A44()
{
  sub_21F156D80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F151ABC()
{
  return sub_21F157710();
}

uint64_t sub_21F151B44@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21F157480();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21F151BA4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x636972656D756ELL;
  if (*v1) {
    uint64_t v2 = 0x69726F6765746163;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB000000006C6163;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21F151BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_7;
  }
  unint64_t v7 = sub_21F10E9C8(1701869940, 0xE400000000000000);
  if ((v8 & 1) == 0) {
    goto LABEL_7;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v47);
  uint64_t v9 = MEMORY[0x263F8EE58];
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v10 = sub_21F157480();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    char v11 = 0;
    goto LABEL_17;
  }
  if (v10 != 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_21F156B90();
    __swift_project_value_buffer(v12, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    int64_t v13 = sub_21F156B70();
    os_log_type_t v14 = sub_21F157120();
    if (os_log_type_enabled(v13, v14))
    {
      int64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)int64_t v15 = 136315138;
      *(void *)&long long v47 = v16;
      swift_bridgeObjectRetain();
      uint64_t v52 = v4;
      uint64_t v17 = sub_21F156BE0();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_21F103FD0(v17, v19, (uint64_t *)&v47);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v13, v14, "Invalid metadata type in %s", v15, 0xCu);
      uint64_t v4 = v52;
      swift_arrayDestroy();
      MEMORY[0x223C45170](v16, -1, -1);
      MEMORY[0x223C45170](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_21F0ED588();
    swift_allocError();
    char v21 = 3;
    goto LABEL_13;
  }
  char v11 = 1;
LABEL_17:
  *(unsigned char *)(v4 + 16) = v11;
  if (!*(void *)(a1 + 16)
    || (unint64_t v23 = sub_21F10E9C8(0x7374656B637562, 0xE700000000000000), (v24 & 1) == 0)
    || (sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v47), (swift_dynamicCast() & 1) == 0)
    || v50 < 1)
  {
    swift_bridgeObjectRelease();
    if (qword_267EBE2C0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_21F156B90();
    __swift_project_value_buffer(v30, (uint64_t)qword_267EBEF18);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_21F156B70();
    os_log_type_t v32 = sub_21F157120();
    if (os_log_type_enabled(v31, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)long long v33 = 136315138;
      *(void *)&long long v47 = v34;
      swift_bridgeObjectRetain();
      uint64_t v52 = v9 + 8;
      uint64_t v35 = sub_21F156BE0();
      uint64_t v36 = v4;
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_21F103FD0(v35, v38, (uint64_t *)&v47);
      sub_21F1571F0();
      swift_bridgeObjectRelease_n();
      uint64_t v4 = v36;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F0DC000, v31, v32, "Metadata buckets not found or <= 0 in %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C45170](v34, -1, -1);
      MEMORY[0x223C45170](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_21F0ED588();
    swift_allocError();
    char v21 = 4;
LABEL_13:
    *uint64_t v20 = v21;
    swift_willThrow();
LABEL_14:
    swift_bridgeObjectRelease();
    type metadata accessor for DediscoMetadataSchema();
    swift_deallocPartialClassInstance();
    return v4;
  }
  *(void *)(v4 + 24) = v50;
  uint64_t v25 = *(void *)(a1 + 16);
  if (!v25)
  {
LABEL_32:
    uint64_t v29 = 0;
    goto LABEL_33;
  }
  unint64_t v26 = sub_21F10E9C8(0x616E6F6974636964, 0xEA00000000007972);
  if ((v27 & 1) == 0)
  {
    uint64_t v25 = 0;
    goto LABEL_32;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v26, (uint64_t)&v47);
  int v28 = swift_dynamicCast();
  uint64_t v25 = v50;
  uint64_t v29 = v51;
  if (!v28)
  {
    uint64_t v25 = 0;
    uint64_t v29 = 0;
  }
LABEL_33:
  *(void *)(v4 + 32) = v25;
  *(void *)(v4 + 40) = v29;
  swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v4 + 16) & 1) == 0)
  {
    uint64_t v41 = type metadata accessor for DediscoNumericMetadataEncoder();
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = &off_26D0AEB68;
    goto LABEL_38;
  }
  uint64_t v39 = sub_21F15286C(a1, a2);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v40 = v39;
  uint64_t v41 = type metadata accessor for DediscoCategoricalMetadataEncoder();
  swift_allocObject();
  uint64_t v45 = sub_21F0F3568(v40);
  uint64_t v46 = &off_26D0AD720;
LABEL_38:
  *((void *)&v48 + 1) = v41;
  unint64_t v49 = v46;
  swift_bridgeObjectRelease();
  *(void *)&long long v47 = v45;
  sub_21F0FB5B4(&v47, v4 + 48);
  *(unsigned char *)(v4 + 88) = 0;
  if (*(void *)(a1 + 16) && (unint64_t v42 = sub_21F10E9C8(0xD000000000000012, 0x800000021F160C20), (v43 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v42, (uint64_t)&v47);
  }
  else
  {
    long long v47 = 0u;
    long long v48 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v48 + 1))
  {
    if (swift_dynamicCast())
    {
      if (v50 == 0x6375735F6B736174 && v51 == 0xEE00646564656563)
      {
        swift_bridgeObjectRelease();
        char v44 = 1;
      }
      else
      {
        char v44 = sub_21F157600();
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v4 + 88) = v44 & 1;
    }
  }
  else
  {
    sub_21F0FC154((uint64_t)&v47, &qword_267EBE3F8);
  }
  return v4;
}

uint64_t sub_21F152360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v36 = sub_21F156820();
  uint64_t v8 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v11 - 8);
  int64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  char v27 = a4;
  uint64_t v28 = v4;
  v26[1] = a1;
  if (v14)
  {
    int64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v32 = v8 + 16;
    long long v33 = v15;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v30 = *(void *)(v8 + 72);
    uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v29 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v26[0] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v17 = v36;
    while (1)
    {
      v33(v13, v16, v17);
      unint64_t v18 = *v35;
      (*v35)(v13, 0, 1, v17);
      if ((*v31)(v13, 1, v17) == 1) {
        goto LABEL_11;
      }
      unint64_t v19 = *v34;
      (*v34)(v10, v13, v17);
      if (sub_21F156770() == v37 && v20 == a3) {
        break;
      }
      uint64_t v21 = a3;
      char v22 = sub_21F157600();
      swift_bridgeObjectRelease();
      if (v22)
      {
        uint64_t v23 = v36;
        goto LABEL_14;
      }
      uint64_t v17 = v36;
      (*v29)(v10, v36);
      v16 += v30;
      --v14;
      a3 = v21;
      if (!v14) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = v36;
LABEL_14:
    swift_bridgeObjectRelease();
    char v24 = v27;
    v19(v27, v10, v23);
    v18(v24, 0, 1, v23);
    return swift_bridgeObjectRelease();
  }
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v26[0] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  swift_bridgeObjectRetain();
  uint64_t v17 = v36;
LABEL_10:
  v18(v13, 1, 1, v17);
LABEL_11:
  swift_bridgeObjectRelease();
  v18(v27, 1, 1, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F1526AC()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DediscoMetadataSchema()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for MetadataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F1527DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetadataType()
{
  return &type metadata for MetadataType;
}

unint64_t sub_21F152818()
{
  unint64_t result = qword_267EBEFF0;
  if (!qword_267EBEFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBEFF0);
  }
  return result;
}

uint64_t sub_21F15286C(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE730);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F156820();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_13;
  }
  unint64_t v13 = sub_21F10E9C8(0x616E6F6974636964, 0xEA00000000007972);
  if (v14)
  {
    sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
    if (swift_dynamicCast()) {
      return v46;
    }
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_13;
  }
  unint64_t v16 = sub_21F10E9C8(0x616E6F6974636964, 0xEF687461705F7972);
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
  sub_21F0ED61C(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v48);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v45 = (uint8_t *)a1;
  uint64_t v18 = v46;
  uint64_t v19 = v47;
  swift_bridgeObjectRetain();
  sub_21F152360(a2, v18, v19, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v20 = &qword_267EBE730;
    uint64_t v21 = v8;
LABEL_10:
    sub_21F0FC154((uint64_t)v21, v20);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v22 = sub_21F156830();
  if (v3)
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_13;
  }
  uint64_t v33 = v22;
  unint64_t v34 = v23;
  uint64_t v35 = self;
  uint64_t v36 = (void *)sub_21F156880();
  *(void *)&long long v48 = 0;
  id v37 = objc_msgSend(v35, sel_JSONObjectWithData_options_error_, v36, 4, &v48);

  if (!v37)
  {
    id v42 = (id)v48;
    char v43 = (void *)sub_21F1566F0();

    swift_willThrow();
    sub_21F0FB8BC(v33, v34);

LABEL_26:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_13;
  }
  id v38 = (id)v48;
  sub_21F157250();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_21F0FB8BC(v33, v34);
    goto LABEL_26;
  }
  uint64_t v39 = v46;
  if (*(void *)(v46 + 16) && (unint64_t v40 = sub_21F10E9C8(0x616E6F6974636964, 0xEA00000000007972), (v41 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(v39 + 56) + 32 * v40, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  sub_21F0FB8BC(v33, v34);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!*((void *)&v49 + 1))
  {
    uint64_t v20 = &qword_267EBE3F8;
    uint64_t v21 = (char *)&v48;
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return v46;
  }
LABEL_13:
  if (qword_267EBE2C0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_21F156B90();
  __swift_project_value_buffer(v24, (uint64_t)qword_267EBEF18);
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_21F156B70();
  os_log_type_t v26 = sub_21F157120();
  if (os_log_type_enabled(v25, v26))
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(void *)&long long v48 = v28;
    *(_DWORD *)char v27 = 136315138;
    uint64_t v45 = v27 + 4;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_21F156BE0();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_21F103FD0(v29, v31, (uint64_t *)&v48);
    sub_21F1571F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F0DC000, v25, v26, "Failed to locate categorical dictionary in %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C45170](v28, -1, -1);
    MEMORY[0x223C45170](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_21F0ED588();
  swift_allocError();
  *uint64_t v32 = 5;
  return swift_willThrow();
}

uint64_t sub_21F152ED8(uint64_t a1, unint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t result = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      sub_21F0FBDC0(a1, a2);
      uint64_t v5 = sub_21F156670();
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = sub_21F1566A0();
        uint64_t v8 = (int)a1 - v7;
        if (!__OFSUB__((int)a1, v7))
        {
          uint64_t v9 = sub_21F156690();
          uint64_t v10 = (char *)(v6 + v8);
          if (v9 >= (a1 >> 32) - (int)a1) {
            uint64_t v9 = (a1 >> 32) - (int)a1;
          }
          uint64_t v11 = v9 / 4;
          goto LABEL_19;
        }
LABEL_26:
        __break(1u);
      }
      sub_21F156690();
      uint64_t v10 = 0;
      uint64_t v11 = 0;
LABEL_19:
      uint64_t v21 = sub_21F1555CC(v10, v11);
      sub_21F0FB8BC(a1, a2);
      return v21;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v14 = (char *)sub_21F156670();
      if (!v14) {
        goto LABEL_12;
      }
      uint64_t v15 = sub_21F1566A0();
      if (__OFSUB__(v12, v15)) {
        goto LABEL_25;
      }
      v14 += v12 - v15;
LABEL_12:
      BOOL v16 = __OFSUB__(v13, v12);
      uint64_t v17 = v13 - v12;
      if (v16) {
        goto LABEL_24;
      }
      uint64_t v18 = sub_21F156690();
      if (v14)
      {
        if (v18 >= v17) {
          uint64_t v19 = v17;
        }
        else {
          uint64_t v19 = v18;
        }
        uint64_t v20 = v19 / 4;
      }
      else
      {
        uint64_t v20 = 0;
      }
      uint64_t v22 = sub_21F1555CC(v14, v20);
      swift_release();
      swift_release();
      return v22;
    case 3uLL:
      return result;
    default:
      uint64_t v23 = a1;
      __int16 v24 = a2;
      char v25 = BYTE2(a2);
      char v26 = BYTE3(a2);
      char v27 = BYTE4(a2);
      char v28 = BYTE5(a2);
      return sub_21F1555CC((char *)&v23, (a2 >> 50) & 0x3F);
  }
}

uint64_t sub_21F153140(uint64_t a1, unint64_t a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t result = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      sub_21F0FBDC0(a1, a2);
      uint64_t v5 = (char *)sub_21F156670();
      if (v5)
      {
        uint64_t v6 = sub_21F1566A0();
        if (!__OFSUB__((int)a1, v6))
        {
          v5 += (int)a1 - v6;
          goto LABEL_7;
        }
LABEL_29:
        __break(1u);
      }
LABEL_7:
      uint64_t v7 = sub_21F156690();
      if (v7 >= (a1 >> 32) - (int)a1) {
        uint64_t v8 = (a1 >> 32) - (int)a1;
      }
      else {
        uint64_t v8 = v7;
      }
      if (v5) {
        int64_t v9 = v8;
      }
      else {
        int64_t v9 = 0;
      }
      uint64_t v10 = sub_21F1557FC(v5, v9);
      sub_21F0FB8BC(a1, a2);
      return v10;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v13 = (char *)sub_21F156670();
      if (!v13) {
        goto LABEL_17;
      }
      uint64_t v14 = sub_21F1566A0();
      if (__OFSUB__(v11, v14)) {
        goto LABEL_28;
      }
      v13 += v11 - v14;
LABEL_17:
      BOOL v15 = __OFSUB__(v12, v11);
      uint64_t v16 = v12 - v11;
      if (v15) {
        goto LABEL_27;
      }
      uint64_t v17 = sub_21F156690();
      if (v17 >= v16) {
        int64_t v18 = v16;
      }
      else {
        int64_t v18 = v17;
      }
      if (v13) {
        int64_t v19 = v18;
      }
      else {
        int64_t v19 = 0;
      }
      uint64_t v20 = sub_21F1557FC(v13, v19);
      swift_release();
      swift_release();
      return v20;
    case 3uLL:
      return result;
    default:
      uint64_t v21 = a1;
      __int16 v22 = a2;
      char v23 = BYTE2(a2);
      char v24 = BYTE3(a2);
      char v25 = BYTE4(a2);
      char v26 = BYTE5(a2);
      return sub_21F1557FC((char *)&v21, BYTE6(a2));
  }
}

uint64_t static DediscoUploader.ensurePrivacyBudget(privacyBudgetPrefix:)(uint64_t a1, uint64_t a2)
{
  return sub_21F155B60(a1, a2);
}

uint64_t static DediscoUploader.upload(binaryResult:jsonResult:task:privacyBudgetPrefix:taskSucceeded:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  v15[3] = type metadata accessor for DediscoRecorderImpl();
  v15[4] = &off_26D0AEBC0;
  v15[0] = swift_allocObject();
  sub_21F153714(a1, a2, a3, a4, a5, a6, (uint64_t)v15, a7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
}

uint64_t sub_21F153458()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  if (!*(void *)(v1 + 16))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_21F10E9C8(0xD000000000000012, 0x800000021F15F3F0);
  if (v3)
  {
    sub_21F0ED61C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1)) {
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3F0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = sub_21F156CC0();
  if (*(void *)(v10 + 16) && (unint64_t v6 = sub_21F10E9C8(v4, v5), (v7 & 1) != 0))
  {
    sub_21F0ED61C(*(void *)(v10 + 56) + 32 * v6, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_17:
    sub_21F0FC154((uint64_t)&v12, &qword_267EBE3F8);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v10 == 3157554 && v11 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v9 = sub_21F157600();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v9) {
    return 1;
  }
  return result;
}

unint64_t sub_21F153628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (sub_21F153458())
  {
    uint64_t v4 = type metadata accessor for DediscoMetadataV2();
    uint64_t v5 = swift_allocObject();
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v5 + 24) = _Q0;
    swift_retain();
    uint64_t v11 = MEMORY[0x263F8EE78];
    *(void *)(v5 + 40) = sub_21F0FC1B0(MEMORY[0x263F8EE78]);
    unint64_t result = sub_21F0FC1B0(v11);
    *(void *)(v5 + 48) = result;
    *(void *)(v5 + 16) = a1;
    long long v13 = &off_26D0AD658;
  }
  else
  {
    uint64_t v4 = type metadata accessor for DediscoMetadataV1();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v5 + 24) = _Q0;
    swift_retain();
    unint64_t result = sub_21F0FC1B0(MEMORY[0x263F8EE78]);
    *(void *)(v5 + 40) = result;
    long long v13 = &off_26D0AD620;
  }
  a2[3] = v4;
  a2[4] = (uint64_t)v13;
  *a2 = v5;
  return result;
}

uint64_t sub_21F153714(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v84 = a3;
  LODWORD(v82) = a8;
  uint64_t v14 = sub_21F156930();
  uint64_t v78 = *(void *)(v14 - 8);
  uint64_t v79 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v77 = &v73[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21F105934(a7, (uint64_t)v100);
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v100, v101);
  MEMORY[0x270FA5388](v16);
  int64_t v18 = (uint64_t *)&v73[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = *v18;
  uint64_t v98 = type metadata accessor for DediscoRecorderImpl();
  uint64_t v99 = &off_26D0AEBC0;
  v97[0] = v20;
  type metadata accessor for DediscoUploader();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v97, v98);
  MEMORY[0x270FA5388](v22);
  char v24 = (uint64_t *)&v73[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = *v24;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v80 = a5;
  uint64_t v81 = a6;
  long long v86 = sub_21F155920(a5, a6, a4, v26, inited);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v100);
  uint64_t v85 = a4;
  sub_21F153628(a4, v96);
  if (a2 >> 60 == 15)
  {
    uint64_t v28 = v83;
  }
  else
  {
    sub_21F0FBDC0(a1, a2);
    uint64_t v27 = v83;
    sub_21F154270(a1, a2, v96);
    uint64_t v28 = v27;
    if (v27)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
      swift_release();
      return sub_21F0FB8A8(a1, a2);
    }
    sub_21F0FB8A8(a1, a2);
  }
  uint64_t v30 = v84;
  uint64_t v31 = *(void *)(v85 + 48);
  id v76 = (id)(a2 >> 60);
  if (v31)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE3E8);
    uint64_t v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = xmmword_21F1596F0;
    *(void *)(v32 + 32) = 0xD000000000000015;
    *(void *)(v32 + 40) = 0x800000021F160CC0;
    uint64_t v33 = MEMORY[0x263F8D6C8];
    *(void *)(v32 + 48) = *(void *)(v31 + 56);
    *(void *)(v32 + 72) = v33;
    *(void *)(v32 + 80) = 0xD000000000000015;
    *(void *)(v32 + 88) = 0x800000021F160CE0;
    int v34 = *(_DWORD *)(v31 + 40);
    *(void *)(v32 + 120) = MEMORY[0x263F8D5C8];
    *(_DWORD *)(v32 + 96) = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v35 = sub_21F0FC1B0(v32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v95[0] = v30;
    sub_21F0ED198(v35, (uint64_t)sub_21F0FB5CC, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v95);
    if (v28)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x21F1541E8);
    }
    uint64_t v28 = 0;
    uint64_t v30 = v95[0];
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v37 = v85;
  swift_beginAccess();
  uint64_t v38 = *(void *)(v37 + 32);
  swift_beginAccess();
  uint64_t v39 = *(void *)(v37 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_21F14F5E4(v30, v38, v39);
  if (v28)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
  }
  else
  {
    uint64_t v44 = v40;
    unint64_t v45 = v41;
    uint64_t v46 = v42;
    unint64_t v47 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = v44;
    sub_21F0FBDC0(v44, v45);
    unint64_t v75 = v47 >> 62;
    sub_21F0FBDC0(v46, v47);
    uint64_t v82 = v46;
    sub_21F0FB8BC(v46, v47);
    unint64_t v48 = v47;
    unint64_t v84 = v30;
    switch(v45 >> 62)
    {
      case 1uLL:
        uint64_t v49 = v83;
        sub_21F0FB8BC(v83, v45);
        uint64_t v50 = (int)v49;
        uint64_t v51 = v49 >> 32;
        goto LABEL_17;
      case 2uLL:
        uint64_t v49 = v83;
        uint64_t v50 = *(void *)(v83 + 16);
        uint64_t v51 = *(void *)(v83 + 24);
        sub_21F0FB8BC(v83, v45);
LABEL_17:
        if (v50 != v51) {
          goto LABEL_18;
        }
        goto LABEL_21;
      case 3uLL:
        uint64_t v49 = v83;
        sub_21F0FB8BC(v83, v45);
        goto LABEL_21;
      default:
        uint64_t v49 = v83;
        sub_21F0FB8BC(v83, v45);
        if ((v45 & 0xFF000000000000) == 0) {
          goto LABEL_21;
        }
LABEL_18:
        if (sub_21F154208(v49, v45))
        {
LABEL_21:
          if (qword_267EBE2C0 != -1) {
            swift_once();
          }
          uint64_t v52 = sub_21F156B90();
          __swift_project_value_buffer(v52, (uint64_t)qword_267EBEF18);
          uint64_t v53 = sub_21F156B70();
          os_log_type_t v54 = sub_21F157110();
          if (os_log_type_enabled(v53, v54))
          {
            uint64_t v55 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v55 = 0;
            _os_log_impl(&dword_21F0DC000, v53, v54, "No numeric metadata or all zeros, skip Dedisco donating", v55, 2u);
            MEMORY[0x223C45170](v55, -1, -1);
          }

          int v74 = 0;
          unint64_t v48 = v47;
        }
        else
        {
          sub_21F154E0C(v49, v45, v96);
          int v74 = 1;
        }
        uint64_t v56 = v82;
        sub_21F0FBDC0(v49, v45);
        sub_21F0FBDC0(v56, v48);
        sub_21F0FB8BC(v49, v45);
        switch((int)v75)
        {
          case 1:
            sub_21F0FB8BC(v56, v48);
            uint64_t v59 = v56;
            uint64_t v56 = (int)v56;
            uint64_t v58 = v59 >> 32;
            goto LABEL_32;
          case 2:
            uint64_t v57 = v56;
            uint64_t v56 = *(void *)(v56 + 16);
            uint64_t v58 = *(void *)(v57 + 24);
            sub_21F0FB8BC(v57, v48);
LABEL_32:
            BOOL v60 = v56 == v58;
            uint64_t v56 = v82;
            if (!v60) {
              goto LABEL_33;
            }
            goto LABEL_34;
          case 3:
            sub_21F0FB8BC(v56, v48);
            goto LABEL_34;
          default:
            sub_21F0FB8BC(v56, v48);
            if ((v48 & 0xFF000000000000) == 0) {
              goto LABEL_34;
            }
LABEL_33:
            if (sub_21F154208(v56, v48))
            {
LABEL_34:
              unint64_t v61 = v48;
              if (qword_267EBE2C0 != -1) {
                swift_once();
              }
              uint64_t v62 = sub_21F156B90();
              __swift_project_value_buffer(v62, (uint64_t)qword_267EBEF18);
              unint64_t v63 = sub_21F156B70();
              os_log_type_t v64 = sub_21F157110();
              BOOL v65 = os_log_type_enabled(v63, v64);
              char v66 = v74;
              if (v65)
              {
                uint64_t v67 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v67 = 0;
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_21F0DC000, v63, v64, "No categorical metadata or all zeros, skip Dedisco donating", v67, 2u);
                MEMORY[0x223C45170](v67, -1, -1);
              }
              else
              {
                swift_bridgeObjectRelease();
              }

              unint64_t v48 = v61;
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_21F155008(v56, v48, v96);
              uint64_t v49 = v83;
              char v66 = v74;
            }
            char v68 = v66 ^ 1;
            if ((unint64_t)v76 <= 0xE) {
              char v68 = 0;
            }
            if (v68)
            {
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
              sub_21F0FB8BC(v49, v45);
              sub_21F0FB8BC(v82, v48);
              uint64_t result = swift_release();
            }
            else
            {
              id v76 = objc_msgSend(self, sel_standardUserDefaults);
              uint64_t v69 = v77;
              sub_21F156920();
              sub_21F156900();
              (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v69, v79);
              uint64_t v70 = (void *)sub_21F157030();
              unint64_t v87 = 0xD00000000000001FLL;
              unint64_t v88 = 0x800000021F160CA0;
              uint64_t v83 = 0;
              unint64_t v84 = v48;
              uint64_t v93 = v80;
              uint64_t v94 = v81;
              uint64_t v91 = 46;
              unint64_t v92 = 0xE100000000000000;
              uint64_t v89 = 95;
              unint64_t v90 = 0xE100000000000000;
              sub_21F0FB854();
              sub_21F157220();
              sub_21F156DD0();
              swift_bridgeObjectRelease();
              unint64_t v71 = (void *)sub_21F156C90();
              swift_bridgeObjectRelease();
              id v72 = v76;
              objc_msgSend(v76, sel_setValue_forKey_, v70, v71);

              swift_beginAccess();
              swift_bridgeObjectRetain();
              sub_21F10FB60();
              swift_release();
              swift_bridgeObjectRelease();
              sub_21F0FB8BC(v49, v45);
              sub_21F0FB8BC(v82, v84);
              uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
            }
            break;
        }
        break;
    }
  }
  return result;
}

BOOL sub_21F154208(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_21F153140(a1, a2);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    if (*(unsigned char *)(v2 + 32))
    {
      BOOL v4 = 0;
    }
    else
    {
      uint64_t v5 = (unsigned __int8 *)(v2 + 33);
      uint64_t v6 = v3 - 1;
      do
      {
        BOOL v4 = v6 == 0;
        if (!v6) {
          break;
        }
        int v7 = *v5++;
        --v6;
      }
      while (!v7);
    }
  }
  else
  {
    BOOL v4 = 1;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F154270(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v5 = (void *)v3;
  uint64_t v114 = *MEMORY[0x263EF8340];
  uint64_t v9 = a3[3];
  uint64_t v10 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  if (v4) {
    return result;
  }
  uint64_t v12 = a3[3];
  uint64_t v13 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v12);
  double v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  uint64_t v15 = *(void *)(v3 + 32);
  if ((sub_21F149780() & 1) == 0)
  {
    switch(a2 >> 62)
    {
      case 1uLL:
        LODWORD(v24) = HIDWORD(a1) - a1;
        if (__OFSUB__(HIDWORD(a1), a1)) {
          goto LABEL_71;
        }
        uint64_t v24 = (int)v24;
LABEL_14:
        if (v24 > 950000)
        {
          sub_21F0ED588();
          swift_allocError();
          char v29 = 16;
          goto LABEL_36;
        }
LABEL_16:
        uint64_t v30 = sub_21F152ED8(a1, a2);
        uint64_t v31 = v30;
        float v32 = v14;
        __B[0] = v32;
        uint64_t v33 = *(void *)(v15 + 48);
        if (v33) {
          __B[0] = *(float *)(v33 + 64) * v32;
        }
        vDSP_Length v34 = *(void *)(v30 + 16);
        swift_bridgeObjectRetain();
        uint64_t v35 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v35 = sub_21F103A90(0, v34, 0, v31);
        }
        vDSP_vsdiv((const float *)(v31 + 32), 1, __B, (float *)(v35 + 32), 1, v34);
        swift_bridgeObjectRelease();
        uint64_t v36 = a3[3];
        uint64_t v37 = a3[4];
        __swift_project_boxed_opaque_existential_1(a3, v36);
        uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v37 + 32))(1, v36, v37, v14);
        sub_21F0ED588();
        uint64_t v39 = (void *)swift_allocError();
        unsigned char *v40 = 1;
        uint64_t v41 = v5[5];
        uint64_t v42 = v5[6];
        uint64_t v109 = v38;
        uint64_t v43 = v5[7];
        uint64_t v44 = v5[8];
        uint64_t v45 = v5[9];
        uint64_t v46 = v5[10];
        uint64_t v107 = v45;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_21F159700;
        *(void *)(inited + 32) = 7104112;
        *(void *)(inited + 40) = 0xE300000000000000;
        *(void *)(inited + 48) = v41;
        *(void *)(inited + 56) = v42;
        *(void *)(inited + 64) = 0x73746C75736572;
        *(void *)(inited + 72) = 0xE700000000000000;
        *(void *)(inited + 80) = v43;
        *(void *)(inited + 88) = v44;
        *(void *)(inited + 96) = v107;
        *(void *)(inited + 104) = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21F11DF24(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t v48 = swift_bridgeObjectRetain();
        uint64_t v49 = sub_21F0F34A0(v48);
        unint64_t v51 = v50;
        swift_bridgeObjectRelease();
        id v52 = objc_allocWithZone(MEMORY[0x263F3A200]);
        uint64_t v53 = (void *)sub_21F156C90();
        id v54 = objc_msgSend(v52, sel_initWithKey_, v53);

        __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFE0);
        uint64_t v55 = swift_allocObject();
        *(_OWORD *)(v55 + 16) = xmmword_21F159670;
        *(void *)(v55 + 32) = v49;
        *(void *)(v55 + 40) = v51;
        sub_21F0FBDC0(v49, v51);
        uint64_t v56 = (void *)sub_21F156EE0();
        swift_bridgeObjectRelease();
        sub_21F150910(v109);
        uint64_t v57 = (void *)sub_21F156BC0();
        swift_bridgeObjectRelease();
        LODWORD(v53) = objc_msgSend(v54, sel_recordFloatVectors_metadata_, v56, v57);

        sub_21F0FB8BC(v49, v51);
        swift_bridgeObjectRelease();
        if (v53) {

        }
        else {
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        break;
      case 2uLL:
        uint64_t v26 = *(void *)(a1 + 16);
        uint64_t v25 = *(void *)(a1 + 24);
        BOOL v27 = __OFSUB__(v25, v26);
        uint64_t v24 = v25 - v26;
        if (!v27) {
          goto LABEL_14;
        }
        goto LABEL_72;
      default:
        goto LABEL_16;
    }
    return result;
  }
  long long v16 = *(_OWORD *)(v3 + 56);
  v112[0] = *(_OWORD *)(v3 + 40);
  v112[1] = v16;
  v112[2] = *(_OWORD *)(v3 + 72);
  unint64_t v17 = sub_21F1482AC(a1, a2, v15, (uint64_t)v112);
  unint64_t v18 = v17;
  unint64_t v105 = v17 >> 62;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_21F157420();
    if (v19)
    {
LABEL_5:
      if (v19 < 1) {
        goto LABEL_73;
      }
      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
        do
        {
          uint64_t v22 = MEMORY[0x223C441C0](v20++, v18);
          double v23 = *(double *)(v22 + 32);
          swift_unknownObjectRelease();
          double v21 = v21 + v23 * v23;
        }
        while (v19 != v20);
      }
      else
      {
        if ((unint64_t)v19 >= 2)
        {
          unint64_t v58 = v19 & 0xFFFFFFFFFFFFFFFELL;
          unint64_t v59 = v18 + 40;
          double v21 = 0.0;
          unint64_t v60 = v19 & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            double v21 = v21
                + *(double *)(*(void *)(v59 - 8) + 32) * *(double *)(*(void *)(v59 - 8) + 32)
                + *(double *)(*(void *)v59 + 32) * *(double *)(*(void *)v59 + 32);
            v59 += 16;
            v60 -= 2;
          }
          while (v60);
          if (v19 == v58) {
            goto LABEL_31;
          }
        }
        else
        {
          unint64_t v58 = 0;
          double v21 = 0.0;
        }
        unint64_t v61 = v19 - v58;
        uint64_t v62 = (uint64_t *)(v18 + 8 * v58 + 32);
        do
        {
          uint64_t v63 = *v62++;
          double v21 = v21 + *(double *)(v63 + 32) * *(double *)(v63 + 32);
          --v61;
        }
        while (v61);
      }
LABEL_31:
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  double v21 = 0.0;
LABEL_34:
  if (vabdd_f64(sqrt(v21), v14) > 0.0001)
  {
    swift_bridgeObjectRelease();
    sub_21F0ED588();
    swift_allocError();
    char v29 = 15;
LABEL_36:
    *uint64_t v28 = v29;
    return swift_willThrow();
  }
  if (!v19) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v103 = v18 & 0xC000000000000001;
  if ((v18 & 0xC000000000000001) == 0)
  {
    uint64_t v68 = 0;
    while (1)
    {
      uint64_t v69 = v68 + 1;
      if (__OFADD__(v68, 1)) {
        goto LABEL_69;
      }
      uint64_t v70 = *(void *)(v18 + 8 * v68 + 32);
      swift_beginAccess();
      if (*(void *)(*(void *)(v70 + 40) + 16) > 0x39FBCuLL)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        sub_21F0ED588();
        swift_allocError();
        *uint64_t v98 = 16;
        swift_willThrow();
        return swift_release();
      }
      ++v68;
      if (v69 == v19) {
        goto LABEL_49;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v64 = 0;
  do
  {
    uint64_t v65 = MEMORY[0x223C441C0](v64, v18);
    uint64_t v66 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
    }
    uint64_t v67 = v65;
    swift_beginAccess();
    if (*(void *)(*(void *)(v67 + 40) + 16) > 0x39FBCuLL)
    {
      swift_bridgeObjectRelease_n();
      sub_21F0ED588();
      swift_allocError();
      *uint64_t v97 = 16;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    ++v64;
  }
  while (v66 != v19);
  swift_bridgeObjectRelease();
LABEL_49:
  uint64_t v100 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v71 = 4;
  uint64_t v102 = v15;
  unint64_t v104 = v18;
  uint64_t v101 = v19;
  while (1)
  {
    uint64_t v72 = v71 - 4;
    if (v103)
    {
      uint64_t v73 = MEMORY[0x223C441C0](v71 - 4, v18);
      uint64_t v74 = v71 - 3;
      if (__OFADD__(v72, 1)) {
        goto LABEL_70;
      }
    }
    else
    {
      uint64_t v73 = *(void *)(v18 + 8 * v71);
      swift_retain();
      uint64_t v74 = v71 - 3;
      if (__OFADD__(v72, 1)) {
        goto LABEL_70;
      }
    }
    float v75 = *(double *)(v73 + 32);
    uint64_t v76 = *(void *)(v15 + 48);
    uint64_t v106 = v74;
    uint64_t v108 = v71;
    if (v76) {
      float v75 = *(float *)(v76 + 64) * v75;
    }
    float v111 = v75;
    swift_beginAccess();
    uint64_t v77 = *(void *)(v73 + 40);
    vDSP_Length v78 = *(void *)(v77 + 16);
    swift_beginAccess();
    uint64_t v79 = *(void *)(v73 + 40);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v73 + 40) = v79;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v79 = sub_21F103A90(0, *(void *)(v79 + 16), 0, v79);
    }
    *(void *)(v73 + 40) = v79;
    swift_bridgeObjectRetain();
    vDSP_vsdiv((const float *)(v77 + 32), 1, &v111, (float *)(v79 + 32), 1, v78);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = a3[3];
    uint64_t v82 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v81);
    double v83 = *(double *)(v73 + 32);
    if (v105)
    {
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_21F157420();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v84 = *(void *)(v100 + 16);
    }
    uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v82 + 32))(v84, v81, v82, v83);
    sub_21F0ED588();
    uint64_t v85 = (void *)swift_allocError();
    *long long v86 = 1;
    swift_bridgeObjectRetain();
    uint64_t v87 = swift_bridgeObjectRetain();
    uint64_t v88 = sub_21F0F34A0(v87);
    unint64_t v90 = v89;
    swift_bridgeObjectRelease();
    id v91 = objc_allocWithZone(MEMORY[0x263F3A200]);
    unint64_t v92 = (void *)sub_21F156C90();
    id v93 = objc_msgSend(v91, sel_initWithKey_, v92);

    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFE0);
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = xmmword_21F159670;
    *(void *)(v94 + 32) = v88;
    *(void *)(v94 + 40) = v90;
    sub_21F0FBDC0(v88, v90);
    unint64_t v95 = (void *)sub_21F156EE0();
    swift_bridgeObjectRelease();
    sub_21F150910(v110);
    uint64_t v96 = (void *)sub_21F156BC0();
    swift_bridgeObjectRelease();
    LODWORD(v91) = objc_msgSend(v93, sel_recordFloatVectors_metadata_, v95, v96);

    sub_21F0FB8BC(v88, v90);
    swift_bridgeObjectRelease();
    if (!v91) {
      break;
    }
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v71 = v108 + 1;
    uint64_t v15 = v102;
    unint64_t v18 = v104;
    if (v106 == v101) {
      return swift_bridgeObjectRelease_n();
    }
  }
  swift_willThrow();
  id v99 = v85;
  swift_release();
  swift_bridgeObjectRelease_n();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21F154E0C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  if (!v4)
  {
    uint64_t v11 = result;
    sub_21F0ED588();
    id v26 = (id)swift_allocError();
    *uint64_t v12 = 7;
    unint64_t v25 = a2;
    __swift_project_boxed_opaque_existential_1(v5 + 11, v5[14]);
    uint64_t v13 = v5[5];
    uint64_t v14 = v5[6];
    uint64_t v24 = a1;
    uint64_t v15 = v5[7];
    uint64_t v16 = v5[8];
    uint64_t v17 = v5[9];
    uint64_t v18 = v5[10];
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F159700;
    *(void *)(inited + 32) = 7104112;
    *(void *)(inited + 40) = 0xE300000000000000;
    *(void *)(inited + 48) = v13;
    *(void *)(inited + 56) = v14;
    *(void *)(inited + 64) = 0x7363697274656DLL;
    *(void *)(inited + 72) = 0xE700000000000000;
    *(void *)(inited + 80) = v15;
    *(void *)(inited + 88) = v16;
    *(void *)(inited + 96) = v17;
    *(void *)(inited + 104) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_21F11DF24(inited);
    uint64_t v22 = v21;
    swift_setDeallocating();
    swift_arrayDestroy();
    double v23 = (id (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))off_26D0AEBC8;
    type metadata accessor for DediscoRecorderImpl();
    LOBYTE(v11) = v23(v20, v22, v24, v25, v11);
    swift_bridgeObjectRelease();
    if (v11) {

    }
    else {
      swift_willThrow();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F155008(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
  if (!v4)
  {
    uint64_t v11 = result;
    sub_21F0ED588();
    uint64_t v28 = (void *)swift_allocError();
    *uint64_t v12 = 8;
    uint64_t v13 = v3[5];
    uint64_t v14 = v5[6];
    uint64_t v26 = a1;
    unint64_t v27 = a2;
    uint64_t v15 = v5[7];
    uint64_t v16 = v5[8];
    uint64_t v17 = v5[9];
    uint64_t v18 = v5[10];
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE410);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F159700;
    *(void *)(inited + 32) = 7104112;
    *(void *)(inited + 40) = 0xE300000000000000;
    *(void *)(inited + 48) = v13;
    *(void *)(inited + 56) = v14;
    *(void *)(inited + 64) = 0x617461646174656DLL;
    *(void *)(inited + 72) = 0xE800000000000000;
    *(void *)(inited + 80) = v15;
    *(void *)(inited + 88) = v16;
    *(void *)(inited + 96) = v17;
    *(void *)(inited + 104) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F11DF24(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    id v20 = objc_allocWithZone(MEMORY[0x263F3A1F8]);
    uint64_t v21 = (void *)sub_21F156C90();
    id v22 = objc_msgSend(v20, sel_initWithKey_, v21);

    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFE0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_21F159670;
    *(void *)(v23 + 32) = v26;
    *(void *)(v23 + 40) = v27;
    sub_21F0FBDC0(v26, v27);
    uint64_t v24 = (void *)sub_21F156EE0();
    swift_bridgeObjectRelease();
    sub_21F150910(v11);
    unint64_t v25 = (void *)sub_21F156BC0();
    swift_bridgeObjectRelease();
    LOBYTE(v20) = objc_msgSend(v22, sel_recordBitVectors_metadata_, v24, v25);
    swift_bridgeObjectRelease();

    if (v20) {
    else
    }
      swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DediscoUploader.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  return v0;
}

uint64_t DediscoUploader.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 88);
  return swift_deallocClassInstance();
}

void *sub_21F15537C(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
LABEL_37:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v12;
  }
  if (!a3)
  {
    int64_t v11 = 0;
    uint64_t v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0) {
    goto LABEL_39;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v24 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_21F0ED61C(*(void *)(a4 + 56) + 32 * v14, (uint64_t)&v27);
    *(void *)&long long v26 = v20;
    *((void *)&v26 + 1) = v19;
    long long v22 = v27;
    long long v21 = v28;
    long long v30 = v27;
    long long v31 = v28;
    long long v29 = v26;
    *uint64_t v10 = v26;
    v10[1] = v22;
    id v10[2] = v21;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = a3;
      goto LABEL_36;
    }
    v10 += 3;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      ++v11;
      if (v15 + 1 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v17);
      if (v16) {
        goto LABEL_14;
      }
      int64_t v11 = v15 + 1;
      if (v15 + 2 >= v25) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v5 + 8 * (v15 + 2));
      if (v16)
      {
        v15 += 2;
      }
      else
      {
        int64_t v11 = v15 + 2;
        if (v15 + 3 >= v25) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v5 + 8 * (v15 + 3));
        if (!v16)
        {
          int64_t v17 = v15 + 4;
          int64_t v11 = v15 + 3;
          if (v15 + 4 < v25)
          {
            unint64_t v16 = *(void *)(v5 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v25)
                {
                  int64_t v11 = v25 - 1;
                  goto LABEL_35;
                }
                unint64_t v16 = *(void *)(v5 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v15 = v17;
            goto LABEL_21;
          }
LABEL_35:
          unint64_t v8 = 0;
LABEL_36:
          uint64_t v6 = v23;
          uint64_t result = v24;
          goto LABEL_37;
        }
        v15 += 3;
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21F1555CC(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE620);
    uint64_t v4 = 4 * a2;
    uint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 29;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 2);
    unint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 4 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

uint64_t sub_21F155704(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEC20);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 48);
  uint64_t v5 = sub_21F15537C(&v7, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_21F0ED6C8();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_21F1557FC(char *a1, int64_t a2)
{
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EBE5B8);
    size_t v4 = (char *)swift_allocObject();
    size_t v5 = _swift_stdlib_malloc_size(v4);
    *((void *)v4 + 2) = a2;
    *((void *)v4 + 3) = 2 * v5 - 64;
    int64_t v6 = v4 + 32;
    if (&v4[a2 + 32] <= a1 || v6 >= &a1[a2])
    {
      memcpy(v6, a1, a2);
      return (uint64_t)v4;
    }
  }
  uint64_t result = sub_21F157460();
  __break(1u);
  return result;
}

void *sub_21F155920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v27[3] = type metadata accessor for DediscoRecorderImpl();
  v27[4] = &off_26D0AEBC0;
  v27[0] = a4;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  sub_21F105934((uint64_t)v27, (uint64_t)(a5 + 11));
  swift_retain();
  int has_internal_content = os_variant_has_internal_content();
  swift_beginAccess();
  uint64_t v11 = *(void *)(a3 + 32);
  if (!*(void *)(v11 + 16))
  {
    long long v25 = 0u;
    long long v26 = 0u;
LABEL_9:
    swift_release();
    sub_21F0FC154((uint64_t)&v25, &qword_267EBE3F8);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_21F10E9C8(0xD000000000000014, 0x800000021F160D00);
  if (v13)
  {
    sub_21F0ED61C(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v25);
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1)) {
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    uint64_t v14 = a5[3];
    *(void *)&long long v25 = a5[2];
    *((void *)&v25 + 1) = v14;
    swift_bridgeObjectRetain();
    sub_21F156DD0();
    sub_21F156DD0();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = *((void *)&v25 + 1);
    uint64_t v16 = v25;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    goto LABEL_12;
  }
  swift_release();
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  uint64_t v16 = a5[2];
  uint64_t v15 = a5[3];
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v17 = a5[4];
  uint64_t v18 = *(void *)(v17 + 48);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(v18 + 72);
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v17 + 16);
    swift_beginAccess();
  }
  uint64_t v20 = *v19;
  uint64_t v21 = swift_bridgeObjectRetain();
  unint64_t v22 = 0xEA00000000006E6FLL;
  if (has_internal_content) {
    unint64_t v22 = 0xE500000000000000;
  }
  uint64_t v23 = 0x69746375646F7270;
  a5[5] = v16;
  a5[6] = v15;
  if (has_internal_content) {
    uint64_t v23 = 0x7972726163;
  }
  a5[7] = v23;
  a5[8] = v22;
  a5[9] = v20;
  a5[10] = v21;
  return a5;
}

uint64_t sub_21F155B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F156AA0();
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F156AB0();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EBEFA8);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21F156930();
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  float v32 = (char *)&v30 - v17;
  id v18 = objc_msgSend(self, sel_standardUserDefaults);
  *(void *)&v37[0] = 0xD00000000000001FLL;
  *((void *)&v37[0] + 1) = 0x800000021F160CA0;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v40 = 46;
  unint64_t v41 = 0xE100000000000000;
  uint64_t v38 = 95;
  unint64_t v39 = 0xE100000000000000;
  sub_21F0FB854();
  sub_21F157220();
  sub_21F156DD0();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_21F156C90();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_valueForKey_, v19);

  if (v20)
  {
    sub_21F157250();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  sub_21F10FD8C((uint64_t)v37, (uint64_t)v44);
  if (!v45)
  {
    uint64_t v24 = &qword_267EBE3F8;
    long long v25 = v44;
    return sub_21F0FC154((uint64_t)v25, v24);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  sub_21F156A80();
  uint64_t v22 = v36;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v6, *MEMORY[0x263F07870], v4);
  sub_21F1568F0();
  sub_21F156A70();
  uint64_t v23 = v33;
  long long v31 = *(void (**)(char *, uint64_t))(v33 + 8);
  v31(v16, v13);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v24 = &qword_267EBEFA8;
    long long v25 = v12;
    return sub_21F0FC154((uint64_t)v25, v24);
  }
  long long v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v32, v12, v13);
  sub_21F156920();
  sub_21F1560E0();
  char v27 = sub_21F156C30();
  long long v28 = (uint64_t (*)(char *, uint64_t))v31;
  v31(v16, v13);
  if (v27)
  {
    sub_21F0FB4FC();
    swift_allocError();
    unsigned char *v29 = 14;
    swift_willThrow();
  }
  return v28(v26, v13);
}

uint64_t type metadata accessor for DediscoUploader()
{
  return self;
}

uint64_t method lookup function for DediscoUploader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DediscoUploader);
}

unint64_t sub_21F1560E0()
{
  unint64_t result = qword_267EBE490;
  if (!qword_267EBE490)
  {
    sub_21F156930();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EBE490);
  }
  return result;
}

void PFLPrivatize_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void PFLPrivatizeCustomNorm_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void PFLPrivatizeCustomNormWithLowerEpsilon_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_21F156580()
{
  return MEMORY[0x270EEDC50]();
}

uint64_t sub_21F156590()
{
  return MEMORY[0x270EEDCB8]();
}

uint64_t sub_21F1565A0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_21F1565B0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_21F1565C0()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_21F1565D0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_21F1565E0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_21F1565F0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_21F156600()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_21F156610()
{
  return MEMORY[0x270EEE0C8]();
}

uint64_t sub_21F156620()
{
  return MEMORY[0x270EEE1A8]();
}

uint64_t sub_21F156630()
{
  return MEMORY[0x270EEE200]();
}

uint64_t sub_21F156640()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_21F156650()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_21F156660()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_21F156670()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_21F156680()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_21F156690()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_21F1566A0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_21F1566B0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_21F1566C0()
{
  return MEMORY[0x270EEEF18]();
}

uint64_t sub_21F1566D0()
{
  return MEMORY[0x270EEEFF8]();
}

uint64_t sub_21F1566E0()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_21F1566F0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_21F156700()
{
  return MEMORY[0x270EEFA08]();
}

uint64_t sub_21F156710()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_21F156720()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_21F156730()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_21F156740()
{
  return MEMORY[0x270EEFC88]();
}

uint64_t sub_21F156750()
{
  return MEMORY[0x270EEFCA0]();
}

uint64_t sub_21F156760()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_21F156770()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_21F156780()
{
  return MEMORY[0x270EEFD10]();
}

uint64_t sub_21F156790()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_21F1567A0()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_21F1567B0()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_21F1567C0()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_21F1567D0()
{
  return MEMORY[0x270EEFEB0]();
}

uint64_t sub_21F1567E0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_21F1567F0()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_21F156800()
{
  return MEMORY[0x270EEFF30]();
}

uint64_t sub_21F156810()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_21F156820()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_21F156830()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_21F156840()
{
  return MEMORY[0x270EEFFE0]();
}

uint64_t sub_21F156850()
{
  return MEMORY[0x270EEFFE8]();
}

uint64_t sub_21F156860()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_21F156870()
{
  return MEMORY[0x270EF00F8]();
}

uint64_t sub_21F156880()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_21F156890()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_21F1568A0()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_21F1568B0()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_21F1568C0()
{
  return MEMORY[0x270EF01F8]();
}

uint64_t sub_21F1568D0()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_21F1568E0()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_21F1568F0()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_21F156900()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_21F156910()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_21F156920()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_21F156930()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_21F156940()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_21F156950()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_21F156960()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_21F156970()
{
  return MEMORY[0x270EF0D80]();
}

uint64_t sub_21F156980()
{
  return MEMORY[0x270EF0D90]();
}

uint64_t sub_21F156990()
{
  return MEMORY[0x270EF0DB8]();
}

uint64_t sub_21F1569A0()
{
  return MEMORY[0x270EF0DD8]();
}

uint64_t sub_21F1569B0()
{
  return MEMORY[0x270EF0E00]();
}

uint64_t sub_21F1569C0()
{
  return MEMORY[0x270EF0F48]();
}

uint64_t sub_21F1569D0()
{
  return MEMORY[0x270EF0F70]();
}

uint64_t sub_21F1569E0()
{
  return MEMORY[0x270EF0F90]();
}

uint64_t sub_21F1569F0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_21F156A00()
{
  return MEMORY[0x270EF1008]();
}

uint64_t sub_21F156A10()
{
  return MEMORY[0x270EF1060]();
}

uint64_t sub_21F156A20()
{
  return MEMORY[0x270EF1080]();
}

uint64_t sub_21F156A30()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_21F156A40()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_21F156A50()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_21F156A60()
{
  return MEMORY[0x270EF10F0]();
}

uint64_t sub_21F156A70()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_21F156A80()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_21F156A90()
{
  return MEMORY[0x270EF1410]();
}

uint64_t sub_21F156AA0()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_21F156AB0()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_21F156AC0()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_21F156AD0()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_21F156AE0()
{
  return MEMORY[0x270F47260]();
}

uint64_t sub_21F156AF0()
{
  return MEMORY[0x270F47268]();
}

uint64_t sub_21F156B00()
{
  return MEMORY[0x270F47270]();
}

uint64_t sub_21F156B10()
{
  return MEMORY[0x270F47278]();
}

uint64_t sub_21F156B20()
{
  return MEMORY[0x270F47280]();
}

uint64_t sub_21F156B30()
{
  return MEMORY[0x270F47288]();
}

uint64_t sub_21F156B40()
{
  return MEMORY[0x270F47290]();
}

uint64_t sub_21F156B50()
{
  return MEMORY[0x270F47298]();
}

uint64_t sub_21F156B60()
{
  return MEMORY[0x270F472B0]();
}

uint64_t sub_21F156B70()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_21F156B80()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_21F156B90()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_21F156BA0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_21F156BB0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_21F156BC0()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_21F156BD0()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_21F156BE0()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_21F156BF0()
{
  return MEMORY[0x270F9D0B8]();
}

uint64_t sub_21F156C00()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_21F156C10()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_21F156C20()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_21F156C30()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_21F156C40()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_21F156C50()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_21F156C60()
{
  return MEMORY[0x270F9D5A0]();
}

uint64_t sub_21F156C70()
{
  return MEMORY[0x270F9D5A8]();
}

uint64_t sub_21F156C80()
{
  return MEMORY[0x270F9D5C0]();
}

uint64_t sub_21F156C90()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_21F156CA0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_21F156CB0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_21F156CC0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_21F156CD0()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_21F156CE0()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_21F156CF0()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_21F156D00()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_21F156D10()
{
  return MEMORY[0x270F9D610]();
}

uint64_t sub_21F156D20()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_21F156D30()
{
  return MEMORY[0x270F9D650]();
}

uint64_t sub_21F156D40()
{
  return MEMORY[0x270F9D678]();
}

uint64_t sub_21F156D50()
{
  return MEMORY[0x270F9D680]();
}

uint64_t sub_21F156D70()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_21F156D80()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_21F156D90()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_21F156DA0()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_21F156DB0()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_21F156DC0()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_21F156DD0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_21F156DF0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_21F156E00()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_21F156E10()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_21F156E30()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_21F156E40()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_21F156E50()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_21F156E60()
{
  return MEMORY[0x270F9D880]();
}

uint64_t sub_21F156E70()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_21F156E80()
{
  return MEMORY[0x270F9D8D8]();
}

uint64_t sub_21F156E90()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_21F156EA0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_21F156EB0()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_21F156EC0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_21F156ED0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_21F156EE0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_21F156EF0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_21F156F00()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_21F156F10()
{
  return MEMORY[0x270F9DBE8]();
}

uint64_t sub_21F156F20()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_21F156F30()
{
  return MEMORY[0x270F9DC18]();
}

uint64_t sub_21F156F40()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_21F156F50()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_21F156F60()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_21F156F70()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_21F156F80()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_21F156F90()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_21F156FA0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_21F156FC0()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_21F156FD0()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_21F157000()
{
  return MEMORY[0x270FA2068]();
}

uint64_t sub_21F157010()
{
  return MEMORY[0x270FA2070]();
}

uint64_t sub_21F157020()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_21F157030()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_21F157040()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_21F157050()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_21F157060()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_21F1570A0()
{
  return MEMORY[0x270EE3600]();
}

uint64_t sub_21F1570B0()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_21F1570C0()
{
  return MEMORY[0x270EF1E08]();
}

uint64_t sub_21F1570F0()
{
  return MEMORY[0x270EF1EE8]();
}

uint64_t sub_21F157100()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_21F157110()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_21F157120()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_21F157130()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_21F157140()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_21F157150()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_21F157160()
{
  return MEMORY[0x270FA0F10]();
}

uint64_t sub_21F157170()
{
  return MEMORY[0x270FA0F28]();
}

uint64_t sub_21F157180()
{
  return MEMORY[0x270EE3728]();
}

uint64_t sub_21F157190()
{
  return MEMORY[0x270EE3740]();
}

uint64_t sub_21F1571A0()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_21F1571B0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_21F1571C0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_21F1571D0()
{
  return MEMORY[0x270F9E3E0]();
}

uint64_t sub_21F1571E0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_21F1571F0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_21F157200()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_21F157210()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_21F157220()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_21F157230()
{
  return MEMORY[0x270EF24C0]();
}

uint64_t sub_21F157240()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_21F157250()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_21F157270()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_21F157280()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_21F157290()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_21F1572A0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_21F1572B0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_21F1572C0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_21F1572D0()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_21F1572F0()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_21F157300()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_21F157310()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_21F157320()
{
  return MEMORY[0x270F9EA10]();
}

uint64_t sub_21F157330()
{
  return MEMORY[0x270F9EA18]();
}

uint64_t sub_21F157340()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_21F157350()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_21F157360()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_21F157370()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_21F157380()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_21F157390()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t sub_21F1573A0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_21F1573B0()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_21F1573C0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_21F1573D0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_21F1573E0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_21F1573F0()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_21F157400()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_21F157410()
{
  return MEMORY[0x270F9F018]();
}

uint64_t sub_21F157420()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_21F157430()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_21F157440()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_21F157450()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_21F157460()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_21F157480()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_21F1574A0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_21F1574B0()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_21F1574C0()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_21F1574D0()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_21F1574E0()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_21F1574F0()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_21F157500()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_21F157510()
{
  return MEMORY[0x270F9F300]();
}

uint64_t sub_21F157520()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_21F157530()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_21F157540()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_21F157550()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_21F157560()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_21F157570()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_21F157580()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_21F157590()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_21F1575A0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_21F1575B0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_21F1575C0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_21F1575D0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_21F1575E0()
{
  return MEMORY[0x270FA2330]();
}

uint64_t sub_21F1575F0()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_21F157600()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_21F157610()
{
  return MEMORY[0x270F9F7E8]();
}

uint64_t sub_21F157620()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_21F157630()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_21F157640()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_21F157650()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_21F157660()
{
  return MEMORY[0x270F9FA90]();
}

uint64_t sub_21F157670()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_21F157680()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_21F157690()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_21F1576A0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_21F1576B0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_21F1576C0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_21F1576D0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_21F1576F0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_21F157700()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_21F157710()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_21F157720()
{
  return MEMORY[0x270F9FCA8]();
}

uint64_t sub_21F157730()
{
  return MEMORY[0x270F9FCB8]();
}

uint64_t sub_21F157740()
{
  return MEMORY[0x270F9FCC0]();
}

uint64_t sub_21F157750()
{
  return MEMORY[0x270F9FCD0]();
}

uint64_t sub_21F157760()
{
  return MEMORY[0x270F9FCD8]();
}

uint64_t sub_21F157770()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_21F157780()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_21F157790()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_21F1577A0()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_21F1577B0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

uint64_t BOMCopierCopyWithOptions()
{
  return MEMORY[0x270F126B0]();
}

uint64_t BOMCopierFree()
{
  return MEMORY[0x270F126C0]();
}

uint64_t BOMCopierNew()
{
  return MEMORY[0x270F126C8]();
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x270ED7AF0](data, *(void *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x270ED7B28](data, *(void *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

uint64_t INSupportedMediaCategories()
{
  return MEMORY[0x270EF52A8]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x270F4AE40]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x270EF2C08](aClass);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x270ED85F8](*(void *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

uint64_t cblas_saxpy_NEWLAPACK()
{
  return MEMORY[0x270EDE408]();
}

uint64_t cblas_scopy_NEWLAPACK()
{
  return MEMORY[0x270EDE418]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

uint64_t e5rt_buffer_object_release()
{
  return MEMORY[0x270F27B20]();
}

uint64_t e5rt_execution_stream_operation_release()
{
  return MEMORY[0x270F27C28]();
}

uint64_t e5rt_execution_stream_release()
{
  return MEMORY[0x270F27C68]();
}

uint64_t e5rt_io_port_release()
{
  return MEMORY[0x270F27CD8]();
}

uint64_t e5rt_program_library_release()
{
  return MEMORY[0x270F27D60]();
}

uint64_t e5rt_tensor_desc_release()
{
  return MEMORY[0x270F27E78]();
}

uint64_t espresso_buffer_pack_tensor_shape()
{
  return MEMORY[0x270F27EC8]();
}

uint64_t espresso_context_destroy()
{
  return MEMORY[0x270F27EE0]();
}

uint64_t espresso_create_context()
{
  return MEMORY[0x270F27F08]();
}

uint64_t espresso_create_plan()
{
  return MEMORY[0x270F27F20]();
}

uint64_t espresso_network_bind_buffer()
{
  return MEMORY[0x270F27F78]();
}

uint64_t espresso_network_bind_buffer_to_global()
{
  return MEMORY[0x270F27F88]();
}

uint64_t espresso_network_change_input_blob_shapes_seq_rank()
{
  return MEMORY[0x270F28000]();
}

uint64_t espresso_network_declare_input()
{
  return MEMORY[0x270F28008]();
}

uint64_t espresso_network_declare_output()
{
  return MEMORY[0x270F28010]();
}

uint64_t espresso_network_query_blob_shape()
{
  return MEMORY[0x270F28038]();
}

uint64_t espresso_network_set_function_name()
{
  return MEMORY[0x270F28050]();
}

uint64_t espresso_plan_add_network()
{
  return MEMORY[0x270F28068]();
}

uint64_t espresso_plan_build()
{
  return MEMORY[0x270F28070]();
}

uint64_t espresso_plan_build_clean()
{
  return MEMORY[0x270F28080]();
}

uint64_t espresso_plan_destroy()
{
  return MEMORY[0x270F28090]();
}

uint64_t espresso_plan_execute_sync()
{
  return MEMORY[0x270F280A0]();
}

void free(void *a1)
{
}

uint64_t get_main_function_name()
{
  return MEMORY[0x270F280E0]();
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x270F9A678](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

float powf(float a1, float a2)
{
  MEMORY[0x270EDAD00](a1, a2);
  return result;
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x270F9B560](a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B580](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  MEMORY[0x270F9B590](a1, *(void *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B598](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x270F9B5A8](a1, *(void *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B5C0](a1, *(void *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5D0](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x270F9B658](a1);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x270F9B660](*(void *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x270F9B668](a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B690](pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x270F9B710](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x270F9B720](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B800](a1);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x270EDB5D0](__s1);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x270FA04B8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}

int uname(utsname *a1)
{
  return MEMORY[0x270EDB998](a1);
}

void vDSP_normalize(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, float *__Mean, float *__StandardDeviation, vDSP_Length __N)
{
}

void vDSP_vadd(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vclr(float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vsdiv(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}