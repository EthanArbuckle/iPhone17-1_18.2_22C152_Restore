uint64_t initializeWithTake for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  unsigned char *v9;
  unsigned char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v55;
  int *v56;
  uint64_t v57;
  char *__dst;
  char *__dsta;

  v6 = sub_252D19588();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (unsigned char *)(a1 + v8);
  v10 = (unsigned char *)(a2 + v8);
  v11 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v57 = a3;
      v12 = sub_252D19BE8();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      v56 = (int *)type metadata accessor for ActionSuccess(0);
      v13 = v56[5];
      __dst = &v9[v13];
      v14 = &v10[v13];
      v15 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
      {
        v16 = sub_252AC3A24(&qword_269C41A68);
        memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v14, v6);
        *(_OWORD *)&__dst[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
        *(_OWORD *)&__dst[*(int *)(v15 + 24)] = *(_OWORD *)&v14[*(int *)(v15 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v15);
      }
      v9[v56[6]] = v10[v56[6]];
      v35 = v56[7];
      v36 = &v9[v35];
      v37 = &v10[v35];
      v38 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v37, 1, v38))
      {
        v39 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        *v36 = *v37;
        v40 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        v41 = *(int *)(v40 + 20);
        __dsta = (char *)v36 + v41;
        v55 = (char *)v37 + v41;
        v42 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dsta, v55, v42);
        *(void *)((char *)v36 + *(int *)(v40 + 24)) = *(void *)((char *)v37 + *(int *)(v40 + 24));
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v36, 0, 1, v38);
      }
      a3 = v57;
      v9[v56[8]] = v10[v56[8]];
      *(_OWORD *)&v9[v56[9]] = *(_OWORD *)&v10[v56[9]];
      goto LABEL_14;
    case 3u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v17 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v20 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      goto LABEL_14;
    case 4u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((void *)v9 + 2) = *((void *)v10 + 2);
      v9[24] = v10[24];
      v21 = (int *)type metadata accessor for ParameterConfirmation(0);
      v22 = v21[6];
      v23 = &v9[v22];
      v24 = &v10[v22];
      v25 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(_OWORD *)&v9[v21[7]] = *(_OWORD *)&v10[v21[7]];
      *(_OWORD *)&v9[v21[8]] = *(_OWORD *)&v10[v21[8]];
      goto LABEL_14;
    case 6u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v26 = type metadata accessor for ParameterNotAllowed(0);
      v27 = *(int *)(v26 + 20);
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      v9[*(int *)(v26 + 24)] = v10[*(int *)(v26 + 24)];
      goto LABEL_14;
    case 7u:
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v31 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      v32 = &v9[v31];
      v33 = &v10[v31];
      v34 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  v43 = *(int *)(a3 + 24);
  v44 = (void *)(a1 + v43);
  v45 = (void *)(a2 + v43);
  v46 = (int *)type metadata accessor for ResponseManifest(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v45, 1, (uint64_t)v46))
  {
    v47 = sub_252AC3A24(&qword_269C41A88);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    memcpy(v44 + 1, v45 + 1, 0x50uLL);
    memcpy(v44 + 11, v45 + 11, 0x61uLL);
    v48 = v46[8];
    v49 = (char *)v44 + v48;
    v50 = (char *)v45 + v48;
    v51 = type metadata accessor for ResponseVisual.UIType(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v50, 1, v51))
    {
      v52 = sub_252AC3A24(&qword_269C41A80);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v53 = sub_252D19C58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v49, v50, v53);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v49, 0, 1, v51);
    }
    *(_OWORD *)((char *)v44 + v46[9]) = *(_OWORD *)((char *)v45 + v46[9]);
    *(_OWORD *)((char *)v44 + v46[10]) = *(_OWORD *)((char *)v45 + v46[10]);
    *((unsigned char *)v44 + v46[11]) = *((unsigned char *)v45 + v46[11]);
    *((unsigned char *)v44 + v46[12]) = *((unsigned char *)v45 + v46[12]);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
  }
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 20);
    v9 = (unsigned char *)(a1 + v8);
    v10 = (unsigned char *)(a2 + v8);
    sub_252BA6670();
    uint64_t v11 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = sub_252D19BE8();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        uint64_t v13 = type metadata accessor for ActionSuccess(0);
        uint64_t v14 = *(int *)(v13 + 20);
        __dst = &v9[v14];
        uint64_t v93 = v13;
        v15 = &v10[v14];
        uint64_t v16 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_252AC3A24(&qword_269C41A68);
          memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(__dst, v15, v6);
          *(_OWORD *)&__dst[*(int *)(v16 + 20)] = *(_OWORD *)&v15[*(int *)(v16 + 20)];
          *(_OWORD *)&__dst[*(int *)(v16 + 24)] = *(_OWORD *)&v15[*(int *)(v16 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        uint64_t v36 = v93;
        v9[*(int *)(v93 + 24)] = v10[*(int *)(v93 + 24)];
        uint64_t v37 = *(int *)(v93 + 28);
        v38 = &v9[v37];
        v39 = &v10[v37];
        uint64_t v40 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          _OWORD *v38 = *v39;
          uint64_t v42 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v43 = *(int *)(v42 + 20);
          v90 = (char *)v39 + v43;
          __dsta = (char *)v38 + v43;
          uint64_t v44 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(__dsta, v90, v44);
          uint64_t v45 = *(int *)(v42 + 24);
          uint64_t v36 = v93;
          *(void *)((char *)v38 + v45) = *(void *)((char *)v39 + v45);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v38, 0, 1, v40);
        }
        v9[*(int *)(v36 + 32)] = v10[*(int *)(v36 + 32)];
        *(_OWORD *)&v9[*(int *)(v36 + 36)] = *(_OWORD *)&v10[*(int *)(v36 + 36)];
        goto LABEL_15;
      case 3u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        uint64_t v18 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        uint64_t v21 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_15;
      case 4u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        v9[24] = v10[24];
        v22 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v23 = v22[6];
        v24 = &v9[v23];
        v25 = &v10[v23];
        uint64_t v26 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&v9[v22[7]] = *(_OWORD *)&v10[v22[7]];
        *(_OWORD *)&v9[v22[8]] = *(_OWORD *)&v10[v22[8]];
        goto LABEL_15;
      case 6u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        uint64_t v27 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v28 = *(int *)(v27 + 20);
        v29 = &v9[v28];
        v30 = &v10[v28];
        uint64_t v31 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        v9[*(int *)(v27 + 24)] = v10[*(int *)(v27 + 24)];
        goto LABEL_15;
      case 7u:
        *(_OWORD *)v9 = *(_OWORD *)v10;
        uint64_t v32 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        v33 = &v9[v32];
        v34 = &v10[v32];
        uint64_t v35 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  uint64_t v46 = *(int *)(a3 + 24);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  v49 = (int *)type metadata accessor for ResponseManifest(0);
  int v50 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v47, 1, (uint64_t)v49);
  int v51 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v48, 1, (uint64_t)v49);
  if (!v50)
  {
    if (v51)
    {
      sub_252BA6670();
      goto LABEL_22;
    }
    *(void *)uint64_t v47 = *(void *)v48;
    swift_bridgeObjectRelease();
    if (*(void *)(v47 + 16))
    {
      uint64_t v58 = *(void *)(v48 + 16);
      if (v58)
      {
        *(void *)(v47 + 8) = *(void *)(v48 + 8);
        *(void *)(v47 + 16) = v58;
        swift_bridgeObjectRelease();
        uint64_t v59 = *(void *)(v48 + 32);
        *(void *)(v47 + 24) = *(void *)(v48 + 24);
        *(void *)(v47 + 32) = v59;
        swift_bridgeObjectRelease();
        uint64_t v60 = *(void *)(v48 + 48);
        *(void *)(v47 + 40) = *(void *)(v48 + 40);
        *(void *)(v47 + 48) = v60;
        swift_bridgeObjectRelease();
        uint64_t v61 = *(void *)(v48 + 64);
        *(void *)(v47 + 56) = *(void *)(v48 + 56);
        *(void *)(v47 + 64) = v61;
        swift_bridgeObjectRelease();
        uint64_t v62 = *(void *)(v48 + 80);
        *(void *)(v47 + 72) = *(void *)(v48 + 72);
        *(void *)(v47 + 80) = v62;
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      sub_252B5D188(v47 + 8);
    }
    memcpy((void *)(v47 + 8), (const void *)(v48 + 8), 0x50uLL);
LABEL_33:
    if (*(void *)(v47 + 96))
    {
      uint64_t v64 = *(void *)(v48 + 96);
      if (v64)
      {
        *(void *)(v47 + 88) = *(void *)(v48 + 88);
        *(void *)(v47 + 96) = v64;
        swift_bridgeObjectRelease();
        uint64_t v65 = *(void *)(v48 + 112);
        *(void *)(v47 + 104) = *(void *)(v48 + 104);
        *(void *)(v47 + 112) = v65;
        swift_bridgeObjectRelease();
        uint64_t v66 = *(void *)(v48 + 128);
        *(void *)(v47 + 120) = *(void *)(v48 + 120);
        *(void *)(v47 + 128) = v66;
        swift_bridgeObjectRelease();
        uint64_t v67 = *(void *)(v48 + 144);
        *(void *)(v47 + 136) = *(void *)(v48 + 136);
        *(void *)(v47 + 144) = v67;
        swift_bridgeObjectRelease();
        uint64_t v68 = *(void *)(v48 + 160);
        *(void *)(v47 + 152) = *(void *)(v48 + 152);
        *(void *)(v47 + 160) = v68;
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      sub_252B5D188(v47 + 88);
    }
    memcpy((void *)(v47 + 88), (const void *)(v48 + 88), 0x50uLL);
LABEL_38:
    uint64_t v69 = *(void *)(v48 + 168);
    if (*(void *)(v47 + 168))
    {
      if (v69)
      {
        *(void *)(v47 + 168) = v69;
        swift_bridgeObjectRelease();
        *(void *)(v47 + 176) = *(void *)(v48 + 176);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v47 + 184) = *(unsigned char *)(v48 + 184);
        goto LABEL_43;
      }
      sub_252B5D1B8(v47 + 168);
    }
    *(_OWORD *)(v47 + 168) = *(_OWORD *)(v48 + 168);
    *(unsigned char *)(v47 + 184) = *(unsigned char *)(v48 + 184);
LABEL_43:
    uint64_t v70 = v49[8];
    v71 = (void *)(v47 + v70);
    v72 = (const void *)(v48 + v70);
    uint64_t v73 = type metadata accessor for ResponseVisual.UIType(0);
    int v74 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v71, 1, v73);
    int v75 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v72, 1, v73);
    if (v74)
    {
      if (!v75)
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v76 = sub_252D19C58();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v76 - 8) + 32))(v71, v72, v76);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v71, 0, 1, v73);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v75)
      {
        if (a1 == a2) {
          goto LABEL_56;
        }
        sub_252BA6670();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v78 = sub_252D19C58();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v78 - 8) + 32))(v71, v72, v78);
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        size_t v77 = *(void *)(*(void *)(v73 - 8) + 64);
LABEL_50:
        memcpy(v71, v72, v77);
LABEL_56:
        uint64_t v79 = v49[9];
        v80 = (void *)(v47 + v79);
        v81 = (uint64_t *)(v48 + v79);
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        void *v80 = v83;
        v80[1] = v82;
        swift_bridgeObjectRelease();
        uint64_t v84 = v49[10];
        v85 = (void *)(v47 + v84);
        v86 = (uint64_t *)(v48 + v84);
        uint64_t v88 = *v86;
        uint64_t v87 = v86[1];
        void *v85 = v88;
        v85[1] = v87;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v47 + v49[11]) = *(unsigned char *)(v48 + v49[11]);
        *(unsigned char *)(v47 + v49[12]) = *(unsigned char *)(v48 + v49[12]);
        return a1;
      }
      sub_252BA6670();
    }
    size_t v77 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A80) - 8) + 64);
    goto LABEL_50;
  }
  if (v51)
  {
LABEL_22:
    uint64_t v57 = sub_252AC3A24(&qword_269C41A88);
    memcpy((void *)v47, (const void *)v48, *(void *)(*(void *)(v57 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v47 = *(void *)v48;
  memcpy((void *)(v47 + 8), (const void *)(v48 + 8), 0x50uLL);
  memcpy((void *)(v47 + 88), (const void *)(v48 + 88), 0x61uLL);
  uint64_t v52 = v49[8];
  v53 = (void *)(v47 + v52);
  v54 = (const void *)(v48 + v52);
  uint64_t v55 = type metadata accessor for ResponseVisual.UIType(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v56 = sub_252AC3A24(&qword_269C41A80);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v63 = sub_252D19C58();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v63 - 8) + 32))(v53, v54, v63);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v53, 0, 1, v55);
  }
  *(_OWORD *)(v47 + v49[9]) = *(_OWORD *)(v48 + v49[9]);
  *(_OWORD *)(v47 + v49[10]) = *(_OWORD *)(v48 + v49[10]);
  *(unsigned char *)(v47 + v49[11]) = *(unsigned char *)(v48 + v49[11]);
  *(unsigned char *)(v47 + v49[12]) = *(unsigned char *)(v48 + v49[12]);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v47, 0, 1, (uint64_t)v49);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C784D0);
}

uint64_t sub_252C784D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252AF44D4();
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    type metadata accessor for StatementOutcome(0);
    sub_252AEA314();
    if (*(_DWORD *)(v10 + 84) == v3)
    {
      uint64_t v8 = v9;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_252AC3A24(&qword_269C41A88);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    uint64_t v7 = v4 + v11;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientActionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C78578);
}

uint64_t sub_252C78578(uint64_t a1, uint64_t a2, int a3)
{
  sub_252AF44D4();
  sub_252AEA314();
  if (*(_DWORD *)(v4 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    type metadata accessor for StatementOutcome(0);
    sub_252AEA314();
    if (*(_DWORD *)(v5 + 84) != a3) {
      sub_252AC3A24(&qword_269C41A88);
    }
  }
  sub_252B4C2D0();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, v7, v8, v9);
}

void sub_252C78610()
{
  sub_252D19588();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StatementOutcome(319);
    if (v1 <= 0x3F)
    {
      sub_252C78730(319, &qword_26B234628, (void (*)(uint64_t))type metadata accessor for ResponseManifest);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_252C78730(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_252D1A178();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for MessagePayload.ClientCustom(uint64_t a1)
{
  sub_252AC5C14(*(void *)a1, *(void *)(a1 + 8));
  sub_252AC5C14(*(void *)(a1 + 16), *(void *)(a1 + 24));

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for MessagePayload.ClientCustom(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_252AC5A54(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MessagePayload.ClientCustom(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_252AC5C14(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_252AC5A54(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_252AC5C14(v10, v11);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for MessagePayload.ClientCustom(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_252AC5C14(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_252AC5C14(v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientCustom(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientCustom(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MessagePayload.ClientCustom()
{
}

void type metadata accessor for MessagePayload.ClientIdentifier()
{
}

void type metadata accessor for MessagePayload.ClientInitiatedClientAction()
{
}

void type metadata accessor for MessagePayload.ContextPrewarmRequest()
{
}

void type metadata accessor for MessagePayload.ContextPrewarmCompleted()
{
}

void type metadata accessor for MessagePayload.SafetyModeRelease()
{
}

uint64_t getEnumTagSinglePayload for MessagePayload.SafetyModeException(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.SafetyModeException(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for MessagePayload.SafetyModeException()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for MessagePayload.RequestContent(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v11 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
      }
      uint64_t v13 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))((char *)a1 + v13[5], (char *)a2 + v13[5], v11);
      uint64_t v14 = v13[6];
      v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v18 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      uint64_t v19 = v13[7];
      v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(_DWORD *)v20 = *(_DWORD *)v21;
      uint64_t v22 = *((void *)v21 + 2);
      *((void *)v20 + 1) = *((void *)v21 + 1);
      *((void *)v20 + 2) = v22;
      uint64_t v23 = v13[8];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *((void *)v25 + 1);
      unsigned __int8 v28 = v25[16];
      swift_bridgeObjectRetain();
      sub_252ACE76C(v26, v27, v28);
      *(void *)v24 = v26;
      *((void *)v24 + 1) = v27;
      v24[16] = v28;
      goto LABEL_16;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 1:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      goto LABEL_17;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_17:
  uint64_t v29 = *(int *)(a3 + 20);
  v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = (uint64_t *)((char *)a1 + v34);
  uint64_t v36 = (uint64_t *)((char *)a2 + v34);
  uint64_t v37 = v36[1];
  if (v37)
  {
    *uint64_t v35 = *v36;
    v35[1] = v37;
    v35[2] = v36[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    v35[2] = v36[2];
  }
  return a1;
}

uint64_t destroy for MessagePayload.ExternalAgentRequest(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MessagePayload.RequestContent(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v5 = sub_252D19588();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    }
    uint64_t v6 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1 + v6[5], v5);
    uint64_t v7 = a1 + v6[6];
    type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    sub_252AD1694(*(void *)(a1 + v6[8]), *(void *)(a1 + v6[8] + 8), *(unsigned char *)(a1 + v6[8] + 16));
  }
  else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for MessagePayload.ExternalAgentRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessagePayload.RequestContent(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v9 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v9);
      }
      uint64_t v11 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))((char *)a1 + v11[5], (char *)a2 + v11[5], v9);
      uint64_t v12 = v11[6];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      }
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      uint64_t v20 = *((void *)v19 + 2);
      *((void *)v18 + 1) = *((void *)v19 + 1);
      *((void *)v18 + 2) = v20;
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = *(void *)v23;
      uint64_t v25 = *((void *)v23 + 1);
      unsigned __int8 v26 = v23[16];
      swift_bridgeObjectRetain();
      sub_252ACE76C(v24, v25, v26);
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      v22[16] = v26;
      break;
    case 2:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      break;
    case 1:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v27 = *(int *)(a3 + 20);
  unsigned __int8 v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v32 = *(int *)(a3 + 24);
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v35 = v34[1];
  if (v35)
  {
    void *v33 = *v34;
    v33[1] = v35;
    v33[2] = v34[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    v33[2] = v34[2];
  }
  return a1;
}

void *assignWithCopy for MessagePayload.ExternalAgentRequest(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    uint64_t v6 = type metadata accessor for MessagePayload.RequestContent(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v8 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v8))
        {
          uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v8);
        }
        uint64_t v10 = (int *)type metadata accessor for SystemPromptResolution(0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))((char *)a1 + v10[5], (char *)a2 + v10[5], v8);
        uint64_t v11 = v10[6];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for SystemPromptResolution.UserAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v15 = sub_252D19BE8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        }
        uint64_t v16 = v10[7];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
        *((void *)v17 + 1) = *((void *)v18 + 1);
        *((void *)v17 + 2) = *((void *)v18 + 2);
        uint64_t v19 = v10[8];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = *(void *)v21;
        uint64_t v23 = *((void *)v21 + 1);
        unsigned __int8 v24 = v21[16];
        swift_bridgeObjectRetain();
        sub_252ACE76C(v22, v23, v24);
        *(void *)uint64_t v20 = v22;
        *((void *)v20 + 1) = v23;
        v20[16] = v24;
        break;
      case 2:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_16;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  uint64_t v25 = *(int *)(a3 + 20);
  unsigned __int8 v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_252D19588();
  int v29 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v26, 1, v28);
  int v30 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  uint64_t v31 = *(void *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v28);
LABEL_21:
    uint64_t v32 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v26, v27, v28);
LABEL_22:
  uint64_t v33 = *(int *)(a3 + 24);
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v36 = *(void *)((char *)a1 + v33 + 8);
  uint64_t v37 = v35[1];
  if (v36)
  {
    if (v37)
    {
      void *v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34[2] = v35[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_252C6EE60((uint64_t)v34);
      uint64_t v38 = v35[2];
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      v34[2] = v38;
    }
  }
  else if (v37)
  {
    void *v34 = *v35;
    v34[1] = v35[1];
    v34[2] = v35[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v39 = *(_OWORD *)v35;
    v34[2] = v35[2];
    *(_OWORD *)uint64_t v34 = v39;
  }
  return a1;
}

char *initializeWithTake for MessagePayload.ExternalAgentRequest(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessagePayload.RequestContent(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v9 = (int *)type metadata accessor for SystemPromptResolution(0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(&a1[v9[5]], &a2[v9[5]], v7);
    uint64_t v10 = v9[6];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = v9[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    uint64_t v18 = v9[8];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    v19[16] = v20[16];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((void *)v27 + 2) = *((void *)v28 + 2);
  return a1;
}

char *assignWithTake for MessagePayload.ExternalAgentRequest(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    uint64_t v6 = type metadata accessor for MessagePayload.RequestContent(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v9 = (int *)type metadata accessor for SystemPromptResolution(0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(&a1[v9[5]], &a2[v9[5]], v7);
      uint64_t v10 = v9[6];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for SystemPromptResolution.UserAction(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
      uint64_t v15 = v9[7];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((void *)v16 + 2) = *((void *)v17 + 2);
      uint64_t v18 = v9[8];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      v19[16] = v20[16];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_252D19588();
  int v25 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v24);
  int v26 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v24);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v27 = *(void *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v24);
LABEL_16:
    uint64_t v28 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v22, v23, v24);
LABEL_17:
  uint64_t v29 = *(int *)(a3 + 24);
  uint64_t v30 = (uint64_t)&a1[v29];
  uint64_t v31 = &a2[v29];
  if (!*(void *)&a1[v29 + 8])
  {
LABEL_21:
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(void *)(v30 + 16) = *((void *)v31 + 2);
    return a1;
  }
  uint64_t v32 = *((void *)v31 + 1);
  if (!v32)
  {
    sub_252C6EE60(v30);
    goto LABEL_21;
  }
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 16) = *((void *)v31 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C79FCC);
}

uint64_t sub_252C79FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252AC3A24(&qword_26B2320E8);
    sub_252AEA314();
    if (*(_DWORD *)(v9 + 84) != a2) {
      return sub_252B4C388(*(void *)(a1 + *(int *)(a3 + 24) + 8));
    }
    uint64_t v7 = sub_252CBC42C();
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7A088);
}

void sub_252C7A088(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_252AEA314();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252AC3A24(&qword_26B2320E8);
    sub_252AEA314();
    if (*(_DWORD *)(v9 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return;
    }
    sub_252CBC42C();
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v10, v11, v12, v13);
}

void sub_252C7A134()
{
  type metadata accessor for MessagePayload.RequestContent(319);
  if (v0 <= 0x3F)
  {
    sub_252C78730(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentTextQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_252D19588();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    if (v17)
    {
      void *v15 = *v16;
      v15[1] = v17;
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      v15[2] = v16[2];
    }
  }
  return v4;
}

uint64_t destroy for MessagePayload.ExternalAgentTextQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for MessagePayload.ExternalAgentTextQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19588();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  if (v15)
  {
    *uint64_t v13 = *v14;
    v13[1] = v15;
    v13[2] = v14[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    v13[2] = v14[2];
  }
  return a1;
}

void *assignWithCopy for MessagePayload.ExternalAgentTextQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void *)((char *)a1 + v14 + 8);
  uint64_t v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_252C7A7E0((uint64_t)v15);
      uint64_t v19 = v16[2];
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    void *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)uint64_t v15 = v20;
  }
  return a1;
}

uint64_t sub_252C7A7E0(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for MessagePayload.ExternalAgentTextQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  return a1;
}

void *assignWithTake for MessagePayload.ExternalAgentTextQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19588();
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (!*(void *)((char *)a1 + v15 + 8))
  {
LABEL_11:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    return a1;
  }
  uint64_t v18 = *((void *)v17 + 1);
  if (!v18)
  {
    sub_252C7A7E0(v16);
    goto LABEL_11;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 16) = *((void *)v17 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentTextQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C7AAF4);
}

uint64_t sub_252C7AAF4()
{
  return sub_252C9DEA0();
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentTextQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7AB14);
}

void sub_252C7AB14()
{
}

void sub_252C7AB20()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentSpeechQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_252D19588();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    if (v16)
    {
      *uint64_t v14 = *v15;
      v14[1] = v16;
      v14[2] = v15[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      v14[2] = v15[2];
    }
  }
  return v7;
}

uint64_t destroy for MessagePayload.ExternalAgentSpeechQuery(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for MessagePayload.ExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  if (v14)
  {
    *uint64_t v12 = *v13;
    v12[1] = v14;
    v12[2] = v13[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    v12[2] = v13[2];
  }
  return a1;
}

void *assignWithCopy for MessagePayload.ExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void *)((char *)a1 + v14 + 8);
  uint64_t v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_252C7A7E0((uint64_t)v15);
      uint64_t v19 = v16[2];
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    void *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)uint64_t v15 = v20;
  }
  return a1;
}

void *initializeWithTake for MessagePayload.ExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  return a1;
}

void *assignWithTake for MessagePayload.ExternalAgentSpeechQuery(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if (!*(void *)((char *)a1 + v14 + 8))
  {
LABEL_11:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(void *)(v15 + 16) = *((void *)v16 + 2);
    return a1;
  }
  uint64_t v17 = *((void *)v16 + 1);
  if (!v17)
  {
    sub_252C7A7E0(v15);
    goto LABEL_11;
  }
  *(void *)uint64_t v15 = *(void *)v16;
  *(void *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = *((void *)v16 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C7B3C4);
}

uint64_t sub_252C7B3C4()
{
  sub_252B4C378();
  if (v1) {
    return sub_252B4C1B8(*v0);
  }
  sub_252AC3A24(&qword_26B2320E8);
  uint64_t v3 = sub_252CB9A84();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7B444);
}

void sub_252C7B444()
{
  sub_252B4C1A4();
  if (v2)
  {
    *char v1 = (v0 - 1);
  }
  else
  {
    sub_252AC3A24(&qword_26B2320E8);
    sub_252B4C2D0();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, v4, v5, v6);
  }
}

void sub_252C7B4B8()
{
}

void sub_252C7B4C8()
{
  sub_252C78730(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v1 <= 0x3F)
  {
    sub_252CB8544(v0);
    sub_252CB9934();
    sub_252B4C5C0();
  }
}

uint64_t destroy for MessagePayload.ExternalAgentSpeechQuery.Candidate()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ExternalAgentSpeechQuery.Candidate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ExternalAgentSpeechQuery.Candidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagePayload.ExternalAgentSpeechQuery.Candidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MessagePayload.ExternalAgentSpeechQuery.Candidate()
{
}

unint64_t initializeBufferWithCopyOfBuffer for MessagePayload.ExternalAgentOutcome(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v15;
        uint64_t v16 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v16;
        uint64_t v17 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v17;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
        goto LABEL_11;
      case 2u:
        uint64_t v18 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v18;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        goto LABEL_20;
      case 3u:
        uint64_t v19 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v19;
        uint64_t v20 = type metadata accessor for ParameterNeedsValue(0);
        goto LABEL_14;
      case 4u:
        uint64_t v21 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v21;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v22 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v23 = v22[6];
        uint64_t v77 = a2 + v23;
        uint64_t v80 = a1 + v23;
        uint64_t v24 = sub_252D19BE8();
        int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v80, v77, v24);
        uint64_t v26 = v22[7];
        uint64_t v27 = (void *)(a1 + v26);
        uint64_t v28 = (void *)(a2 + v26);
        uint64_t v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        uint64_t v30 = v22[8];
        uint64_t v31 = (void *)(a1 + v30);
        uint64_t v32 = (void *)(a2 + v30);
        uint64_t v33 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v33;
        goto LABEL_20;
      case 5u:
        uint64_t v34 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v34;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v35 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v35;
        uint64_t v36 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v36;
LABEL_11:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 6u:
        uint64_t v37 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v37;
        uint64_t v38 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v78 = a2 + v39;
        uint64_t v81 = a1 + v39;
        uint64_t v40 = sub_252D19BE8();
        uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        v41(v81, v78, v40);
        *(unsigned char *)(a1 + *(int *)(v38 + 24)) = *(unsigned char *)(a2 + *(int *)(v38 + 24));
        goto LABEL_27;
      case 7u:
        uint64_t v42 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v42;
        uint64_t v20 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_14:
        uint64_t v43 = *(int *)(v20 + 20);
        uint64_t v82 = a1 + v43;
        uint64_t v44 = a2 + v43;
        uint64_t v45 = sub_252D19BE8();
        uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        v46(v82, v44, v45);
        goto LABEL_27;
      case 8u:
        uint64_t v47 = *(void *)a2;
        uint64_t v48 = *(void *)(a2 + 8);
        char v49 = *(unsigned char *)(a2 + 16);
        sub_252ACE7BC(*(void *)a2, v48, v49);
        *(void *)a1 = v47;
        *(void *)(a1 + 8) = v48;
        *(unsigned char *)(a1 + 16) = v49;
        goto LABEL_27;
      case 9u:
        *(void *)a1 = *(void *)a2;
        goto LABEL_26;
      case 0xAu:
        unint64_t v50 = *(void *)(a2 + 8);
        if (v50 >= 0x10)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v50;
          uint64_t v52 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v52;
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
LABEL_20:
          swift_bridgeObjectRetain();
LABEL_26:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v51 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v51;
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
        }
LABEL_27:
        swift_storeEnumTagMultiPayload();
        *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v7 = sub_252D19BE8();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v9 = v8[5];
        int v10 = (char *)(a1 + v9);
        int v11 = (char *)(a2 + v9);
        uint64_t v12 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v53 = sub_252D19588();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v10, v11, v53);
          uint64_t v54 = *(int *)(v12 + 20);
          uint64_t v55 = &v10[v54];
          uint64_t v56 = &v11[v54];
          uint64_t v57 = *((void *)v56 + 1);
          *(void *)uint64_t v55 = *(void *)v56;
          *((void *)v55 + 1) = v57;
          uint64_t v58 = *(int *)(v12 + 24);
          uint64_t v59 = &v10[v58];
          uint64_t v60 = &v11[v58];
          uint64_t v61 = *((void *)v60 + 1);
          *(void *)uint64_t v59 = *(void *)v60;
          *((void *)v59 + 1) = v61;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v12);
        }
        *(unsigned char *)(a1 + v8[6]) = *(unsigned char *)(a2 + v8[6]);
        uint64_t v62 = v8[7];
        uint64_t v63 = (void *)(a1 + v62);
        uint64_t v64 = (void *)(a2 + v62);
        uint64_t v65 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v64, 1, v65))
        {
          uint64_t v66 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v67 = v64[1];
          *uint64_t v63 = *v64;
          v63[1] = v67;
          uint64_t v68 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v69 = *(int *)(v68 + 20);
          uint64_t v79 = (char *)v63 + v69;
          uint64_t v83 = v68;
          uint64_t v76 = (char *)v64 + v69;
          swift_bridgeObjectRetain();
          uint64_t v70 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v79, v76, v70);
          *(void *)((char *)v63 + *(int *)(v83 + 24)) = *(void *)((char *)v64 + *(int *)(v83 + 24));
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v63, 0, 1, v65);
        }
        *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
        uint64_t v71 = v8[9];
        v72 = (void *)(a1 + v71);
        uint64_t v73 = (void *)(a2 + v71);
        uint64_t v74 = v73[1];
        void *v72 = *v73;
        v72[1] = v74;
        goto LABEL_26;
    }
  }
  return a1;
}

uint64_t destroy for MessagePayload.ExternalAgentOutcome(uint64_t a1)
{
  type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      uint64_t v3 = type metadata accessor for ActionSuccess(0);
      uint64_t v4 = a1 + *(int *)(v3 + 20);
      uint64_t v5 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
      {
        uint64_t v6 = sub_252D19588();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v7 = a1 + *(int *)(v3 + 28);
      uint64_t v8 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v7
           + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
        uint64_t v10 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      }
      goto LABEL_16;
    case 1u:
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 2u:
      goto LABEL_15;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v11 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_12;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v12 = a1 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v13 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 6u:
      swift_bridgeObjectRelease();
      uint64_t v11 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_12;
    case 7u:
      swift_bridgeObjectRelease();
      uint64_t v11 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_12:
      uint64_t v14 = a1 + *(int *)(v11 + 20);
      uint64_t v15 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      goto LABEL_17;
    case 8u:
      sub_252AD16E4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      goto LABEL_17;
    case 9u:
      goto LABEL_16;
    case 0xAu:
      if (*(void *)(a1 + 8) < 0x10uLL) {
        goto LABEL_17;
      }
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_17;
  }
}

uint64_t initializeWithCopy for MessagePayload.ExternalAgentOutcome(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v13;
      uint64_t v14 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v14;
      uint64_t v15 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = a2[6];
      *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
      goto LABEL_9;
    case 2u:
      uint64_t v16 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = a2[2];
      goto LABEL_18;
    case 3u:
      uint64_t v17 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v17;
      uint64_t v18 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v84 = a1 + v18;
      uint64_t v19 = (uint64_t)a2 + v18;
      uint64_t v20 = sub_252D19BE8();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      uint64_t v22 = a3;
      swift_bridgeObjectRetain();
      v21(v84, v19, v20);
      goto LABEL_12;
    case 4u:
      uint64_t v23 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v23;
      *(void *)(a1 + 16) = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v24 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v25 = v24[6];
      uint64_t v81 = (uint64_t)a2 + v25;
      uint64_t v85 = a1 + v25;
      uint64_t v26 = sub_252D19BE8();
      uint64_t v27 = a3;
      uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v85, v81, v26);
      a3 = v27;
      uint64_t v29 = v24[7];
      uint64_t v30 = (void *)(a1 + v29);
      uint64_t v31 = (uint64_t *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      void *v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v24[8];
      uint64_t v34 = (void *)(a1 + v33);
      uint64_t v35 = (uint64_t *)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      void *v34 = *v35;
      v34[1] = v36;
      goto LABEL_18;
    case 5u:
      uint64_t v37 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v37;
      *(void *)(a1 + 16) = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v38 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v38;
      uint64_t v39 = a2[7];
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v39;
LABEL_9:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 6u:
      uint64_t v40 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v40;
      uint64_t v41 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v42 = *(int *)(v41 + 20);
      uint64_t v82 = (uint64_t)a2 + v42;
      uint64_t v86 = a1 + v42;
      uint64_t v43 = sub_252D19BE8();
      uint64_t v44 = a3;
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v86, v82, v43);
      a3 = v44;
      *(unsigned char *)(a1 + *(int *)(v41 + 24)) = *((unsigned char *)a2 + *(int *)(v41 + 24));
      goto LABEL_25;
    case 7u:
      uint64_t v46 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v46;
      uint64_t v47 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v87 = a1 + v47;
      uint64_t v48 = (uint64_t)a2 + v47;
      uint64_t v49 = sub_252D19BE8();
      uint64_t v22 = a3;
      unint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v87, v48, v49);
LABEL_12:
      a3 = v22;
      goto LABEL_25;
    case 8u:
      uint64_t v51 = *a2;
      uint64_t v52 = a2[1];
      char v53 = *((unsigned char *)a2 + 16);
      sub_252ACE7BC(*a2, v52, v53);
      *(void *)a1 = v51;
      *(void *)(a1 + 8) = v52;
      *(unsigned char *)(a1 + 16) = v53;
      goto LABEL_25;
    case 9u:
      *(void *)a1 = *a2;
      goto LABEL_24;
    case 0xAu:
      unint64_t v54 = a2[1];
      if (v54 >= 0x10)
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v54;
        uint64_t v56 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v56;
        *(void *)(a1 + 32) = a2[4];
LABEL_18:
        swift_bridgeObjectRetain();
LABEL_24:
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v55 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v55;
        *(void *)(a1 + 32) = a2[4];
      }
LABEL_25:
      swift_storeEnumTagMultiPayload();
      *(void *)(a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
      swift_bridgeObjectRetain();
      return a1;
    default:
      uint64_t v6 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)(a1 + v8);
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v57 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v9, v10, v57);
        uint64_t v58 = *(int *)(v11 + 20);
        uint64_t v59 = &v9[v58];
        uint64_t v60 = &v10[v58];
        uint64_t v61 = *((void *)v60 + 1);
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = v61;
        uint64_t v62 = *(int *)(v11 + 24);
        uint64_t v63 = &v9[v62];
        uint64_t v64 = &v10[v62];
        uint64_t v65 = *((void *)v64 + 1);
        *(void *)uint64_t v63 = *(void *)v64;
        *((void *)v63 + 1) = v65;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
      }
      *(unsigned char *)(a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
      uint64_t v66 = v7[7];
      uint64_t v67 = (void *)(a1 + v66);
      uint64_t v68 = (uint64_t *)((char *)a2 + v66);
      uint64_t v69 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v68, 1, v69))
      {
        uint64_t v70 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        uint64_t v71 = v68[1];
        *uint64_t v67 = *v68;
        v67[1] = v71;
        uint64_t v72 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v73 = *(int *)(v72 + 20);
        uint64_t v83 = (char *)v67 + v73;
        uint64_t v88 = v72;
        uint64_t v80 = (char *)v68 + v73;
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v83, v80, v74);
        *(void *)((char *)v67 + *(int *)(v88 + 24)) = *(void *)((char *)v68 + *(int *)(v88 + 24));
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, v69);
      }
      *(unsigned char *)(a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      uint64_t v75 = v7[9];
      uint64_t v76 = (void *)(a1 + v75);
      uint64_t v77 = (uint64_t *)((char *)a2 + v75);
      uint64_t v78 = v77[1];
      *uint64_t v76 = *v77;
      v76[1] = v78;
      goto LABEL_24;
  }
}

uint64_t assignWithCopy for MessagePayload.ExternalAgentOutcome(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_252BA6670();
    type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v13 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = (uint64_t)a2 + v13;
        uint64_t v16 = sub_252D19BE8();
        uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        break;
      case 4u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v18 = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(void *)(a1 + 16) = v18;
        uint64_t v19 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v20 = v19[6];
        uint64_t v66 = a1 + v20;
        uint64_t v21 = (uint64_t)a2 + v20;
        uint64_t v22 = sub_252D19BE8();
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v66, v21, v22);
        uint64_t v24 = v19[7];
        uint64_t v25 = (void *)(a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        void *v25 = *v26;
        v25[1] = v26[1];
        uint64_t v27 = v19[8];
        uint64_t v28 = (void *)(a1 + v27);
        uint64_t v29 = (uint64_t *)((char *)a2 + v27);
        *uint64_t v28 = *v29;
        v28[1] = v29[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v30 = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(void *)(a1 + 16) = v30;
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v31 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v67 = a1 + v32;
        uint64_t v33 = (uint64_t)a2 + v32;
        uint64_t v34 = sub_252D19BE8();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        v35(v67, v33, v34);
        *(unsigned char *)(a1 + *(int *)(v31 + 24)) = *((unsigned char *)a2 + *(int *)(v31 + 24));
        break;
      case 7u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v36 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v37 = a1 + v36;
        uint64_t v38 = (uint64_t)a2 + v36;
        uint64_t v39 = sub_252D19BE8();
        uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        break;
      case 8u:
        uint64_t v41 = *a2;
        uint64_t v42 = a2[1];
        char v43 = *((unsigned char *)a2 + 16);
        sub_252ACE7BC(*a2, v42, v43);
        *(void *)a1 = v41;
        *(void *)(a1 + 8) = v42;
        *(unsigned char *)(a1 + 16) = v43;
        break;
      case 9u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        if ((unint64_t)a2[1] >= 0x10)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = a2[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v44 = *(_OWORD *)a2;
          long long v45 = *((_OWORD *)a2 + 1);
          *(void *)(a1 + 32) = a2[4];
          *(_OWORD *)a1 = v44;
          *(_OWORD *)(a1 + 16) = v45;
        }
        break;
      default:
        uint64_t v6 = sub_252D19BE8();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)(a1 + v8);
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
        {
          uint64_t v12 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v46 = sub_252D19588();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v9, v10, v46);
          uint64_t v47 = *(int *)(v11 + 20);
          uint64_t v48 = &v9[v47];
          uint64_t v49 = &v10[v47];
          *(void *)uint64_t v48 = *(void *)v49;
          *((void *)v48 + 1) = *((void *)v49 + 1);
          uint64_t v50 = *(int *)(v11 + 24);
          uint64_t v51 = &v9[v50];
          uint64_t v52 = &v10[v50];
          *(void *)uint64_t v51 = *(void *)v52;
          *((void *)v51 + 1) = *((void *)v52 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
        }
        *(unsigned char *)(a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
        uint64_t v53 = v7[7];
        unint64_t v54 = (void *)(a1 + v53);
        long long v55 = (uint64_t *)((char *)a2 + v53);
        uint64_t v56 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
        {
          uint64_t v57 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          void *v54 = *v55;
          v54[1] = v55[1];
          uint64_t v58 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v59 = *(int *)(v58 + 20);
          uint64_t v65 = (char *)v55 + v59;
          uint64_t v68 = (char *)v54 + v59;
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v68, v65, v60);
          *(void *)((char *)v54 + *(int *)(v58 + 24)) = *(void *)((char *)v55 + *(int *)(v58 + 24));
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
        }
        *(unsigned char *)(a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
        uint64_t v61 = v7[9];
        uint64_t v62 = (void *)(a1 + v61);
        uint64_t v63 = (uint64_t *)((char *)a2 + v61);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *initializeWithTake for MessagePayload.ExternalAgentOutcome(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_252D19BE8();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v32 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v10, v11, v32);
        *(_OWORD *)&v10[*(int *)(v12 + 20)] = *(_OWORD *)&v11[*(int *)(v12 + 20)];
        *(_OWORD *)&v10[*(int *)(v12 + 24)] = *(_OWORD *)&v11[*(int *)(v12 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v12);
      }
      a1[v8[6]] = a2[v8[6]];
      uint64_t v33 = v8[7];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      uint64_t v36 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        _OWORD *v34 = *v35;
        uint64_t v38 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v40 = (char *)v34 + v39;
        char v43 = (char *)v35 + v39;
        uint64_t v41 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v40, v43, v41);
        *(void *)((char *)v34 + *(int *)(v38 + 24)) = *(void *)((char *)v35 + *(int *)(v38 + 24));
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v34, 0, 1, v36);
      }
      a1[v8[8]] = a2[v8[8]];
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      goto LABEL_14;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v14 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_14;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      uint64_t v18 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v19 = v18[6];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *(_OWORD *)&a1[v18[7]] = *(_OWORD *)&a2[v18[7]];
      *(_OWORD *)&a1[v18[8]] = *(_OWORD *)&a2[v18[8]];
      goto LABEL_14;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v23 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v24 = *(int *)(v23 + 20);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      a1[*(int *)(v23 + 24)] = a2[*(int *)(v23 + 24)];
      goto LABEL_14;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v28 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

unsigned char *assignWithTake for MessagePayload.ExternalAgentOutcome(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    uint64_t v6 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_252D19BE8();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_252D19588();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v10, v11, v32);
          *(_OWORD *)&v10[*(int *)(v12 + 20)] = *(_OWORD *)&v11[*(int *)(v12 + 20)];
          *(_OWORD *)&v10[*(int *)(v12 + 24)] = *(_OWORD *)&v11[*(int *)(v12 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v12);
        }
        a1[v8[6]] = a2[v8[6]];
        uint64_t v33 = v8[7];
        uint64_t v34 = &a1[v33];
        uint64_t v35 = &a2[v33];
        uint64_t v36 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v35, 1, v36))
        {
          uint64_t v37 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          _OWORD *v34 = *v35;
          uint64_t v38 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v39 = *(int *)(v38 + 20);
          uint64_t v40 = (char *)v34 + v39;
          char v43 = (char *)v35 + v39;
          uint64_t v41 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v40, v43, v41);
          *(void *)((char *)v34 + *(int *)(v38 + 24)) = *(void *)((char *)v35 + *(int *)(v38 + 24));
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v34, 0, 1, v36);
        }
        a1[v8[8]] = a2[v8[8]];
        *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
        goto LABEL_15;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v14 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_15;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        uint64_t v18 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        *(_OWORD *)&a1[v18[7]] = *(_OWORD *)&a2[v18[7]];
        *(_OWORD *)&a1[v18[8]] = *(_OWORD *)&a2[v18[8]];
        goto LABEL_15;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v23 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v24 = *(int *)(v23 + 20);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        a1[*(int *)(v23 + 24)] = a2[*(int *)(v23 + 24)];
        goto LABEL_15;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v28 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C7D7D4);
}

uint64_t sub_252C7D7D4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = sub_252B4C0D0();
  type metadata accessor for StatementOutcome(v6);
  sub_252AEA314();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_252B4C1B8(*(void *)(v3 + *(int *)(a3 + 20)));
  }
  uint64_t v8 = sub_252CB9030();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ExternalAgentOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7D85C);
}

void sub_252C7D85C()
{
}

void sub_252C7D874()
{
  uint64_t v4 = sub_252CBB6F0();
  v5(v4);
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v7, v8, v9, v10);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_252C7D8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7386C(a1, a2, a3, type metadata accessor for StatementOutcome);
}

void type metadata accessor for MessagePayload.ExternalAgentQueryRewriteMetadata()
{
}

void type metadata accessor for MessagePayload.ExternalAgentRequestRewriteMetadata()
{
}

void *initializeBufferWithCopyOfBuffer for MessagePayload.ClientUndoRedoRequest(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    uint64_t v11 = *((void *)v10 + 2);
    *((void *)v9 + 1) = *((void *)v10 + 1);
    *((void *)v9 + 2) = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ClientUndoRedoRequest(uint64_t a1)
{
  uint64_t v2 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C7DD0C);
}

uint64_t sub_252C7DD0C()
{
  sub_252CBAC24();
  sub_252AEA314();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return sub_252B4C388(*(void *)(v0 + *(int *)(v2 + 24) + 16));
  }
  uint64_t v4 = sub_252CB9030();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ClientUndoRedoRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7DD8C);
}

void sub_252C7DD8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252AF44D4();
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    uint64_t v7 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v7, v8, v9, v10);
  }
  else
  {
    sub_252CBB7A8(*(int *)(a4 + 24));
  }
}

uint64_t sub_252C7DDF8()
{
  return sub_252C9D21C();
}

void type metadata accessor for MessagePayload.ClientUndoRedoRequest.UndoOperation()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagePayload.ActionSummaryUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MessagePayload.ActionSummaryUpdate(uint64_t a1)
{
  uint64_t v2 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C7E210);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ActionSummaryUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7E228);
}

uint64_t sub_252C7E22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7386C(a1, a2, a3, MEMORY[0x263F07508]);
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary()
{
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t a1, uint64_t a2)
{
  return sub_252C9E1B4(a1, a2);
}

uint64_t destroy for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t a1)
{
  return sub_252C092F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_252C9E21C(a1, a2, a3, (uint64_t)sub_252C092CC, (void (*)(uint64_t, uint64_t, uint64_t))sub_252C092F4);
}

uint64_t *assignWithTake for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9E298(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_252C092F4);
}

uint64_t sub_252C7E2CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_252C7E2D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary()
{
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue()
{
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues()
{
}

void type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for SystemPrompt(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    type metadata accessor for SystemPrompt.Prompt(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v37 = *((void *)v14 + 1);
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = v37;
        uint64_t v38 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v39 = &v13[v38];
        uint64_t v40 = &v14[v38];
        uint64_t v41 = sub_252D19BE8();
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        break;
      case 2u:
        uint64_t v19 = *((void *)v14 + 1);
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = v19;
        *((void *)v13 + 2) = *((void *)v14 + 2);
        v13[24] = v14[24];
        uint64_t v20 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v21 = v20[6];
        long long v44 = &v13[v21];
        uint64_t v22 = &v14[v21];
        uint64_t v23 = sub_252D19BE8();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v44, v22, v23);
        uint64_t v25 = v20[7];
        uint64_t v26 = &v13[v25];
        uint64_t v27 = &v14[v25];
        uint64_t v28 = *((void *)v27 + 1);
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = v28;
        uint64_t v29 = v20[8];
        uint64_t v30 = &v13[v29];
        uint64_t v31 = &v14[v29];
        uint64_t v32 = *((void *)v31 + 1);
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v33 = *((void *)v14 + 1);
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = v33;
        *((void *)v13 + 2) = *((void *)v14 + 2);
        v13[24] = v14[24];
        uint64_t v34 = *((void *)v14 + 5);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *((void *)v13 + 5) = v34;
        uint64_t v35 = *((void *)v14 + 6);
        uint64_t v36 = *((void *)v14 + 7);
        *((void *)v13 + 6) = v35;
        *((void *)v13 + 7) = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v15 = *((void *)v14 + 1);
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = v15;
        uint64_t v16 = *((void *)v14 + 3);
        *((void *)v13 + 2) = *((void *)v14 + 2);
        *((void *)v13 + 3) = v16;
        uint64_t v17 = *((void *)v14 + 5);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *((void *)v13 + 5) = v17;
        *((void *)v13 + 6) = *((void *)v14 + 6);
        *((_WORD *)v13 + 28) = *((_WORD *)v14 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SystemPrompt(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SystemPrompt.Prompt(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v7 = v5 + *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v8 = sub_252D19BE8();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t result = v9(v7, v8);
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v11 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  type metadata accessor for SystemPrompt.Prompt(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = *(void *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v34;
      uint64_t v35 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v36 = v12 + v35;
      uint64_t v37 = v13 + v35;
      uint64_t v38 = sub_252D19BE8();
      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v36, v37, v38);
      goto LABEL_8;
    case 2u:
      uint64_t v17 = *(void *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v17;
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(unsigned char *)(v12 + 24) = *(unsigned char *)(v13 + 24);
      uint64_t v18 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v19 = v18[6];
      uint64_t v41 = v13 + v19;
      uint64_t v42 = v12 + v19;
      uint64_t v20 = sub_252D19BE8();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v42, v41, v20);
      uint64_t v22 = v18[7];
      uint64_t v23 = (void *)(v12 + v22);
      uint64_t v24 = (void *)(v13 + v22);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      uint64_t v26 = v18[8];
      uint64_t v27 = (void *)(v12 + v26);
      uint64_t v28 = (void *)(v13 + v26);
      uint64_t v29 = v28[1];
      *uint64_t v27 = *v28;
      v27[1] = v29;
      goto LABEL_5;
    case 3u:
      uint64_t v30 = *(void *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v30;
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(unsigned char *)(v12 + 24) = *(unsigned char *)(v13 + 24);
      uint64_t v31 = *(void *)(v13 + 40);
      *(void *)(v12 + 32) = *(void *)(v13 + 32);
      *(void *)(v12 + 40) = v31;
      uint64_t v32 = *(void *)(v13 + 48);
      uint64_t v33 = *(void *)(v13 + 56);
      *(void *)(v12 + 48) = v32;
      *(void *)(v12 + 56) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    default:
      uint64_t v14 = *(void *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v14;
      uint64_t v15 = *(void *)(v13 + 24);
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(void *)(v12 + 24) = v15;
      uint64_t v16 = *(void *)(v13 + 40);
      *(void *)(v12 + 32) = *(void *)(v13 + 32);
      *(void *)(v12 + 40) = v16;
      *(void *)(v12 + 48) = *(void *)(v13 + 48);
      *(_WORD *)(v12 + 56) = *(_WORD *)(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_6:
      swift_bridgeObjectRetain();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithCopy for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    sub_252BA6670();
    type metadata accessor for SystemPrompt.Prompt(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v11 = *(void *)v12;
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        uint64_t v13 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v14 = v11 + v13;
        uint64_t v15 = v12 + v13;
        uint64_t v16 = sub_252D19BE8();
        uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        goto LABEL_9;
      case 2u:
        *(void *)uint64_t v11 = *(void *)v12;
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        uint64_t v18 = *(void *)(v12 + 16);
        *(unsigned char *)(v11 + 24) = *(unsigned char *)(v12 + 24);
        *(void *)(v11 + 16) = v18;
        uint64_t v19 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v20 = v19[6];
        uint64_t v31 = v12 + v20;
        uint64_t v32 = v11 + v20;
        uint64_t v21 = sub_252D19BE8();
        uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v32, v31, v21);
        uint64_t v23 = v19[7];
        uint64_t v24 = (void *)(v11 + v23);
        uint64_t v25 = (void *)(v12 + v23);
        void *v24 = *v25;
        v24[1] = v25[1];
        uint64_t v26 = v19[8];
        uint64_t v27 = (void *)(v11 + v26);
        uint64_t v28 = (void *)(v12 + v26);
        *uint64_t v27 = *v28;
        v27[1] = v28[1];
        goto LABEL_7;
      case 3u:
        *(void *)uint64_t v11 = *(void *)v12;
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        uint64_t v29 = *(void *)(v12 + 16);
        *(unsigned char *)(v11 + 24) = *(unsigned char *)(v12 + 24);
        *(void *)(v11 + 16) = v29;
        *(void *)(v11 + 32) = *(void *)(v12 + 32);
        *(void *)(v11 + 40) = *(void *)(v12 + 40);
        *(void *)(v11 + 48) = *(void *)(v12 + 48);
        *(void *)(v11 + 56) = *(void *)(v12 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_7:
        swift_bridgeObjectRetain();
        goto LABEL_8;
      default:
        *(void *)uint64_t v11 = *(void *)v12;
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        *(void *)(v11 + 16) = *(void *)(v12 + 16);
        *(void *)(v11 + 24) = *(void *)(v12 + 24);
        *(void *)(v11 + 32) = *(void *)(v12 + 32);
        *(void *)(v11 + 40) = *(void *)(v12 + 40);
        *(void *)(v11 + 48) = *(void *)(v12 + 48);
        *(unsigned char *)(v11 + 56) = *(unsigned char *)(v12 + 56);
        *(unsigned char *)(v11 + 57) = *(unsigned char *)(v12 + 57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_bridgeObjectRetain();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for SystemPrompt.Prompt(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
    uint64_t v16 = (int *)type metadata accessor for ParameterConfirmation(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v8 + v17;
    uint64_t v19 = (char *)v9 + v17;
    uint64_t v20 = sub_252D19BE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    *(_OWORD *)((char *)v8 + v16[7]) = *(_OWORD *)((char *)v9 + v16[7]);
    *(_OWORD *)((char *)v8 + v16[8]) = *(_OWORD *)((char *)v9 + v16[8]);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      return a1;
    }
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    uint64_t v12 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = sub_252D19BE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_252BA6670();
    uint64_t v15 = type metadata accessor for SystemPrompt.Prompt(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      v13[2] = v14[2];
      *((unsigned char *)v13 + 24) = *((unsigned char *)v14 + 24);
      uint64_t v21 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v22 = v21[6];
      uint64_t v23 = (char *)v13 + v22;
      uint64_t v24 = (char *)v14 + v22;
      uint64_t v25 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(_OWORD *)((char *)v13 + v21[7]) = *(_OWORD *)((char *)v14 + v21[7]);
      *(_OWORD *)((char *)v13 + v21[8]) = *(_OWORD *)((char *)v14 + v21[8]);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        return a1;
      }
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      uint64_t v17 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      uint64_t v20 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C7F224);
}

uint64_t sub_252C7F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7F23C(a1, a2, a3, type metadata accessor for SystemPrompt.Prompt);
}

uint64_t sub_252C7F23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_252AF44D4();
  sub_252AEA314();
  if (*(_DWORD *)(v8 + 84) == v4)
  {
    uint64_t v9 = sub_252B4C998();
  }
  else
  {
    sub_252CBC384();
    if (v11) {
      return sub_252B4C1B8(*(void *)(v5 + *(int *)(a3 + 20) + 8));
    }
    uint64_t v10 = a4(0);
    uint64_t v9 = v5 + *(int *)(a3 + 24);
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, v4, v10);
}

uint64_t storeEnumTagSinglePayload for SystemPrompt(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C7F2EC);
}

void sub_252C7F2EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void sub_252C7F304(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(void))
{
  sub_252AF44D4();
  sub_252AEA314();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      sub_252CB95C8(*(int *)(a4 + 20));
      return;
    }
    a5(0);
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, v10, v11, v12);
}

uint64_t sub_252C7F3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7F3C4(a1, a2, a3, type metadata accessor for SystemPrompt.Prompt);
}

uint64_t sub_252C7F3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = sub_252D19588();
  if (v6 <= 0x3F)
  {
    uint64_t result = a4(319);
    if (v7 <= 0x3F)
    {
      sub_252CB9934();
      return sub_252B4C5C0();
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SystemPrompt.Prompt(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v29;
        uint64_t v30 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = (uint64_t)a2 + v30;
        uint64_t v33 = sub_252D19BE8();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        break;
      case 2u:
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v10;
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v11 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v12 = v11[6];
        uint64_t v13 = a1 + v12;
        uint64_t v14 = (uint64_t)a2 + v12;
        uint64_t v15 = sub_252D19BE8();
        uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        uint64_t v17 = v11[7];
        uint64_t v18 = (void *)(a1 + v17);
        uint64_t v19 = (uint64_t *)((char *)a2 + v17);
        uint64_t v20 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v20;
        uint64_t v21 = v11[8];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (uint64_t *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        void *v22 = *v23;
        v22[1] = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v25 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v25;
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v26 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v26;
        uint64_t v27 = a2[6];
        uint64_t v28 = a2[7];
        *(void *)(a1 + 48) = v27;
        *(void *)(a1 + 56) = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        *(void *)(a1 + 48) = a2[6];
        *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SystemPrompt.Prompt(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v4 = sub_252D19BE8();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v7 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for SystemPrompt.Prompt(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v25;
      uint64_t v26 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      uint64_t v29 = sub_252D19BE8();
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      goto LABEL_8;
    case 2u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v8 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v9 = v8[6];
      uint64_t v32 = a1 + v9;
      uint64_t v10 = a2 + v9;
      uint64_t v11 = sub_252D19BE8();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v32, v10, v11);
      uint64_t v13 = v8[7];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = v8[8];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (void *)(a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      goto LABEL_5;
    case 3u:
      uint64_t v21 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v21;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v22 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v22;
      uint64_t v23 = *(void *)(a2 + 48);
      uint64_t v24 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v23;
      *(void *)(a1 + 56) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_6:
      swift_bridgeObjectRetain();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithCopy for SystemPrompt.Prompt(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v4 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v5 = a1 + v4;
        uint64_t v6 = a2 + v4;
        uint64_t v7 = sub_252D19BE8();
        uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        goto LABEL_9;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v9 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v9;
        uint64_t v10 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v11 = v10[6];
        uint64_t v23 = a1 + v11;
        uint64_t v12 = a2 + v11;
        uint64_t v13 = sub_252D19BE8();
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v23, v12, v13);
        uint64_t v15 = v10[7];
        uint64_t v16 = (void *)(a1 + v15);
        uint64_t v17 = (void *)(a2 + v15);
        *uint64_t v16 = *v17;
        v16[1] = v17[1];
        uint64_t v18 = v10[8];
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (void *)(a2 + v18);
        void *v19 = *v20;
        v19[1] = v20[1];
        goto LABEL_7;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v21 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v21;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_7:
        swift_bridgeObjectRetain();
        goto LABEL_8;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_bridgeObjectRetain();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

void *initializeWithTake for SystemPrompt.Prompt(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v11 = (int *)type metadata accessor for ParameterConfirmation(0);
    uint64_t v12 = v11[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_252D19BE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(_OWORD *)((char *)a1 + v11[7]) = *(_OWORD *)((char *)a2 + v11[7]);
    *(_OWORD *)((char *)a1 + v11[8]) = *(_OWORD *)((char *)a2 + v11[8]);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_252D19BE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for SystemPrompt.Prompt(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v11 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)((char *)a1 + v11[7]) = *(_OWORD *)((char *)a2 + v11[7]);
      *(_OWORD *)((char *)a1 + v11[8]) = *(_OWORD *)((char *)a2 + v11[8]);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_252C800F0()
{
  uint64_t result = type metadata accessor for ParameterNeedsValue(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ParameterConfirmation(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SystemPromptResolution(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      uint64_t v9 = *(void *)(v7 - 8);
    }
    else
    {
      uint64_t v9 = *(void *)(v7 - 8);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    uint64_t v21 = (char *)a1 + v17;
    uint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v17);
    uint64_t v24 = *((void *)v22 + 1);
    unsigned __int8 v25 = v22[16];
    swift_bridgeObjectRetain();
    sub_252ACE76C(v23, v24, v25);
    *(void *)uint64_t v21 = v23;
    *((void *)v21 + 1) = v24;
    v21[16] = v25;
  }
  return a1;
}

uint64_t destroy for SystemPromptResolution(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19588();
  int v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4);
  uint64_t v6 = *(void *)(v4 - 8);
  if (!v5) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1 + a2[5], v4);
  uint64_t v7 = a1 + a2[6];
  type metadata accessor for SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_252D19BE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  unsigned __int8 v12 = *(unsigned char *)(v9 + 16);

  return sub_252AD1694(v10, v11, v12);
}

char *initializeWithCopy for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    uint64_t v8 = *(void *)(v6 - 8);
  }
  else
  {
    uint64_t v8 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_252D19BE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  uint64_t v18 = *((void *)v17 + 2);
  *((void *)v16 + 1) = *((void *)v17 + 1);
  *((void *)v16 + 2) = v18;
  uint64_t v19 = &a1[v15];
  uint64_t v20 = &a2[v15];
  uint64_t v21 = *(void *)&a2[v15];
  uint64_t v22 = *((void *)v20 + 1);
  unsigned __int8 v23 = v20[16];
  swift_bridgeObjectRetain();
  sub_252ACE76C(v21, v22, v23);
  *(void *)uint64_t v19 = v21;
  *((void *)v19 + 1) = v22;
  v19[16] = v23;
  return a1;
}

char *assignWithCopy for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void *)(v6 - 8);
    }
    else
    {
      uint64_t v10 = *(void *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[a3[5]], &a2[a3[5]], v6);
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    sub_252BA6670();
    uint64_t v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  *((void *)v18 + 2) = *((void *)v19 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  unsigned __int8 v25 = v22[16];
  sub_252ACE76C(*(void *)v22, v24, v25);
  uint64_t v26 = *(void *)v21;
  uint64_t v27 = *((void *)v21 + 1);
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  unsigned __int8 v28 = v21[16];
  v21[16] = v25;
  sub_252AD1694(v26, v27, v28);
  return a1;
}

char *initializeWithTake for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    uint64_t v8 = *(void *)(v6 - 8);
  }
  else
  {
    uint64_t v8 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for SystemPromptResolution.UserAction(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_252D19BE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((void *)v16 + 2) = *((void *)v17 + 2);
  uint64_t v18 = &a1[v15];
  uint64_t v19 = &a2[v15];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  return a1;
}

char *assignWithTake for SystemPromptResolution(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void *)(v6 - 8);
    }
    else
    {
      uint64_t v10 = *(void *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&a1[a3[5]], &a2[a3[5]], v6);
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    sub_252BA6670();
    uint64_t v15 = type metadata accessor for SystemPromptResolution.UserAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  uint64_t v21 = *((void *)v19 + 1);
  uint64_t v20 = *((void *)v19 + 2);
  *((void *)v18 + 1) = v21;
  *((void *)v18 + 2) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  char v25 = v24[16];
  uint64_t v26 = *(void *)v23;
  uint64_t v27 = *((void *)v23 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  unsigned __int8 v28 = v23[16];
  v23[16] = v25;
  sub_252AD1694(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemPromptResolution(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C80F14);
}

uint64_t sub_252C80F14(uint64_t a1, uint64_t a2, int *a3)
{
  sub_252CB9724();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252D19588();
    sub_252AEA314();
    if (*(_DWORD *)(v10 + 84) == v3)
    {
      uint64_t v8 = v9;
      uint64_t v11 = a3[5];
    }
    else
    {
      type metadata accessor for SystemPromptResolution.UserAction(0);
      sub_252AEA314();
      if (*(_DWORD *)(v13 + 84) != v3) {
        return sub_252B4C388(*(void *)(v4 + a3[7] + 16));
      }
      uint64_t v8 = v12;
      uint64_t v11 = a3[6];
    }
    uint64_t v7 = v4 + v11;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for SystemPromptResolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C80FF4);
}

void sub_252C80FF4()
{
  sub_252B98CA8();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252D19588();
    sub_252AEA314();
    if (*(_DWORD *)(v3 + 84) != v1)
    {
      type metadata accessor for SystemPromptResolution.UserAction(0);
      sub_252AEA314();
      if (*(_DWORD *)(v4 + 84) != v1)
      {
        sub_252CBB7A8(*(int *)(v0 + 28));
        return;
      }
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
}

void sub_252C810B4()
{
  sub_252C78730(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    sub_252D19588();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SystemPromptResolution.UserAction(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void type metadata accessor for SystemPromptResolution.InputModality()
{
}

uint64_t initializeBufferWithCopyOfBuffer for SystemPromptResolution.ResolutionInput(uint64_t a1, uint64_t a2)
{
  return sub_252C9E1B4(a1, a2);
}

uint64_t destroy for SystemPromptResolution.ResolutionInput(uint64_t a1)
{
  return sub_252AD1694(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for SystemPromptResolution.ResolutionInput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_252C9E21C(a1, a2, a3, (uint64_t)sub_252ACE76C, (void (*)(uint64_t, uint64_t, uint64_t))sub_252AD1694);
}

uint64_t *assignWithTake for SystemPromptResolution.ResolutionInput(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9E298(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_252AD1694);
}

void type metadata accessor for SystemPromptResolution.ResolutionInput()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for SystemPromptResolution.UserAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_252D19BE8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for SystemPromptResolution.UserAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_252D19BE8();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SystemPromptResolution.UserAction(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_252D19BE8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for SystemPromptResolution.UserAction(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_252D19BE8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV10UserActionOwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_252CBBAEC();
  if (v5 == 1)
  {
    sub_252D19BE8();
    sub_252AEA304();
    sub_252B4C1CC();
    v7();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_252CBC914(v5, v6, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return v3;
}

uint64_t assignWithTake for SystemPromptResolution.UserAction(uint64_t a1, uint64_t a2)
{
  return sub_252C81628(a1, a2);
}

uint64_t sub_252C81628(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_252CBABF0();
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_252D19BE8();
      sub_252AEA304();
      sub_252B4C1CC();
      v6();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      sub_252CBC914(EnumCaseMultiPayload, v5, *(void *)(*(void *)(v2 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_252C816D0()
{
  uint64_t result = sub_252D19BE8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SystemPromptResolution.RequirementResolution(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252C81850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SystemPromptResolution.RequirementResolution()
{
}

void type metadata accessor for SystemPromptResolution.ActionCancellation()
{
}

void *initializeBufferWithCopyOfBuffer for ActionResponse(void *a1, char *a2, int *a3)
{
  int v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unsigned int v6 = a3;
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v3, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = v6[5];
    uint64_t v11 = v6[6];
    uint64_t v12 = (void *)((char *)a1 + v10);
    uint64_t v13 = &v3[v10];
    uint64_t v14 = *((void *)v13 + 1);
    *uint64_t v12 = *(void *)v13;
    v12[1] = v14;
    uint64_t v15 = (void *)((char *)a1 + v11);
    uint64_t v16 = &v3[v11];
    uint64_t v17 = *((void *)v16 + 1);
    void *v15 = *(void *)v16;
    v15[1] = v17;
    uint64_t v18 = v6[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = &v3[v18];
    type metadata accessor for ActionOutcome(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v286 = v7;
    v287 = v6;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v28 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v28;
        uint64_t v29 = *((void *)v20 + 3);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = v29;
        uint64_t v30 = *((void *)v20 + 5);
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *((void *)v19 + 5) = v30;
        *((void *)v19 + 6) = *((void *)v20 + 6);
        *((_WORD *)v19 + 28) = *((_WORD *)v20 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 2u:
        uint64_t v31 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v31;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        goto LABEL_21;
      case 3u:
        uint64_t v32 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v32;
        uint64_t v33 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v34 = &v19[v33];
        v279 = &v20[v33];
        uint64_t v35 = sub_252D19BE8();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v37 = v34;
        unsigned int v6 = v287;
        v36(v37, v279, v35);
        goto LABEL_28;
      case 4u:
        uint64_t v38 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v38;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        v19[24] = v20[24];
        uint64_t v39 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v40 = v39[6];
        v276 = &v20[v40];
        v280 = &v19[v40];
        uint64_t v41 = sub_252D19BE8();
        v274 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v274(v280, v276, v41);
        uint64_t v42 = v39[7];
        char v43 = &v19[v42];
        long long v44 = &v20[v42];
        uint64_t v45 = *((void *)v44 + 1);
        *(void *)char v43 = *(void *)v44;
        *((void *)v43 + 1) = v45;
        uint64_t v46 = v39[8];
        unsigned int v6 = v287;
        uint64_t v47 = &v19[v46];
        uint64_t v48 = &v20[v46];
        uint64_t v49 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v49;
        goto LABEL_21;
      case 5u:
        uint64_t v50 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v50;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        v19[24] = v20[24];
        uint64_t v51 = *((void *)v20 + 5);
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *((void *)v19 + 5) = v51;
        uint64_t v52 = *((void *)v20 + 6);
        uint64_t v53 = *((void *)v20 + 7);
        *((void *)v19 + 6) = v52;
        *((void *)v19 + 7) = v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned int v6 = v287;
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 6u:
        uint64_t v54 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v54;
        uint64_t v55 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v56 = *(int *)(v55 + 20);
        v277 = &v20[v56];
        v281 = &v19[v56];
        uint64_t v57 = sub_252D19BE8();
        v284 = v3;
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(v281, v277, v57);
        int v3 = v284;
        uint64_t v59 = *(int *)(v55 + 24);
        unsigned int v6 = v287;
        v19[v59] = v20[v59];
        goto LABEL_28;
      case 7u:
        uint64_t v60 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v60;
        uint64_t v61 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v62 = &v19[v61];
        v282 = &v20[v61];
        uint64_t v63 = sub_252D19BE8();
        uint64_t v64 = v3;
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v66 = v62;
        unsigned int v6 = v287;
        v65(v66, v282, v63);
        int v3 = v64;
        goto LABEL_28;
      case 8u:
        uint64_t v67 = *(void *)v20;
        uint64_t v68 = *((void *)v20 + 1);
        char v69 = v20[16];
        sub_252ACE7BC(v67, v68, v69);
        *(void *)uint64_t v19 = v67;
        *((void *)v19 + 1) = v68;
        unsigned int v6 = v287;
        v19[16] = v69;
        goto LABEL_28;
      case 9u:
        *(void *)uint64_t v19 = *(void *)v20;
        goto LABEL_27;
      case 0xAu:
        unint64_t v70 = *((void *)v20 + 1);
        if (v70 >= 0x10)
        {
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v70;
          uint64_t v72 = *((void *)v20 + 3);
          *((void *)v19 + 2) = *((void *)v20 + 2);
          *((void *)v19 + 3) = v72;
          *((void *)v19 + 4) = *((void *)v20 + 4);
LABEL_21:
          swift_bridgeObjectRetain();
LABEL_27:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v71 = *((_OWORD *)v20 + 1);
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *((_OWORD *)v19 + 1) = v71;
          *((void *)v19 + 4) = *((void *)v20 + 4);
        }
LABEL_28:
        swift_storeEnumTagMultiPayload();
        uint64_t v93 = v6[8];
        v94 = (char *)a1 + v93;
        v95 = &v3[v93];
        *(void *)((char *)a1 + v93) = *(void *)&v3[v93];
        v96 = (char *)a1 + v93 + 8;
        uint64_t v97 = *(void *)&v3[v93 + 16];
        swift_bridgeObjectRetain();
        if (v97)
        {
          *((void *)v94 + 1) = *((void *)v95 + 1);
          *((void *)v94 + 2) = v97;
          uint64_t v98 = *((void *)v95 + 4);
          *((void *)v94 + 3) = *((void *)v95 + 3);
          *((void *)v94 + 4) = v98;
          uint64_t v99 = *((void *)v95 + 6);
          *((void *)v94 + 5) = *((void *)v95 + 5);
          *((void *)v94 + 6) = v99;
          uint64_t v100 = *((void *)v95 + 8);
          *((void *)v94 + 7) = *((void *)v95 + 7);
          *((void *)v94 + 8) = v100;
          uint64_t v101 = *((void *)v95 + 10);
          *((void *)v94 + 9) = *((void *)v95 + 9);
          *((void *)v94 + 10) = v101;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v96, v95 + 8, 0x50uLL);
        }
        uint64_t v102 = *((void *)v95 + 12);
        if (v102)
        {
          *((void *)v94 + 11) = *((void *)v95 + 11);
          *((void *)v94 + 12) = v102;
          uint64_t v103 = *((void *)v95 + 14);
          *((void *)v94 + 13) = *((void *)v95 + 13);
          *((void *)v94 + 14) = v103;
          uint64_t v104 = *((void *)v95 + 16);
          *((void *)v94 + 15) = *((void *)v95 + 15);
          *((void *)v94 + 16) = v104;
          uint64_t v105 = *((void *)v95 + 18);
          *((void *)v94 + 17) = *((void *)v95 + 17);
          *((void *)v94 + 18) = v105;
          uint64_t v106 = *((void *)v95 + 20);
          *((void *)v94 + 19) = *((void *)v95 + 19);
          *((void *)v94 + 20) = v106;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v94 + 88, v95 + 88, 0x50uLL);
        }
        uint64_t v107 = *((void *)v95 + 21);
        if (v107)
        {
          uint64_t v108 = *((void *)v95 + 22);
          *((void *)v94 + 21) = v107;
          *((void *)v94 + 22) = v108;
          v94[184] = v95[184];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v94 + 168) = *(_OWORD *)(v95 + 168);
          v94[184] = v95[184];
        }
        v109 = (int *)type metadata accessor for ResponseManifest(0);
        uint64_t v110 = v109[8];
        v111 = &v94[v110];
        v112 = &v95[v110];
        uint64_t v113 = type metadata accessor for ResponseVisual.UIType(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v112, 1, v113))
        {
          uint64_t v114 = sub_252AC3A24(&qword_269C41A80);
          memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v119 = *((void *)v112 + 1);
              *(void *)v111 = *(void *)v112;
              *((void *)v111 + 1) = v119;
              swift_bridgeObjectRetain();
              break;
            case 2u:
              uint64_t v120 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v111, v112, v120);
              break;
            case 3u:
              uint64_t v121 = *(void *)v112;
              unint64_t v122 = *((void *)v112 + 1);
              sub_252AC5A54(*(void *)v112, v122);
              *(void *)v111 = v121;
              *((void *)v111 + 1) = v122;
              unsigned int v6 = v287;
              uint64_t v123 = *((void *)v112 + 3);
              *((void *)v111 + 2) = *((void *)v112 + 2);
              *((void *)v111 + 3) = v123;
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v115 = *(void *)v112;
              unint64_t v116 = *((void *)v112 + 1);
              sub_252AC5A54(*(void *)v112, v116);
              *(void *)v111 = v115;
              *((void *)v111 + 1) = v116;
              unsigned int v6 = v287;
              uint64_t v117 = *((void *)v112 + 3);
              *((void *)v111 + 2) = *((void *)v112 + 2);
              *((void *)v111 + 3) = v117;
              uint64_t v118 = *((void *)v112 + 5);
              *((void *)v111 + 4) = *((void *)v112 + 4);
              *((void *)v111 + 5) = v118;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
          }
          swift_storeEnumTagMultiPayload();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v111, 0, 1, v113);
        }
        uint64_t v124 = v109[9];
        v125 = &v94[v124];
        v126 = &v95[v124];
        uint64_t v127 = *((void *)v126 + 1);
        *(void *)v125 = *(void *)v126;
        *((void *)v125 + 1) = v127;
        uint64_t v128 = v109[10];
        v129 = &v94[v128];
        v130 = &v95[v128];
        uint64_t v131 = *((void *)v130 + 1);
        *(void *)v129 = *(void *)v130;
        *((void *)v129 + 1) = v131;
        v94[v109[11]] = v95[v109[11]];
        v94[v109[12]] = v95[v109[12]];
        uint64_t v132 = v6[9];
        v133 = (void *)((char *)a1 + v132);
        v134 = &v3[v132];
        v135 = (int *)type metadata accessor for ResponseOutput(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v134, 1, (uint64_t)v135))
        {
          uint64_t v136 = sub_252AC3A24(&qword_269C41AB8);
          memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
        }
        else
        {
          void *v133 = *(void *)v134;
          int v137 = v134[24];
          swift_bridgeObjectRetain();
          if (v137 == 255)
          {
            *(_OWORD *)(v133 + 1) = *(_OWORD *)(v134 + 8);
            *((unsigned char *)v133 + 24) = v134[24];
          }
          else
          {
            uint64_t v138 = *((void *)v134 + 1);
            uint64_t v139 = *((void *)v134 + 2);
            sub_252ACE7E4(v138, v139, v137);
            v133[1] = v138;
            v133[2] = v139;
            *((unsigned char *)v133 + 24) = v137;
          }
          int v140 = v134[48];
          if (v140 == 255)
          {
            *((_OWORD *)v133 + 2) = *((_OWORD *)v134 + 2);
            *((unsigned char *)v133 + 48) = v134[48];
          }
          else
          {
            uint64_t v141 = *((void *)v134 + 4);
            uint64_t v142 = *((void *)v134 + 5);
            sub_252ACE7E4(v141, v142, v134[48]);
            v133[4] = v141;
            v133[5] = v142;
            *((unsigned char *)v133 + 48) = v140;
          }
          unsigned int v6 = v287;
          uint64_t v143 = v135[7];
          v144 = (void *)((char *)v133 + v143);
          v145 = (uint64_t *)&v134[v143];
          uint64_t v146 = type metadata accessor for ResponseOutput.VisualOutput(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v146))
          {
            uint64_t v147 = sub_252AC3A24(&qword_269C41AB0);
            memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
                type metadata accessor for RGPluginModel(0);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    v285 = v3;
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v286))
                    {
                      uint64_t v166 = sub_252AC3A24(&qword_26B2320E8);
                      memcpy(v144, v145, *(void *)(*(void *)(v166 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v286 - 8) + 16))(v144, v145, v286);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v286);
                    }
                    v191 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                    v264 = *(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16);
                    v264((char *)v144 + v191[5], (char *)v145 + v191[5], v286);
                    uint64_t v192 = v191[6];
                    v193 = (char *)v144 + v192;
                    v194 = (char *)v145 + v192;
                    *(_DWORD *)v193 = *(_DWORD *)v194;
                    uint64_t v250 = *((void *)v194 + 2);
                    *((void *)v193 + 1) = *((void *)v194 + 1);
                    *((void *)v193 + 2) = v250;
                    uint64_t v195 = v191[7];
                    v196 = v191;
                    v254 = (char *)v145 + v195;
                    v259 = (char *)v144 + v195;
                    uint64_t v197 = sub_252D19408();
                    v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v198(v259, v254, v197);
                    v198((char *)v144 + v196[8], (char *)v145 + v196[8], v197);
                    v264((char *)v144 + v196[9], (char *)v145 + v196[9], v286);
                    int v3 = v285;
                    unsigned int v6 = v287;
                    break;
                  case 2u:
                    uint64_t v271 = v146;
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v286))
                    {
                      uint64_t v167 = sub_252AC3A24(&qword_26B2320E8);
                      memcpy(v144, v145, *(void *)(*(void *)(v167 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v286 - 8) + 16))(v144, v145, v286);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v286);
                    }
                    v199 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                    v249 = *(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16);
                    v249((char *)v144 + v199[5], (char *)v145 + v199[5], v286);
                    v268 = v199;
                    uint64_t v200 = v199[6];
                    v201 = (char *)v144 + v200;
                    v202 = (char *)v145 + v200;
                    *(_DWORD *)v201 = *(_DWORD *)v202;
                    uint64_t v251 = *((void *)v202 + 2);
                    *((void *)v201 + 1) = *((void *)v202 + 1);
                    *((void *)v201 + 2) = v251;
                    uint64_t v203 = v199[7];
                    v255 = (char *)v145 + v203;
                    v260 = (char *)v144 + v203;
                    uint64_t v204 = sub_252D19408();
                    v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v265(v260, v255, v204);
                    uint64_t v252 = v204;
                    v265((char *)v144 + v268[8], (char *)v145 + v268[8], v204);
                    uint64_t v205 = v199[9];
                    v261 = (char *)v144 + v205;
                    v206 = (char *)v145 + v205;
                    uint64_t v207 = type metadata accessor for RGDisplayRepresentation(0);
                    v256 = v206;
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v206, 1, v207))
                    {
                      uint64_t v208 = sub_252AC3A24(&qword_269C41AA0);
                      memcpy(v261, v206, *(void *)(*(void *)(v208 - 8) + 64));
                      uint64_t v146 = v271;
                    }
                    else
                    {
                      v265(v261, v206, v252);
                      uint64_t v209 = *(int *)(v207 + 20);
                      __dst = &v261[v209];
                      v247 = (int *)v207;
                      v210 = &v206[v209];
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v256[v209], 1, v252))
                      {
                        uint64_t v211 = sub_252AC3A24(&qword_269C41A90);
                        memcpy(__dst, v210, *(void *)(*(void *)(v211 - 8) + 64));
                      }
                      else
                      {
                        v265(__dst, v210, v252);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v252);
                      }
                      uint64_t v212 = *(int *)(v207 + 24);
                      v213 = &v261[v212];
                      v214 = &v256[v212];
                      uint64_t v215 = sub_252D19C68();
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v214, 1, v215))
                      {
                        uint64_t v216 = sub_252AC3A24(&qword_269C41A98);
                        memcpy(v213, v214, *(void *)(*(void *)(v216 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v213, 0, 1, v215);
                      }
                      uint64_t v217 = v247[7];
                      v218 = &v261[v217];
                      v219 = &v256[v217];
                      uint64_t v220 = *((void *)v219 + 1);
                      *(void *)v218 = *(void *)v219;
                      *((void *)v218 + 1) = v220;
                      uint64_t v221 = v247[8];
                      v222 = &v261[v221];
                      v223 = &v256[v221];
                      unint64_t v224 = *(void *)&v256[v221 + 8];
                      swift_bridgeObjectRetain();
                      if (v224 >> 60 == 15)
                      {
                        *(_OWORD *)v222 = *(_OWORD *)v223;
                      }
                      else
                      {
                        uint64_t v225 = *(void *)v223;
                        sub_252AC5A54(v225, v224);
                        *(void *)v222 = v225;
                        *((void *)v222 + 1) = v224;
                      }
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v261, 0, 1, (uint64_t)v247);
                      unsigned int v6 = v287;
                      uint64_t v146 = v271;
                    }
                    uint64_t v226 = v268[10];
                    v262 = (char *)v144 + v226;
                    v289 = (char *)v145 + v226;
                    uint64_t v257 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v289, 1, v257))
                    {
                      uint64_t v227 = sub_252AC3A24(&qword_269C41AA8);
                      memcpy(v262, v289, *(void *)(*(void *)(v227 - 8) + 64));
                    }
                    else
                    {
                      v265(v262, v289, v252);
                      uint64_t v228 = *(int *)(v257 + 20);
                      v248 = &v262[v228];
                      v229 = &v289[v228];
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v289[v228], 1, v252))
                      {
                        uint64_t v230 = sub_252AC3A24(&qword_269C41A90);
                        memcpy(v248, v229, *(void *)(*(void *)(v230 - 8) + 64));
                      }
                      else
                      {
                        v265(v248, v229, v252);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v248, 0, 1, v252);
                      }
                      uint64_t v231 = *(int *)(v257 + 24);
                      v266 = &v262[v231];
                      v232 = &v289[v231];
                      uint64_t v233 = sub_252D19C68();
                      v290 = v232;
                      uint64_t v234 = (uint64_t)v232;
                      uint64_t v235 = v233;
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v234, 1, v233))
                      {
                        uint64_t v236 = sub_252AC3A24(&qword_269C41A98);
                        memcpy(v266, v290, *(void *)(*(void *)(v236 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 16))(v266, v290, v235);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v266, 0, 1, v235);
                      }
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v262, 0, 1, v257);
                    }
                    v249((char *)v144 + v268[11], (char *)v145 + v268[11], v286);
                    break;
                  case 3u:
                    uint64_t v272 = v146;
                    v168 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v286 - 8) + 16);
                    v168(v144, v145);
                    v267 = (void (*)(char *, char *, uint64_t))v168;
                    v169 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                    ((void (*)(char *, char *, uint64_t))v168)((char *)v144 + v169[5], (char *)v145 + v169[5], v286);
                    uint64_t v170 = v169[6];
                    v171 = (char *)v144 + v170;
                    v172 = (char *)v145 + v170;
                    *(_DWORD *)v171 = *(_DWORD *)v172;
                    uint64_t v173 = *((void *)v172 + 2);
                    *((void *)v171 + 1) = *((void *)v172 + 1);
                    *((void *)v171 + 2) = v173;
                    *(uint64_t *)((char *)v144 + v169[7]) = *(uint64_t *)((char *)v145 + v169[7]);
                    *(uint64_t *)((char *)v144 + v169[8]) = *(uint64_t *)((char *)v145 + v169[8]);
                    uint64_t v174 = v169[9];
                    v175 = (char *)v144 + v174;
                    v176 = (char *)v145 + v174;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v146 = v272;
                    v267(v175, v176, v286);
                    goto LABEL_66;
                  case 4u:
                    uint64_t v177 = *v145;
                    unint64_t v178 = v145[1];
                    sub_252AC5A54(v177, v178);
                    uint64_t *v144 = v177;
                    v144[1] = v178;
                    break;
                  case 5u:
                    uint64_t v179 = *v145;
                    unint64_t v288 = v145[1];
                    sub_252AC5A54(*v145, v288);
                    uint64_t *v144 = v179;
                    v144[1] = v288;
                    uint64_t v180 = v145[3];
                    v144[2] = v145[2];
                    v144[3] = v180;
                    uint64_t v181 = v145[5];
                    v144[4] = v145[4];
                    v144[5] = v181;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    break;
                  case 6u:
                    uint64_t v273 = v146;
                    uint64_t v183 = *v145;
                    unint64_t v182 = v145[1];
                    sub_252AC5A54(*v145, v182);
                    uint64_t *v144 = v183;
                    v144[1] = v182;
                    uint64_t v184 = v145[3];
                    v144[2] = v145[2];
                    v144[3] = v184;
                    v185 = v145 + 4;
                    unint64_t v186 = v145[5];
                    swift_bridgeObjectRetain();
                    if (v186 >> 60 == 15)
                    {
                      *((_OWORD *)v144 + 2) = *v185;
                    }
                    else
                    {
                      uint64_t v189 = *(void *)v185;
                      sub_252AC5A54(v189, v186);
                      v144[4] = v189;
                      v144[5] = v186;
                    }
                    uint64_t v190 = v145[7];
                    v144[6] = v145[6];
                    v144[7] = v190;
                    swift_bridgeObjectRetain();
                    uint64_t v146 = v273;
                    break;
                  case 7u:
                    uint64_t v187 = sub_252D19C58();
                    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v187 - 8) + 16))(v144, v145, v187);
                    break;
                  case 8u:
                    uint64_t v188 = v145[1];
                    uint64_t *v144 = *v145;
                    v144[1] = v188;
                    swift_bridgeObjectRetain();
                    break;
                  default:
                    uint64_t v270 = v146;
                    v149 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v286 - 8) + 16);
                    v149(v144, v145);
                    v150 = (int *)type metadata accessor for RGDisambiguationModel(0);
                    v263 = (void (*)(char *, char *, uint64_t))v149;
                    ((void (*)(char *, char *, uint64_t))v149)((char *)v144 + v150[5], (char *)v145 + v150[5], v286);
                    uint64_t v151 = v150[6];
                    v152 = (char *)v144 + v151;
                    v153 = (char *)v145 + v151;
                    *(_DWORD *)v152 = *(_DWORD *)v153;
                    uint64_t v154 = *((void *)v153 + 2);
                    *((void *)v152 + 1) = *((void *)v153 + 1);
                    *((void *)v152 + 2) = v154;
                    *(uint64_t *)((char *)v144 + v150[7]) = *(uint64_t *)((char *)v145 + v150[7]);
                    *(uint64_t *)((char *)v144 + v150[8]) = *(uint64_t *)((char *)v145 + v150[8]);
                    uint64_t v155 = v150[9];
                    v253 = (char *)v144 + v155;
                    v258 = (char *)v145 + v155;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    ((void (*)(char *, char *, uint64_t))v149)(v253, v258, v286);
                    uint64_t v156 = v150[10];
                    v157 = (uint64_t *)((char *)v144 + v156);
                    v158 = (uint64_t *)((char *)v145 + v156);
                    uint64_t v159 = v158[1];
                    void *v157 = *v158;
                    v157[1] = v159;
                    uint64_t v160 = v150[11];
                    v161 = (char *)v144 + v160;
                    v162 = (char *)v145 + v160;
                    swift_bridgeObjectRetain();
                    uint64_t v146 = v270;
                    v263(v161, v162, v286);
LABEL_66:
                    unsigned int v6 = v287;
                    break;
                }
                swift_storeEnumTagMultiPayload();
                break;
              case 3u:
                uint64_t v163 = *v145;
                unint64_t v164 = v145[1];
                sub_252AC5A54(*v145, v164);
                uint64_t *v144 = v163;
                v144[1] = v164;
                unsigned int v6 = v287;
                uint64_t v165 = v145[3];
                v144[2] = v145[2];
                v144[3] = v165;
                goto LABEL_60;
              default:
                uint64_t v148 = v145[1];
                uint64_t *v144 = *v145;
                v144[1] = v148;
LABEL_60:
                swift_bridgeObjectRetain();
                break;
            }
            swift_storeEnumTagMultiPayload();
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v146);
          }
          *((unsigned char *)v133 + v135[8]) = v134[v135[8]];
          *((unsigned char *)v133 + v135[9]) = v134[v135[9]];
          *(void *)((char *)v133 + v135[10]) = *(void *)&v134[v135[10]];
          uint64_t v237 = v135[11];
          v238 = (void *)((char *)v133 + v237);
          v239 = &v134[v237];
          uint64_t v240 = *((void *)v239 + 1);
          void *v238 = *(void *)v239;
          v238[1] = v240;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v133, 0, 1, (uint64_t)v135);
        }
        uint64_t v241 = v6[10];
        v242 = (void *)((char *)a1 + v241);
        v243 = &v3[v241];
        uint64_t v244 = *((void *)v243 + 1);
        void *v242 = *(void *)v243;
        v242[1] = v244;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v21 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = &v19[v23];
        char v25 = &v20[v23];
        uint64_t v26 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v286 - 8) + 16))(v24, v25);
          uint64_t v73 = *(int *)(v26 + 20);
          uint64_t v74 = &v24[v73];
          uint64_t v75 = &v25[v73];
          uint64_t v76 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v76;
          uint64_t v77 = *(int *)(v26 + 24);
          uint64_t v78 = &v24[v77];
          uint64_t v79 = &v25[v77];
          uint64_t v80 = *((void *)v79 + 1);
          *(void *)uint64_t v78 = *(void *)v79;
          *((void *)v78 + 1) = v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v26);
        }
        v19[v22[6]] = v20[v22[6]];
        uint64_t v81 = v22[7];
        uint64_t v82 = &v19[v81];
        uint64_t v83 = &v20[v81];
        uint64_t v283 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        unsigned int v6 = v287;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v83, 1, v283))
        {
          uint64_t v84 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v85 = *((void *)v83 + 1);
          *(void *)uint64_t v82 = *(void *)v83;
          *((void *)v82 + 1) = v85;
          uint64_t v86 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v87 = *(int *)(v86 + 20);
          v275 = &v82[v87];
          uint64_t v278 = v86;
          v269 = &v83[v87];
          unsigned int v6 = v287;
          swift_bridgeObjectRetain();
          uint64_t v88 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v275, v269, v88);
          *(void *)&v82[*(int *)(v278 + 24)] = *(void *)&v83[*(int *)(v278 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v82, 0, 1, v283);
        }
        v19[v22[8]] = v20[v22[8]];
        uint64_t v89 = v22[9];
        v90 = &v19[v89];
        v91 = &v20[v89];
        uint64_t v92 = *((void *)v91 + 1);
        *(void *)v90 = *(void *)v91;
        *((void *)v90 + 1) = v92;
        goto LABEL_27;
    }
  }
  return a1;
}

uint64_t destroy for ActionResponse(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  type metadata accessor for ActionOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      uint64_t v7 = type metadata accessor for ActionSuccess(0);
      uint64_t v8 = v5 + *(int *)(v7 + 20);
      uint64_t v9 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v9))
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v8, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v10 = v5 + *(int *)(v7 + 28);
      uint64_t v11 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v10
            + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
        uint64_t v13 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      goto LABEL_18;
    case 1u:
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 2u:
      goto LABEL_17;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_14;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v15 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v16 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 6u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_14;
    case 7u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_14:
      uint64_t v17 = v5 + *(int *)(v14 + 20);
      uint64_t v18 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      goto LABEL_19;
    case 8u:
      sub_252AD16E4(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
      goto LABEL_19;
    case 9u:
      goto LABEL_18;
    case 0xAu:
      if (*(void *)(v5 + 8) < 0x10uLL) {
        goto LABEL_19;
      }
LABEL_17:
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
LABEL_19:
      uint64_t v19 = (void *)(a1 + a2[8]);
      swift_bridgeObjectRelease();
      if (v19[2])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v19[12])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v19[21])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v20 = (uint64_t)v19 + *(int *)(type metadata accessor for ResponseManifest(0) + 32);
      uint64_t v21 = type metadata accessor for ResponseVisual.UIType(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v20, 1, v21))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            sub_252AC5C14(*(void *)v20, *(void *)(v20 + 8));
            swift_bridgeObjectRelease();
            goto LABEL_30;
          case 1u:
            goto LABEL_30;
          case 2u:
            uint64_t v22 = sub_252D19C58();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
            break;
          case 3u:
            sub_252AC5C14(*(void *)v20, *(void *)(v20 + 8));
LABEL_30:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = a1 + a2[9];
      uint64_t v24 = type metadata accessor for ResponseOutput(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        int v25 = *(unsigned __int8 *)(v23 + 24);
        if (v25 != 255) {
          sub_252AD170C(*(void *)(v23 + 8), *(void *)(v23 + 16), v25);
        }
        int v26 = *(unsigned __int8 *)(v23 + 48);
        if (v26 != 255) {
          sub_252AD170C(*(void *)(v23 + 32), *(void *)(v23 + 40), v26);
        }
        uint64_t v27 = (uint64_t *)(v23 + *(int *)(v24 + 28));
        uint64_t v28 = type metadata accessor for ResponseOutput.VisualOutput(0);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v28))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
              goto LABEL_41;
            case 2u:
              type metadata accessor for RGPluginModel(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v29 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v29(v27, v4);
                  uint64_t v30 = (int *)type metadata accessor for RGDisambiguationModel(0);
                  v29((uint64_t *)((char *)v27 + v30[5]), v4);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v29((uint64_t *)((char *)v27 + v30[9]), v4);
                  swift_bridgeObjectRelease();
                  uint64_t v31 = v30[11];
                  goto LABEL_65;
                case 1u:
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v4))(*(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(v27, v4); {
                  uint64_t v33 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                  }
                  uint64_t v59 = *(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v59((char *)v27 + v33[5], v4);
                  swift_bridgeObjectRelease();
                  uint64_t v57 = (char *)v27 + v33[7];
                  uint64_t v34 = sub_252D19408();
                  uint64_t v35 = *(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8);
                  v35(v57, v34);
                  v35((char *)v27 + v33[8], v34);
                  v59((char *)v27 + v33[9], v4);
                  goto LABEL_42;
                case 2u:
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v4))(*(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(v27, v4); {
                  uint64_t v36 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                  }
                  uint64_t v58 = *(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v58((char *)v27 + v36[5], v4);
                  swift_bridgeObjectRelease();
                  uint64_t v60 = (char *)v27 + v36[7];
                  uint64_t v37 = sub_252D19408();
                  uint64_t v38 = *(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8);
                  v38(v60, v37);
                  uint64_t v56 = v37;
                  uint64_t v39 = v37;
                  uint64_t v40 = v36;
                  uint64_t v61 = (void (*)(uint64_t, uint64_t))v38;
                  v38((char *)v27 + v36[8], v39);
                  uint64_t v41 = (uint64_t)v27 + v36[9];
                  uint64_t v42 = (int *)type metadata accessor for RGDisplayRepresentation(0);
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v41, 1, (uint64_t)v42))
                  {
                    v61(v41, v56);
                    uint64_t v53 = v41 + v42[5];
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v53, 1, v56)) {
                      v61(v53, v56);
                    }
                    uint64_t v43 = v41 + v42[6];
                    uint64_t v54 = sub_252D19C68();
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v43, 1, v54)) {
                      (*(void (**)(uint64_t))(*(void *)(v54 - 8) + 8))(v43);
                    }
                    swift_bridgeObjectRelease();
                    long long v44 = (uint64_t *)(v41 + v42[8]);
                    unint64_t v45 = v44[1];
                    if (v45 >> 60 != 15) {
                      sub_252AC5C14(*v44, v45);
                    }
                  }
                  uint64_t v46 = (uint64_t)v27 + v40[10];
                  uint64_t v47 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v46, 1, v47))
                  {
                    v61(v46, v56);
                    uint64_t v55 = v46 + *(int *)(v47 + 20);
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v55, 1, v56)) {
                      v61(v55, v56);
                    }
                    uint64_t v48 = v46 + *(int *)(v47 + 24);
                    uint64_t v49 = sub_252D19C68();
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v48, 1, v49)) {
                      (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
                    }
                  }
                  v58((char *)v27 + v40[11], v4);
                  goto LABEL_42;
                case 3u:
                  uint64_t v29 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v29(v27, v4);
                  uint64_t v50 = type metadata accessor for RGToolDisambiguationModel(0);
                  v29((uint64_t *)((char *)v27 + *(int *)(v50 + 20)), v4);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v31 = *(int *)(v50 + 36);
LABEL_65:
                  v29((uint64_t *)((char *)v27 + v31), v4);
                  break;
                case 4u:
                  sub_252AC5C14(*v27, v27[1]);
                  break;
                case 5u:
                  sub_252AC5C14(*v27, v27[1]);
                  swift_bridgeObjectRelease();
                  goto LABEL_41;
                case 6u:
                  sub_252AC5C14(*v27, v27[1]);
                  swift_bridgeObjectRelease();
                  unint64_t v51 = v27[5];
                  if (v51 >> 60 != 15) {
                    sub_252AC5C14(v27[4], v51);
                  }
                  goto LABEL_41;
                case 7u:
                  uint64_t v52 = sub_252D19C58();
                  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v52 - 8) + 8))(v27, v52);
                  break;
                case 8u:
                  goto LABEL_41;
                default:
                  goto LABEL_42;
              }
              break;
            case 3u:
              sub_252AC5C14(*v27, v27[1]);
LABEL_41:
              swift_bridgeObjectRelease();
              break;
            default:
              break;
          }
        }
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_19;
  }
}

char *initializeWithCopy for ActionResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v286 = v6;
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = &a1[v9];
  uint64_t v14 = &a2[v9];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  type metadata accessor for ActionOutcome(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v287 = a2;
  unint64_t v288 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v25;
      uint64_t v26 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v26;
      uint64_t v27 = *((void *)v18 + 5);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      *((void *)v17 + 5) = v27;
      *((void *)v17 + 6) = *((void *)v18 + 6);
      *((_WORD *)v17 + 28) = *((_WORD *)v18 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 2u:
      uint64_t v28 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v28;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      goto LABEL_20;
    case 3u:
      uint64_t v29 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v29;
      uint64_t v30 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v31 = &v17[v30];
      v282 = &v18[v30];
      uint64_t v32 = a2;
      uint64_t v33 = sub_252D19BE8();
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v35 = v31;
      a3 = v288;
      uint64_t v36 = v33;
      a2 = v32;
      v34(v35, v282, v36);
      goto LABEL_22;
    case 4u:
      uint64_t v37 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v37;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      v17[24] = v18[24];
      uint64_t v38 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v39 = v38[6];
      v277 = &v18[v39];
      uint64_t v283 = &v17[v39];
      uint64_t v40 = sub_252D19BE8();
      uint64_t v41 = a1;
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      v42(v283, v277, v40);
      a1 = v41;
      uint64_t v43 = v38[7];
      long long v44 = &v17[v43];
      unint64_t v45 = &v18[v43];
      uint64_t v46 = *((void *)v45 + 1);
      *(void *)long long v44 = *(void *)v45;
      *((void *)v44 + 1) = v46;
      uint64_t v47 = v38[8];
      a2 = v287;
      a3 = v288;
      uint64_t v48 = &v17[v47];
      uint64_t v49 = &v18[v47];
      uint64_t v50 = *((void *)v49 + 1);
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      goto LABEL_20;
    case 5u:
      uint64_t v51 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v51;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      v17[24] = v18[24];
      uint64_t v52 = *((void *)v18 + 5);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      *((void *)v17 + 5) = v52;
      uint64_t v53 = *((void *)v18 + 7);
      *((void *)v17 + 6) = *((void *)v18 + 6);
      *((void *)v17 + 7) = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 6u:
      uint64_t v54 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v54;
      uint64_t v55 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v56 = *(int *)(v55 + 20);
      uint64_t v278 = &v18[v56];
      v284 = &v17[v56];
      uint64_t v57 = sub_252D19BE8();
      uint64_t v58 = a1;
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v60 = v57;
      a2 = v287;
      v59(v284, v278, v60);
      a1 = v58;
      a3 = v288;
      v17[*(int *)(v55 + 24)] = v18[*(int *)(v55 + 24)];
      goto LABEL_22;
    case 7u:
      uint64_t v61 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v61;
      uint64_t v62 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      v279 = &v18[v62];
      v285 = &v17[v62];
      uint64_t v63 = sub_252D19BE8();
      uint64_t v64 = a2;
      uint64_t v65 = a1;
      uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
      swift_bridgeObjectRetain();
      v66(v285, v279, v63);
      a1 = v65;
      a2 = v64;
      goto LABEL_22;
    case 8u:
      uint64_t v67 = *(void *)v18;
      uint64_t v68 = *((void *)v18 + 1);
      char v69 = v18[16];
      sub_252ACE7BC(*(void *)v18, v68, v69);
      *(void *)uint64_t v17 = v67;
      *((void *)v17 + 1) = v68;
      v17[16] = v69;
      goto LABEL_22;
    case 9u:
      *(void *)uint64_t v17 = *(void *)v18;
      goto LABEL_21;
    case 0xAu:
      unint64_t v70 = *((void *)v18 + 1);
      if (v70 >= 0x10)
      {
        *(void *)uint64_t v17 = *(void *)v18;
        *((void *)v17 + 1) = v70;
        uint64_t v72 = *((void *)v18 + 3);
        *((void *)v17 + 2) = *((void *)v18 + 2);
        *((void *)v17 + 3) = v72;
        *((void *)v17 + 4) = *((void *)v18 + 4);
LABEL_20:
        swift_bridgeObjectRetain();
LABEL_21:
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v71 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v71;
        *((void *)v17 + 4) = *((void *)v18 + 4);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      uint64_t v73 = a3[8];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      *(void *)&a1[v73] = *(void *)v75;
      uint64_t v76 = &a1[v73 + 8];
      uint64_t v77 = *((void *)v75 + 2);
      swift_bridgeObjectRetain();
      if (v77)
      {
        *((void *)v74 + 1) = *((void *)v75 + 1);
        *((void *)v74 + 2) = v77;
        uint64_t v78 = *((void *)v75 + 4);
        *((void *)v74 + 3) = *((void *)v75 + 3);
        *((void *)v74 + 4) = v78;
        uint64_t v79 = *((void *)v75 + 6);
        *((void *)v74 + 5) = *((void *)v75 + 5);
        *((void *)v74 + 6) = v79;
        uint64_t v80 = *((void *)v75 + 8);
        *((void *)v74 + 7) = *((void *)v75 + 7);
        *((void *)v74 + 8) = v80;
        uint64_t v81 = *((void *)v75 + 10);
        *((void *)v74 + 9) = *((void *)v75 + 9);
        *((void *)v74 + 10) = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v76, v75 + 8, 0x50uLL);
      }
      uint64_t v82 = *((void *)v75 + 12);
      if (v82)
      {
        *((void *)v74 + 11) = *((void *)v75 + 11);
        *((void *)v74 + 12) = v82;
        uint64_t v83 = *((void *)v75 + 14);
        *((void *)v74 + 13) = *((void *)v75 + 13);
        *((void *)v74 + 14) = v83;
        uint64_t v84 = *((void *)v75 + 16);
        *((void *)v74 + 15) = *((void *)v75 + 15);
        *((void *)v74 + 16) = v84;
        uint64_t v85 = *((void *)v75 + 18);
        *((void *)v74 + 17) = *((void *)v75 + 17);
        *((void *)v74 + 18) = v85;
        uint64_t v86 = *((void *)v75 + 20);
        *((void *)v74 + 19) = *((void *)v75 + 19);
        *((void *)v74 + 20) = v86;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v74 + 88, v75 + 88, 0x50uLL);
      }
      uint64_t v87 = *((void *)v75 + 21);
      if (v87)
      {
        uint64_t v88 = *((void *)v75 + 22);
        *((void *)v74 + 21) = v87;
        *((void *)v74 + 22) = v88;
        v74[184] = v75[184];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v74 + 168) = *(_OWORD *)(v75 + 168);
        v74[184] = v75[184];
      }
      uint64_t v89 = (int *)type metadata accessor for ResponseManifest(0);
      uint64_t v90 = v89[8];
      v91 = &v74[v90];
      uint64_t v92 = &v75[v90];
      uint64_t v93 = type metadata accessor for ResponseVisual.UIType(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v92, 1, v93))
      {
        uint64_t v94 = sub_252AC3A24(&qword_269C41A80);
        memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v99 = *((void *)v92 + 1);
            *(void *)v91 = *(void *)v92;
            *((void *)v91 + 1) = v99;
            swift_bridgeObjectRetain();
            break;
          case 2u:
            uint64_t v100 = sub_252D19C58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v91, v92, v100);
            break;
          case 3u:
            uint64_t v101 = *(void *)v92;
            unint64_t v102 = *((void *)v92 + 1);
            sub_252AC5A54(*(void *)v92, v102);
            *(void *)v91 = v101;
            *((void *)v91 + 1) = v102;
            uint64_t v103 = *((void *)v92 + 3);
            *((void *)v91 + 2) = *((void *)v92 + 2);
            *((void *)v91 + 3) = v103;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v95 = *(void *)v92;
            unint64_t v96 = *((void *)v92 + 1);
            sub_252AC5A54(*(void *)v92, v96);
            *(void *)v91 = v95;
            *((void *)v91 + 1) = v96;
            uint64_t v97 = *((void *)v92 + 3);
            *((void *)v91 + 2) = *((void *)v92 + 2);
            *((void *)v91 + 3) = v97;
            uint64_t v98 = *((void *)v92 + 5);
            *((void *)v91 + 4) = *((void *)v92 + 4);
            *((void *)v91 + 5) = v98;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v91, 0, 1, v93);
      }
      uint64_t v104 = v89[9];
      uint64_t v105 = &v74[v104];
      uint64_t v106 = &v75[v104];
      uint64_t v107 = *((void *)v106 + 1);
      *(void *)uint64_t v105 = *(void *)v106;
      *((void *)v105 + 1) = v107;
      uint64_t v108 = v89[10];
      v109 = &v74[v108];
      uint64_t v110 = &v75[v108];
      uint64_t v111 = *((void *)v110 + 1);
      *(void *)v109 = *(void *)v110;
      *((void *)v109 + 1) = v111;
      v74[v89[11]] = v75[v89[11]];
      v74[v89[12]] = v75[v89[12]];
      v112 = v287;
      uint64_t v113 = v288;
      uint64_t v114 = v288[9];
      uint64_t v115 = &a1[v114];
      unint64_t v116 = &v287[v114];
      uint64_t v117 = (int *)type metadata accessor for ResponseOutput(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v116, 1, (uint64_t)v117))
      {
        uint64_t v118 = sub_252AC3A24(&qword_269C41AB8);
        memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v115 = *(void *)v116;
        int v119 = v116[24];
        swift_bridgeObjectRetain();
        if (v119 == 255)
        {
          *(_OWORD *)(v115 + 8) = *(_OWORD *)(v116 + 8);
          v115[24] = v116[24];
        }
        else
        {
          uint64_t v120 = *((void *)v116 + 1);
          uint64_t v121 = *((void *)v116 + 2);
          sub_252ACE7E4(v120, v121, v119);
          *((void *)v115 + 1) = v120;
          *((void *)v115 + 2) = v121;
          v115[24] = v119;
        }
        int v122 = v116[48];
        if (v122 == 255)
        {
          *((_OWORD *)v115 + 2) = *((_OWORD *)v116 + 2);
          v115[48] = v116[48];
        }
        else
        {
          uint64_t v123 = *((void *)v116 + 4);
          uint64_t v124 = *((void *)v116 + 5);
          sub_252ACE7E4(v123, v124, v116[48]);
          *((void *)v115 + 4) = v123;
          *((void *)v115 + 5) = v124;
          v115[48] = v122;
        }
        uint64_t v125 = v117[7];
        v126 = &v115[v125];
        uint64_t v127 = &v116[v125];
        uint64_t v128 = type metadata accessor for ResponseOutput.VisualOutput(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = sub_252AC3A24(&qword_269C41AB0);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
          v112 = v287;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              type metadata accessor for RGPluginModel(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v257 = a1;
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v127, 1, v286))
                  {
                    uint64_t v169 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v126, v127, *(void *)(*(void *)(v169 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16))(v126, v127, v286);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v126, 0, 1, v286);
                  }
                  uint64_t v195 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                  __srcb = *(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16);
                  __srcb(&v126[v195[5]], &v127[v195[5]], v286);
                  uint64_t v196 = v195[6];
                  uint64_t v197 = &v126[v196];
                  v198 = &v127[v196];
                  *(_DWORD *)uint64_t v197 = *(_DWORD *)v198;
                  v261 = (void *)*((void *)v198 + 2);
                  *((void *)v197 + 1) = *((void *)v198 + 1);
                  *((void *)v197 + 2) = v261;
                  uint64_t v199 = v195[7];
                  v265 = &v127[v199];
                  v268 = &v126[v199];
                  uint64_t v200 = sub_252D19408();
                  v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v201(v268, v265, v200);
                  v201(&v126[v195[8]], &v127[v195[8]], v200);
                  __srcb(&v126[v195[9]], &v127[v195[9]], v286);
                  a1 = v257;
                  v112 = v287;
                  goto LABEL_100;
                case 2u:
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v127, 1, v286))
                  {
                    uint64_t v170 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v126, v127, *(void *)(*(void *)(v170 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16))(v126, v127, v286);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v126, 0, 1, v286);
                  }
                  v202 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                  v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16);
                  v256(&v126[v202[5]], &v127[v202[5]], v286);
                  uint64_t v203 = v202[6];
                  uint64_t v204 = &v126[v203];
                  uint64_t v205 = &v127[v203];
                  *(_DWORD *)uint64_t v204 = *(_DWORD *)v205;
                  uint64_t v206 = *((void *)v205 + 2);
                  *((void *)v204 + 1) = *((void *)v205 + 1);
                  *((void *)v204 + 2) = v206;
                  uint64_t v207 = v202[7];
                  __srcc = &v126[v207];
                  v262 = &v127[v207];
                  __dst = (void *)sub_252D19408();
                  uint64_t v208 = *(void (**)(char *, char *, void *))(*(__dst - 1) + 16);
                  swift_bridgeObjectRetain();
                  v208(__srcc, v262, __dst);
                  v258 = v208;
                  v208(&v126[v202[8]], &v127[v202[8]], __dst);
                  v269 = v202;
                  uint64_t v209 = v202[9];
                  v210 = &v126[v209];
                  uint64_t v211 = &v127[v209];
                  uint64_t v212 = type metadata accessor for RGDisplayRepresentation(0);
                  __src = v211;
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v211, 1, v212))
                  {
                    uint64_t v213 = sub_252AC3A24(&qword_269C41AA0);
                    memcpy(v210, v211, *(void *)(*(void *)(v213 - 8) + 64));
                    v214 = v269;
                  }
                  else
                  {
                    v258(v210, v211, __dst);
                    v259 = (int *)v212;
                    v263 = v210;
                    uint64_t v215 = *(int *)(v212 + 20);
                    uint64_t v216 = &v210[v215];
                    uint64_t v217 = &v211[v215];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v211[v215], 1, (uint64_t)__dst))
                    {
                      uint64_t v218 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
                    }
                    else
                    {
                      v258(v216, v217, __dst);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v216, 0, 1, (uint64_t)__dst);
                    }
                    uint64_t v219 = v259[6];
                    v254 = &v263[v219];
                    uint64_t v220 = &v211[v219];
                    uint64_t v221 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v220, 1, v221))
                    {
                      uint64_t v222 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v254, v220, *(void *)(*(void *)(v222 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16))(v254, v220, v221);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v254, 0, 1, v221);
                    }
                    uint64_t v223 = v259[7];
                    unint64_t v224 = &v263[v223];
                    uint64_t v225 = &v211[v223];
                    uint64_t v226 = *((void *)v225 + 1);
                    *(void *)unint64_t v224 = *(void *)v225;
                    *((void *)v224 + 1) = v226;
                    uint64_t v227 = v259[8];
                    uint64_t v228 = &v263[v227];
                    v229 = &v211[v227];
                    unint64_t v230 = *(void *)&__src[v227 + 8];
                    swift_bridgeObjectRetain();
                    if (v230 >> 60 == 15)
                    {
                      *(_OWORD *)uint64_t v228 = *(_OWORD *)v229;
                    }
                    else
                    {
                      uint64_t v231 = *(void *)v229;
                      sub_252AC5A54(v231, v230);
                      *(void *)uint64_t v228 = v231;
                      *((void *)v228 + 1) = v230;
                    }
                    v214 = v269;
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v263, 0, 1, (uint64_t)v259);
                  }
                  uint64_t v232 = v214[10];
                  __srca = &v126[v232];
                  uint64_t v233 = &v127[v232];
                  uint64_t v260 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v233, 1, v260))
                  {
                    uint64_t v234 = sub_252AC3A24(&qword_269C41AA8);
                    memcpy(__srca, v233, *(void *)(*(void *)(v234 - 8) + 64));
                    uint64_t v235 = v269;
                  }
                  else
                  {
                    v258(__srca, v233, __dst);
                    uint64_t v236 = *(int *)(v260 + 20);
                    v255 = &__srca[v236];
                    v253 = &v233[v236];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v233[v236], 1, (uint64_t)__dst))
                    {
                      uint64_t v237 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v255, v253, *(void *)(*(void *)(v237 - 8) + 64));
                    }
                    else
                    {
                      v258(v255, v253, __dst);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v255, 0, 1, (uint64_t)__dst);
                    }
                    uint64_t v238 = *(int *)(v260 + 24);
                    __dsta = &__srca[v238];
                    v239 = &v233[v238];
                    uint64_t v240 = sub_252D19C68();
                    v266 = v239;
                    uint64_t v241 = (uint64_t)v239;
                    uint64_t v242 = v240;
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v241, 1, v240))
                    {
                      uint64_t v243 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(__dsta, v266, *(void *)(*(void *)(v243 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 16))(__dsta, v266, v242);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v242);
                    }
                    uint64_t v235 = v269;
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srca, 0, 1, v260);
                  }
                  v256(&v126[v235[11]], &v127[v235[11]], v286);
                  v112 = v287;
                  goto LABEL_100;
                case 3u:
                  v171 = *(void (**)(char *, char *))(*(void *)(v286 - 8) + 16);
                  v171(v126, v127);
                  v172 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v171)(&v126[v172[5]], &v127[v172[5]], v286);
                  uint64_t v173 = v172[6];
                  uint64_t v174 = &v126[v173];
                  v175 = &v127[v173];
                  *(_DWORD *)uint64_t v174 = *(_DWORD *)v175;
                  uint64_t v176 = *((void *)v175 + 2);
                  *((void *)v174 + 1) = *((void *)v175 + 1);
                  *((void *)v174 + 2) = v176;
                  *(void *)&v126[v172[7]] = *(void *)&v127[v172[7]];
                  *(void *)&v126[v172[8]] = *(void *)&v127[v172[8]];
                  uint64_t v177 = v172[9];
                  unint64_t v178 = &v126[v177];
                  uint64_t v179 = &v127[v177];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v171)(v178, v179, v286);
                  goto LABEL_72;
                case 4u:
                  uint64_t v180 = *(void *)v127;
                  unint64_t v181 = *((void *)v127 + 1);
                  sub_252AC5A54(*(void *)v127, v181);
                  *(void *)v126 = v180;
                  *((void *)v126 + 1) = v181;
                  goto LABEL_72;
                case 5u:
                  uint64_t v182 = *(void *)v127;
                  unint64_t v183 = *((void *)v127 + 1);
                  sub_252AC5A54(*(void *)v127, v183);
                  *(void *)v126 = v182;
                  *((void *)v126 + 1) = v183;
                  uint64_t v184 = *((void *)v127 + 3);
                  *((void *)v126 + 2) = *((void *)v127 + 2);
                  *((void *)v126 + 3) = v184;
                  uint64_t v185 = *((void *)v127 + 5);
                  *((void *)v126 + 4) = *((void *)v127 + 4);
                  *((void *)v126 + 5) = v185;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_72;
                case 6u:
                  uint64_t v186 = *(void *)v127;
                  unint64_t v187 = *((void *)v127 + 1);
                  sub_252AC5A54(*(void *)v127, v187);
                  *(void *)v126 = v186;
                  *((void *)v126 + 1) = v187;
                  uint64_t v188 = *((void *)v127 + 3);
                  *((void *)v126 + 2) = *((void *)v127 + 2);
                  *((void *)v126 + 3) = v188;
                  uint64_t v189 = v127 + 32;
                  unint64_t v190 = *((void *)v127 + 5);
                  swift_bridgeObjectRetain();
                  if (v190 >> 60 == 15)
                  {
                    *((_OWORD *)v126 + 2) = *v189;
                  }
                  else
                  {
                    uint64_t v193 = *(void *)v189;
                    sub_252AC5A54(v193, v190);
                    *((void *)v126 + 4) = v193;
                    *((void *)v126 + 5) = v190;
                  }
                  uint64_t v194 = *((void *)v127 + 7);
                  *((void *)v126 + 6) = *((void *)v127 + 6);
                  *((void *)v126 + 7) = v194;
                  swift_bridgeObjectRetain();
                  v112 = v287;
                  goto LABEL_100;
                case 7u:
                  uint64_t v191 = sub_252D19C58();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v126, v127, v191);
                  goto LABEL_72;
                case 8u:
                  uint64_t v192 = *((void *)v127 + 1);
                  *(void *)v126 = *(void *)v127;
                  *((void *)v126 + 1) = v192;
                  swift_bridgeObjectRetain();
                  goto LABEL_72;
                default:
                  uint64_t v131 = *(void (**)(char *, char *))(*(void *)(v286 - 8) + 16);
                  v131(v126, v127);
                  uint64_t v132 = (int *)type metadata accessor for RGDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v131)(&v126[v132[5]], &v127[v132[5]], v286);
                  uint64_t v133 = v132[6];
                  v134 = &v126[v133];
                  v135 = &v127[v133];
                  *(_DWORD *)v134 = *(_DWORD *)v135;
                  uint64_t v136 = *((void *)v135 + 2);
                  *((void *)v134 + 1) = *((void *)v135 + 1);
                  *((void *)v134 + 2) = v136;
                  *(void *)&v126[v132[7]] = *(void *)&v127[v132[7]];
                  *(void *)&v126[v132[8]] = *(void *)&v127[v132[8]];
                  uint64_t v137 = v132[9];
                  v264 = &v127[v137];
                  v267 = &v126[v137];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v131)(v267, v264, v286);
                  uint64_t v138 = v132[10];
                  uint64_t v139 = &v126[v138];
                  int v140 = &v127[v138];
                  uint64_t v141 = *((void *)v140 + 1);
                  *(void *)uint64_t v139 = *(void *)v140;
                  *((void *)v139 + 1) = v141;
                  uint64_t v142 = v132[11];
                  uint64_t v143 = &v126[v142];
                  v144 = &v127[v142];
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v131)(v143, v144, v286);
LABEL_72:
                  v112 = v287;
LABEL_100:
                  swift_storeEnumTagMultiPayload();
                  break;
              }
              break;
            case 3u:
              uint64_t v145 = *(void *)v127;
              unint64_t v146 = *((void *)v127 + 1);
              sub_252AC5A54(*(void *)v127, v146);
              *(void *)v126 = v145;
              *((void *)v126 + 1) = v146;
              uint64_t v147 = *((void *)v127 + 3);
              *((void *)v126 + 2) = *((void *)v127 + 2);
              *((void *)v126 + 3) = v147;
              goto LABEL_54;
            default:
              uint64_t v130 = *((void *)v127 + 1);
              *(void *)v126 = *(void *)v127;
              *((void *)v126 + 1) = v130;
LABEL_54:
              swift_bridgeObjectRetain();
              v112 = v287;
              break;
          }
          swift_storeEnumTagMultiPayload();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v126, 0, 1, v128);
        }
        v115[v117[8]] = v116[v117[8]];
        v115[v117[9]] = v116[v117[9]];
        *(void *)&v115[v117[10]] = *(void *)&v116[v117[10]];
        uint64_t v244 = v117[11];
        v245 = &v115[v244];
        v246 = &v116[v244];
        uint64_t v247 = *((void *)v246 + 1);
        *(void *)v245 = *(void *)v246;
        *((void *)v245 + 1) = v247;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v115, 0, 1, (uint64_t)v117);
        uint64_t v113 = v288;
      }
      uint64_t v248 = v113[10];
      v249 = &a1[v248];
      uint64_t v250 = &v112[v248];
      uint64_t v251 = *((void *)v250 + 1);
      *(void *)v249 = *(void *)v250;
      *((void *)v249 + 1) = v251;
      swift_bridgeObjectRetain();
      return a1;
    default:
      uint64_t v19 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      v281 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v20 = v281[5];
      uint64_t v21 = &v17[v20];
      uint64_t v22 = &v18[v20];
      uint64_t v23 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 16))(v21, v22);
        uint64_t v148 = *(int *)(v23 + 20);
        v149 = &v21[v148];
        v150 = &v22[v148];
        uint64_t v151 = *((void *)v150 + 1);
        *(void *)v149 = *(void *)v150;
        *((void *)v149 + 1) = v151;
        uint64_t v152 = *(int *)(v23 + 24);
        v153 = &v21[v152];
        uint64_t v154 = &v22[v152];
        uint64_t v155 = *((void *)v154 + 1);
        *(void *)v153 = *(void *)v154;
        *((void *)v153 + 1) = v155;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v23);
      }
      v17[v281[6]] = v18[v281[6]];
      uint64_t v156 = v281[7];
      v157 = &v17[v156];
      v158 = &v18[v156];
      uint64_t v159 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      a3 = v288;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v158, 1, v159))
      {
        uint64_t v160 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
      }
      else
      {
        uint64_t v161 = *((void *)v158 + 1);
        *(void *)v157 = *(void *)v158;
        *((void *)v157 + 1) = v161;
        uint64_t v162 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v163 = *(int *)(v162 + 20);
        v276 = &v158[v163];
        v280 = &v157[v163];
        a3 = v288;
        swift_bridgeObjectRetain();
        uint64_t v164 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v280, v276, v164);
        *(void *)&v157[*(int *)(v162 + 24)] = *(void *)&v158[*(int *)(v162 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v157, 0, 1, v159);
      }
      v17[v281[8]] = v18[v281[8]];
      uint64_t v165 = v281[9];
      uint64_t v166 = &v17[v165];
      uint64_t v167 = &v18[v165];
      uint64_t v168 = *((void *)v167 + 1);
      *(void *)uint64_t v166 = *(void *)v167;
      *((void *)v166 + 1) = v168;
      swift_bridgeObjectRetain();
      a2 = v287;
      goto LABEL_22;
  }
}

uint64_t assignWithCopy for ActionResponse(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v489 = a1;
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  uint64_t v487 = v6;
  if (v7)
  {
    if (v8)
    {
      size_t v9 = *(void *)(*(void *)(sub_252AC3A24(&qword_26B2320E8) - 8) + 64);
      uint64_t v10 = (void *)a1;
LABEL_6:
      memcpy(v10, a2, v9);
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, v6);
  }
  else
  {
    uint64_t v11 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v6);
      size_t v9 = *(void *)(*(void *)(sub_252AC3A24(&qword_26B2320E8) - 8) + 64);
      uint64_t v10 = (void *)a1;
      goto LABEL_6;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 24))(a1, a2, v6);
  }
LABEL_9:
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  *uint64_t v13 = *(void *)v14;
  v13[1] = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = &a2[v15];
  *uint64_t v16 = *(void *)v17;
  v16[1] = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v488 = a2;
  if ((char *)a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = a1 + v18;
    uint64_t v20 = &a2[v18];
    sub_252BA6670();
    type metadata accessor for ActionOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        *(void *)(v19 + 16) = *((void *)v20 + 2);
        *(void *)(v19 + 24) = *((void *)v20 + 3);
        *(void *)(v19 + 32) = *((void *)v20 + 4);
        *(void *)(v19 + 40) = *((void *)v20 + 5);
        *(void *)(v19 + 48) = *((void *)v20 + 6);
        *(unsigned char *)(v19 + 56) = v20[56];
        *(unsigned char *)(v19 + 57) = v20[57];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 2u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        *(void *)(v19 + 16) = *((void *)v20 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        uint64_t v28 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v483 = v19 + v28;
        uint64_t v29 = &v20[v28];
        uint64_t v30 = a3;
        uint64_t v31 = sub_252D19BE8();
        uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v33 = v31;
        a3 = v30;
        v32(v483, v29, v33);
        goto LABEL_27;
      case 4u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        uint64_t v34 = *((void *)v20 + 2);
        *(unsigned char *)(v19 + 24) = v20[24];
        *(void *)(v19 + 16) = v34;
        uint64_t v35 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v36 = v35[6];
        v479 = &v20[v36];
        uint64_t v484 = v19 + v36;
        uint64_t v37 = sub_252D19BE8();
        uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v484, v479, v37);
        uint64_t v39 = v35[7];
        uint64_t v40 = (void *)(v19 + v39);
        uint64_t v41 = &v20[v39];
        *uint64_t v40 = *(void *)v41;
        v40[1] = *((void *)v41 + 1);
        uint64_t v42 = v35[8];
        uint64_t v43 = (void *)(v19 + v42);
        long long v44 = &v20[v42];
        *uint64_t v43 = *(void *)v44;
        v43[1] = *((void *)v44 + 1);
        goto LABEL_25;
      case 5u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        uint64_t v45 = *((void *)v20 + 2);
        *(unsigned char *)(v19 + 24) = v20[24];
        *(void *)(v19 + 16) = v45;
        *(void *)(v19 + 32) = *((void *)v20 + 4);
        *(void *)(v19 + 40) = *((void *)v20 + 5);
        *(void *)(v19 + 48) = *((void *)v20 + 6);
        *(void *)(v19 + 56) = *((void *)v20 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 6u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        uint64_t v46 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v47 = *(int *)(v46 + 20);
        v480 = &v20[v47];
        uint64_t v485 = v19 + v47;
        uint64_t v48 = sub_252D19BE8();
        uint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v50 = v48;
        a2 = v488;
        v49(v485, v480, v50);
        *(unsigned char *)(v19 + *(int *)(v46 + 24)) = v20[*(int *)(v46 + 24)];
        goto LABEL_27;
      case 7u:
        *(void *)uint64_t v19 = *(void *)v20;
        *(void *)(v19 + 8) = *((void *)v20 + 1);
        uint64_t v51 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v486 = v19 + v51;
        uint64_t v52 = &v20[v51];
        uint64_t v53 = sub_252D19BE8();
        uint64_t v54 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v486, v52, v53);
        goto LABEL_27;
      case 8u:
        uint64_t v55 = *(void *)v20;
        uint64_t v56 = *((void *)v20 + 1);
        char v57 = v20[16];
        sub_252ACE7BC(*(void *)v20, v56, v57);
        *(void *)uint64_t v19 = v55;
        *(void *)(v19 + 8) = v56;
        *(unsigned char *)(v19 + 16) = v57;
        goto LABEL_27;
      case 9u:
        *(void *)uint64_t v19 = *(void *)v20;
        goto LABEL_26;
      case 0xAu:
        if (*((void *)v20 + 1) >= 0x10uLL)
        {
          *(void *)uint64_t v19 = *(void *)v20;
          *(void *)(v19 + 8) = *((void *)v20 + 1);
          *(void *)(v19 + 16) = *((void *)v20 + 2);
          *(void *)(v19 + 24) = *((void *)v20 + 3);
          *(void *)(v19 + 32) = *((void *)v20 + 4);
LABEL_25:
          swift_bridgeObjectRetain();
LABEL_26:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v58 = *(_OWORD *)v20;
          long long v59 = *((_OWORD *)v20 + 1);
          *(void *)(v19 + 32) = *((void *)v20 + 4);
          *(_OWORD *)uint64_t v19 = v58;
          *(_OWORD *)(v19 + 16) = v59;
        }
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v482 = a3;
        uint64_t v21 = sub_252D19BE8();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = (char *)(v19 + v23);
        uint64_t v25 = &v20[v23];
        uint64_t v26 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 16))(v24, v25);
          uint64_t v143 = *(int *)(v26 + 20);
          v144 = &v24[v143];
          uint64_t v145 = &v25[v143];
          *(void *)v144 = *(void *)v145;
          *((void *)v144 + 1) = *((void *)v145 + 1);
          uint64_t v146 = *(int *)(v26 + 24);
          uint64_t v147 = &v24[v146];
          uint64_t v148 = &v25[v146];
          *(void *)uint64_t v147 = *(void *)v148;
          *((void *)v147 + 1) = *((void *)v148 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v26);
        }
        *(unsigned char *)(v19 + v22[6]) = v20[v22[6]];
        uint64_t v149 = v22[7];
        v150 = (void *)(v19 + v149);
        uint64_t v151 = &v20[v149];
        uint64_t v152 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v151, 1, v152))
        {
          uint64_t v153 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          void *v150 = *(void *)v151;
          v150[1] = *((void *)v151 + 1);
          uint64_t v154 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v155 = *(int *)(v154 + 20);
          v477 = &v151[v155];
          v481 = (char *)v150 + v155;
          swift_bridgeObjectRetain();
          uint64_t v156 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16))(v481, v477, v156);
          *(void *)((char *)v150 + *(int *)(v154 + 24)) = *(void *)&v151[*(int *)(v154 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v150, 0, 1, v152);
        }
        *(unsigned char *)(v19 + v22[8]) = v20[v22[8]];
        uint64_t v157 = v22[9];
        v158 = (void *)(v19 + v157);
        uint64_t v159 = &v20[v157];
        void *v158 = *(void *)v159;
        v158[1] = *((void *)v159 + 1);
        swift_bridgeObjectRetain();
        a2 = v488;
        a3 = v482;
        goto LABEL_27;
    }
  }
  uint64_t v60 = a3;
  uint64_t v61 = a3[8];
  uint64_t v62 = (void *)(v489 + v61);
  uint64_t v63 = &a2[v61];
  *(void *)(v489 + v61) = *(void *)v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = *((void *)v63 + 2);
  if (v62[2])
  {
    if (v64)
    {
      v62[1] = *((void *)v63 + 1);
      v62[2] = *((void *)v63 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[3] = *((void *)v63 + 3);
      v62[4] = *((void *)v63 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[5] = *((void *)v63 + 5);
      v62[6] = *((void *)v63 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[7] = *((void *)v63 + 7);
      v62[8] = *((void *)v63 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[9] = *((void *)v63 + 9);
      v62[10] = *((void *)v63 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_252B5D188((uint64_t)(v62 + 1));
  }
  else if (v64)
  {
    v62[1] = *((void *)v63 + 1);
    v62[2] = *((void *)v63 + 2);
    v62[3] = *((void *)v63 + 3);
    v62[4] = *((void *)v63 + 4);
    v62[5] = *((void *)v63 + 5);
    v62[6] = *((void *)v63 + 6);
    v62[7] = *((void *)v63 + 7);
    v62[8] = *((void *)v63 + 8);
    v62[9] = *((void *)v63 + 9);
    v62[10] = *((void *)v63 + 10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  memcpy(v62 + 1, v63 + 8, 0x50uLL);
LABEL_35:
  uint64_t v65 = *((void *)v63 + 12);
  if (v62[12])
  {
    if (v65)
    {
      v62[11] = *((void *)v63 + 11);
      v62[12] = *((void *)v63 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[13] = *((void *)v63 + 13);
      v62[14] = *((void *)v63 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[15] = *((void *)v63 + 15);
      v62[16] = *((void *)v63 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[17] = *((void *)v63 + 17);
      v62[18] = *((void *)v63 + 18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[19] = *((void *)v63 + 19);
      v62[20] = *((void *)v63 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_252B5D188((uint64_t)(v62 + 11));
  }
  else if (v65)
  {
    v62[11] = *((void *)v63 + 11);
    v62[12] = *((void *)v63 + 12);
    v62[13] = *((void *)v63 + 13);
    v62[14] = *((void *)v63 + 14);
    v62[15] = *((void *)v63 + 15);
    v62[16] = *((void *)v63 + 16);
    v62[17] = *((void *)v63 + 17);
    v62[18] = *((void *)v63 + 18);
    v62[19] = *((void *)v63 + 19);
    v62[20] = *((void *)v63 + 20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  memcpy(v62 + 11, v63 + 88, 0x50uLL);
LABEL_42:
  uint64_t v66 = v62 + 21;
  uint64_t v68 = v63 + 168;
  uint64_t v67 = *((void *)v63 + 21);
  if (v62[21])
  {
    if (v67)
    {
      v62[21] = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v62[22] = *((void *)v63 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)v62 + 184) = v63[184];
    }
    else
    {
      sub_252B5D1B8((uint64_t)(v62 + 21));
      char v69 = v63[184];
      *uint64_t v66 = *v68;
      *((unsigned char *)v62 + 184) = v69;
    }
  }
  else if (v67)
  {
    v62[21] = v67;
    v62[22] = *((void *)v63 + 22);
    *((unsigned char *)v62 + 184) = v63[184];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v70 = *v68;
    *((unsigned char *)v62 + 184) = v63[184];
    *uint64_t v66 = v70;
  }
  long long v71 = (int *)type metadata accessor for ResponseManifest(0);
  uint64_t v72 = v71[8];
  uint64_t v73 = (void *)((char *)v62 + v72);
  uint64_t v74 = (uint64_t *)&v63[v72];
  uint64_t v75 = type metadata accessor for ResponseVisual.UIType(0);
  int v76 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v73, 1, v75);
  int v77 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v73 = *v74;
          v73[1] = v74[1];
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v83 = sub_252D19C58();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v83 - 8) + 16))(v73, v74, v83);
          break;
        case 3u:
          uint64_t v84 = *v74;
          unint64_t v85 = v74[1];
          sub_252AC5A54(*v74, v85);
          *uint64_t v73 = v84;
          v73[1] = v85;
          v73[2] = v74[2];
          v73[3] = v74[3];
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v78 = *v74;
          unint64_t v79 = v74[1];
          sub_252AC5A54(*v74, v79);
          *uint64_t v73 = v78;
          v73[1] = v79;
          v73[2] = v74[2];
          v73[3] = v74[3];
          v73[4] = v74[4];
          v73[5] = v74[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v73, 0, 1, v75);
      goto LABEL_67;
    }
LABEL_55:
    uint64_t v80 = sub_252AC3A24(&qword_269C41A80);
    memcpy(v73, v74, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_67;
  }
  if (v77)
  {
    sub_252BA6670();
    goto LABEL_55;
  }
  if ((char *)v489 != v488)
  {
    sub_252BA6670();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v73 = *v74;
        v73[1] = v74[1];
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v86 = sub_252D19C58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v86 - 8) + 16))(v73, v74, v86);
        break;
      case 3u:
        uint64_t v87 = *v74;
        unint64_t v88 = v74[1];
        sub_252AC5A54(*v74, v88);
        *uint64_t v73 = v87;
        v73[1] = v88;
        v73[2] = v74[2];
        v73[3] = v74[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v81 = *v74;
        unint64_t v82 = v74[1];
        sub_252AC5A54(*v74, v82);
        *uint64_t v73 = v81;
        v73[1] = v82;
        v73[2] = v74[2];
        v73[3] = v74[3];
        v73[4] = v74[4];
        v73[5] = v74[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_67:
  uint64_t v89 = v71[9];
  uint64_t v90 = (void *)((char *)v62 + v89);
  v91 = &v63[v89];
  void *v90 = *(void *)v91;
  v90[1] = *((void *)v91 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = v71[10];
  uint64_t v93 = (void *)((char *)v62 + v92);
  uint64_t v94 = &v63[v92];
  *uint64_t v93 = *(void *)v94;
  v93[1] = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v62 + v71[11]) = v63[v71[11]];
  *((unsigned char *)v62 + v71[12]) = v63[v71[12]];
  uint64_t v95 = v60;
  uint64_t v96 = v60[9];
  uint64_t v97 = v488;
  uint64_t v98 = (char *)(v489 + v96);
  uint64_t v99 = &v488[v96];
  uint64_t v100 = (int *)type metadata accessor for ResponseOutput(0);
  int v101 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v98, 1, (uint64_t)v100);
  int v102 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v99, 1, (uint64_t)v100);
  if (!v101)
  {
    if (v102)
    {
      sub_252BA6670();
      goto LABEL_73;
    }
    *(void *)uint64_t v98 = *(void *)v99;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v107 = (long long *)(v98 + 8);
    uint64_t v108 = (long long *)(v99 + 8);
    int v109 = v99[24];
    if (v98[24] == 255)
    {
      if (v109 == 255)
      {
        long long v160 = *v108;
        v98[24] = v99[24];
        *uint64_t v107 = v160;
      }
      else
      {
        uint64_t v125 = *((void *)v99 + 1);
        uint64_t v126 = *((void *)v99 + 2);
        sub_252ACE7E4(v125, v126, v99[24]);
        *((void *)v98 + 1) = v125;
        *((void *)v98 + 2) = v126;
        v98[24] = v109;
      }
    }
    else if (v109 == 255)
    {
      sub_252B6B294((uint64_t)(v98 + 8));
      char v127 = v99[24];
      *uint64_t v107 = *v108;
      v98[24] = v127;
    }
    else
    {
      uint64_t v110 = *((void *)v99 + 1);
      uint64_t v111 = *((void *)v99 + 2);
      sub_252ACE7E4(v110, v111, v99[24]);
      uint64_t v112 = *((void *)v98 + 1);
      uint64_t v113 = *((void *)v98 + 2);
      *((void *)v98 + 1) = v110;
      *((void *)v98 + 2) = v111;
      unsigned __int8 v114 = v98[24];
      v98[24] = v109;
      sub_252AD170C(v112, v113, v114);
    }
    uint64_t v161 = (long long *)(v98 + 32);
    uint64_t v162 = (long long *)(v99 + 32);
    int v163 = v99[48];
    if (v98[48] == 255)
    {
      if (v163 == 255)
      {
        long long v172 = *v162;
        v98[48] = v99[48];
        long long *v161 = v172;
      }
      else
      {
        uint64_t v169 = *((void *)v99 + 4);
        uint64_t v170 = *((void *)v99 + 5);
        sub_252ACE7E4(v169, v170, v99[48]);
        *((void *)v98 + 4) = v169;
        *((void *)v98 + 5) = v170;
        v98[48] = v163;
      }
    }
    else if (v163 == 255)
    {
      sub_252B6B294((uint64_t)(v98 + 32));
      char v171 = v99[48];
      long long *v161 = *v162;
      v98[48] = v171;
    }
    else
    {
      uint64_t v164 = *((void *)v99 + 4);
      uint64_t v165 = *((void *)v99 + 5);
      sub_252ACE7E4(v164, v165, v99[48]);
      uint64_t v166 = *((void *)v98 + 4);
      uint64_t v167 = *((void *)v98 + 5);
      *((void *)v98 + 4) = v164;
      *((void *)v98 + 5) = v165;
      unsigned __int8 v168 = v98[48];
      v98[48] = v163;
      sub_252AD170C(v166, v167, v168);
    }
    uint64_t v173 = v100[7];
    uint64_t v174 = &v98[v173];
    v175 = &v99[v173];
    uint64_t v176 = type metadata accessor for ResponseOutput.VisualOutput(0);
    int v177 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v174, 1, v176);
    int v178 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v175, 1, v176);
    if (v177)
    {
      if (!v178)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            type metadata accessor for RGPluginModel(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v175, 1, v487))
                {
                  uint64_t v229 = sub_252AC3A24(&qword_26B2320E8);
                  memcpy(v174, v175, *(void *)(*(void *)(v229 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v174, v175, v487);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v174, 0, 1, v487);
                }
                v291 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                __srch = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                __srch(&v174[v291[5]], &v175[v291[5]]);
                uint64_t v292 = v291[6];
                v293 = &v174[v292];
                v294 = &v175[v292];
                *(_DWORD *)v293 = *(_DWORD *)v294;
                *((void *)v293 + 1) = *((void *)v294 + 1);
                *((void *)v293 + 2) = *((void *)v294 + 2);
                uint64_t v295 = v291[7];
                __dsth = &v174[v295];
                v452 = v291;
                v433 = &v175[v295];
                uint64_t v296 = sub_252D19408();
                v297 = *(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16);
                swift_bridgeObjectRetain();
                v297(__dsth, v433, v296);
                v297(&v174[v452[8]], &v175[v452[8]], v296);
                ((void (*)(char *, char *, uint64_t))__srch)(&v174[v452[9]], &v175[v452[9]], v487);
                break;
              case 2u:
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v175, 1, v487))
                {
                  uint64_t v230 = sub_252AC3A24(&qword_26B2320E8);
                  memcpy(v174, v175, *(void *)(*(void *)(v230 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v174, v175, v487);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v174, 0, 1, v487);
                }
                v298 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                v424 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                v424(&v174[v298[5]], &v175[v298[5]]);
                uint64_t v299 = v298[6];
                v300 = &v174[v299];
                v301 = &v175[v299];
                *(_DWORD *)v300 = *(_DWORD *)v301;
                *((void *)v300 + 1) = *((void *)v301 + 1);
                *((void *)v300 + 2) = *((void *)v301 + 2);
                uint64_t v302 = v298[7];
                v303 = &v174[v302];
                __srci = &v175[v302];
                v474 = v298;
                uint64_t v304 = sub_252D19408();
                v453 = *(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 16);
                uint64_t v305 = v304;
                swift_bridgeObjectRetain();
                v453(v303, __srci, v305);
                uint64_t v434 = v305;
                v453(&v174[v474[8]], &v175[v474[8]], v305);
                uint64_t v306 = v298[9];
                v307 = &v174[v306];
                v308 = &v175[v306];
                uint64_t v309 = type metadata accessor for RGDisplayRepresentation(0);
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v308, 1, v309))
                {
                  uint64_t v310 = sub_252AC3A24(&qword_269C41AA0);
                  memcpy(v307, v308, *(void *)(*(void *)(v310 - 8) + 64));
                }
                else
                {
                  v453(v307, v308, v434);
                  __srca = (int *)v309;
                  uint64_t v316 = *(int *)(v309 + 20);
                  __dsta = v307;
                  v317 = &v307[v316];
                  v427 = v308;
                  v318 = &v308[v316];
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v308[v316], 1, v434))
                  {
                    uint64_t v319 = sub_252AC3A24(&qword_269C41A90);
                    memcpy(v317, v318, *(void *)(*(void *)(v319 - 8) + 64));
                  }
                  else
                  {
                    v453(v317, v318, v434);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v317, 0, 1, v434);
                  }
                  uint64_t v362 = __srca[6];
                  v421 = &__dsta[v362];
                  v363 = &v308[v362];
                  uint64_t v364 = sub_252D19C68();
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v363, 1, v364))
                  {
                    uint64_t v365 = sub_252AC3A24(&qword_269C41A98);
                    memcpy(v421, v363, *(void *)(*(void *)(v365 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 16))(v421, v363, v364);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v421, 0, 1, v364);
                  }
                  uint64_t v371 = __srca[7];
                  v372 = &__dsta[v371];
                  v373 = &v308[v371];
                  *(void *)v372 = *(void *)v373;
                  *((void *)v372 + 1) = *((void *)v373 + 1);
                  uint64_t v374 = __srca[8];
                  v375 = &__dsta[v374];
                  v376 = &v308[v374];
                  unint64_t v377 = *(void *)&v427[v374 + 8];
                  swift_bridgeObjectRetain();
                  if (v377 >> 60 == 15)
                  {
                    *(_OWORD *)v375 = *(_OWORD *)v376;
                  }
                  else
                  {
                    uint64_t v378 = *(void *)v376;
                    sub_252AC5A54(v378, v377);
                    *(void *)v375 = v378;
                    *((void *)v375 + 1) = v377;
                  }
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, (uint64_t)__srca);
                }
                uint64_t v379 = v474[10];
                __dstd = &v174[v379];
                __srcd = &v175[v379];
                uint64_t v430 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srcd, 1, v430))
                {
                  uint64_t v380 = sub_252AC3A24(&qword_269C41AA8);
                  memcpy(__dstd, __srcd, *(void *)(*(void *)(v380 - 8) + 64));
                }
                else
                {
                  v453(__dstd, __srcd, v434);
                  uint64_t v381 = *(int *)(v430 + 20);
                  v382 = &__dstd[v381];
                  v383 = &__srcd[v381];
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__srcd[v381], 1, v434))
                  {
                    uint64_t v384 = sub_252AC3A24(&qword_269C41A90);
                    memcpy(v382, v383, *(void *)(*(void *)(v384 - 8) + 64));
                  }
                  else
                  {
                    v453(v382, v383, v434);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v382, 0, 1, v434);
                  }
                  uint64_t v385 = *(int *)(v430 + 24);
                  uint64_t v386 = (uint64_t)__dstd;
                  v458 = &__dstd[v385];
                  v387 = &__srcd[v385];
                  uint64_t v388 = sub_252D19C68();
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v387, 1, v388))
                  {
                    uint64_t v389 = sub_252AC3A24(&qword_269C41A98);
                    memcpy(v458, v387, *(void *)(*(void *)(v389 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v388 - 8) + 16))(v458, v387, v388);
                    uint64_t v386 = (uint64_t)__dstd;
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v458, 0, 1, v388);
                  }
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v386, 0, 1, v430);
                }
                ((void (*)(char *, char *, uint64_t))v424)(&v174[v474[11]], &v175[v474[11]], v487);
                break;
              case 3u:
                v472 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                v472(v174, v175);
                uint64_t v231 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                ((void (*)(char *, char *, uint64_t))v472)(&v174[v231[5]], &v175[v231[5]], v487);
                uint64_t v232 = v231[6];
                uint64_t v233 = &v174[v232];
                uint64_t v234 = &v175[v232];
                *(_DWORD *)uint64_t v233 = *(_DWORD *)v234;
                *((void *)v233 + 1) = *((void *)v234 + 1);
                *((void *)v233 + 2) = *((void *)v234 + 2);
                *(void *)&v174[v231[7]] = *(void *)&v175[v231[7]];
                *(void *)&v174[v231[8]] = *(void *)&v175[v231[8]];
                uint64_t v235 = v231[9];
                uint64_t v236 = &v174[v235];
                uint64_t v237 = &v175[v235];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v191 = v236;
                uint64_t v192 = v237;
                goto LABEL_142;
              case 4u:
                uint64_t v238 = *(void *)v175;
                unint64_t v239 = *((void *)v175 + 1);
                sub_252AC5A54(*(void *)v175, v239);
                *(void *)uint64_t v174 = v238;
                *((void *)v174 + 1) = v239;
                break;
              case 5u:
                uint64_t v240 = *(void *)v175;
                unint64_t v241 = *((void *)v175 + 1);
                sub_252AC5A54(*(void *)v175, v241);
                *(void *)uint64_t v174 = v240;
                *((void *)v174 + 1) = v241;
                *((void *)v174 + 2) = *((void *)v175 + 2);
                *((void *)v174 + 3) = *((void *)v175 + 3);
                *((void *)v174 + 4) = *((void *)v175 + 4);
                *((void *)v174 + 5) = *((void *)v175 + 5);
                swift_bridgeObjectRetain();
                goto LABEL_149;
              case 6u:
                uint64_t v242 = *(void *)v175;
                unint64_t v243 = *((void *)v175 + 1);
                sub_252AC5A54(*(void *)v175, v243);
                *(void *)uint64_t v174 = v242;
                *((void *)v174 + 1) = v243;
                *((void *)v174 + 2) = *((void *)v175 + 2);
                *((void *)v174 + 3) = *((void *)v175 + 3);
                uint64_t v244 = v175 + 32;
                unint64_t v245 = *((void *)v175 + 5);
                swift_bridgeObjectRetain();
                if (v245 >> 60 == 15)
                {
                  *((_OWORD *)v174 + 2) = *v244;
                }
                else
                {
                  uint64_t v271 = *(void *)v244;
                  sub_252AC5A54(v271, v245);
                  *((void *)v174 + 4) = v271;
                  *((void *)v174 + 5) = v245;
                }
                *((void *)v174 + 6) = *((void *)v175 + 6);
                *((void *)v174 + 7) = *((void *)v175 + 7);
                swift_bridgeObjectRetain();
                break;
              case 7u:
                uint64_t v246 = sub_252D19C58();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16))(v174, v175, v246);
                break;
              case 8u:
                *(void *)uint64_t v174 = *(void *)v175;
                *((void *)v174 + 1) = *((void *)v175 + 1);
LABEL_149:
                swift_bridgeObjectRetain();
                break;
              default:
                v472 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                v472(v174, v175);
                uint64_t v180 = (int *)type metadata accessor for RGDisambiguationModel(0);
                ((void (*)(char *, char *, uint64_t))v472)(&v174[v180[5]], &v175[v180[5]], v487);
                uint64_t v181 = v180[6];
                uint64_t v182 = &v174[v181];
                unint64_t v183 = &v175[v181];
                *(_DWORD *)uint64_t v182 = *(_DWORD *)v183;
                *((void *)v182 + 1) = *((void *)v183 + 1);
                *((void *)v182 + 2) = *((void *)v183 + 2);
                *(void *)&v174[v180[7]] = *(void *)&v175[v180[7]];
                *(void *)&v174[v180[8]] = *(void *)&v175[v180[8]];
                uint64_t v184 = v180[9];
                __dstf = &v175[v184];
                v448 = &v174[v184];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                ((void (*)(char *, char *, uint64_t))v472)(v448, __dstf, v487);
                uint64_t v185 = v180[10];
                uint64_t v186 = &v174[v185];
                unint64_t v187 = &v175[v185];
                *(void *)uint64_t v186 = *(void *)v187;
                *((void *)v186 + 1) = *((void *)v187 + 1);
                uint64_t v188 = v180[11];
                uint64_t v189 = &v174[v188];
                unint64_t v190 = &v175[v188];
                swift_bridgeObjectRetain();
                uint64_t v191 = v189;
                uint64_t v192 = v190;
LABEL_142:
                ((void (*)(char *, char *, uint64_t))v472)(v191, v192, v487);
                break;
            }
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v193 = *(void *)v175;
            unint64_t v194 = *((void *)v175 + 1);
            sub_252AC5A54(*(void *)v175, v194);
            *(void *)uint64_t v174 = v193;
            *((void *)v174 + 1) = v194;
            *((void *)v174 + 2) = *((void *)v175 + 2);
            *((void *)v174 + 3) = *((void *)v175 + 3);
            goto LABEL_118;
          default:
            *(void *)uint64_t v174 = *(void *)v175;
            *((void *)v174 + 1) = *((void *)v175 + 1);
LABEL_118:
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v174, 0, 1, v176);
        goto LABEL_249;
      }
    }
    else
    {
      if (!v178)
      {
        if ((char *)v489 != v488)
        {
          sub_252BA6670();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              type metadata accessor for RGPluginModel(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v175, 1, v487))
                  {
                    uint64_t v272 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v174, v175, *(void *)(*(void *)(v272 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v174, v175, v487);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v174, 0, 1, v487);
                  }
                  v342 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                  v475 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                  v475(&v174[v342[5]], &v175[v342[5]]);
                  uint64_t v343 = v342[6];
                  v344 = &v174[v343];
                  v345 = &v175[v343];
                  *(_DWORD *)v344 = *(_DWORD *)v345;
                  *((void *)v344 + 1) = *((void *)v345 + 1);
                  *((void *)v344 + 2) = *((void *)v345 + 2);
                  uint64_t v346 = v342[7];
                  v455 = &v174[v346];
                  __srcj = v342;
                  __dsti = &v175[v346];
                  uint64_t v347 = sub_252D19408();
                  v348 = *(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v348(v455, __dsti, v347);
                  v348(&v174[__srcj[8]], &v175[__srcj[8]], v347);
                  ((void (*)(char *, char *, uint64_t))v475)(&v174[__srcj[9]], &v175[__srcj[9]], v487);
                  break;
                case 2u:
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v175, 1, v487))
                  {
                    uint64_t v273 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v174, v175, *(void *)(*(void *)(v273 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v174, v175, v487);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v174, 0, 1, v487);
                  }
                  v349 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                  v429 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                  v429(&v174[v349[5]], &v175[v349[5]]);
                  uint64_t v350 = v349[6];
                  v351 = &v174[v350];
                  v352 = &v175[v350];
                  *(_DWORD *)v351 = *(_DWORD *)v352;
                  *((void *)v351 + 1) = *((void *)v352 + 1);
                  *((void *)v351 + 2) = *((void *)v352 + 2);
                  uint64_t v353 = v349[7];
                  v354 = &v174[v353];
                  v456 = &v175[v353];
                  uint64_t v355 = sub_252D19408();
                  v476 = *(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 16);
                  uint64_t v356 = v355;
                  swift_bridgeObjectRetain();
                  v476(v354, v456, v356);
                  uint64_t v425 = v356;
                  v476(&v174[v349[8]], &v175[v349[8]], v356);
                  __srcc = v349;
                  uint64_t v357 = v349[9];
                  v358 = &v174[v357];
                  v359 = &v175[v357];
                  uint64_t v360 = type metadata accessor for RGDisplayRepresentation(0);
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v359, 1, v360))
                  {
                    uint64_t v361 = sub_252AC3A24(&qword_269C41AA0);
                    memcpy(v358, v359, *(void *)(*(void *)(v361 - 8) + 64));
                  }
                  else
                  {
                    v457 = v358;
                    v476(v358, v359, v425);
                    v435 = v359;
                    __dstc = (int *)v360;
                    uint64_t v366 = *(int *)(v360 + 20);
                    v367 = v359;
                    v368 = &v358[v366];
                    v369 = &v367[v366];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v367[v366], 1, v425))
                    {
                      uint64_t v370 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v368, v369, *(void *)(*(void *)(v370 - 8) + 64));
                    }
                    else
                    {
                      v476(v368, v369, v425);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v368, 0, 1, v425);
                    }
                    uint64_t v390 = *(int *)(v360 + 24);
                    v391 = &v457[v390];
                    v392 = &v435[v390];
                    uint64_t v393 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v392, 1, v393))
                    {
                      uint64_t v394 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v391, v392, *(void *)(*(void *)(v394 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v393 - 8) + 16))(v391, v392, v393);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v391, 0, 1, v393);
                    }
                    uint64_t v395 = __dstc[7];
                    v396 = &v457[v395];
                    v397 = &v435[v395];
                    *(void *)v396 = *(void *)v397;
                    *((void *)v396 + 1) = *((void *)v397 + 1);
                    uint64_t v398 = __dstc[8];
                    v399 = &v457[v398];
                    v400 = &v435[v398];
                    unint64_t v401 = *(void *)&v435[v398 + 8];
                    swift_bridgeObjectRetain();
                    if (v401 >> 60 == 15)
                    {
                      *(_OWORD *)v399 = *(_OWORD *)v400;
                    }
                    else
                    {
                      uint64_t v402 = *(void *)v400;
                      sub_252AC5A54(v402, v401);
                      *(void *)v399 = v402;
                      *((void *)v399 + 1) = v401;
                    }
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v457, 0, 1, (uint64_t)__dstc);
                  }
                  uint64_t v403 = __srcc[10];
                  v459 = &v174[v403];
                  v404 = &v175[v403];
                  uint64_t v436 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v404, 1, v436))
                  {
                    uint64_t v405 = sub_252AC3A24(&qword_269C41AA8);
                    memcpy(v459, v404, *(void *)(*(void *)(v405 - 8) + 64));
                  }
                  else
                  {
                    v476(v459, v404, v425);
                    uint64_t v406 = *(int *)(v436 + 20);
                    v422 = &v459[v406];
                    v407 = &v404[v406];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v404[v406], 1, v425))
                    {
                      uint64_t v408 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v422, v407, *(void *)(*(void *)(v408 - 8) + 64));
                    }
                    else
                    {
                      v476(v422, v407, v425);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v422, 0, 1, v425);
                    }
                    uint64_t v409 = *(int *)(v436 + 24);
                    uint64_t v410 = (uint64_t)v459;
                    v478 = &v459[v409];
                    v411 = &v404[v409];
                    uint64_t v412 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v411, 1, v412))
                    {
                      uint64_t v413 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v478, v411, *(void *)(*(void *)(v413 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 16))(v478, v411, v412);
                      uint64_t v410 = (uint64_t)v459;
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v478, 0, 1, v412);
                    }
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v410, 0, 1, v436);
                  }
                  ((void (*)(char *, char *, uint64_t))v429)(&v174[__srcc[11]], &v175[__srcc[11]], v487);
                  break;
                case 3u:
                  v274 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                  v274(v174, v175);
                  v275 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v274)(&v174[v275[5]], &v175[v275[5]], v487);
                  uint64_t v276 = v275[6];
                  v277 = &v174[v276];
                  uint64_t v278 = &v175[v276];
                  *(_DWORD *)v277 = *(_DWORD *)v278;
                  *((void *)v277 + 1) = *((void *)v278 + 1);
                  *((void *)v277 + 2) = *((void *)v278 + 2);
                  *(void *)&v174[v275[7]] = *(void *)&v175[v275[7]];
                  *(void *)&v174[v275[8]] = *(void *)&v175[v275[8]];
                  uint64_t v279 = v275[9];
                  v280 = &v174[v279];
                  v281 = &v175[v279];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v274)(v280, v281, v487);
                  break;
                case 4u:
                  uint64_t v282 = *(void *)v175;
                  unint64_t v283 = *((void *)v175 + 1);
                  sub_252AC5A54(*(void *)v175, v283);
                  *(void *)uint64_t v174 = v282;
                  *((void *)v174 + 1) = v283;
                  break;
                case 5u:
                  uint64_t v284 = *(void *)v175;
                  unint64_t v285 = *((void *)v175 + 1);
                  sub_252AC5A54(*(void *)v175, v285);
                  *(void *)uint64_t v174 = v284;
                  *((void *)v174 + 1) = v285;
                  *((void *)v174 + 2) = *((void *)v175 + 2);
                  *((void *)v174 + 3) = *((void *)v175 + 3);
                  *((void *)v174 + 4) = *((void *)v175 + 4);
                  *((void *)v174 + 5) = *((void *)v175 + 5);
                  swift_bridgeObjectRetain();
                  goto LABEL_170;
                case 6u:
                  uint64_t v286 = *(void *)v175;
                  unint64_t v287 = *((void *)v175 + 1);
                  sub_252AC5A54(*(void *)v175, v287);
                  *(void *)uint64_t v174 = v286;
                  *((void *)v174 + 1) = v287;
                  *((void *)v174 + 2) = *((void *)v175 + 2);
                  *((void *)v174 + 3) = *((void *)v175 + 3);
                  unint64_t v288 = v175 + 32;
                  unint64_t v289 = *((void *)v175 + 5);
                  swift_bridgeObjectRetain();
                  if (v289 >> 60 == 15)
                  {
                    *((_OWORD *)v174 + 2) = *v288;
                  }
                  else
                  {
                    uint64_t v341 = *(void *)v288;
                    sub_252AC5A54(v341, v289);
                    *((void *)v174 + 4) = v341;
                    *((void *)v174 + 5) = v289;
                  }
                  *((void *)v174 + 6) = *((void *)v175 + 6);
                  *((void *)v174 + 7) = *((void *)v175 + 7);
                  swift_bridgeObjectRetain();
                  break;
                case 7u:
                  uint64_t v290 = sub_252D19C58();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16))(v174, v175, v290);
                  break;
                case 8u:
                  *(void *)uint64_t v174 = *(void *)v175;
                  *((void *)v174 + 1) = *((void *)v175 + 1);
LABEL_170:
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v195 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
                  v195(v174, v175);
                  uint64_t v196 = (int *)type metadata accessor for RGDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v195)(&v174[v196[5]], &v175[v196[5]], v487);
                  uint64_t v197 = v196[6];
                  v198 = &v174[v197];
                  uint64_t v199 = &v175[v197];
                  *(_DWORD *)v198 = *(_DWORD *)v199;
                  *((void *)v198 + 1) = *((void *)v199 + 1);
                  *((void *)v198 + 2) = *((void *)v199 + 2);
                  *(void *)&v174[v196[7]] = *(void *)&v175[v196[7]];
                  *(void *)&v174[v196[8]] = *(void *)&v175[v196[8]];
                  uint64_t v200 = v196[9];
                  v449 = &v175[v200];
                  __srce = &v174[v200];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v195)(__srce, v449, v487);
                  uint64_t v201 = v196[10];
                  v202 = &v174[v201];
                  uint64_t v203 = &v175[v201];
                  *(void *)v202 = *(void *)v203;
                  *((void *)v202 + 1) = *((void *)v203 + 1);
                  uint64_t v204 = v196[11];
                  uint64_t v205 = &v174[v204];
                  uint64_t v206 = &v175[v204];
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v195)(v205, v206, v487);
                  break;
              }
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v207 = *(void *)v175;
              unint64_t v208 = *((void *)v175 + 1);
              sub_252AC5A54(*(void *)v175, v208);
              *(void *)uint64_t v174 = v207;
              *((void *)v174 + 1) = v208;
              *((void *)v174 + 2) = *((void *)v175 + 2);
              *((void *)v174 + 3) = *((void *)v175 + 3);
              swift_bridgeObjectRetain();
              break;
            default:
              *(void *)uint64_t v174 = *(void *)v175;
              *((void *)v174 + 1) = *((void *)v175 + 1);
              swift_bridgeObjectRetain();
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_249;
      }
      sub_252BA6670();
    }
    uint64_t v179 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
LABEL_249:
    v98[v100[8]] = v99[v100[8]];
    v98[v100[9]] = v99[v100[9]];
    *(void *)&v98[v100[10]] = *(void *)&v99[v100[10]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v414 = v100[11];
    v415 = &v98[v414];
    v416 = &v99[v414];
    *(void *)v415 = *(void *)v416;
    *((void *)v415 + 1) = *((void *)v416 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v97 = v488;
LABEL_250:
    uint64_t v95 = v60;
    goto LABEL_251;
  }
  if (!v102)
  {
    *(void *)uint64_t v98 = *(void *)v99;
    int v103 = v99[24];
    swift_bridgeObjectRetain();
    if (v103 == 255)
    {
      long long v115 = *(_OWORD *)(v99 + 8);
      v98[24] = v99[24];
      *(_OWORD *)(v98 + 8) = v115;
    }
    else
    {
      uint64_t v104 = *((void *)v99 + 1);
      uint64_t v105 = *((void *)v99 + 2);
      sub_252ACE7E4(v104, v105, v103);
      *((void *)v98 + 1) = v104;
      *((void *)v98 + 2) = v105;
      v98[24] = v103;
    }
    int v116 = v99[48];
    if (v116 == 255)
    {
      long long v119 = *((_OWORD *)v99 + 2);
      v98[48] = v99[48];
      *((_OWORD *)v98 + 2) = v119;
    }
    else
    {
      uint64_t v117 = *((void *)v99 + 4);
      uint64_t v118 = *((void *)v99 + 5);
      sub_252ACE7E4(v117, v118, v99[48]);
      *((void *)v98 + 4) = v117;
      *((void *)v98 + 5) = v118;
      v98[48] = v116;
    }
    uint64_t v120 = v100[7];
    uint64_t v121 = &v98[v120];
    int v122 = &v99[v120];
    uint64_t v123 = type metadata accessor for ResponseOutput.VisualOutput(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v123))
    {
      uint64_t v124 = sub_252AC3A24(&qword_269C41AB0);
      memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
      uint64_t v97 = v488;
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v487))
              {
                uint64_t v209 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v121, v122, *(void *)(*(void *)(v209 - 8) + 64));
                uint64_t v210 = v487;
              }
              else
              {
                uint64_t v210 = v487;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v121, v122, v487);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v487);
              }
              uint64_t v247 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              __srcf = *(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16);
              __srcf(&v121[v247[5]], &v122[v247[5]], v210);
              uint64_t v248 = v247[6];
              v249 = &v121[v248];
              uint64_t v250 = &v122[v248];
              *(_DWORD *)v249 = *(_DWORD *)v250;
              *((void *)v249 + 1) = *((void *)v250 + 1);
              *((void *)v249 + 2) = *((void *)v250 + 2);
              uint64_t v251 = v247[7];
              __dstg = &v121[v251];
              v450 = v247;
              v431 = &v122[v251];
              uint64_t v252 = sub_252D19408();
              v253 = *(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 16);
              swift_bridgeObjectRetain();
              v253(__dstg, v431, v252);
              v253(&v121[v450[8]], &v122[v450[8]], v252);
              __srcf(&v121[v450[9]], &v122[v450[9]], v487);
              break;
            case 2u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v487))
              {
                uint64_t v211 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v121, v122, *(void *)(*(void *)(v211 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v121, v122, v487);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v487);
              }
              v254 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              v423 = *(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16);
              v423(&v121[v254[5]], &v122[v254[5]], v487);
              uint64_t v255 = v254[6];
              v256 = &v121[v255];
              uint64_t v257 = &v122[v255];
              *(_DWORD *)v256 = *(_DWORD *)v257;
              *((void *)v256 + 1) = *((void *)v257 + 1);
              *((void *)v256 + 2) = *((void *)v257 + 2);
              uint64_t v258 = v254[7];
              v259 = &v121[v258];
              __srcg = &v122[v258];
              v473 = v254;
              uint64_t v260 = sub_252D19408();
              v451 = *(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16);
              uint64_t v261 = v260;
              swift_bridgeObjectRetain();
              v451(v259, __srcg, v261);
              uint64_t v432 = v261;
              v451(&v121[v473[8]], &v122[v473[8]], v261);
              uint64_t v262 = v254[9];
              v263 = &v121[v262];
              v264 = &v122[v262];
              uint64_t v265 = type metadata accessor for RGDisplayRepresentation(0);
              __src = v264;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v264, 1, v265))
              {
                uint64_t v266 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(v263, v264, *(void *)(*(void *)(v266 - 8) + 64));
              }
              else
              {
                v451(v263, v264, v432);
                uint64_t v426 = v265;
                uint64_t v267 = *(int *)(v265 + 20);
                __dst = v263;
                v268 = &v263[v267];
                v269 = &__src[v267];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__src[v267], 1, v432))
                {
                  uint64_t v270 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
                }
                else
                {
                  v451(v268, v269, v432);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v268, 0, 1, v432);
                }
                uint64_t v311 = *(int *)(v265 + 24);
                v312 = &__dst[v311];
                v313 = &__src[v311];
                uint64_t v314 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v313, 1, v314))
                {
                  uint64_t v315 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v312, v313, *(void *)(*(void *)(v315 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 16))(v312, v313, v314);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v312, 0, 1, v314);
                }
                uint64_t v320 = *(int *)(v426 + 28);
                v321 = &__dst[v320];
                v322 = &__src[v320];
                *(void *)v321 = *(void *)v322;
                *((void *)v321 + 1) = *((void *)v322 + 1);
                uint64_t v323 = *(int *)(v426 + 32);
                v324 = &__dst[v323];
                v325 = &__src[v323];
                unint64_t v326 = *(void *)&__src[v323 + 8];
                swift_bridgeObjectRetain();
                if (v326 >> 60 == 15)
                {
                  *(_OWORD *)v324 = *(_OWORD *)v325;
                }
                else
                {
                  uint64_t v327 = *(void *)v325;
                  sub_252AC5A54(v327, v326);
                  *(void *)v324 = v327;
                  *((void *)v324 + 1) = v326;
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v426);
              }
              uint64_t v328 = v473[10];
              __dstb = &v121[v328];
              __srcb = &v122[v328];
              uint64_t v428 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srcb, 1, v428))
              {
                uint64_t v329 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(__dstb, __srcb, *(void *)(*(void *)(v329 - 8) + 64));
              }
              else
              {
                v451(__dstb, __srcb, v432);
                uint64_t v330 = *(int *)(v428 + 20);
                v331 = &__dstb[v330];
                v332 = &__srcb[v330];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__srcb[v330], 1, v432))
                {
                  uint64_t v333 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v331, v332, *(void *)(*(void *)(v333 - 8) + 64));
                }
                else
                {
                  v451(v331, v332, v432);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v331, 0, 1, v432);
                }
                uint64_t v334 = *(int *)(v428 + 24);
                v454 = &__dstb[v334];
                v335 = &__srcb[v334];
                uint64_t v336 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v335, 1, v336))
                {
                  uint64_t v337 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v454, v335, *(void *)(*(void *)(v337 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v454, v335, v336);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v454, 0, 1, v336);
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v428);
              }
              v423(&v121[v473[11]], &v122[v473[11]], v487);
              break;
            case 3u:
              v471 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
              v471(v121, v122);
              uint64_t v212 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v471)(&v121[v212[5]], &v122[v212[5]], v487);
              uint64_t v213 = v212[6];
              v214 = &v121[v213];
              uint64_t v215 = &v122[v213];
              *(_DWORD *)v214 = *(_DWORD *)v215;
              *((void *)v214 + 1) = *((void *)v215 + 1);
              *((void *)v214 + 2) = *((void *)v215 + 2);
              *(void *)&v121[v212[7]] = *(void *)&v122[v212[7]];
              *(void *)&v121[v212[8]] = *(void *)&v122[v212[8]];
              uint64_t v216 = v212[9];
              uint64_t v217 = &v121[v216];
              uint64_t v218 = &v122[v216];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v139 = v217;
              int v140 = v218;
              goto LABEL_127;
            case 4u:
              uint64_t v219 = *(void *)v122;
              unint64_t v220 = *((void *)v122 + 1);
              sub_252AC5A54(*(void *)v122, v220);
              *(void *)uint64_t v121 = v219;
              *((void *)v121 + 1) = v220;
              break;
            case 5u:
              uint64_t v221 = *(void *)v122;
              unint64_t v222 = *((void *)v122 + 1);
              sub_252AC5A54(*(void *)v122, v222);
              *(void *)uint64_t v121 = v221;
              *((void *)v121 + 1) = v222;
              *((void *)v121 + 2) = *((void *)v122 + 2);
              *((void *)v121 + 3) = *((void *)v122 + 3);
              *((void *)v121 + 4) = *((void *)v122 + 4);
              *((void *)v121 + 5) = *((void *)v122 + 5);
              swift_bridgeObjectRetain();
              goto LABEL_134;
            case 6u:
              uint64_t v223 = *(void *)v122;
              unint64_t v224 = *((void *)v122 + 1);
              sub_252AC5A54(*(void *)v122, v224);
              *(void *)uint64_t v121 = v223;
              *((void *)v121 + 1) = v224;
              *((void *)v121 + 2) = *((void *)v122 + 2);
              *((void *)v121 + 3) = *((void *)v122 + 3);
              uint64_t v225 = v122 + 32;
              unint64_t v226 = *((void *)v122 + 5);
              swift_bridgeObjectRetain();
              if (v226 >> 60 == 15)
              {
                *((_OWORD *)v121 + 2) = *v225;
              }
              else
              {
                uint64_t v228 = *(void *)v225;
                sub_252AC5A54(v228, v226);
                *((void *)v121 + 4) = v228;
                *((void *)v121 + 5) = v226;
              }
              *((void *)v121 + 6) = *((void *)v122 + 6);
              *((void *)v121 + 7) = *((void *)v122 + 7);
              swift_bridgeObjectRetain();
              break;
            case 7u:
              uint64_t v227 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16))(v121, v122, v227);
              break;
            case 8u:
              *(void *)uint64_t v121 = *(void *)v122;
              *((void *)v121 + 1) = *((void *)v122 + 1);
LABEL_134:
              swift_bridgeObjectRetain();
              break;
            default:
              v471 = *(void (**)(char *, char *))(*(void *)(v487 - 8) + 16);
              v471(v121, v122);
              uint64_t v128 = (int *)type metadata accessor for RGDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v471)(&v121[v128[5]], &v122[v128[5]], v487);
              uint64_t v129 = v128[6];
              uint64_t v130 = &v121[v129];
              uint64_t v131 = &v122[v129];
              *(_DWORD *)uint64_t v130 = *(_DWORD *)v131;
              *((void *)v130 + 1) = *((void *)v131 + 1);
              *((void *)v130 + 2) = *((void *)v131 + 2);
              *(void *)&v121[v128[7]] = *(void *)&v122[v128[7]];
              *(void *)&v121[v128[8]] = *(void *)&v122[v128[8]];
              uint64_t v132 = v128[9];
              __dste = &v122[v132];
              v447 = &v121[v132];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              ((void (*)(char *, char *, uint64_t))v471)(v447, __dste, v487);
              uint64_t v133 = v128[10];
              v134 = &v121[v133];
              v135 = &v122[v133];
              *(void *)v134 = *(void *)v135;
              *((void *)v134 + 1) = *((void *)v135 + 1);
              uint64_t v136 = v128[11];
              uint64_t v137 = &v121[v136];
              uint64_t v138 = &v122[v136];
              swift_bridgeObjectRetain();
              uint64_t v139 = v137;
              int v140 = v138;
LABEL_127:
              ((void (*)(char *, char *, uint64_t))v471)(v139, v140, v487);
              break;
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v141 = *(void *)v122;
          unint64_t v142 = *((void *)v122 + 1);
          sub_252AC5A54(*(void *)v122, v142);
          *(void *)uint64_t v121 = v141;
          *((void *)v121 + 1) = v142;
          *((void *)v121 + 2) = *((void *)v122 + 2);
          *((void *)v121 + 3) = *((void *)v122 + 3);
          goto LABEL_91;
        default:
          *(void *)uint64_t v121 = *(void *)v122;
          *((void *)v121 + 1) = *((void *)v122 + 1);
LABEL_91:
          swift_bridgeObjectRetain();
          break;
      }
      uint64_t v97 = v488;
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v123);
    }
    v98[v100[8]] = v99[v100[8]];
    v98[v100[9]] = v99[v100[9]];
    *(void *)&v98[v100[10]] = *(void *)&v99[v100[10]];
    uint64_t v338 = v100[11];
    v339 = &v98[v338];
    v340 = &v99[v338];
    *(void *)v339 = *(void *)v340;
    *((void *)v339 + 1) = *((void *)v340 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v98, 0, 1, (uint64_t)v100);
    goto LABEL_250;
  }
LABEL_73:
  uint64_t v106 = sub_252AC3A24(&qword_269C41AB8);
  memcpy(v98, v99, *(void *)(*(void *)(v106 - 8) + 64));
LABEL_251:
  uint64_t v417 = v95[10];
  v418 = (void *)(v489 + v417);
  v419 = &v97[v417];
  void *v418 = *(void *)v419;
  v418[1] = *((void *)v419 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v489;
}

char *initializeWithTake for ActionResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for ActionOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v141 = v6;
      uint64_t v13 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      uint64_t v14 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = &v10[v15];
      uint64_t v17 = &v11[v15];
      uint64_t v18 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *))(*(void *)(v141 - 8) + 32))(v16, v17);
        *(_OWORD *)&v16[*(int *)(v18 + 20)] = *(_OWORD *)&v17[*(int *)(v18 + 20)];
        *(_OWORD *)&v16[*(int *)(v18 + 24)] = *(_OWORD *)&v17[*(int *)(v18 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
      }
      v10[v14[6]] = v11[v14[6]];
      uint64_t v38 = v14[7];
      uint64_t v39 = &v10[v38];
      uint64_t v40 = &v11[v38];
      uint64_t v41 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
        uint64_t v43 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v44 = *(int *)(v43 + 20);
        uint64_t v137 = &v39[v44];
        uint64_t v139 = v43;
        uint64_t v132 = &v40[v44];
        uint64_t v45 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v137, v132, v45);
        *(void *)&v39[*(int *)(v139 + 24)] = *(void *)&v40[*(int *)(v139 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v39, 0, 1, v41);
      }
      uint64_t v6 = v141;
      v10[v14[8]] = v11[v14[8]];
      *(_OWORD *)&v10[v14[9]] = *(_OWORD *)&v11[v14[9]];
      goto LABEL_17;
    case 3u:
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      uint64_t v20 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v21 = &v10[v20];
      uint64_t v22 = &v11[v20];
      uint64_t v23 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      goto LABEL_17;
    case 4u:
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((void *)v10 + 2) = *((void *)v11 + 2);
      v10[24] = v11[24];
      uint64_t v24 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v25 = v24[6];
      uint64_t v26 = &v10[v25];
      uint64_t v27 = &v11[v25];
      uint64_t v28 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(_OWORD *)&v10[v24[7]] = *(_OWORD *)&v11[v24[7]];
      *(_OWORD *)&v10[v24[8]] = *(_OWORD *)&v11[v24[8]];
      goto LABEL_17;
    case 6u:
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      uint64_t v29 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v31 = &v10[v30];
      uint64_t v32 = &v11[v30];
      uint64_t v33 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      v10[*(int *)(v29 + 24)] = v11[*(int *)(v29 + 24)];
      goto LABEL_17;
    case 7u:
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      uint64_t v34 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v35 = &v10[v34];
      uint64_t v36 = &v11[v34];
      uint64_t v37 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      break;
  }
  uint64_t v46 = a3[8];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  *(void *)&a1[v46] = *(void *)&a2[v46];
  memcpy(&a1[v46 + 8], &a2[v46 + 8], 0x50uLL);
  memcpy(v47 + 88, v48 + 88, 0x61uLL);
  uint64_t v49 = (int *)type metadata accessor for ResponseManifest(0);
  uint64_t v50 = v49[8];
  uint64_t v51 = &v47[v50];
  uint64_t v52 = &v48[v50];
  uint64_t v53 = type metadata accessor for ResponseVisual.UIType(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v52, 1, v53))
  {
    uint64_t v54 = sub_252AC3A24(&qword_269C41A80);
    memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v55 = sub_252D19C58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v51, v52, v55);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v51, 0, 1, v53);
  }
  *(_OWORD *)&v47[v49[9]] = *(_OWORD *)&v48[v49[9]];
  *(_OWORD *)&v47[v49[10]] = *(_OWORD *)&v48[v49[10]];
  v47[v49[11]] = v48[v49[11]];
  v47[v49[12]] = v48[v49[12]];
  uint64_t v56 = a3[9];
  char v57 = &a1[v56];
  long long v58 = &a2[v56];
  long long v59 = (int *)type metadata accessor for ResponseOutput(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v58, 1, (uint64_t)v59))
  {
    uint64_t v60 = sub_252AC3A24(&qword_269C41AB8);
    memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    uint64_t v142 = v6;
    *(void *)char v57 = *(void *)v58;
    *(_OWORD *)(v57 + 8) = *(_OWORD *)(v58 + 8);
    v57[24] = v58[24];
    *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
    v57[48] = v58[48];
    uint64_t v61 = v59[7];
    uint64_t v62 = &v57[v61];
    uint64_t v63 = &v58[v61];
    uint64_t v64 = type metadata accessor for ResponseOutput.VisualOutput(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v63, 1, v64))
    {
      uint64_t v65 = sub_252AC3A24(&qword_269C41AB0);
      memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v140 = type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v133 = *(void (**)(char *, char *))(*(void *)(v142 - 8) + 32);
            v133(v62, v63);
            uint64_t v66 = (int *)type metadata accessor for RGDisambiguationModel(0);
            ((void (*)(char *, char *, uint64_t))v133)(&v62[v66[5]], &v63[v66[5]], v142);
            uint64_t v67 = v66[6];
            uint64_t v68 = &v62[v67];
            char v69 = &v63[v67];
            *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
            *((void *)v68 + 2) = *((void *)v69 + 2);
            *(void *)&v62[v66[7]] = *(void *)&v63[v66[7]];
            *(void *)&v62[v66[8]] = *(void *)&v63[v66[8]];
            ((void (*)(char *, char *, uint64_t))v133)(&v62[v66[9]], &v63[v66[9]], v142);
            *(_OWORD *)&v62[v66[10]] = *(_OWORD *)&v63[v66[10]];
            ((void (*)(char *, char *, uint64_t))v133)(&v62[v66[11]], &v63[v66[11]], v142);
            goto LABEL_61;
          case 1u:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v63, 1, v142))
            {
              uint64_t v70 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v62, v63, *(void *)(*(void *)(v70 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v62, v63, v142);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v142);
            }
            int v77 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            int v122 = *(void (**)(char *, char *))(*(void *)(v142 - 8) + 32);
            v122(&v62[v77[5]], &v63[v77[5]]);
            v135 = v77;
            uint64_t v78 = v77[6];
            unint64_t v79 = &v62[v78];
            uint64_t v80 = &v63[v78];
            *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
            *((void *)v79 + 2) = *((void *)v80 + 2);
            uint64_t v81 = v77[7];
            uint64_t v117 = &v63[v81];
            uint64_t v120 = &v62[v81];
            uint64_t v82 = sub_252D19408();
            uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32);
            v129(v120, v117, v82);
            v129(&v62[v135[8]], &v63[v135[8]], v82);
            ((void (*)(char *, char *, uint64_t))v122)(&v62[v135[9]], &v63[v135[9]], v142);
            goto LABEL_61;
          case 2u:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v63, 1, v142))
            {
              uint64_t v71 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v62, v63, *(void *)(*(void *)(v71 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v62, v63, v142);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v142);
            }
            uint64_t v83 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            int v116 = *(void (**)(char *, char *))(*(void *)(v142 - 8) + 32);
            v116(&v62[v83[5]], &v63[v83[5]]);
            uint64_t v138 = v83;
            uint64_t v84 = v83[6];
            unint64_t v85 = &v62[v84];
            uint64_t v86 = &v63[v84];
            *(_OWORD *)unint64_t v85 = *(_OWORD *)v86;
            *((void *)v85 + 2) = *((void *)v86 + 2);
            uint64_t v87 = v83[7];
            uint64_t v123 = &v63[v87];
            uint64_t v126 = &v62[v87];
            uint64_t v88 = sub_252D19408();
            uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32);
            v130(v126, v123, v88);
            uint64_t v121 = v88;
            v130(&v62[v138[8]], &v63[v138[8]], v88);
            uint64_t v89 = v138[9];
            uint64_t v124 = &v62[v89];
            char v127 = &v63[v89];
            uint64_t v118 = (int *)type metadata accessor for RGDisplayRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v127, 1, (uint64_t)v118))
            {
              uint64_t v90 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v124, v127, *(void *)(*(void *)(v90 - 8) + 64));
            }
            else
            {
              v130(v124, v127, v88);
              uint64_t v91 = v118[5];
              uint64_t v113 = &v124[v91];
              uint64_t v110 = &v127[v91];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v127[v91], 1, v88))
              {
                uint64_t v92 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v113, v110, *(void *)(*(void *)(v92 - 8) + 64));
              }
              else
              {
                v130(v113, v110, v88);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v113, 0, 1, v88);
              }
              uint64_t v93 = v118[6];
              unsigned __int8 v114 = &v124[v93];
              uint64_t v94 = &v127[v93];
              uint64_t v95 = sub_252D19C68();
              uint64_t v111 = v94;
              uint64_t v96 = (uint64_t)v94;
              uint64_t v97 = v95;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v96, 1, v95))
              {
                uint64_t v98 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v114, v111, *(void *)(*(void *)(v98 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v114, v111, v97);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v114, 0, 1, v97);
              }
              *(_OWORD *)&v124[v118[7]] = *(_OWORD *)&v127[v118[7]];
              *(_OWORD *)&v124[v118[8]] = *(_OWORD *)&v127[v118[8]];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v124, 0, 1, (uint64_t)v118);
            }
            uint64_t v99 = v138[10];
            uint64_t v128 = &v62[v99];
            uint64_t v125 = &v63[v99];
            uint64_t v119 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v125, 1, v119))
            {
              uint64_t v100 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v128, v125, *(void *)(*(void *)(v100 - 8) + 64));
            }
            else
            {
              v130(v128, v125, v121);
              uint64_t v101 = *(int *)(v119 + 20);
              long long v115 = &v128[v101];
              uint64_t v112 = &v125[v101];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v125[v101], 1, v121))
              {
                uint64_t v102 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v115, v112, *(void *)(*(void *)(v102 - 8) + 64));
              }
              else
              {
                v130(v115, v112, v121);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v115, 0, 1, v121);
              }
              uint64_t v103 = *(int *)(v119 + 24);
              uint64_t v136 = &v128[v103];
              uint64_t v104 = &v125[v103];
              uint64_t v105 = sub_252D19C68();
              uint64_t v131 = v104;
              uint64_t v106 = (uint64_t)v104;
              uint64_t v107 = v105;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v106, 1, v105))
              {
                uint64_t v108 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v136, v131, *(void *)(*(void *)(v108 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v136, v131, v107);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v136, 0, 1, v107);
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v128, 0, 1, v119);
            }
            ((void (*)(char *, char *, uint64_t))v116)(&v62[v138[11]], &v63[v138[11]], v142);
            goto LABEL_61;
          case 3u:
            v134 = *(void (**)(char *, char *))(*(void *)(v142 - 8) + 32);
            v134(v62, v63);
            uint64_t v72 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            ((void (*)(char *, char *, uint64_t))v134)(&v62[v72[5]], &v63[v72[5]], v142);
            uint64_t v73 = v72[6];
            uint64_t v74 = &v62[v73];
            uint64_t v75 = &v63[v73];
            *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
            *((void *)v74 + 2) = *((void *)v75 + 2);
            *(void *)&v62[v72[7]] = *(void *)&v63[v72[7]];
            *(void *)&v62[v72[8]] = *(void *)&v63[v72[8]];
            ((void (*)(char *, char *, uint64_t))v134)(&v62[v72[9]], &v63[v72[9]], v142);
            goto LABEL_61;
          case 7u:
            uint64_t v76 = sub_252D19C58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v62, v63, v76);
LABEL_61:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v62, v63, *(void *)(*(void *)(v140 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v64);
    }
    v57[v59[8]] = v58[v59[8]];
    v57[v59[9]] = v58[v59[9]];
    *(void *)&v57[v59[10]] = *(void *)&v58[v59[10]];
    *(_OWORD *)&v57[v59[11]] = *(_OWORD *)&v58[v59[11]];
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v57, 0, 1, (uint64_t)v59);
  }
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  return a1;
}

char *assignWithTake for ActionResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  uint64_t v351 = v6;
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v352 = a3;
  if (a1 != a2)
  {
    uint64_t v21 = a3[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    sub_252BA6670();
    uint64_t v24 = type metadata accessor for ActionOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v25 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
        uint64_t v26 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v27 = v26[5];
        uint64_t v28 = &v22[v27];
        uint64_t v29 = &v23[v27];
        uint64_t v30 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 32))(v28, v29);
          *(_OWORD *)&v28[*(int *)(v30 + 20)] = *(_OWORD *)&v29[*(int *)(v30 + 20)];
          *(_OWORD *)&v28[*(int *)(v30 + 24)] = *(_OWORD *)&v29[*(int *)(v30 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v30);
        }
        v22[v26[6]] = v23[v26[6]];
        uint64_t v50 = v26[7];
        uint64_t v51 = &v22[v50];
        uint64_t v52 = &v23[v50];
        uint64_t v53 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
          uint64_t v55 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v56 = *(int *)(v55 + 20);
          uint64_t v337 = &v52[v56];
          uint64_t v350 = &v51[v56];
          uint64_t v57 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v350, v337, v57);
          *(void *)&v51[*(int *)(v55 + 24)] = *(void *)&v52[*(int *)(v55 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v51, 0, 1, v53);
        }
        v22[v26[8]] = v23[v26[8]];
        *(_OWORD *)&v22[v26[9]] = *(_OWORD *)&v23[v26[9]];
        swift_storeEnumTagMultiPayload();
        a3 = v352;
        break;
      case 3u:
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        uint64_t v32 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v33 = &v22[v32];
        uint64_t v34 = &v23[v32];
        uint64_t v35 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_17;
      case 4u:
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *((void *)v22 + 2) = *((void *)v23 + 2);
        v22[24] = v23[24];
        uint64_t v36 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v37 = v36[6];
        uint64_t v38 = &v22[v37];
        uint64_t v39 = &v23[v37];
        uint64_t v40 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        *(_OWORD *)&v22[v36[7]] = *(_OWORD *)&v23[v36[7]];
        *(_OWORD *)&v22[v36[8]] = *(_OWORD *)&v23[v36[8]];
        goto LABEL_17;
      case 6u:
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        uint64_t v41 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v42 = *(int *)(v41 + 20);
        uint64_t v43 = &v22[v42];
        uint64_t v44 = &v23[v42];
        uint64_t v45 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        v22[*(int *)(v41 + 24)] = v23[*(int *)(v41 + 24)];
        goto LABEL_17;
      case 7u:
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        uint64_t v46 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v47 = &v22[v46];
        uint64_t v48 = &v23[v46];
        uint64_t v49 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
        break;
    }
  }
  uint64_t v58 = a3[8];
  long long v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  *(void *)&a1[v58] = *(void *)&a2[v58];
  swift_bridgeObjectRelease();
  if (*((void *)v59 + 2))
  {
    uint64_t v61 = *((void *)v60 + 2);
    if (v61)
    {
      *((void *)v59 + 1) = *((void *)v60 + 1);
      *((void *)v59 + 2) = v61;
      swift_bridgeObjectRelease();
      uint64_t v62 = *((void *)v60 + 4);
      *((void *)v59 + 3) = *((void *)v60 + 3);
      *((void *)v59 + 4) = v62;
      swift_bridgeObjectRelease();
      uint64_t v63 = *((void *)v60 + 6);
      *((void *)v59 + 5) = *((void *)v60 + 5);
      *((void *)v59 + 6) = v63;
      swift_bridgeObjectRelease();
      uint64_t v64 = *((void *)v60 + 8);
      *((void *)v59 + 7) = *((void *)v60 + 7);
      *((void *)v59 + 8) = v64;
      swift_bridgeObjectRelease();
      uint64_t v65 = *((void *)v60 + 10);
      *((void *)v59 + 9) = *((void *)v60 + 9);
      *((void *)v59 + 10) = v65;
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_252B5D188((uint64_t)(v59 + 8));
  }
  memcpy(v59 + 8, v60 + 8, 0x50uLL);
LABEL_28:
  if (*((void *)v59 + 12))
  {
    uint64_t v66 = *((void *)v60 + 12);
    if (v66)
    {
      *((void *)v59 + 11) = *((void *)v60 + 11);
      *((void *)v59 + 12) = v66;
      swift_bridgeObjectRelease();
      uint64_t v67 = *((void *)v60 + 14);
      *((void *)v59 + 13) = *((void *)v60 + 13);
      *((void *)v59 + 14) = v67;
      swift_bridgeObjectRelease();
      uint64_t v68 = *((void *)v60 + 16);
      *((void *)v59 + 15) = *((void *)v60 + 15);
      *((void *)v59 + 16) = v68;
      swift_bridgeObjectRelease();
      uint64_t v69 = *((void *)v60 + 18);
      *((void *)v59 + 17) = *((void *)v60 + 17);
      *((void *)v59 + 18) = v69;
      swift_bridgeObjectRelease();
      uint64_t v70 = *((void *)v60 + 20);
      *((void *)v59 + 19) = *((void *)v60 + 19);
      *((void *)v59 + 20) = v70;
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    sub_252B5D188((uint64_t)(v59 + 88));
  }
  memcpy(v59 + 88, v60 + 88, 0x50uLL);
LABEL_33:
  uint64_t v71 = *((void *)v60 + 21);
  if (*((void *)v59 + 21))
  {
    if (v71)
    {
      *((void *)v59 + 21) = v71;
      swift_bridgeObjectRelease();
      *((void *)v59 + 22) = *((void *)v60 + 22);
      swift_bridgeObjectRelease();
      v59[184] = v60[184];
      goto LABEL_38;
    }
    sub_252B5D1B8((uint64_t)(v59 + 168));
  }
  *(_OWORD *)(v59 + 168) = *(_OWORD *)(v60 + 168);
  v59[184] = v60[184];
LABEL_38:
  uint64_t v72 = (int *)type metadata accessor for ResponseManifest(0);
  uint64_t v73 = v72[8];
  uint64_t v74 = &v59[v73];
  uint64_t v75 = &v60[v73];
  uint64_t v76 = type metadata accessor for ResponseVisual.UIType(0);
  int v77 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v74, 1, v76);
  int v78 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v75, 1, v76);
  if (!v77)
  {
    if (!v78)
    {
      if (a1 == a2) {
        goto LABEL_51;
      }
      sub_252BA6670();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v81 = sub_252D19C58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v74, v75, v81);
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      }
      size_t v80 = *(void *)(*(void *)(v76 - 8) + 64);
LABEL_45:
      memcpy(v74, v75, v80);
      goto LABEL_51;
    }
    sub_252BA6670();
LABEL_44:
    size_t v80 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A80) - 8) + 64);
    goto LABEL_45;
  }
  if (v78) {
    goto LABEL_44;
  }
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v79 = sub_252D19C58();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v74, v75, v79);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v74, 0, 1, v76);
LABEL_51:
  uint64_t v82 = v72[9];
  uint64_t v83 = &v59[v82];
  uint64_t v84 = &v60[v82];
  uint64_t v86 = *(void *)v84;
  uint64_t v85 = *((void *)v84 + 1);
  *(void *)uint64_t v83 = v86;
  *((void *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = v72[10];
  uint64_t v88 = &v59[v87];
  uint64_t v89 = &v60[v87];
  uint64_t v91 = *(void *)v89;
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)uint64_t v88 = v91;
  *((void *)v88 + 1) = v90;
  swift_bridgeObjectRelease();
  v59[v72[11]] = v60[v72[11]];
  v59[v72[12]] = v60[v72[12]];
  uint64_t v92 = v352;
  uint64_t v93 = v352[9];
  uint64_t v94 = (uint64_t)&a1[v93];
  uint64_t v95 = (uint64_t)&a2[v93];
  uint64_t v96 = (int *)type metadata accessor for ResponseOutput(0);
  int v97 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v94, 1, (uint64_t)v96);
  int v98 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v95, 1, (uint64_t)v96);
  if (!v97)
  {
    if (v98)
    {
      sub_252BA6670();
      goto LABEL_57;
    }
    *(void *)uint64_t v94 = *(void *)v95;
    swift_bridgeObjectRelease();
    uint64_t v105 = (_OWORD *)(v95 + 8);
    int v106 = *(unsigned __int8 *)(v94 + 24);
    if (v106 != 255)
    {
      int v107 = *(unsigned __int8 *)(v95 + 24);
      if (v107 != 255)
      {
        uint64_t v108 = *(void *)(v94 + 8);
        uint64_t v109 = *(void *)(v94 + 16);
        *(_OWORD *)(v94 + 8) = *v105;
        *(unsigned char *)(v94 + 24) = v107;
        sub_252AD170C(v108, v109, v106);
        goto LABEL_68;
      }
      sub_252B6B294(v94 + 8);
    }
    *(_OWORD *)(v94 + 8) = *v105;
    *(unsigned char *)(v94 + 24) = *(unsigned char *)(v95 + 24);
LABEL_68:
    long long v115 = (_OWORD *)(v95 + 32);
    int v116 = *(unsigned __int8 *)(v94 + 48);
    if (v116 != 255)
    {
      int v117 = *(unsigned __int8 *)(v95 + 48);
      if (v117 != 255)
      {
        uint64_t v118 = *(void *)(v94 + 32);
        uint64_t v119 = *(void *)(v94 + 40);
        *(_OWORD *)(v94 + 32) = *v115;
        *(unsigned char *)(v94 + 48) = v117;
        sub_252AD170C(v118, v119, v116);
        goto LABEL_73;
      }
      sub_252B6B294(v94 + 32);
    }
    *(_OWORD *)(v94 + 32) = *v115;
    *(unsigned char *)(v94 + 48) = *(unsigned char *)(v95 + 48);
LABEL_73:
    uint64_t v120 = v96[7];
    uint64_t v121 = (char *)(v94 + v120);
    int v122 = (char *)(v95 + v120);
    uint64_t v123 = type metadata accessor for ResponseOutput.VisualOutput(0);
    int v124 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v121, 1, v123);
    int v125 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v123);
    if (v124)
    {
      if (!v125)
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v126 = type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v339 = *(void (**)(char *, char *))(*(void *)(v351 - 8) + 32);
              v339(v121, v122);
              char v127 = (int *)type metadata accessor for RGDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v339)(&v121[v127[5]], &v122[v127[5]], v351);
              uint64_t v128 = v127[6];
              uint64_t v129 = &v121[v128];
              uint64_t v130 = &v122[v128];
              *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
              *((void *)v129 + 2) = *((void *)v130 + 2);
              *(void *)&v121[v127[7]] = *(void *)&v122[v127[7]];
              *(void *)&v121[v127[8]] = *(void *)&v122[v127[8]];
              ((void (*)(char *, char *, uint64_t))v339)(&v121[v127[9]], &v122[v127[9]], v351);
              *(_OWORD *)&v121[v127[10]] = *(_OWORD *)&v122[v127[10]];
              ((void (*)(char *, char *, uint64_t))v339)(&v121[v127[11]], &v122[v127[11]], v351);
              goto LABEL_164;
            case 1u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v351))
              {
                uint64_t v144 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v121, v122, *(void *)(*(void *)(v144 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v121, v122, v351);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v351);
              }
              uint64_t v182 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              __srch = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32);
              __srch(&v121[v182[5]], &v122[v182[5]], v351);
              uint64_t v183 = v182[6];
              uint64_t v184 = &v121[v183];
              uint64_t v185 = &v122[v183];
              *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
              *((void *)v184 + 2) = *((void *)v185 + 2);
              uint64_t v186 = v182[7];
              __dstg = &v121[v186];
              v321 = v182;
              uint64_t v306 = &v122[v186];
              uint64_t v187 = sub_252D19408();
              uint64_t v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32);
              v188(__dstg, v306, v187);
              v188(&v121[v321[8]], &v122[v321[8]], v187);
              __srch(&v121[v321[9]], &v122[v321[9]], v351);
              goto LABEL_164;
            case 2u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v351))
              {
                uint64_t v145 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v121, v122, *(void *)(*(void *)(v145 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v121, v122, v351);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v351);
              }
              uint64_t v189 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              uint64_t v302 = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32);
              v302(&v121[v189[5]], &v122[v189[5]], v351);
              uint64_t v190 = v189[6];
              uint64_t v191 = &v121[v190];
              uint64_t v192 = &v122[v190];
              *(_OWORD *)uint64_t v191 = *(_OWORD *)v192;
              *((void *)v191 + 2) = *((void *)v192 + 2);
              uint64_t v193 = v189[7];
              unint64_t v194 = &v121[v193];
              __srci = &v122[v193];
              uint64_t v195 = sub_252D19408();
              v345 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32);
              uint64_t v196 = v194;
              uint64_t v197 = v195;
              v345(v196, __srci, v195);
              uint64_t v307 = v197;
              v345(&v121[v189[8]], &v122[v189[8]], v197);
              uint64_t v198 = v189[9];
              __dsta = &v121[v198];
              v322 = v189;
              uint64_t v199 = &v122[v198];
              uint64_t v200 = type metadata accessor for RGDisplayRepresentation(0);
              __srca = v199;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v199, 1, v200))
              {
                uint64_t v201 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(__dsta, v199, *(void *)(*(void *)(v201 - 8) + 64));
                v202 = v322;
              }
              else
              {
                v345(__dsta, v199, v307);
                uint64_t v207 = *(int *)(v200 + 20);
                unint64_t v289 = &__dsta[v207];
                uint64_t v296 = (int *)v200;
                unint64_t v208 = &v199[v207];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v199[v207], 1, v307))
                {
                  uint64_t v209 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v289, v208, *(void *)(*(void *)(v209 - 8) + 64));
                }
                else
                {
                  v345(v289, v208, v307);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v289, 0, 1, v307);
                }
                uint64_t v242 = v296[6];
                v291 = &__dsta[v242];
                unint64_t v243 = &v199[v242];
                uint64_t v244 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v243, 1, v244))
                {
                  uint64_t v245 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v291, v243, *(void *)(*(void *)(v245 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v291, v243, v244);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v291, 0, 1, v244);
                }
                v202 = v322;
                *(_OWORD *)&__dsta[v296[7]] = *(_OWORD *)&__srca[v296[7]];
                *(_OWORD *)&__dsta[v296[8]] = *(_OWORD *)&__srca[v296[8]];
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, (uint64_t)v296);
              }
              uint64_t v250 = v202[10];
              __srcd = &v121[v250];
              uint64_t v251 = &v122[v250];
              uint64_t v252 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v251, 1, v252))
              {
                uint64_t v253 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(__srcd, v251, *(void *)(*(void *)(v253 - 8) + 64));
                v254 = v322;
              }
              else
              {
                __dstd = (void *)v252;
                v345(__srcd, v251, v307);
                uint64_t v255 = *(int *)(v252 + 20);
                uint64_t v292 = &v251[v255];
                uint64_t v299 = &__srcd[v255];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v251[v255], 1, v307))
                {
                  uint64_t v256 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v299, v292, *(void *)(*(void *)(v256 - 8) + 64));
                }
                else
                {
                  v345(v299, v292, v307);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v299, 0, 1, v307);
                }
                uint64_t v257 = *(int *)(v252 + 24);
                v348 = &__srcd[v257];
                uint64_t v258 = &v251[v257];
                uint64_t v259 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v258, 1, v259))
                {
                  uint64_t v260 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v348, v258, *(void *)(*(void *)(v260 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 32))(v348, v258, v259);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v348, 0, 1, v259);
                }
                v254 = v322;
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srcd, 0, 1, (uint64_t)__dstd);
              }
              v302(&v121[v254[11]], &v122[v254[11]], v351);
              goto LABEL_164;
            case 3u:
              v342 = *(void (**)(char *, char *))(*(void *)(v351 - 8) + 32);
              v342(v121, v122);
              uint64_t v146 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v342)(&v121[v146[5]], &v122[v146[5]], v351);
              uint64_t v147 = v146[6];
              uint64_t v148 = &v121[v147];
              uint64_t v149 = &v122[v147];
              *(_OWORD *)uint64_t v148 = *(_OWORD *)v149;
              *((void *)v148 + 2) = *((void *)v149 + 2);
              *(void *)&v121[v146[7]] = *(void *)&v122[v146[7]];
              *(void *)&v121[v146[8]] = *(void *)&v122[v146[8]];
              ((void (*)(char *, char *, uint64_t))v342)(&v121[v146[9]], &v122[v146[9]], v351);
              goto LABEL_164;
            case 7u:
              uint64_t v150 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v121, v122, v150);
LABEL_164:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v121, v122, *(void *)(*(void *)(v126 - 8) + 64));
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v123);
        goto LABEL_167;
      }
    }
    else
    {
      if (!v125)
      {
        if (a1 == a2) {
          goto LABEL_167;
        }
        sub_252BA6670();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v132 = type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v340 = *(void (**)(char *, char *))(*(void *)(v351 - 8) + 32);
              v340(v121, v122);
              uint64_t v133 = (int *)type metadata accessor for RGDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v340)(&v121[v133[5]], &v122[v133[5]], v351);
              uint64_t v134 = v133[6];
              v135 = &v121[v134];
              uint64_t v136 = &v122[v134];
              *(_OWORD *)v135 = *(_OWORD *)v136;
              *((void *)v135 + 2) = *((void *)v136 + 2);
              *(void *)&v121[v133[7]] = *(void *)&v122[v133[7]];
              *(void *)&v121[v133[8]] = *(void *)&v122[v133[8]];
              ((void (*)(char *, char *, uint64_t))v340)(&v121[v133[9]], &v122[v133[9]], v351);
              *(_OWORD *)&v121[v133[10]] = *(_OWORD *)&v122[v133[10]];
              ((void (*)(char *, char *, uint64_t))v340)(&v121[v133[11]], &v122[v133[11]], v351);
              goto LABEL_184;
            case 1u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v351))
              {
                uint64_t v175 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v121, v122, *(void *)(*(void *)(v175 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v121, v122, v351);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v351);
              }
              uint64_t v221 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              __srcj = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32);
              __srcj(&v121[v221[5]], &v122[v221[5]], v351);
              uint64_t v222 = v221[6];
              uint64_t v223 = &v121[v222];
              unint64_t v224 = &v122[v222];
              *(_OWORD *)uint64_t v223 = *(_OWORD *)v224;
              *((void *)v223 + 2) = *((void *)v224 + 2);
              uint64_t v225 = v221[7];
              __dsth = &v121[v225];
              uint64_t v323 = v221;
              v308 = &v122[v225];
              uint64_t v226 = sub_252D19408();
              uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 32);
              v227(__dsth, v308, v226);
              v227(&v121[v323[8]], &v122[v323[8]], v226);
              __srcj(&v121[v323[9]], &v122[v323[9]], v351);
              goto LABEL_184;
            case 2u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, v351))
              {
                uint64_t v176 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v121, v122, *(void *)(*(void *)(v176 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v121, v122, v351);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v121, 0, 1, v351);
              }
              uint64_t v228 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              v303 = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32);
              v303(&v121[v228[5]], &v122[v228[5]], v351);
              uint64_t v229 = v228[6];
              uint64_t v230 = &v121[v229];
              uint64_t v231 = &v122[v229];
              *(_OWORD *)uint64_t v230 = *(_OWORD *)v231;
              *((void *)v230 + 2) = *((void *)v231 + 2);
              uint64_t v232 = v228[7];
              uint64_t v233 = &v121[v232];
              __srck = &v122[v232];
              uint64_t v234 = sub_252D19408();
              uint64_t v347 = *(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 32);
              uint64_t v235 = v233;
              uint64_t v236 = v234;
              v347(v235, __srck, v234);
              uint64_t v309 = v236;
              v347(&v121[v228[8]], &v122[v228[8]], v236);
              uint64_t v237 = v228[9];
              __dstc = &v121[v237];
              v324 = v228;
              uint64_t v238 = &v122[v237];
              uint64_t v239 = type metadata accessor for RGDisplayRepresentation(0);
              __srcc = v238;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v238, 1, v239))
              {
                uint64_t v240 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(__dstc, v238, *(void *)(*(void *)(v240 - 8) + 64));
                unint64_t v241 = v324;
              }
              else
              {
                v347(__dstc, v238, v309);
                v298 = (int *)v239;
                uint64_t v246 = *(int *)(v239 + 20);
                uint64_t v247 = &__dstc[v246];
                uint64_t v248 = &__srcc[v246];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__srcc[v246], 1, v309))
                {
                  uint64_t v249 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
                }
                else
                {
                  v347(v247, v248, v309);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v247, 0, 1, v309);
                }
                uint64_t v272 = v298[6];
                v293 = &__dstc[v272];
                uint64_t v273 = &__srcc[v272];
                uint64_t v274 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v273, 1, v274))
                {
                  uint64_t v275 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v293, v273, *(void *)(*(void *)(v275 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v293, v273, v274);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v293, 0, 1, v274);
                }
                unint64_t v241 = v324;
                *(_OWORD *)&__dstc[v298[7]] = *(_OWORD *)&__srcc[v298[7]];
                *(_OWORD *)&__dstc[v298[8]] = *(_OWORD *)&__srcc[v298[8]];
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstc, 0, 1, (uint64_t)v298);
              }
              uint64_t v276 = v241[10];
              __srce = &v121[v276];
              v277 = &v122[v276];
              uint64_t v278 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v277, 1, v278))
              {
                uint64_t v279 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(__srce, v277, *(void *)(*(void *)(v279 - 8) + 64));
                v280 = v324;
              }
              else
              {
                __dste = (void *)v278;
                v347(__srce, v277, v309);
                uint64_t v281 = *(int *)(v278 + 20);
                v294 = &v277[v281];
                v300 = &__srce[v281];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v277[v281], 1, v309))
                {
                  uint64_t v282 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v300, v294, *(void *)(*(void *)(v282 - 8) + 64));
                }
                else
                {
                  v347(v300, v294, v309);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v300, 0, 1, v309);
                }
                uint64_t v283 = *(int *)(v278 + 24);
                v349 = &__srce[v283];
                uint64_t v284 = &v277[v283];
                uint64_t v285 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v284, 1, v285))
                {
                  uint64_t v286 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v349, v284, *(void *)(*(void *)(v286 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 32))(v349, v284, v285);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v349, 0, 1, v285);
                }
                v280 = v324;
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srce, 0, 1, (uint64_t)__dste);
              }
              v303(&v121[v280[11]], &v122[v280[11]], v351);
              goto LABEL_184;
            case 3u:
              v344 = *(void (**)(char *, char *))(*(void *)(v351 - 8) + 32);
              v344(v121, v122);
              int v177 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v344)(&v121[v177[5]], &v122[v177[5]], v351);
              uint64_t v178 = v177[6];
              uint64_t v179 = &v121[v178];
              uint64_t v180 = &v122[v178];
              *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
              *((void *)v179 + 2) = *((void *)v180 + 2);
              *(void *)&v121[v177[7]] = *(void *)&v122[v177[7]];
              *(void *)&v121[v177[8]] = *(void *)&v122[v177[8]];
              ((void (*)(char *, char *, uint64_t))v344)(&v121[v177[9]], &v122[v177[9]], v351);
              goto LABEL_184;
            case 7u:
              uint64_t v181 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v121, v122, v181);
LABEL_184:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v121, v122, *(void *)(*(void *)(v132 - 8) + 64));
              break;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_167;
        }
        size_t v131 = *(void *)(*(void *)(v123 - 8) + 64);
LABEL_81:
        memcpy(v121, v122, v131);
LABEL_167:
        *(unsigned char *)(v94 + v96[8]) = *(unsigned char *)(v95 + v96[8]);
        *(unsigned char *)(v94 + v96[9]) = *(unsigned char *)(v95 + v96[9]);
        *(void *)(v94 + v96[10]) = *(void *)(v95 + v96[10]);
        swift_bridgeObjectRelease();
        uint64_t v261 = v96[11];
        uint64_t v262 = (void *)(v94 + v261);
        v263 = (uint64_t *)(v95 + v261);
        uint64_t v265 = *v263;
        uint64_t v264 = v263[1];
        void *v262 = v265;
        v262[1] = v264;
        swift_bridgeObjectRelease();
        uint64_t v92 = v352;
        goto LABEL_168;
      }
      sub_252BA6670();
    }
    size_t v131 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41AB0) - 8) + 64);
    goto LABEL_81;
  }
  if (v98)
  {
LABEL_57:
    uint64_t v104 = sub_252AC3A24(&qword_269C41AB8);
    memcpy((void *)v94, (const void *)v95, *(void *)(*(void *)(v104 - 8) + 64));
    goto LABEL_168;
  }
  *(void *)uint64_t v94 = *(void *)v95;
  *(_OWORD *)(v94 + 8) = *(_OWORD *)(v95 + 8);
  *(unsigned char *)(v94 + 24) = *(unsigned char *)(v95 + 24);
  *(_OWORD *)(v94 + 32) = *(_OWORD *)(v95 + 32);
  *(unsigned char *)(v94 + 48) = *(unsigned char *)(v95 + 48);
  uint64_t v99 = v96[7];
  uint64_t v100 = (char *)(v94 + v99);
  uint64_t v101 = (char *)(v95 + v99);
  uint64_t v102 = type metadata accessor for ResponseOutput.VisualOutput(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v101, 1, v102))
  {
    uint64_t v103 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
    uint64_t v92 = v352;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v110 = type metadata accessor for RGPluginModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v338 = *(void (**)(char *, char *))(*(void *)(v351 - 8) + 32);
          v338(v100, v101);
          uint64_t v111 = (int *)type metadata accessor for RGDisambiguationModel(0);
          ((void (*)(char *, char *, uint64_t))v338)(&v100[v111[5]], &v101[v111[5]], v351);
          uint64_t v112 = v111[6];
          uint64_t v113 = &v100[v112];
          unsigned __int8 v114 = &v101[v112];
          *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
          *((void *)v113 + 2) = *((void *)v114 + 2);
          *(void *)&v100[v111[7]] = *(void *)&v101[v111[7]];
          *(void *)&v100[v111[8]] = *(void *)&v101[v111[8]];
          ((void (*)(char *, char *, uint64_t))v338)(&v100[v111[9]], &v101[v111[9]], v351);
          *(_OWORD *)&v100[v111[10]] = *(_OWORD *)&v101[v111[10]];
          ((void (*)(char *, char *, uint64_t))v338)(&v100[v111[11]], &v101[v111[11]], v351);
          goto LABEL_138;
        case 1u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v101, 1, v351))
          {
            uint64_t v137 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(v100, v101, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v100, v101, v351);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v100, 0, 1, v351);
          }
          uint64_t v151 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          __srcf = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32);
          __srcf(&v100[v151[5]], &v101[v151[5]], v351);
          uint64_t v152 = v151[6];
          uint64_t v153 = &v100[v152];
          uint64_t v154 = &v101[v152];
          *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
          *((void *)v153 + 2) = *((void *)v154 + 2);
          uint64_t v155 = v151[7];
          __dstf = &v100[v155];
          uint64_t v319 = v151;
          uint64_t v304 = &v101[v155];
          uint64_t v156 = sub_252D19408();
          uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32);
          v157(__dstf, v304, v156);
          v157(&v100[v319[8]], &v101[v319[8]], v156);
          __srcf(&v100[v319[9]], &v101[v319[9]], v351);
          goto LABEL_138;
        case 2u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v101, 1, v351))
          {
            uint64_t v138 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(v100, v101, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32))(v100, v101, v351);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v100, 0, 1, v351);
          }
          v158 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          v301 = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 32);
          v301(&v100[v158[5]], &v101[v158[5]], v351);
          uint64_t v159 = v158[6];
          long long v160 = &v100[v159];
          uint64_t v161 = &v101[v159];
          *(_OWORD *)long long v160 = *(_OWORD *)v161;
          *((void *)v160 + 2) = *((void *)v161 + 2);
          uint64_t v162 = v158[7];
          int v163 = &v100[v162];
          __srcg = &v101[v162];
          uint64_t v164 = sub_252D19408();
          uint64_t v343 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32);
          uint64_t v165 = v163;
          uint64_t v166 = v164;
          v343(v165, __srcg, v164);
          uint64_t v305 = v166;
          v343(&v100[v158[8]], &v101[v158[8]], v166);
          uint64_t v167 = v158[9];
          __dst = &v100[v167];
          uint64_t v320 = v158;
          unsigned __int8 v168 = &v101[v167];
          uint64_t v169 = type metadata accessor for RGDisplayRepresentation(0);
          __src = v168;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v168, 1, v169))
          {
            uint64_t v170 = sub_252AC3A24(&qword_269C41AA0);
            memcpy(__dst, v168, *(void *)(*(void *)(v170 - 8) + 64));
            char v171 = v320;
          }
          else
          {
            v343(__dst, v168, v305);
            uint64_t v172 = *(int *)(v169 + 20);
            unint64_t v287 = &__dst[v172];
            uint64_t v295 = (int *)v169;
            uint64_t v173 = &v168[v172];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v168[v172], 1, v305))
            {
              uint64_t v174 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v287, v173, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              v343(v287, v173, v305);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v287, 0, 1, v305);
            }
            uint64_t v203 = v295[6];
            unint64_t v288 = &__dst[v203];
            uint64_t v204 = &v168[v203];
            uint64_t v205 = sub_252D19C68();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v204, 1, v205))
            {
              uint64_t v206 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v288, v204, *(void *)(*(void *)(v206 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v288, v204, v205);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v288, 0, 1, v205);
            }
            char v171 = v320;
            *(_OWORD *)&__dst[v295[7]] = *(_OWORD *)&__src[v295[7]];
            *(_OWORD *)&__dst[v295[8]] = *(_OWORD *)&__src[v295[8]];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v295);
          }
          uint64_t v210 = v171[10];
          __srcb = &v100[v210];
          uint64_t v211 = &v101[v210];
          uint64_t v212 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v211, 1, v212))
          {
            uint64_t v213 = sub_252AC3A24(&qword_269C41AA8);
            memcpy(__srcb, v211, *(void *)(*(void *)(v213 - 8) + 64));
            v214 = v320;
          }
          else
          {
            __dstb = (void *)v212;
            v343(__srcb, v211, v305);
            uint64_t v215 = *(int *)(v212 + 20);
            uint64_t v290 = &v211[v215];
            v297 = &__srcb[v215];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v211[v215], 1, v305))
            {
              uint64_t v216 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v297, v290, *(void *)(*(void *)(v216 - 8) + 64));
            }
            else
            {
              v343(v297, v290, v305);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v297, 0, 1, v305);
            }
            uint64_t v217 = *(int *)(v212 + 24);
            uint64_t v346 = &__srcb[v217];
            uint64_t v218 = &v211[v217];
            uint64_t v219 = sub_252D19C68();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v218, 1, v219))
            {
              uint64_t v220 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v346, v218, *(void *)(*(void *)(v220 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v346, v218, v219);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v346, 0, 1, v219);
            }
            v214 = v320;
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srcb, 0, 1, (uint64_t)__dstb);
          }
          v301(&v100[v214[11]], &v101[v214[11]], v351);
          goto LABEL_138;
        case 3u:
          uint64_t v341 = *(void (**)(char *, char *))(*(void *)(v351 - 8) + 32);
          v341(v100, v101);
          uint64_t v139 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          ((void (*)(char *, char *, uint64_t))v341)(&v100[v139[5]], &v101[v139[5]], v351);
          uint64_t v140 = v139[6];
          uint64_t v141 = &v100[v140];
          uint64_t v142 = &v101[v140];
          *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
          *((void *)v141 + 2) = *((void *)v142 + 2);
          *(void *)&v100[v139[7]] = *(void *)&v101[v139[7]];
          *(void *)&v100[v139[8]] = *(void *)&v101[v139[8]];
          ((void (*)(char *, char *, uint64_t))v341)(&v100[v139[9]], &v101[v139[9]], v351);
          goto LABEL_138;
        case 7u:
          uint64_t v143 = sub_252D19C58();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v100, v101, v143);
LABEL_138:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v100, v101, *(void *)(*(void *)(v110 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
    }
    uint64_t v92 = v352;
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v100, 0, 1, v102);
  }
  *(unsigned char *)(v94 + v96[8]) = *(unsigned char *)(v95 + v96[8]);
  *(unsigned char *)(v94 + v96[9]) = *(unsigned char *)(v95 + v96[9]);
  *(void *)(v94 + v96[10]) = *(void *)(v95 + v96[10]);
  *(_OWORD *)(v94 + v96[11]) = *(_OWORD *)(v95 + v96[11]);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v94, 0, 1, (uint64_t)v96);
LABEL_168:
  uint64_t v266 = v92[10];
  uint64_t v267 = &a1[v266];
  v268 = &a2[v266];
  uint64_t v270 = *(void *)v268;
  uint64_t v269 = *((void *)v268 + 1);
  *(void *)uint64_t v267 = v270;
  *((void *)v267 + 1) = v269;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C8CC88);
}

uint64_t sub_252C8CC88(uint64_t a1, uint64_t a2, int *a3)
{
  sub_252CB9724();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252CBC384();
    if (v9) {
      return sub_252B4C1B8(*(void *)(v4 + a3[6] + 8));
    }
    type metadata accessor for ActionOutcome(0);
    sub_252AEA314();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[7];
    }
    else
    {
      type metadata accessor for ResponseManifest(0);
      sub_252AEA314();
      if (*(_DWORD *)(v14 + 84) == v3)
      {
        sub_252CBC734();
      }
      else
      {
        uint64_t v8 = sub_252AC3A24(&qword_269C41AB8);
        uint64_t v13 = a3[9];
      }
    }
    uint64_t v7 = v4 + v13;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ActionResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C8CD84);
}

void sub_252C8CD84()
{
  sub_252B98CA8();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    sub_252B4C788();
  }
  else
  {
    if (v1 == 0x7FFFFFFF)
    {
      sub_252CB95C8(*(int *)(v0 + 24));
      return;
    }
    type metadata accessor for ActionOutcome(0);
    sub_252AEA314();
    if (*(_DWORD *)(v3 + 84) != v1)
    {
      type metadata accessor for ResponseManifest(0);
      sub_252AEA314();
      if (*(_DWORD *)(v4 + 84) == v1) {
        sub_252CBC568();
      }
      else {
        sub_252AC3A24(&qword_269C41AB8);
      }
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
}

void sub_252C8CE64()
{
  sub_252C78730(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ActionOutcome(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ResponseManifest(319);
      if (v2 <= 0x3F)
      {
        sub_252C78730(319, &qword_26B2345F8, (void (*)(uint64_t))type metadata accessor for ResponseOutput);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SystemResponse(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *((void *)v12 + 2);
    if (v13 == 1)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((void *)v11 + 2) = *((void *)v12 + 2);
    }
    else
    {
      *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      *((void *)v11 + 2) = v13;
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (char *)a1 + v15;
    uint64_t v20 = (char *)a2 + v15;
    type metadata accessor for StatementOutcome(0);
    swift_bridgeObjectRetain();
    uint64_t v242 = v7;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v27;
        uint64_t v28 = *((void *)v20 + 3);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = v28;
        uint64_t v29 = *((void *)v20 + 5);
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *((void *)v19 + 5) = v29;
        *((void *)v19 + 6) = *((void *)v20 + 6);
        *((_WORD *)v19 + 28) = *((_WORD *)v20 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 2u:
        uint64_t v30 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v30;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        goto LABEL_25;
      case 3u:
        uint64_t v31 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v31;
        uint64_t v32 = type metadata accessor for ParameterNeedsValue(0);
        goto LABEL_19;
      case 4u:
        uint64_t v33 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v33;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        v19[24] = v20[24];
        uint64_t v34 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v35 = v34[6];
        uint64_t v228 = &v20[v35];
        uint64_t v239 = &v19[v35];
        uint64_t v36 = sub_252D19BE8();
        unint64_t v224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v224(v239, v228, v36);
        uint64_t v37 = v34[7];
        uint64_t v38 = &v19[v37];
        uint64_t v39 = &v20[v37];
        uint64_t v40 = *((void *)v39 + 1);
        *(void *)uint64_t v38 = *(void *)v39;
        *((void *)v38 + 1) = v40;
        uint64_t v41 = v34[8];
        uint64_t v42 = &v19[v41];
        uint64_t v43 = &v20[v41];
        uint64_t v44 = *((void *)v43 + 1);
        *(void *)uint64_t v42 = *(void *)v43;
        *((void *)v42 + 1) = v44;
        goto LABEL_25;
      case 5u:
        uint64_t v45 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v45;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        v19[24] = v20[24];
        uint64_t v46 = *((void *)v20 + 5);
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *((void *)v19 + 5) = v46;
        uint64_t v47 = *((void *)v20 + 6);
        uint64_t v48 = *((void *)v20 + 7);
        *((void *)v19 + 6) = v47;
        *((void *)v19 + 7) = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 6u:
        uint64_t v49 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v49;
        uint64_t v50 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v51 = *(int *)(v50 + 20);
        uint64_t v229 = &v20[v51];
        uint64_t v240 = &v19[v51];
        uint64_t v52 = sub_252D19BE8();
        uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v225(v240, v229, v52);
        v19[*(int *)(v50 + 24)] = v20[*(int *)(v50 + 24)];
        goto LABEL_32;
      case 7u:
        uint64_t v53 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v53;
        uint64_t v32 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_19:
        uint64_t v54 = *(int *)(v32 + 20);
        uint64_t v230 = &v20[v54];
        unint64_t v241 = &v19[v54];
        uint64_t v55 = sub_252D19BE8();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v241, v230, v55);
        goto LABEL_32;
      case 8u:
        uint64_t v57 = *(void *)v20;
        uint64_t v58 = *((void *)v20 + 1);
        char v59 = v20[16];
        sub_252ACE7BC(v57, v58, v59);
        *(void *)uint64_t v19 = v57;
        *((void *)v19 + 1) = v58;
        v19[16] = v59;
        goto LABEL_32;
      case 9u:
        *(void *)uint64_t v19 = *(void *)v20;
        goto LABEL_31;
      case 0xAu:
        unint64_t v60 = *((void *)v20 + 1);
        if (v60 >= 0x10)
        {
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v60;
          uint64_t v62 = *((void *)v20 + 3);
          *((void *)v19 + 2) = *((void *)v20 + 2);
          *((void *)v19 + 3) = v62;
          *((void *)v19 + 4) = *((void *)v20 + 4);
LABEL_25:
          swift_bridgeObjectRetain();
LABEL_31:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v61 = *((_OWORD *)v20 + 1);
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *((_OWORD *)v19 + 1) = v61;
          *((void *)v19 + 4) = *((void *)v20 + 4);
        }
LABEL_32:
        swift_storeEnumTagMultiPayload();
        uint64_t v84 = a3[8];
        uint64_t v85 = (uint64_t *)((char *)a1 + v84);
        uint64_t v86 = (uint64_t *)((char *)a2 + v84);
        uint64_t v87 = (int *)type metadata accessor for ResponseOutput(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, (uint64_t)v87))
        {
          uint64_t v88 = sub_252AC3A24(&qword_269C41AB8);
          memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          void *v85 = *v86;
          int v89 = *((unsigned __int8 *)v86 + 24);
          swift_bridgeObjectRetain();
          if (v89 == 255)
          {
            *(_OWORD *)(v85 + 1) = *(_OWORD *)(v86 + 1);
            *((unsigned char *)v85 + 24) = *((unsigned char *)v86 + 24);
          }
          else
          {
            uint64_t v90 = v86[1];
            uint64_t v91 = v86[2];
            sub_252ACE7E4(v90, v91, v89);
            v85[1] = v90;
            v85[2] = v91;
            *((unsigned char *)v85 + 24) = v89;
          }
          int v92 = *((unsigned __int8 *)v86 + 48);
          if (v92 == 255)
          {
            *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
            *((unsigned char *)v85 + 48) = *((unsigned char *)v86 + 48);
          }
          else
          {
            uint64_t v93 = v86[4];
            uint64_t v94 = v86[5];
            sub_252ACE7E4(v93, v94, *((unsigned char *)v86 + 48));
            v85[4] = v93;
            v85[5] = v94;
            *((unsigned char *)v85 + 48) = v92;
          }
          uint64_t v95 = v87[7];
          uint64_t v96 = (void *)((char *)v85 + v95);
          int v97 = (void *)((char *)v86 + v95);
          uint64_t v98 = type metadata accessor for ResponseOutput.VisualOutput(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v98))
          {
            uint64_t v99 = sub_252AC3A24(&qword_269C41AB0);
            memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
                type metadata accessor for RGPluginModel(0);
                uint64_t v227 = v97;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    uint64_t v234 = v98;
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v242))
                    {
                      uint64_t v118 = sub_252AC3A24(&qword_26B2320E8);
                      memcpy(v96, v97, *(void *)(*(void *)(v118 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v242 - 8) + 16))(v96, v97, v242);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v96, 0, 1, v242);
                    }
                    uint64_t v144 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                    uint64_t v218 = *(void (**)(char *, char *))(*(void *)(v242 - 8) + 16);
                    v218((char *)v96 + v144[5], (char *)v97 + v144[5]);
                    uint64_t v145 = v144[6];
                    uint64_t v146 = (char *)v96 + v145;
                    uint64_t v147 = (char *)v97 + v145;
                    *(_DWORD *)uint64_t v146 = *(_DWORD *)v147;
                    uint64_t v201 = *((void *)v147 + 2);
                    *((void *)v146 + 1) = *((void *)v147 + 1);
                    *((void *)v146 + 2) = v201;
                    uint64_t v148 = v144[7];
                    __srcc = (char *)v96 + v148;
                    __dstc = v144;
                    uint64_t v205 = (char *)v97 + v148;
                    uint64_t v149 = sub_252D19408();
                    uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v150(__srcc, v205, v149);
                    v150((char *)v96 + __dstc[8], (char *)v227 + __dstc[8], v149);
                    ((void (*)(char *, char *, uint64_t))v218)((char *)v96 + __dstc[9], (char *)v227 + __dstc[9], v242);
                    uint64_t v98 = v234;
                    break;
                  case 2u:
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v242))
                    {
                      uint64_t v119 = sub_252AC3A24(&qword_26B2320E8);
                      memcpy(v96, v97, *(void *)(*(void *)(v119 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v242 - 8) + 16))(v96, v97, v242);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v96, 0, 1, v242);
                    }
                    uint64_t v151 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                    uint64_t v200 = *(void (**)(char *, char *))(*(void *)(v242 - 8) + 16);
                    v200((char *)v96 + v151[5], (char *)v227 + v151[5]);
                    uint64_t v221 = v151;
                    uint64_t v152 = v151[6];
                    uint64_t v153 = (char *)v96 + v152;
                    uint64_t v154 = (char *)v227 + v152;
                    *(_DWORD *)uint64_t v153 = *(_DWORD *)v154;
                    uint64_t v202 = *((void *)v154 + 2);
                    *((void *)v153 + 1) = *((void *)v154 + 1);
                    *((void *)v153 + 2) = v202;
                    uint64_t v155 = v151[7];
                    __srcd = (char *)v227 + v155;
                    __dstd = (char *)v96 + v155;
                    uint64_t v156 = sub_252D19408();
                    uint64_t v219 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v219(__dstd, __srcd, v156);
                    uint64_t v206 = v156;
                    v219((char *)v96 + v221[8], (char *)v227 + v221[8], v156);
                    uint64_t v157 = v151[9];
                    __dst = (char *)v96 + v157;
                    v158 = (char *)v227 + v157;
                    uint64_t v159 = type metadata accessor for RGDisplayRepresentation(0);
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v158, 1, v159))
                    {
                      uint64_t v160 = sub_252AC3A24(&qword_269C41AA0);
                      memcpy(__dst, v158, *(void *)(*(void *)(v160 - 8) + 64));
                    }
                    else
                    {
                      v219(__dst, v158, v206);
                      __src = (int *)v159;
                      uint64_t v161 = *(int *)(v159 + 20);
                      uint64_t v196 = &__dst[v161];
                      uint64_t v162 = v158;
                      int v163 = &v158[v161];
                      uint64_t v203 = v162;
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v163, 1, v206))
                      {
                        uint64_t v164 = sub_252AC3A24(&qword_269C41A90);
                        memcpy(v196, v163, *(void *)(*(void *)(v164 - 8) + 64));
                      }
                      else
                      {
                        v219(v196, v163, v206);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v196, 0, 1, v206);
                      }
                      uint64_t v165 = __src[6];
                      uint64_t v197 = &__dst[v165];
                      uint64_t v166 = &v162[v165];
                      uint64_t v167 = sub_252D19C68();
                      uint64_t v237 = v98;
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v166, 1, v167))
                      {
                        uint64_t v168 = sub_252AC3A24(&qword_269C41A98);
                        memcpy(v197, v166, *(void *)(*(void *)(v168 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v197, v166, v167);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v197, 0, 1, v167);
                      }
                      uint64_t v169 = __src[7];
                      uint64_t v170 = &__dst[v169];
                      char v171 = &v203[v169];
                      uint64_t v172 = *((void *)v171 + 1);
                      *(void *)uint64_t v170 = *(void *)v171;
                      *((void *)v170 + 1) = v172;
                      uint64_t v173 = __src[8];
                      uint64_t v198 = (uint64_t *)&__dst[v173];
                      uint64_t v174 = &v203[v173];
                      unint64_t v175 = *(void *)&v203[v173 + 8];
                      swift_bridgeObjectRetain();
                      if (v175 >> 60 == 15)
                      {
                        *(_OWORD *)uint64_t v198 = *(_OWORD *)v174;
                      }
                      else
                      {
                        uint64_t v176 = *(void *)v174;
                        sub_252AC5A54(v176, v175);
                        uint64_t *v198 = v176;
                        v198[1] = v175;
                      }
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, (uint64_t)__src);
                      uint64_t v98 = v237;
                    }
                    uint64_t v177 = v221[10];
                    __dsta = (char *)v96 + v177;
                    __srca = (char *)v227 + v177;
                    uint64_t v204 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)__srca, 1, v204))
                    {
                      uint64_t v178 = sub_252AC3A24(&qword_269C41AA8);
                      memcpy(__dsta, __srca, *(void *)(*(void *)(v178 - 8) + 64));
                    }
                    else
                    {
                      ((void (*)(void))v219)();
                      uint64_t v179 = *(int *)(v204 + 20);
                      uint64_t v199 = &__dsta[v179];
                      uint64_t v180 = &__srca[v179];
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__srca[v179], 1, v206))
                      {
                        uint64_t v181 = sub_252AC3A24(&qword_269C41A90);
                        memcpy(v199, v180, *(void *)(*(void *)(v181 - 8) + 64));
                      }
                      else
                      {
                        v219(v199, v180, v206);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v199, 0, 1, v206);
                      }
                      uint64_t v182 = *(int *)(v204 + 24);
                      uint64_t v220 = &__dsta[v182];
                      uint64_t v183 = &__srca[v182];
                      uint64_t v184 = sub_252D19C68();
                      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v183, 1, v184))
                      {
                        uint64_t v185 = sub_252AC3A24(&qword_269C41A98);
                        memcpy(v220, v183, *(void *)(*(void *)(v185 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v220, v183, v184);
                        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v220, 0, 1, v184);
                      }
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v204);
                    }
                    ((void (*)(char *, char *, uint64_t))v200)((char *)v96 + v221[11], (char *)v227 + v221[11], v242);
                    break;
                  case 3u:
                    uint64_t v235 = v98;
                    uint64_t v120 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v242 - 8) + 16);
                    v120(v96, v97);
                    uint64_t v121 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                    ((void (*)(char *, char *, uint64_t))v120)((char *)v96 + v121[5], (char *)v227 + v121[5], v242);
                    uint64_t v122 = v121[6];
                    uint64_t v123 = (char *)v96 + v122;
                    int v124 = (char *)v227 + v122;
                    *(_DWORD *)uint64_t v123 = *(_DWORD *)v124;
                    uint64_t v125 = *((void *)v124 + 2);
                    *((void *)v123 + 1) = *((void *)v124 + 1);
                    *((void *)v123 + 2) = v125;
                    *(uint64_t *)((char *)v96 + v121[7]) = *(uint64_t *)((char *)v227 + v121[7]);
                    *(uint64_t *)((char *)v96 + v121[8]) = *(uint64_t *)((char *)v227 + v121[8]);
                    uint64_t v126 = v121[9];
                    char v127 = (char *)v96 + v126;
                    uint64_t v128 = (char *)v227 + v126;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    uint64_t v129 = v128;
                    uint64_t v98 = v235;
                    ((void (*)(char *, char *, uint64_t))v120)(v127, v129, v242);
                    break;
                  case 4u:
                    uint64_t v130 = *v97;
                    unint64_t v131 = v227[1];
                    sub_252AC5A54(*v227, v131);
                    uint64_t *v96 = v130;
                    v96[1] = v131;
                    break;
                  case 5u:
                    uint64_t v132 = *v97;
                    unint64_t v243 = v97[1];
                    sub_252AC5A54(*v97, v243);
                    uint64_t *v96 = v132;
                    v96[1] = v243;
                    uint64_t v133 = v97[3];
                    v96[2] = v97[2];
                    v96[3] = v133;
                    uint64_t v134 = v97[5];
                    v96[4] = v227[4];
                    v96[5] = v134;
                    swift_bridgeObjectRetain();
                    goto LABEL_59;
                  case 6u:
                    uint64_t v236 = v98;
                    uint64_t v135 = *v97;
                    unint64_t v136 = v227[1];
                    sub_252AC5A54(*v227, v136);
                    uint64_t *v96 = v135;
                    v96[1] = v136;
                    uint64_t v137 = v227[3];
                    v96[2] = v227[2];
                    v96[3] = v137;
                    uint64_t v138 = v227 + 4;
                    unint64_t v139 = v227[5];
                    swift_bridgeObjectRetain();
                    if (v139 >> 60 == 15)
                    {
                      *((_OWORD *)v96 + 2) = *(_OWORD *)v138;
                    }
                    else
                    {
                      uint64_t v142 = *v138;
                      sub_252AC5A54(*v138, v139);
                      v96[4] = v142;
                      v96[5] = v139;
                    }
                    uint64_t v143 = v227[7];
                    v96[6] = v227[6];
                    v96[7] = v143;
                    swift_bridgeObjectRetain();
                    uint64_t v98 = v236;
                    break;
                  case 7u:
                    uint64_t v140 = sub_252D19C58();
                    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v140 - 8) + 16))(v96, v97, v140);
                    break;
                  case 8u:
                    uint64_t v141 = v97[1];
                    uint64_t *v96 = *v97;
                    v96[1] = v141;
LABEL_59:
                    swift_bridgeObjectRetain();
                    break;
                  default:
                    uint64_t v232 = v98;
                    uint64_t v101 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v242 - 8) + 16);
                    v101(v96, v97);
                    uint64_t v217 = (void (*)(char *, char *, uint64_t))v101;
                    uint64_t v102 = (int *)type metadata accessor for RGDisambiguationModel(0);
                    ((void (*)(char *, char *, uint64_t))v101)((char *)v96 + v102[5], (char *)v227 + v102[5], v242);
                    uint64_t v103 = v102[6];
                    uint64_t v104 = (char *)v96 + v103;
                    uint64_t v105 = (char *)v227 + v103;
                    *(_DWORD *)uint64_t v104 = *(_DWORD *)v105;
                    uint64_t v106 = *((void *)v105 + 2);
                    *((void *)v104 + 1) = *((void *)v105 + 1);
                    *((void *)v104 + 2) = v106;
                    *(uint64_t *)((char *)v96 + v102[7]) = *(uint64_t *)((char *)v227 + v102[7]);
                    *(uint64_t *)((char *)v96 + v102[8]) = *(uint64_t *)((char *)v227 + v102[8]);
                    uint64_t v107 = v102[9];
                    __srcb = (char *)v227 + v107;
                    __dstb = (char *)v96 + v107;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    ((void (*)(char *, char *, uint64_t))v101)(__dstb, __srcb, v242);
                    uint64_t v108 = v102[10];
                    uint64_t v109 = (uint64_t *)((char *)v96 + v108);
                    uint64_t v110 = (uint64_t *)((char *)v227 + v108);
                    uint64_t v111 = v110[1];
                    void *v109 = *v110;
                    v109[1] = v111;
                    uint64_t v112 = v102[11];
                    uint64_t v113 = (char *)v96 + v112;
                    unsigned __int8 v114 = (char *)v227 + v112;
                    swift_bridgeObjectRetain();
                    uint64_t v98 = v232;
                    v217(v113, v114, v242);
                    break;
                }
                swift_storeEnumTagMultiPayload();
                break;
              case 3u:
                uint64_t v233 = v98;
                uint64_t v116 = *v97;
                unint64_t v115 = v97[1];
                sub_252AC5A54(*v97, v115);
                uint64_t *v96 = v116;
                v96[1] = v115;
                uint64_t v98 = v233;
                uint64_t v117 = v97[3];
                v96[2] = v97[2];
                v96[3] = v117;
                goto LABEL_47;
              default:
                uint64_t v100 = v97[1];
                uint64_t *v96 = *v97;
                v96[1] = v100;
LABEL_47:
                swift_bridgeObjectRetain();
                break;
            }
            swift_storeEnumTagMultiPayload();
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v96, 0, 1, v98);
          }
          *((unsigned char *)v85 + v87[8]) = *((unsigned char *)v86 + v87[8]);
          *((unsigned char *)v85 + v87[9]) = *((unsigned char *)v86 + v87[9]);
          *(void *)((char *)v85 + v87[10]) = *(void *)((char *)v86 + v87[10]);
          uint64_t v186 = v87[11];
          uint64_t v187 = (void *)((char *)v85 + v186);
          uint64_t v188 = (void *)((char *)v86 + v186);
          uint64_t v189 = v188[1];
          *uint64_t v187 = *v188;
          v187[1] = v189;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, (uint64_t)v87);
        }
        uint64_t v190 = a3[9];
        uint64_t v191 = a3[10];
        uint64_t v192 = (uint64_t *)((char *)a1 + v190);
        uint64_t v193 = (uint64_t *)((char *)a2 + v190);
        uint64_t v194 = v193[1];
        *uint64_t v192 = *v193;
        v192[1] = v194;
        *(uint64_t *)((char *)a1 + v191) = *(uint64_t *)((char *)a2 + v191);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v21 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v238 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v22 = v238[5];
        uint64_t v23 = &v19[v22];
        uint64_t v24 = &v20[v22];
        uint64_t v25 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v242 - 8) + 16))(v23, v24);
          uint64_t v63 = *(int *)(v25 + 20);
          uint64_t v64 = &v23[v63];
          uint64_t v65 = &v24[v63];
          uint64_t v66 = *((void *)v65 + 1);
          *(void *)uint64_t v64 = *(void *)v65;
          *((void *)v64 + 1) = v66;
          uint64_t v67 = *(int *)(v25 + 24);
          uint64_t v68 = &v23[v67];
          uint64_t v69 = &v24[v67];
          uint64_t v70 = *((void *)v69 + 1);
          *(void *)uint64_t v68 = *(void *)v69;
          *((void *)v68 + 1) = v70;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v71 = v238;
        v19[v238[6]] = v20[v238[6]];
        uint64_t v72 = v238[7];
        uint64_t v73 = &v19[v72];
        uint64_t v74 = &v20[v72];
        uint64_t v231 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v74, 1, v231))
        {
          uint64_t v75 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          uint64_t v76 = *((void *)v74 + 1);
          *(void *)uint64_t v73 = *(void *)v74;
          *((void *)v73 + 1) = v76;
          uint64_t v77 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v78 = *(int *)(v77 + 20);
          uint64_t v223 = &v73[v78];
          uint64_t v226 = v77;
          uint64_t v222 = &v74[v78];
          uint64_t v71 = v238;
          swift_bridgeObjectRetain();
          uint64_t v79 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v223, v222, v79);
          *(void *)&v73[*(int *)(v226 + 24)] = *(void *)&v74[*(int *)(v226 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v73, 0, 1, v231);
        }
        v19[v71[8]] = v20[v71[8]];
        uint64_t v80 = v71[9];
        uint64_t v81 = &v19[v80];
        uint64_t v82 = &v20[v80];
        uint64_t v83 = *((void *)v82 + 1);
        *(void *)uint64_t v81 = *(void *)v82;
        *((void *)v81 + 1) = v83;
        goto LABEL_31;
    }
  }
  return a1;
}

uint64_t destroy for SystemResponse(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  if (*(void *)(a1 + a2[5] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      uint64_t v7 = type metadata accessor for ActionSuccess(0);
      uint64_t v8 = v5 + *(int *)(v7 + 20);
      uint64_t v9 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v9))
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v8, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v10 = v5 + *(int *)(v7 + 28);
      uint64_t v11 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v10
            + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
        uint64_t v13 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      goto LABEL_20;
    case 1u:
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 2u:
      goto LABEL_19;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_16;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v15 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v16 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_16;
    case 7u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_16:
      uint64_t v17 = v5 + *(int *)(v14 + 20);
      uint64_t v18 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      goto LABEL_21;
    case 8u:
      sub_252AD16E4(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
      goto LABEL_21;
    case 9u:
      goto LABEL_20;
    case 0xAu:
      if (*(void *)(v5 + 8) < 0x10uLL) {
        goto LABEL_21;
      }
LABEL_19:
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      uint64_t v19 = a1 + a2[8];
      uint64_t v20 = type metadata accessor for ResponseOutput(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
      {
        swift_bridgeObjectRelease();
        int v21 = *(unsigned __int8 *)(v19 + 24);
        if (v21 != 255) {
          sub_252AD170C(*(void *)(v19 + 8), *(void *)(v19 + 16), v21);
        }
        int v22 = *(unsigned __int8 *)(v19 + 48);
        if (v22 != 255) {
          sub_252AD170C(*(void *)(v19 + 32), *(void *)(v19 + 40), v22);
        }
        uint64_t v23 = (uint64_t *)(v19 + *(int *)(v20 + 28));
        uint64_t v24 = type metadata accessor for ResponseOutput.VisualOutput(0);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
              goto LABEL_31;
            case 2u:
              type metadata accessor for RGPluginModel(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v25 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v25(v23, v4);
                  uint64_t v26 = (int *)type metadata accessor for RGDisambiguationModel(0);
                  v25((uint64_t *)((char *)v23 + v26[5]), v4);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v25((uint64_t *)((char *)v23 + v26[9]), v4);
                  swift_bridgeObjectRelease();
                  uint64_t v27 = v26[11];
                  goto LABEL_55;
                case 1u:
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v4))(*(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(v23, v4); {
                  uint64_t v29 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                  }
                  uint64_t v55 = *(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v55((char *)v23 + v29[5], v4);
                  swift_bridgeObjectRelease();
                  uint64_t v53 = (char *)v23 + v29[7];
                  uint64_t v30 = sub_252D19408();
                  uint64_t v31 = *(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8);
                  v31(v53, v30);
                  v31((char *)v23 + v29[8], v30);
                  v55((char *)v23 + v29[9], v4);
                  goto LABEL_32;
                case 2u:
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v4))(*(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(v23, v4); {
                  uint64_t v32 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                  }
                  uint64_t v54 = *(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v54((char *)v23 + v32[5], v4);
                  swift_bridgeObjectRelease();
                  uint64_t v56 = (char *)v23 + v32[7];
                  uint64_t v33 = sub_252D19408();
                  uint64_t v34 = *(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8);
                  v34(v56, v33);
                  uint64_t v52 = v33;
                  uint64_t v35 = v33;
                  uint64_t v36 = v32;
                  uint64_t v57 = (void (*)(uint64_t, uint64_t))v34;
                  v34((char *)v23 + v32[8], v35);
                  uint64_t v37 = (uint64_t)v23 + v32[9];
                  uint64_t v38 = (int *)type metadata accessor for RGDisplayRepresentation(0);
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v37, 1, (uint64_t)v38))
                  {
                    v57(v37, v52);
                    uint64_t v49 = v37 + v38[5];
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v49, 1, v52)) {
                      v57(v49, v52);
                    }
                    uint64_t v39 = v37 + v38[6];
                    uint64_t v50 = sub_252D19C68();
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v39, 1, v50)) {
                      (*(void (**)(uint64_t))(*(void *)(v50 - 8) + 8))(v39);
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v40 = (uint64_t *)(v37 + v38[8]);
                    unint64_t v41 = v40[1];
                    if (v41 >> 60 != 15) {
                      sub_252AC5C14(*v40, v41);
                    }
                  }
                  uint64_t v42 = (uint64_t)v23 + v36[10];
                  uint64_t v43 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v42, 1, v43))
                  {
                    v57(v42, v52);
                    uint64_t v51 = v42 + *(int *)(v43 + 20);
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v51, 1, v52)) {
                      v57(v51, v52);
                    }
                    uint64_t v44 = v42 + *(int *)(v43 + 24);
                    uint64_t v45 = sub_252D19C68();
                    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v44, 1, v45)) {
                      (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
                    }
                  }
                  v54((char *)v23 + v36[11], v4);
                  goto LABEL_32;
                case 3u:
                  uint64_t v25 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8);
                  v25(v23, v4);
                  uint64_t v46 = type metadata accessor for RGToolDisambiguationModel(0);
                  v25((uint64_t *)((char *)v23 + *(int *)(v46 + 20)), v4);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v27 = *(int *)(v46 + 36);
LABEL_55:
                  v25((uint64_t *)((char *)v23 + v27), v4);
                  break;
                case 4u:
                  sub_252AC5C14(*v23, v23[1]);
                  break;
                case 5u:
                  sub_252AC5C14(*v23, v23[1]);
                  swift_bridgeObjectRelease();
                  goto LABEL_31;
                case 6u:
                  sub_252AC5C14(*v23, v23[1]);
                  swift_bridgeObjectRelease();
                  unint64_t v47 = v23[5];
                  if (v47 >> 60 != 15) {
                    sub_252AC5C14(v23[4], v47);
                  }
                  goto LABEL_31;
                case 7u:
                  uint64_t v48 = sub_252D19C58();
                  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v48 - 8) + 8))(v23, v48);
                  break;
                case 8u:
                  goto LABEL_31;
                default:
                  goto LABEL_32;
              }
              break;
            case 3u:
              sub_252AC5C14(*v23, v23[1]);
LABEL_31:
              swift_bridgeObjectRelease();
              break;
            default:
              break;
          }
        }
LABEL_32:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_21;
  }
}

char *initializeWithCopy for SystemResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *((void *)v10 + 2);
  if (v11 == 1)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((void *)v9 + 2) = *((void *)v10 + 2);
  }
  else
  {
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    *((void *)v9 + 1) = *((void *)v10 + 1);
    *((void *)v9 + 2) = v11;
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = &a1[v13];
  uint64_t v18 = &a2[v13];
  type metadata accessor for StatementOutcome(0);
  swift_bridgeObjectRetain();
  uint64_t v245 = v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v25 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v25;
      uint64_t v26 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v26;
      uint64_t v27 = *((void *)v18 + 5);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      *((void *)v17 + 5) = v27;
      *((void *)v17 + 6) = *((void *)v18 + 6);
      *((_WORD *)v17 + 28) = *((_WORD *)v18 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 2u:
      uint64_t v28 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v28;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 3u:
      uint64_t v29 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v29;
      uint64_t v30 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      unint64_t v241 = &v17[v30];
      uint64_t v234 = &v18[v30];
      uint64_t v31 = a3;
      uint64_t v32 = sub_252D19BE8();
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v34 = v32;
      a3 = v31;
      v33(v241, v234, v34);
      goto LABEL_24;
    case 4u:
      uint64_t v35 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v35;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      v17[24] = v18[24];
      uint64_t v36 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v37 = v36[6];
      uint64_t v242 = &v17[v37];
      uint64_t v235 = &v18[v37];
      uint64_t v38 = sub_252D19BE8();
      uint64_t v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v231(v242, v235, v38);
      uint64_t v39 = v36[7];
      uint64_t v40 = &v17[v39];
      unint64_t v41 = &v18[v39];
      uint64_t v42 = *((void *)v41 + 1);
      *(void *)uint64_t v40 = *(void *)v41;
      *((void *)v40 + 1) = v42;
      uint64_t v43 = v36[8];
      uint64_t v44 = &v17[v43];
      uint64_t v45 = &v18[v43];
      uint64_t v46 = *((void *)v45 + 1);
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = v46;
      goto LABEL_22;
    case 5u:
      uint64_t v47 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v47;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      v17[24] = v18[24];
      uint64_t v48 = *((void *)v18 + 5);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      *((void *)v17 + 5) = v48;
      uint64_t v49 = *((void *)v18 + 6);
      uint64_t v50 = *((void *)v18 + 7);
      *((void *)v17 + 6) = v49;
      *((void *)v17 + 7) = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 6u:
      uint64_t v51 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v51;
      uint64_t v52 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v53 = *(int *)(v52 + 20);
      unint64_t v243 = &v17[v53];
      uint64_t v236 = &v18[v53];
      uint64_t v54 = sub_252D19BE8();
      uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v232(v243, v236, v54);
      v17[*(int *)(v52 + 24)] = v18[*(int *)(v52 + 24)];
      goto LABEL_24;
    case 7u:
      uint64_t v55 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v55;
      uint64_t v56 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v244 = &v17[v56];
      uint64_t v237 = &v18[v56];
      uint64_t v57 = sub_252D19BE8();
      uint64_t v58 = a2;
      char v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v59(v244, v237, v57);
      a2 = v58;
      goto LABEL_24;
    case 8u:
      uint64_t v60 = *(void *)v18;
      uint64_t v61 = *((void *)v18 + 1);
      char v62 = v18[16];
      sub_252ACE7BC(v60, v61, v62);
      *(void *)uint64_t v17 = v60;
      *((void *)v17 + 1) = v61;
      v17[16] = v62;
      goto LABEL_24;
    case 9u:
      *(void *)uint64_t v17 = *(void *)v18;
      goto LABEL_23;
    case 0xAu:
      unint64_t v63 = *((void *)v18 + 1);
      if (v63 >= 0x10)
      {
        *(void *)uint64_t v17 = *(void *)v18;
        *((void *)v17 + 1) = v63;
        uint64_t v65 = *((void *)v18 + 3);
        *((void *)v17 + 2) = *((void *)v18 + 2);
        *((void *)v17 + 3) = v65;
        *((void *)v17 + 4) = *((void *)v18 + 4);
LABEL_22:
        swift_bridgeObjectRetain();
LABEL_23:
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v64 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v64;
        *((void *)v17 + 4) = *((void *)v18 + 4);
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = a3[8];
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      uint64_t v69 = (int *)type metadata accessor for ResponseOutput(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v68, 1, (uint64_t)v69))
      {
        uint64_t v70 = sub_252AC3A24(&qword_269C41AB8);
        memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v67 = *(void *)v68;
        int v71 = v68[24];
        swift_bridgeObjectRetain();
        if (v71 == 255)
        {
          *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
          v67[24] = v68[24];
        }
        else
        {
          uint64_t v72 = *((void *)v68 + 1);
          uint64_t v73 = *((void *)v68 + 2);
          sub_252ACE7E4(v72, v73, v71);
          *((void *)v67 + 1) = v72;
          *((void *)v67 + 2) = v73;
          v67[24] = v71;
        }
        int v74 = v68[48];
        uint64_t v247 = a3;
        if (v74 == 255)
        {
          *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
          v67[48] = v68[48];
        }
        else
        {
          uint64_t v75 = *((void *)v68 + 4);
          uint64_t v76 = *((void *)v68 + 5);
          sub_252ACE7E4(v75, v76, v74);
          *((void *)v67 + 4) = v75;
          *((void *)v67 + 5) = v76;
          v67[48] = v74;
        }
        uint64_t v77 = v69[7];
        uint64_t v78 = &v67[v77];
        uint64_t v79 = &v68[v77];
        uint64_t v80 = type metadata accessor for ResponseOutput.VisualOutput(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = sub_252AC3A24(&qword_269C41AB0);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
          a3 = v247;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              type metadata accessor for RGPluginModel(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v239 = a2;
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v79, 1, v245))
                  {
                    uint64_t v123 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v78, v79, *(void *)(*(void *)(v123 - 8) + 64));
                    uint64_t v124 = v245;
                  }
                  else
                  {
                    uint64_t v124 = v245;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v78, v79, v245);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v245);
                  }
                  uint64_t v148 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                  uint64_t v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
                  v222(&v78[v148[5]], &v79[v148[5]], v124);
                  uint64_t v149 = v148[6];
                  uint64_t v150 = &v78[v149];
                  uint64_t v151 = &v79[v149];
                  *(_DWORD *)uint64_t v150 = *(_DWORD *)v151;
                  uint64_t v206 = *((void *)v151 + 2);
                  *((void *)v150 + 1) = *((void *)v151 + 1);
                  *((void *)v150 + 2) = v206;
                  uint64_t v152 = v148[7];
                  __srcc = &v78[v152];
                  uint64_t v218 = v148;
                  __dstc = &v79[v152];
                  uint64_t v153 = sub_252D19408();
                  uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v154(__srcc, __dstc, v153);
                  v154(&v78[v218[8]], &v79[v218[8]], v153);
                  v222(&v78[v218[9]], &v79[v218[9]], v245);
                  a2 = v239;
                  a3 = v247;
                  goto LABEL_85;
                case 2u:
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v79, 1, v245))
                  {
                    uint64_t v125 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v78, v79, *(void *)(*(void *)(v125 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v78, v79, v245);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v245);
                  }
                  uint64_t v155 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                  uint64_t v205 = *(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16);
                  v205(&v78[v155[5]], &v79[v155[5]], v245);
                  uint64_t v156 = v155[6];
                  uint64_t v157 = &v78[v156];
                  v158 = &v79[v156];
                  *(_DWORD *)uint64_t v157 = *(_DWORD *)v158;
                  __srcd = (void *)*((void *)v158 + 2);
                  *((void *)v157 + 1) = *((void *)v158 + 1);
                  *((void *)v157 + 2) = __srcd;
                  uint64_t v159 = v155[7];
                  uint64_t v223 = &v78[v159];
                  uint64_t v227 = v155;
                  uint64_t v219 = &v79[v159];
                  uint64_t v230 = v79;
                  uint64_t v160 = sub_252D19408();
                  uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v161(v223, v219, v160);
                  uint64_t v220 = v160;
                  uint64_t v207 = v161;
                  v161(&v78[v227[8]], &v230[v227[8]], v160);
                  uint64_t v162 = v227[9];
                  int v163 = &v78[v162];
                  uint64_t v164 = &v230[v162];
                  uint64_t v165 = type metadata accessor for RGDisplayRepresentation(0);
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v164, 1, v165))
                  {
                    uint64_t v166 = sub_252AC3A24(&qword_269C41AA0);
                    memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
                  }
                  else
                  {
                    v207(v163, v164, v220);
                    uint64_t v167 = *(int *)(v165 + 20);
                    unint64_t v224 = v163;
                    __dst = &v163[v167];
                    __src = (int *)v165;
                    uint64_t v168 = &v164[v167];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v164[v167], 1, v220))
                    {
                      uint64_t v169 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(__dst, v168, *(void *)(*(void *)(v169 - 8) + 64));
                    }
                    else
                    {
                      v207(__dst, v168, v220);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v220);
                    }
                    uint64_t v170 = __src[6];
                    uint64_t v203 = &v163[v170];
                    __dsta = v164;
                    char v171 = &v164[v170];
                    uint64_t v172 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v171, 1, v172))
                    {
                      uint64_t v173 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v203, v171, *(void *)(*(void *)(v173 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v203, v171, v172);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v203, 0, 1, v172);
                    }
                    uint64_t v174 = __src[7];
                    unint64_t v175 = &v224[v174];
                    uint64_t v176 = &__dsta[v174];
                    uint64_t v177 = *((void *)v176 + 1);
                    *(void *)unint64_t v175 = *(void *)v176;
                    *((void *)v175 + 1) = v177;
                    uint64_t v178 = __src[8];
                    uint64_t v179 = &v224[v178];
                    uint64_t v180 = &__dsta[v178];
                    unint64_t v181 = *(void *)&__dsta[v178 + 8];
                    swift_bridgeObjectRetain();
                    if (v181 >> 60 == 15)
                    {
                      *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
                    }
                    else
                    {
                      uint64_t v182 = *(void *)v180;
                      sub_252AC5A54(v182, v181);
                      *(void *)uint64_t v179 = v182;
                      *((void *)v179 + 1) = v181;
                    }
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v224, 0, 1, (uint64_t)__src);
                  }
                  uint64_t v183 = v227[10];
                  uint64_t v225 = &v78[v183];
                  uint64_t v184 = &v230[v183];
                  __dstb = (int *)type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                  __srca = v184;
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v184, 1, (uint64_t)__dstb))
                  {
                    uint64_t v185 = sub_252AC3A24(&qword_269C41AA8);
                    memcpy(v225, v184, *(void *)(*(void *)(v185 - 8) + 64));
                  }
                  else
                  {
                    v207(v225, v184, v220);
                    uint64_t v186 = __dstb[5];
                    uint64_t v204 = &v225[v186];
                    uint64_t v187 = &v184[v186];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__srca[v186], 1, v220))
                    {
                      uint64_t v188 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v204, v187, *(void *)(*(void *)(v188 - 8) + 64));
                    }
                    else
                    {
                      v207(v204, v187, v220);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v204, 0, 1, v220);
                    }
                    uint64_t v189 = __dstb[6];
                    uint64_t v221 = &v225[v189];
                    uint64_t v190 = &__srca[v189];
                    uint64_t v191 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v190, 1, v191))
                    {
                      uint64_t v192 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v221, v190, *(void *)(*(void *)(v192 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v221, v190, v191);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v221, 0, 1, v191);
                    }
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v225, 0, 1, (uint64_t)__dstb);
                  }
                  v205(&v78[v227[11]], &v230[v227[11]], v245);
                  a3 = v247;
                  goto LABEL_85;
                case 3u:
                  uint64_t v226 = *(void (**)(char *, char *))(*(void *)(v245 - 8) + 16);
                  v226(v78, v79);
                  uint64_t v126 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v226)(&v78[v126[5]], &v79[v126[5]], v245);
                  uint64_t v127 = v126[6];
                  uint64_t v128 = &v78[v127];
                  uint64_t v129 = &v79[v127];
                  *(_DWORD *)uint64_t v128 = *(_DWORD *)v129;
                  uint64_t v130 = *((void *)v129 + 2);
                  *((void *)v128 + 1) = *((void *)v129 + 1);
                  *((void *)v128 + 2) = v130;
                  *(void *)&v78[v126[7]] = *(void *)&v79[v126[7]];
                  *(void *)&v78[v126[8]] = *(void *)&v79[v126[8]];
                  uint64_t v131 = v126[9];
                  uint64_t v132 = &v78[v131];
                  uint64_t v229 = &v79[v131];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v96 = v132;
                  int v97 = v229;
                  goto LABEL_50;
                case 4u:
                  uint64_t v133 = *(void *)v79;
                  unint64_t v134 = *((void *)v79 + 1);
                  sub_252AC5A54(*(void *)v79, v134);
                  *(void *)uint64_t v78 = v133;
                  *((void *)v78 + 1) = v134;
                  goto LABEL_56;
                case 5u:
                  uint64_t v135 = *(void *)v79;
                  unint64_t v136 = *((void *)v79 + 1);
                  sub_252AC5A54(*(void *)v79, v136);
                  *(void *)uint64_t v78 = v135;
                  *((void *)v78 + 1) = v136;
                  uint64_t v137 = *((void *)v79 + 3);
                  *((void *)v78 + 2) = *((void *)v79 + 2);
                  *((void *)v78 + 3) = v137;
                  uint64_t v138 = *((void *)v79 + 5);
                  *((void *)v78 + 4) = *((void *)v79 + 4);
                  *((void *)v78 + 5) = v138;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_56;
                case 6u:
                  uint64_t v139 = *(void *)v79;
                  unint64_t v140 = *((void *)v79 + 1);
                  sub_252AC5A54(*(void *)v79, v140);
                  *(void *)uint64_t v78 = v139;
                  *((void *)v78 + 1) = v140;
                  uint64_t v141 = *((void *)v79 + 3);
                  *((void *)v78 + 2) = *((void *)v79 + 2);
                  *((void *)v78 + 3) = v141;
                  uint64_t v142 = v79 + 32;
                  unint64_t v143 = *((void *)v79 + 5);
                  swift_bridgeObjectRetain();
                  if (v143 >> 60 == 15)
                  {
                    *((_OWORD *)v78 + 2) = *v142;
                  }
                  else
                  {
                    uint64_t v146 = *(void *)v142;
                    sub_252AC5A54(v146, v143);
                    *((void *)v78 + 4) = v146;
                    *((void *)v78 + 5) = v143;
                  }
                  uint64_t v147 = *((void *)v79 + 7);
                  *((void *)v78 + 6) = *((void *)v79 + 6);
                  *((void *)v78 + 7) = v147;
                  swift_bridgeObjectRetain();
                  a3 = v247;
                  goto LABEL_85;
                case 7u:
                  uint64_t v144 = sub_252D19C58();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v78, v79, v144);
                  goto LABEL_56;
                case 8u:
                  uint64_t v145 = *((void *)v79 + 1);
                  *(void *)uint64_t v78 = *(void *)v79;
                  *((void *)v78 + 1) = v145;
                  swift_bridgeObjectRetain();
                  goto LABEL_56;
                default:
                  uint64_t v226 = *(void (**)(char *, char *))(*(void *)(v245 - 8) + 16);
                  v226(v78, v79);
                  uint64_t v83 = (int *)type metadata accessor for RGDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v226)(&v78[v83[5]], &v79[v83[5]], v245);
                  uint64_t v84 = v83[6];
                  uint64_t v85 = &v78[v84];
                  uint64_t v86 = &v79[v84];
                  *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
                  uint64_t v87 = *((void *)v86 + 2);
                  *((void *)v85 + 1) = *((void *)v86 + 1);
                  *((void *)v85 + 2) = v87;
                  *(void *)&v78[v83[7]] = *(void *)&v79[v83[7]];
                  *(void *)&v78[v83[8]] = *(void *)&v79[v83[8]];
                  uint64_t v88 = v83[9];
                  __srcb = &v79[v88];
                  uint64_t v217 = &v78[v88];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v226)(v217, __srcb, v245);
                  uint64_t v89 = v83[10];
                  uint64_t v90 = &v78[v89];
                  uint64_t v91 = &v79[v89];
                  uint64_t v92 = *((void *)v91 + 1);
                  *(void *)uint64_t v90 = *(void *)v91;
                  *((void *)v90 + 1) = v92;
                  uint64_t v93 = v83[11];
                  uint64_t v94 = &v78[v93];
                  uint64_t v95 = &v79[v93];
                  swift_bridgeObjectRetain();
                  uint64_t v96 = v94;
                  int v97 = v95;
LABEL_50:
                  ((void (*)(char *, char *, uint64_t))v226)(v96, v97, v245);
LABEL_56:
                  a3 = v247;
LABEL_85:
                  swift_storeEnumTagMultiPayload();
                  break;
              }
              break;
            case 3u:
              uint64_t v98 = *(void *)v79;
              unint64_t v99 = *((void *)v79 + 1);
              sub_252AC5A54(*(void *)v79, v99);
              *(void *)uint64_t v78 = v98;
              *((void *)v78 + 1) = v99;
              uint64_t v100 = *((void *)v79 + 3);
              *((void *)v78 + 2) = *((void *)v79 + 2);
              *((void *)v78 + 3) = v100;
              goto LABEL_39;
            default:
              uint64_t v82 = *((void *)v79 + 1);
              *(void *)uint64_t v78 = *(void *)v79;
              *((void *)v78 + 1) = v82;
LABEL_39:
              swift_bridgeObjectRetain();
              a3 = v247;
              break;
          }
          swift_storeEnumTagMultiPayload();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v80);
        }
        v67[v69[8]] = v68[v69[8]];
        v67[v69[9]] = v68[v69[9]];
        *(void *)&v67[v69[10]] = *(void *)&v68[v69[10]];
        uint64_t v193 = v69[11];
        uint64_t v194 = &v67[v193];
        uint64_t v195 = &v68[v193];
        uint64_t v196 = *((void *)v195 + 1);
        *(void *)uint64_t v194 = *(void *)v195;
        *((void *)v194 + 1) = v196;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, (uint64_t)v69);
      }
      uint64_t v197 = a3[9];
      uint64_t v198 = a3[10];
      uint64_t v199 = &a1[v197];
      uint64_t v200 = &a2[v197];
      uint64_t v201 = *((void *)v200 + 1);
      *(void *)uint64_t v199 = *(void *)v200;
      *((void *)v199 + 1) = v201;
      *(void *)&a1[v198] = *(void *)&a2[v198];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    default:
      uint64_t v246 = a3;
      uint64_t v19 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      uint64_t v240 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v20 = v240[5];
      int v21 = &v17[v20];
      int v22 = &v18[v20];
      uint64_t v23 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 16))(v21, v22);
        uint64_t v101 = *(int *)(v23 + 20);
        uint64_t v102 = &v21[v101];
        uint64_t v103 = &v22[v101];
        uint64_t v104 = *((void *)v103 + 1);
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = v104;
        uint64_t v105 = *(int *)(v23 + 24);
        uint64_t v106 = &v21[v105];
        uint64_t v107 = &v22[v105];
        uint64_t v108 = *((void *)v107 + 1);
        *(void *)uint64_t v106 = *(void *)v107;
        *((void *)v106 + 1) = v108;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v23);
      }
      uint64_t v109 = v240;
      v17[v240[6]] = v18[v240[6]];
      uint64_t v110 = v240[7];
      uint64_t v111 = &v17[v110];
      uint64_t v112 = &v18[v110];
      uint64_t v113 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v112, 1, v113))
      {
        uint64_t v114 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        uint64_t v115 = *((void *)v112 + 1);
        *(void *)uint64_t v111 = *(void *)v112;
        *((void *)v111 + 1) = v115;
        uint64_t v116 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v117 = *(int *)(v116 + 20);
        uint64_t v233 = &v111[v117];
        uint64_t v238 = v116;
        uint64_t v228 = &v112[v117];
        uint64_t v109 = v240;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v233, v228, v118);
        *(void *)&v111[*(int *)(v238 + 24)] = *(void *)&v112[*(int *)(v238 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v111, 0, 1, v113);
      }
      v17[v109[8]] = v18[v109[8]];
      uint64_t v119 = v109[9];
      uint64_t v120 = &v17[v119];
      uint64_t v121 = &v18[v119];
      uint64_t v122 = *((void *)v121 + 1);
      *(void *)uint64_t v120 = *(void *)v121;
      *((void *)v120 + 1) = v122;
      swift_bridgeObjectRetain();
      a3 = v246;
      goto LABEL_24;
  }
}

uint64_t assignWithCopy for SystemResponse(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v463 = a1;
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      size_t v9 = *(void *)(*(void *)(sub_252AC3A24(&qword_26B2320E8) - 8) + 64);
      uint64_t v10 = (void *)a1;
LABEL_6:
      memcpy(v10, a2, v9);
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, v6);
  }
  else
  {
    uint64_t v11 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v6);
      size_t v9 = *(void *)(*(void *)(sub_252AC3A24(&qword_26B2320E8) - 8) + 64);
      uint64_t v10 = (void *)a1;
      goto LABEL_6;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 24))(a1, a2, v6);
  }
LABEL_9:
  uint64_t v12 = a3[5];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)(a1 + v12 + 16);
  uint64_t v16 = *(void *)&a2[v12 + 16];
  uint64_t v462 = v6;
  if (v15 == 1)
  {
    if (v16 == 1)
    {
      long long v17 = *(_OWORD *)v14;
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      *(_OWORD *)uint64_t v13 = v17;
    }
    else
    {
      *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
      *(void *)(v13 + 8) = *((void *)v14 + 1);
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_252C937FC(v13);
    uint64_t v18 = *((void *)v14 + 2);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(void *)(v13 + 16) = v18;
  }
  else
  {
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    *(void *)(v13 + 8) = *((void *)v14 + 1);
    *(void *)(v13 + 16) = *((void *)v14 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = (void *)(a1 + v19);
  int v21 = &a2[v19];
  void *v20 = *(void *)v21;
  v20[1] = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((char *)a1 != a2)
  {
    uint64_t v22 = a3[7];
    uint64_t v23 = a1 + v22;
    uint64_t v24 = &a2[v22];
    sub_252BA6670();
    type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        *(void *)(v23 + 16) = *((void *)v24 + 2);
        *(void *)(v23 + 24) = *((void *)v24 + 3);
        *(void *)(v23 + 32) = *((void *)v24 + 4);
        *(void *)(v23 + 40) = *((void *)v24 + 5);
        *(void *)(v23 + 48) = *((void *)v24 + 6);
        *(unsigned char *)(v23 + 56) = v24[56];
        *(unsigned char *)(v23 + 57) = v24[57];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_34;
      case 2u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        *(void *)(v23 + 16) = *((void *)v24 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_34;
      case 3u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        uint64_t v32 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v33 = v23 + v32;
        v451 = &v24[v32];
        uint64_t v34 = a3;
        uint64_t v35 = sub_252D19BE8();
        uint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        uint64_t v37 = a2;
        swift_bridgeObjectRetain();
        uint64_t v38 = v35;
        a3 = v34;
        v36(v33, v451, v38);
        goto LABEL_27;
      case 4u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        uint64_t v39 = *((void *)v24 + 2);
        *(unsigned char *)(v23 + 24) = v24[24];
        *(void *)(v23 + 16) = v39;
        uint64_t v40 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v41 = v40[6];
        v448 = &v24[v41];
        uint64_t v452 = v23 + v41;
        uint64_t v42 = sub_252D19BE8();
        v442 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        v442(v452, v448, v42);
        uint64_t v43 = v40[7];
        uint64_t v44 = (void *)(v23 + v43);
        uint64_t v45 = &v24[v43];
        *uint64_t v44 = *(void *)v45;
        v44[1] = *((void *)v45 + 1);
        uint64_t v46 = v40[8];
        uint64_t v47 = (void *)(v23 + v46);
        uint64_t v48 = &v24[v46];
        *uint64_t v47 = *(void *)v48;
        v47[1] = *((void *)v48 + 1);
        goto LABEL_33;
      case 5u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        uint64_t v49 = *((void *)v24 + 2);
        *(unsigned char *)(v23 + 24) = v24[24];
        *(void *)(v23 + 16) = v49;
        *(void *)(v23 + 32) = *((void *)v24 + 4);
        *(void *)(v23 + 40) = *((void *)v24 + 5);
        *(void *)(v23 + 48) = *((void *)v24 + 6);
        *(void *)(v23 + 56) = *((void *)v24 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_34;
      case 6u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        uint64_t v50 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v51 = *(int *)(v50 + 20);
        v449 = &v24[v51];
        uint64_t v453 = v23 + v51;
        v459 = a2;
        uint64_t v52 = sub_252D19BE8();
        uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v54 = v52;
        a2 = v459;
        v53(v453, v449, v54);
        *(unsigned char *)(v23 + *(int *)(v50 + 24)) = v24[*(int *)(v50 + 24)];
        goto LABEL_35;
      case 7u:
        *(void *)uint64_t v23 = *(void *)v24;
        *(void *)(v23 + 8) = *((void *)v24 + 1);
        uint64_t v55 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v56 = v23 + v55;
        v454 = &v24[v55];
        uint64_t v57 = sub_252D19BE8();
        uint64_t v58 = a3;
        char v59 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        uint64_t v37 = a2;
        swift_bridgeObjectRetain();
        v59(v56, v454, v57);
        a3 = v58;
LABEL_27:
        a2 = v37;
        goto LABEL_35;
      case 8u:
        uint64_t v60 = *(void *)v24;
        uint64_t v61 = *((void *)v24 + 1);
        char v62 = v24[16];
        sub_252ACE7BC(*(void *)v24, v61, v62);
        *(void *)uint64_t v23 = v60;
        *(void *)(v23 + 8) = v61;
        *(unsigned char *)(v23 + 16) = v62;
        goto LABEL_35;
      case 9u:
        *(void *)uint64_t v23 = *(void *)v24;
        goto LABEL_34;
      case 0xAu:
        if (*((void *)v24 + 1) >= 0x10uLL)
        {
          *(void *)uint64_t v23 = *(void *)v24;
          *(void *)(v23 + 8) = *((void *)v24 + 1);
          *(void *)(v23 + 16) = *((void *)v24 + 2);
          *(void *)(v23 + 24) = *((void *)v24 + 3);
          *(void *)(v23 + 32) = *((void *)v24 + 4);
LABEL_33:
          swift_bridgeObjectRetain();
LABEL_34:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v63 = *(_OWORD *)v24;
          long long v64 = *((_OWORD *)v24 + 1);
          *(void *)(v23 + 32) = *((void *)v24 + 4);
          *(_OWORD *)uint64_t v23 = v63;
          *(_OWORD *)(v23 + 16) = v64;
        }
LABEL_35:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v456 = a3;
        v458 = a2;
        uint64_t v25 = sub_252D19BE8();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        uint64_t v26 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v27 = v26[5];
        uint64_t v28 = (char *)(v23 + v27);
        uint64_t v29 = &v24[v27];
        uint64_t v30 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v462 - 8) + 16))(v28, v29);
          uint64_t v113 = *(int *)(v30 + 20);
          uint64_t v114 = &v28[v113];
          uint64_t v115 = &v29[v113];
          *(void *)uint64_t v114 = *(void *)v115;
          *((void *)v114 + 1) = *((void *)v115 + 1);
          uint64_t v116 = *(int *)(v30 + 24);
          uint64_t v117 = &v28[v116];
          uint64_t v118 = &v29[v116];
          *(void *)uint64_t v117 = *(void *)v118;
          *((void *)v117 + 1) = *((void *)v118 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v30);
        }
        *(unsigned char *)(v23 + v26[6]) = v24[v26[6]];
        uint64_t v119 = v26[7];
        uint64_t v120 = (void *)(v23 + v119);
        uint64_t v121 = &v24[v119];
        uint64_t v122 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v121, 1, v122))
        {
          uint64_t v123 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          *uint64_t v120 = *(void *)v121;
          v120[1] = *((void *)v121 + 1);
          uint64_t v124 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v125 = *(int *)(v124 + 20);
          v450 = &v121[v125];
          v455 = (char *)v120 + v125;
          swift_bridgeObjectRetain();
          uint64_t v126 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v455, v450, v126);
          *(void *)((char *)v120 + *(int *)(v124 + 24)) = *(void *)&v121[*(int *)(v124 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v120, 0, 1, v122);
        }
        *(unsigned char *)(v23 + v26[8]) = v24[v26[8]];
        uint64_t v127 = v26[9];
        uint64_t v128 = (void *)(v23 + v127);
        uint64_t v129 = &v24[v127];
        *uint64_t v128 = *(void *)v129;
        v128[1] = *((void *)v129 + 1);
        swift_bridgeObjectRetain();
        a2 = v458;
        a3 = v456;
        goto LABEL_35;
    }
  }
  uint64_t v65 = a3[8];
  uint64_t v66 = (char *)(v463 + v65);
  uint64_t v67 = &a2[v65];
  uint64_t v68 = (int *)type metadata accessor for ResponseOutput(0);
  int v69 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v66, 1, (uint64_t)v68);
  int v70 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v67, 1, (uint64_t)v68);
  if (!v69)
  {
    if (v70)
    {
      sub_252BA6670();
      goto LABEL_42;
    }
    *(void *)uint64_t v66 = *(void *)v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v75 = (long long *)(v66 + 8);
    uint64_t v76 = (long long *)(v67 + 8);
    int v77 = v67[24];
    if (v66[24] == 255)
    {
      if (v77 == 255)
      {
        long long v130 = *v76;
        v66[24] = v67[24];
        *uint64_t v75 = v130;
      }
      else
      {
        uint64_t v93 = *((void *)v67 + 1);
        uint64_t v94 = *((void *)v67 + 2);
        sub_252ACE7E4(v93, v94, v67[24]);
        *((void *)v66 + 1) = v93;
        *((void *)v66 + 2) = v94;
        v66[24] = v77;
      }
    }
    else if (v77 == 255)
    {
      sub_252B6B294((uint64_t)(v66 + 8));
      char v95 = v67[24];
      *uint64_t v75 = *v76;
      v66[24] = v95;
    }
    else
    {
      uint64_t v78 = *((void *)v67 + 1);
      uint64_t v79 = *((void *)v67 + 2);
      sub_252ACE7E4(v78, v79, v67[24]);
      uint64_t v80 = *((void *)v66 + 1);
      uint64_t v81 = *((void *)v66 + 2);
      *((void *)v66 + 1) = v78;
      *((void *)v66 + 2) = v79;
      unsigned __int8 v82 = v66[24];
      v66[24] = v77;
      sub_252AD170C(v80, v81, v82);
    }
    uint64_t v131 = (long long *)(v66 + 32);
    uint64_t v132 = (long long *)(v67 + 32);
    int v133 = v67[48];
    v461 = a2;
    v457 = a3;
    if (v66[48] == 255)
    {
      if (v133 == 255)
      {
        long long v142 = *v132;
        v66[48] = v67[48];
        *uint64_t v131 = v142;
      }
      else
      {
        uint64_t v139 = *((void *)v67 + 4);
        uint64_t v140 = *((void *)v67 + 5);
        sub_252ACE7E4(v139, v140, v133);
        *((void *)v66 + 4) = v139;
        *((void *)v66 + 5) = v140;
        v66[48] = v133;
      }
    }
    else if (v133 == 255)
    {
      sub_252B6B294((uint64_t)(v66 + 32));
      char v141 = v67[48];
      *uint64_t v131 = *v132;
      v66[48] = v141;
    }
    else
    {
      uint64_t v134 = *((void *)v67 + 4);
      uint64_t v135 = *((void *)v67 + 5);
      sub_252ACE7E4(v134, v135, v133);
      uint64_t v136 = *((void *)v66 + 4);
      uint64_t v137 = *((void *)v66 + 5);
      *((void *)v66 + 4) = v134;
      *((void *)v66 + 5) = v135;
      unsigned __int8 v138 = v66[48];
      v66[48] = v133;
      sub_252AD170C(v136, v137, v138);
    }
    uint64_t v143 = v68[7];
    uint64_t v144 = &v66[v143];
    uint64_t v145 = &v67[v143];
    uint64_t v146 = type metadata accessor for ResponseOutput.VisualOutput(0);
    int v147 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v144, 1, v146);
    int v148 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v146);
    if (v147)
    {
      if (!v148)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            type metadata accessor for RGPluginModel(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v462))
                {
                  uint64_t v201 = sub_252AC3A24(&qword_26B2320E8);
                  memcpy(v144, v145, *(void *)(*(void *)(v201 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v144, v145, v462);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v462);
                }
                uint64_t v262 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                uint64_t v425 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                v425(&v144[v262[5]], &v145[v262[5]]);
                uint64_t v263 = v262[6];
                uint64_t v264 = &v144[v263];
                uint64_t v265 = &v145[v263];
                *(_DWORD *)uint64_t v264 = *(_DWORD *)v265;
                *((void *)v264 + 1) = *((void *)v265 + 1);
                *((void *)v264 + 2) = *((void *)v265 + 2);
                uint64_t v266 = v262[7];
                uint64_t v409 = &v145[v266];
                uint64_t v417 = &v144[v266];
                uint64_t v267 = sub_252D19408();
                v268 = *(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16);
                swift_bridgeObjectRetain();
                v268(v417, v409, v267);
                v268(&v144[v262[8]], &v145[v262[8]], v267);
                ((void (*)(char *, char *, uint64_t))v425)(&v144[v262[9]], &v145[v262[9]], v462);
                break;
              case 2u:
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v462))
                {
                  uint64_t v202 = sub_252AC3A24(&qword_26B2320E8);
                  memcpy(v144, v145, *(void *)(*(void *)(v202 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v144, v145, v462);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v462);
                }
                uint64_t v269 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                v399 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                v399(&v144[v269[5]], &v145[v269[5]]);
                uint64_t v270 = v269[6];
                uint64_t v271 = &v144[v270];
                uint64_t v272 = &v145[v270];
                *(_DWORD *)uint64_t v271 = *(_DWORD *)v272;
                *((void *)v271 + 1) = *((void *)v272 + 1);
                *((void *)v271 + 2) = *((void *)v272 + 2);
                uint64_t v273 = v269[7];
                v418 = &v144[v273];
                uint64_t v426 = &v145[v273];
                uint64_t v274 = sub_252D19408();
                uint64_t v275 = *(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 16);
                swift_bridgeObjectRetain();
                v275(v418, v426, v274);
                uint64_t v410 = (void *)v274;
                uint64_t v402 = (void (*)(char *, char *, void *))v275;
                v275(&v144[v269[8]], &v145[v269[8]], v274);
                v439 = v269;
                uint64_t v276 = v269[9];
                v277 = &v144[v276];
                uint64_t v278 = &v145[v276];
                uint64_t v279 = type metadata accessor for RGDisplayRepresentation(0);
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v278, 1, v279))
                {
                  uint64_t v280 = sub_252AC3A24(&qword_269C41AA0);
                  memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
                }
                else
                {
                  v402(v277, v278, v410);
                  uint64_t v419 = (uint64_t)v277;
                  v427 = (int *)v279;
                  uint64_t v285 = *(int *)(v279 + 20);
                  uint64_t v286 = &v277[v285];
                  uint64_t v405 = v278;
                  unint64_t v287 = &v278[v285];
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v278[v285], 1, (uint64_t)v410))
                  {
                    uint64_t v288 = sub_252AC3A24(&qword_269C41A90);
                    memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
                  }
                  else
                  {
                    v402(v286, v287, v410);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v286, 0, 1, (uint64_t)v410);
                  }
                  uint64_t v332 = v427[6];
                  v392 = (void *)(v419 + v332);
                  uint64_t v333 = &v278[v332];
                  uint64_t v334 = sub_252D19C68();
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v333, 1, v334))
                  {
                    uint64_t v335 = sub_252AC3A24(&qword_269C41A98);
                    memcpy(v392, v333, *(void *)(*(void *)(v335 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(*(void *)(v334 - 8) + 16))(v392, v333, v334);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v392, 0, 1, v334);
                  }
                  uint64_t v340 = v427[7];
                  uint64_t v341 = (void *)(v419 + v340);
                  v342 = &v278[v340];
                  *uint64_t v341 = *(void *)v342;
                  v341[1] = *((void *)v342 + 1);
                  uint64_t v343 = v427[8];
                  uint64_t v344 = v419 + v343;
                  v345 = &v278[v343];
                  unint64_t v346 = *(void *)&v405[v343 + 8];
                  swift_bridgeObjectRetain();
                  if (v346 >> 60 == 15)
                  {
                    *(_OWORD *)uint64_t v344 = *(_OWORD *)v345;
                  }
                  else
                  {
                    uint64_t v347 = *(void *)v345;
                    sub_252AC5A54(v347, v346);
                    *(void *)uint64_t v344 = v347;
                    *(void *)(v344 + 8) = v346;
                  }
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v419, 0, 1, (uint64_t)v427);
                }
                uint64_t v348 = v439[10];
                uint64_t v432 = &v144[v348];
                v421 = &v145[v348];
                uint64_t v406 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v421, 1, v406))
                {
                  uint64_t v349 = sub_252AC3A24(&qword_269C41AA8);
                  memcpy(v432, v421, *(void *)(*(void *)(v349 - 8) + 64));
                }
                else
                {
                  v402(v432, v421, v410);
                  uint64_t v350 = *(int *)(v406 + 20);
                  uint64_t v393 = &v432[v350];
                  uint64_t v351 = &v421[v350];
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v421[v350], 1, (uint64_t)v410))
                  {
                    uint64_t v352 = sub_252AC3A24(&qword_269C41A90);
                    memcpy(v393, v351, *(void *)(*(void *)(v352 - 8) + 64));
                  }
                  else
                  {
                    v402(v393, v351, v410);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v393, 0, 1, (uint64_t)v410);
                  }
                  uint64_t v353 = *(int *)(v406 + 24);
                  uint64_t v354 = (uint64_t)v432;
                  v446 = &v432[v353];
                  uint64_t v355 = &v421[v353];
                  uint64_t v356 = sub_252D19C68();
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v355, 1, v356))
                  {
                    uint64_t v357 = sub_252AC3A24(&qword_269C41A98);
                    memcpy(v446, v355, *(void *)(*(void *)(v357 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v446, v355, v356);
                    uint64_t v354 = (uint64_t)v432;
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v446, 0, 1, v356);
                  }
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v354, 0, 1, v406);
                }
                ((void (*)(char *, char *, uint64_t))v399)(&v144[v439[11]], &v145[v439[11]], v462);
                break;
              case 3u:
                v435 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                v435(v144, v145);
                uint64_t v203 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                ((void (*)(char *, char *, uint64_t))v435)(&v144[v203[5]], &v145[v203[5]], v462);
                uint64_t v204 = v203[6];
                uint64_t v205 = &v144[v204];
                uint64_t v206 = &v145[v204];
                *(_DWORD *)uint64_t v205 = *(_DWORD *)v206;
                *((void *)v205 + 1) = *((void *)v206 + 1);
                *((void *)v205 + 2) = *((void *)v206 + 2);
                *(void *)&v144[v203[7]] = *(void *)&v145[v203[7]];
                *(void *)&v144[v203[8]] = *(void *)&v145[v203[8]];
                uint64_t v207 = v203[9];
                unint64_t v208 = &v144[v207];
                uint64_t v209 = &v145[v207];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v162 = v208;
                int v163 = v209;
                uint64_t v164 = v462;
                goto LABEL_111;
              case 4u:
                uint64_t v210 = *(void *)v145;
                unint64_t v211 = *((void *)v145 + 1);
                sub_252AC5A54(*(void *)v145, v211);
                *(void *)uint64_t v144 = v210;
                *((void *)v144 + 1) = v211;
                break;
              case 5u:
                uint64_t v212 = *(void *)v145;
                unint64_t v213 = *((void *)v145 + 1);
                sub_252AC5A54(*(void *)v145, v213);
                *(void *)uint64_t v144 = v212;
                *((void *)v144 + 1) = v213;
                *((void *)v144 + 2) = *((void *)v145 + 2);
                *((void *)v144 + 3) = *((void *)v145 + 3);
                *((void *)v144 + 4) = *((void *)v145 + 4);
                *((void *)v144 + 5) = *((void *)v145 + 5);
                swift_bridgeObjectRetain();
                goto LABEL_128;
              case 6u:
                uint64_t v214 = *(void *)v145;
                unint64_t v215 = *((void *)v145 + 1);
                sub_252AC5A54(*(void *)v145, v215);
                *(void *)uint64_t v144 = v214;
                *((void *)v144 + 1) = v215;
                *((void *)v144 + 2) = *((void *)v145 + 2);
                *((void *)v144 + 3) = *((void *)v145 + 3);
                uint64_t v216 = v145 + 32;
                unint64_t v217 = *((void *)v145 + 5);
                swift_bridgeObjectRetain();
                if (v217 >> 60 == 15)
                {
                  *((_OWORD *)v144 + 2) = *v216;
                }
                else
                {
                  uint64_t v242 = *(void *)v216;
                  sub_252AC5A54(v242, v217);
                  *((void *)v144 + 4) = v242;
                  *((void *)v144 + 5) = v217;
                }
                *((void *)v144 + 6) = *((void *)v145 + 6);
                *((void *)v144 + 7) = *((void *)v145 + 7);
                goto LABEL_128;
              case 7u:
                uint64_t v218 = sub_252D19C58();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16))(v144, v145, v218);
                break;
              case 8u:
                *(void *)uint64_t v144 = *(void *)v145;
                *((void *)v144 + 1) = *((void *)v145 + 1);
LABEL_128:
                swift_bridgeObjectRetain();
                break;
              default:
                v435 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                v435(v144, v145);
                uint64_t v150 = (int *)type metadata accessor for RGDisambiguationModel(0);
                ((void (*)(char *, char *, uint64_t))v435)(&v144[v150[5]], &v145[v150[5]], v462);
                uint64_t v151 = v150[6];
                uint64_t v152 = &v144[v151];
                uint64_t v153 = &v145[v151];
                *(_DWORD *)uint64_t v152 = *(_DWORD *)v153;
                *((void *)v152 + 1) = *((void *)v153 + 1);
                *((void *)v152 + 2) = *((void *)v153 + 2);
                *(void *)&v144[v150[7]] = *(void *)&v145[v150[7]];
                *(void *)&v144[v150[8]] = *(void *)&v145[v150[8]];
                uint64_t v154 = v150[9];
                uint64_t v155 = &v144[v154];
                uint64_t v414 = &v145[v154];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                ((void (*)(char *, char *, uint64_t))v435)(v155, v414, v462);
                uint64_t v156 = v150[10];
                uint64_t v157 = &v144[v156];
                v158 = &v145[v156];
                *(void *)uint64_t v157 = *(void *)v158;
                *((void *)v157 + 1) = *((void *)v158 + 1);
                uint64_t v159 = v150[11];
                uint64_t v160 = &v144[v159];
                uint64_t v161 = &v145[v159];
                swift_bridgeObjectRetain();
                uint64_t v162 = v160;
                int v163 = v161;
                uint64_t v164 = v462;
LABEL_111:
                ((void (*)(char *, char *, uint64_t))v435)(v162, v163, v164);
                break;
            }
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v165 = *(void *)v145;
            unint64_t v166 = *((void *)v145 + 1);
            sub_252AC5A54(*(void *)v145, v166);
            *(void *)uint64_t v144 = v165;
            *((void *)v144 + 1) = v166;
            *((void *)v144 + 2) = *((void *)v145 + 2);
            *((void *)v144 + 3) = *((void *)v145 + 3);
            goto LABEL_87;
          default:
            *(void *)uint64_t v144 = *(void *)v145;
            *((void *)v144 + 1) = *((void *)v145 + 1);
LABEL_87:
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v146);
        goto LABEL_219;
      }
    }
    else
    {
      if (!v148)
      {
        if ((char *)v463 != v461)
        {
          sub_252BA6670();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              type metadata accessor for RGPluginModel(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v462))
                  {
                    uint64_t v243 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v144, v145, *(void *)(*(void *)(v243 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v144, v145, v462);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v462);
                  }
                  uint64_t v311 = (int *)type metadata accessor for RGActionConfirmationModel(0);
                  v440 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                  v440(&v144[v311[5]], &v145[v311[5]]);
                  uint64_t v312 = v311[6];
                  v313 = &v144[v312];
                  uint64_t v314 = &v145[v312];
                  *(_DWORD *)v313 = *(_DWORD *)v314;
                  *((void *)v313 + 1) = *((void *)v314 + 1);
                  *((void *)v313 + 2) = *((void *)v314 + 2);
                  uint64_t v315 = v311[7];
                  v420 = &v145[v315];
                  v429 = &v144[v315];
                  uint64_t v316 = sub_252D19408();
                  v317 = *(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v317(v429, v420, v316);
                  v317(&v144[v311[8]], &v145[v311[8]], v316);
                  ((void (*)(char *, char *, uint64_t))v440)(&v144[v311[9]], &v145[v311[9]], v462);
                  break;
                case 2u:
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v462))
                  {
                    uint64_t v244 = sub_252AC3A24(&qword_26B2320E8);
                    memcpy(v144, v145, *(void *)(*(void *)(v244 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v144, v145, v462);
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v144, 0, 1, v462);
                  }
                  v318 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
                  uint64_t v412 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                  v412(&v144[v318[5]], &v145[v318[5]]);
                  uint64_t v319 = v318[6];
                  uint64_t v320 = &v144[v319];
                  v321 = &v145[v319];
                  *(_DWORD *)uint64_t v320 = *(_DWORD *)v321;
                  *((void *)v320 + 1) = *((void *)v321 + 1);
                  *((void *)v320 + 2) = *((void *)v321 + 2);
                  uint64_t v322 = v318[7];
                  v444 = &v144[v322];
                  uint64_t v430 = &v145[v322];
                  uint64_t v323 = sub_252D19408();
                  v324 = *(void (**)(char *, char *, void *))(*(void *)(v323 - 8) + 16);
                  v325 = v318;
                  unint64_t v326 = (void *)v323;
                  swift_bridgeObjectRetain();
                  v324(v444, v430, v326);
                  v431 = v326;
                  v324(&v144[v325[8]], &v145[v325[8]], v326);
                  v441 = v325;
                  uint64_t v327 = v325[9];
                  uint64_t v328 = &v144[v327];
                  uint64_t v329 = &v145[v327];
                  uint64_t v330 = (int *)type metadata accessor for RGDisplayRepresentation(0);
                  uint64_t v403 = v324;
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v329, 1, (uint64_t)v330))
                  {
                    uint64_t v331 = sub_252AC3A24(&qword_269C41AA0);
                    memcpy(v328, v329, *(void *)(*(void *)(v331 - 8) + 64));
                  }
                  else
                  {
                    v324(v328, v329, v431);
                    v396 = v329;
                    uint64_t v400 = (uint64_t)v330;
                    uint64_t v336 = v330[5];
                    v445 = v328;
                    uint64_t v337 = &v328[v336];
                    uint64_t v338 = &v329[v336];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v329[v336], 1, (uint64_t)v431))
                    {
                      uint64_t v339 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v337, v338, *(void *)(*(void *)(v339 - 8) + 64));
                    }
                    else
                    {
                      v403(v337, v338, v431);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v337, 0, 1, (uint64_t)v431);
                    }
                    uint64_t v358 = v330[6];
                    uint64_t v394 = &v445[v358];
                    v359 = &v329[v358];
                    uint64_t v360 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v359, 1, v360))
                    {
                      uint64_t v361 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v394, v359, *(void *)(*(void *)(v361 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v360 - 8) + 16))(v394, v359, v360);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v394, 0, 1, v360);
                    }
                    uint64_t v362 = v330[7];
                    v363 = &v445[v362];
                    uint64_t v364 = &v396[v362];
                    *(void *)v363 = *(void *)v364;
                    *((void *)v363 + 1) = *((void *)v364 + 1);
                    uint64_t v365 = v330[8];
                    uint64_t v366 = &v445[v365];
                    v367 = &v396[v365];
                    unint64_t v368 = *(void *)&v396[v365 + 8];
                    swift_bridgeObjectRetain();
                    if (v368 >> 60 == 15)
                    {
                      *(_OWORD *)uint64_t v366 = *(_OWORD *)v367;
                    }
                    else
                    {
                      uint64_t v369 = *(void *)v367;
                      sub_252AC5A54(v369, v368);
                      *(void *)uint64_t v366 = v369;
                      *((void *)v366 + 1) = v368;
                    }
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v445, 0, 1, v400);
                  }
                  uint64_t v370 = v441[10];
                  v447 = &v144[v370];
                  uint64_t v371 = &v145[v370];
                  uint64_t v372 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
                  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v371, 1, v372))
                  {
                    uint64_t v373 = sub_252AC3A24(&qword_269C41AA8);
                    memcpy(v447, v371, *(void *)(*(void *)(v373 - 8) + 64));
                  }
                  else
                  {
                    v403(v447, v371, v431);
                    v397 = v371;
                    uint64_t v401 = v372;
                    uint64_t v374 = *(int *)(v372 + 20);
                    uint64_t v395 = &v447[v374];
                    v375 = &v371[v374];
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v371[v374], 1, (uint64_t)v431))
                    {
                      uint64_t v376 = sub_252AC3A24(&qword_269C41A90);
                      memcpy(v395, v375, *(void *)(*(void *)(v376 - 8) + 64));
                    }
                    else
                    {
                      v403(v395, v375, v431);
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v395, 0, 1, (uint64_t)v431);
                    }
                    uint64_t v377 = v372;
                    uint64_t v378 = *(int *)(v372 + 24);
                    v433 = &v447[v378];
                    uint64_t v379 = &v397[v378];
                    uint64_t v380 = sub_252D19C68();
                    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v379, 1, v380))
                    {
                      uint64_t v381 = sub_252AC3A24(&qword_269C41A98);
                      memcpy(v433, v379, *(void *)(*(void *)(v381 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 16))(v433, v379, v380);
                      uint64_t v377 = v401;
                      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v433, 0, 1, v380);
                    }
                    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v447, 0, 1, v377);
                  }
                  ((void (*)(char *, char *, uint64_t))v412)(&v144[v441[11]], &v145[v441[11]], v462);
                  break;
                case 3u:
                  uint64_t v245 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                  v245(v144, v145);
                  uint64_t v246 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v245)(&v144[v246[5]], &v145[v246[5]], v462);
                  uint64_t v247 = v246[6];
                  uint64_t v248 = &v144[v247];
                  uint64_t v249 = &v145[v247];
                  *(_DWORD *)uint64_t v248 = *(_DWORD *)v249;
                  *((void *)v248 + 1) = *((void *)v249 + 1);
                  *((void *)v248 + 2) = *((void *)v249 + 2);
                  *(void *)&v144[v246[7]] = *(void *)&v145[v246[7]];
                  *(void *)&v144[v246[8]] = *(void *)&v145[v246[8]];
                  uint64_t v250 = v246[9];
                  uint64_t v251 = &v144[v250];
                  uint64_t v252 = &v145[v250];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  ((void (*)(char *, char *, uint64_t))v245)(v251, v252, v462);
                  break;
                case 4u:
                  uint64_t v253 = *(void *)v145;
                  unint64_t v254 = *((void *)v145 + 1);
                  sub_252AC5A54(*(void *)v145, v254);
                  *(void *)uint64_t v144 = v253;
                  *((void *)v144 + 1) = v254;
                  break;
                case 5u:
                  uint64_t v255 = *(void *)v145;
                  unint64_t v256 = *((void *)v145 + 1);
                  sub_252AC5A54(*(void *)v145, v256);
                  *(void *)uint64_t v144 = v255;
                  *((void *)v144 + 1) = v256;
                  *((void *)v144 + 2) = *((void *)v145 + 2);
                  *((void *)v144 + 3) = *((void *)v145 + 3);
                  *((void *)v144 + 4) = *((void *)v145 + 4);
                  *((void *)v144 + 5) = *((void *)v145 + 5);
                  swift_bridgeObjectRetain();
                  goto LABEL_171;
                case 6u:
                  uint64_t v257 = *(void *)v145;
                  unint64_t v258 = *((void *)v145 + 1);
                  sub_252AC5A54(*(void *)v145, v258);
                  *(void *)uint64_t v144 = v257;
                  *((void *)v144 + 1) = v258;
                  *((void *)v144 + 2) = *((void *)v145 + 2);
                  *((void *)v144 + 3) = *((void *)v145 + 3);
                  uint64_t v259 = v145 + 32;
                  unint64_t v260 = *((void *)v145 + 5);
                  swift_bridgeObjectRetain();
                  if (v260 >> 60 == 15)
                  {
                    *((_OWORD *)v144 + 2) = *v259;
                  }
                  else
                  {
                    uint64_t v310 = *(void *)v259;
                    sub_252AC5A54(v310, v260);
                    *((void *)v144 + 4) = v310;
                    *((void *)v144 + 5) = v260;
                  }
                  *((void *)v144 + 6) = *((void *)v145 + 6);
                  *((void *)v144 + 7) = *((void *)v145 + 7);
                  goto LABEL_171;
                case 7u:
                  uint64_t v261 = sub_252D19C58();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 16))(v144, v145, v261);
                  break;
                case 8u:
                  *(void *)uint64_t v144 = *(void *)v145;
                  *((void *)v144 + 1) = *((void *)v145 + 1);
LABEL_171:
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v167 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
                  v167(v144, v145);
                  uint64_t v436 = (void (*)(char *, char *, uint64_t))v167;
                  uint64_t v168 = (int *)type metadata accessor for RGDisambiguationModel(0);
                  ((void (*)(char *, char *, uint64_t))v167)(&v144[v168[5]], &v145[v168[5]], v462);
                  uint64_t v169 = v168[6];
                  uint64_t v170 = &v144[v169];
                  char v171 = &v145[v169];
                  *(_DWORD *)uint64_t v170 = *(_DWORD *)v171;
                  *((void *)v170 + 1) = *((void *)v171 + 1);
                  *((void *)v170 + 2) = *((void *)v171 + 2);
                  *(void *)&v144[v168[7]] = *(void *)&v145[v168[7]];
                  *(void *)&v144[v168[8]] = *(void *)&v145[v168[8]];
                  uint64_t v172 = v168[9];
                  uint64_t v173 = &v144[v172];
                  v422 = &v145[v172];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v436(v173, v422, v462);
                  uint64_t v174 = v168[10];
                  unint64_t v175 = &v144[v174];
                  uint64_t v176 = &v145[v174];
                  *(void *)unint64_t v175 = *(void *)v176;
                  *((void *)v175 + 1) = *((void *)v176 + 1);
                  uint64_t v177 = v168[11];
                  uint64_t v178 = &v144[v177];
                  uint64_t v179 = &v145[v177];
                  swift_bridgeObjectRetain();
                  v436(v178, v179, v462);
                  break;
              }
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v180 = *(void *)v145;
              unint64_t v181 = *((void *)v145 + 1);
              sub_252AC5A54(*(void *)v145, v181);
              *(void *)uint64_t v144 = v180;
              *((void *)v144 + 1) = v181;
              *((void *)v144 + 2) = *((void *)v145 + 2);
              *((void *)v144 + 3) = *((void *)v145 + 3);
              swift_bridgeObjectRetain();
              break;
            default:
              *(void *)uint64_t v144 = *(void *)v145;
              *((void *)v144 + 1) = *((void *)v145 + 1);
              swift_bridgeObjectRetain();
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_219;
      }
      sub_252BA6670();
    }
    uint64_t v149 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
LABEL_219:
    v66[v68[8]] = v67[v68[8]];
    v66[v68[9]] = v67[v68[9]];
    *(void *)&v66[v68[10]] = *(void *)&v67[v68[10]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v382 = v68[11];
    v383 = &v66[v382];
    uint64_t v384 = &v67[v382];
    *(void *)v383 = *(void *)v384;
    *((void *)v383 + 1) = *((void *)v384 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a2 = v461;
LABEL_220:
    a3 = v457;
    goto LABEL_221;
  }
  if (!v70)
  {
    *(void *)uint64_t v66 = *(void *)v67;
    int v71 = v67[24];
    swift_bridgeObjectRetain();
    if (v71 == 255)
    {
      long long v83 = *(_OWORD *)(v67 + 8);
      v66[24] = v67[24];
      *(_OWORD *)(v66 + 8) = v83;
    }
    else
    {
      uint64_t v72 = *((void *)v67 + 1);
      uint64_t v73 = *((void *)v67 + 2);
      sub_252ACE7E4(v72, v73, v71);
      *((void *)v66 + 1) = v72;
      *((void *)v66 + 2) = v73;
      v66[24] = v71;
    }
    int v84 = v67[48];
    v460 = a2;
    v457 = a3;
    if (v84 == 255)
    {
      long long v87 = *((_OWORD *)v67 + 2);
      v66[48] = v67[48];
      *((_OWORD *)v66 + 2) = v87;
    }
    else
    {
      uint64_t v85 = *((void *)v67 + 4);
      uint64_t v86 = *((void *)v67 + 5);
      sub_252ACE7E4(v85, v86, v84);
      *((void *)v66 + 4) = v85;
      *((void *)v66 + 5) = v86;
      v66[48] = v84;
    }
    uint64_t v88 = v68[7];
    uint64_t v89 = &v66[v88];
    uint64_t v90 = &v67[v88];
    uint64_t v91 = type metadata accessor for ResponseOutput.VisualOutput(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v90, 1, v91))
    {
      uint64_t v92 = sub_252AC3A24(&qword_269C41AB0);
      memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
      a2 = v460;
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v90, 1, v462))
              {
                uint64_t v182 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v89, v90, *(void *)(*(void *)(v182 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v89, v90, v462);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v89, 0, 1, v462);
              }
              uint64_t v219 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              v423 = *(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16);
              v423(&v89[v219[5]], &v90[v219[5]], v462);
              uint64_t v220 = v219[6];
              uint64_t v221 = &v89[v220];
              uint64_t v222 = &v90[v220];
              *(_DWORD *)uint64_t v221 = *(_DWORD *)v222;
              *((void *)v221 + 1) = *((void *)v222 + 1);
              *((void *)v221 + 2) = *((void *)v222 + 2);
              uint64_t v223 = v219[7];
              v407 = &v90[v223];
              v415 = &v89[v223];
              uint64_t v224 = sub_252D19408();
              uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16);
              swift_bridgeObjectRetain();
              v225(v415, v407, v224);
              v225(&v89[v219[8]], &v90[v219[8]], v224);
              v423(&v89[v219[9]], &v90[v219[9]], v462);
              break;
            case 2u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v90, 1, v462))
              {
                uint64_t v183 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v89, v90, *(void *)(*(void *)(v183 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16))(v89, v90, v462);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v89, 0, 1, v462);
              }
              uint64_t v226 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              v404 = *(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16);
              v404(&v89[v226[5]], &v90[v226[5]], v462);
              uint64_t v227 = v226[6];
              uint64_t v228 = &v89[v227];
              uint64_t v229 = &v90[v227];
              *(_DWORD *)uint64_t v228 = *(_DWORD *)v229;
              *((void *)v228 + 1) = *((void *)v229 + 1);
              *((void *)v228 + 2) = *((void *)v229 + 2);
              uint64_t v230 = v226[7];
              v424 = &v90[v230];
              v437 = &v89[v230];
              uint64_t v231 = sub_252D19408();
              uint64_t v232 = v226;
              uint64_t v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
              swift_bridgeObjectRetain();
              v233(v437, v424, v231);
              uint64_t v408 = (void *)v231;
              v233(&v89[v232[8]], &v90[v232[8]], v231);
              v416 = v232;
              uint64_t v234 = v232[9];
              v438 = &v89[v234];
              uint64_t v235 = &v90[v234];
              uint64_t v236 = (int *)type metadata accessor for RGDisplayRepresentation(0);
              uint64_t v398 = (void (*)(char *, char *, void *))v233;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v235, 1, (uint64_t)v236))
              {
                uint64_t v237 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(v438, v235, *(void *)(*(void *)(v237 - 8) + 64));
              }
              else
              {
                v233(v438, v235, (uint64_t)v408);
                uint64_t v390 = v236;
                uint64_t v238 = v236[5];
                uint64_t v239 = &v438[v238];
                uint64_t v240 = &v235[v238];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v235[v238], 1, (uint64_t)v408))
                {
                  uint64_t v241 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
                }
                else
                {
                  v398(v239, v240, v408);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v239, 0, 1, (uint64_t)v408);
                }
                uint64_t v281 = v236[6];
                __dst = &v438[v281];
                uint64_t v282 = &v235[v281];
                uint64_t v283 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v282, 1, v283))
                {
                  uint64_t v284 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(__dst, v282, *(void *)(*(void *)(v284 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(__dst, v282, v283);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v283);
                }
                uint64_t v289 = v236[7];
                uint64_t v290 = &v438[v289];
                v291 = &v235[v289];
                *(void *)uint64_t v290 = *(void *)v291;
                *((void *)v290 + 1) = *((void *)v291 + 1);
                uint64_t v292 = v236[8];
                v293 = &v438[v292];
                v294 = &v235[v292];
                unint64_t v295 = *(void *)&v235[v292 + 8];
                swift_bridgeObjectRetain();
                if (v295 >> 60 == 15)
                {
                  *(_OWORD *)v293 = *(_OWORD *)v294;
                }
                else
                {
                  uint64_t v296 = *(void *)v294;
                  sub_252AC5A54(v296, v295);
                  *(void *)v293 = v296;
                  *((void *)v293 + 1) = v295;
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v438, 0, 1, (uint64_t)v390);
              }
              uint64_t v297 = v416[10];
              v443 = &v89[v297];
              v298 = &v90[v297];
              uint64_t v428 = (int *)type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v298, 1, (uint64_t)v428))
              {
                uint64_t v299 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(v443, v298, *(void *)(*(void *)(v299 - 8) + 64));
              }
              else
              {
                v398(v443, v298, v408);
                uint64_t v300 = v428[5];
                v391 = &v443[v300];
                v301 = &v298[v300];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v298[v300], 1, (uint64_t)v408))
                {
                  uint64_t v302 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v391, v301, *(void *)(*(void *)(v302 - 8) + 64));
                }
                else
                {
                  v398(v391, v301, v408);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v391, 0, 1, (uint64_t)v408);
                }
                uint64_t v303 = v428[6];
                v411 = &v443[v303];
                uint64_t v304 = &v298[v303];
                uint64_t v305 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v304, 1, v305))
                {
                  uint64_t v306 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v411, v304, *(void *)(*(void *)(v306 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v411, v304, v305);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v411, 0, 1, v305);
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v443, 0, 1, (uint64_t)v428);
              }
              v404(&v89[v416[11]], &v90[v416[11]], v462);
              break;
            case 3u:
              uint64_t v434 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
              v434(v89, v90);
              uint64_t v184 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v434)(&v89[v184[5]], &v90[v184[5]], v462);
              uint64_t v185 = v184[6];
              uint64_t v186 = &v89[v185];
              uint64_t v187 = &v90[v185];
              *(_DWORD *)uint64_t v186 = *(_DWORD *)v187;
              *((void *)v186 + 1) = *((void *)v187 + 1);
              *((void *)v186 + 2) = *((void *)v187 + 2);
              *(void *)&v89[v184[7]] = *(void *)&v90[v184[7]];
              *(void *)&v89[v184[8]] = *(void *)&v90[v184[8]];
              uint64_t v188 = v184[9];
              uint64_t v189 = &v89[v188];
              uint64_t v190 = &v90[v188];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v108 = v189;
              uint64_t v109 = v190;
              uint64_t v110 = v462;
              goto LABEL_96;
            case 4u:
              uint64_t v191 = *(void *)v90;
              unint64_t v192 = *((void *)v90 + 1);
              sub_252AC5A54(*(void *)v90, v192);
              *(void *)uint64_t v89 = v191;
              *((void *)v89 + 1) = v192;
              break;
            case 5u:
              uint64_t v193 = *(void *)v90;
              unint64_t v194 = *((void *)v90 + 1);
              sub_252AC5A54(*(void *)v90, v194);
              *(void *)uint64_t v89 = v193;
              *((void *)v89 + 1) = v194;
              *((void *)v89 + 2) = *((void *)v90 + 2);
              *((void *)v89 + 3) = *((void *)v90 + 3);
              *((void *)v89 + 4) = *((void *)v90 + 4);
              *((void *)v89 + 5) = *((void *)v90 + 5);
              swift_bridgeObjectRetain();
              goto LABEL_105;
            case 6u:
              uint64_t v195 = *(void *)v90;
              unint64_t v196 = *((void *)v90 + 1);
              sub_252AC5A54(*(void *)v90, v196);
              *(void *)uint64_t v89 = v195;
              *((void *)v89 + 1) = v196;
              *((void *)v89 + 2) = *((void *)v90 + 2);
              *((void *)v89 + 3) = *((void *)v90 + 3);
              uint64_t v197 = v90 + 32;
              unint64_t v198 = *((void *)v90 + 5);
              swift_bridgeObjectRetain();
              if (v198 >> 60 == 15)
              {
                *((_OWORD *)v89 + 2) = *v197;
              }
              else
              {
                uint64_t v200 = *(void *)v197;
                sub_252AC5A54(v200, v198);
                *((void *)v89 + 4) = v200;
                *((void *)v89 + 5) = v198;
              }
              *((void *)v89 + 6) = *((void *)v90 + 6);
              *((void *)v89 + 7) = *((void *)v90 + 7);
              goto LABEL_105;
            case 7u:
              uint64_t v199 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v89, v90, v199);
              break;
            case 8u:
              *(void *)uint64_t v89 = *(void *)v90;
              *((void *)v89 + 1) = *((void *)v90 + 1);
LABEL_105:
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v434 = *(void (**)(char *, char *))(*(void *)(v462 - 8) + 16);
              v434(v89, v90);
              uint64_t v96 = (int *)type metadata accessor for RGDisambiguationModel(0);
              ((void (*)(char *, char *, uint64_t))v434)(&v89[v96[5]], &v90[v96[5]], v462);
              uint64_t v97 = v96[6];
              uint64_t v98 = &v89[v97];
              unint64_t v99 = &v90[v97];
              *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
              *((void *)v98 + 1) = *((void *)v99 + 1);
              *((void *)v98 + 2) = *((void *)v99 + 2);
              *(void *)&v89[v96[7]] = *(void *)&v90[v96[7]];
              *(void *)&v89[v96[8]] = *(void *)&v90[v96[8]];
              uint64_t v100 = v96[9];
              uint64_t v101 = &v89[v100];
              uint64_t v413 = &v90[v100];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              ((void (*)(char *, char *, uint64_t))v434)(v101, v413, v462);
              uint64_t v102 = v96[10];
              uint64_t v103 = &v89[v102];
              uint64_t v104 = &v90[v102];
              *(void *)uint64_t v103 = *(void *)v104;
              *((void *)v103 + 1) = *((void *)v104 + 1);
              uint64_t v105 = v96[11];
              uint64_t v106 = &v89[v105];
              uint64_t v107 = &v90[v105];
              swift_bridgeObjectRetain();
              uint64_t v108 = v106;
              uint64_t v109 = v107;
              uint64_t v110 = v462;
LABEL_96:
              ((void (*)(char *, char *, uint64_t))v434)(v108, v109, v110);
              break;
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v111 = *(void *)v90;
          unint64_t v112 = *((void *)v90 + 1);
          sub_252AC5A54(*(void *)v90, v112);
          *(void *)uint64_t v89 = v111;
          *((void *)v89 + 1) = v112;
          *((void *)v89 + 2) = *((void *)v90 + 2);
          *((void *)v89 + 3) = *((void *)v90 + 3);
          goto LABEL_60;
        default:
          *(void *)uint64_t v89 = *(void *)v90;
          *((void *)v89 + 1) = *((void *)v90 + 1);
LABEL_60:
          swift_bridgeObjectRetain();
          break;
      }
      a2 = v460;
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v89, 0, 1, v91);
    }
    v66[v68[8]] = v67[v68[8]];
    v66[v68[9]] = v67[v68[9]];
    *(void *)&v66[v68[10]] = *(void *)&v67[v68[10]];
    uint64_t v307 = v68[11];
    v308 = &v66[v307];
    uint64_t v309 = &v67[v307];
    *(void *)v308 = *(void *)v309;
    *((void *)v308 + 1) = *((void *)v309 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v66, 0, 1, (uint64_t)v68);
    goto LABEL_220;
  }
LABEL_42:
  uint64_t v74 = sub_252AC3A24(&qword_269C41AB8);
  memcpy(v66, v67, *(void *)(*(void *)(v74 - 8) + 64));
LABEL_221:
  uint64_t v385 = a3[9];
  uint64_t v386 = (void *)(v463 + v385);
  v387 = &a2[v385];
  *uint64_t v386 = *(void *)v387;
  v386[1] = *((void *)v387 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v463 + a3[10]) = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v463;
}

uint64_t sub_252C937FC(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for SystemResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  long long v12 = *(_OWORD *)&a2[v9];
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *(_OWORD *)&a1[v9] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v136 = v6;
      uint64_t v17 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      uint64_t v18 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v19 = v18[5];
      uint64_t v20 = &v14[v19];
      int v21 = &v15[v19];
      uint64_t v22 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *))(*(void *)(v136 - 8) + 32))(v20, v21);
        *(_OWORD *)&v20[*(int *)(v22 + 20)] = *(_OWORD *)&v21[*(int *)(v22 + 20)];
        *(_OWORD *)&v20[*(int *)(v22 + 24)] = *(_OWORD *)&v21[*(int *)(v22 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v20, 0, 1, v22);
      }
      v14[v18[6]] = v15[v18[6]];
      uint64_t v42 = v18[7];
      uint64_t v43 = &v14[v42];
      uint64_t v44 = &v15[v42];
      uint64_t v45 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, v45))
      {
        uint64_t v46 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        uint64_t v47 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v48 = *(int *)(v47 + 20);
        uint64_t v132 = &v43[v48];
        uint64_t v134 = v47;
        uint64_t v127 = &v44[v48];
        uint64_t v49 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v132, v127, v49);
        *(void *)&v43[*(int *)(v134 + 24)] = *(void *)&v44[*(int *)(v134 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, v45);
      }
      uint64_t v6 = v136;
      v14[v18[8]] = v15[v18[8]];
      *(_OWORD *)&v14[v18[9]] = *(_OWORD *)&v15[v18[9]];
      goto LABEL_17;
    case 3u:
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v24 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v25 = &v14[v24];
      uint64_t v26 = &v15[v24];
      uint64_t v27 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_17;
    case 4u:
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((void *)v14 + 2) = *((void *)v15 + 2);
      v14[24] = v15[24];
      uint64_t v28 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v29 = v28[6];
      uint64_t v30 = &v14[v29];
      uint64_t v31 = &v15[v29];
      uint64_t v32 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      *(_OWORD *)&v14[v28[7]] = *(_OWORD *)&v15[v28[7]];
      *(_OWORD *)&v14[v28[8]] = *(_OWORD *)&v15[v28[8]];
      goto LABEL_17;
    case 6u:
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v33 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v35 = &v14[v34];
      uint64_t v36 = &v15[v34];
      uint64_t v37 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      v14[*(int *)(v33 + 24)] = v15[*(int *)(v33 + 24)];
      goto LABEL_17;
    case 7u:
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v38 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v39 = &v14[v38];
      uint64_t v40 = &v15[v38];
      uint64_t v41 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      break;
  }
  uint64_t v50 = a3[8];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = (int *)type metadata accessor for ResponseOutput(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v52, 1, (uint64_t)v53))
  {
    uint64_t v54 = sub_252AC3A24(&qword_269C41AB8);
    memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    uint64_t v137 = v6;
    *(void *)uint64_t v51 = *(void *)v52;
    *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
    v51[24] = v52[24];
    *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
    v51[48] = v52[48];
    uint64_t v55 = v53[7];
    uint64_t v56 = &v51[v55];
    uint64_t v57 = &v52[v55];
    uint64_t v58 = type metadata accessor for ResponseOutput.VisualOutput(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v58))
    {
      uint64_t v59 = sub_252AC3A24(&qword_269C41AB0);
      memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v135 = type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v128 = *(void (**)(char *, char *))(*(void *)(v137 - 8) + 32);
            v128(v56, v57);
            uint64_t v60 = (int *)type metadata accessor for RGDisambiguationModel(0);
            ((void (*)(char *, char *, uint64_t))v128)(&v56[v60[5]], &v57[v60[5]], v137);
            uint64_t v61 = v60[6];
            char v62 = &v56[v61];
            long long v63 = &v57[v61];
            *(_OWORD *)char v62 = *(_OWORD *)v63;
            *((void *)v62 + 2) = *((void *)v63 + 2);
            *(void *)&v56[v60[7]] = *(void *)&v57[v60[7]];
            *(void *)&v56[v60[8]] = *(void *)&v57[v60[8]];
            ((void (*)(char *, char *, uint64_t))v128)(&v56[v60[9]], &v57[v60[9]], v137);
            *(_OWORD *)&v56[v60[10]] = *(_OWORD *)&v57[v60[10]];
            ((void (*)(char *, char *, uint64_t))v128)(&v56[v60[11]], &v57[v60[11]], v137);
            goto LABEL_55;
          case 1u:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v137))
            {
              uint64_t v64 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v56, v57, *(void *)(*(void *)(v64 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v56, v57, v137);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v56, 0, 1, v137);
            }
            int v71 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            uint64_t v117 = *(void (**)(char *, char *))(*(void *)(v137 - 8) + 32);
            v117(&v56[v71[5]], &v57[v71[5]]);
            long long v130 = v71;
            uint64_t v72 = v71[6];
            uint64_t v73 = &v56[v72];
            uint64_t v74 = &v57[v72];
            *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
            *((void *)v73 + 2) = *((void *)v74 + 2);
            uint64_t v75 = v71[7];
            unint64_t v112 = &v57[v75];
            uint64_t v115 = &v56[v75];
            uint64_t v76 = sub_252D19408();
            uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32);
            v124(v115, v112, v76);
            v124(&v56[v130[8]], &v57[v130[8]], v76);
            ((void (*)(char *, char *, uint64_t))v117)(&v56[v130[9]], &v57[v130[9]], v137);
            goto LABEL_55;
          case 2u:
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v137))
            {
              uint64_t v65 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v56, v57, *(void *)(*(void *)(v65 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v56, v57, v137);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v56, 0, 1, v137);
            }
            int v77 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            uint64_t v111 = *(void (**)(char *, char *))(*(void *)(v137 - 8) + 32);
            v111(&v56[v77[5]], &v57[v77[5]]);
            int v133 = v77;
            uint64_t v78 = v77[6];
            uint64_t v79 = &v56[v78];
            uint64_t v80 = &v57[v78];
            *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
            *((void *)v79 + 2) = *((void *)v80 + 2);
            uint64_t v81 = v77[7];
            uint64_t v118 = &v57[v81];
            uint64_t v121 = &v56[v81];
            uint64_t v82 = sub_252D19408();
            uint64_t v125 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32);
            v125(v121, v118, v82);
            uint64_t v116 = v82;
            v125(&v56[v133[8]], &v57[v133[8]], v82);
            uint64_t v83 = v133[9];
            uint64_t v119 = &v56[v83];
            uint64_t v122 = &v57[v83];
            uint64_t v113 = (int *)type metadata accessor for RGDisplayRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v122, 1, (uint64_t)v113))
            {
              uint64_t v84 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v119, v122, *(void *)(*(void *)(v84 - 8) + 64));
            }
            else
            {
              v125(v119, v122, v82);
              uint64_t v85 = v113[5];
              uint64_t v108 = &v119[v85];
              uint64_t v105 = &v122[v85];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v122[v85], 1, v82))
              {
                uint64_t v86 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v108, v105, *(void *)(*(void *)(v86 - 8) + 64));
              }
              else
              {
                v125(v108, v105, v82);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v108, 0, 1, v82);
              }
              uint64_t v87 = v113[6];
              uint64_t v109 = &v119[v87];
              uint64_t v88 = &v122[v87];
              uint64_t v89 = sub_252D19C68();
              uint64_t v106 = v88;
              uint64_t v90 = (uint64_t)v88;
              uint64_t v91 = v89;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v90, 1, v89))
              {
                uint64_t v92 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v109, v106, *(void *)(*(void *)(v92 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v109, v106, v91);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v109, 0, 1, v91);
              }
              *(_OWORD *)&v119[v113[7]] = *(_OWORD *)&v122[v113[7]];
              *(_OWORD *)&v119[v113[8]] = *(_OWORD *)&v122[v113[8]];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v119, 0, 1, (uint64_t)v113);
            }
            uint64_t v93 = v133[10];
            uint64_t v123 = &v56[v93];
            uint64_t v120 = &v57[v93];
            uint64_t v114 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v120, 1, v114))
            {
              uint64_t v94 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v123, v120, *(void *)(*(void *)(v94 - 8) + 64));
            }
            else
            {
              v125(v123, v120, v116);
              uint64_t v95 = *(int *)(v114 + 20);
              uint64_t v110 = &v123[v95];
              uint64_t v107 = &v120[v95];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v120[v95], 1, v116))
              {
                uint64_t v96 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v110, v107, *(void *)(*(void *)(v96 - 8) + 64));
              }
              else
              {
                v125(v110, v107, v116);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v110, 0, 1, v116);
              }
              uint64_t v97 = *(int *)(v114 + 24);
              uint64_t v131 = &v123[v97];
              uint64_t v98 = &v120[v97];
              uint64_t v99 = sub_252D19C68();
              uint64_t v126 = v98;
              uint64_t v100 = (uint64_t)v98;
              uint64_t v101 = v99;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v100, 1, v99))
              {
                uint64_t v102 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v131, v126, *(void *)(*(void *)(v102 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v131, v126, v101);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v131, 0, 1, v101);
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v123, 0, 1, v114);
            }
            ((void (*)(char *, char *, uint64_t))v111)(&v56[v133[11]], &v57[v133[11]], v137);
            goto LABEL_55;
          case 3u:
            uint64_t v129 = *(void (**)(char *, char *))(*(void *)(v137 - 8) + 32);
            v129(v56, v57);
            uint64_t v66 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            ((void (*)(char *, char *, uint64_t))v129)(&v56[v66[5]], &v57[v66[5]], v137);
            uint64_t v67 = v66[6];
            uint64_t v68 = &v56[v67];
            int v69 = &v57[v67];
            *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
            *((void *)v68 + 2) = *((void *)v69 + 2);
            *(void *)&v56[v66[7]] = *(void *)&v57[v66[7]];
            *(void *)&v56[v66[8]] = *(void *)&v57[v66[8]];
            ((void (*)(char *, char *, uint64_t))v129)(&v56[v66[9]], &v57[v66[9]], v137);
            goto LABEL_55;
          case 7u:
            uint64_t v70 = sub_252D19C58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v56, v57, v70);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v56, v57, *(void *)(*(void *)(v135 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v56, 0, 1, v58);
    }
    v51[v53[8]] = v52[v53[8]];
    v51[v53[9]] = v52[v53[9]];
    *(void *)&v51[v53[10]] = *(void *)&v52[v53[10]];
    *(_OWORD *)&v51[v53[11]] = *(_OWORD *)&v52[v53[11]];
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v51, 0, 1, (uint64_t)v53);
  }
  uint64_t v103 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v103] = *(void *)&a2[v103];
  return a1;
}

char *assignWithTake for SystemResponse(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = (uint64_t)&a1[v11];
  uint64_t v13 = &a2[v11];
  if (*(void *)&a1[v11 + 16] == 1)
  {
LABEL_10:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(void *)(v12 + 16) = *((void *)v13 + 2);
    goto LABEL_12;
  }
  uint64_t v14 = *((void *)v13 + 2);
  if (v14 == 1)
  {
    sub_252C937FC(v12);
    goto LABEL_10;
  }
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(void *)(v12 + 8) = *((void *)v13 + 1);
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v20 = a3[7];
    int v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    sub_252BA6670();
    uint64_t v23 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v313 = v6;
        uint64_t v323 = a3;
        uint64_t v24 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
        uint64_t v25 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v26 = v25[5];
        uint64_t v27 = &v21[v26];
        uint64_t v28 = &v22[v26];
        uint64_t v29 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v28, 1, v29))
        {
          uint64_t v30 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v313 - 8) + 32))(v27, v28);
          *(_OWORD *)&v27[*(int *)(v29 + 20)] = *(_OWORD *)&v28[*(int *)(v29 + 20)];
          *(_OWORD *)&v27[*(int *)(v29 + 24)] = *(_OWORD *)&v28[*(int *)(v29 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v27, 0, 1, v29);
        }
        v21[v25[6]] = v22[v25[6]];
        uint64_t v49 = v25[7];
        uint64_t v50 = &v21[v49];
        uint64_t v51 = &v22[v49];
        uint64_t v52 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
          uint64_t v54 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v55 = *(int *)(v54 + 20);
          uint64_t v307 = &v51[v55];
          uint64_t v310 = &v50[v55];
          uint64_t v56 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v310, v307, v56);
          *(void *)&v50[*(int *)(v54 + 24)] = *(void *)&v51[*(int *)(v54 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v50, 0, 1, v52);
        }
        v21[v25[8]] = v22[v25[8]];
        *(_OWORD *)&v21[v25[9]] = *(_OWORD *)&v22[v25[9]];
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = v313;
        a3 = v323;
        break;
      case 3u:
        *(_OWORD *)int v21 = *(_OWORD *)v22;
        uint64_t v31 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v32 = &v21[v31];
        uint64_t v33 = &v22[v31];
        uint64_t v34 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        goto LABEL_22;
      case 4u:
        *(_OWORD *)int v21 = *(_OWORD *)v22;
        *((void *)v21 + 2) = *((void *)v22 + 2);
        v21[24] = v22[24];
        uint64_t v35 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v36 = v35[6];
        uint64_t v37 = &v21[v36];
        uint64_t v38 = &v22[v36];
        uint64_t v39 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        *(_OWORD *)&v21[v35[7]] = *(_OWORD *)&v22[v35[7]];
        *(_OWORD *)&v21[v35[8]] = *(_OWORD *)&v22[v35[8]];
        goto LABEL_22;
      case 6u:
        *(_OWORD *)int v21 = *(_OWORD *)v22;
        uint64_t v40 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v41 = *(int *)(v40 + 20);
        uint64_t v42 = &v21[v41];
        uint64_t v43 = &v22[v41];
        uint64_t v44 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        v21[*(int *)(v40 + 24)] = v22[*(int *)(v40 + 24)];
        goto LABEL_22;
      case 7u:
        *(_OWORD *)int v21 = *(_OWORD *)v22;
        uint64_t v45 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v46 = &v21[v45];
        uint64_t v47 = &v22[v45];
        uint64_t v48 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
        break;
    }
  }
  uint64_t v57 = a3[8];
  uint64_t v58 = (uint64_t)&a1[v57];
  uint64_t v59 = (uint64_t)&a2[v57];
  uint64_t v60 = (int *)type metadata accessor for ResponseOutput(0);
  int v61 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v58, 1, (uint64_t)v60);
  int v62 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v59, 1, (uint64_t)v60);
  if (!v61)
  {
    if (v62)
    {
      sub_252BA6670();
      goto LABEL_34;
    }
    *(void *)uint64_t v58 = *(void *)v59;
    swift_bridgeObjectRelease();
    int v69 = (_OWORD *)(v59 + 8);
    int v70 = *(unsigned __int8 *)(v58 + 24);
    if (v70 != 255)
    {
      int v71 = *(unsigned __int8 *)(v59 + 24);
      if (v71 != 255)
      {
        uint64_t v72 = *(void *)(v58 + 8);
        uint64_t v73 = *(void *)(v58 + 16);
        *(_OWORD *)(v58 + 8) = *v69;
        *(unsigned char *)(v58 + 24) = v71;
        sub_252AD170C(v72, v73, v70);
        goto LABEL_44;
      }
      sub_252B6B294(v58 + 8);
    }
    *(_OWORD *)(v58 + 8) = *v69;
    *(unsigned char *)(v58 + 24) = *(unsigned char *)(v59 + 24);
LABEL_44:
    uint64_t v79 = (_OWORD *)(v59 + 32);
    int v80 = *(unsigned __int8 *)(v58 + 48);
    v325 = a3;
    if (v80 != 255)
    {
      int v81 = *(unsigned __int8 *)(v59 + 48);
      if (v81 != 255)
      {
        uint64_t v82 = *(void *)(v58 + 32);
        uint64_t v83 = *(void *)(v58 + 40);
        *(_OWORD *)(v58 + 32) = *v79;
        *(unsigned char *)(v58 + 48) = v81;
        sub_252AD170C(v82, v83, v80);
        goto LABEL_49;
      }
      sub_252B6B294(v58 + 32);
    }
    *(_OWORD *)(v58 + 32) = *v79;
    *(unsigned char *)(v58 + 48) = *(unsigned char *)(v59 + 48);
LABEL_49:
    uint64_t v84 = v60[7];
    uint64_t v85 = (char *)(v58 + v84);
    uint64_t v86 = (char *)(v59 + v84);
    uint64_t v87 = type metadata accessor for ResponseOutput.VisualOutput(0);
    int v88 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v87);
    int v89 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v87);
    if (v88)
    {
      if (!v89)
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v90 = type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v91 = v6;
              uint64_t v315 = v6;
              uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              v92(v85, v86, v91);
              uint64_t v93 = (int *)type metadata accessor for RGDisambiguationModel(0);
              v92(&v85[v93[5]], &v86[v93[5]], v315);
              uint64_t v94 = v93[6];
              uint64_t v95 = &v85[v94];
              uint64_t v96 = &v86[v94];
              *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
              *((void *)v95 + 2) = *((void *)v96 + 2);
              *(void *)&v85[v93[7]] = *(void *)&v86[v93[7]];
              *(void *)&v85[v93[8]] = *(void *)&v86[v93[8]];
              v92(&v85[v93[9]], &v86[v93[9]], v315);
              *(_OWORD *)&v85[v93[10]] = *(_OWORD *)&v86[v93[10]];
              v92(&v85[v93[11]], &v86[v93[11]], v315);
              goto LABEL_140;
            case 1u:
              uint64_t v311 = v87;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v6))
              {
                uint64_t v113 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v85, v86, *(void *)(*(void *)(v113 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v85, v86, v6);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v6);
              }
              uint64_t v319 = v6;
              uint64_t v152 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              __srch = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              __srch(&v85[v152[5]], &v86[v152[5]], v6);
              uint64_t v153 = v152[6];
              uint64_t v154 = &v85[v153];
              uint64_t v155 = &v86[v153];
              *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
              *((void *)v154 + 2) = *((void *)v155 + 2);
              uint64_t v156 = v152[7];
              __dste = &v85[v156];
              uint64_t v273 = &v86[v156];
              uint64_t v157 = sub_252D19408();
              v158 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32);
              v158(__dste, v273, v157);
              v158(&v85[v152[8]], &v86[v152[8]], v157);
              __srch(&v85[v152[9]], &v86[v152[9]], v319);
              swift_storeEnumTagMultiPayload();
              uint64_t v87 = v311;
              break;
            case 2u:
              uint64_t v312 = v87;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v6))
              {
                uint64_t v114 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v85, v86, *(void *)(*(void *)(v114 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v85, v86, v6);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v6);
              }
              uint64_t v159 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              uint64_t v320 = v6;
              uint64_t v270 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              v270(&v85[v159[5]], &v86[v159[5]], v6);
              uint64_t v160 = v159[6];
              uint64_t v161 = &v85[v160];
              uint64_t v162 = &v86[v160];
              *(_OWORD *)uint64_t v161 = *(_OWORD *)v162;
              *((void *)v161 + 2) = *((void *)v162 + 2);
              uint64_t v163 = v159[7];
              __srci = &v85[v163];
              uint64_t v305 = v159;
              uint64_t v285 = &v86[v163];
              uint64_t v164 = sub_252D19408();
              uint64_t v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32);
              v165(__srci, v285, v164);
              __dsta = (void (*)(char *, char *, void *))v165;
              uint64_t v286 = (void *)v164;
              v165(&v85[v305[8]], &v86[v305[8]], v164);
              uint64_t v166 = v159[9];
              uint64_t v167 = &v85[v166];
              uint64_t v168 = &v86[v166];
              uint64_t v169 = type metadata accessor for RGDisplayRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v168, 1, v169))
              {
                uint64_t v170 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
                uint64_t v87 = v312;
              }
              else
              {
                __dsta(v167, v168, v286);
                uint64_t v261 = v168;
                uint64_t v264 = (int *)v169;
                uint64_t v175 = *(int *)(v169 + 20);
                __srca = v167;
                uint64_t v176 = &v167[v175];
                uint64_t v177 = &v168[v175];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v177, 1, (uint64_t)v286))
                {
                  uint64_t v178 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
                }
                else
                {
                  __dsta(v176, v177, v286);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v176, 0, 1, (uint64_t)v286);
                }
                uint64_t v209 = v264[6];
                unint64_t v256 = &v167[v209];
                uint64_t v210 = &v261[v209];
                uint64_t v211 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v210, 1, v211))
                {
                  uint64_t v212 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v256, v210, *(void *)(*(void *)(v212 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v256, v210, v211);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v256, 0, 1, v211);
                }
                uint64_t v87 = v312;
                *(_OWORD *)&__srca[v264[7]] = *(_OWORD *)&v261[v264[7]];
                *(_OWORD *)&__srca[v264[8]] = *(_OWORD *)&v261[v264[8]];
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srca, 0, 1, (uint64_t)v264);
              }
              uint64_t v217 = v305[10];
              __srcd = &v85[v217];
              uint64_t v218 = &v86[v217];
              uint64_t v219 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v218, 1, v219))
              {
                uint64_t v220 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(__srcd, v218, *(void *)(*(void *)(v220 - 8) + 64));
              }
              else
              {
                __dsta(__srcd, v218, v286);
                uint64_t v267 = (int *)v219;
                uint64_t v221 = *(int *)(v219 + 20);
                uint64_t v259 = &__srcd[v221];
                uint64_t v222 = &v218[v221];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v218[v221], 1, (uint64_t)v286))
                {
                  uint64_t v223 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v259, v222, *(void *)(*(void *)(v223 - 8) + 64));
                }
                else
                {
                  __dsta(v259, v222, v286);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v259, 0, 1, (uint64_t)v286);
                }
                uint64_t v224 = (uint64_t)v267;
                uint64_t v225 = v267[6];
                uint64_t v290 = &__srcd[v225];
                uint64_t v226 = &v218[v225];
                uint64_t v227 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v226, 1, v227))
                {
                  uint64_t v228 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v290, v226, *(void *)(*(void *)(v228 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v290, v226, v227);
                  uint64_t v224 = (uint64_t)v267;
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v290, 0, 1, v227);
                }
                uint64_t v87 = v312;
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srcd, 0, 1, v224);
              }
              v270(&v85[v305[11]], &v86[v305[11]], v320);
              goto LABEL_140;
            case 3u:
              uint64_t v115 = v6;
              uint64_t v317 = v6;
              uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              v116(v85, v86, v115);
              uint64_t v117 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              v116(&v85[v117[5]], &v86[v117[5]], v317);
              uint64_t v118 = v117[6];
              uint64_t v119 = &v85[v118];
              uint64_t v120 = &v86[v118];
              *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
              *((void *)v119 + 2) = *((void *)v120 + 2);
              *(void *)&v85[v117[7]] = *(void *)&v86[v117[7]];
              *(void *)&v85[v117[8]] = *(void *)&v86[v117[8]];
              v116(&v85[v117[9]], &v86[v117[9]], v317);
              goto LABEL_140;
            case 7u:
              uint64_t v121 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v85, v86, v121);
LABEL_140:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v85, v86, *(void *)(*(void *)(v90 - 8) + 64));
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v87);
        goto LABEL_143;
      }
    }
    else
    {
      if (!v89)
      {
        if (a1 == a2) {
          goto LABEL_143;
        }
        sub_252BA6670();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v98 = type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v99 = v6;
              uint64_t v316 = v6;
              uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              v100(v85, v86, v99);
              uint64_t v101 = (int *)type metadata accessor for RGDisambiguationModel(0);
              v100(&v85[v101[5]], &v86[v101[5]], v316);
              uint64_t v102 = v101[6];
              uint64_t v103 = &v85[v102];
              uint64_t v104 = &v86[v102];
              *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
              *((void *)v103 + 2) = *((void *)v104 + 2);
              *(void *)&v85[v101[7]] = *(void *)&v86[v101[7]];
              *(void *)&v85[v101[8]] = *(void *)&v86[v101[8]];
              v100(&v85[v101[9]], &v86[v101[9]], v316);
              *(_OWORD *)&v85[v101[10]] = *(_OWORD *)&v86[v101[10]];
              v100(&v85[v101[11]], &v86[v101[11]], v316);
              goto LABEL_160;
            case 1u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v6))
              {
                uint64_t v143 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v85, v86, *(void *)(*(void *)(v143 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v85, v86, v6);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v6);
              }
              uint64_t v321 = v6;
              uint64_t v190 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              __srcj = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              __srcj(&v85[v190[5]], &v86[v190[5]], v6);
              uint64_t v191 = v190[6];
              unint64_t v192 = &v85[v191];
              uint64_t v193 = &v86[v191];
              *(_OWORD *)unint64_t v192 = *(_OWORD *)v193;
              *((void *)v192 + 2) = *((void *)v193 + 2);
              uint64_t v194 = v190[7];
              __dstf = &v85[v194];
              uint64_t v274 = &v86[v194];
              uint64_t v195 = sub_252D19408();
              unint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32);
              v196(__dstf, v274, v195);
              v196(&v85[v190[8]], &v86[v190[8]], v195);
              __srcj(&v85[v190[9]], &v86[v190[9]], v321);
              swift_storeEnumTagMultiPayload();
              break;
            case 2u:
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v6))
              {
                uint64_t v144 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v85, v86, *(void *)(*(void *)(v144 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v85, v86, v6);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v6);
              }
              uint64_t v197 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              uint64_t v322 = v6;
              uint64_t v271 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              v271(&v85[v197[5]], &v86[v197[5]], v6);
              uint64_t v198 = v197[6];
              uint64_t v199 = &v85[v198];
              uint64_t v200 = &v86[v198];
              *(_OWORD *)uint64_t v199 = *(_OWORD *)v200;
              *((void *)v199 + 2) = *((void *)v200 + 2);
              uint64_t v201 = v197[7];
              __srck = &v85[v201];
              uint64_t v306 = v197;
              uint64_t v288 = &v86[v201];
              uint64_t v202 = sub_252D19408();
              uint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32);
              v203(__srck, v288, v202);
              __dstc = (void (*)(char *, char *, void *))v203;
              uint64_t v289 = (void *)v202;
              v203(&v85[v306[8]], &v86[v306[8]], v202);
              uint64_t v204 = v197[9];
              uint64_t v205 = &v85[v204];
              uint64_t v206 = &v86[v204];
              uint64_t v207 = type metadata accessor for RGDisplayRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v206, 1, v207))
              {
                uint64_t v208 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
              }
              else
              {
                __dstc(v205, v206, v289);
                uint64_t v262 = v206;
                uint64_t v266 = (int *)v207;
                uint64_t v213 = *(int *)(v207 + 20);
                __srcc = v205;
                uint64_t v214 = &v205[v213];
                unint64_t v215 = &v206[v213];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v215, 1, (uint64_t)v289))
                {
                  uint64_t v216 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v214, v215, *(void *)(*(void *)(v216 - 8) + 64));
                }
                else
                {
                  __dstc(v214, v215, v289);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v214, 0, 1, (uint64_t)v289);
                }
                uint64_t v240 = v266[6];
                uint64_t v257 = &v205[v240];
                uint64_t v241 = &v262[v240];
                uint64_t v242 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v241, 1, v242))
                {
                  uint64_t v243 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v257, v241, *(void *)(*(void *)(v243 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v257, v241, v242);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v257, 0, 1, v242);
                }
                *(_OWORD *)&__srcc[v266[7]] = *(_OWORD *)&v262[v266[7]];
                *(_OWORD *)&__srcc[v266[8]] = *(_OWORD *)&v262[v266[8]];
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srcc, 0, 1, (uint64_t)v266);
              }
              uint64_t v244 = v306[10];
              __srce = &v85[v244];
              uint64_t v245 = &v86[v244];
              uint64_t v246 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v245, 1, v246))
              {
                uint64_t v247 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(__srce, v245, *(void *)(*(void *)(v247 - 8) + 64));
              }
              else
              {
                __dstc(__srce, v245, v289);
                v268 = (int *)v246;
                uint64_t v248 = *(int *)(v246 + 20);
                unint64_t v260 = &__srce[v248];
                uint64_t v249 = &v245[v248];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v245[v248], 1, (uint64_t)v289))
                {
                  uint64_t v250 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v260, v249, *(void *)(*(void *)(v250 - 8) + 64));
                }
                else
                {
                  __dstc(v260, v249, v289);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v260, 0, 1, (uint64_t)v289);
                }
                uint64_t v251 = (uint64_t)v268;
                uint64_t v252 = v268[6];
                v291 = &__srce[v252];
                uint64_t v253 = &v245[v252];
                uint64_t v254 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v253, 1, v254))
                {
                  uint64_t v255 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v291, v253, *(void *)(*(void *)(v255 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 32))(v291, v253, v254);
                  uint64_t v251 = (uint64_t)v268;
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v291, 0, 1, v254);
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srce, 0, 1, v251);
              }
              v271(&v85[v306[11]], &v86[v306[11]], v322);
              goto LABEL_160;
            case 3u:
              uint64_t v145 = v6;
              uint64_t v318 = v6;
              uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
              v146(v85, v86, v145);
              int v147 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              v146(&v85[v147[5]], &v86[v147[5]], v318);
              uint64_t v148 = v147[6];
              uint64_t v149 = &v85[v148];
              uint64_t v150 = &v86[v148];
              *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
              *((void *)v149 + 2) = *((void *)v150 + 2);
              *(void *)&v85[v147[7]] = *(void *)&v86[v147[7]];
              *(void *)&v85[v147[8]] = *(void *)&v86[v147[8]];
              v146(&v85[v147[9]], &v86[v147[9]], v318);
              goto LABEL_160;
            case 7u:
              uint64_t v151 = sub_252D19C58();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v85, v86, v151);
LABEL_160:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v85, v86, *(void *)(*(void *)(v98 - 8) + 64));
              break;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_143;
        }
        size_t v97 = *(void *)(*(void *)(v87 - 8) + 64);
LABEL_57:
        memcpy(v85, v86, v97);
LABEL_143:
        *(unsigned char *)(v58 + v60[8]) = *(unsigned char *)(v59 + v60[8]);
        *(unsigned char *)(v58 + v60[9]) = *(unsigned char *)(v59 + v60[9]);
        *(void *)(v58 + v60[10]) = *(void *)(v59 + v60[10]);
        swift_bridgeObjectRelease();
        uint64_t v229 = v60[11];
        uint64_t v230 = (void *)(v58 + v229);
        uint64_t v231 = (uint64_t *)(v59 + v229);
        uint64_t v233 = *v231;
        uint64_t v232 = v231[1];
        *uint64_t v230 = v233;
        v230[1] = v232;
        swift_bridgeObjectRelease();
        a3 = v325;
        goto LABEL_144;
      }
      sub_252BA6670();
    }
    size_t v97 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41AB0) - 8) + 64);
    goto LABEL_57;
  }
  if (v62)
  {
LABEL_34:
    uint64_t v68 = sub_252AC3A24(&qword_269C41AB8);
    memcpy((void *)v58, (const void *)v59, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_144;
  }
  uint64_t v314 = v6;
  v324 = a3;
  *(void *)uint64_t v58 = *(void *)v59;
  *(_OWORD *)(v58 + 8) = *(_OWORD *)(v59 + 8);
  *(unsigned char *)(v58 + 24) = *(unsigned char *)(v59 + 24);
  *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
  *(unsigned char *)(v58 + 48) = *(unsigned char *)(v59 + 48);
  uint64_t v63 = v60[7];
  uint64_t v64 = (char *)(v58 + v63);
  uint64_t v65 = (char *)(v59 + v63);
  uint64_t v66 = type metadata accessor for ResponseOutput.VisualOutput(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v65, 1, v66))
  {
    uint64_t v67 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
    a3 = v324;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v74 = type metadata accessor for RGPluginModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v308 = *(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32);
          v308(v64, v65, v314);
          uint64_t v75 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v308(&v64[v75[5]], &v65[v75[5]], v314);
          uint64_t v76 = v75[6];
          int v77 = &v64[v76];
          uint64_t v78 = &v65[v76];
          *(_OWORD *)int v77 = *(_OWORD *)v78;
          *((void *)v77 + 2) = *((void *)v78 + 2);
          *(void *)&v64[v75[7]] = *(void *)&v65[v75[7]];
          *(void *)&v64[v75[8]] = *(void *)&v65[v75[8]];
          v308(&v64[v75[9]], &v65[v75[9]], v314);
          *(_OWORD *)&v64[v75[10]] = *(_OWORD *)&v65[v75[10]];
          v308(&v64[v75[11]], &v65[v75[11]], v314);
          goto LABEL_114;
        case 1u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v65, 1, v314))
          {
            uint64_t v105 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(v64, v65, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32))(v64, v65, v314);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v314);
          }
          uint64_t v122 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          __srcf = *(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32);
          __srcf(&v64[v122[5]], &v65[v122[5]], v314);
          uint64_t v123 = v122[6];
          uint64_t v124 = &v64[v123];
          uint64_t v125 = &v65[v123];
          *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
          *((void *)v124 + 2) = *((void *)v125 + 2);
          uint64_t v126 = v122[7];
          __dstd = &v64[v126];
          uint64_t v282 = v122;
          uint64_t v272 = &v65[v126];
          uint64_t v127 = sub_252D19408();
          uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32);
          v128(__dstd, v272, v127);
          v128(&v64[v282[8]], &v65[v282[8]], v127);
          __srcf(&v64[v282[9]], &v65[v282[9]], v314);
          goto LABEL_114;
        case 2u:
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v65, 1, v314))
          {
            uint64_t v106 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(v64, v65, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32))(v64, v65, v314);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v314);
          }
          uint64_t v129 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          uint64_t v269 = *(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32);
          v269(&v64[v129[5]], &v65[v129[5]], v314);
          uint64_t v309 = v129;
          uint64_t v130 = v129[6];
          uint64_t v131 = &v64[v130];
          uint64_t v132 = &v65[v130];
          *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
          *((void *)v131 + 2) = *((void *)v132 + 2);
          uint64_t v133 = v129[7];
          uint64_t v283 = &v65[v133];
          __srcg = &v64[v133];
          uint64_t v134 = sub_252D19408();
          uint64_t v304 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32);
          v304(__srcg, v283, v134);
          uint64_t v284 = (void *)v134;
          v304(&v64[v309[8]], &v65[v309[8]], v134);
          uint64_t v135 = v129[9];
          __dst = &v64[v135];
          uint64_t v136 = &v65[v135];
          uint64_t v137 = type metadata accessor for RGDisplayRepresentation(0);
          __src = v136;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v136, 1, v137))
          {
            uint64_t v138 = sub_252AC3A24(&qword_269C41AA0);
            memcpy(__dst, v136, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            v304(__dst, v136, (uint64_t)v284);
            uint64_t v263 = (int *)v137;
            uint64_t v139 = *(int *)(v137 + 20);
            uint64_t v140 = &__dst[v139];
            char v141 = &__src[v139];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&__src[v139], 1, (uint64_t)v284))
            {
              uint64_t v142 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
            }
            else
            {
              v304(v140, v141, (uint64_t)v284);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v140, 0, 1, (uint64_t)v284);
            }
            uint64_t v171 = v263[6];
            unint64_t v258 = &__dst[v171];
            uint64_t v172 = &__src[v171];
            uint64_t v173 = sub_252D19C68();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v172, 1, v173))
            {
              uint64_t v174 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v258, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v258, v172, v173);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v258, 0, 1, v173);
            }
            *(_OWORD *)&__dst[v263[7]] = *(_OWORD *)&__src[v263[7]];
            *(_OWORD *)&__dst[v263[8]] = *(_OWORD *)&__src[v263[8]];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v263);
          }
          uint64_t v179 = v309[10];
          __srcb = &v64[v179];
          uint64_t v180 = &v65[v179];
          uint64_t v181 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v180, 1, v181))
          {
            uint64_t v182 = sub_252AC3A24(&qword_269C41AA8);
            memcpy(__srcb, v180, *(void *)(*(void *)(v182 - 8) + 64));
          }
          else
          {
            v304(__srcb, v180, (uint64_t)v284);
            __dstb = (int *)v181;
            uint64_t v183 = *(int *)(v181 + 20);
            uint64_t v265 = &__srcb[v183];
            uint64_t v184 = &v180[v183];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v180[v183], 1, (uint64_t)v284))
            {
              uint64_t v185 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v265, v184, *(void *)(*(void *)(v185 - 8) + 64));
            }
            else
            {
              v304(v265, v184, (uint64_t)v284);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v265, 0, 1, (uint64_t)v284);
            }
            uint64_t v186 = __dstb[6];
            unint64_t v287 = &__srcb[v186];
            uint64_t v187 = &v180[v186];
            uint64_t v188 = sub_252D19C68();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v187, 1, v188))
            {
              uint64_t v189 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v287, v187, *(void *)(*(void *)(v189 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v287, v187, v188);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v287, 0, 1, v188);
            }
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srcb, 0, 1, (uint64_t)__dstb);
          }
          v269(&v64[v309[11]], &v65[v309[11]], v314);
          goto LABEL_114;
        case 3u:
          uint64_t v107 = *(void (**)(char *, char *))(*(void *)(v314 - 8) + 32);
          v107(v64, v65);
          uint64_t v108 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          ((void (*)(char *, char *, uint64_t))v107)(&v64[v108[5]], &v65[v108[5]], v314);
          uint64_t v109 = v108[6];
          uint64_t v110 = &v64[v109];
          uint64_t v111 = &v65[v109];
          *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
          *((void *)v110 + 2) = *((void *)v111 + 2);
          *(void *)&v64[v108[7]] = *(void *)&v65[v108[7]];
          *(void *)&v64[v108[8]] = *(void *)&v65[v108[8]];
          ((void (*)(char *, char *, uint64_t))v107)(&v64[v108[9]], &v65[v108[9]], v314);
          goto LABEL_114;
        case 7u:
          uint64_t v112 = sub_252D19C58();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v64, v65, v112);
LABEL_114:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v64, v65, *(void *)(*(void *)(v74 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    a3 = v324;
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v66);
  }
  *(unsigned char *)(v58 + v60[8]) = *(unsigned char *)(v59 + v60[8]);
  *(unsigned char *)(v58 + v60[9]) = *(unsigned char *)(v59 + v60[9]);
  *(void *)(v58 + v60[10]) = *(void *)(v59 + v60[10]);
  *(_OWORD *)(v58 + v60[11]) = *(_OWORD *)(v59 + v60[11]);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v58, 0, 1, (uint64_t)v60);
LABEL_144:
  uint64_t v234 = a3[9];
  uint64_t v235 = &a1[v234];
  uint64_t v236 = &a2[v234];
  uint64_t v238 = *(void *)v236;
  uint64_t v237 = *((void *)v236 + 1);
  *(void *)uint64_t v235 = v238;
  *((void *)v235 + 1) = v237;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C97144);
}

uint64_t sub_252C97144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252CB9724();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252CBC384();
    if (v9) {
      return sub_252B4C1B8(*(void *)(v4 + *(int *)(a3 + 24) + 8));
    }
    type metadata accessor for StatementOutcome(0);
    sub_252AEA314();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = *(int *)(a3 + 28);
    }
    else
    {
      sub_252AC3A24(&qword_269C41AB8);
      sub_252CBC734();
    }
    uint64_t v7 = v4 + v13;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for SystemResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9721C);
}

void sub_252C9721C()
{
  sub_252B98CA8();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    sub_252B4C788();
  }
  else
  {
    if (v1 == 0x7FFFFFFF)
    {
      sub_252CB95C8(*(int *)(v0 + 24));
      return;
    }
    type metadata accessor for StatementOutcome(0);
    sub_252AEA314();
    if (*(_DWORD *)(v3 + 84) != v1)
    {
      sub_252AC3A24(&qword_269C41AB8);
      sub_252CBC568();
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, v5, v6, v7);
}

void sub_252C972D8()
{
  sub_252C78730(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StatementOutcome(319);
    if (v1 <= 0x3F)
    {
      sub_252C78730(319, &qword_26B2345F8, (void (*)(uint64_t))type metadata accessor for ResponseOutput);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for InterpretedStatementResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v10;
    uint64_t v13 = (char *)a2 + v10;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    uint64_t v14 = *((void *)v13 + 2);
    *((void *)v12 + 1) = *((void *)v13 + 1);
    *((void *)v12 + 2) = v14;
    uint64_t v15 = (char *)a1 + v11;
    uint64_t v16 = (char *)a2 + v11;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    uint64_t v17 = *((void *)v16 + 2);
    *((void *)v15 + 1) = *((void *)v16 + 1);
    *((void *)v15 + 2) = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)a1 + v18;
    int v21 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    uint64_t v22 = *((void *)v21 + 2);
    *((void *)v20 + 1) = *((void *)v21 + 1);
    *((void *)v20 + 2) = v22;
    uint64_t v23 = (uint64_t *)((char *)a1 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = a3[9];
    uint64_t v28 = (char *)a2 + v27;
    uint64_t v29 = (char *)a1 + v27;
    *uint64_t v23 = v25;
    v23[1] = v26;
    type metadata accessor for StatementOutcome(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v37 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v37;
        uint64_t v38 = *((void *)v28 + 3);
        *((void *)v29 + 2) = *((void *)v28 + 2);
        *((void *)v29 + 3) = v38;
        uint64_t v39 = *((void *)v28 + 5);
        *((void *)v29 + 4) = *((void *)v28 + 4);
        *((void *)v29 + 5) = v39;
        *((void *)v29 + 6) = *((void *)v28 + 6);
        *((_WORD *)v29 + 28) = *((_WORD *)v28 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v40 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v40;
        *((void *)v29 + 2) = *((void *)v28 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v41 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v41;
        uint64_t v42 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v43 = &v29[v42];
        uint64_t v44 = &v28[v42];
        uint64_t v45 = sub_252D19BE8();
        uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        v46(v43, v44, v45);
        break;
      case 4u:
        uint64_t v47 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v47;
        *((void *)v29 + 2) = *((void *)v28 + 2);
        v29[24] = v28[24];
        uint64_t v48 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v49 = v48[6];
        uint64_t v106 = &v29[v49];
        uint64_t v50 = &v28[v49];
        uint64_t v51 = sub_252D19BE8();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v106, v50, v51);
        uint64_t v53 = v48[7];
        uint64_t v54 = &v29[v53];
        uint64_t v55 = &v28[v53];
        uint64_t v56 = *((void *)v55 + 1);
        *(void *)uint64_t v54 = *(void *)v55;
        *((void *)v54 + 1) = v56;
        uint64_t v57 = v48[8];
        uint64_t v58 = &v29[v57];
        uint64_t v59 = &v28[v57];
        uint64_t v60 = *((void *)v59 + 1);
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v61 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v61;
        *((void *)v29 + 2) = *((void *)v28 + 2);
        v29[24] = v28[24];
        uint64_t v62 = *((void *)v28 + 5);
        *((void *)v29 + 4) = *((void *)v28 + 4);
        *((void *)v29 + 5) = v62;
        uint64_t v63 = *((void *)v28 + 6);
        uint64_t v64 = *((void *)v28 + 7);
        *((void *)v29 + 6) = v63;
        *((void *)v29 + 7) = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v65 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v65;
        uint64_t v66 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v67 = *(int *)(v66 + 20);
        uint64_t v107 = &v29[v67];
        uint64_t v68 = &v28[v67];
        uint64_t v69 = sub_252D19BE8();
        int v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        v70(v107, v68, v69);
        v29[*(int *)(v66 + 24)] = v28[*(int *)(v66 + 24)];
        break;
      case 7u:
        uint64_t v71 = *((void *)v28 + 1);
        *(void *)uint64_t v29 = *(void *)v28;
        *((void *)v29 + 1) = v71;
        uint64_t v72 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v73 = &v29[v72];
        uint64_t v74 = &v28[v72];
        uint64_t v75 = sub_252D19BE8();
        uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        break;
      case 8u:
        uint64_t v77 = *(void *)v28;
        uint64_t v78 = *((void *)v28 + 1);
        char v79 = v28[16];
        sub_252ACE7BC(v77, v78, v79);
        *(void *)uint64_t v29 = v77;
        *((void *)v29 + 1) = v78;
        v29[16] = v79;
        break;
      case 9u:
        *(void *)uint64_t v29 = *(void *)v28;
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        unint64_t v80 = *((void *)v28 + 1);
        if (v80 >= 0x10)
        {
          *(void *)uint64_t v29 = *(void *)v28;
          *((void *)v29 + 1) = v80;
          uint64_t v82 = *((void *)v28 + 3);
          *((void *)v29 + 2) = *((void *)v28 + 2);
          *((void *)v29 + 3) = v82;
          *((void *)v29 + 4) = *((void *)v28 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v81 = *((_OWORD *)v28 + 1);
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v28;
          *((_OWORD *)v29 + 1) = v81;
          *((void *)v29 + 4) = *((void *)v28 + 4);
        }
        break;
      default:
        uint64_t v30 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v28, v30);
        uint64_t v31 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v32 = v31[5];
        uint64_t v33 = &v29[v32];
        uint64_t v34 = &v28[v32];
        uint64_t v35 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v34, 1, v35))
        {
          uint64_t v36 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v33, v34, v7);
          uint64_t v83 = *(int *)(v35 + 20);
          uint64_t v84 = &v33[v83];
          uint64_t v85 = &v34[v83];
          uint64_t v86 = *((void *)v85 + 1);
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = v86;
          uint64_t v87 = *(int *)(v35 + 24);
          int v88 = &v33[v87];
          int v89 = &v34[v87];
          uint64_t v90 = *((void *)v89 + 1);
          *(void *)int v88 = *(void *)v89;
          *((void *)v88 + 1) = v90;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v33, 0, 1, v35);
        }
        v29[v31[6]] = v28[v31[6]];
        uint64_t v91 = v31[7];
        uint64_t v92 = &v29[v91];
        uint64_t v93 = &v28[v91];
        uint64_t v94 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v93, 1, v94))
        {
          uint64_t v95 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          uint64_t v96 = *((void *)v93 + 1);
          *(void *)uint64_t v92 = *(void *)v93;
          *((void *)v92 + 1) = v96;
          uint64_t v97 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v98 = *(int *)(v97 + 20);
          uint64_t v105 = &v93[v98];
          uint64_t v108 = &v92[v98];
          swift_bridgeObjectRetain();
          uint64_t v99 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v108, v105, v99);
          *(void *)&v92[*(int *)(v97 + 24)] = *(void *)&v93[*(int *)(v97 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v92, 0, 1, v94);
        }
        v29[v31[8]] = v28[v31[8]];
        uint64_t v100 = v31[9];
        uint64_t v101 = &v29[v100];
        uint64_t v102 = &v28[v100];
        uint64_t v103 = *((void *)v102 + 1);
        *(void *)uint64_t v101 = *(void *)v102;
        *((void *)v101 + 1) = v103;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t destroy for InterpretedStatementResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  type metadata accessor for StatementOutcome(0);
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v7 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      uint64_t v8 = type metadata accessor for ActionSuccess(0);
      uint64_t v9 = v5 + *(int *)(v8 + 20);
      uint64_t v10 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, 1, v10))
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v9, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v11 = v5 + *(int *)(v8 + 28);
      uint64_t v12 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v11, 1, v12))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v11
            + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
        uint64_t v14 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
      goto LABEL_22;
    case 1:
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    case 2:
      goto LABEL_21;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v15 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_14;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v16 = v5 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v17 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v15 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_14;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v15 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_14:
      uint64_t v18 = v5 + *(int *)(v15 + 20);
      uint64_t v19 = sub_252D19BE8();
      uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
      return v20(v18, v19);
    case 8:
      uint64_t v21 = *(void *)v5;
      uint64_t v22 = *(void *)(v5 + 8);
      char v23 = *(unsigned char *)(v5 + 16);
      return sub_252AD16E4(v21, v22, v23);
    case 9:
      goto LABEL_22;
    case 10:
      unint64_t result = *(void *)(v5 + 8);
      if (result < 0x10) {
        return result;
      }
LABEL_21:
      swift_bridgeObjectRelease();
LABEL_22:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

char *initializeWithCopy for InterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  uint64_t v12 = *((void *)v11 + 2);
  *((void *)v10 + 1) = *((void *)v11 + 1);
  *((void *)v10 + 2) = v12;
  uint64_t v13 = &a1[v9];
  uint64_t v14 = &a2[v9];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  uint64_t v15 = *((void *)v14 + 2);
  *((void *)v13 + 1) = *((void *)v14 + 1);
  *((void *)v13 + 2) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  uint64_t v20 = *((void *)v19 + 2);
  *((void *)v18 + 1) = *((void *)v19 + 1);
  *((void *)v18 + 2) = v20;
  uint64_t v21 = &a1[v17];
  uint64_t v22 = &a2[v17];
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  uint64_t v25 = a3[9];
  uint64_t v26 = &a2[v25];
  uint64_t v27 = &a1[v25];
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  type metadata accessor for StatementOutcome(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v35 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v35;
      uint64_t v36 = *((void *)v26 + 3);
      *((void *)v27 + 2) = *((void *)v26 + 2);
      *((void *)v27 + 3) = v36;
      uint64_t v37 = *((void *)v26 + 5);
      *((void *)v27 + 4) = *((void *)v26 + 4);
      *((void *)v27 + 5) = v37;
      *((void *)v27 + 6) = *((void *)v26 + 6);
      *((_WORD *)v27 + 28) = *((_WORD *)v26 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 2u:
      uint64_t v38 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v38;
      *((void *)v27 + 2) = *((void *)v26 + 2);
      goto LABEL_12;
    case 3u:
      uint64_t v39 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v39;
      uint64_t v40 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_15;
    case 4u:
      uint64_t v41 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v41;
      *((void *)v27 + 2) = *((void *)v26 + 2);
      v27[24] = v26[24];
      uint64_t v42 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v43 = v42[6];
      uint64_t v98 = &v26[v43];
      uint64_t v101 = &v27[v43];
      uint64_t v44 = sub_252D19BE8();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v101, v98, v44);
      uint64_t v46 = v42[7];
      uint64_t v47 = &v27[v46];
      uint64_t v48 = &v26[v46];
      uint64_t v49 = *((void *)v48 + 1);
      *(void *)uint64_t v47 = *(void *)v48;
      *((void *)v47 + 1) = v49;
      uint64_t v50 = v42[8];
      uint64_t v51 = &v27[v50];
      uint64_t v52 = &v26[v50];
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = *(void *)v52;
      *((void *)v51 + 1) = v53;
      goto LABEL_12;
    case 5u:
      uint64_t v54 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v54;
      *((void *)v27 + 2) = *((void *)v26 + 2);
      v27[24] = v26[24];
      uint64_t v55 = *((void *)v26 + 5);
      *((void *)v27 + 4) = *((void *)v26 + 4);
      *((void *)v27 + 5) = v55;
      uint64_t v56 = *((void *)v26 + 6);
      uint64_t v57 = *((void *)v26 + 7);
      *((void *)v27 + 6) = v56;
      *((void *)v27 + 7) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 6u:
      uint64_t v58 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v58;
      uint64_t v59 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v60 = *(int *)(v59 + 20);
      uint64_t v99 = &v26[v60];
      uint64_t v102 = &v27[v60];
      uint64_t v61 = sub_252D19BE8();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v62(v102, v99, v61);
      v27[*(int *)(v59 + 24)] = v26[*(int *)(v59 + 24)];
      goto LABEL_27;
    case 7u:
      uint64_t v63 = *((void *)v26 + 1);
      *(void *)uint64_t v27 = *(void *)v26;
      *((void *)v27 + 1) = v63;
      uint64_t v40 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_15:
      uint64_t v64 = *(int *)(v40 + 20);
      uint64_t v65 = &v27[v64];
      uint64_t v66 = &v26[v64];
      uint64_t v67 = sub_252D19BE8();
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
      swift_bridgeObjectRetain();
      v68(v65, v66, v67);
      goto LABEL_27;
    case 8u:
      uint64_t v69 = *(void *)v26;
      uint64_t v70 = *((void *)v26 + 1);
      char v71 = v26[16];
      sub_252ACE7BC(v69, v70, v71);
      *(void *)uint64_t v27 = v69;
      *((void *)v27 + 1) = v70;
      v27[16] = v71;
      goto LABEL_27;
    case 9u:
      *(void *)uint64_t v27 = *(void *)v26;
      goto LABEL_26;
    case 0xAu:
      unint64_t v72 = *((void *)v26 + 1);
      if (v72 >= 0x10)
      {
        *(void *)uint64_t v27 = *(void *)v26;
        *((void *)v27 + 1) = v72;
        uint64_t v74 = *((void *)v26 + 3);
        *((void *)v27 + 2) = *((void *)v26 + 2);
        *((void *)v27 + 3) = v74;
        *((void *)v27 + 4) = *((void *)v26 + 4);
        swift_bridgeObjectRetain();
LABEL_26:
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v73 = *((_OWORD *)v26 + 1);
        *(_OWORD *)uint64_t v27 = *(_OWORD *)v26;
        *((_OWORD *)v27 + 1) = v73;
        *((void *)v27 + 4) = *((void *)v26 + 4);
      }
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      uint64_t v28 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v27, v26, v28);
      uint64_t v29 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v30 = v29[5];
      uint64_t v31 = &v27[v30];
      uint64_t v32 = &v26[v30];
      uint64_t v33 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v33))
      {
        uint64_t v34 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v31, v32, v6);
        uint64_t v75 = *(int *)(v33 + 20);
        uint64_t v76 = &v31[v75];
        uint64_t v77 = &v32[v75];
        uint64_t v78 = *((void *)v77 + 1);
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = v78;
        uint64_t v79 = *(int *)(v33 + 24);
        unint64_t v80 = &v31[v79];
        long long v81 = &v32[v79];
        uint64_t v82 = *((void *)v81 + 1);
        *(void *)unint64_t v80 = *(void *)v81;
        *((void *)v80 + 1) = v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v33);
      }
      v27[v29[6]] = v26[v29[6]];
      uint64_t v83 = v29[7];
      uint64_t v84 = &v27[v83];
      uint64_t v85 = &v26[v83];
      uint64_t v86 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
      {
        uint64_t v87 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        uint64_t v88 = *((void *)v85 + 1);
        *(void *)uint64_t v84 = *(void *)v85;
        *((void *)v84 + 1) = v88;
        uint64_t v89 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v90 = *(int *)(v89 + 20);
        uint64_t v100 = &v84[v90];
        uint64_t v103 = v89;
        uint64_t v97 = &v85[v90];
        swift_bridgeObjectRetain();
        uint64_t v91 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v100, v97, v91);
        *(void *)&v84[*(int *)(v103 + 24)] = *(void *)&v85[*(int *)(v103 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v84, 0, 1, v86);
      }
      v27[v29[8]] = v26[v29[8]];
      uint64_t v92 = v29[9];
      uint64_t v93 = &v27[v92];
      uint64_t v94 = &v26[v92];
      uint64_t v95 = *((void *)v94 + 1);
      *(void *)uint64_t v93 = *(void *)v94;
      *((void *)v93 + 1) = v95;
      goto LABEL_26;
  }
}

char *assignWithCopy for InterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  *((void *)v12 + 2) = *((void *)v13 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  *((void *)v15 + 2) = *((void *)v16 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  *((void *)v18 + 2) = *((void *)v19 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v23 = a3[9];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    sub_252BA6670();
    type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        *((void *)v24 + 2) = *((void *)v25 + 2);
        *((void *)v24 + 3) = *((void *)v25 + 3);
        *((void *)v24 + 4) = *((void *)v25 + 4);
        *((void *)v24 + 5) = *((void *)v25 + 5);
        *((void *)v24 + 6) = *((void *)v25 + 6);
        v24[56] = v25[56];
        v24[57] = v25[57];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 2u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        *((void *)v24 + 2) = *((void *)v25 + 2);
        goto LABEL_17;
      case 3u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v33 = type metadata accessor for ParameterNeedsValue(0);
        goto LABEL_20;
      case 4u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v34 = *((void *)v25 + 2);
        v24[24] = v25[24];
        *((void *)v24 + 2) = v34;
        uint64_t v35 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v36 = v35[6];
        uint64_t v79 = &v25[v36];
        uint64_t v82 = &v24[v36];
        uint64_t v37 = sub_252D19BE8();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v82, v79, v37);
        uint64_t v39 = v35[7];
        uint64_t v40 = &v24[v39];
        uint64_t v41 = &v25[v39];
        *(void *)uint64_t v40 = *(void *)v41;
        *((void *)v40 + 1) = *((void *)v41 + 1);
        uint64_t v42 = v35[8];
        uint64_t v43 = &v24[v42];
        uint64_t v44 = &v25[v42];
        *(void *)uint64_t v43 = *(void *)v44;
        *((void *)v43 + 1) = *((void *)v44 + 1);
        goto LABEL_17;
      case 5u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v45 = *((void *)v25 + 2);
        v24[24] = v25[24];
        *((void *)v24 + 2) = v45;
        *((void *)v24 + 4) = *((void *)v25 + 4);
        *((void *)v24 + 5) = *((void *)v25 + 5);
        *((void *)v24 + 6) = *((void *)v25 + 6);
        *((void *)v24 + 7) = *((void *)v25 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_17:
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 6u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v46 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v47 = *(int *)(v46 + 20);
        unint64_t v80 = &v25[v47];
        uint64_t v83 = &v24[v47];
        uint64_t v48 = sub_252D19BE8();
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        v49(v83, v80, v48);
        v24[*(int *)(v46 + 24)] = v25[*(int *)(v46 + 24)];
        goto LABEL_32;
      case 7u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v33 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_20:
        uint64_t v50 = *(int *)(v33 + 20);
        uint64_t v51 = &v24[v50];
        uint64_t v52 = &v25[v50];
        uint64_t v53 = sub_252D19BE8();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        goto LABEL_32;
      case 8u:
        uint64_t v55 = *(void *)v25;
        uint64_t v56 = *((void *)v25 + 1);
        char v57 = v25[16];
        sub_252ACE7BC(v55, v56, v57);
        *(void *)uint64_t v24 = v55;
        *((void *)v24 + 1) = v56;
        v24[16] = v57;
        goto LABEL_32;
      case 9u:
        *(void *)uint64_t v24 = *(void *)v25;
        goto LABEL_31;
      case 0xAu:
        if (*((void *)v25 + 1) >= 0x10uLL)
        {
          *(void *)uint64_t v24 = *(void *)v25;
          *((void *)v24 + 1) = *((void *)v25 + 1);
          *((void *)v24 + 2) = *((void *)v25 + 2);
          *((void *)v24 + 3) = *((void *)v25 + 3);
          *((void *)v24 + 4) = *((void *)v25 + 4);
          swift_bridgeObjectRetain();
LABEL_31:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v58 = *(_OWORD *)v25;
          long long v59 = *((_OWORD *)v25 + 1);
          *((void *)v24 + 4) = *((void *)v25 + 4);
          *(_OWORD *)uint64_t v24 = v58;
          *((_OWORD *)v24 + 1) = v59;
        }
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v26 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        uint64_t v27 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v28 = v27[5];
        uint64_t v29 = &v24[v28];
        uint64_t v30 = &v25[v28];
        uint64_t v31 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v29, v30, v6);
          uint64_t v60 = *(int *)(v31 + 20);
          uint64_t v61 = &v29[v60];
          uint64_t v62 = &v30[v60];
          *(void *)uint64_t v61 = *(void *)v62;
          *((void *)v61 + 1) = *((void *)v62 + 1);
          uint64_t v63 = *(int *)(v31 + 24);
          uint64_t v64 = &v29[v63];
          uint64_t v65 = &v30[v63];
          *(void *)uint64_t v64 = *(void *)v65;
          *((void *)v64 + 1) = *((void *)v65 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v31);
        }
        v24[v27[6]] = v25[v27[6]];
        uint64_t v66 = v27[7];
        uint64_t v67 = &v24[v66];
        uint64_t v68 = &v25[v66];
        uint64_t v69 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v68, 1, v69))
        {
          uint64_t v70 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v67 = *(void *)v68;
          *((void *)v67 + 1) = *((void *)v68 + 1);
          uint64_t v71 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v72 = *(int *)(v71 + 20);
          long long v81 = &v67[v72];
          uint64_t v84 = v71;
          uint64_t v78 = &v68[v72];
          swift_bridgeObjectRetain();
          uint64_t v73 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v81, v78, v73);
          *(void *)&v67[*(int *)(v84 + 24)] = *(void *)&v68[*(int *)(v84 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, v69);
        }
        v24[v27[8]] = v25[v27[8]];
        uint64_t v74 = v27[9];
        uint64_t v75 = &v24[v74];
        uint64_t v76 = &v25[v74];
        *(void *)uint64_t v75 = *(void *)v76;
        *((void *)v75 + 1) = *((void *)v76 + 1);
        goto LABEL_31;
    }
  }
  return a1;
}

char *initializeWithTake for InterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  uint64_t v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = *((void *)v13 + 2);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  long long v18 = *(_OWORD *)&a2[v15];
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *(_OWORD *)&a1[v15] = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v23 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      uint64_t v24 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v25 = v24[5];
      uint64_t v26 = &v20[v25];
      uint64_t v27 = &v21[v25];
      uint64_t v28 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v26, v27, v6);
        *(_OWORD *)&v26[*(int *)(v28 + 20)] = *(_OWORD *)&v27[*(int *)(v28 + 20)];
        *(_OWORD *)&v26[*(int *)(v28 + 24)] = *(_OWORD *)&v27[*(int *)(v28 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v26, 0, 1, v28);
      }
      v20[v24[6]] = v21[v24[6]];
      uint64_t v48 = v24[7];
      uint64_t v49 = &v20[v48];
      uint64_t v50 = &v21[v48];
      uint64_t v51 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v50, 1, v51))
      {
        uint64_t v52 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v53 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v54 = *(int *)(v53 + 20);
        uint64_t v55 = &v49[v54];
        long long v58 = &v50[v54];
        uint64_t v56 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v55, v58, v56);
        *(void *)&v49[*(int *)(v53 + 24)] = *(void *)&v50[*(int *)(v53 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v49, 0, 1, v51);
      }
      v20[v24[8]] = v21[v24[8]];
      *(_OWORD *)&v20[v24[9]] = *(_OWORD *)&v21[v24[9]];
      goto LABEL_17;
    case 3u:
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      uint64_t v30 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v31 = &v20[v30];
      uint64_t v32 = &v21[v30];
      uint64_t v33 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      goto LABEL_17;
    case 4u:
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((void *)v20 + 2) = *((void *)v21 + 2);
      v20[24] = v21[24];
      uint64_t v34 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v35 = v34[6];
      uint64_t v36 = &v20[v35];
      uint64_t v37 = &v21[v35];
      uint64_t v38 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      *(_OWORD *)&v20[v34[7]] = *(_OWORD *)&v21[v34[7]];
      *(_OWORD *)&v20[v34[8]] = *(_OWORD *)&v21[v34[8]];
      goto LABEL_17;
    case 6u:
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      uint64_t v39 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v40 = *(int *)(v39 + 20);
      uint64_t v41 = &v20[v40];
      uint64_t v42 = &v21[v40];
      uint64_t v43 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      v20[*(int *)(v39 + 24)] = v21[*(int *)(v39 + 24)];
      goto LABEL_17;
    case 7u:
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      uint64_t v44 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v45 = &v20[v44];
      uint64_t v46 = &v21[v44];
      uint64_t v47 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for InterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v15 = *((void *)v13 + 1);
  uint64_t v14 = *((void *)v13 + 2);
  *((void *)v12 + 1) = v15;
  *((void *)v12 + 2) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  long long v18 = &a2[v16];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v20 = *((void *)v18 + 1);
  uint64_t v19 = *((void *)v18 + 2);
  *((void *)v17 + 1) = v20;
  *((void *)v17 + 2) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  uint64_t v25 = *((void *)v23 + 1);
  uint64_t v24 = *((void *)v23 + 2);
  *((void *)v22 + 1) = v25;
  *((void *)v22 + 2) = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v31 = a3[9];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    sub_252BA6670();
    uint64_t v34 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v35 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
        uint64_t v36 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v37 = v36[5];
        uint64_t v38 = &v32[v37];
        uint64_t v39 = &v33[v37];
        uint64_t v40 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v38, v39, v6);
          *(_OWORD *)&v38[*(int *)(v40 + 20)] = *(_OWORD *)&v39[*(int *)(v40 + 20)];
          *(_OWORD *)&v38[*(int *)(v40 + 24)] = *(_OWORD *)&v39[*(int *)(v40 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v38, 0, 1, v40);
        }
        v32[v36[6]] = v33[v36[6]];
        uint64_t v60 = v36[7];
        uint64_t v61 = &v32[v60];
        uint64_t v62 = &v33[v60];
        uint64_t v63 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
          uint64_t v65 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v66 = *(int *)(v65 + 20);
          uint64_t v67 = &v61[v66];
          uint64_t v70 = &v62[v66];
          uint64_t v68 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v67, v70, v68);
          *(void *)&v61[*(int *)(v65 + 24)] = *(void *)&v62[*(int *)(v65 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v61, 0, 1, v63);
        }
        v32[v36[8]] = v33[v36[8]];
        *(_OWORD *)&v32[v36[9]] = *(_OWORD *)&v33[v36[9]];
        goto LABEL_22;
      case 3u:
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        uint64_t v42 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v43 = &v32[v42];
        uint64_t v44 = &v33[v42];
        uint64_t v45 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        goto LABEL_22;
      case 4u:
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((void *)v32 + 2) = *((void *)v33 + 2);
        v32[24] = v33[24];
        uint64_t v46 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v47 = v46[6];
        uint64_t v48 = &v32[v47];
        uint64_t v49 = &v33[v47];
        uint64_t v50 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        *(_OWORD *)&v32[v46[7]] = *(_OWORD *)&v33[v46[7]];
        *(_OWORD *)&v32[v46[8]] = *(_OWORD *)&v33[v46[8]];
        goto LABEL_22;
      case 6u:
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        uint64_t v51 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = &v32[v52];
        uint64_t v54 = &v33[v52];
        uint64_t v55 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        v32[*(int *)(v51 + 24)] = v33[*(int *)(v51 + 24)];
        goto LABEL_22;
      case 7u:
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        uint64_t v56 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        char v57 = &v32[v56];
        long long v58 = &v33[v56];
        uint64_t v59 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpretedStatementResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C99C48);
}

uint64_t sub_252C99C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252CB9724();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    if (v3 == 2147483646) {
      return sub_252B4C388(*(void *)(v4 + *(int *)(a3 + 20) + 16));
    }
    uint64_t v8 = type metadata accessor for StatementOutcome(0);
    uint64_t v7 = v4 + *(int *)(a3 + 36);
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for InterpretedStatementResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C99D00);
}

void sub_252C99D00()
{
  sub_252B98CA8();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA314();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    sub_252B4C788();
  }
  else
  {
    if (v1 == 2147483646)
    {
      sub_252CBB7A8(*(int *)(v0 + 20));
      return;
    }
    type metadata accessor for StatementOutcome(0);
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, v4, v5, v6);
}

void sub_252C99D98()
{
  sub_252C78730(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StatementOutcome(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void assignWithCopy for ActionOutcome()
{
}

void assignWithTake for ActionOutcome()
{
}

void _s16IntelligenceFlow16StatementOutcomeOwCP_0()
{
  sub_252AFC698();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_252B4C01C();
  if ((*(_DWORD *)(v8 + 80) & 0x20000) != 0)
  {
    sub_252B4C354(*(void *)v5);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = *(void *)(v5 + 8);
        *(void *)uint64_t v7 = *(void *)v5;
        *(void *)(v7 + 8) = v14;
        uint64_t v15 = *(void *)(v5 + 24);
        *(void *)(v7 + 16) = *(void *)(v5 + 16);
        *(void *)(v7 + 24) = v15;
        uint64_t v16 = *(void *)(v5 + 40);
        *(void *)(v7 + 32) = *(void *)(v5 + 32);
        *(void *)(v7 + 40) = v16;
        *(void *)(v7 + 48) = *(void *)(v5 + 48);
        *(_WORD *)(v7 + 56) = *(_WORD *)(v5 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252CBBB68();
        break;
      case 2u:
        uint64_t v17 = *(void *)(v5 + 8);
        *(void *)uint64_t v7 = *(void *)v5;
        *(void *)(v7 + 8) = v17;
        *(void *)(v7 + 16) = *(void *)(v5 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v18 = sub_252CBB59C();
        type metadata accessor for ParameterNeedsValue(v18);
        sub_252CB99F8();
        sub_252AEA304();
        uint64_t v20 = *(void (**)(uint64_t))(v19 + 16);
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_252CB936C();
        v20(v21);
        sub_252CBAAE4();
        break;
      case 4u:
        uint64_t v22 = *(void *)(v5 + 8);
        *(void *)uint64_t v7 = *(void *)v5;
        *(void *)(v7 + 8) = v22;
        *(void *)(v7 + 16) = *(void *)(v5 + 16);
        *(unsigned char *)(v7 + 24) = *(unsigned char *)(v5 + 24);
        uint64_t v23 = type metadata accessor for ParameterConfirmation(0);
        sub_252CBA7BC();
        sub_252AEA304();
        uint64_t v25 = *(void (**)(uint64_t))(v24 + 16);
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_252B4C518();
        v25(v26);
        sub_252CBAD3C((void *)(v5 + *(int *)(v23 + 28)));
        uint64_t v27 = *(int *)(v23 + 32);
        uint64_t v28 = (void *)(v7 + v27);
        uint64_t v29 = (void *)(v5 + v27);
        uint64_t v30 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v31 = *(void *)(v5 + 8);
        *(void *)uint64_t v7 = *(void *)v5;
        *(void *)(v7 + 8) = v31;
        *(void *)(v7 + 16) = *(void *)(v5 + 16);
        *(unsigned char *)(v7 + 24) = *(unsigned char *)(v5 + 24);
        uint64_t v32 = *(void *)(v5 + 40);
        *(void *)(v7 + 32) = *(void *)(v5 + 32);
        *(void *)(v7 + 40) = v32;
        uint64_t v33 = *(void *)(v5 + 48);
        uint64_t v34 = *(void *)(v5 + 56);
        *(void *)(v7 + 48) = v33;
        *(void *)(v7 + 56) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v35 = sub_252CBB59C();
        uint64_t v36 = type metadata accessor for ParameterNotAllowed(v35);
        sub_252CBA7BC();
        sub_252AEA304();
        uint64_t v38 = *(void (**)(uint64_t))(v37 + 16);
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_252B4C518();
        v38(v39);
        sub_252CB90C4(*(int *)(v36 + 24));
        break;
      case 7u:
        uint64_t v40 = sub_252CBB59C();
        type metadata accessor for ParameterCandidatesNotFound(v40);
        sub_252CB99F8();
        sub_252AEA304();
        uint64_t v42 = *(void (**)(uint64_t))(v41 + 16);
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_252CB936C();
        v42(v43);
        sub_252CBAAF4();
        break;
      case 8u:
        sub_252CBA120();
        break;
      case 9u:
        *(void *)uint64_t v7 = *(void *)v5;
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        unint64_t v44 = *(void *)(v5 + 8);
        if (v44 >= 0x10)
        {
          *(void *)uint64_t v7 = *(void *)v5;
          *(void *)(v7 + 8) = v44;
          uint64_t v46 = *(void *)(v5 + 24);
          *(void *)(v7 + 16) = *(void *)(v5 + 16);
          *(void *)(v7 + 24) = v46;
          *(void *)(v7 + 32) = *(void *)(v5 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v45 = *(_OWORD *)(v5 + 16);
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v5;
          *(_OWORD *)(v7 + 16) = v45;
          *(void *)(v7 + 32) = *(void *)(v5 + 32);
        }
        break;
      default:
        sub_252D19BE8();
        sub_252AEA304();
        sub_252B4C1F4();
        v9();
        if (sub_252CB85EC())
        {
          uint64_t v10 = sub_252AC3A24(&qword_269C41A68);
          uint64_t v11 = sub_252AEA368(v10);
          sub_252CBA1E0(v11, v13, *(void *)(v12 + 64));
        }
        else
        {
          sub_252D19588();
          sub_252AEA304();
          sub_252B4C1F4();
          v47();
          sub_252CBAD3C((void *)((char *)v1 + *(int *)(v2 + 20)));
          uint64_t v48 = *(int *)(v2 + 24);
          uint64_t v49 = (void *)((char *)v0 + v48);
          uint64_t v50 = (void *)((char *)v1 + v48);
          unint64_t v1 = (void *)v50[1];
          void *v49 = *v50;
          v49[1] = v1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_252B4CA38();
        }
        if (sub_252CB8574())
        {
          uint64_t v51 = sub_252AC3A24(&qword_269C41A78);
          uint64_t v52 = sub_252AEA368(v51);
          sub_252CBA1E0(v52, v54, *(void *)(v53 + 64));
        }
        else
        {
          uint64_t v55 = v1[1];
          *unint64_t v0 = *v1;
          v0[1] = v55;
          type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          sub_252CBAE6C();
          sub_252AC3A24(&qword_269C41A70);
          sub_252AEA304();
          sub_252B4C1F4();
          v56();
          *(void *)((char *)v0 + *(int *)(v3 + 24)) = *(void *)((char *)v1 + *(int *)(v3 + 24));
          sub_252B4CA38();
        }
        sub_252CBAD90();
        sub_252CBAD3C(v57);
        swift_bridgeObjectRetain();
        sub_252CB97D8();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_252AFC67C();
}

unint64_t _s16IntelligenceFlow16StatementOutcomeOwxx_0(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_252D19BE8();
      sub_252AEA304();
      sub_252B5F53C();
      v4();
      type metadata accessor for ActionSuccess(0);
      uint64_t v5 = sub_252CBBD3C();
      uint64_t v6 = type metadata accessor for ActionSuccess.UndoContext(v5);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, v6))
      {
        sub_252D19588();
        sub_252AEA304();
        sub_252B5F53C();
        v7();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v8 = sub_252CBBD3C();
      uint64_t v9 = type metadata accessor for ActionSuccess.FollowUpAction(v8);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, v9))
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v1
            + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
        sub_252AC3A24(&qword_269C41A70);
        sub_252AEA304();
        (*(void (**)(uint64_t))(v11 + 8))(v10);
      }
      goto LABEL_20;
    case 1:
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 2:
      goto LABEL_19;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      type metadata accessor for ParameterConfirmation(0);
      sub_252CBBD3C();
      sub_252D19BE8();
      sub_252AEA304();
      sub_252B5F53C();
      v13();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_12;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_12:
      uint64_t v14 = a1 + *(int *)(v12 + 20);
      sub_252D19BE8();
      sub_252AEA304();
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
      return v17(v14, v15);
    case 8:
      uint64_t v18 = *(void *)a1;
      uint64_t v19 = *(void *)(a1 + 8);
      char v20 = *(unsigned char *)(a1 + 16);
      return sub_252AD16E4(v18, v19, v20);
    case 9:
      goto LABEL_20;
    case 10:
      unint64_t result = *(void *)(a1 + 8);
      if (result < 0x10) {
        return result;
      }
LABEL_19:
      swift_bridgeObjectRelease();
LABEL_20:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

#error "252C9A8D4: call analysis failed (funcsize=273)"

void assignWithCopy for StatementOutcome()
{
}

void sub_252C9AB5C()
{
  sub_252AFC698();
  uint64_t v6 = v5;
  if (v5 != v7)
  {
    sub_252CBABF0();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_252CBA030();
        *(void *)(v6 + 32) = *((void *)v0 + 4);
        *(void *)(v6 + 40) = *((void *)v0 + 5);
        *(void *)(v6 + 48) = *((void *)v0 + 6);
        *(unsigned char *)(v6 + 56) = *((unsigned char *)v0 + 56);
        *(unsigned char *)(v6 + 57) = *((unsigned char *)v0 + 57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252CBBB68();
        break;
      case 2u:
        *(void *)uint64_t v6 = *(void *)v0;
        *(void *)(v6 + 8) = *((void *)v0 + 1);
        *(void *)(v6 + 16) = *((void *)v0 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v13 = sub_252CB9C40();
        type metadata accessor for ParameterNeedsValue(v13);
        sub_252CB99F8();
        sub_252AEA304();
        uint64_t v15 = *(void (**)(uint64_t))(v14 + 16);
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_252CB936C();
        v15(v16);
        sub_252CBAAE4();
        break;
      case 4u:
        *(void *)uint64_t v6 = *(void *)v0;
        *(void *)(v6 + 8) = *((void *)v0 + 1);
        sub_252CBC160();
        uint64_t v17 = type metadata accessor for ParameterConfirmation(0);
        sub_252CBA7BC();
        sub_252AEA304();
        uint64_t v19 = *(void (**)(uint64_t))(v18 + 16);
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_252B4C518();
        v19(v20);
        sub_252CBA444((long long *)((char *)v0 + *(int *)(v17 + 28)));
        uint64_t v21 = *(int *)(v17 + 32);
        uint64_t v22 = (void *)(v6 + v21);
        uint64_t v23 = (void *)((char *)v0 + v21);
        void *v22 = *v23;
        v22[1] = v23[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)uint64_t v6 = *(void *)v0;
        *(void *)(v6 + 8) = *((void *)v0 + 1);
        sub_252CBC160();
        *(void *)(v6 + 32) = *((void *)v0 + 4);
        *(void *)(v6 + 40) = *((void *)v0 + 5);
        *(void *)(v6 + 48) = *((void *)v0 + 6);
        *(void *)(v6 + 56) = *((void *)v0 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v24 = sub_252CB9C40();
        uint64_t v25 = type metadata accessor for ParameterNotAllowed(v24);
        sub_252CBA7BC();
        sub_252AEA304();
        uint64_t v27 = *(void (**)(uint64_t))(v26 + 16);
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_252B4C518();
        v27(v28);
        sub_252CB90C4(*(int *)(v25 + 24));
        break;
      case 7u:
        uint64_t v29 = sub_252CB9C40();
        type metadata accessor for ParameterCandidatesNotFound(v29);
        sub_252CB99F8();
        sub_252AEA304();
        uint64_t v31 = *(void (**)(uint64_t))(v30 + 16);
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_252CB936C();
        v31(v32);
        sub_252CBAAF4();
        break;
      case 8u:
        sub_252CBA120();
        break;
      case 9u:
        *(void *)uint64_t v6 = *(void *)v0;
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        if (*((void *)v0 + 1) >= 0x10uLL)
        {
          sub_252CBA030();
          *(void *)(v6 + 32) = *((void *)v0 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v33 = *v0;
          long long v34 = v0[1];
          *(void *)(v6 + 32) = *((void *)v0 + 4);
          *(_OWORD *)uint64_t v6 = v33;
          *(_OWORD *)(v6 + 16) = v34;
        }
        break;
      default:
        sub_252D19BE8();
        sub_252AEA304();
        sub_252B4C1F4();
        v8();
        if (sub_252CB85EC())
        {
          uint64_t v9 = sub_252AC3A24(&qword_269C41A68);
          uint64_t v10 = sub_252AEA368(v9);
          sub_252CBA1E0(v10, v12, *(void *)(v11 + 64));
        }
        else
        {
          sub_252D19588();
          sub_252AEA304();
          sub_252B4C1F4();
          v35();
          sub_252CBA444((void *)((char *)v2 + *(int *)(v3 + 20)));
          uint64_t v36 = *(int *)(v3 + 24);
          uint64_t v37 = (void *)((char *)v1 + v36);
          uint64_t v38 = (void *)((char *)v2 + v36);
          *uint64_t v37 = *v38;
          uint64_t v2 = (void *)v38[1];
          v37[1] = v2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_252B4CA38();
        }
        if (sub_252CB8574())
        {
          uint64_t v39 = sub_252AC3A24(&qword_269C41A78);
          uint64_t v40 = sub_252AEA368(v39);
          sub_252CBA1E0(v40, v42, *(void *)(v41 + 64));
        }
        else
        {
          *uint64_t v1 = *v2;
          v1[1] = v2[1];
          type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          sub_252CBAE6C();
          sub_252AC3A24(&qword_269C41A70);
          sub_252AEA304();
          sub_252B4C1F4();
          v43();
          *(void *)((char *)v1 + *(int *)(v4 + 24)) = *(void *)((char *)v2 + *(int *)(v4 + 24));
          sub_252B4CA38();
        }
        sub_252CBAD90();
        sub_252CBA444(v44);
        swift_bridgeObjectRetain();
        sub_252CB97D8();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_252AFC67C();
}

void _s16IntelligenceFlow16StatementOutcomeOwtk_0()
{
  sub_252AFC730();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_252CBBAEC();
  switch((int)v10)
  {
    case 0:
      sub_252D19BE8();
      sub_252AEA304();
      sub_252B4C1CC();
      v12();
      if (sub_252CB85EC())
      {
        uint64_t v13 = sub_252AC3A24(&qword_269C41A68);
        uint64_t v14 = sub_252AEA368(v13);
        sub_252CBA1E0(v14, v16, *(void *)(v15 + 64));
      }
      else
      {
        sub_252D19588();
        sub_252AEA304();
        sub_252B4C1CC();
        v21();
        *(_OWORD *)(v2 + *(int *)(v4 + 20)) = *(_OWORD *)(v3 + *(int *)(v4 + 20));
        *(_OWORD *)(v2 + *(int *)(v4 + 24)) = *(_OWORD *)(v3 + *(int *)(v4 + 24));
        sub_252B4CA38();
      }
      if (sub_252CB8574())
      {
        uint64_t v22 = sub_252AC3A24(&qword_269C41A78);
        uint64_t v23 = sub_252AEA368(v22);
        sub_252CBA1E0(v23, v25, *(void *)(v24 + 64));
      }
      else
      {
        sub_252CBB358();
        sub_252AC3A24(&qword_269C41A70);
        sub_252AEA304();
        sub_252B4C1CC();
        v26();
        *(void *)(v2 + *(int *)(v5 + 24)) = *(void *)(v3 + *(int *)(v5 + 24));
        sub_252B4CA38();
      }
      *((unsigned char *)v0 + v1[8]) = *((unsigned char *)v9 + v1[8]);
      *(_OWORD *)((char *)v0 + v1[9]) = *(_OWORD *)((char *)v9 + v1[9]);
      sub_252CB97D8();
      goto LABEL_14;
    case 3:
      *unint64_t v0 = *v9;
      type metadata accessor for ParameterNeedsValue(0);
      sub_252CB9A18();
      sub_252AEA304();
      sub_252B4C1CC();
      v17();
      sub_252CBAAE4();
      goto LABEL_14;
    case 4:
      sub_252CB9564();
      sub_252AEA304();
      sub_252B4C1CC();
      v18();
      sub_252CB9C70();
      goto LABEL_14;
    case 6:
      sub_252CBA3E0();
      sub_252AEA304();
      sub_252B4C1CC();
      v19();
      sub_252CB90C4(v1[6]);
      goto LABEL_14;
    case 7:
      *unint64_t v0 = *v9;
      type metadata accessor for ParameterCandidatesNotFound(0);
      sub_252CB9A18();
      sub_252AEA304();
      sub_252B4C1CC();
      v20();
      sub_252CBAAF4();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      sub_252CBC914(v10, v11, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  sub_252AFC718();
}

void assignWithTake for StatementOutcome()
{
}

void sub_252C9B2F8()
{
  sub_252AFC730();
  uint64_t v8 = v7;
  if (v7 != v9)
  {
    sub_252CBABF0();
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch((int)EnumCaseMultiPayload)
    {
      case 0:
        sub_252D19BE8();
        sub_252AEA304();
        sub_252B4C1CC();
        v12();
        if (sub_252CB85EC())
        {
          uint64_t v13 = sub_252AC3A24(&qword_269C41A68);
          uint64_t v14 = sub_252AEA368(v13);
          sub_252CBA1E0(v14, v16, *(void *)(v15 + 64));
        }
        else
        {
          sub_252D19588();
          sub_252AEA304();
          sub_252B4C1CC();
          v21();
          *(_OWORD *)(v3 + *(int *)(v5 + 20)) = *(_OWORD *)(v4 + *(int *)(v5 + 20));
          *(_OWORD *)(v3 + *(int *)(v5 + 24)) = *(_OWORD *)(v4 + *(int *)(v5 + 24));
          sub_252B4CA38();
        }
        if (sub_252CB8574())
        {
          uint64_t v22 = sub_252AC3A24(&qword_269C41A78);
          uint64_t v23 = sub_252AEA368(v22);
          sub_252CBA1E0(v23, v25, *(void *)(v24 + 64));
        }
        else
        {
          sub_252CBB358();
          sub_252AC3A24(&qword_269C41A70);
          sub_252AEA304();
          sub_252B4C1CC();
          v26();
          *(void *)(v3 + *(int *)(v6 + 24)) = *(void *)(v4 + *(int *)(v6 + 24));
          sub_252B4CA38();
        }
        *((unsigned char *)v8 + v2[8]) = *((unsigned char *)v1 + v2[8]);
        *(_OWORD *)((char *)v8 + v2[9]) = *(_OWORD *)((char *)v1 + v2[9]);
        sub_252CB97D8();
        goto LABEL_15;
      case 3:
        *uint64_t v8 = *v1;
        type metadata accessor for ParameterNeedsValue(0);
        sub_252CB9A18();
        sub_252AEA304();
        sub_252B4C1CC();
        v17();
        sub_252CBAAE4();
        goto LABEL_15;
      case 4:
        sub_252CB9564();
        sub_252AEA304();
        sub_252B4C1CC();
        v18();
        sub_252CB9C70();
        goto LABEL_15;
      case 6:
        sub_252CBA3E0();
        sub_252AEA304();
        sub_252B4C1CC();
        v19();
        sub_252CB90C4(v2[6]);
        goto LABEL_15;
      case 7:
        *uint64_t v8 = *v1;
        type metadata accessor for ParameterCandidatesNotFound(0);
        sub_252CB9A18();
        sub_252AEA304();
        sub_252B4C1CC();
        v20();
        sub_252CBAAF4();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        sub_252CBC914(EnumCaseMultiPayload, v11, *(void *)(*(void *)(v0 - 8) + 64));
        break;
    }
  }
  sub_252AFC718();
}

uint64_t sub_252C9B5DC()
{
  uint64_t result = type metadata accessor for ActionSuccess(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ParameterNeedsValue(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ParameterConfirmation(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ParameterNotAllowed(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for ParameterCandidatesNotFound(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return sub_252B4C5C0();
          }
        }
      }
    }
  }
  return result;
}

uint64_t destroy for SessionServerDebuggerEvent.SpanStarted()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16IntelligenceFlow11StatementIDVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StatementID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StatementID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StatementID(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StatementID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for StatementID()
{
}

void *initializeBufferWithCopyOfBuffer for ActionSuccess(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19BE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionSuccess.UndoContext(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_252AC3A24(&qword_269C41A68);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
      uint64_t v15 = *(int *)(v11 + 20);
      uint64_t v16 = &v9[v15];
      uint64_t v17 = &v10[v15];
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v19 = *(int *)(v11 + 24);
      uint64_t v20 = &v9[v19];
      uint64_t v21 = &v10[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v23 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for ActionSuccess.FollowUpAction(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_252AC3A24(&qword_269C41A78);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v25[1];
      void *v24 = *v25;
      v24[1] = v28;
      uint64_t v29 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v31 = (char *)v24 + v30;
      uint64_t v32 = (char *)v25 + v30;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_252AC3A24(&qword_269C41A70);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(void *)((char *)v24 + *(int *)(v29 + 24)) = *(void *)((char *)v25 + *(int *)(v29 + 24));
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v24, 0, 1, v26);
    }
    uint64_t v34 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionSuccess(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v6))
  {
    uint64_t v7 = sub_252D19588();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
    uint64_t v11 = sub_252AC3A24(&qword_269C41A70);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionSuccess(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_252AC3A24(&qword_269C41A68);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_252D19588();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
    uint64_t v13 = *(int *)(v10 + 20);
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *(int *)(v10 + 24);
    uint64_t v18 = &v8[v17];
    uint64_t v19 = &v9[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v21 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_252AC3A24(&qword_269C41A78);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v23[1];
    void *v22 = *v23;
    v22[1] = v26;
    uint64_t v27 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
    uint64_t v28 = *(int *)(v27 + 20);
    uint64_t v29 = (char *)v22 + v28;
    uint64_t v30 = (char *)v23 + v28;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_252AC3A24(&qword_269C41A70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(void *)((char *)v22 + *(int *)(v27 + 24)) = *(void *)((char *)v23 + *(int *)(v27 + 24));
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v32 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  void *v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionSuccess(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ActionSuccess.UndoContext(0);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      uint64_t v13 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
      uint64_t v14 = *(int *)(v10 + 20);
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      uint64_t v17 = *(int *)(v10 + 24);
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = *((void *)v19 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_252BA6670();
LABEL_6:
    uint64_t v20 = sub_252AC3A24(&qword_269C41A68);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v37 = sub_252D19588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v8, v9, v37);
  uint64_t v38 = *(int *)(v10 + 20);
  uint64_t v39 = &v8[v38];
  uint64_t v40 = &v9[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(int *)(v10 + 24);
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  int v25 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v24);
  int v26 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v24);
  if (!v25)
  {
    if (!v26)
    {
      void *v22 = *v23;
      v22[1] = v23[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v44 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
      uint64_t v45 = *(int *)(v44 + 20);
      uint64_t v46 = (char *)v22 + v45;
      uint64_t v47 = (char *)v23 + v45;
      uint64_t v48 = sub_252AC3A24(&qword_269C41A70);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
      *(void *)((char *)v22 + *(int *)(v44 + 24)) = *(void *)((char *)v23 + *(int *)(v44 + 24));
      goto LABEL_13;
    }
    sub_252BA6670();
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v32 = sub_252AC3A24(&qword_269C41A78);
    memcpy(v22, v23, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  void *v22 = *v23;
  v22[1] = v23[1];
  uint64_t v27 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v29 = (char *)v22 + v28;
  uint64_t v30 = (char *)v23 + v28;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  *(void *)((char *)v22 + *(int *)(v27 + 24)) = *(void *)((char *)v23 + *(int *)(v27 + 24));
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v24);
LABEL_13:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v33 = a3[9];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  void *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionSuccess(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ActionSuccess.UndoContext(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_252AC3A24(&qword_269C41A68);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_252D19588();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
    *(_OWORD *)&v8[*(int *)(v10 + 24)] = *(_OWORD *)&v9[*(int *)(v10 + 24)];
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_252AC3A24(&qword_269C41A78);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    uint64_t v18 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
    uint64_t v19 = *(int *)(v18 + 20);
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    uint64_t v22 = sub_252AC3A24(&qword_269C41A70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(void *)((char *)v14 + *(int *)(v18 + 24)) = *(void *)((char *)v15 + *(int *)(v18 + 24));
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v23 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for ActionSuccess(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ActionSuccess.UndoContext(0);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      uint64_t v13 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
      *(_OWORD *)&v8[*(int *)(v10 + 24)] = *(_OWORD *)&v9[*(int *)(v10 + 24)];
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_252BA6670();
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_269C41A68);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v33 = sub_252D19588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v8, v9, v33);
  uint64_t v34 = *(int *)(v10 + 20);
  uint64_t v35 = &v8[v34];
  uint64_t v36 = &v9[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(int *)(v10 + 24);
  uint64_t v40 = &v8[v39];
  uint64_t v41 = &v9[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v15 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  int v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (!v20)
    {
      uint64_t v44 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v44;
      swift_bridgeObjectRelease();
      uint64_t v45 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
      uint64_t v46 = *(int *)(v45 + 20);
      uint64_t v47 = (char *)v16 + v46;
      uint64_t v48 = (char *)v17 + v46;
      uint64_t v49 = sub_252AC3A24(&qword_269C41A70);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
      *(void *)((char *)v16 + *(int *)(v45 + 24)) = *(void *)((char *)v17 + *(int *)(v45 + 24));
      goto LABEL_13;
    }
    sub_252BA6670();
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v26 = sub_252AC3A24(&qword_269C41A78);
    memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v21 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = (char *)v16 + v22;
  uint64_t v24 = (char *)v17 + v22;
  uint64_t v25 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(void *)((char *)v16 + *(int *)(v21 + 24)) = *(void *)((char *)v17 + *(int *)(v21 + 24));
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_13:
  uint64_t v27 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSuccess(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9CA00);
}

uint64_t sub_252C9CA00(uint64_t a1, uint64_t a2, int *a3)
{
  sub_252CB9B20();
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A68);
    sub_252AEA314();
    if (*(_DWORD *)(v10 + 84) == v3)
    {
      uint64_t v8 = v9;
      uint64_t v11 = a3[5];
    }
    else
    {
      sub_252AC3A24(&qword_269C41A78);
      sub_252AEA314();
      if (*(_DWORD *)(v13 + 84) != v3) {
        return sub_252B4C388(*(void *)(v4 + a3[9] + 8));
      }
      uint64_t v8 = v12;
      uint64_t v11 = a3[7];
    }
    uint64_t v7 = v4 + v11;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ActionSuccess(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9CADC);
}

void sub_252C9CADC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252CB9B20();
  sub_252AEA314();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A68);
    sub_252AEA314();
    if (*(_DWORD *)(v9 + 84) != a3)
    {
      sub_252AC3A24(&qword_269C41A78);
      sub_252AEA314();
      if (*(_DWORD *)(v10 + 84) != a3)
      {
        *(void *)(v5 + *(int *)(a4 + 36) + 8) = v4;
        return;
      }
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, v12, v13, v14);
}

void sub_252C9CBA8()
{
  sub_252D19BE8();
  if (v0 <= 0x3F)
  {
    sub_252C78730(319, &qword_26B2341C8, (void (*)(uint64_t))type metadata accessor for ActionSuccess.UndoContext);
    if (v1 <= 0x3F)
    {
      sub_252C78730(319, &qword_26B2341B0, (void (*)(uint64_t))type metadata accessor for ActionSuccess.FollowUpAction);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionSuccess.UndoContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionSuccess.UndoContext(uint64_t a1)
{
  uint64_t v2 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionSuccess.UndoContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionSuccess.UndoContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionSuccess.UndoContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ActionSuccess.UndoContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSuccess.UndoContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9D118);
}

uint64_t sub_252C9D11C()
{
  sub_252CBAC24();
  sub_252AEA314();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return sub_252B4C1B8(*(void *)(v0 + *(int *)(v2 + 20) + 8));
  }
  uint64_t v4 = sub_252CB9030();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ActionSuccess.UndoContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9D19C);
}

void sub_252C9D1A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252AF44D4();
  sub_252AEA314();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    uint64_t v7 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v7, v8, v9, v10);
  }
  else
  {
    sub_252CB95C8(*(int *)(a4 + 20));
  }
}

uint64_t sub_252C9D20C()
{
  return sub_252C9D21C();
}

uint64_t sub_252C9D21C()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    sub_252CB8544(result);
    sub_252CB9934();
    return sub_252B4C5C0();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionSuccess.FollowUpAction(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_252AC3A24(&qword_269C41A70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
  }
  return a1;
}

uint64_t destroy for ActionSuccess.FollowUpAction.ExecutableAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
  uint64_t v3 = sub_252AC3A24(&qword_269C41A70);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *initializeWithCopy for ActionSuccess.FollowUpAction.ExecutableAction(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  return a1;
}

void *assignWithCopy for ActionSuccess.FollowUpAction.ExecutableAction(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 24)) = *(void *)((char *)a2 + *(int *)(v4 + 24));
  return a1;
}

_OWORD *initializeWithTake for ActionSuccess.FollowUpAction.ExecutableAction(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 24)) = *(void *)((char *)a2 + *(int *)(v4 + 24));
  return a1;
}

void *assignWithTake for ActionSuccess.FollowUpAction.ExecutableAction(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSuccess.FollowUpAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9D6D4);
}

uint64_t sub_252C9D6D4()
{
  type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ActionSuccess.FollowUpAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9D728);
}

uint64_t sub_252C9D728()
{
  type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252C9D768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9D780(a1, a2, a3, type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction);
}

uint64_t sub_252C9D780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return sub_252B4C5C0();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionSuccess.FollowUpAction.ExecutableAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_252AC3A24(&qword_269C41A70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
  }
  return v4;
}

uint64_t getEnumTagSinglePayload for ActionSuccess.FollowUpAction.ExecutableAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);

  return MEMORY[0x270FA0340](a1, a2, v4, sub_252C9D95C);
}

uint64_t sub_252C9D95C()
{
  return sub_252C9DEA0();
}

uint64_t storeEnumTagSinglePayload for ActionSuccess.FollowUpAction.ExecutableAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);

  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_252C9D9D0);
}

void sub_252C9D9D0()
{
}

uint64_t sub_252C9D9DC(uint64_t a1)
{
  uint64_t result = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_252AC3A24(&qword_269C41A70);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_252AC3A24(&qword_269C41A70);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252AC3A24(&qword_269C41A70);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9DE94);
}

uint64_t sub_252C9DE94()
{
  return sub_252C9DEA0();
}

uint64_t sub_252C9DEA0()
{
  sub_252B4C378();
  if (v2) {
    return sub_252B4C1B8(*(void *)(v0 + 8));
  }
  sub_252AC3A24(v1);
  uint64_t v4 = sub_252CB9A84();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9DF1C);
}

void sub_252C9DF1C()
{
}

void sub_252C9DF28()
{
  sub_252B4C1A4();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    sub_252AC3A24(v2);
    sub_252B4C2D0();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_252C9DF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CA0064(a1, a2, a3, (uint64_t (*)(uint64_t))sub_252C9DFBC);
}

void sub_252C9DFBC()
{
  if (!qword_26B234888)
  {
    sub_252C0CBD4(255, qword_26B2348B8);
    unint64_t v0 = sub_252D19C28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B234888);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ActionRequirement(uint64_t a1, uint64_t a2)
{
  return sub_252C9E1B4(a1, a2);
}

uint64_t destroy for ActionRequirement(uint64_t a1)
{
  return sub_252AD16E4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for ActionRequirement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_252C9E21C(a1, a2, a3, (uint64_t)sub_252ACE7BC, (void (*)(uint64_t, uint64_t, uint64_t))sub_252AD16E4);
}

uint64_t *assignWithTake for ActionRequirement(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9E298(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_252AD16E4);
}

uint64_t getEnumTagSinglePayload for ActionRequirement(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3D && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 60;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
      if (v2 >= 0x3C) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ActionRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 61;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_252C9E12C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_252C9E148(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_252C9E158(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    char v2 = *(unsigned char *)(result + 16) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    char v2 = -64;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

void type metadata accessor for ActionRequirement()
{
}

uint64_t initializeBufferWithCopyOfBuffer for SystemRequirement(uint64_t a1, uint64_t a2)
{
  return sub_252C9E1B4(a1, a2);
}

uint64_t destroy for SystemRequirement(uint64_t a1)
{
  return sub_252AD16F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_252C9E1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_252CBB160(a1, a2);
  v7(v6);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 16) = v5;
  return v2;
}

uint64_t *assignWithCopy for SystemRequirement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_252C9E21C(a1, a2, a3, (uint64_t)sub_252ACE7D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_252AD16F8);
}

uint64_t *sub_252C9E21C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  char v9 = *((unsigned char *)a2 + 16);
  uint64_t v10 = sub_252CBBBCC();
  v11(v10);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v14 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for SystemRequirement(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9E298(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_252AD16F8);
}

uint64_t *sub_252C9E298(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV15ResolutionInputOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return sub_252B989F4(*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 2) {
    return sub_252B989F4(v3 ^ 0xFF);
  }
  else {
    return sub_252B989F4(-1);
  }
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV15ResolutionInputOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252C9E364(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_252C9E37C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for SystemRequirement()
{
}

void type metadata accessor for SystemRequirement.ProtectedAppRequest()
{
}

void type metadata accessor for SystemRequirement.AuthenticationRequest()
{
}

void type metadata accessor for SystemRequirement.AuthenticationRequest.AuthenticationLevel()
{
}

void type metadata accessor for AppRequirement()
{
}

void type metadata accessor for PermissionRequirement()
{
}

unint64_t destroy for ActionFailure(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0x10)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for ActionFailure(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >= 0x10)
  {
    *a1 = *a2;
    a1[1] = v3;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v4 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v4;
    a1[4] = a2[4];
  }
  return a1;
}

void *assignWithCopy for ActionFailure(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 0x10uLL)
  {
    if (v4 >= 0x10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = a2[4];
    }
    else
    {
      sub_252C9E590((uint64_t)a1);
      uint64_t v7 = a2[4];
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
    }
    a1[4] = v7;
  }
  else if (v4 >= 0x10)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v5 = *(_OWORD *)a2;
    long long v6 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v5;
    *((_OWORD *)a1 + 1) = v6;
  }
  return a1;
}

uint64_t sub_252C9E590(uint64_t a1)
{
  return a1;
}

void *assignWithTake for ActionFailure(void *a1, void *a2)
{
  if (a1[1] >= 0x10uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 0x10)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_252C9E590((uint64_t)a1);
  }
  long long v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v5;
LABEL_6:
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionFailure(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFEF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483631;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 16;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionFailure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFEF)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 2147483632;
    if (a3 > 0x7FFFFFEF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFEF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 15;
    }
  }
  return result;
}

void type metadata accessor for ActionFailure()
{
}

unint64_t destroy for ActionFailure.Failure(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ActionFailure.Failure(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ActionFailure.Failure(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    long long v6 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v5;
    *((_OWORD *)a1 + 1) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ActionFailure.Failure(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionFailure.Failure(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF0 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483632);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 15;
  if (v4 >= 0x11) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionFailure.Failure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFEF)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483632;
    if (a3 >= 0x7FFFFFF0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF0) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 15;
    }
  }
  return result;
}

uint64_t sub_252C9E9E8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_252C9EA00(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for ActionFailure.Failure()
{
}

void *initializeWithCopy for ActionFailure.DeveloperDefinedError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ActionFailure.DeveloperDefinedError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for ActionFailure.DeveloperDefinedError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void type metadata accessor for ActionFailure.DeveloperDefinedError()
{
}

uint64_t destroy for ActionConfirmation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionConfirmation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionConfirmation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

__n128 initializeWithTake for ActionConfirmation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ActionConfirmation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionConfirmation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 58))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionConfirmation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 58) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ActionConfirmation()
{
}

void type metadata accessor for ActionConfirmation.SystemStyle()
{
}

uint64_t _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolVwCP_0(void *a1, void *a2)
{
  sub_252CBBAC0(a1, a2);
  *(_WORD *)(v2 + 16) = *(_WORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s16IntelligenceFlow18ActionConfirmationV11SystemStyleO17MontaraEnablementVwca_0(void *a1, void *a2)
{
  return sub_252CBB63C();
}

uint64_t _s16IntelligenceFlow18ActionConfirmationV11SystemStyleO17MontaraEnablementVwta_0(void *a1, void *a2)
{
  return sub_252CBB63C();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO10SearchToolVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    int v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else {
    sub_252CBC254();
  }
  return sub_252B989F4(v2);
}

uint64_t sub_252C9EECC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_252CB93F4(result, a2);
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      return sub_252CB93F4(result, a2);
    }
  }
  return result;
}

void type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement()
{
}

void type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.Source()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19BE8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)char v9 = *(void *)v10;
    *((_WORD *)v9 + 4) = *((_WORD *)v10 + 4);
  }
  return a1;
}

uint64_t initializeWithCopy for ParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_WORD *)(v8 + 8) = *(_WORD *)(v9 + 8);
  return a1;
}

uint64_t assignWithCopy for ParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __int16 v10 = *(_WORD *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_WORD *)(v8 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for ParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_WORD *)(v8 + 8) = *(_WORD *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for ParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_WORD *)(v8 + 8) = *(_WORD *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9F244);
}

uint64_t sub_252C9F244()
{
  sub_252CB9B20();
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for ParameterValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9F28C);
}

uint64_t sub_252C9F28C()
{
  sub_252CB9B20();
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252C9F2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7386C(a1, a2, a3, MEMORY[0x263F80508]);
}

uint64_t storeEnumTagSinglePayload for PromptSelection(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_252C9F310(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_252C9F32C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

void type metadata accessor for PromptSelection()
{
}

uint64_t getEnumTagSinglePayload for ParameterNeedsValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9F36C);
}

uint64_t storeEnumTagSinglePayload for ParameterNeedsValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9F384);
}

uint64_t sub_252C9F388()
{
  return sub_252CA04A8();
}

void *initializeBufferWithCopyOfBuffer for ParameterConfirmation(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_252D19BE8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    int v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ParameterConfirmation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParameterConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_252D19BE8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  uint64_t v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParameterConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ParameterConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for ParameterConfirmation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252C9F900);
}

uint64_t sub_252C9F900()
{
  return sub_252CA302C();
}

uint64_t storeEnumTagSinglePayload for ParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252C9F92C);
}

void sub_252C9F92C()
{
}

uint64_t sub_252C9F944()
{
  uint64_t result = sub_252D19BE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ParameterDisambiguation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParameterDisambiguation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParameterDisambiguation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ParameterDisambiguation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterDisambiguation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParameterDisambiguation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ParameterDisambiguation()
{
}

void type metadata accessor for ValueDisambiguation()
{
}

void *initializeBufferWithCopyOfBuffer for ParameterNotAllowed(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_252D19BE8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

void *initializeWithCopy for ParameterNotAllowed(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19BE8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for ParameterNotAllowed(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19BE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for ParameterNotAllowed(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19BE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for ParameterNotAllowed(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19BE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterNotAllowed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA0028);
}

uint64_t storeEnumTagSinglePayload for ParameterNotAllowed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA0040);
}

uint64_t sub_252CA0044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CA0064(a1, a2, a3, MEMORY[0x263F80508]);
}

uint64_t sub_252CA0064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    sub_252CB8544(result);
    sub_252CB9934();
    return sub_252B4C5C0();
  }
  return result;
}

void type metadata accessor for ParameterNotAllowed.Reason()
{
}

void _s16IntelligenceFlow14MessagePayloadO29StepExecutedWithReturnedValueVwCP_0()
{
  sub_252B23290();
  unint64_t v1 = v0;
  sub_252B4C01C();
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    sub_252B4C354(*v2);
  }
  else
  {
    uint64_t v4 = v2[1];
    *unint64_t v1 = *v2;
    v1[1] = v4;
    sub_252D19BE8();
    sub_252AEA304();
    uint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_252B4C870();
    v6(v7);
  }
  sub_252B232A4();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO29StepExecutedWithReturnedValueVwxx_0()
{
  sub_252CB9724();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + *(int *)(v0 + 20);
  sub_252D19BE8();
  sub_252AEA304();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);

  return v5(v2, v3);
}

void _s16IntelligenceFlow14MessagePayloadO29StepExecutedWithReturnedValueVwcp_0()
{
  sub_252B23290();
  uint64_t v1 = v0[1];
  *uint64_t v2 = *v0;
  v2[1] = v1;
  sub_252D19BE8();
  sub_252AEA304();
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_252B4C870();
  v4(v5);
  sub_252B232A4();
}

void *_s16IntelligenceFlow14MessagePayloadO29StepExecutedWithReturnedValueVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_252CBC61C();
  sub_252AEA304();
  uint64_t v3 = sub_252CBC944();
  v4(v3);
  return a1;
}

_OWORD *_s16IntelligenceFlow14MessagePayloadO29StepExecutedWithReturnedValueVwtk_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_252D19BE8();
  sub_252AEA304();
  sub_252AFCA44();
  sub_252B4C1CC();
  v3();
  return a1;
}

void *_s16IntelligenceFlow14MessagePayloadO29StepExecutedWithReturnedValueVwta_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  sub_252CBC61C();
  sub_252AEA304();
  uint64_t v4 = sub_252CBAAD0();
  v5(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterCandidatesNotFound(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA03B4);
}

uint64_t sub_252CA03B8()
{
  sub_252B4C378();
  if (v1) {
    return sub_252B4C1B8(*(void *)(v0 + 8));
  }
  sub_252D19BE8();
  uint64_t v3 = sub_252CB9A84();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for ParameterCandidatesNotFound(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA0434);
}

void sub_252CA0438()
{
  sub_252B4C1A4();
  if (v2)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    sub_252D19BE8();
    sub_252B4C2D0();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, v4, v5, v6);
  }
}

uint64_t sub_252CA04A8()
{
  uint64_t result = sub_252D19BE8();
  if (v1 <= 0x3F)
  {
    sub_252CBC1E8();
    return sub_252B4C5C0();
  }
  return result;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO12SessionErrorVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 16);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_252B989F4(v2);
}

uint64_t sub_252CA0560(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      return sub_252CBC63C(result);
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ToolDisambiguation()
{
}

uint64_t destroy for AppIntentsInvocationPreview()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppIntentsInvocationPreview(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppIntentsInvocationPreview(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppIntentsInvocationPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16IntelligenceFlow27AppIntentsInvocationPreviewVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    int v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else {
    sub_252CBC254();
  }
  return sub_252B989F4(v2);
}

uint64_t sub_252CA0758(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_252CB93F4(result, a2);
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      return sub_252CB93F4(result, a2);
    }
  }
  return result;
}

void type metadata accessor for AppIntentsInvocationPreview()
{
}

uint64_t destroy for AppIntentsInvocationPreview.Parameter()
{
  swift_bridgeObjectRelease();

  return sub_252B22708();
}

uint64_t initializeWithCopy for AppIntentsInvocationPreview.Parameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_252B226FC();
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for AppIntentsInvocationPreview.Parameter(uint64_t a1, void *a2)
{
  int v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_252B226FC();
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_252B22708();
  return a1;
}

uint64_t assignWithTake for AppIntentsInvocationPreview.Parameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_252B22708();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentsInvocationPreview.Parameter(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentsInvocationPreview.Parameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppIntentsInvocationPreview.Parameter()
{
}

uint64_t destroy for AppIntentsInvocationPreview.Parameter.Value()
{
  return sub_252B22708();
}

uint64_t _s16IntelligenceFlow27AppIntentsInvocationPreviewV9ParameterV5ValueOwCP_0(uint64_t a1, uint64_t a2)
{
  sub_252CBB160(a1, a2);
  sub_252B226FC();
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 16) = v5;
  return v2;
}

uint64_t assignWithCopy for AppIntentsInvocationPreview.Parameter.Value(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_252B226FC();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_252B22708();
  return a1;
}

uint64_t assignWithTake for AppIntentsInvocationPreview.Parameter.Value(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_252B22708();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentsInvocationPreview.Parameter.Value(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentsInvocationPreview.Parameter.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252CA0B0C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for AppIntentsInvocationPreview.Parameter.Value()
{
}

uint64_t _s16IntelligenceFlow14MessagePayloadO14RequestContentO11TextContentVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    int v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else {
    sub_252CBC254();
  }
  return sub_252B989F4(v2);
}

uint64_t sub_252CA0B5C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_252CB93F4(result, a2);
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      return sub_252CB93F4(result, a2);
    }
  }
  return result;
}

void type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.StringValue()
{
}

void type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.ArrayValue()
{
}

void *sub_252CA0BAC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PlannerPromptData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PlannerPromptData(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerPromptData(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for PlannerPromptData()
{
}

void *initializeBufferWithCopyOfBuffer for PlannerPromptData.OnScreenContextValue(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19BE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for PlannerPromptData.OnScreenContextValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for PlannerPromptData.OnScreenContextValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for PlannerPromptData.OnScreenContextValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PlannerPromptData.OnScreenContextValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.OnScreenContextValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA0FDC);
}

uint64_t sub_252CA0FDC()
{
  sub_252CBCA2C();
  sub_252AEA314();
  if (*(_DWORD *)(v3 + 84) == v1)
  {
    uint64_t v4 = sub_252CB9030();
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
    if (v8 >= 7) {
      return v8 - 6;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.OnScreenContextValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA1060);
}

void sub_252CA1060(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252CB9B20();
  sub_252AEA314();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20)) = v4 + 6;
  }
}

uint64_t sub_252CA10D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7386C(a1, a2, a3, MEMORY[0x263F80508]);
}

void type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for PlannerPromptData.Tool(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for PlannerPromptData.Tool.Definition(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v5 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v6 = sub_252D19C88();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
      case 3u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        uint64_t v9 = a2[5];
        a1[4] = a2[4];
        a1[5] = v9;
        uint64_t v10 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_252D19B58();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        break;
      default:
        uint64_t v15 = sub_252D19B58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PlannerPromptData.Tool(uint64_t a1)
{
  type metadata accessor for PlannerPromptData.Tool.Definition(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      goto LABEL_4;
    case 2:
      uint64_t v3 = sub_252D19C88();
      goto LABEL_5;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
LABEL_4:
      uint64_t v3 = sub_252D19B58();
LABEL_5:
      int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PlannerPromptData.Tool(void *a1, void *a2)
{
  type metadata accessor for PlannerPromptData.Tool.Definition(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = sub_252D19C88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    case 3u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      uint64_t v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_252D19B58();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
    default:
      uint64_t v13 = sub_252D19B58();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PlannerPromptData.Tool(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    type metadata accessor for PlannerPromptData.Tool.Definition(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v5 = sub_252D19C88();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v6 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_252D19B58();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
      default:
        uint64_t v4 = sub_252D19B58();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PlannerPromptData.Tool(_OWORD *a1, _OWORD *a2)
{
  type metadata accessor for PlannerPromptData.Tool.Definition(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = sub_252D19C88();
      goto LABEL_4;
    case 3u:
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      a1[2] = a2[2];
      uint64_t v6 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_252D19B58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      break;
    default:
      uint64_t v4 = sub_252D19B58();
LABEL_4:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for PlannerPromptData.Tool(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    type metadata accessor for PlannerPromptData.Tool.Definition(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v4 = sub_252D19C88();
        goto LABEL_5;
      case 3u:
        long long v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        a1[2] = a2[2];
        uint64_t v6 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_252D19B58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        break;
      default:
        uint64_t v4 = sub_252D19B58();
LABEL_5:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.Tool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA1B48);
}

uint64_t sub_252CA1B48()
{
  type metadata accessor for PlannerPromptData.Tool.Definition(0);
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.Tool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA1B9C);
}

uint64_t sub_252CA1B9C()
{
  type metadata accessor for PlannerPromptData.Tool.Definition(0);
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252CA1BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9D780(a1, a2, a3, type metadata accessor for PlannerPromptData.Tool.Definition);
}

uint64_t *initializeBufferWithCopyOfBuffer for PlannerPromptData.Tool.Definition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v7 = sub_252D19C88();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 3u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        uint64_t v10 = a2[5];
        a1[4] = a2[4];
        a1[5] = v10;
        uint64_t v11 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_252D19B58();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        break;
      default:
        uint64_t v16 = sub_252D19B58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PlannerPromptData.Tool.Definition(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      goto LABEL_4;
    case 2:
      uint64_t v3 = sub_252D19C88();
      goto LABEL_5;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
LABEL_4:
      uint64_t v3 = sub_252D19B58();
LABEL_5:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for PlannerPromptData.Tool.Definition(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = sub_252D19C88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    case 3u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      uint64_t v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_252D19B58();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
    default:
      uint64_t v13 = sub_252D19B58();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PlannerPromptData.Tool.Definition(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v5 = sub_252D19C88();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v6 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_252D19B58();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        break;
      default:
        uint64_t v4 = sub_252D19B58();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PlannerPromptData.Tool.Definition(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = sub_252D19C88();
      goto LABEL_4;
    case 3u:
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      a1[2] = a2[2];
      uint64_t v6 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_252D19B58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      break;
    default:
      uint64_t v4 = sub_252D19B58();
LABEL_4:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for PlannerPromptData.Tool.Definition(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_252BA6670();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v4 = sub_252D19C88();
        goto LABEL_5;
      case 3u:
        long long v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        a1[2] = a2[2];
        uint64_t v6 = *(int *)(type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_252D19B58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        break;
      default:
        uint64_t v4 = sub_252D19B58();
LABEL_5:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_252CA25EC()
{
  uint64_t result = sub_252D19B58();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_252D19C88();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PlannerPromptData.Tool.Definition.ToolDefinition()
{
  return sub_252CA287C();
}

uint64_t destroy for PlannerPromptData.Tool.Definition.ToolDefinition()
{
  return sub_252CA28E8();
}

uint64_t initializeWithCopy for PlannerPromptData.Tool.Definition.ToolDefinition()
{
  return sub_252CA295C();
}

uint64_t assignWithCopy for PlannerPromptData.Tool.Definition.ToolDefinition()
{
  return sub_252CA29C4();
}

uint64_t initializeWithTake for PlannerPromptData.Tool.Definition.ToolDefinition()
{
  return sub_252CA2A28();
}

uint64_t assignWithTake for PlannerPromptData.Tool.Definition.ToolDefinition()
{
  return sub_252CA2A90();
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.Tool.Definition.ToolDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA2790);
}

uint64_t sub_252CA2790()
{
  sub_252D19B58();
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.Tool.Definition.ToolDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA27E4);
}

uint64_t sub_252CA27E4()
{
  sub_252D19B58();
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252CA2824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9D780(a1, a2, a3, MEMORY[0x263F7FED0]);
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.Tool.Definition.ClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CB7F2C);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.Tool.Definition.ClientAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CB7F14);
}

uint64_t initializeBufferWithCopyOfBuffer for PlannerPromptData.Tool.Definition.AssistantSchema()
{
  return sub_252CA287C();
}

uint64_t sub_252CA287C()
{
  uint64_t v0 = sub_252CB934C();
  v1(v0);
  sub_252AEA304();
  uint64_t v2 = sub_252B4C32C();

  return v3(v2);
}

uint64_t destroy for PlannerPromptData.Tool.Definition.AssistantSchema()
{
  return sub_252CA28E8();
}

uint64_t sub_252CA28E8()
{
  uint64_t v1 = sub_252B4C0D0();
  v2(v1);
  sub_252AEA304();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);

  return v5(v0, v3);
}

uint64_t initializeWithCopy for PlannerPromptData.Tool.Definition.AssistantSchema()
{
  return sub_252CA295C();
}

uint64_t sub_252CA295C()
{
  uint64_t v1 = sub_252CB934C();
  v2(v1);
  sub_252AEA304();
  sub_252B4C1F4();
  v3();
  return v0;
}

uint64_t assignWithCopy for PlannerPromptData.Tool.Definition.AssistantSchema()
{
  return sub_252CA29C4();
}

uint64_t sub_252CA29C4()
{
  uint64_t v1 = sub_252CB934C();
  v2(v1);
  sub_252AEA304();
  uint64_t v3 = sub_252AF4538();
  v4(v3);
  return v0;
}

uint64_t initializeWithTake for PlannerPromptData.Tool.Definition.AssistantSchema()
{
  return sub_252CA2A28();
}

uint64_t sub_252CA2A28()
{
  uint64_t v1 = sub_252CB934C();
  v2(v1);
  sub_252AEA304();
  sub_252B4C1CC();
  v3();
  return v0;
}

uint64_t assignWithTake for PlannerPromptData.Tool.Definition.AssistantSchema()
{
  return sub_252CA2A90();
}

uint64_t sub_252CA2A90()
{
  uint64_t v1 = sub_252CB934C();
  v2(v1);
  sub_252AEA304();
  uint64_t v3 = sub_252AF4538();
  v4(v3);
  return v0;
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.Tool.Definition.AssistantSchema(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA2AF0);
}

uint64_t sub_252CA2AF0()
{
  sub_252D19C88();
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.Tool.Definition.AssistantSchema(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA2B44);
}

uint64_t sub_252CA2B44()
{
  sub_252D19C88();
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252CA2B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C9D780(a1, a2, a3, MEMORY[0x263F80C28]);
}

uint64_t *initializeBufferWithCopyOfBuffer for PlannerPromptData.Tool.Definition.UIControlTool(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_252D19B58();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for PlannerPromptData.Tool.Definition.UIControlTool(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_252D19B58();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for PlannerPromptData.Tool.Definition.UIControlTool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_252D19B58();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *assignWithCopy for PlannerPromptData.Tool.Definition.UIControlTool(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19B58();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for PlannerPromptData.Tool.Definition.UIControlTool(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_252D19B58();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for PlannerPromptData.Tool.Definition.UIControlTool(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_252D19B58();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerPromptData.Tool.Definition.UIControlTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA3014);
}

uint64_t sub_252CA3014()
{
  return sub_252CA302C();
}

uint64_t sub_252CA302C()
{
  sub_252B4C378();
  if (v4) {
    return sub_252B4C1B8(*(void *)(v0 + 8));
  }
  uint64_t v6 = v2;
  uint64_t v7 = v1;
  uint64_t v8 = v3(0);
  uint64_t v9 = v0 + *(int *)(v6 + 24);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, v7, v8);
}

uint64_t storeEnumTagSinglePayload for PlannerPromptData.Tool.Definition.UIControlTool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA30B8);
}

void sub_252CA30B8()
{
}

void sub_252CA30D0()
{
  sub_252B4C1A4();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    v2(0);
    sub_252B4C2D0();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, v5, v6, v7);
  }
}

uint64_t sub_252CA3144()
{
  uint64_t result = sub_252D19B58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO22PlannerReturnedRawPlanVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    int v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else {
    sub_252CBC254();
  }
  return sub_252B989F4(v2);
}

uint64_t sub_252CA321C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_252CB93F4(result, a2);
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      return sub_252CB93F4(result, a2);
    }
  }
  return result;
}

void type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool.Command()
{
}

uint64_t _s16IntelligenceFlow14MessagePayloadO35ExternalAgentRequestRewriteMetadataVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s16IntelligenceFlow14MessagePayloadO35ExternalAgentRequestRewriteMetadataVwCP_0(void *a1, void *a2)
{
  sub_252CBBAC0(a1, a2);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO35ExternalAgentRequestRewriteMetadataVwca_0(void *a1, void *a2)
{
  sub_252CB9320(a1, a2);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO35ExternalAgentRequestRewriteMetadataVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO35ExternalAgentRequestRewriteMetadataVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    int v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else {
    sub_252CBC254();
  }
  return sub_252B989F4(v2);
}

uint64_t sub_252CA33A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      return sub_252CBC63C(result);
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_252CB93F4(result, a2);
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      return sub_252CB93F4(result, a2);
    }
  }
  return result;
}

void type metadata accessor for ActionResolutionUpdate()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionExecutionOutcome(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = (char *)a2 + v10;
    type metadata accessor for StatementOutcome(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v23 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v23;
        uint64_t v24 = *((void *)v15 + 3);
        *((void *)v14 + 2) = *((void *)v15 + 2);
        *((void *)v14 + 3) = v24;
        uint64_t v25 = *((void *)v15 + 5);
        *((void *)v14 + 4) = *((void *)v15 + 4);
        *((void *)v14 + 5) = v25;
        *((void *)v14 + 6) = *((void *)v15 + 6);
        *((_WORD *)v14 + 28) = *((_WORD *)v15 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v26 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v26;
        *((void *)v14 + 2) = *((void *)v15 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v27 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v27;
        uint64_t v28 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v29 = &v14[v28];
        uint64_t v30 = &v15[v28];
        uint64_t v31 = sub_252D19BE8();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        break;
      case 4u:
        uint64_t v33 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v33;
        *((void *)v14 + 2) = *((void *)v15 + 2);
        v14[24] = v15[24];
        uint64_t v34 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v35 = v34[6];
        uint64_t v94 = &v14[v35];
        uint64_t v36 = &v15[v35];
        uint64_t v37 = sub_252D19BE8();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v94, v36, v37);
        uint64_t v39 = v34[7];
        uint64_t v40 = &v14[v39];
        uint64_t v41 = &v15[v39];
        uint64_t v42 = *((void *)v41 + 1);
        *(void *)uint64_t v40 = *(void *)v41;
        *((void *)v40 + 1) = v42;
        uint64_t v43 = v34[8];
        uint64_t v44 = &v14[v43];
        uint64_t v45 = &v15[v43];
        uint64_t v46 = *((void *)v45 + 1);
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v47 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v47;
        *((void *)v14 + 2) = *((void *)v15 + 2);
        v14[24] = v15[24];
        uint64_t v48 = *((void *)v15 + 5);
        *((void *)v14 + 4) = *((void *)v15 + 4);
        *((void *)v14 + 5) = v48;
        uint64_t v49 = *((void *)v15 + 6);
        uint64_t v50 = *((void *)v15 + 7);
        *((void *)v14 + 6) = v49;
        *((void *)v14 + 7) = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v51 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v51;
        uint64_t v52 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v53 = *(int *)(v52 + 20);
        uint64_t v95 = &v14[v53];
        uint64_t v54 = &v15[v53];
        uint64_t v55 = sub_252D19BE8();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v95, v54, v55);
        v14[*(int *)(v52 + 24)] = v15[*(int *)(v52 + 24)];
        break;
      case 7u:
        uint64_t v57 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v57;
        uint64_t v58 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v59 = &v14[v58];
        uint64_t v60 = &v15[v58];
        uint64_t v61 = sub_252D19BE8();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        break;
      case 8u:
        uint64_t v63 = *(void *)v15;
        uint64_t v64 = *((void *)v15 + 1);
        char v65 = v15[16];
        sub_252ACE7BC(v63, v64, v65);
        *(void *)uint64_t v14 = v63;
        *((void *)v14 + 1) = v64;
        v14[16] = v65;
        break;
      case 9u:
        *(void *)uint64_t v14 = *(void *)v15;
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        unint64_t v66 = *((void *)v15 + 1);
        if (v66 >= 0x10)
        {
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v66;
          uint64_t v68 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v68;
          *((void *)v14 + 4) = *((void *)v15 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v67 = *((_OWORD *)v15 + 1);
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          *((_OWORD *)v14 + 1) = v67;
          *((void *)v14 + 4) = *((void *)v15 + 4);
        }
        break;
      default:
        uint64_t v16 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        uint64_t v93 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v17 = v93[5];
        uint64_t v18 = &v14[v17];
        uint64_t v19 = &v15[v17];
        uint64_t v20 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          v8((uint64_t *)v18, (uint64_t *)v19, v7);
          uint64_t v69 = *(int *)(v20 + 20);
          uint64_t v70 = &v18[v69];
          uint64_t v71 = &v19[v69];
          uint64_t v72 = *((void *)v71 + 1);
          *(void *)uint64_t v70 = *(void *)v71;
          *((void *)v70 + 1) = v72;
          uint64_t v73 = *(int *)(v20 + 24);
          uint64_t v74 = &v18[v73];
          uint64_t v75 = &v19[v73];
          uint64_t v76 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v76;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v18, 0, 1, v20);
        }
        v14[v93[6]] = v15[v93[6]];
        uint64_t v77 = v93[7];
        uint64_t v78 = &v14[v77];
        uint64_t v79 = &v15[v77];
        uint64_t v80 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          uint64_t v82 = *((void *)v79 + 1);
          *(void *)uint64_t v78 = *(void *)v79;
          *((void *)v78 + 1) = v82;
          uint64_t v83 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v84 = *(int *)(v83 + 20);
          uint64_t v91 = &v79[v84];
          uint64_t v92 = &v78[v84];
          swift_bridgeObjectRetain();
          uint64_t v85 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v92, v91, v85);
          *(void *)&v78[*(int *)(v83 + 24)] = *(void *)&v79[*(int *)(v83 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v80);
        }
        v14[v93[8]] = v15[v93[8]];
        uint64_t v86 = v93[9];
        uint64_t v87 = &v14[v86];
        uint64_t v88 = &v15[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)uint64_t v87 = *(void *)v88;
        *((void *)v87 + 1) = v89;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t destroy for ActionExecutionOutcome(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19588();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  type metadata accessor for StatementOutcome(0);
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v8 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
      uint64_t v9 = type metadata accessor for ActionSuccess(0);
      uint64_t v10 = v6 + *(int *)(v9 + 20);
      uint64_t v11 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, v11))
      {
        v5(v10, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v12 = v6 + *(int *)(v9 + 28);
      uint64_t v13 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, v13))
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v12
            + *(int *)(type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0) + 20);
        uint64_t v15 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      }
      goto LABEL_20;
    case 1:
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 2:
      goto LABEL_19;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v17 = v6 + *(int *)(type metadata accessor for ParameterConfirmation(0) + 24);
      uint64_t v18 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for ParameterNotAllowed(0);
      goto LABEL_12;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_12:
      uint64_t v19 = v6 + *(int *)(v16 + 20);
      uint64_t v20 = sub_252D19BE8();
      uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
      return v21(v19, v20);
    case 8:
      uint64_t v22 = *(void *)v6;
      uint64_t v23 = *(void *)(v6 + 8);
      char v24 = *(unsigned char *)(v6 + 16);
      return sub_252AD16E4(v22, v23, v24);
    case 9:
      goto LABEL_20;
    case 10:
      unint64_t result = *(void *)(v6 + 8);
      if (result < 0x10) {
        return result;
      }
LABEL_19:
      swift_bridgeObjectRelease();
LABEL_20:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

uint64_t initializeWithCopy for ActionExecutionOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  type metadata accessor for StatementOutcome(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v21;
      uint64_t v22 = *(void *)(v14 + 24);
      *(void *)(v13 + 16) = *(void *)(v14 + 16);
      *(void *)(v13 + 24) = v22;
      uint64_t v23 = *(void *)(v14 + 40);
      *(void *)(v13 + 32) = *(void *)(v14 + 32);
      *(void *)(v13 + 40) = v23;
      *(void *)(v13 + 48) = *(void *)(v14 + 48);
      *(_WORD *)(v13 + 56) = *(_WORD *)(v14 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 2u:
      uint64_t v24 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v24;
      *(void *)(v13 + 16) = *(void *)(v14 + 16);
      goto LABEL_9;
    case 3u:
      uint64_t v25 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v25;
      uint64_t v26 = type metadata accessor for ParameterNeedsValue(0);
      goto LABEL_12;
    case 4u:
      uint64_t v27 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v27;
      *(void *)(v13 + 16) = *(void *)(v14 + 16);
      *(unsigned char *)(v13 + 24) = *(unsigned char *)(v14 + 24);
      uint64_t v28 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v29 = v28[6];
      uint64_t v85 = v14 + v29;
      __dsta = (void *)(v13 + v29);
      uint64_t v30 = sub_252D19BE8();
      uint64_t v31 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      v31(__dsta, v85, v30);
      uint64_t v32 = v28[7];
      uint64_t v33 = (void *)(v13 + v32);
      uint64_t v34 = (void *)(v14 + v32);
      uint64_t v35 = v34[1];
      void *v33 = *v34;
      v33[1] = v35;
      uint64_t v36 = v28[8];
      uint64_t v37 = (void *)(v13 + v36);
      uint64_t v38 = (void *)(v14 + v36);
      uint64_t v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
      goto LABEL_9;
    case 5u:
      uint64_t v40 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v40;
      *(void *)(v13 + 16) = *(void *)(v14 + 16);
      *(unsigned char *)(v13 + 24) = *(unsigned char *)(v14 + 24);
      uint64_t v41 = *(void *)(v14 + 40);
      *(void *)(v13 + 32) = *(void *)(v14 + 32);
      *(void *)(v13 + 40) = v41;
      uint64_t v42 = *(void *)(v14 + 48);
      uint64_t v43 = *(void *)(v14 + 56);
      *(void *)(v13 + 48) = v42;
      *(void *)(v13 + 56) = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_9:
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 6u:
      uint64_t v44 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v44;
      uint64_t v45 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v46 = *(int *)(v45 + 20);
      uint64_t v86 = v14 + v46;
      __dstb = (void *)(v13 + v46);
      uint64_t v47 = sub_252D19BE8();
      uint64_t v48 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      v48(__dstb, v86, v47);
      *(unsigned char *)(v13 + *(int *)(v45 + 24)) = *(unsigned char *)(v14 + *(int *)(v45 + 24));
      goto LABEL_24;
    case 7u:
      uint64_t v49 = *(void *)(v14 + 8);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v49;
      uint64_t v26 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_12:
      uint64_t v50 = *(int *)(v26 + 20);
      uint64_t v51 = v13 + v50;
      uint64_t v52 = v14 + v50;
      uint64_t v53 = sub_252D19BE8();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      v54(v51, v52, v53);
      goto LABEL_24;
    case 8u:
      uint64_t v55 = *(void *)v14;
      uint64_t v56 = *(void *)(v14 + 8);
      char v57 = *(unsigned char *)(v14 + 16);
      sub_252ACE7BC(v55, v56, v57);
      *(void *)uint64_t v13 = v55;
      *(void *)(v13 + 8) = v56;
      *(unsigned char *)(v13 + 16) = v57;
      goto LABEL_24;
    case 9u:
      *(void *)uint64_t v13 = *(void *)v14;
      goto LABEL_23;
    case 0xAu:
      unint64_t v58 = *(void *)(v14 + 8);
      if (v58 >= 0x10)
      {
        *(void *)uint64_t v13 = *(void *)v14;
        *(void *)(v13 + 8) = v58;
        uint64_t v60 = *(void *)(v14 + 24);
        *(void *)(v13 + 16) = *(void *)(v14 + 16);
        *(void *)(v13 + 24) = v60;
        *(void *)(v13 + 32) = *(void *)(v14 + 32);
        swift_bridgeObjectRetain();
LABEL_23:
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v59 = *(_OWORD *)(v14 + 16);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *(_OWORD *)(v13 + 16) = v59;
        *(void *)(v13 + 32) = *(void *)(v14 + 32);
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      uint64_t v15 = sub_252D19BE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = type metadata accessor for ActionSuccess(0);
      uint64_t v17 = *(int *)(v16 + 20);
      uint64_t v84 = (int *)v16;
      __dst = (char *)(v13 + v17);
      uint64_t v18 = (char *)(v14 + v17);
      uint64_t v19 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_252AC3A24(&qword_269C41A68);
        memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)v18, v6);
        uint64_t v61 = *(int *)(v19 + 20);
        uint64_t v62 = &__dst[v61];
        uint64_t v63 = &v18[v61];
        uint64_t v64 = *((void *)v63 + 1);
        *(void *)uint64_t v62 = *(void *)v63;
        *((void *)v62 + 1) = v64;
        uint64_t v65 = *(int *)(v19 + 24);
        unint64_t v66 = &__dst[v65];
        long long v67 = &v18[v65];
        uint64_t v68 = *((void *)v67 + 1);
        *(void *)unint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = v68;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v19);
      }
      *(unsigned char *)(v13 + v84[6]) = *(unsigned char *)(v14 + v84[6]);
      uint64_t v69 = v84[7];
      uint64_t v70 = (void *)(v13 + v69);
      uint64_t v71 = (void *)(v14 + v69);
      uint64_t v72 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v71, 1, v72))
      {
        uint64_t v73 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        uint64_t v74 = v71[1];
        *uint64_t v70 = *v71;
        v70[1] = v74;
        __dstc = (int *)type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v75 = __dstc[5];
        uint64_t v82 = (char *)v71 + v75;
        uint64_t v83 = (char *)v70 + v75;
        swift_bridgeObjectRetain();
        uint64_t v76 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v83, v82, v76);
        *(void *)((char *)v70 + __dstc[6]) = *(void *)((char *)v71 + __dstc[6]);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v70, 0, 1, v72);
      }
      *(unsigned char *)(v13 + v84[8]) = *(unsigned char *)(v14 + v84[8]);
      uint64_t v77 = v84[9];
      uint64_t v78 = (void *)(v13 + v77);
      uint64_t v79 = (void *)(v14 + v77);
      uint64_t v80 = v79[1];
      *uint64_t v78 = *v79;
      v78[1] = v80;
      goto LABEL_23;
  }
}

uint64_t assignWithCopy for ActionExecutionOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (long long *)(a2 + v11);
    sub_252BA6670();
    type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        *(void *)(v12 + 16) = *((void *)v13 + 2);
        *(void *)(v12 + 24) = *((void *)v13 + 3);
        *(void *)(v12 + 32) = *((void *)v13 + 4);
        *(void *)(v12 + 40) = *((void *)v13 + 5);
        *(void *)(v12 + 48) = *((void *)v13 + 6);
        *(unsigned char *)(v12 + 56) = *((unsigned char *)v13 + 56);
        *(unsigned char *)(v12 + 57) = *((unsigned char *)v13 + 57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 2u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        *(void *)(v12 + 16) = *((void *)v13 + 2);
        goto LABEL_10;
      case 3u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        uint64_t v20 = type metadata accessor for ParameterNeedsValue(0);
        goto LABEL_13;
      case 4u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        uint64_t v21 = *((void *)v13 + 2);
        *(unsigned char *)(v12 + 24) = *((unsigned char *)v13 + 24);
        *(void *)(v12 + 16) = v21;
        uint64_t v22 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v23 = v22[6];
        uint64_t v67 = (uint64_t)v13 + v23;
        uint64_t v71 = v12 + v23;
        uint64_t v24 = sub_252D19BE8();
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v71, v67, v24);
        uint64_t v26 = v22[7];
        uint64_t v27 = (void *)(v12 + v26);
        uint64_t v28 = (void *)((char *)v13 + v26);
        *uint64_t v27 = *v28;
        v27[1] = v28[1];
        uint64_t v29 = v22[8];
        uint64_t v30 = (void *)(v12 + v29);
        uint64_t v31 = (void *)((char *)v13 + v29);
        void *v30 = *v31;
        v30[1] = v31[1];
        goto LABEL_10;
      case 5u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        uint64_t v32 = *((void *)v13 + 2);
        *(unsigned char *)(v12 + 24) = *((unsigned char *)v13 + 24);
        *(void *)(v12 + 16) = v32;
        *(void *)(v12 + 32) = *((void *)v13 + 4);
        *(void *)(v12 + 40) = *((void *)v13 + 5);
        *(void *)(v12 + 48) = *((void *)v13 + 6);
        *(void *)(v12 + 56) = *((void *)v13 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_10:
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 6u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        uint64_t v33 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v68 = (uint64_t)v13 + v34;
        uint64_t v72 = v12 + v34;
        uint64_t v35 = sub_252D19BE8();
        uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v72, v68, v35);
        *(unsigned char *)(v12 + *(int *)(v33 + 24)) = *((unsigned char *)v13 + *(int *)(v33 + 24));
        goto LABEL_25;
      case 7u:
        *(void *)uint64_t v12 = *(void *)v13;
        *(void *)(v12 + 8) = *((void *)v13 + 1);
        uint64_t v20 = type metadata accessor for ParameterCandidatesNotFound(0);
LABEL_13:
        uint64_t v37 = *(int *)(v20 + 20);
        uint64_t v38 = v12 + v37;
        uint64_t v39 = (uint64_t)v13 + v37;
        uint64_t v40 = sub_252D19BE8();
        uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        v41(v38, v39, v40);
        goto LABEL_25;
      case 8u:
        uint64_t v42 = *(void *)v13;
        uint64_t v43 = *((void *)v13 + 1);
        char v44 = *((unsigned char *)v13 + 16);
        sub_252ACE7BC(v42, v43, v44);
        *(void *)uint64_t v12 = v42;
        *(void *)(v12 + 8) = v43;
        *(unsigned char *)(v12 + 16) = v44;
        goto LABEL_25;
      case 9u:
        *(void *)uint64_t v12 = *(void *)v13;
        goto LABEL_24;
      case 0xAu:
        if (*((void *)v13 + 1) >= 0x10uLL)
        {
          *(void *)uint64_t v12 = *(void *)v13;
          *(void *)(v12 + 8) = *((void *)v13 + 1);
          *(void *)(v12 + 16) = *((void *)v13 + 2);
          *(void *)(v12 + 24) = *((void *)v13 + 3);
          *(void *)(v12 + 32) = *((void *)v13 + 4);
          swift_bridgeObjectRetain();
LABEL_24:
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v45 = *v13;
          long long v46 = v13[1];
          *(void *)(v12 + 32) = *((void *)v13 + 4);
          *(_OWORD *)uint64_t v12 = v45;
          *(_OWORD *)(v12 + 16) = v46;
        }
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v14 = sub_252D19BE8();
        (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        uint64_t v70 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v15 = v70[5];
        uint64_t v16 = (char *)(v12 + v15);
        uint64_t v17 = (char *)v13 + v15;
        uint64_t v18 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
          uint64_t v47 = *(int *)(v18 + 20);
          uint64_t v48 = &v16[v47];
          uint64_t v49 = &v17[v47];
          *(void *)uint64_t v48 = *(void *)v49;
          *((void *)v48 + 1) = *((void *)v49 + 1);
          uint64_t v50 = *(int *)(v18 + 24);
          uint64_t v51 = &v16[v50];
          uint64_t v52 = &v17[v50];
          *(void *)uint64_t v51 = *(void *)v52;
          *((void *)v51 + 1) = *((void *)v52 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
        }
        *(unsigned char *)(v12 + v70[6]) = *((unsigned char *)v13 + v70[6]);
        uint64_t v53 = v70[7];
        uint64_t v54 = (void *)(v12 + v53);
        uint64_t v55 = (void *)((char *)v13 + v53);
        uint64_t v56 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
        {
          uint64_t v57 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          void *v54 = *v55;
          v54[1] = v55[1];
          uint64_t v58 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v59 = *(int *)(v58 + 20);
          unint64_t v66 = (char *)v54 + v59;
          uint64_t v69 = v58;
          uint64_t v65 = (char *)v55 + v59;
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v66, v65, v60);
          *(void *)((char *)v54 + *(int *)(v69 + 24)) = *(void *)((char *)v55 + *(int *)(v69 + 24));
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
        }
        *(unsigned char *)(v12 + v70[8]) = *((unsigned char *)v13 + v70[8]);
        uint64_t v61 = v70[9];
        uint64_t v62 = (void *)(v12 + v61);
        uint64_t v63 = (void *)((char *)v13 + v61);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        goto LABEL_24;
    }
  }
  return a1;
}

uint64_t initializeWithTake for ActionExecutionOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for StatementOutcome(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_252D19BE8();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      uint64_t v47 = (int *)type metadata accessor for ActionSuccess(0);
      uint64_t v13 = v47[5];
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = type metadata accessor for ActionSuccess.UndoContext(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_252AC3A24(&qword_269C41A68);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v14, (uint64_t)v15, v6);
        *(_OWORD *)&v14[*(int *)(v16 + 20)] = *(_OWORD *)&v15[*(int *)(v16 + 20)];
        *(_OWORD *)&v14[*(int *)(v16 + 24)] = *(_OWORD *)&v15[*(int *)(v16 + 24)];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v9[v47[6]] = v10[v47[6]];
      uint64_t v36 = v47[7];
      uint64_t v37 = &v9[v36];
      uint64_t v38 = &v10[v36];
      uint64_t v39 = type metadata accessor for ActionSuccess.FollowUpAction(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_252AC3A24(&qword_269C41A78);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        *uint64_t v37 = *v38;
        uint64_t v41 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
        uint64_t v42 = *(int *)(v41 + 20);
        uint64_t v43 = (char *)v37 + v42;
        long long v46 = (char *)v38 + v42;
        uint64_t v44 = sub_252AC3A24(&qword_269C41A70);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v43, v46, v44);
        *(void *)((char *)v37 + *(int *)(v41 + 24)) = *(void *)((char *)v38 + *(int *)(v41 + 24));
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v9[v47[8]] = v10[v47[8]];
      *(_OWORD *)&v9[v47[9]] = *(_OWORD *)&v10[v47[9]];
      goto LABEL_14;
    case 3u:
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v18 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
      uint64_t v19 = &v9[v18];
      uint64_t v20 = &v10[v18];
      uint64_t v21 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      goto LABEL_14;
    case 4u:
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((void *)v9 + 2) = *((void *)v10 + 2);
      v9[24] = v10[24];
      uint64_t v22 = (int *)type metadata accessor for ParameterConfirmation(0);
      uint64_t v23 = v22[6];
      uint64_t v24 = &v9[v23];
      uint64_t v25 = &v10[v23];
      uint64_t v26 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)&v9[v22[7]] = *(_OWORD *)&v10[v22[7]];
      *(_OWORD *)&v9[v22[8]] = *(_OWORD *)&v10[v22[8]];
      goto LABEL_14;
    case 6u:
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v27 = type metadata accessor for ParameterNotAllowed(0);
      uint64_t v28 = *(int *)(v27 + 20);
      uint64_t v29 = &v9[v28];
      uint64_t v30 = &v10[v28];
      uint64_t v31 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      v9[*(int *)(v27 + 24)] = v10[*(int *)(v27 + 24)];
      goto LABEL_14;
    case 7u:
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v32 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
      uint64_t v33 = &v9[v32];
      uint64_t v34 = &v10[v32];
      uint64_t v35 = sub_252D19BE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithTake for ActionExecutionOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (unsigned char *)(a1 + v13);
    uint64_t v15 = (unsigned char *)(a2 + v13);
    sub_252BA6670();
    uint64_t v16 = type metadata accessor for StatementOutcome(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v17 = sub_252D19BE8();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
        uint64_t v18 = (int *)type metadata accessor for ActionSuccess(0);
        uint64_t v19 = v18[5];
        uint64_t v20 = &v14[v19];
        uint64_t v21 = &v15[v19];
        uint64_t v22 = type metadata accessor for ActionSuccess.UndoContext(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_252AC3A24(&qword_269C41A68);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
          *(_OWORD *)&v20[*(int *)(v22 + 20)] = *(_OWORD *)&v21[*(int *)(v22 + 20)];
          *(_OWORD *)&v20[*(int *)(v22 + 24)] = *(_OWORD *)&v21[*(int *)(v22 + 24)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v20, 0, 1, v22);
        }
        v14[v18[6]] = v15[v18[6]];
        uint64_t v42 = v18[7];
        uint64_t v43 = &v14[v42];
        uint64_t v44 = &v15[v42];
        uint64_t v45 = type metadata accessor for ActionSuccess.FollowUpAction(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, v45))
        {
          uint64_t v46 = sub_252AC3A24(&qword_269C41A78);
          memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *uint64_t v43 = *v44;
          uint64_t v47 = type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
          uint64_t v48 = *(int *)(v47 + 20);
          uint64_t v49 = (char *)v43 + v48;
          uint64_t v52 = (char *)v44 + v48;
          uint64_t v50 = sub_252AC3A24(&qword_269C41A70);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v49, v52, v50);
          *(void *)((char *)v43 + *(int *)(v47 + 24)) = *(void *)((char *)v44 + *(int *)(v47 + 24));
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, v45);
        }
        v14[v18[8]] = v15[v18[8]];
        *(_OWORD *)&v14[v18[9]] = *(_OWORD *)&v15[v18[9]];
        goto LABEL_15;
      case 3u:
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        uint64_t v24 = *(int *)(type metadata accessor for ParameterNeedsValue(0) + 20);
        uint64_t v25 = &v14[v24];
        uint64_t v26 = &v15[v24];
        uint64_t v27 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_15;
      case 4u:
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((void *)v14 + 2) = *((void *)v15 + 2);
        v14[24] = v15[24];
        uint64_t v28 = (int *)type metadata accessor for ParameterConfirmation(0);
        uint64_t v29 = v28[6];
        uint64_t v30 = &v14[v29];
        uint64_t v31 = &v15[v29];
        uint64_t v32 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        *(_OWORD *)&v14[v28[7]] = *(_OWORD *)&v15[v28[7]];
        *(_OWORD *)&v14[v28[8]] = *(_OWORD *)&v15[v28[8]];
        goto LABEL_15;
      case 6u:
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        uint64_t v33 = type metadata accessor for ParameterNotAllowed(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = &v14[v34];
        uint64_t v36 = &v15[v34];
        uint64_t v37 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        v14[*(int *)(v33 + 24)] = v15[*(int *)(v33 + 24)];
        goto LABEL_15;
      case 7u:
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        uint64_t v38 = *(int *)(type metadata accessor for ParameterCandidatesNotFound(0) + 20);
        uint64_t v39 = &v14[v38];
        uint64_t v40 = &v15[v38];
        uint64_t v41 = sub_252D19BE8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutionOutcome(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CA56A0);
}

uint64_t sub_252CA56A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7F23C(a1, a2, a3, type metadata accessor for StatementOutcome);
}

uint64_t storeEnumTagSinglePayload for ActionExecutionOutcome(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CA56CC);
}

void sub_252CA56CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

uint64_t sub_252CA56E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252C7F3C4(a1, a2, a3, type metadata accessor for StatementOutcome);
}

ValueMetadata *type metadata accessor for ActionExecutionOutcome.CodingKeys()
{
  return &type metadata for ActionExecutionOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionResolutionUpdate.CodingKeys()
{
  return &type metadata for ActionResolutionUpdate.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.CodingKeys()
{
  return &type metadata for PlannerPromptData.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.ToolCodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.ToolCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.ClientActionCodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.ClientActionCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchemaCodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.AssistantSchemaCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.UiControlCodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.UiControlCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.UIControlTool.Command.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.UIControlTool.Command.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.AssistantSchema.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.AssistantSchema.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.ClientAction.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.ClientAction.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.Tool.Definition.ToolDefinition.CodingKeys()
{
  return &type metadata for PlannerPromptData.Tool.Definition.ToolDefinition.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.CodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.CodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.CodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.InFocusAppCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.InFocusAppCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenPersonCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenPersonCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentPostalAddressCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentPostalAddressCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentAppEntityCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentAppEntityCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentEmailAddressCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentEmailAddressCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentPhoneNumberCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentPhoneNumberCodingKeys;
}

ValueMetadata *type metadata accessor for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentUriLinkCodingKeys()
{
  return &type metadata for PlannerPromptData.OnScreenContextValue.ContextType.OnScreenContentUriLinkCodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.CodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.CodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.Parameter.CodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.Parameter.CodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.CodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.Parameter.Value.CodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.StringCodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.Parameter.Value.StringCodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.ArrayCodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.Parameter.Value.ArrayCodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.ArrayValue.CodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.Parameter.Value.ArrayValue.CodingKeys;
}

ValueMetadata *type metadata accessor for AppIntentsInvocationPreview.Parameter.Value.StringValue.CodingKeys()
{
  return &type metadata for AppIntentsInvocationPreview.Parameter.Value.StringValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolDisambiguation.CodingKeys()
{
  return &type metadata for ToolDisambiguation.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterCandidatesNotFound.CodingKeys()
{
  return &type metadata for ParameterCandidatesNotFound.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterNotAllowed.CodingKeys()
{
  return &type metadata for ParameterNotAllowed.CodingKeys;
}

ValueMetadata *type metadata accessor for ValueDisambiguation.CodingKeys()
{
  return &type metadata for ValueDisambiguation.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterDisambiguation.CodingKeys()
{
  return &type metadata for ParameterDisambiguation.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterConfirmation.CodingKeys()
{
  return &type metadata for ParameterConfirmation.CodingKeys;
}

ValueMetadata *type metadata accessor for ParameterNeedsValue.CodingKeys()
{
  return &type metadata for ParameterNeedsValue.CodingKeys;
}

ValueMetadata *type metadata accessor for PromptSelection.CodingKeys()
{
  return &type metadata for PromptSelection.CodingKeys;
}

ValueMetadata *type metadata accessor for PromptSelection.ConfirmedCodingKeys()
{
  return &type metadata for PromptSelection.ConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for PromptSelection.SelectedInDisambiguationCodingKeys()
{
  return &type metadata for PromptSelection.SelectedInDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for PromptSelection.DeniedCodingKeys()
{
  return &type metadata for PromptSelection.DeniedCodingKeys;
}

ValueMetadata *type metadata accessor for ParameterValue.CodingKeys()
{
  return &type metadata for ParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.CodingKeys()
{
  return &type metadata for ActionConfirmation.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.CodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablementCodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablementCodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.CodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablement.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.Source.CodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablement.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.Source.MediaQACodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablement.Source.MediaQACodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.Source.KnowledgeFallbackCodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablement.Source.KnowledgeFallbackCodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.Source.ComposeViaSiriCodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablement.Source.ComposeViaSiriCodingKeys;
}

ValueMetadata *type metadata accessor for ActionConfirmation.SystemStyle.MontaraEnablement.Source.TextAssistantCodingKeys()
{
  return &type metadata for ActionConfirmation.SystemStyle.MontaraEnablement.Source.TextAssistantCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.CodingKeys()
{
  return &type metadata for ActionFailure.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.DeveloperDefinedError.CodingKeys()
{
  return &type metadata for ActionFailure.DeveloperDefinedError.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ActionFailure.Failure.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v5 = v6 - 17;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActionFailure.Failure.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA5BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.CodingKeys()
{
  return &type metadata for ActionFailure.Failure.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.PreflightCheckFailureCodingKeys()
{
  return &type metadata for ActionFailure.Failure.PreflightCheckFailureCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.PreciseLocationDisabledCodingKeys()
{
  return &type metadata for ActionFailure.Failure.PreciseLocationDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.LocationDisabledCodingKeys()
{
  return &type metadata for ActionFailure.Failure.LocationDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.WifiDisabledCodingKeys()
{
  return &type metadata for ActionFailure.Failure.WifiDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.BluetoothDisabledCodingKeys()
{
  return &type metadata for ActionFailure.Failure.BluetoothDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.NetworkFailureCodingKeys()
{
  return &type metadata for ActionFailure.Failure.NetworkFailureCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.PartialFailureCodingKeys()
{
  return &type metadata for ActionFailure.Failure.PartialFailureCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.UnsupportedOnDeviceCodingKeys()
{
  return &type metadata for ActionFailure.Failure.UnsupportedOnDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.FeatureCurrentlyRestrictedCodingKeys()
{
  return &type metadata for ActionFailure.Failure.FeatureCurrentlyRestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.EntityNotFoundCodingKeys()
{
  return &type metadata for ActionFailure.Failure.EntityNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.ActionNotAllowedCodingKeys()
{
  return &type metadata for ActionFailure.Failure.ActionNotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.ValueDisambiguationRejectedCodingKeys()
{
  return &type metadata for ActionFailure.Failure.ValueDisambiguationRejectedCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.NoMatchingToolCodingKeys()
{
  return &type metadata for ActionFailure.Failure.NoMatchingToolCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.UnableToUndoCodingKeys()
{
  return &type metadata for ActionFailure.Failure.UnableToUndoCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.ActionCanceledCodingKeys()
{
  return &type metadata for ActionFailure.Failure.ActionCanceledCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.DeveloperDefinedErrorCodingKeys()
{
  return &type metadata for ActionFailure.Failure.DeveloperDefinedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ActionFailure.Failure.UnableToCancelCodingKeys()
{
  return &type metadata for ActionFailure.Failure.UnableToCancelCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.CodingKeys()
{
  return &type metadata for PermissionRequirement.CodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.SiriPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.SiriPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.ShortcutsPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.ShortcutsPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.PreciseLocationPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.PreciseLocationPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.LocationPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.LocationPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.WifiPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.WifiPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.BluetoothPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.BluetoothPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.PhotosPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.PhotosPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for PermissionRequirement.ContactsPermissionRequiredCodingKeys()
{
  return &type metadata for PermissionRequirement.ContactsPermissionRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for AppRequirement.CodingKeys()
{
  return &type metadata for AppRequirement.CodingKeys;
}

ValueMetadata *type metadata accessor for AppRequirement.SignInRequiredCodingKeys()
{
  return &type metadata for AppRequirement.SignInRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for AppRequirement.AccountSetupRequiredCodingKeys()
{
  return &type metadata for AppRequirement.AccountSetupRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for AppRequirement.UserConfirmationRequiredCodingKeys()
{
  return &type metadata for AppRequirement.UserConfirmationRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.CodingKeys()
{
  return &type metadata for SystemRequirement.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.DeviceUnlockRequiredCodingKeys()
{
  return &type metadata for SystemRequirement.DeviceUnlockRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.AuthenticationRequiredCodingKeys()
{
  return &type metadata for SystemRequirement.AuthenticationRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.AppLaunchRequiredCodingKeys()
{
  return &type metadata for SystemRequirement.AppLaunchRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.CarPlayIncompatibleCodingKeys()
{
  return &type metadata for SystemRequirement.CarPlayIncompatibleCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.CarBluetoothIncompatibleCodingKeys()
{
  return &type metadata for SystemRequirement.CarBluetoothIncompatibleCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.ProtectedAppApprovalRequiredCodingKeys()
{
  return &type metadata for SystemRequirement.ProtectedAppApprovalRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.UserAuthenticationRequiredCodingKeys()
{
  return &type metadata for SystemRequirement.UserAuthenticationRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.AuthenticationRequest.CodingKeys()
{
  return &type metadata for SystemRequirement.AuthenticationRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.AuthenticationRequest.AuthenticationLevel.CodingKeys()
{
  return &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.AuthenticationRequest.AuthenticationLevel.AlternativeAuthenticationPermittedCodingKeys()
{
  return &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel.AlternativeAuthenticationPermittedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.AuthenticationRequest.AuthenticationLevel.OriginDeviceAuthenticationRequiredCodingKeys()
{
  return &type metadata for SystemRequirement.AuthenticationRequest.AuthenticationLevel.OriginDeviceAuthenticationRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for SystemRequirement.ProtectedAppRequest.CodingKeys()
{
  return &type metadata for SystemRequirement.ProtectedAppRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionRequirement.CodingKeys()
{
  return &type metadata for ActionRequirement.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionRequirement.SystemRequirementCodingKeys()
{
  return &type metadata for ActionRequirement.SystemRequirementCodingKeys;
}

ValueMetadata *type metadata accessor for ActionRequirement.AppRequirementCodingKeys()
{
  return &type metadata for ActionRequirement.AppRequirementCodingKeys;
}

ValueMetadata *type metadata accessor for ActionRequirement.PermissionsRequirementCodingKeys()
{
  return &type metadata for ActionRequirement.PermissionsRequirementCodingKeys;
}

ValueMetadata *type metadata accessor for ActionRequirement.UnsupportedCodingKeys()
{
  return &type metadata for ActionRequirement.UnsupportedCodingKeys;
}

ValueMetadata *type metadata accessor for ActionSuccess.CodingKeys()
{
  return &type metadata for ActionSuccess.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionSuccess.FollowUpAction.CodingKeys()
{
  return &type metadata for ActionSuccess.FollowUpAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.CodingKeys()
{
  return &type metadata for ActionSuccess.FollowUpAction.ExecutableAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkActionCodingKeys()
{
  return &type metadata for ActionSuccess.FollowUpAction.ExecutableAction.LinkActionCodingKeys;
}

ValueMetadata *type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction.CodingKeys()
{
  return &type metadata for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionSuccess.UndoContext.CodingKeys()
{
  return &type metadata for ActionSuccess.UndoContext.CodingKeys;
}

ValueMetadata *type metadata accessor for StatementID.CodingKeys()
{
  return &type metadata for StatementID.CodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.CodingKeys()
{
  return &type metadata for StatementOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.SuccessCodingKeys()
{
  return &type metadata for StatementOutcome.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ActionConfirmationCodingKeys()
{
  return &type metadata for StatementOutcome.ActionConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ToolDisambiguationCodingKeys()
{
  return &type metadata for StatementOutcome.ToolDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ParameterNeedsValueCodingKeys()
{
  return &type metadata for StatementOutcome.ParameterNeedsValueCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ParameterConfirmationCodingKeys()
{
  return &type metadata for StatementOutcome.ParameterConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ParameterDisambiguationCodingKeys()
{
  return &type metadata for StatementOutcome.ParameterDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ParameterNotAllowedCodingKeys()
{
  return &type metadata for StatementOutcome.ParameterNotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ParameterCandidatesNotFoundCodingKeys()
{
  return &type metadata for StatementOutcome.ParameterCandidatesNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ActionRequirementCodingKeys()
{
  return &type metadata for StatementOutcome.ActionRequirementCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.ValueDisambiguationCodingKeys()
{
  return &type metadata for StatementOutcome.ValueDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for StatementOutcome.FailureCodingKeys()
{
  return &type metadata for StatementOutcome.FailureCodingKeys;
}

uint64_t _s16IntelligenceFlow16StatementOutcomeO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 11);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 11);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 11);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow16StatementOutcomeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA6160);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 10);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionOutcome.CodingKeys()
{
  return &type metadata for ActionOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.SuccessCodingKeys()
{
  return &type metadata for ActionOutcome.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ActionConfirmationCodingKeys()
{
  return &type metadata for ActionOutcome.ActionConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ToolDisambiguationCodingKeys()
{
  return &type metadata for ActionOutcome.ToolDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ParameterNeedsValueCodingKeys()
{
  return &type metadata for ActionOutcome.ParameterNeedsValueCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ParameterConfirmationCodingKeys()
{
  return &type metadata for ActionOutcome.ParameterConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ParameterDisambiguationCodingKeys()
{
  return &type metadata for ActionOutcome.ParameterDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ParameterNotAllowedCodingKeys()
{
  return &type metadata for ActionOutcome.ParameterNotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ParameterCandidatesNotFoundCodingKeys()
{
  return &type metadata for ActionOutcome.ParameterCandidatesNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ActionRequirementCodingKeys()
{
  return &type metadata for ActionOutcome.ActionRequirementCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.ValueDisambiguationCodingKeys()
{
  return &type metadata for ActionOutcome.ValueDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for ActionOutcome.FailureCodingKeys()
{
  return &type metadata for ActionOutcome.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for InterpretedStatementResult.CodingKeys()
{
  return &type metadata for InterpretedStatementResult.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemResponse.CodingKeys()
{
  return &type metadata for SystemResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ActionResponse.CodingKeys()
{
  return &type metadata for ActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.CodingKeys()
{
  return &type metadata for SystemPromptResolution.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.ActionCancellation.CodingKeys()
{
  return &type metadata for SystemPromptResolution.ActionCancellation.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.RequirementResolution.CodingKeys()
{
  return &type metadata for SystemPromptResolution.RequirementResolution.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.CodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.ActionConfirmedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.ActionConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.DeviceUnlockedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.ParameterValueSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.ParameterConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.ParameterItemSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.DisambiguationIndexSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.RequirementAddressedCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.RequirementAddressedCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.UserAction.ActionCanceledCodingKeys()
{
  return &type metadata for SystemPromptResolution.UserAction.ActionCanceledCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.ResolutionInput.CodingKeys()
{
  return &type metadata for SystemPromptResolution.ResolutionInput.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.ResolutionInput.TouchCodingKeys()
{
  return &type metadata for SystemPromptResolution.ResolutionInput.TouchCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys()
{
  return &type metadata for SystemPromptResolution.ResolutionInput.HeadGestureCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.ResolutionInput.TextCodingKeys()
{
  return &type metadata for SystemPromptResolution.ResolutionInput.TextCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.ResolutionInput.SpeechCodingKeys()
{
  return &type metadata for SystemPromptResolution.ResolutionInput.SpeechCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.InputModality.CodingKeys()
{
  return &type metadata for SystemPromptResolution.InputModality.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.InputModality.TouchCodingKeys()
{
  return &type metadata for SystemPromptResolution.InputModality.TouchCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPromptResolution.InputModality.HeadGestureCodingKeys()
{
  return &type metadata for SystemPromptResolution.InputModality.HeadGestureCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPrompt.CodingKeys()
{
  return &type metadata for SystemPrompt.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPrompt.Prompt.CodingKeys()
{
  return &type metadata for SystemPrompt.Prompt.CodingKeys;
}

ValueMetadata *type metadata accessor for SystemPrompt.Prompt.ActionConfirmationCodingKeys()
{
  return &type metadata for SystemPrompt.Prompt.ActionConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPrompt.Prompt.ParameterNeedsValueCodingKeys()
{
  return &type metadata for SystemPrompt.Prompt.ParameterNeedsValueCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPrompt.Prompt.ParameterConfirmationCodingKeys()
{
  return &type metadata for SystemPrompt.Prompt.ParameterConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for SystemPrompt.Prompt.ParameterDisambiguationCodingKeys()
{
  return &type metadata for SystemPrompt.Prompt.ParameterDisambiguationCodingKeys;
}

uint64_t getEnumTagSinglePayload for MessagePayload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD7)
  {
    if (a2 + 41 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 41) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 42;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2A;
  int v5 = v6 - 42;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for MessagePayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 41 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 41) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD6)
  {
    unsigned int v6 = ((a2 - 215) >> 8) + 1;
    *unint64_t result = a2 + 41;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA656CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 41;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.CodingKeys()
{
  return &type metadata for MessagePayload.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestCodingKeys()
{
  return &type metadata for MessagePayload.RequestCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.TerminateCodingKeys()
{
  return &type metadata for MessagePayload.TerminateCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SessionSuspendedCodingKeys()
{
  return &type metadata for MessagePayload.SessionSuspendedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.EndOfPlanCodingKeys()
{
  return &type metadata for MessagePayload.EndOfPlanCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.StepExecutedWithReturnedValueCodingKeys()
{
  return &type metadata for MessagePayload.StepExecutedWithReturnedValueCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ErrorCodingKeys()
{
  return &type metadata for MessagePayload.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerReturnedRawPlanCodingKeys()
{
  return &type metadata for MessagePayload.PlannerReturnedRawPlanCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.QueryCodingKeys()
{
  return &type metadata for MessagePayload.QueryCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SpeechQueryCodingKeys()
{
  return &type metadata for MessagePayload.SpeechQueryCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientInitiatedClientActionCodingKeys()
{
  return &type metadata for MessagePayload.ClientInitiatedClientActionCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PrescribedPlanCodingKeys()
{
  return &type metadata for MessagePayload.PrescribedPlanCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.MockTranscriptCodingKeys()
{
  return &type metadata for MessagePayload.MockTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.DisambiguationNeededCodingKeys()
{
  return &type metadata for MessagePayload.DisambiguationNeededCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectInvocationCodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectInvocationCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectResolvedCodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectResolvedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecuteCodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecuteCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientActionCodingKeys()
{
  return &type metadata for MessagePayload.ClientActionCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientActionResultCodingKeys()
{
  return &type metadata for MessagePayload.ClientActionResultCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientCustomCodingKeys()
{
  return &type metadata for MessagePayload.ClientCustomCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientIdentifierCodingKeys()
{
  return &type metadata for MessagePayload.ClientIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SystemPromptRequestedCodingKeys()
{
  return &type metadata for MessagePayload.SystemPromptRequestedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SystemPromptResolvedCodingKeys()
{
  return &type metadata for MessagePayload.SystemPromptResolvedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionResponseCodingKeys()
{
  return &type metadata for MessagePayload.ActionResponseCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SystemResponseCodingKeys()
{
  return &type metadata for MessagePayload.SystemResponseCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContextPrewarmRequestCodingKeys()
{
  return &type metadata for MessagePayload.ContextPrewarmRequestCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContextPrewarmCompletedCodingKeys()
{
  return &type metadata for MessagePayload.ContextPrewarmCompletedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SafetyModeReleaseCodingKeys()
{
  return &type metadata for MessagePayload.SafetyModeReleaseCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SafetyModeExceptionCodingKeys()
{
  return &type metadata for MessagePayload.SafetyModeExceptionCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentTextQueryCodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentTextQueryCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentSpeechQueryCodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentSpeechQueryCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentRequestCodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentRequestCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentOutcomeCodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentOutcomeCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentQueryRewriteMetadataCodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadataCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentRequestRewriteMetadataCodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadataCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientUndoRedoRequestCodingKeys()
{
  return &type metadata for MessagePayload.ClientUndoRedoRequestCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdateCodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientDebuggerEventCodingKeys()
{
  return &type metadata for MessagePayload.ClientDebuggerEventCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ServerDebuggerEventCodingKeys()
{
  return &type metadata for MessagePayload.ServerDebuggerEventCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.StatusUpdateCodingKeys()
{
  return &type metadata for MessagePayload.StatusUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerPromptDataCodingKeys()
{
  return &type metadata for MessagePayload.PlannerPromptDataCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionResolutionUpdateCodingKeys()
{
  return &type metadata for MessagePayload.ActionResolutionUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionExecutedCodingKeys()
{
  return &type metadata for MessagePayload.ActionExecutedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.CodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.CodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.CodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.CodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.CodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.CodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.ValueCodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.ValueCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.ValuesCodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.ValuesCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.PlaceholderCodingKeys()
{
  return &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.PlaceholderCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientUndoRedoRequest.CodingKeys()
{
  return &type metadata for MessagePayload.ClientUndoRedoRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientUndoRedoRequest.UndoOperation.CodingKeys()
{
  return &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientUndoRedoRequest.UndoOperation.UndoCodingKeys()
{
  return &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation.UndoCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientUndoRedoRequest.UndoOperation.RedoCodingKeys()
{
  return &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation.RedoCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentRequestRewriteMetadata.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentRequestRewriteMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentQueryRewriteMetadata.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentQueryRewriteMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentOutcome.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentSpeechQuery.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentSpeechQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentSpeechQuery.Candidate.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentSpeechQuery.Candidate.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentTextQuery.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentTextQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ExternalAgentRequest.CodingKeys()
{
  return &type metadata for MessagePayload.ExternalAgentRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SafetyModeException.CodingKeys()
{
  return &type metadata for MessagePayload.SafetyModeException.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SafetyModeRelease.CodingKeys()
{
  return &type metadata for MessagePayload.SafetyModeRelease.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContextPrewarmCompleted.CodingKeys()
{
  return &type metadata for MessagePayload.ContextPrewarmCompleted.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContextPrewarmRequest.CodingKeys()
{
  return &type metadata for MessagePayload.ContextPrewarmRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientInitiatedClientAction.CodingKeys()
{
  return &type metadata for MessagePayload.ClientInitiatedClientAction.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientIdentifier.CodingKeys()
{
  return &type metadata for MessagePayload.ClientIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientCustom.CodingKeys()
{
  return &type metadata for MessagePayload.ClientCustom.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientActionResult.CodingKeys()
{
  return &type metadata for MessagePayload.ClientActionResult.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectResolved.CodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectResolved.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectResolved.Result.CodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectResolved.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectResolved.Result.CompleteCodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectResolved.Result.CompleteCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectResolved.Result.ErrorCodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectResolved.Result.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.ParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.ConfirmedCodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.ConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguationCodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.DeniedCodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.DeniedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.Denied.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Denied.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.PromptSelection.Confirmed.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.PromptSelection.Confirmed.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.ReferenceCodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.ReferenceCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.ValueCodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.ValueCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.Value.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Reference.CodingKeys()
{
  return &type metadata for MessagePayload.ActionWillExecute.ToolParameterValue.Reference.CodingKeys;
}

unsigned char *_s16IntelligenceFlow23ParameterDisambiguationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA6BE0);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientAction.CodingKeys()
{
  return &type metadata for MessagePayload.ClientAction.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue.CodingKeys()
{
  return &type metadata for MessagePayload.ClientAction.UnresolvedParameterValue.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution.CodingKeys()
{
  return &type metadata for MessagePayload.ClientAction.ShimParameterResolution.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution.ResolvedCodingKeys()
{
  return &type metadata for MessagePayload.ClientAction.ShimParameterResolution.ResolvedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution.UnresolvedCodingKeys()
{
  return &type metadata for MessagePayload.ClientAction.ShimParameterResolution.UnresolvedCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ClientEffectInvocation.CodingKeys()
{
  return &type metadata for MessagePayload.ClientEffectInvocation.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.DisambiguationNeeded.CodingKeys()
{
  return &type metadata for MessagePayload.DisambiguationNeeded.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.MockTranscript.CodingKeys()
{
  return &type metadata for MessagePayload.MockTranscript.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PrescribedPlan.CodingKeys()
{
  return &type metadata for MessagePayload.PrescribedPlan.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SpeechQuery.CodingKeys()
{
  return &type metadata for MessagePayload.SpeechQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SpeechQuery.Candidate.CodingKeys()
{
  return &type metadata for MessagePayload.SpeechQuery.Candidate.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.Query.CodingKeys()
{
  return &type metadata for MessagePayload.Query.CodingKeys;
}

unsigned char *_s16IntelligenceFlow21PermissionRequirementOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA6D84);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 7);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.SearchToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.SearchToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.TextToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.TextToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.ConvertToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.ConvertToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.DisplayToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.DisplayToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.KnowledgeToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.KnowledgeToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.OpenToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.OpenToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestToolCodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestToolCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.KnowledgeTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.KnowledgeTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.DisplayTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.DisplayTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.ConvertTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.ConvertTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.TextTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.TextTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.OpenTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.OpenTool.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestPrescribedPlan.SearchTool.CodingKeys()
{
  return &type metadata for MessagePayload.RequestPrescribedPlan.SearchTool.CodingKeys;
}

uint64_t _s16IntelligenceFlow18ActionConfirmationV11SystemStyleO17MontaraEnablementV6SourceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow18ActionConfirmationV11SystemStyleO17MontaraEnablementV6SourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA6FFCLL);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 3);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.CodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.StopCodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.StopCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.TextCodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.TextCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.SpeechCodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.SpeechCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.PromptResolutionCodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.PromptResolutionCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.SpeechContent.CodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.SpeechContent.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.SpeechContent.Candidate.CodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.SpeechContent.Candidate.CodingKeys;
}

uint64_t _s16IntelligenceFlow17PlannerPromptDataV4ToolV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return sub_252AC40B4();
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s16IntelligenceFlow17PlannerPromptDataV4ToolV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252CA717CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.TextContent.CodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.TextContent.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.RequestContent.StopContent.CodingKeys()
{
  return &type metadata for MessagePayload.RequestContent.StopContent.CodingKeys;
}

unsigned char *_s16IntelligenceFlow13ActionSuccessV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA7280);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 5);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.Request.CodingKeys()
{
  return &type metadata for MessagePayload.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerReturnedRawPlan.CodingKeys()
{
  return &type metadata for MessagePayload.PlannerReturnedRawPlan.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerReturnedRawPlan.Source.CodingKeys()
{
  return &type metadata for MessagePayload.PlannerReturnedRawPlan.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerReturnedRawPlan.Source.PrescribedPlanGeneratorCodingKeys()
{
  return &type metadata for MessagePayload.PlannerReturnedRawPlan.Source.PrescribedPlanGeneratorCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerReturnedRawPlan.Source.PlanOverrideCodingKeys()
{
  return &type metadata for MessagePayload.PlannerReturnedRawPlan.Source.PlanOverrideCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.PlannerReturnedRawPlan.Source.FullPlannerCodingKeys()
{
  return &type metadata for MessagePayload.PlannerReturnedRawPlan.Source.FullPlannerCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SessionError.CodingKeys()
{
  return &type metadata for MessagePayload.SessionError.CodingKeys;
}

uint64_t _s16IntelligenceFlow17SystemRequirementO21AuthenticationRequestV19AuthenticationLevelOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 2);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 2);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 2);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow17SystemRequirementO21AuthenticationRequestV19AuthenticationLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA7458);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 1);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.StepExecutedWithReturnedValue.CodingKeys()
{
  return &type metadata for MessagePayload.StepExecutedWithReturnedValue.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.SessionSuspended.CodingKeys()
{
  return &type metadata for MessagePayload.SessionSuspended.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.EndOfPlan.CodingKeys()
{
  return &type metadata for MessagePayload.EndOfPlan.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.Terminate.CodingKeys()
{
  return &type metadata for MessagePayload.Terminate.CodingKeys;
}

uint64_t _s16IntelligenceFlow17PlannerPromptDataV20OnScreenContextValueV11ContextTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 7);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 7);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 7);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow17PlannerPromptDataV20OnScreenContextValueV11ContextTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA7600);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 6);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionServerMessage.CodingKeys()
{
  return &type metadata for SessionServerMessage.CodingKeys;
}

unsigned char *_s16IntelligenceFlow14MessagePayloadO22PlannerReturnedRawPlanV6SourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CA76F4);
      case 4:
        unint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_252B98C24(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientMessage.CodingKeys()
{
  return &type metadata for SessionClientMessage.CodingKeys;
}

unint64_t sub_252CA7730()
{
  unint64_t result = qword_269C465C0;
  if (!qword_269C465C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465C0);
  }
  return result;
}

unint64_t sub_252CA7780()
{
  unint64_t result = qword_269C465C8;
  if (!qword_269C465C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465C8);
  }
  return result;
}

unint64_t sub_252CA77D0()
{
  unint64_t result = qword_269C465D0;
  if (!qword_269C465D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465D0);
  }
  return result;
}

unint64_t sub_252CA7820()
{
  unint64_t result = qword_269C465D8;
  if (!qword_269C465D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465D8);
  }
  return result;
}

unint64_t sub_252CA7870()
{
  unint64_t result = qword_269C465E0;
  if (!qword_269C465E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465E0);
  }
  return result;
}

unint64_t sub_252CA78C0()
{
  unint64_t result = qword_269C465E8;
  if (!qword_269C465E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465E8);
  }
  return result;
}

unint64_t sub_252CA7910()
{
  unint64_t result = qword_269C465F0;
  if (!qword_269C465F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465F0);
  }
  return result;
}

unint64_t sub_252CA7960()
{
  unint64_t result = qword_269C465F8;
  if (!qword_269C465F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C465F8);
  }
  return result;
}

unint64_t sub_252CA79B0()
{
  unint64_t result = qword_269C46600;
  if (!qword_269C46600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46600);
  }
  return result;
}

unint64_t sub_252CA7A00()
{
  unint64_t result = qword_269C46608;
  if (!qword_269C46608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46608);
  }
  return result;
}

unint64_t sub_252CA7A50()
{
  unint64_t result = qword_269C46610;
  if (!qword_269C46610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46610);
  }
  return result;
}

unint64_t sub_252CA7AA0()
{
  unint64_t result = qword_269C46618;
  if (!qword_269C46618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46618);
  }
  return result;
}

unint64_t sub_252CA7AF0()
{
  unint64_t result = qword_269C46620;
  if (!qword_269C46620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46620);
  }
  return result;
}

unint64_t sub_252CA7B40()
{
  unint64_t result = qword_269C46628;
  if (!qword_269C46628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46628);
  }
  return result;
}

unint64_t sub_252CA7B90()
{
  unint64_t result = qword_269C46630;
  if (!qword_269C46630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46630);
  }
  return result;
}

unint64_t sub_252CA7BE0()
{
  unint64_t result = qword_269C46638;
  if (!qword_269C46638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46638);
  }
  return result;
}

unint64_t sub_252CA7C30()
{
  unint64_t result = qword_269C46640;
  if (!qword_269C46640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46640);
  }
  return result;
}

unint64_t sub_252CA7C80()
{
  unint64_t result = qword_269C46648;
  if (!qword_269C46648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46648);
  }
  return result;
}

unint64_t sub_252CA7CD0()
{
  unint64_t result = qword_269C46650;
  if (!qword_269C46650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46650);
  }
  return result;
}

unint64_t sub_252CA7D20()
{
  unint64_t result = qword_269C46658;
  if (!qword_269C46658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46658);
  }
  return result;
}

unint64_t sub_252CA7D70()
{
  unint64_t result = qword_269C46660;
  if (!qword_269C46660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46660);
  }
  return result;
}

unint64_t sub_252CA7DC0()
{
  unint64_t result = qword_269C46668;
  if (!qword_269C46668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46668);
  }
  return result;
}

unint64_t sub_252CA7E10()
{
  unint64_t result = qword_269C46670;
  if (!qword_269C46670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46670);
  }
  return result;
}

unint64_t sub_252CA7E60()
{
  unint64_t result = qword_269C46678;
  if (!qword_269C46678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46678);
  }
  return result;
}

unint64_t sub_252CA7EB0()
{
  unint64_t result = qword_269C46680;
  if (!qword_269C46680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46680);
  }
  return result;
}

unint64_t sub_252CA7F00()
{
  unint64_t result = qword_269C46688;
  if (!qword_269C46688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46688);
  }
  return result;
}

unint64_t sub_252CA7F50()
{
  unint64_t result = qword_269C46690;
  if (!qword_269C46690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46690);
  }
  return result;
}

unint64_t sub_252CA7FA0()
{
  unint64_t result = qword_269C46698;
  if (!qword_269C46698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46698);
  }
  return result;
}

unint64_t sub_252CA7FF0()
{
  unint64_t result = qword_269C466A0;
  if (!qword_269C466A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466A0);
  }
  return result;
}

unint64_t sub_252CA8040()
{
  unint64_t result = qword_269C466A8;
  if (!qword_269C466A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466A8);
  }
  return result;
}

unint64_t sub_252CA8090()
{
  unint64_t result = qword_269C466B0;
  if (!qword_269C466B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466B0);
  }
  return result;
}

unint64_t sub_252CA80E0()
{
  unint64_t result = qword_269C466B8;
  if (!qword_269C466B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466B8);
  }
  return result;
}

unint64_t sub_252CA8130()
{
  unint64_t result = qword_269C466C0;
  if (!qword_269C466C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466C0);
  }
  return result;
}

unint64_t sub_252CA8180()
{
  unint64_t result = qword_269C466C8;
  if (!qword_269C466C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466C8);
  }
  return result;
}

unint64_t sub_252CA81D0()
{
  unint64_t result = qword_269C466D0;
  if (!qword_269C466D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466D0);
  }
  return result;
}

unint64_t sub_252CA8220()
{
  unint64_t result = qword_269C466D8;
  if (!qword_269C466D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466D8);
  }
  return result;
}

unint64_t sub_252CA8270()
{
  unint64_t result = qword_269C466E0;
  if (!qword_269C466E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466E0);
  }
  return result;
}

unint64_t sub_252CA82C0()
{
  unint64_t result = qword_269C466E8;
  if (!qword_269C466E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466E8);
  }
  return result;
}

unint64_t sub_252CA8310()
{
  unint64_t result = qword_269C466F0;
  if (!qword_269C466F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466F0);
  }
  return result;
}

unint64_t sub_252CA8360()
{
  unint64_t result = qword_269C466F8;
  if (!qword_269C466F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C466F8);
  }
  return result;
}

unint64_t sub_252CA83B0()
{
  unint64_t result = qword_269C46700;
  if (!qword_269C46700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46700);
  }
  return result;
}

unint64_t sub_252CA8400()
{
  unint64_t result = qword_269C46708;
  if (!qword_269C46708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46708);
  }
  return result;
}

unint64_t sub_252CA8450()
{
  unint64_t result = qword_269C46710;
  if (!qword_269C46710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46710);
  }
  return result;
}

unint64_t sub_252CA84A0()
{
  unint64_t result = qword_269C46718;
  if (!qword_269C46718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46718);
  }
  return result;
}

unint64_t sub_252CA84F0()
{
  unint64_t result = qword_269C46720;
  if (!qword_269C46720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46720);
  }
  return result;
}

unint64_t sub_252CA8540()
{
  unint64_t result = qword_269C46728;
  if (!qword_269C46728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46728);
  }
  return result;
}

unint64_t sub_252CA8590()
{
  unint64_t result = qword_269C46730;
  if (!qword_269C46730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46730);
  }
  return result;
}

unint64_t sub_252CA85E0()
{
  unint64_t result = qword_269C46738;
  if (!qword_269C46738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46738);
  }
  return result;
}

unint64_t sub_252CA8630()
{
  unint64_t result = qword_269C46740;
  if (!qword_269C46740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46740);
  }
  return result;
}

unint64_t sub_252CA8680()
{
  unint64_t result = qword_269C46748;
  if (!qword_269C46748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46748);
  }
  return result;
}

unint64_t sub_252CA86D0()
{
  unint64_t result = qword_269C46750;
  if (!qword_269C46750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46750);
  }
  return result;
}

unint64_t sub_252CA8720()
{
  unint64_t result = qword_269C46758;
  if (!qword_269C46758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46758);
  }
  return result;
}

unint64_t sub_252CA8770()
{
  unint64_t result = qword_269C46760;
  if (!qword_269C46760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46760);
  }
  return result;
}

unint64_t sub_252CA87C0()
{
  unint64_t result = qword_269C46768;
  if (!qword_269C46768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46768);
  }
  return result;
}

unint64_t sub_252CA8810()
{
  unint64_t result = qword_269C46770;
  if (!qword_269C46770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46770);
  }
  return result;
}

unint64_t sub_252CA8860()
{
  unint64_t result = qword_269C46778;
  if (!qword_269C46778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46778);
  }
  return result;
}

unint64_t sub_252CA88B0()
{
  unint64_t result = qword_269C46780;
  if (!qword_269C46780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46780);
  }
  return result;
}

unint64_t sub_252CA8900()
{
  unint64_t result = qword_269C46788;
  if (!qword_269C46788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46788);
  }
  return result;
}

unint64_t sub_252CA8950()
{
  unint64_t result = qword_269C46790;
  if (!qword_269C46790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46790);
  }
  return result;
}

unint64_t sub_252CA89A0()
{
  unint64_t result = qword_269C46798;
  if (!qword_269C46798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46798);
  }
  return result;
}

unint64_t sub_252CA89F0()
{
  unint64_t result = qword_269C467A0;
  if (!qword_269C467A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467A0);
  }
  return result;
}

unint64_t sub_252CA8A40()
{
  unint64_t result = qword_269C467A8;
  if (!qword_269C467A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467A8);
  }
  return result;
}

unint64_t sub_252CA8A90()
{
  unint64_t result = qword_269C467B0;
  if (!qword_269C467B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467B0);
  }
  return result;
}

unint64_t sub_252CA8AE0()
{
  unint64_t result = qword_269C467B8;
  if (!qword_269C467B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467B8);
  }
  return result;
}

unint64_t sub_252CA8B30()
{
  unint64_t result = qword_269C467C0;
  if (!qword_269C467C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467C0);
  }
  return result;
}

unint64_t sub_252CA8B80()
{
  unint64_t result = qword_269C467C8;
  if (!qword_269C467C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467C8);
  }
  return result;
}

unint64_t sub_252CA8BD0()
{
  unint64_t result = qword_269C467D0;
  if (!qword_269C467D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467D0);
  }
  return result;
}

unint64_t sub_252CA8C20()
{
  unint64_t result = qword_269C467D8;
  if (!qword_269C467D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467D8);
  }
  return result;
}

unint64_t sub_252CA8C70()
{
  unint64_t result = qword_269C467E0;
  if (!qword_269C467E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467E0);
  }
  return result;
}

unint64_t sub_252CA8CC0()
{
  unint64_t result = qword_269C467E8;
  if (!qword_269C467E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467E8);
  }
  return result;
}

unint64_t sub_252CA8D10()
{
  unint64_t result = qword_269C467F0;
  if (!qword_269C467F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467F0);
  }
  return result;
}

unint64_t sub_252CA8D60()
{
  unint64_t result = qword_269C467F8;
  if (!qword_269C467F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C467F8);
  }
  return result;
}

unint64_t sub_252CA8DB0()
{
  unint64_t result = qword_269C46800;
  if (!qword_269C46800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46800);
  }
  return result;
}

unint64_t sub_252CA8E00()
{
  unint64_t result = qword_269C46808;
  if (!qword_269C46808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46808);
  }
  return result;
}

unint64_t sub_252CA8E50()
{
  unint64_t result = qword_269C46810;
  if (!qword_269C46810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46810);
  }
  return result;
}

unint64_t sub_252CA8EA0()
{
  unint64_t result = qword_269C46818;
  if (!qword_269C46818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46818);
  }
  return result;
}

unint64_t sub_252CA8EF0()
{
  unint64_t result = qword_269C46820;
  if (!qword_269C46820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46820);
  }
  return result;
}

unint64_t sub_252CA8F40()
{
  unint64_t result = qword_269C46828;
  if (!qword_269C46828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46828);
  }
  return result;
}

unint64_t sub_252CA8F90()
{
  unint64_t result = qword_269C46830;
  if (!qword_269C46830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46830);
  }
  return result;
}

unint64_t sub_252CA8FE0()
{
  unint64_t result = qword_269C46838;
  if (!qword_269C46838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46838);
  }
  return result;
}

unint64_t sub_252CA9030()
{
  unint64_t result = qword_269C46840;
  if (!qword_269C46840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46840);
  }
  return result;
}

unint64_t sub_252CA9080()
{
  unint64_t result = qword_269C46848;
  if (!qword_269C46848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46848);
  }
  return result;
}

unint64_t sub_252CA90D0()
{
  unint64_t result = qword_269C46850;
  if (!qword_269C46850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46850);
  }
  return result;
}

unint64_t sub_252CA9120()
{
  unint64_t result = qword_269C46858;
  if (!qword_269C46858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46858);
  }
  return result;
}

unint64_t sub_252CA9170()
{
  unint64_t result = qword_269C46860;
  if (!qword_269C46860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46860);
  }
  return result;
}

unint64_t sub_252CA91C0()
{
  unint64_t result = qword_269C46868;
  if (!qword_269C46868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46868);
  }
  return result;
}

unint64_t sub_252CA9210()
{
  unint64_t result = qword_269C46870;
  if (!qword_269C46870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46870);
  }
  return result;
}

unint64_t sub_252CA9260()
{
  unint64_t result = qword_269C46878;
  if (!qword_269C46878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46878);
  }
  return result;
}

unint64_t sub_252CA92B0()
{
  unint64_t result = qword_269C46880;
  if (!qword_269C46880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46880);
  }
  return result;
}

unint64_t sub_252CA9300()
{
  unint64_t result = qword_269C46888;
  if (!qword_269C46888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46888);
  }
  return result;
}

unint64_t sub_252CA9350()
{
  unint64_t result = qword_269C46890;
  if (!qword_269C46890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46890);
  }
  return result;
}

unint64_t sub_252CA93A0()
{
  unint64_t result = qword_269C46898;
  if (!qword_269C46898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46898);
  }
  return result;
}

unint64_t sub_252CA93F0()
{
  unint64_t result = qword_269C468A0;
  if (!qword_269C468A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468A0);
  }
  return result;
}

unint64_t sub_252CA9440()
{
  unint64_t result = qword_269C468A8;
  if (!qword_269C468A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468A8);
  }
  return result;
}

unint64_t sub_252CA9490()
{
  unint64_t result = qword_269C468B0;
  if (!qword_269C468B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468B0);
  }
  return result;
}

unint64_t sub_252CA94E0()
{
  unint64_t result = qword_269C468B8;
  if (!qword_269C468B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468B8);
  }
  return result;
}

unint64_t sub_252CA9530()
{
  unint64_t result = qword_269C468C0;
  if (!qword_269C468C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468C0);
  }
  return result;
}

unint64_t sub_252CA9580()
{
  unint64_t result = qword_269C468C8;
  if (!qword_269C468C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468C8);
  }
  return result;
}

unint64_t sub_252CA95D0()
{
  unint64_t result = qword_269C468D0;
  if (!qword_269C468D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468D0);
  }
  return result;
}

unint64_t sub_252CA9620()
{
  unint64_t result = qword_269C468D8;
  if (!qword_269C468D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468D8);
  }
  return result;
}

unint64_t sub_252CA9670()
{
  unint64_t result = qword_269C468E0;
  if (!qword_269C468E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468E0);
  }
  return result;
}

unint64_t sub_252CA96C0()
{
  unint64_t result = qword_269C468E8;
  if (!qword_269C468E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468E8);
  }
  return result;
}

unint64_t sub_252CA9710()
{
  unint64_t result = qword_269C468F0;
  if (!qword_269C468F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468F0);
  }
  return result;
}

unint64_t sub_252CA9760()
{
  unint64_t result = qword_269C468F8;
  if (!qword_269C468F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C468F8);
  }
  return result;
}

unint64_t sub_252CA97B0()
{
  unint64_t result = qword_269C46900;
  if (!qword_269C46900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46900);
  }
  return result;
}

unint64_t sub_252CA9800()
{
  unint64_t result = qword_269C46908;
  if (!qword_269C46908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46908);
  }
  return result;
}

unint64_t sub_252CA9850()
{
  unint64_t result = qword_269C46910;
  if (!qword_269C46910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46910);
  }
  return result;
}

unint64_t sub_252CA98A0()
{
  unint64_t result = qword_269C46918;
  if (!qword_269C46918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46918);
  }
  return result;
}

unint64_t sub_252CA98F0()
{
  unint64_t result = qword_269C46920;
  if (!qword_269C46920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46920);
  }
  return result;
}

unint64_t sub_252CA9940()
{
  unint64_t result = qword_269C46928;
  if (!qword_269C46928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46928);
  }
  return result;
}

unint64_t sub_252CA9990()
{
  unint64_t result = qword_269C46930;
  if (!qword_269C46930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46930);
  }
  return result;
}

unint64_t sub_252CA99E0()
{
  unint64_t result = qword_269C46938;
  if (!qword_269C46938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46938);
  }
  return result;
}

unint64_t sub_252CA9A30()
{
  unint64_t result = qword_269C46940;
  if (!qword_269C46940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46940);
  }
  return result;
}

unint64_t sub_252CA9A80()
{
  unint64_t result = qword_269C46948;
  if (!qword_269C46948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46948);
  }
  return result;
}

unint64_t sub_252CA9AD0()
{
  unint64_t result = qword_269C46950;
  if (!qword_269C46950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46950);
  }
  return result;
}

unint64_t sub_252CA9B20()
{
  unint64_t result = qword_269C46958;
  if (!qword_269C46958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46958);
  }
  return result;
}

unint64_t sub_252CA9B70()
{
  unint64_t result = qword_269C46960;
  if (!qword_269C46960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46960);
  }
  return result;
}

unint64_t sub_252CA9BC0()
{
  unint64_t result = qword_269C46968;
  if (!qword_269C46968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46968);
  }
  return result;
}

unint64_t sub_252CA9C10()
{
  unint64_t result = qword_269C46970;
  if (!qword_269C46970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46970);
  }
  return result;
}

unint64_t sub_252CA9C60()
{
  unint64_t result = qword_269C46978;
  if (!qword_269C46978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46978);
  }
  return result;
}

unint64_t sub_252CA9CB0()
{
  unint64_t result = qword_269C46980;
  if (!qword_269C46980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46980);
  }
  return result;
}

unint64_t sub_252CA9D00()
{
  unint64_t result = qword_269C46988;
  if (!qword_269C46988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46988);
  }
  return result;
}

unint64_t sub_252CA9D50()
{
  unint64_t result = qword_269C46990;
  if (!qword_269C46990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46990);
  }
  return result;
}

unint64_t sub_252CA9DA0()
{
  unint64_t result = qword_269C46998;
  if (!qword_269C46998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46998);
  }
  return result;
}

unint64_t sub_252CA9DF0()
{
  unint64_t result = qword_269C469A0;
  if (!qword_269C469A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469A0);
  }
  return result;
}

unint64_t sub_252CA9E40()
{
  unint64_t result = qword_269C469A8;
  if (!qword_269C469A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469A8);
  }
  return result;
}

unint64_t sub_252CA9E90()
{
  unint64_t result = qword_269C469B0;
  if (!qword_269C469B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469B0);
  }
  return result;
}

unint64_t sub_252CA9EE0()
{
  unint64_t result = qword_269C469B8;
  if (!qword_269C469B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469B8);
  }
  return result;
}

unint64_t sub_252CA9F30()
{
  unint64_t result = qword_269C469C0;
  if (!qword_269C469C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469C0);
  }
  return result;
}

unint64_t sub_252CA9F80()
{
  unint64_t result = qword_269C469C8;
  if (!qword_269C469C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469C8);
  }
  return result;
}

unint64_t sub_252CA9FD0()
{
  unint64_t result = qword_269C469D0;
  if (!qword_269C469D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469D0);
  }
  return result;
}

unint64_t sub_252CAA020()
{
  unint64_t result = qword_269C469D8;
  if (!qword_269C469D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469D8);
  }
  return result;
}

unint64_t sub_252CAA070()
{
  unint64_t result = qword_269C469E0;
  if (!qword_269C469E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469E0);
  }
  return result;
}

unint64_t sub_252CAA0C0()
{
  unint64_t result = qword_269C469E8;
  if (!qword_269C469E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469E8);
  }
  return result;
}

unint64_t sub_252CAA110()
{
  unint64_t result = qword_269C469F0;
  if (!qword_269C469F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469F0);
  }
  return result;
}

unint64_t sub_252CAA160()
{
  unint64_t result = qword_269C469F8;
  if (!qword_269C469F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C469F8);
  }
  return result;
}

unint64_t sub_252CAA1B0()
{
  unint64_t result = qword_269C46A00;
  if (!qword_269C46A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A00);
  }
  return result;
}

unint64_t sub_252CAA200()
{
  unint64_t result = qword_269C46A08;
  if (!qword_269C46A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A08);
  }
  return result;
}

unint64_t sub_252CAA250()
{
  unint64_t result = qword_269C46A10;
  if (!qword_269C46A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A10);
  }
  return result;
}

unint64_t sub_252CAA2A0()
{
  unint64_t result = qword_269C46A18;
  if (!qword_269C46A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A18);
  }
  return result;
}

unint64_t sub_252CAA2F0()
{
  unint64_t result = qword_269C46A20;
  if (!qword_269C46A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A20);
  }
  return result;
}

unint64_t sub_252CAA340()
{
  unint64_t result = qword_269C46A28;
  if (!qword_269C46A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A28);
  }
  return result;
}

unint64_t sub_252CAA390()
{
  unint64_t result = qword_269C46A30;
  if (!qword_269C46A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A30);
  }
  return result;
}

unint64_t sub_252CAA3E0()
{
  unint64_t result = qword_269C46A38;
  if (!qword_269C46A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A38);
  }
  return result;
}

unint64_t sub_252CAA430()
{
  unint64_t result = qword_269C46A40;
  if (!qword_269C46A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A40);
  }
  return result;
}

unint64_t sub_252CAA480()
{
  unint64_t result = qword_269C46A48;
  if (!qword_269C46A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A48);
  }
  return result;
}

unint64_t sub_252CAA4D0()
{
  unint64_t result = qword_269C46A50;
  if (!qword_269C46A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A50);
  }
  return result;
}

unint64_t sub_252CAA520()
{
  unint64_t result = qword_269C46A58;
  if (!qword_269C46A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A58);
  }
  return result;
}

unint64_t sub_252CAA570()
{
  unint64_t result = qword_269C46A60;
  if (!qword_269C46A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A60);
  }
  return result;
}

unint64_t sub_252CAA5C0()
{
  unint64_t result = qword_269C46A68;
  if (!qword_269C46A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A68);
  }
  return result;
}

unint64_t sub_252CAA610()
{
  unint64_t result = qword_269C46A70;
  if (!qword_269C46A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A70);
  }
  return result;
}

unint64_t sub_252CAA660()
{
  unint64_t result = qword_269C46A78;
  if (!qword_269C46A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A78);
  }
  return result;
}

unint64_t sub_252CAA6B0()
{
  unint64_t result = qword_269C46A80;
  if (!qword_269C46A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A80);
  }
  return result;
}

unint64_t sub_252CAA700()
{
  unint64_t result = qword_269C46A88;
  if (!qword_269C46A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A88);
  }
  return result;
}

unint64_t sub_252CAA750()
{
  unint64_t result = qword_269C46A90;
  if (!qword_269C46A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A90);
  }
  return result;
}

unint64_t sub_252CAA7A0()
{
  unint64_t result = qword_269C46A98;
  if (!qword_269C46A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46A98);
  }
  return result;
}

unint64_t sub_252CAA7F0()
{
  unint64_t result = qword_269C46AA0;
  if (!qword_269C46AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AA0);
  }
  return result;
}

unint64_t sub_252CAA840()
{
  unint64_t result = qword_269C46AA8;
  if (!qword_269C46AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AA8);
  }
  return result;
}

unint64_t sub_252CAA890()
{
  unint64_t result = qword_269C46AB0;
  if (!qword_269C46AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AB0);
  }
  return result;
}

unint64_t sub_252CAA8E0()
{
  unint64_t result = qword_269C46AB8;
  if (!qword_269C46AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AB8);
  }
  return result;
}

unint64_t sub_252CAA930()
{
  unint64_t result = qword_269C46AC0;
  if (!qword_269C46AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AC0);
  }
  return result;
}

unint64_t sub_252CAA980()
{
  unint64_t result = qword_269C46AC8;
  if (!qword_269C46AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AC8);
  }
  return result;
}

unint64_t sub_252CAA9D0()
{
  unint64_t result = qword_269C46AD0;
  if (!qword_269C46AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AD0);
  }
  return result;
}

unint64_t sub_252CAAA20()
{
  unint64_t result = qword_269C46AD8;
  if (!qword_269C46AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AD8);
  }
  return result;
}

unint64_t sub_252CAAA70()
{
  unint64_t result = qword_269C46AE0;
  if (!qword_269C46AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AE0);
  }
  return result;
}

unint64_t sub_252CAAAC0()
{
  unint64_t result = qword_269C46AE8;
  if (!qword_269C46AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AE8);
  }
  return result;
}

unint64_t sub_252CAAB10()
{
  unint64_t result = qword_269C46AF0;
  if (!qword_269C46AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AF0);
  }
  return result;
}

unint64_t sub_252CAAB60()
{
  unint64_t result = qword_269C46AF8;
  if (!qword_269C46AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46AF8);
  }
  return result;
}

unint64_t sub_252CAABB0()
{
  unint64_t result = qword_269C46B00;
  if (!qword_269C46B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B00);
  }
  return result;
}

unint64_t sub_252CAAC00()
{
  unint64_t result = qword_269C46B08;
  if (!qword_269C46B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B08);
  }
  return result;
}

unint64_t sub_252CAAC50()
{
  unint64_t result = qword_269C46B10;
  if (!qword_269C46B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B10);
  }
  return result;
}

unint64_t sub_252CAACA0()
{
  unint64_t result = qword_269C46B18;
  if (!qword_269C46B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B18);
  }
  return result;
}

unint64_t sub_252CAACF0()
{
  unint64_t result = qword_269C46B20;
  if (!qword_269C46B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B20);
  }
  return result;
}

unint64_t sub_252CAAD40()
{
  unint64_t result = qword_269C46B28;
  if (!qword_269C46B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B28);
  }
  return result;
}

unint64_t sub_252CAAD90()
{
  unint64_t result = qword_269C46B30;
  if (!qword_269C46B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B30);
  }
  return result;
}

unint64_t sub_252CAADE0()
{
  unint64_t result = qword_269C46B38;
  if (!qword_269C46B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B38);
  }
  return result;
}

unint64_t sub_252CAAE30()
{
  unint64_t result = qword_269C46B40;
  if (!qword_269C46B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B40);
  }
  return result;
}

unint64_t sub_252CAAE80()
{
  unint64_t result = qword_269C46B48;
  if (!qword_269C46B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B48);
  }
  return result;
}

unint64_t sub_252CAAED0()
{
  unint64_t result = qword_269C46B50;
  if (!qword_269C46B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B50);
  }
  return result;
}

unint64_t sub_252CAAF20()
{
  unint64_t result = qword_269C46B58;
  if (!qword_269C46B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B58);
  }
  return result;
}

unint64_t sub_252CAAF70()
{
  unint64_t result = qword_269C46B60;
  if (!qword_269C46B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B60);
  }
  return result;
}

unint64_t sub_252CAAFC0()
{
  unint64_t result = qword_269C46B68;
  if (!qword_269C46B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B68);
  }
  return result;
}

unint64_t sub_252CAB010()
{
  unint64_t result = qword_269C46B70;
  if (!qword_269C46B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B70);
  }
  return result;
}

unint64_t sub_252CAB060()
{
  unint64_t result = qword_269C46B78;
  if (!qword_269C46B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B78);
  }
  return result;
}

unint64_t sub_252CAB0B0()
{
  unint64_t result = qword_269C46B80;
  if (!qword_269C46B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B80);
  }
  return result;
}

unint64_t sub_252CAB100()
{
  unint64_t result = qword_269C46B88;
  if (!qword_269C46B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B88);
  }
  return result;
}

unint64_t sub_252CAB150()
{
  unint64_t result = qword_269C46B90;
  if (!qword_269C46B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B90);
  }
  return result;
}

unint64_t sub_252CAB1A0()
{
  unint64_t result = qword_269C46B98;
  if (!qword_269C46B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46B98);
  }
  return result;
}

unint64_t sub_252CAB1F0()
{
  unint64_t result = qword_269C46BA0;
  if (!qword_269C46BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BA0);
  }
  return result;
}

unint64_t sub_252CAB240()
{
  unint64_t result = qword_269C46BA8;
  if (!qword_269C46BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BA8);
  }
  return result;
}

unint64_t sub_252CAB290()
{
  unint64_t result = qword_269C46BB0;
  if (!qword_269C46BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BB0);
  }
  return result;
}

unint64_t sub_252CAB2E0()
{
  unint64_t result = qword_269C46BB8;
  if (!qword_269C46BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BB8);
  }
  return result;
}

unint64_t sub_252CAB330()
{
  unint64_t result = qword_269C46BC0;
  if (!qword_269C46BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BC0);
  }
  return result;
}

unint64_t sub_252CAB380()
{
  unint64_t result = qword_269C46BC8;
  if (!qword_269C46BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BC8);
  }
  return result;
}

unint64_t sub_252CAB3D0()
{
  unint64_t result = qword_269C46BD0;
  if (!qword_269C46BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BD0);
  }
  return result;
}

unint64_t sub_252CAB420()
{
  unint64_t result = qword_269C46BD8;
  if (!qword_269C46BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BD8);
  }
  return result;
}

unint64_t sub_252CAB470()
{
  unint64_t result = qword_269C46BE0;
  if (!qword_269C46BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BE0);
  }
  return result;
}

unint64_t sub_252CAB4C0()
{
  unint64_t result = qword_269C46BE8;
  if (!qword_269C46BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BE8);
  }
  return result;
}

unint64_t sub_252CAB510()
{
  unint64_t result = qword_269C46BF0;
  if (!qword_269C46BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BF0);
  }
  return result;
}

unint64_t sub_252CAB560()
{
  unint64_t result = qword_269C46BF8;
  if (!qword_269C46BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46BF8);
  }
  return result;
}

unint64_t sub_252CAB5B0()
{
  unint64_t result = qword_269C46C00;
  if (!qword_269C46C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C00);
  }
  return result;
}

unint64_t sub_252CAB600()
{
  unint64_t result = qword_269C46C08;
  if (!qword_269C46C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C08);
  }
  return result;
}

unint64_t sub_252CAB650()
{
  unint64_t result = qword_269C46C10;
  if (!qword_269C46C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C10);
  }
  return result;
}

unint64_t sub_252CAB6A0()
{
  unint64_t result = qword_269C46C18;
  if (!qword_269C46C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C18);
  }
  return result;
}

unint64_t sub_252CAB6F0()
{
  unint64_t result = qword_269C46C20;
  if (!qword_269C46C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C20);
  }
  return result;
}

unint64_t sub_252CAB740()
{
  unint64_t result = qword_269C46C28;
  if (!qword_269C46C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C28);
  }
  return result;
}

unint64_t sub_252CAB790()
{
  unint64_t result = qword_269C46C30;
  if (!qword_269C46C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C30);
  }
  return result;
}

unint64_t sub_252CAB7E0()
{
  unint64_t result = qword_269C46C38;
  if (!qword_269C46C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C38);
  }
  return result;
}

unint64_t sub_252CAB830()
{
  unint64_t result = qword_269C46C40;
  if (!qword_269C46C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C40);
  }
  return result;
}

unint64_t sub_252CAB880()
{
  unint64_t result = qword_269C46C48;
  if (!qword_269C46C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C48);
  }
  return result;
}

unint64_t sub_252CAB8D0()
{
  unint64_t result = qword_269C46C50;
  if (!qword_269C46C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C50);
  }
  return result;
}

unint64_t sub_252CAB920()
{
  unint64_t result = qword_269C46C58;
  if (!qword_269C46C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C58);
  }
  return result;
}

unint64_t sub_252CAB970()
{
  unint64_t result = qword_269C46C60;
  if (!qword_269C46C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C60);
  }
  return result;
}

unint64_t sub_252CAB9C0()
{
  unint64_t result = qword_269C46C68;
  if (!qword_269C46C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C68);
  }
  return result;
}

unint64_t sub_252CABA10()
{
  unint64_t result = qword_269C46C70;
  if (!qword_269C46C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C70);
  }
  return result;
}

unint64_t sub_252CABA60()
{
  unint64_t result = qword_269C46C78;
  if (!qword_269C46C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C78);
  }
  return result;
}

unint64_t sub_252CABAB0()
{
  unint64_t result = qword_269C46C80;
  if (!qword_269C46C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C80);
  }
  return result;
}

unint64_t sub_252CABB00()
{
  unint64_t result = qword_269C46C88;
  if (!qword_269C46C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C88);
  }
  return result;
}

unint64_t sub_252CABB50()
{
  unint64_t result = qword_269C46C90;
  if (!qword_269C46C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C90);
  }
  return result;
}

unint64_t sub_252CABBA0()
{
  unint64_t result = qword_269C46C98;
  if (!qword_269C46C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46C98);
  }
  return result;
}

unint64_t sub_252CABBF0()
{
  unint64_t result = qword_269C46CA0;
  if (!qword_269C46CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CA0);
  }
  return result;
}

unint64_t sub_252CABC40()
{
  unint64_t result = qword_269C46CA8;
  if (!qword_269C46CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CA8);
  }
  return result;
}

unint64_t sub_252CABC90()
{
  unint64_t result = qword_269C46CB0;
  if (!qword_269C46CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CB0);
  }
  return result;
}

unint64_t sub_252CABCE0()
{
  unint64_t result = qword_269C46CB8;
  if (!qword_269C46CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CB8);
  }
  return result;
}

unint64_t sub_252CABD30()
{
  unint64_t result = qword_269C46CC0;
  if (!qword_269C46CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CC0);
  }
  return result;
}

unint64_t sub_252CABD80()
{
  unint64_t result = qword_269C46CC8;
  if (!qword_269C46CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CC8);
  }
  return result;
}

unint64_t sub_252CABDD0()
{
  unint64_t result = qword_269C46CD0;
  if (!qword_269C46CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CD0);
  }
  return result;
}

unint64_t sub_252CABE20()
{
  unint64_t result = qword_269C46CD8;
  if (!qword_269C46CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CD8);
  }
  return result;
}

unint64_t sub_252CABE70()
{
  unint64_t result = qword_269C46CE0;
  if (!qword_269C46CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CE0);
  }
  return result;
}

unint64_t sub_252CABEC0()
{
  unint64_t result = qword_269C46CE8;
  if (!qword_269C46CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CE8);
  }
  return result;
}

unint64_t sub_252CABF10()
{
  unint64_t result = qword_269C46CF0;
  if (!qword_269C46CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CF0);
  }
  return result;
}

unint64_t sub_252CABF60()
{
  unint64_t result = qword_269C46CF8;
  if (!qword_269C46CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46CF8);
  }
  return result;
}

unint64_t sub_252CABFB0()
{
  unint64_t result = qword_269C46D00;
  if (!qword_269C46D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D00);
  }
  return result;
}

unint64_t sub_252CAC000()
{
  unint64_t result = qword_269C46D08;
  if (!qword_269C46D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D08);
  }
  return result;
}

unint64_t sub_252CAC050()
{
  unint64_t result = qword_269C46D10;
  if (!qword_269C46D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D10);
  }
  return result;
}

unint64_t sub_252CAC0A0()
{
  unint64_t result = qword_269C46D18;
  if (!qword_269C46D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D18);
  }
  return result;
}

unint64_t sub_252CAC0F0()
{
  unint64_t result = qword_269C46D20;
  if (!qword_269C46D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D20);
  }
  return result;
}

unint64_t sub_252CAC140()
{
  unint64_t result = qword_269C46D28;
  if (!qword_269C46D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D28);
  }
  return result;
}

unint64_t sub_252CAC190()
{
  unint64_t result = qword_269C46D30;
  if (!qword_269C46D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D30);
  }
  return result;
}

unint64_t sub_252CAC1E0()
{
  unint64_t result = qword_269C46D38;
  if (!qword_269C46D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D38);
  }
  return result;
}

unint64_t sub_252CAC230()
{
  unint64_t result = qword_269C46D40;
  if (!qword_269C46D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D40);
  }
  return result;
}

unint64_t sub_252CAC280()
{
  unint64_t result = qword_269C46D48;
  if (!qword_269C46D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D48);
  }
  return result;
}

unint64_t sub_252CAC2D0()
{
  unint64_t result = qword_269C46D50;
  if (!qword_269C46D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D50);
  }
  return result;
}

unint64_t sub_252CAC320()
{
  unint64_t result = qword_269C46D58;
  if (!qword_269C46D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D58);
  }
  return result;
}

unint64_t sub_252CAC370()
{
  unint64_t result = qword_269C46D60;
  if (!qword_269C46D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D60);
  }
  return result;
}

unint64_t sub_252CAC3C0()
{
  unint64_t result = qword_269C46D68;
  if (!qword_269C46D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D68);
  }
  return result;
}

unint64_t sub_252CAC410()
{
  unint64_t result = qword_269C46D70;
  if (!qword_269C46D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D70);
  }
  return result;
}

unint64_t sub_252CAC460()
{
  unint64_t result = qword_269C46D78;
  if (!qword_269C46D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D78);
  }
  return result;
}

unint64_t sub_252CAC4B0()
{
  unint64_t result = qword_269C46D80;
  if (!qword_269C46D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D80);
  }
  return result;
}

unint64_t sub_252CAC500()
{
  unint64_t result = qword_269C46D88;
  if (!qword_269C46D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D88);
  }
  return result;
}

unint64_t sub_252CAC550()
{
  unint64_t result = qword_269C46D90;
  if (!qword_269C46D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D90);
  }
  return result;
}

unint64_t sub_252CAC5A0()
{
  unint64_t result = qword_269C46D98;
  if (!qword_269C46D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46D98);
  }
  return result;
}

unint64_t sub_252CAC5F0()
{
  unint64_t result = qword_269C46DA0;
  if (!qword_269C46DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DA0);
  }
  return result;
}

unint64_t sub_252CAC640()
{
  unint64_t result = qword_269C46DA8;
  if (!qword_269C46DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DA8);
  }
  return result;
}

unint64_t sub_252CAC690()
{
  unint64_t result = qword_269C46DB0;
  if (!qword_269C46DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DB0);
  }
  return result;
}

unint64_t sub_252CAC6E0()
{
  unint64_t result = qword_269C46DB8;
  if (!qword_269C46DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DB8);
  }
  return result;
}

unint64_t sub_252CAC730()
{
  unint64_t result = qword_269C46DC0;
  if (!qword_269C46DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DC0);
  }
  return result;
}

unint64_t sub_252CAC780()
{
  unint64_t result = qword_269C46DC8;
  if (!qword_269C46DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DC8);
  }
  return result;
}

unint64_t sub_252CAC7D0()
{
  unint64_t result = qword_269C46DD0;
  if (!qword_269C46DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DD0);
  }
  return result;
}

unint64_t sub_252CAC820()
{
  unint64_t result = qword_269C46DD8;
  if (!qword_269C46DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DD8);
  }
  return result;
}

unint64_t sub_252CAC870()
{
  unint64_t result = qword_269C46DE0;
  if (!qword_269C46DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DE0);
  }
  return result;
}

unint64_t sub_252CAC8C0()
{
  unint64_t result = qword_269C46DE8;
  if (!qword_269C46DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DE8);
  }
  return result;
}

unint64_t sub_252CAC910()
{
  unint64_t result = qword_269C46DF0;
  if (!qword_269C46DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DF0);
  }
  return result;
}

unint64_t sub_252CAC960()
{
  unint64_t result = qword_269C46DF8;
  if (!qword_269C46DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46DF8);
  }
  return result;
}

unint64_t sub_252CAC9B0()
{
  unint64_t result = qword_269C46E00;
  if (!qword_269C46E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E00);
  }
  return result;
}

unint64_t sub_252CACA00()
{
  unint64_t result = qword_269C46E08;
  if (!qword_269C46E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E08);
  }
  return result;
}

unint64_t sub_252CACA50()
{
  unint64_t result = qword_269C46E10;
  if (!qword_269C46E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E10);
  }
  return result;
}

unint64_t sub_252CACAA0()
{
  unint64_t result = qword_269C46E18;
  if (!qword_269C46E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E18);
  }
  return result;
}

unint64_t sub_252CACAF0()
{
  unint64_t result = qword_269C46E20;
  if (!qword_269C46E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E20);
  }
  return result;
}

unint64_t sub_252CACB40()
{
  unint64_t result = qword_269C46E28;
  if (!qword_269C46E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E28);
  }
  return result;
}

unint64_t sub_252CACB90()
{
  unint64_t result = qword_269C46E30;
  if (!qword_269C46E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E30);
  }
  return result;
}

unint64_t sub_252CACBE0()
{
  unint64_t result = qword_269C46E38;
  if (!qword_269C46E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E38);
  }
  return result;
}

unint64_t sub_252CACC30()
{
  unint64_t result = qword_269C46E40;
  if (!qword_269C46E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E40);
  }
  return result;
}

unint64_t sub_252CACC80()
{
  unint64_t result = qword_269C46E48;
  if (!qword_269C46E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E48);
  }
  return result;
}

unint64_t sub_252CACCD0()
{
  unint64_t result = qword_269C46E50;
  if (!qword_269C46E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E50);
  }
  return result;
}

unint64_t sub_252CACD20()
{
  unint64_t result = qword_269C46E58;
  if (!qword_269C46E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E58);
  }
  return result;
}

unint64_t sub_252CACD70()
{
  unint64_t result = qword_269C46E60;
  if (!qword_269C46E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E60);
  }
  return result;
}

unint64_t sub_252CACDC0()
{
  unint64_t result = qword_269C46E68;
  if (!qword_269C46E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E68);
  }
  return result;
}

unint64_t sub_252CACE10()
{
  unint64_t result = qword_269C46E70;
  if (!qword_269C46E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E70);
  }
  return result;
}

unint64_t sub_252CACE60()
{
  unint64_t result = qword_269C46E78;
  if (!qword_269C46E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E78);
  }
  return result;
}

unint64_t sub_252CACEB0()
{
  unint64_t result = qword_269C46E80;
  if (!qword_269C46E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E80);
  }
  return result;
}

unint64_t sub_252CACF00()
{
  unint64_t result = qword_269C46E88;
  if (!qword_269C46E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E88);
  }
  return result;
}

unint64_t sub_252CACF50()
{
  unint64_t result = qword_269C46E90;
  if (!qword_269C46E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E90);
  }
  return result;
}

unint64_t sub_252CACFA0()
{
  unint64_t result = qword_269C46E98;
  if (!qword_269C46E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46E98);
  }
  return result;
}

unint64_t sub_252CACFF0()
{
  unint64_t result = qword_269C46EA0;
  if (!qword_269C46EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EA0);
  }
  return result;
}

unint64_t sub_252CAD040()
{
  unint64_t result = qword_269C46EA8;
  if (!qword_269C46EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EA8);
  }
  return result;
}

unint64_t sub_252CAD090()
{
  unint64_t result = qword_269C46EB0;
  if (!qword_269C46EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EB0);
  }
  return result;
}

unint64_t sub_252CAD0E0()
{
  unint64_t result = qword_269C46EB8;
  if (!qword_269C46EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EB8);
  }
  return result;
}

unint64_t sub_252CAD130()
{
  unint64_t result = qword_269C46EC0;
  if (!qword_269C46EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EC0);
  }
  return result;
}

unint64_t sub_252CAD180()
{
  unint64_t result = qword_269C46EC8;
  if (!qword_269C46EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EC8);
  }
  return result;
}

unint64_t sub_252CAD1D0()
{
  unint64_t result = qword_269C46ED0;
  if (!qword_269C46ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46ED0);
  }
  return result;
}

unint64_t sub_252CAD220()
{
  unint64_t result = qword_269C46ED8;
  if (!qword_269C46ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46ED8);
  }
  return result;
}

unint64_t sub_252CAD270()
{
  unint64_t result = qword_269C46EE0;
  if (!qword_269C46EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EE0);
  }
  return result;
}

unint64_t sub_252CAD2C0()
{
  unint64_t result = qword_269C46EE8;
  if (!qword_269C46EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EE8);
  }
  return result;
}

unint64_t sub_252CAD310()
{
  unint64_t result = qword_269C46EF0;
  if (!qword_269C46EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EF0);
  }
  return result;
}

unint64_t sub_252CAD360()
{
  unint64_t result = qword_269C46EF8;
  if (!qword_269C46EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46EF8);
  }
  return result;
}

unint64_t sub_252CAD3B0()
{
  unint64_t result = qword_269C46F00;
  if (!qword_269C46F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F00);
  }
  return result;
}

unint64_t sub_252CAD400()
{
  unint64_t result = qword_269C46F08;
  if (!qword_269C46F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F08);
  }
  return result;
}

unint64_t sub_252CAD450()
{
  unint64_t result = qword_269C46F10;
  if (!qword_269C46F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F10);
  }
  return result;
}

unint64_t sub_252CAD4A0()
{
  unint64_t result = qword_269C46F18;
  if (!qword_269C46F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F18);
  }
  return result;
}

unint64_t sub_252CAD4F0()
{
  unint64_t result = qword_269C46F20;
  if (!qword_269C46F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F20);
  }
  return result;
}

unint64_t sub_252CAD540()
{
  unint64_t result = qword_269C46F28;
  if (!qword_269C46F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F28);
  }
  return result;
}

unint64_t sub_252CAD590()
{
  unint64_t result = qword_269C46F30;
  if (!qword_269C46F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F30);
  }
  return result;
}

unint64_t sub_252CAD5E0()
{
  unint64_t result = qword_269C46F38;
  if (!qword_269C46F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F38);
  }
  return result;
}

unint64_t sub_252CAD630()
{
  unint64_t result = qword_269C46F40;
  if (!qword_269C46F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F40);
  }
  return result;
}

unint64_t sub_252CAD680()
{
  unint64_t result = qword_269C46F48;
  if (!qword_269C46F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F48);
  }
  return result;
}

unint64_t sub_252CAD6D0()
{
  unint64_t result = qword_269C46F50;
  if (!qword_269C46F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F50);
  }
  return result;
}

unint64_t sub_252CAD720()
{
  unint64_t result = qword_269C46F58;
  if (!qword_269C46F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F58);
  }
  return result;
}

unint64_t sub_252CAD770()
{
  unint64_t result = qword_269C46F60;
  if (!qword_269C46F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F60);
  }
  return result;
}

unint64_t sub_252CAD7C0()
{
  unint64_t result = qword_269C46F68;
  if (!qword_269C46F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F68);
  }
  return result;
}

unint64_t sub_252CAD810()
{
  unint64_t result = qword_269C46F70;
  if (!qword_269C46F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F70);
  }
  return result;
}

unint64_t sub_252CAD860()
{
  unint64_t result = qword_269C46F78;
  if (!qword_269C46F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F78);
  }
  return result;
}

unint64_t sub_252CAD8B0()
{
  unint64_t result = qword_269C46F80;
  if (!qword_269C46F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F80);
  }
  return result;
}

unint64_t sub_252CAD900()
{
  unint64_t result = qword_269C46F88;
  if (!qword_269C46F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F88);
  }
  return result;
}

unint64_t sub_252CAD950()
{
  unint64_t result = qword_269C46F90;
  if (!qword_269C46F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F90);
  }
  return result;
}

unint64_t sub_252CAD9A0()
{
  unint64_t result = qword_269C46F98;
  if (!qword_269C46F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46F98);
  }
  return result;
}

unint64_t sub_252CAD9F0()
{
  unint64_t result = qword_269C46FA0;
  if (!qword_269C46FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FA0);
  }
  return result;
}

unint64_t sub_252CADA40()
{
  unint64_t result = qword_269C46FA8;
  if (!qword_269C46FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FA8);
  }
  return result;
}

unint64_t sub_252CADA90()
{
  unint64_t result = qword_269C46FB0;
  if (!qword_269C46FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FB0);
  }
  return result;
}

unint64_t sub_252CADAE0()
{
  unint64_t result = qword_269C46FB8;
  if (!qword_269C46FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FB8);
  }
  return result;
}

unint64_t sub_252CADB30()
{
  unint64_t result = qword_269C46FC0;
  if (!qword_269C46FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FC0);
  }
  return result;
}

unint64_t sub_252CADB80()
{
  unint64_t result = qword_269C46FC8;
  if (!qword_269C46FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FC8);
  }
  return result;
}

unint64_t sub_252CADBD0()
{
  unint64_t result = qword_269C46FD0;
  if (!qword_269C46FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FD0);
  }
  return result;
}

unint64_t sub_252CADC20()
{
  unint64_t result = qword_269C46FD8;
  if (!qword_269C46FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FD8);
  }
  return result;
}

unint64_t sub_252CADC70()
{
  unint64_t result = qword_269C46FE0;
  if (!qword_269C46FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FE0);
  }
  return result;
}

unint64_t sub_252CADCC0()
{
  unint64_t result = qword_269C46FE8;
  if (!qword_269C46FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FE8);
  }
  return result;
}

unint64_t sub_252CADD10()
{
  unint64_t result = qword_269C46FF0;
  if (!qword_269C46FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FF0);
  }
  return result;
}

unint64_t sub_252CADD60()
{
  unint64_t result = qword_269C46FF8;
  if (!qword_269C46FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C46FF8);
  }
  return result;
}

unint64_t sub_252CADDB0()
{
  unint64_t result = qword_269C47000;
  if (!qword_269C47000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47000);
  }
  return result;
}

unint64_t sub_252CADE00()
{
  unint64_t result = qword_269C47008;
  if (!qword_269C47008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47008);
  }
  return result;
}

unint64_t sub_252CADE50()
{
  unint64_t result = qword_269C47010;
  if (!qword_269C47010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47010);
  }
  return result;
}

unint64_t sub_252CADEA0()
{
  unint64_t result = qword_269C47018;
  if (!qword_269C47018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47018);
  }
  return result;
}

unint64_t sub_252CADEF0()
{
  unint64_t result = qword_269C47020;
  if (!qword_269C47020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47020);
  }
  return result;
}

unint64_t sub_252CADF40()
{
  unint64_t result = qword_269C47028;
  if (!qword_269C47028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47028);
  }
  return result;
}

unint64_t sub_252CADF90()
{
  unint64_t result = qword_269C47030;
  if (!qword_269C47030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47030);
  }
  return result;
}

unint64_t sub_252CADFE0()
{
  unint64_t result = qword_269C47038;
  if (!qword_269C47038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47038);
  }
  return result;
}

unint64_t sub_252CAE030()
{
  unint64_t result = qword_269C47040;
  if (!qword_269C47040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47040);
  }
  return result;
}

unint64_t sub_252CAE080()
{
  unint64_t result = qword_269C47048;
  if (!qword_269C47048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47048);
  }
  return result;
}

unint64_t sub_252CAE0D0()
{
  unint64_t result = qword_269C47050;
  if (!qword_269C47050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47050);
  }
  return result;
}

unint64_t sub_252CAE120()
{
  unint64_t result = qword_269C47058;
  if (!qword_269C47058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47058);
  }
  return result;
}

unint64_t sub_252CAE170()
{
  unint64_t result = qword_269C47060;
  if (!qword_269C47060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47060);
  }
  return result;
}

unint64_t sub_252CAE1C0()
{
  unint64_t result = qword_269C47068;
  if (!qword_269C47068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47068);
  }
  return result;
}

unint64_t sub_252CAE210()
{
  unint64_t result = qword_269C47070;
  if (!qword_269C47070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47070);
  }
  return result;
}

unint64_t sub_252CAE260()
{
  unint64_t result = qword_269C47078;
  if (!qword_269C47078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47078);
  }
  return result;
}

unint64_t sub_252CAE2B0()
{
  unint64_t result = qword_269C47080;
  if (!qword_269C47080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47080);
  }
  return result;
}

unint64_t sub_252CAE300()
{
  unint64_t result = qword_269C47088;
  if (!qword_269C47088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47088);
  }
  return result;
}

unint64_t sub_252CAE350()
{
  unint64_t result = qword_269C47090;
  if (!qword_269C47090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47090);
  }
  return result;
}

unint64_t sub_252CAE3A0()
{
  unint64_t result = qword_269C47098;
  if (!qword_269C47098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47098);
  }
  return result;
}

unint64_t sub_252CAE3F0()
{
  unint64_t result = qword_269C470A0;
  if (!qword_269C470A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470A0);
  }
  return result;
}

unint64_t sub_252CAE440()
{
  unint64_t result = qword_269C470A8;
  if (!qword_269C470A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470A8);
  }
  return result;
}

unint64_t sub_252CAE490()
{
  unint64_t result = qword_269C470B0;
  if (!qword_269C470B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470B0);
  }
  return result;
}

unint64_t sub_252CAE4E0()
{
  unint64_t result = qword_269C470B8;
  if (!qword_269C470B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470B8);
  }
  return result;
}

unint64_t sub_252CAE530()
{
  unint64_t result = qword_269C470C0;
  if (!qword_269C470C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470C0);
  }
  return result;
}

unint64_t sub_252CAE580()
{
  unint64_t result = qword_269C470C8;
  if (!qword_269C470C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470C8);
  }
  return result;
}

unint64_t sub_252CAE5D0()
{
  unint64_t result = qword_269C470D0;
  if (!qword_269C470D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470D0);
  }
  return result;
}

unint64_t sub_252CAE620()
{
  unint64_t result = qword_269C470D8;
  if (!qword_269C470D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470D8);
  }
  return result;
}

unint64_t sub_252CAE670()
{
  unint64_t result = qword_269C470E0;
  if (!qword_269C470E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470E0);
  }
  return result;
}

unint64_t sub_252CAE6C0()
{
  unint64_t result = qword_269C470E8;
  if (!qword_269C470E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470E8);
  }
  return result;
}

unint64_t sub_252CAE710()
{
  unint64_t result = qword_269C470F0;
  if (!qword_269C470F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470F0);
  }
  return result;
}

unint64_t sub_252CAE760()
{
  unint64_t result = qword_269C470F8;
  if (!qword_269C470F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C470F8);
  }
  return result;
}

unint64_t sub_252CAE7B0()
{
  unint64_t result = qword_269C47100;
  if (!qword_269C47100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47100);
  }
  return result;
}

unint64_t sub_252CAE800()
{
  unint64_t result = qword_269C47108;
  if (!qword_269C47108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47108);
  }
  return result;
}

unint64_t sub_252CAE850()
{
  unint64_t result = qword_269C47110;
  if (!qword_269C47110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47110);
  }
  return result;
}

unint64_t sub_252CAE8A0()
{
  unint64_t result = qword_269C47118;
  if (!qword_269C47118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47118);
  }
  return result;
}

unint64_t sub_252CAE8F0()
{
  unint64_t result = qword_269C47120;
  if (!qword_269C47120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47120);
  }
  return result;
}

unint64_t sub_252CAE940()
{
  unint64_t result = qword_269C47128;
  if (!qword_269C47128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47128);
  }
  return result;
}

unint64_t sub_252CAE990()
{
  unint64_t result = qword_269C47130;
  if (!qword_269C47130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47130);
  }
  return result;
}

unint64_t sub_252CAE9E0()
{
  unint64_t result = qword_269C47138;
  if (!qword_269C47138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47138);
  }
  return result;
}

unint64_t sub_252CAEA30()
{
  unint64_t result = qword_269C47140;
  if (!qword_269C47140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47140);
  }
  return result;
}

unint64_t sub_252CAEA80()
{
  unint64_t result = qword_269C47148;
  if (!qword_269C47148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47148);
  }
  return result;
}

unint64_t sub_252CAEAD0()
{
  unint64_t result = qword_269C47150;
  if (!qword_269C47150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47150);
  }
  return result;
}

unint64_t sub_252CAEB20()
{
  unint64_t result = qword_269C47158;
  if (!qword_269C47158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47158);
  }
  return result;
}

unint64_t sub_252CAEB70()
{
  unint64_t result = qword_269C47160;
  if (!qword_269C47160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47160);
  }
  return result;
}

unint64_t sub_252CAEBC0()
{
  unint64_t result = qword_269C47168;
  if (!qword_269C47168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47168);
  }
  return result;
}

unint64_t sub_252CAEC10()
{
  unint64_t result = qword_269C47170;
  if (!qword_269C47170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47170);
  }
  return result;
}

unint64_t sub_252CAEC60()
{
  unint64_t result = qword_269C47178;
  if (!qword_269C47178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47178);
  }
  return result;
}

unint64_t sub_252CAECB0()
{
  unint64_t result = qword_269C47180;
  if (!qword_269C47180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47180);
  }
  return result;
}

unint64_t sub_252CAED00()
{
  unint64_t result = qword_269C47188;
  if (!qword_269C47188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47188);
  }
  return result;
}

unint64_t sub_252CAED50()
{
  unint64_t result = qword_269C47190;
  if (!qword_269C47190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47190);
  }
  return result;
}

unint64_t sub_252CAEDA0()
{
  unint64_t result = qword_269C47198;
  if (!qword_269C47198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47198);
  }
  return result;
}

unint64_t sub_252CAEDF0()
{
  unint64_t result = qword_269C471A0;
  if (!qword_269C471A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471A0);
  }
  return result;
}

unint64_t sub_252CAEE40()
{
  unint64_t result = qword_269C471A8;
  if (!qword_269C471A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471A8);
  }
  return result;
}

unint64_t sub_252CAEE90()
{
  unint64_t result = qword_269C471B0;
  if (!qword_269C471B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471B0);
  }
  return result;
}

unint64_t sub_252CAEEE0()
{
  unint64_t result = qword_269C471B8;
  if (!qword_269C471B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471B8);
  }
  return result;
}

unint64_t sub_252CAEF30()
{
  unint64_t result = qword_269C471C0;
  if (!qword_269C471C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471C0);
  }
  return result;
}

unint64_t sub_252CAEF80()
{
  unint64_t result = qword_269C471C8;
  if (!qword_269C471C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471C8);
  }
  return result;
}

unint64_t sub_252CAEFD0()
{
  unint64_t result = qword_269C471D0;
  if (!qword_269C471D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471D0);
  }
  return result;
}

unint64_t sub_252CAF020()
{
  unint64_t result = qword_269C471D8;
  if (!qword_269C471D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471D8);
  }
  return result;
}

unint64_t sub_252CAF070()
{
  unint64_t result = qword_269C471E0;
  if (!qword_269C471E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471E0);
  }
  return result;
}

unint64_t sub_252CAF0C0()
{
  unint64_t result = qword_269C471E8;
  if (!qword_269C471E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471E8);
  }
  return result;
}

unint64_t sub_252CAF110()
{
  unint64_t result = qword_269C471F0;
  if (!qword_269C471F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471F0);
  }
  return result;
}

unint64_t sub_252CAF160()
{
  unint64_t result = qword_269C471F8;
  if (!qword_269C471F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C471F8);
  }
  return result;
}

unint64_t sub_252CAF1B0()
{
  unint64_t result = qword_269C47200;
  if (!qword_269C47200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47200);
  }
  return result;
}

unint64_t sub_252CAF200()
{
  unint64_t result = qword_269C47208;
  if (!qword_269C47208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47208);
  }
  return result;
}

unint64_t sub_252CAF250()
{
  unint64_t result = qword_269C47210;
  if (!qword_269C47210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47210);
  }
  return result;
}

unint64_t sub_252CAF2A0()
{
  unint64_t result = qword_269C47218;
  if (!qword_269C47218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47218);
  }
  return result;
}

unint64_t sub_252CAF2F0()
{
  unint64_t result = qword_269C47220;
  if (!qword_269C47220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47220);
  }
  return result;
}

unint64_t sub_252CAF340()
{
  unint64_t result = qword_269C47228;
  if (!qword_269C47228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47228);
  }
  return result;
}

unint64_t sub_252CAF390()
{
  unint64_t result = qword_269C47230;
  if (!qword_269C47230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47230);
  }
  return result;
}

unint64_t sub_252CAF3E0()
{
  unint64_t result = qword_269C47238;
  if (!qword_269C47238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47238);
  }
  return result;
}

unint64_t sub_252CAF430()
{
  unint64_t result = qword_269C47240;
  if (!qword_269C47240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47240);
  }
  return result;
}

unint64_t sub_252CAF480()
{
  unint64_t result = qword_269C47248;
  if (!qword_269C47248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47248);
  }
  return result;
}

unint64_t sub_252CAF4D0()
{
  unint64_t result = qword_269C47250;
  if (!qword_269C47250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47250);
  }
  return result;
}

unint64_t sub_252CAF520()
{
  unint64_t result = qword_269C47258;
  if (!qword_269C47258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47258);
  }
  return result;
}

unint64_t sub_252CAF570()
{
  unint64_t result = qword_269C47260;
  if (!qword_269C47260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47260);
  }
  return result;
}

unint64_t sub_252CAF5C0()
{
  unint64_t result = qword_269C47268;
  if (!qword_269C47268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47268);
  }
  return result;
}

unint64_t sub_252CAF610()
{
  unint64_t result = qword_269C47270;
  if (!qword_269C47270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47270);
  }
  return result;
}

unint64_t sub_252CAF660()
{
  unint64_t result = qword_269C47278;
  if (!qword_269C47278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47278);
  }
  return result;
}

unint64_t sub_252CAF6B0()
{
  unint64_t result = qword_269C47280;
  if (!qword_269C47280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47280);
  }
  return result;
}

unint64_t sub_252CAF700()
{
  unint64_t result = qword_269C47288;
  if (!qword_269C47288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47288);
  }
  return result;
}

unint64_t sub_252CAF750()
{
  unint64_t result = qword_269C47290;
  if (!qword_269C47290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47290);
  }
  return result;
}

unint64_t sub_252CAF7A0()
{
  unint64_t result = qword_269C47298;
  if (!qword_269C47298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47298);
  }
  return result;
}

unint64_t sub_252CAF7F0()
{
  unint64_t result = qword_269C472A0;
  if (!qword_269C472A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472A0);
  }
  return result;
}

unint64_t sub_252CAF840()
{
  unint64_t result = qword_269C472A8;
  if (!qword_269C472A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472A8);
  }
  return result;
}

unint64_t sub_252CAF890()
{
  unint64_t result = qword_269C472B0;
  if (!qword_269C472B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472B0);
  }
  return result;
}

unint64_t sub_252CAF8E0()
{
  unint64_t result = qword_269C472B8;
  if (!qword_269C472B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472B8);
  }
  return result;
}

unint64_t sub_252CAF930()
{
  unint64_t result = qword_269C472C0;
  if (!qword_269C472C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472C0);
  }
  return result;
}

unint64_t sub_252CAF980()
{
  unint64_t result = qword_269C472C8;
  if (!qword_269C472C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472C8);
  }
  return result;
}

unint64_t sub_252CAF9D0()
{
  unint64_t result = qword_269C472D0;
  if (!qword_269C472D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472D0);
  }
  return result;
}

unint64_t sub_252CAFA20()
{
  unint64_t result = qword_269C472D8;
  if (!qword_269C472D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472D8);
  }
  return result;
}

unint64_t sub_252CAFA70()
{
  unint64_t result = qword_269C472E0;
  if (!qword_269C472E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472E0);
  }
  return result;
}

unint64_t sub_252CAFAC0()
{
  unint64_t result = qword_269C472E8;
  if (!qword_269C472E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472E8);
  }
  return result;
}

unint64_t sub_252CAFB10()
{
  unint64_t result = qword_269C472F0;
  if (!qword_269C472F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472F0);
  }
  return result;
}

unint64_t sub_252CAFB60()
{
  unint64_t result = qword_269C472F8;
  if (!qword_269C472F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C472F8);
  }
  return result;
}

unint64_t sub_252CAFBB0()
{
  unint64_t result = qword_269C47300;
  if (!qword_269C47300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47300);
  }
  return result;
}

unint64_t sub_252CAFC00()
{
  unint64_t result = qword_269C47308;
  if (!qword_269C47308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47308);
  }
  return result;
}

unint64_t sub_252CAFC50()
{
  unint64_t result = qword_269C47310;
  if (!qword_269C47310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47310);
  }
  return result;
}

unint64_t sub_252CAFCA0()
{
  unint64_t result = qword_269C47318;
  if (!qword_269C47318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47318);
  }
  return result;
}

unint64_t sub_252CAFCF0()
{
  unint64_t result = qword_269C47320;
  if (!qword_269C47320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47320);
  }
  return result;
}

unint64_t sub_252CAFD40()
{
  unint64_t result = qword_269C47328;
  if (!qword_269C47328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47328);
  }
  return result;
}

unint64_t sub_252CAFD90()
{
  unint64_t result = qword_269C47330;
  if (!qword_269C47330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47330);
  }
  return result;
}

unint64_t sub_252CAFDE0()
{
  unint64_t result = qword_269C47338;
  if (!qword_269C47338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47338);
  }
  return result;
}

unint64_t sub_252CAFE30()
{
  unint64_t result = qword_269C47340;
  if (!qword_269C47340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47340);
  }
  return result;
}

unint64_t sub_252CAFE80()
{
  unint64_t result = qword_269C47348;
  if (!qword_269C47348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47348);
  }
  return result;
}

unint64_t sub_252CAFED0()
{
  unint64_t result = qword_269C47350;
  if (!qword_269C47350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47350);
  }
  return result;
}

unint64_t sub_252CAFF20()
{
  unint64_t result = qword_269C47358;
  if (!qword_269C47358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47358);
  }
  return result;
}

unint64_t sub_252CAFF70()
{
  unint64_t result = qword_269C47360;
  if (!qword_269C47360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47360);
  }
  return result;
}

unint64_t sub_252CAFFC0()
{
  unint64_t result = qword_269C47368;
  if (!qword_269C47368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47368);
  }
  return result;
}

unint64_t sub_252CB0010()
{
  unint64_t result = qword_269C47370;
  if (!qword_269C47370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47370);
  }
  return result;
}

unint64_t sub_252CB0060()
{
  unint64_t result = qword_269C47378;
  if (!qword_269C47378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47378);
  }
  return result;
}

unint64_t sub_252CB00B0()
{
  unint64_t result = qword_269C47380;
  if (!qword_269C47380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47380);
  }
  return result;
}

unint64_t sub_252CB0100()
{
  unint64_t result = qword_269C47388;
  if (!qword_269C47388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47388);
  }
  return result;
}

unint64_t sub_252CB0150()
{
  unint64_t result = qword_269C47390;
  if (!qword_269C47390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47390);
  }
  return result;
}

unint64_t sub_252CB01A0()
{
  unint64_t result = qword_269C47398;
  if (!qword_269C47398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47398);
  }
  return result;
}

unint64_t sub_252CB01F0()
{
  unint64_t result = qword_269C473A0;
  if (!qword_269C473A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473A0);
  }
  return result;
}

unint64_t sub_252CB0240()
{
  unint64_t result = qword_269C473A8;
  if (!qword_269C473A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473A8);
  }
  return result;
}

unint64_t sub_252CB0290()
{
  unint64_t result = qword_269C473B0;
  if (!qword_269C473B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473B0);
  }
  return result;
}

unint64_t sub_252CB02E0()
{
  unint64_t result = qword_269C473B8;
  if (!qword_269C473B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473B8);
  }
  return result;
}

unint64_t sub_252CB0330()
{
  unint64_t result = qword_269C473C0;
  if (!qword_269C473C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473C0);
  }
  return result;
}

unint64_t sub_252CB0380()
{
  unint64_t result = qword_269C473C8;
  if (!qword_269C473C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473C8);
  }
  return result;
}

unint64_t sub_252CB03D0()
{
  unint64_t result = qword_269C473D0;
  if (!qword_269C473D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473D0);
  }
  return result;
}

unint64_t sub_252CB0420()
{
  unint64_t result = qword_269C473D8;
  if (!qword_269C473D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473D8);
  }
  return result;
}

unint64_t sub_252CB0470()
{
  unint64_t result = qword_269C473E0;
  if (!qword_269C473E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473E0);
  }
  return result;
}

unint64_t sub_252CB04C0()
{
  unint64_t result = qword_269C473E8;
  if (!qword_269C473E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473E8);
  }
  return result;
}

unint64_t sub_252CB0510()
{
  unint64_t result = qword_269C473F0;
  if (!qword_269C473F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473F0);
  }
  return result;
}

unint64_t sub_252CB0560()
{
  unint64_t result = qword_269C473F8;
  if (!qword_269C473F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C473F8);
  }
  return result;
}

unint64_t sub_252CB05B0()
{
  unint64_t result = qword_269C47400;
  if (!qword_269C47400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47400);
  }
  return result;
}

unint64_t sub_252CB0600()
{
  unint64_t result = qword_269C47408;
  if (!qword_269C47408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47408);
  }
  return result;
}

unint64_t sub_252CB0650()
{
  unint64_t result = qword_269C47410;
  if (!qword_269C47410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47410);
  }
  return result;
}

unint64_t sub_252CB06A0()
{
  unint64_t result = qword_269C47418;
  if (!qword_269C47418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47418);
  }
  return result;
}

unint64_t sub_252CB06F0()
{
  unint64_t result = qword_269C47420;
  if (!qword_269C47420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47420);
  }
  return result;
}

unint64_t sub_252CB0740()
{
  unint64_t result = qword_269C47428;
  if (!qword_269C47428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47428);
  }
  return result;
}

unint64_t sub_252CB0790()
{
  unint64_t result = qword_269C47430;
  if (!qword_269C47430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47430);
  }
  return result;
}

unint64_t sub_252CB07E0()
{
  unint64_t result = qword_269C47438;
  if (!qword_269C47438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47438);
  }
  return result;
}

unint64_t sub_252CB0830()
{
  unint64_t result = qword_269C47440;
  if (!qword_269C47440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47440);
  }
  return result;
}

unint64_t sub_252CB0880()
{
  unint64_t result = qword_269C47448;
  if (!qword_269C47448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47448);
  }
  return result;
}

unint64_t sub_252CB08D0()
{
  unint64_t result = qword_269C47450;
  if (!qword_269C47450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47450);
  }
  return result;
}

unint64_t sub_252CB0920()
{
  unint64_t result = qword_269C47458;
  if (!qword_269C47458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47458);
  }
  return result;
}

unint64_t sub_252CB0970()
{
  unint64_t result = qword_269C47460;
  if (!qword_269C47460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47460);
  }
  return result;
}

unint64_t sub_252CB09C0()
{
  unint64_t result = qword_269C47468;
  if (!qword_269C47468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47468);
  }
  return result;
}

unint64_t sub_252CB0A10()
{
  unint64_t result = qword_269C47470;
  if (!qword_269C47470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47470);
  }
  return result;
}

unint64_t sub_252CB0A60()
{
  unint64_t result = qword_269C47478;
  if (!qword_269C47478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47478);
  }
  return result;
}

unint64_t sub_252CB0AB0()
{
  unint64_t result = qword_269C47480;
  if (!qword_269C47480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47480);
  }
  return result;
}

unint64_t sub_252CB0B00()
{
  unint64_t result = qword_269C47488;
  if (!qword_269C47488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47488);
  }
  return result;
}

unint64_t sub_252CB0B50()
{
  unint64_t result = qword_269C47490;
  if (!qword_269C47490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47490);
  }
  return result;
}

unint64_t sub_252CB0BA0()
{
  unint64_t result = qword_269C47498;
  if (!qword_269C47498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47498);
  }
  return result;
}

unint64_t sub_252CB0BF0()
{
  unint64_t result = qword_269C474A0;
  if (!qword_269C474A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474A0);
  }
  return result;
}

unint64_t sub_252CB0C40()
{
  unint64_t result = qword_269C474A8;
  if (!qword_269C474A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474A8);
  }
  return result;
}

unint64_t sub_252CB0C90()
{
  unint64_t result = qword_269C474B0;
  if (!qword_269C474B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474B0);
  }
  return result;
}

unint64_t sub_252CB0CE0()
{
  unint64_t result = qword_269C474B8;
  if (!qword_269C474B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474B8);
  }
  return result;
}

unint64_t sub_252CB0D30()
{
  unint64_t result = qword_269C474C0;
  if (!qword_269C474C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474C0);
  }
  return result;
}

unint64_t sub_252CB0D80()
{
  unint64_t result = qword_269C474C8;
  if (!qword_269C474C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474C8);
  }
  return result;
}

unint64_t sub_252CB0DD0()
{
  unint64_t result = qword_269C474D0;
  if (!qword_269C474D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474D0);
  }
  return result;
}

unint64_t sub_252CB0E20()
{
  unint64_t result = qword_269C474D8;
  if (!qword_269C474D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474D8);
  }
  return result;
}

unint64_t sub_252CB0E70()
{
  unint64_t result = qword_269C474E0;
  if (!qword_269C474E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474E0);
  }
  return result;
}

unint64_t sub_252CB0EC0()
{
  unint64_t result = qword_269C474E8;
  if (!qword_269C474E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474E8);
  }
  return result;
}

unint64_t sub_252CB0F10()
{
  unint64_t result = qword_269C474F0;
  if (!qword_269C474F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474F0);
  }
  return result;
}

unint64_t sub_252CB0F60()
{
  unint64_t result = qword_269C474F8;
  if (!qword_269C474F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C474F8);
  }
  return result;
}

unint64_t sub_252CB0FB0()
{
  unint64_t result = qword_269C47500;
  if (!qword_269C47500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47500);
  }
  return result;
}

unint64_t sub_252CB1000()
{
  unint64_t result = qword_269C47508;
  if (!qword_269C47508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47508);
  }
  return result;
}

unint64_t sub_252CB1050()
{
  unint64_t result = qword_269C47510;
  if (!qword_269C47510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47510);
  }
  return result;
}

unint64_t sub_252CB10A0()
{
  unint64_t result = qword_269C47518;
  if (!qword_269C47518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47518);
  }
  return result;
}

unint64_t sub_252CB10F0()
{
  unint64_t result = qword_269C47520;
  if (!qword_269C47520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47520);
  }
  return result;
}

unint64_t sub_252CB1140()
{
  unint64_t result = qword_269C47528;
  if (!qword_269C47528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47528);
  }
  return result;
}

unint64_t sub_252CB1190()
{
  unint64_t result = qword_269C47530;
  if (!qword_269C47530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47530);
  }
  return result;
}

unint64_t sub_252CB11E0()
{
  unint64_t result = qword_269C47538;
  if (!qword_269C47538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47538);
  }
  return result;
}

unint64_t sub_252CB1230()
{
  unint64_t result = qword_269C47540;
  if (!qword_269C47540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47540);
  }
  return result;
}

unint64_t sub_252CB1280()
{
  unint64_t result = qword_269C47548;
  if (!qword_269C47548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47548);
  }
  return result;
}

unint64_t sub_252CB12D0()
{
  unint64_t result = qword_269C47550;
  if (!qword_269C47550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47550);
  }
  return result;
}

unint64_t sub_252CB1320()
{
  unint64_t result = qword_269C47558;
  if (!qword_269C47558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47558);
  }
  return result;
}

unint64_t sub_252CB1370()
{
  unint64_t result = qword_269C47560;
  if (!qword_269C47560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47560);
  }
  return result;
}

unint64_t sub_252CB13C0()
{
  unint64_t result = qword_269C47568;
  if (!qword_269C47568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47568);
  }
  return result;
}

unint64_t sub_252CB1410()
{
  unint64_t result = qword_269C47570;
  if (!qword_269C47570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47570);
  }
  return result;
}

unint64_t sub_252CB1460()
{
  unint64_t result = qword_269C47578;
  if (!qword_269C47578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47578);
  }
  return result;
}

unint64_t sub_252CB14B0()
{
  unint64_t result = qword_269C47580;
  if (!qword_269C47580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47580);
  }
  return result;
}

unint64_t sub_252CB1500()
{
  unint64_t result = qword_269C47588;
  if (!qword_269C47588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47588);
  }
  return result;
}

unint64_t sub_252CB1550()
{
  unint64_t result = qword_269C47590;
  if (!qword_269C47590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47590);
  }
  return result;
}

unint64_t sub_252CB15A0()
{
  unint64_t result = qword_269C47598;
  if (!qword_269C47598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47598);
  }
  return result;
}

unint64_t sub_252CB15F0()
{
  unint64_t result = qword_269C475A0;
  if (!qword_269C475A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475A0);
  }
  return result;
}

unint64_t sub_252CB1640()
{
  unint64_t result = qword_269C475A8;
  if (!qword_269C475A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475A8);
  }
  return result;
}

unint64_t sub_252CB1690()
{
  unint64_t result = qword_269C475B0;
  if (!qword_269C475B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475B0);
  }
  return result;
}

unint64_t sub_252CB16E0()
{
  unint64_t result = qword_269C475B8;
  if (!qword_269C475B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475B8);
  }
  return result;
}

unint64_t sub_252CB1730()
{
  unint64_t result = qword_269C475C0;
  if (!qword_269C475C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475C0);
  }
  return result;
}

unint64_t sub_252CB1780()
{
  unint64_t result = qword_269C475C8;
  if (!qword_269C475C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475C8);
  }
  return result;
}

unint64_t sub_252CB17D0()
{
  unint64_t result = qword_269C475D0;
  if (!qword_269C475D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475D0);
  }
  return result;
}

unint64_t sub_252CB1820()
{
  unint64_t result = qword_269C475D8;
  if (!qword_269C475D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475D8);
  }
  return result;
}

unint64_t sub_252CB1870()
{
  unint64_t result = qword_269C475E0;
  if (!qword_269C475E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475E0);
  }
  return result;
}

unint64_t sub_252CB18C0()
{
  unint64_t result = qword_269C475E8;
  if (!qword_269C475E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475E8);
  }
  return result;
}

unint64_t sub_252CB1910()
{
  unint64_t result = qword_269C475F0;
  if (!qword_269C475F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475F0);
  }
  return result;
}

unint64_t sub_252CB1960()
{
  unint64_t result = qword_269C475F8;
  if (!qword_269C475F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C475F8);
  }
  return result;
}

unint64_t sub_252CB19B0()
{
  unint64_t result = qword_269C47600;
  if (!qword_269C47600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47600);
  }
  return result;
}

unint64_t sub_252CB1A00()
{
  unint64_t result = qword_269C47608;
  if (!qword_269C47608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47608);
  }
  return result;
}

unint64_t sub_252CB1A50()
{
  unint64_t result = qword_269C47610;
  if (!qword_269C47610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47610);
  }
  return result;
}

unint64_t sub_252CB1AA0()
{
  unint64_t result = qword_269C47618;
  if (!qword_269C47618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47618);
  }
  return result;
}

unint64_t sub_252CB1AF0()
{
  unint64_t result = qword_269C47620;
  if (!qword_269C47620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47620);
  }
  return result;
}

unint64_t sub_252CB1B40()
{
  unint64_t result = qword_269C47628;
  if (!qword_269C47628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47628);
  }
  return result;
}

unint64_t sub_252CB1B90()
{
  unint64_t result = qword_269C47630;
  if (!qword_269C47630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47630);
  }
  return result;
}

unint64_t sub_252CB1BE0()
{
  unint64_t result = qword_269C47638;
  if (!qword_269C47638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47638);
  }
  return result;
}

unint64_t sub_252CB1C30()
{
  unint64_t result = qword_269C47640;
  if (!qword_269C47640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47640);
  }
  return result;
}

unint64_t sub_252CB1C80()
{
  unint64_t result = qword_269C47648;
  if (!qword_269C47648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47648);
  }
  return result;
}

unint64_t sub_252CB1CD0()
{
  unint64_t result = qword_269C47650;
  if (!qword_269C47650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47650);
  }
  return result;
}

unint64_t sub_252CB1D20()
{
  unint64_t result = qword_269C47658;
  if (!qword_269C47658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47658);
  }
  return result;
}

unint64_t sub_252CB1D70()
{
  unint64_t result = qword_269C47660;
  if (!qword_269C47660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47660);
  }
  return result;
}

unint64_t sub_252CB1DC0()
{
  unint64_t result = qword_269C47668;
  if (!qword_269C47668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47668);
  }
  return result;
}

unint64_t sub_252CB1E10()
{
  unint64_t result = qword_269C47670;
  if (!qword_269C47670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47670);
  }
  return result;
}

unint64_t sub_252CB1E60()
{
  unint64_t result = qword_269C47678;
  if (!qword_269C47678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47678);
  }
  return result;
}

unint64_t sub_252CB1EB0()
{
  unint64_t result = qword_269C47680;
  if (!qword_269C47680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47680);
  }
  return result;
}

unint64_t sub_252CB1F00()
{
  unint64_t result = qword_269C47688;
  if (!qword_269C47688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47688);
  }
  return result;
}

unint64_t sub_252CB1F50()
{
  unint64_t result = qword_269C47690;
  if (!qword_269C47690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47690);
  }
  return result;
}

unint64_t sub_252CB1FA0()
{
  unint64_t result = qword_269C47698;
  if (!qword_269C47698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47698);
  }
  return result;
}

unint64_t sub_252CB1FF0()
{
  unint64_t result = qword_269C476A0;
  if (!qword_269C476A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476A0);
  }
  return result;
}

unint64_t sub_252CB2040()
{
  unint64_t result = qword_269C476A8;
  if (!qword_269C476A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476A8);
  }
  return result;
}

unint64_t sub_252CB2090()
{
  unint64_t result = qword_269C476B0;
  if (!qword_269C476B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476B0);
  }
  return result;
}

unint64_t sub_252CB20E0()
{
  unint64_t result = qword_269C476B8;
  if (!qword_269C476B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476B8);
  }
  return result;
}

unint64_t sub_252CB2130()
{
  unint64_t result = qword_269C476C0;
  if (!qword_269C476C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476C0);
  }
  return result;
}

unint64_t sub_252CB2180()
{
  unint64_t result = qword_269C476C8;
  if (!qword_269C476C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476C8);
  }
  return result;
}

unint64_t sub_252CB21D0()
{
  unint64_t result = qword_269C476D0;
  if (!qword_269C476D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476D0);
  }
  return result;
}

unint64_t sub_252CB2220()
{
  unint64_t result = qword_269C476D8;
  if (!qword_269C476D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476D8);
  }
  return result;
}

unint64_t sub_252CB2270()
{
  unint64_t result = qword_269C476E0;
  if (!qword_269C476E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476E0);
  }
  return result;
}

unint64_t sub_252CB22C0()
{
  unint64_t result = qword_269C476E8;
  if (!qword_269C476E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476E8);
  }
  return result;
}

unint64_t sub_252CB2310()
{
  unint64_t result = qword_269C476F0;
  if (!qword_269C476F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476F0);
  }
  return result;
}

unint64_t sub_252CB2360()
{
  unint64_t result = qword_269C476F8;
  if (!qword_269C476F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C476F8);
  }
  return result;
}

unint64_t sub_252CB23B0()
{
  unint64_t result = qword_269C47700;
  if (!qword_269C47700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47700);
  }
  return result;
}

unint64_t sub_252CB2400()
{
  unint64_t result = qword_269C47708;
  if (!qword_269C47708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47708);
  }
  return result;
}

unint64_t sub_252CB2450()
{
  unint64_t result = qword_269C47710;
  if (!qword_269C47710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47710);
  }
  return result;
}

unint64_t sub_252CB24A0()
{
  unint64_t result = qword_269C47718;
  if (!qword_269C47718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47718);
  }
  return result;
}

unint64_t sub_252CB24F0()
{
  unint64_t result = qword_269C47720;
  if (!qword_269C47720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47720);
  }
  return result;
}

unint64_t sub_252CB2540()
{
  unint64_t result = qword_269C47728;
  if (!qword_269C47728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47728);
  }
  return result;
}

unint64_t sub_252CB2590()
{
  unint64_t result = qword_269C47730;
  if (!qword_269C47730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47730);
  }
  return result;
}

unint64_t sub_252CB25E0()
{
  unint64_t result = qword_269C47738;
  if (!qword_269C47738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47738);
  }
  return result;
}

unint64_t sub_252CB2630()
{
  unint64_t result = qword_26B2342A0;
  if (!qword_26B2342A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2342A0);
  }
  return result;
}

unint64_t sub_252CB2680()
{
  unint64_t result = qword_26B234298;
  if (!qword_26B234298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234298);
  }
  return result;
}

unint64_t sub_252CB26D0()
{
  unint64_t result = qword_26B2342E8;
  if (!qword_26B2342E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2342E8);
  }
  return result;
}

unint64_t sub_252CB2720()
{
  unint64_t result = qword_26B2342E0;
  if (!qword_26B2342E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2342E0);
  }
  return result;
}

unint64_t sub_252CB2770()
{
  unint64_t result = qword_26B234418;
  if (!qword_26B234418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234418);
  }
  return result;
}

unint64_t sub_252CB27C0()
{
  unint64_t result = qword_26B234410;
  if (!qword_26B234410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234410);
  }
  return result;
}

unint64_t sub_252CB2810()
{
  unint64_t result = qword_26B2342D0;
  if (!qword_26B2342D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2342D0);
  }
  return result;
}

unint64_t sub_252CB2860()
{
  unint64_t result = qword_26B2342C8;
  if (!qword_26B2342C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2342C8);
  }
  return result;
}

unint64_t sub_252CB28B0()
{
  unint64_t result = qword_26B234598;
  if (!qword_26B234598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234598);
  }
  return result;
}

unint64_t sub_252CB2900()
{
  unint64_t result = qword_26B234590;
  if (!qword_26B234590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234590);
  }
  return result;
}

unint64_t sub_252CB2950()
{
  unint64_t result = qword_26B234280;
  if (!qword_26B234280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234280);
  }
  return result;
}

unint64_t sub_252CB29A0()
{
  unint64_t result = qword_26B234278;
  if (!qword_26B234278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234278);
  }
  return result;
}

unint64_t sub_252CB29F0()
{
  unint64_t result = qword_26B234568;
  if (!qword_26B234568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234568);
  }
  return result;
}

unint64_t sub_252CB2A40()
{
  unint64_t result = qword_26B234560;
  if (!qword_26B234560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234560);
  }
  return result;
}

unint64_t sub_252CB2A90()
{
  unint64_t result = qword_26B234290;
  if (!qword_26B234290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234290);
  }
  return result;
}

unint64_t sub_252CB2AE0()
{
  unint64_t result = qword_26B234288;
  if (!qword_26B234288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234288);
  }
  return result;
}

unint64_t sub_252CB2B30()
{
  unint64_t result = qword_26B234348;
  if (!qword_26B234348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234348);
  }
  return result;
}

unint64_t sub_252CB2B80()
{
  unint64_t result = qword_26B234340;
  if (!qword_26B234340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234340);
  }
  return result;
}

unint64_t sub_252CB2BD0()
{
  unint64_t result = qword_26B234248;
  if (!qword_26B234248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234248);
  }
  return result;
}

unint64_t sub_252CB2C20()
{
  unint64_t result = qword_26B234240;
  if (!qword_26B234240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234240);
  }
  return result;
}

unint64_t sub_252CB2C70()
{
  unint64_t result = qword_26B2343E8;
  if (!qword_26B2343E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343E8);
  }
  return result;
}

unint64_t sub_252CB2CC0()
{
  unint64_t result = qword_26B2343E0;
  if (!qword_26B2343E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343E0);
  }
  return result;
}

unint64_t sub_252CB2D10()
{
  unint64_t result = qword_26B2343D8;
  if (!qword_26B2343D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343D8);
  }
  return result;
}

unint64_t sub_252CB2D60()
{
  unint64_t result = qword_26B2343D0;
  if (!qword_26B2343D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343D0);
  }
  return result;
}

unint64_t sub_252CB2DB0()
{
  unint64_t result = qword_26B2344C8;
  if (!qword_26B2344C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344C8);
  }
  return result;
}

unint64_t sub_252CB2E00()
{
  unint64_t result = qword_26B2344C0;
  if (!qword_26B2344C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344C0);
  }
  return result;
}

unint64_t sub_252CB2E50()
{
  unint64_t result = qword_26B234548;
  if (!qword_26B234548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234548);
  }
  return result;
}

unint64_t sub_252CB2EA0()
{
  unint64_t result = qword_26B234540;
  if (!qword_26B234540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234540);
  }
  return result;
}

unint64_t sub_252CB2EF0()
{
  unint64_t result = qword_26B2344B8;
  if (!qword_26B2344B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344B8);
  }
  return result;
}

unint64_t sub_252CB2F40()
{
  unint64_t result = qword_26B2344B0;
  if (!qword_26B2344B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344B0);
  }
  return result;
}

unint64_t sub_252CB2F90()
{
  unint64_t result = qword_26B234428;
  if (!qword_26B234428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234428);
  }
  return result;
}

unint64_t sub_252CB2FE0()
{
  unint64_t result = qword_26B234420;
  if (!qword_26B234420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234420);
  }
  return result;
}

unint64_t sub_252CB3030()
{
  unint64_t result = qword_26B234358;
  if (!qword_26B234358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234358);
  }
  return result;
}

unint64_t sub_252CB3080()
{
  unint64_t result = qword_26B234350;
  if (!qword_26B234350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234350);
  }
  return result;
}

unint64_t sub_252CB30D0()
{
  unint64_t result = qword_26B234458;
  if (!qword_26B234458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234458);
  }
  return result;
}

unint64_t sub_252CB3120()
{
  unint64_t result = qword_26B234450;
  if (!qword_26B234450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234450);
  }
  return result;
}

unint64_t sub_252CB3170()
{
  unint64_t result = qword_26B234368;
  if (!qword_26B234368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234368);
  }
  return result;
}

unint64_t sub_252CB31C0()
{
  unint64_t result = qword_26B234360;
  if (!qword_26B234360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234360);
  }
  return result;
}

unint64_t sub_252CB3210()
{
  unint64_t result = qword_26B234408;
  if (!qword_26B234408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234408);
  }
  return result;
}

unint64_t sub_252CB3260()
{
  unint64_t result = qword_26B234400;
  if (!qword_26B234400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234400);
  }
  return result;
}

unint64_t sub_252CB32B0()
{
  unint64_t result = qword_26B234528;
  if (!qword_26B234528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234528);
  }
  return result;
}

unint64_t sub_252CB3300()
{
  unint64_t result = qword_26B234520;
  if (!qword_26B234520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234520);
  }
  return result;
}

unint64_t sub_252CB3350()
{
  unint64_t result = qword_26B2344F8;
  if (!qword_26B2344F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344F8);
  }
  return result;
}

unint64_t sub_252CB33A0()
{
  unint64_t result = qword_26B2344F0;
  if (!qword_26B2344F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344F0);
  }
  return result;
}

unint64_t sub_252CB33F0()
{
  unint64_t result = qword_26B2343B8;
  if (!qword_26B2343B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343B8);
  }
  return result;
}

unint64_t sub_252CB3440()
{
  unint64_t result = qword_26B2343B0;
  if (!qword_26B2343B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343B0);
  }
  return result;
}

unint64_t sub_252CB3490()
{
  unint64_t result = qword_26B2343F8;
  if (!qword_26B2343F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343F8);
  }
  return result;
}

unint64_t sub_252CB34E0()
{
  unint64_t result = qword_26B2343F0;
  if (!qword_26B2343F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343F0);
  }
  return result;
}

unint64_t sub_252CB3530()
{
  unint64_t result = qword_26B234518;
  if (!qword_26B234518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234518);
  }
  return result;
}

unint64_t sub_252CB3580()
{
  unint64_t result = qword_26B234510;
  if (!qword_26B234510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234510);
  }
  return result;
}

unint64_t sub_252CB35D0()
{
  unint64_t result = qword_26B234578;
  if (!qword_26B234578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234578);
  }
  return result;
}

unint64_t sub_252CB3620()
{
  unint64_t result = qword_26B234570;
  if (!qword_26B234570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234570);
  }
  return result;
}

unint64_t sub_252CB3670()
{
  unint64_t result = qword_26B234448;
  if (!qword_26B234448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234448);
  }
  return result;
}

unint64_t sub_252CB36C0()
{
  unint64_t result = qword_26B234440;
  if (!qword_26B234440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234440);
  }
  return result;
}

unint64_t sub_252CB3710()
{
  unint64_t result = qword_26B234488;
  if (!qword_26B234488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234488);
  }
  return result;
}

unint64_t sub_252CB3760()
{
  unint64_t result = qword_26B234480;
  if (!qword_26B234480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234480);
  }
  return result;
}

unint64_t sub_252CB37B0()
{
  unint64_t result = qword_26B234558;
  if (!qword_26B234558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234558);
  }
  return result;
}

unint64_t sub_252CB3800()
{
  unint64_t result = qword_26B234550;
  if (!qword_26B234550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234550);
  }
  return result;
}

unint64_t sub_252CB3850()
{
  unint64_t result = qword_26B234588;
  if (!qword_26B234588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234588);
  }
  return result;
}

unint64_t sub_252CB38A0()
{
  unint64_t result = qword_26B234580;
  if (!qword_26B234580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234580);
  }
  return result;
}

unint64_t sub_252CB38F0()
{
  unint64_t result = qword_26B2344E8;
  if (!qword_26B2344E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344E8);
  }
  return result;
}

unint64_t sub_252CB3940()
{
  unint64_t result = qword_26B2344E0;
  if (!qword_26B2344E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344E0);
  }
  return result;
}

unint64_t sub_252CB3990()
{
  unint64_t result = qword_26B2344D8;
  if (!qword_26B2344D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344D8);
  }
  return result;
}

unint64_t sub_252CB39E0()
{
  unint64_t result = qword_26B2344D0;
  if (!qword_26B2344D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2344D0);
  }
  return result;
}

unint64_t sub_252CB3A30()
{
  unint64_t result = qword_26B2345A8;
  if (!qword_26B2345A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2345A8);
  }
  return result;
}

unint64_t sub_252CB3A80()
{
  unint64_t result = qword_26B2345A0;
  if (!qword_26B2345A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2345A0);
  }
  return result;
}

unint64_t sub_252CB3AD0()
{
  unint64_t result = qword_26B2345B8;
  if (!qword_26B2345B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2345B8);
  }
  return result;
}

unint64_t sub_252CB3B20()
{
  unint64_t result = qword_26B2345B0;
  if (!qword_26B2345B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2345B0);
  }
  return result;
}

unint64_t sub_252CB3B70()
{
  unint64_t result = qword_26B234508;
  if (!qword_26B234508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234508);
  }
  return result;
}

unint64_t sub_252CB3BC0()
{
  unint64_t result = qword_26B234500;
  if (!qword_26B234500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234500);
  }
  return result;
}

unint64_t sub_252CB3C10()
{
  unint64_t result = qword_26B234468;
  if (!qword_26B234468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234468);
  }
  return result;
}

unint64_t sub_252CB3C60()
{
  unint64_t result = qword_26B234460;
  if (!qword_26B234460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234460);
  }
  return result;
}

unint64_t sub_252CB3CB0()
{
  unint64_t result = qword_26B234478;
  if (!qword_26B234478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234478);
  }
  return result;
}

unint64_t sub_252CB3D00()
{
  unint64_t result = qword_26B234470;
  if (!qword_26B234470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234470);
  }
  return result;
}

unint64_t sub_252CB3D50()
{
  unint64_t result = qword_26B234498;
  if (!qword_26B234498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234498);
  }
  return result;
}

unint64_t sub_252CB3DA0()
{
  unint64_t result = qword_26B234490;
  if (!qword_26B234490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234490);
  }
  return result;
}

unint64_t sub_252CB3DF0()
{
  unint64_t result = qword_26B234398;
  if (!qword_26B234398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234398);
  }
  return result;
}

unint64_t sub_252CB3E40()
{
  unint64_t result = qword_26B234390;
  if (!qword_26B234390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234390);
  }
  return result;
}

unint64_t sub_252CB3E90()
{
  unint64_t result = qword_26B234438;
  if (!qword_26B234438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234438);
  }
  return result;
}

unint64_t sub_252CB3EE0()
{
  unint64_t result = qword_26B234430;
  if (!qword_26B234430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234430);
  }
  return result;
}

unint64_t sub_252CB3F30()
{
  unint64_t result = qword_26B234538;
  if (!qword_26B234538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234538);
  }
  return result;
}

unint64_t sub_252CB3F80()
{
  unint64_t result = qword_26B234530;
  if (!qword_26B234530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234530);
  }
  return result;
}

unint64_t sub_252CB3FD0()
{
  unint64_t result = qword_26B2343A8;
  if (!qword_26B2343A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343A8);
  }
  return result;
}

unint64_t sub_252CB4020()
{
  unint64_t result = qword_26B2343A0;
  if (!qword_26B2343A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2343A0);
  }
  return result;
}

unint64_t sub_252CB4070()
{
  unint64_t result = qword_26B234260;
  if (!qword_26B234260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234260);
  }
  return result;
}

unint64_t sub_252CB40C0()
{
  unint64_t result = qword_26B234258;
  if (!qword_26B234258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234258);
  }
  return result;
}

unint64_t sub_252CB4110()
{
  unint64_t result = qword_269C47740;
  if (!qword_269C47740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47740);
  }
  return result;
}

unint64_t sub_252CB4160()
{
  unint64_t result = qword_269C47748;
  if (!qword_269C47748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47748);
  }
  return result;
}

unint64_t sub_252CB41B0()
{
  unint64_t result = qword_269C47750;
  if (!qword_269C47750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47750);
  }
  return result;
}

unint64_t sub_252CB4200()
{
  unint64_t result = qword_269C47758;
  if (!qword_269C47758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47758);
  }
  return result;
}

unint64_t sub_252CB4250()
{
  unint64_t result = qword_269C47760;
  if (!qword_269C47760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47760);
  }
  return result;
}

unint64_t sub_252CB42A0()
{
  unint64_t result = qword_269C47768;
  if (!qword_269C47768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47768);
  }
  return result;
}

unint64_t sub_252CB42F0()
{
  unint64_t result = qword_269C47770;
  if (!qword_269C47770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47770);
  }
  return result;
}

unint64_t sub_252CB4340()
{
  unint64_t result = qword_269C47778;
  if (!qword_269C47778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47778);
  }
  return result;
}

unint64_t sub_252CB4390()
{
  unint64_t result = qword_269C47780;
  if (!qword_269C47780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47780);
  }
  return result;
}

unint64_t sub_252CB43E0()
{
  unint64_t result = qword_269C47788;
  if (!qword_269C47788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47788);
  }
  return result;
}

unint64_t sub_252CB4430()
{
  unint64_t result = qword_269C47790;
  if (!qword_269C47790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47790);
  }
  return result;
}

unint64_t sub_252CB4480()
{
  unint64_t result = qword_269C47798;
  if (!qword_269C47798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47798);
  }
  return result;
}

unint64_t sub_252CB44D0()
{
  unint64_t result = qword_269C477A0;
  if (!qword_269C477A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477A0);
  }
  return result;
}

unint64_t sub_252CB4520()
{
  unint64_t result = qword_269C477A8;
  if (!qword_269C477A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477A8);
  }
  return result;
}

unint64_t sub_252CB4570()
{
  unint64_t result = qword_269C477B0;
  if (!qword_269C477B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477B0);
  }
  return result;
}

unint64_t sub_252CB45C0()
{
  unint64_t result = qword_269C477B8;
  if (!qword_269C477B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477B8);
  }
  return result;
}

unint64_t sub_252CB4610()
{
  unint64_t result = qword_269C477C0;
  if (!qword_269C477C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477C0);
  }
  return result;
}

unint64_t sub_252CB4660()
{
  unint64_t result = qword_269C477C8;
  if (!qword_269C477C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477C8);
  }
  return result;
}

unint64_t sub_252CB46B0()
{
  unint64_t result = qword_269C477D0;
  if (!qword_269C477D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477D0);
  }
  return result;
}

unint64_t sub_252CB4700()
{
  unint64_t result = qword_269C477D8;
  if (!qword_269C477D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477D8);
  }
  return result;
}

unint64_t sub_252CB4750()
{
  unint64_t result = qword_269C477E0;
  if (!qword_269C477E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477E0);
  }
  return result;
}

unint64_t sub_252CB47A0()
{
  unint64_t result = qword_269C477E8;
  if (!qword_269C477E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477E8);
  }
  return result;
}

unint64_t sub_252CB47F0()
{
  unint64_t result = qword_269C477F0;
  if (!qword_269C477F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477F0);
  }
  return result;
}

unint64_t sub_252CB4840()
{
  unint64_t result = qword_269C477F8;
  if (!qword_269C477F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C477F8);
  }
  return result;
}

unint64_t sub_252CB4890()
{
  unint64_t result = qword_269C47800;
  if (!qword_269C47800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47800);
  }
  return result;
}

unint64_t sub_252CB48E0()
{
  unint64_t result = qword_269C47808;
  if (!qword_269C47808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47808);
  }
  return result;
}

unint64_t sub_252CB4930()
{
  unint64_t result = qword_269C47810;
  if (!qword_269C47810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47810);
  }
  return result;
}

unint64_t sub_252CB4980()
{
  unint64_t result = qword_269C47818;
  if (!qword_269C47818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47818);
  }
  return result;
}

unint64_t sub_252CB49D0()
{
  unint64_t result = qword_269C47820;
  if (!qword_269C47820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47820);
  }
  return result;
}

unint64_t sub_252CB4A20()
{
  unint64_t result = qword_269C47828;
  if (!qword_269C47828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47828);
  }
  return result;
}

unint64_t sub_252CB4A70()
{
  unint64_t result = qword_269C47830;
  if (!qword_269C47830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47830);
  }
  return result;
}

unint64_t sub_252CB4AC0()
{
  unint64_t result = qword_269C47838;
  if (!qword_269C47838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47838);
  }
  return result;
}

unint64_t sub_252CB4B10()
{
  unint64_t result = qword_269C47840;
  if (!qword_269C47840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47840);
  }
  return result;
}

unint64_t sub_252CB4B60()
{
  unint64_t result = qword_269C47848;
  if (!qword_269C47848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47848);
  }
  return result;
}

unint64_t sub_252CB4BB0()
{
  unint64_t result = qword_269C47850;
  if (!qword_269C47850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47850);
  }
  return result;
}

unint64_t sub_252CB4C00()
{
  unint64_t result = qword_269C47858;
  if (!qword_269C47858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47858);
  }
  return result;
}

unint64_t sub_252CB4C50()
{
  unint64_t result = qword_269C47860;
  if (!qword_269C47860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47860);
  }
  return result;
}

unint64_t sub_252CB4CA0()
{
  unint64_t result = qword_269C47868;
  if (!qword_269C47868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47868);
  }
  return result;
}

unint64_t sub_252CB4CF0()
{
  unint64_t result = qword_269C47870;
  if (!qword_269C47870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47870);
  }
  return result;
}

unint64_t sub_252CB4D40()
{
  unint64_t result = qword_269C47878;
  if (!qword_269C47878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47878);
  }
  return result;
}

unint64_t sub_252CB4D90()
{
  unint64_t result = qword_269C47880;
  if (!qword_269C47880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47880);
  }
  return result;
}

unint64_t sub_252CB4DE0()
{
  unint64_t result = qword_269C47888;
  if (!qword_269C47888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47888);
  }
  return result;
}

unint64_t sub_252CB4E30()
{
  unint64_t result = qword_269C47890;
  if (!qword_269C47890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47890);
  }
  return result;
}

unint64_t sub_252CB4E80()
{
  unint64_t result = qword_269C47898;
  if (!qword_269C47898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47898);
  }
  return result;
}

unint64_t sub_252CB4ED0()
{
  unint64_t result = qword_269C478A0;
  if (!qword_269C478A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478A0);
  }
  return result;
}

unint64_t sub_252CB4F20()
{
  unint64_t result = qword_269C478A8;
  if (!qword_269C478A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478A8);
  }
  return result;
}

unint64_t sub_252CB4F70()
{
  unint64_t result = qword_269C478B0;
  if (!qword_269C478B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478B0);
  }
  return result;
}

unint64_t sub_252CB4FC0()
{
  unint64_t result = qword_269C478B8;
  if (!qword_269C478B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478B8);
  }
  return result;
}

unint64_t sub_252CB5010()
{
  unint64_t result = qword_269C478C0;
  if (!qword_269C478C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478C0);
  }
  return result;
}

unint64_t sub_252CB5060()
{
  unint64_t result = qword_269C478C8;
  if (!qword_269C478C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478C8);
  }
  return result;
}

unint64_t sub_252CB50B0()
{
  unint64_t result = qword_269C478D0;
  if (!qword_269C478D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478D0);
  }
  return result;
}

unint64_t sub_252CB5100()
{
  unint64_t result = qword_269C478D8;
  if (!qword_269C478D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478D8);
  }
  return result;
}

unint64_t sub_252CB5150()
{
  unint64_t result = qword_269C478E0;
  if (!qword_269C478E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478E0);
  }
  return result;
}

unint64_t sub_252CB51A0()
{
  unint64_t result = qword_269C478E8;
  if (!qword_269C478E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478E8);
  }
  return result;
}

unint64_t sub_252CB51F0()
{
  unint64_t result = qword_269C478F0;
  if (!qword_269C478F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478F0);
  }
  return result;
}

unint64_t sub_252CB5240()
{
  unint64_t result = qword_269C478F8;
  if (!qword_269C478F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C478F8);
  }
  return result;
}

unint64_t sub_252CB5290()
{
  unint64_t result = qword_269C47900;
  if (!qword_269C47900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47900);
  }
  return result;
}

unint64_t sub_252CB52E0()
{
  unint64_t result = qword_269C47908;
  if (!qword_269C47908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47908);
  }
  return result;
}

unint64_t sub_252CB5330()
{
  unint64_t result = qword_269C47910;
  if (!qword_269C47910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47910);
  }
  return result;
}

unint64_t sub_252CB5380()
{
  unint64_t result = qword_269C47918;
  if (!qword_269C47918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47918);
  }
  return result;
}

unint64_t sub_252CB53D0()
{
  unint64_t result = qword_269C47920;
  if (!qword_269C47920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47920);
  }
  return result;
}

unint64_t sub_252CB5420()
{
  unint64_t result = qword_269C47928;
  if (!qword_269C47928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47928);
  }
  return result;
}

unint64_t sub_252CB5470()
{
  unint64_t result = qword_269C47930;
  if (!qword_269C47930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47930);
  }
  return result;
}

unint64_t sub_252CB54C0()
{
  unint64_t result = qword_269C47938;
  if (!qword_269C47938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47938);
  }
  return result;
}

unint64_t sub_252CB5510()
{
  unint64_t result = qword_269C47940;
  if (!qword_269C47940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47940);
  }
  return result;
}

unint64_t sub_252CB5560()
{
  unint64_t result = qword_269C47948;
  if (!qword_269C47948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47948);
  }
  return result;
}

unint64_t sub_252CB55B0()
{
  unint64_t result = qword_269C47950;
  if (!qword_269C47950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47950);
  }
  return result;
}

unint64_t sub_252CB5600()
{
  unint64_t result = qword_269C47958;
  if (!qword_269C47958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47958);
  }
  return result;
}

unint64_t sub_252CB5650()
{
  unint64_t result = qword_269C47960;
  if (!qword_269C47960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47960);
  }
  return result;
}

unint64_t sub_252CB56A0()
{
  unint64_t result = qword_269C47968;
  if (!qword_269C47968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47968);
  }
  return result;
}

unint64_t sub_252CB56F0()
{
  unint64_t result = qword_269C47970;
  if (!qword_269C47970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47970);
  }
  return result;
}

unint64_t sub_252CB5740()
{
  unint64_t result = qword_269C47978;
  if (!qword_269C47978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47978);
  }
  return result;
}

unint64_t sub_252CB5790()
{
  unint64_t result = qword_269C47980;
  if (!qword_269C47980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47980);
  }
  return result;
}

unint64_t sub_252CB57E0()
{
  unint64_t result = qword_269C47988;
  if (!qword_269C47988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47988);
  }
  return result;
}

unint64_t sub_252CB5830()
{
  unint64_t result = qword_269C47990;
  if (!qword_269C47990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47990);
  }
  return result;
}

unint64_t sub_252CB5880()
{
  unint64_t result = qword_269C47998;
  if (!qword_269C47998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47998);
  }
  return result;
}

unint64_t sub_252CB58D0()
{
  unint64_t result = qword_269C479A0;
  if (!qword_269C479A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479A0);
  }
  return result;
}

unint64_t sub_252CB5920()
{
  unint64_t result = qword_269C479A8;
  if (!qword_269C479A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479A8);
  }
  return result;
}

unint64_t sub_252CB5970()
{
  unint64_t result = qword_269C479B0;
  if (!qword_269C479B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479B0);
  }
  return result;
}

unint64_t sub_252CB59C0()
{
  unint64_t result = qword_269C479B8;
  if (!qword_269C479B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479B8);
  }
  return result;
}

unint64_t sub_252CB5A10()
{
  unint64_t result = qword_269C479C0;
  if (!qword_269C479C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479C0);
  }
  return result;
}

unint64_t sub_252CB5A60()
{
  unint64_t result = qword_269C479C8;
  if (!qword_269C479C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479C8);
  }
  return result;
}

unint64_t sub_252CB5AB0()
{
  unint64_t result = qword_269C479D0;
  if (!qword_269C479D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479D0);
  }
  return result;
}

unint64_t sub_252CB5B00()
{
  unint64_t result = qword_269C479D8;
  if (!qword_269C479D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479D8);
  }
  return result;
}

unint64_t sub_252CB5B50()
{
  unint64_t result = qword_269C479E0;
  if (!qword_269C479E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479E0);
  }
  return result;
}

unint64_t sub_252CB5BA0()
{
  unint64_t result = qword_269C479E8;
  if (!qword_269C479E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479E8);
  }
  return result;
}

unint64_t sub_252CB5BF0()
{
  unint64_t result = qword_269C479F0;
  if (!qword_269C479F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479F0);
  }
  return result;
}

unint64_t sub_252CB5C40()
{
  unint64_t result = qword_269C479F8;
  if (!qword_269C479F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C479F8);
  }
  return result;
}

unint64_t sub_252CB5C90()
{
  unint64_t result = qword_269C47A00;
  if (!qword_269C47A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A00);
  }
  return result;
}

unint64_t sub_252CB5CE0()
{
  unint64_t result = qword_269C47A08;
  if (!qword_269C47A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A08);
  }
  return result;
}

unint64_t sub_252CB5D30()
{
  unint64_t result = qword_269C47A10;
  if (!qword_269C47A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A10);
  }
  return result;
}

unint64_t sub_252CB5D80()
{
  unint64_t result = qword_269C47A18;
  if (!qword_269C47A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A18);
  }
  return result;
}

unint64_t sub_252CB5DD0()
{
  unint64_t result = qword_269C47A20;
  if (!qword_269C47A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A20);
  }
  return result;
}

unint64_t sub_252CB5E20()
{
  unint64_t result = qword_269C47A28;
  if (!qword_269C47A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A28);
  }
  return result;
}

unint64_t sub_252CB5E70()
{
  unint64_t result = qword_269C47A30;
  if (!qword_269C47A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A30);
  }
  return result;
}

unint64_t sub_252CB5EC0()
{
  unint64_t result = qword_269C47A38;
  if (!qword_269C47A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A38);
  }
  return result;
}

unint64_t sub_252CB5F10()
{
  unint64_t result = qword_269C47A40;
  if (!qword_269C47A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A40);
  }
  return result;
}

unint64_t sub_252CB5F60()
{
  unint64_t result = qword_269C47A48;
  if (!qword_269C47A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A48);
  }
  return result;
}

unint64_t sub_252CB5FB0()
{
  unint64_t result = qword_269C47A50;
  if (!qword_269C47A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A50);
  }
  return result;
}

unint64_t sub_252CB6000()
{
  unint64_t result = qword_269C47A58;
  if (!qword_269C47A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A58);
  }
  return result;
}

unint64_t sub_252CB6050()
{
  unint64_t result = qword_269C47A60;
  if (!qword_269C47A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A60);
  }
  return result;
}

unint64_t sub_252CB60A0()
{
  unint64_t result = qword_269C47A68;
  if (!qword_269C47A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A68);
  }
  return result;
}

unint64_t sub_252CB60F0()
{
  unint64_t result = qword_269C47A70;
  if (!qword_269C47A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A70);
  }
  return result;
}

unint64_t sub_252CB6140()
{
  unint64_t result = qword_269C47A78;
  if (!qword_269C47A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A78);
  }
  return result;
}

unint64_t sub_252CB6190()
{
  unint64_t result = qword_269C47A80;
  if (!qword_269C47A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A80);
  }
  return result;
}

unint64_t sub_252CB61E0()
{
  unint64_t result = qword_269C47A88;
  if (!qword_269C47A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A88);
  }
  return result;
}

unint64_t sub_252CB6230()
{
  unint64_t result = qword_269C47A90;
  if (!qword_269C47A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A90);
  }
  return result;
}

unint64_t sub_252CB6280()
{
  unint64_t result = qword_269C47A98;
  if (!qword_269C47A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47A98);
  }
  return result;
}

unint64_t sub_252CB62D0()
{
  unint64_t result = qword_269C47AA0;
  if (!qword_269C47AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AA0);
  }
  return result;
}

unint64_t sub_252CB6320()
{
  unint64_t result = qword_269C47AA8;
  if (!qword_269C47AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AA8);
  }
  return result;
}

unint64_t sub_252CB6370()
{
  unint64_t result = qword_269C47AB0;
  if (!qword_269C47AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AB0);
  }
  return result;
}

unint64_t sub_252CB63C0()
{
  unint64_t result = qword_269C47AB8;
  if (!qword_269C47AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AB8);
  }
  return result;
}

unint64_t sub_252CB6410()
{
  unint64_t result = qword_269C47AC0;
  if (!qword_269C47AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AC0);
  }
  return result;
}

unint64_t sub_252CB6460()
{
  unint64_t result = qword_269C47AC8;
  if (!qword_269C47AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AC8);
  }
  return result;
}

unint64_t sub_252CB64B0()
{
  unint64_t result = qword_269C47AD0;
  if (!qword_269C47AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AD0);
  }
  return result;
}

unint64_t sub_252CB6500()
{
  unint64_t result = qword_269C47AD8;
  if (!qword_269C47AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AD8);
  }
  return result;
}

unint64_t sub_252CB6550()
{
  unint64_t result = qword_269C47AE0;
  if (!qword_269C47AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AE0);
  }
  return result;
}

unint64_t sub_252CB65A0()
{
  unint64_t result = qword_269C47AE8;
  if (!qword_269C47AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AE8);
  }
  return result;
}

unint64_t sub_252CB65F0()
{
  unint64_t result = qword_269C47AF0;
  if (!qword_269C47AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AF0);
  }
  return result;
}

unint64_t sub_252CB6640()
{
  unint64_t result = qword_269C47AF8;
  if (!qword_269C47AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47AF8);
  }
  return result;
}

unint64_t sub_252CB6690()
{
  unint64_t result = qword_269C47B00;
  if (!qword_269C47B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B00);
  }
  return result;
}

unint64_t sub_252CB66E0()
{
  unint64_t result = qword_269C47B08;
  if (!qword_269C47B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B08);
  }
  return result;
}

unint64_t sub_252CB6730()
{
  unint64_t result = qword_269C47B10;
  if (!qword_269C47B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B10);
  }
  return result;
}

unint64_t sub_252CB6780()
{
  unint64_t result = qword_269C47B18;
  if (!qword_269C47B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B18);
  }
  return result;
}

unint64_t sub_252CB67D0()
{
  unint64_t result = qword_269C47B20;
  if (!qword_269C47B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B20);
  }
  return result;
}

unint64_t sub_252CB6820()
{
  unint64_t result = qword_269C47B28;
  if (!qword_269C47B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B28);
  }
  return result;
}

unint64_t sub_252CB6870()
{
  unint64_t result = qword_269C47B30;
  if (!qword_269C47B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B30);
  }
  return result;
}

unint64_t sub_252CB68C0()
{
  unint64_t result = qword_269C47B38;
  if (!qword_269C47B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B38);
  }
  return result;
}

unint64_t sub_252CB6910()
{
  unint64_t result = qword_269C47B40;
  if (!qword_269C47B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B40);
  }
  return result;
}

unint64_t sub_252CB6960()
{
  unint64_t result = qword_269C47B48;
  if (!qword_269C47B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B48);
  }
  return result;
}

unint64_t sub_252CB69B0()
{
  unint64_t result = qword_269C47B50;
  if (!qword_269C47B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B50);
  }
  return result;
}

unint64_t sub_252CB6A00()
{
  unint64_t result = qword_269C47B58;
  if (!qword_269C47B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B58);
  }
  return result;
}

unint64_t sub_252CB6A50()
{
  unint64_t result = qword_269C47B60;
  if (!qword_269C47B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B60);
  }
  return result;
}

unint64_t sub_252CB6AA0()
{
  unint64_t result = qword_269C47B68;
  if (!qword_269C47B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B68);
  }
  return result;
}

unint64_t sub_252CB6AF0()
{
  unint64_t result = qword_269C47B70;
  if (!qword_269C47B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B70);
  }
  return result;
}

unint64_t sub_252CB6B40()
{
  unint64_t result = qword_269C47B78;
  if (!qword_269C47B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B78);
  }
  return result;
}

unint64_t sub_252CB6B90()
{
  unint64_t result = qword_269C47B80;
  if (!qword_269C47B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B80);
  }
  return result;
}

unint64_t sub_252CB6BE0()
{
  unint64_t result = qword_269C47B88;
  if (!qword_269C47B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B88);
  }
  return result;
}

unint64_t sub_252CB6C30()
{
  unint64_t result = qword_269C47B90;
  if (!qword_269C47B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B90);
  }
  return result;
}

unint64_t sub_252CB6C80()
{
  unint64_t result = qword_269C47B98;
  if (!qword_269C47B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47B98);
  }
  return result;
}

unint64_t sub_252CB6CD0()
{
  unint64_t result = qword_269C47BA0;
  if (!qword_269C47BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BA0);
  }
  return result;
}

unint64_t sub_252CB6D20()
{
  unint64_t result = qword_269C47BA8;
  if (!qword_269C47BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BA8);
  }
  return result;
}

unint64_t sub_252CB6D70()
{
  unint64_t result = qword_269C47BB0;
  if (!qword_269C47BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BB0);
  }
  return result;
}

unint64_t sub_252CB6DC0()
{
  unint64_t result = qword_269C47BB8;
  if (!qword_269C47BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BB8);
  }
  return result;
}

unint64_t sub_252CB6E10()
{
  unint64_t result = qword_269C47BC0;
  if (!qword_269C47BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BC0);
  }
  return result;
}

unint64_t sub_252CB6E60()
{
  unint64_t result = qword_269C47BC8;
  if (!qword_269C47BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BC8);
  }
  return result;
}

unint64_t sub_252CB6EB0()
{
  unint64_t result = qword_269C47BD0;
  if (!qword_269C47BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BD0);
  }
  return result;
}

unint64_t sub_252CB6F00()
{
  unint64_t result = qword_269C47BD8;
  if (!qword_269C47BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BD8);
  }
  return result;
}

unint64_t sub_252CB6F50()
{
  unint64_t result = qword_269C47BE0;
  if (!qword_269C47BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BE0);
  }
  return result;
}

unint64_t sub_252CB6FA0()
{
  unint64_t result = qword_269C47BE8;
  if (!qword_269C47BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BE8);
  }
  return result;
}

unint64_t sub_252CB6FF0()
{
  unint64_t result = qword_269C47BF0;
  if (!qword_269C47BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BF0);
  }
  return result;
}

unint64_t sub_252CB7040()
{
  unint64_t result = qword_269C47BF8;
  if (!qword_269C47BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47BF8);
  }
  return result;
}

unint64_t sub_252CB7090()
{
  unint64_t result = qword_269C47C00;
  if (!qword_269C47C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C00);
  }
  return result;
}

unint64_t sub_252CB70E0()
{
  unint64_t result = qword_269C47C08;
  if (!qword_269C47C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C08);
  }
  return result;
}

unint64_t sub_252CB7130()
{
  unint64_t result = qword_269C47C10;
  if (!qword_269C47C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C10);
  }
  return result;
}

unint64_t sub_252CB7180()
{
  unint64_t result = qword_269C47C18;
  if (!qword_269C47C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C18);
  }
  return result;
}

unint64_t sub_252CB71D0()
{
  unint64_t result = qword_269C47C20;
  if (!qword_269C47C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C20);
  }
  return result;
}

unint64_t sub_252CB7220()
{
  unint64_t result = qword_269C47C28;
  if (!qword_269C47C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C28);
  }
  return result;
}

unint64_t sub_252CB7270()
{
  unint64_t result = qword_269C47C30;
  if (!qword_269C47C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C30);
  }
  return result;
}

unint64_t sub_252CB72C0()
{
  unint64_t result = qword_269C47C38;
  if (!qword_269C47C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C38);
  }
  return result;
}

unint64_t sub_252CB7310()
{
  unint64_t result = qword_269C47C40;
  if (!qword_269C47C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C40);
  }
  return result;
}

unint64_t sub_252CB7360()
{
  unint64_t result = qword_269C47C48;
  if (!qword_269C47C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C48);
  }
  return result;
}

unint64_t sub_252CB73B0()
{
  unint64_t result = qword_269C47C50;
  if (!qword_269C47C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C50);
  }
  return result;
}

unint64_t sub_252CB7400()
{
  unint64_t result = qword_269C47C58;
  if (!qword_269C47C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C58);
  }
  return result;
}

unint64_t sub_252CB7450()
{
  unint64_t result = qword_269C47C60;
  if (!qword_269C47C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C60);
  }
  return result;
}

unint64_t sub_252CB74A0()
{
  unint64_t result = qword_269C47C68;
  if (!qword_269C47C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C68);
  }
  return result;
}

unint64_t sub_252CB74F0()
{
  unint64_t result = qword_269C47C70;
  if (!qword_269C47C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C70);
  }
  return result;
}

unint64_t sub_252CB7540()
{
  unint64_t result = qword_269C47C78;
  if (!qword_269C47C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C78);
  }
  return result;
}

unint64_t sub_252CB7590()
{
  unint64_t result = qword_269C47C80;
  if (!qword_269C47C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C80);
  }
  return result;
}

unint64_t sub_252CB75E0()
{
  unint64_t result = qword_269C47C88;
  if (!qword_269C47C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C88);
  }
  return result;
}

unint64_t sub_252CB7630()
{
  unint64_t result = qword_269C47C90;
  if (!qword_269C47C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C90);
  }
  return result;
}

unint64_t sub_252CB7680()
{
  unint64_t result = qword_269C47C98;
  if (!qword_269C47C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47C98);
  }
  return result;
}

unint64_t sub_252CB76D0()
{
  unint64_t result = qword_269C47CA0;
  if (!qword_269C47CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CA0);
  }
  return result;
}

unint64_t sub_252CB7720()
{
  unint64_t result = qword_269C47CA8;
  if (!qword_269C47CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CA8);
  }
  return result;
}

unint64_t sub_252CB7770()
{
  unint64_t result = qword_269C47CB0;
  if (!qword_269C47CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CB0);
  }
  return result;
}

unint64_t sub_252CB77C0()
{
  unint64_t result = qword_269C47CB8;
  if (!qword_269C47CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CB8);
  }
  return result;
}

unint64_t sub_252CB7810()
{
  unint64_t result = qword_269C47CC0;
  if (!qword_269C47CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CC0);
  }
  return result;
}

unint64_t sub_252CB7860()
{
  unint64_t result = qword_269C47CC8;
  if (!qword_269C47CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CC8);
  }
  return result;
}

unint64_t sub_252CB78B0()
{
  unint64_t result = qword_269C47CD0;
  if (!qword_269C47CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CD0);
  }
  return result;
}

unint64_t sub_252CB7900()
{
  unint64_t result = qword_269C47CD8;
  if (!qword_269C47CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CD8);
  }
  return result;
}

unint64_t sub_252CB7950()
{
  unint64_t result = qword_269C47CE0;
  if (!qword_269C47CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CE0);
  }
  return result;
}

unint64_t sub_252CB79A0()
{
  unint64_t result = qword_269C47CE8;
  if (!qword_269C47CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CE8);
  }
  return result;
}

unint64_t sub_252CB79F0()
{
  unint64_t result = qword_269C47CF0;
  if (!qword_269C47CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CF0);
  }
  return result;
}

unint64_t sub_252CB7A40()
{
  unint64_t result = qword_269C47CF8;
  if (!qword_269C47CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47CF8);
  }
  return result;
}

unint64_t sub_252CB7A90()
{
  unint64_t result = qword_269C47D00;
  if (!qword_269C47D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D00);
  }
  return result;
}

unint64_t sub_252CB7AE0()
{
  unint64_t result = qword_269C47D08;
  if (!qword_269C47D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D08);
  }
  return result;
}

unint64_t sub_252CB7B30()
{
  unint64_t result = qword_269C47D10;
  if (!qword_269C47D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D10);
  }
  return result;
}

unint64_t sub_252CB7B80()
{
  unint64_t result = qword_269C47D18;
  if (!qword_269C47D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D18);
  }
  return result;
}

unint64_t sub_252CB7BD0()
{
  unint64_t result = qword_26B231C98;
  if (!qword_26B231C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C98);
  }
  return result;
}

unint64_t sub_252CB7C20()
{
  unint64_t result = qword_26B231C90;
  if (!qword_26B231C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C90);
  }
  return result;
}

unint64_t sub_252CB7C70()
{
  unint64_t result = qword_26B2346A8;
  if (!qword_26B2346A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2346A8);
  }
  return result;
}

unint64_t sub_252CB7CC0()
{
  unint64_t result = qword_26B2346A0;
  if (!qword_26B2346A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2346A0);
  }
  return result;
}

unint64_t sub_252CB7D10()
{
  unint64_t result = qword_269C47D20;
  if (!qword_269C47D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D20);
  }
  return result;
}

unint64_t sub_252CB7D60()
{
  unint64_t result = qword_269C47D28;
  if (!qword_269C47D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D28);
  }
  return result;
}

unint64_t sub_252CB7DAC()
{
  unint64_t result = qword_269C47D30;
  if (!qword_269C47D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D30);
  }
  return result;
}

uint64_t sub_252CB7DF8()
{
  return swift_release();
}

uint64_t sub_252CB7E00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_252CBAA08(a1, a2, a3);
  sub_252AEA304();
  sub_252B4C1F4();
  v4();
  return v3;
}

uint64_t sub_252CB7E4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_252CBAA08(a1, a2, a3);
  sub_252AEA304();
  sub_252B4C1CC();
  v4();
  return v3;
}

uint64_t sub_252CB80F4()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8124()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB8150()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8170(uint64_t a1)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v1);
}

uint64_t sub_252CB8190()
{
  return sub_252D1A498();
}

uint64_t sub_252CB81B4()
{
  return sub_252D1A498();
}

uint64_t sub_252CB81D4()
{
  return sub_252D1A578();
}

void *sub_252CB8200(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

void sub_252CB821C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB8238()
{
  return sub_252D1A498();
}

uint64_t sub_252CB825C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB827C()
{
  return sub_252D1A578();
}

uint64_t sub_252CB82A0()
{
  return sub_252D1A578();
}

void sub_252CB82C0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB82DC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CB82FC()
{
  return sub_252D1A3E8();
}

void sub_252CB8320(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB833C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8354()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8374()
{
  return sub_252D1A498();
}

uint64_t sub_252CB838C()
{
  return sub_252D1A4D8();
}

void sub_252CB83B4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB83D0()
{
  return 0;
}

uint64_t sub_252CB8400()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB8424()
{
  return sub_252D1A4D8();
}

void sub_252CB8440(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB845C()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CB8478()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB8498()
{
  return v0;
}

uint64_t sub_252CB84AC(uint64_t a1, unint64_t a2)
{
  return sub_252C089D0(a1, a2);
}

void sub_252CB84E4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB8510()
{
  return v0;
}

uint64_t sub_252CB8520()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CB8544(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_252CB8558()
{
  return sub_252D1A578();
}

uint64_t sub_252CB8574()
{
  *(unsigned char *)(v0 + *(int *)(v2 + 24)) = *(unsigned char *)(v1 + *(int *)(v2 + 24));
  uint64_t v3 = v1 + *(int *)(v2 + 28);
  uint64_t v4 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, 1, v4);
}

uint64_t sub_252CB85C4()
{
  return v0;
}

void *sub_252CB85D0(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

uint64_t sub_252CB85EC()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ActionSuccess(0) + 20);
  uint64_t v2 = type metadata accessor for ActionSuccess.UndoContext(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, v2);
}

uint64_t sub_252CB863C()
{
  return v0;
}

uint64_t sub_252CB864C()
{
  return sub_252D1A4D8();
}

void sub_252CB8678(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252CB8694(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252CB86B0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB86D8()
{
  return swift_allocError();
}

uint64_t sub_252CB86F0()
{
  return sub_252D1A718();
}

uint64_t sub_252CB8714()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB872C()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_252D1A448();
}

uint64_t sub_252CB8770()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_252D1A528();
}

uint64_t sub_252CB87B8()
{
  return sub_252D1A578();
}

uint64_t sub_252CB87E0()
{
  return 0;
}

uint64_t sub_252CB87FC@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_252CB8814()
{
  return sub_252C06474();
}

uint64_t sub_252CB882C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8868()
{
  return sub_252D1A528();
}

void sub_252CB8884()
{
  uint64_t v8 = v3[6];
  char v9 = *((unsigned char *)v3 + 24);
  uint64_t v10 = v3[2];
  uint64_t v11 = *v3;
  uint64_t v12 = *v5;
  uint64_t v13 = v5[1];
  uint64_t v14 = v5[2];
  char v15 = *((unsigned char *)v5 + 24);
  uint64_t v16 = v5[4];
  uint64_t v17 = v5[7];
  *(void *)(v6 - 152) = v11;
  *(void *)(v6 - 144) = v2;
  *(void *)(v6 - 136) = v10;
  *(unsigned char *)(v6 - 128) = v9;
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 112) = v1;
  *(void *)(v6 - 104) = v8;
  *(void *)(v6 - 96) = v0;
  *(void *)(v6 - 216) = v12;
  *(void *)(v6 - 208) = v13;
  *(void *)(v6 - 200) = v14;
  *(unsigned char *)(v6 - 192) = v15;
  *(void *)(v6 - 184) = v16;
  long long v18 = *(_OWORD *)(v5 + 5);
  *(_OWORD *)(v6 - 240) = v18;
  *(_OWORD *)(v6 - 176) = v18;
  *(void *)(v6 - 160) = v17;
  static ParameterDisambiguation.== infix(_:_:)();
}

void *sub_252CB88F4(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

uint64_t sub_252CB8910()
{
  return v0;
}

uint64_t sub_252CB8928()
{
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CB8964()
{
  return sub_252D1A578();
}

uint64_t sub_252CB897C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB899C()
{
  return 0;
}

void sub_252CB89B0()
{
  __int16 v8 = *((_WORD *)v1 + 28);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[2];
  uint64_t v11 = *v1;
  uint64_t v12 = *v5;
  uint64_t v13 = v5[1];
  uint64_t v14 = v5[2];
  uint64_t v15 = v5[3];
  uint64_t v17 = v5[4];
  uint64_t v16 = v5[5];
  uint64_t v18 = v5[6];
  __int16 v19 = *((_WORD *)v5 + 28);
  *(void *)(v6 - 152) = v11;
  *(void *)(v6 - 144) = v2;
  *(void *)(v6 - 136) = v10;
  *(void *)(v6 - 128) = v3;
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 112) = v9;
  *(void *)(v6 - 104) = v0;
  *(_WORD *)(v6 - 96) = v8;
  *(void *)(v6 - 216) = v12;
  *(void *)(v6 - 208) = v13;
  *(void *)(v6 - 200) = v14;
  *(void *)(v6 - 192) = v15;
  *(void *)(v6 - 184) = v17;
  *(void *)(v6 - 176) = v16;
  *(void *)(v6 - 168) = v18;
  *(_WORD *)(v6 - 160) = v19;
  static ActionConfirmation.== infix(_:_:)();
}

uint64_t sub_252CB8A14()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB8A48()
{
  return sub_252D1A3E8();
}

void sub_252CB8A60()
{
  *(unsigned char *)(v0 - 66) = 1;
}

void sub_252CB8A78(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252CB8A94(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252CB8AB0(uint64_t a1)
{
  return *(void *)a1;
}

void *sub_252CB8AD8(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

uint64_t sub_252CB8AF4()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB8B20()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CB8B40()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CB8B5C()
{
  sub_252AD16B4(v7, v6, v3, v5, v4);
  return sub_252AD16B4(v8, v9, v2, v1, v0);
}

uint64_t sub_252CB8BB8()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8BD8()
{
  uint64_t v1 = *(void *)(v0 - 144);
  char v2 = *(unsigned char *)(v0 - 136);
  uint64_t v3 = *(void *)(v0 - 128);
  uint64_t v4 = *(void *)(v0 - 104);
  uint64_t v5 = *(void *)(v0 - 520);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(v0 - 160);
  *(void *)(v5 + 16) = v1;
  *(unsigned char *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v3;
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v0 - 120);
  *(void *)(v5 + 56) = v4;
  return v5;
}

uint64_t sub_252CB8C20()
{
  return sub_252D1A498();
}

uint64_t sub_252CB8C3C()
{
  return v0;
}

uint64_t sub_252CB8C60()
{
  return sub_252BA661C();
}

uint64_t sub_252CB8C78()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8C9C()
{
  return v0;
}

uint64_t sub_252CB8CA8()
{
  return sub_252D1A528();
}

uint64_t sub_252CB8CC4()
{
  return sub_252D1A4E8();
}

uint64_t sub_252CB8CE0()
{
  return sub_252C06474();
}

uint64_t sub_252CB8CF8()
{
  return sub_252D1A498();
}

uint64_t sub_252CB8D2C()
{
  return sub_252D1A518();
}

uint64_t sub_252CB8D50()
{
  return sub_252C08D04(v1, v0);
}

uint64_t sub_252CB8D78()
{
  return sub_252D1A498();
}

uint64_t sub_252CB8DA4()
{
  return sub_252D1A578();
}

void sub_252CB8DC4()
{
  uint64_t v1 = *(void *)(v0 - 152);
  *(void *)(v0 - 128) = *(void *)(v0 - 160);
  *(void *)(v0 - 120) = v1;
  *(unsigned char *)(v0 - 112) = *(unsigned char *)(v0 - 168) & 1;
}

uint64_t sub_252CB8DE0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CB8E00()
{
  return sub_252D1A3E8();
}

void sub_252CB8E2C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *sub_252CB8E48(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

void *sub_252CB8E64(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

uint64_t sub_252CB8E80()
{
  uint64_t v1 = *(void *)(v0 - 144);
  __int16 v2 = *(_WORD *)(v0 - 104);
  uint64_t v3 = *(void *)(v0 - 560);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 - 160);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v0 - 136);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v0 - 120);
  *(_WORD *)(v3 + 56) = v2;
  return v3;
}

uint64_t sub_252CB8EC0()
{
  *(void *)(v1 - 152) = v0;
  return 1;
}

uint64_t sub_252CB8EE4()
{
  return sub_252D1A498();
}

uint64_t sub_252CB8EFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CB8F14()
{
  return v0 + *(int *)(*(void *)(v1 - 128) + 20);
}

uint64_t sub_252CB8F38()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB8F74()
{
  return sub_252D1A578();
}

uint64_t sub_252CB8FA0()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB8FD0()
{
  return sub_252D1A498();
}

uint64_t sub_252CB9000()
{
  return sub_252D1A498();
}

uint64_t sub_252CB9030()
{
  return v0;
}

uint64_t sub_252CB9040(uint64_t a1)
{
  uint64_t result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, 1, 1, a1);
  uint64_t v5 = (void *)(v3 + v1[9]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v3 + v1[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v3 + v1[11]) = 2;
  *(unsigned char *)(v3 + v1[12]) = 2;
  return result;
}

uint64_t sub_252CB9094()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB90AC()
{
  return sub_252D1A518();
}

uint64_t sub_252CB90C4@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = *(unsigned char *)(v2 + a1);
  return v1;
}

uint64_t sub_252CB90DC()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB9100()
{
  return sub_252D1A498();
}

uint64_t sub_252CB9124()
{
  return sub_252D1A498();
}

void sub_252CB9148()
{
  uint64_t v8 = *v5;
  uint64_t v9 = v5[1];
  uint64_t v10 = v5;
  uint64_t v11 = v5[2];
  uint64_t v12 = v5[3];
  uint64_t v13 = v10[4];
  *(void *)(v6 - 248) = v13;
  *(void *)(v6 - 152) = v4;
  *(void *)(v6 - 144) = v3;
  *(void *)(v6 - 136) = v2;
  *(void *)(v6 - 128) = v1;
  *(void *)(v6 - 120) = v0;
  *(void *)(v6 - 216) = v8;
  *(void *)(v6 - 208) = v9;
  *(void *)(v6 - 200) = v11;
  *(void *)(v6 - 192) = v12;
  *(void *)(v6 - 184) = v13;
  static ActionFailure.Failure.== infix(_:_:)();
}

uint64_t sub_252CB918C()
{
  return sub_252D1A498();
}

uint64_t sub_252CB91B0()
{
  return sub_252D1A498();
}

uint64_t sub_252CB91D4()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CB91F0()
{
  return v0;
}

uint64_t sub_252CB9208()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB9234()
{
  return v0;
}

uint64_t sub_252CB9240()
{
  return v0;
}

uint64_t sub_252CB9258()
{
  return sub_252C089D0(v1, v0);
}

uint64_t sub_252CB927C()
{
  return v0;
}

uint64_t sub_252CB9288()
{
  return sub_252D19CF8();
}

uint64_t sub_252CB92BC()
{
  *(unsigned char *)(v0 - 67) = 2;
  return 0;
}

uint64_t sub_252CB92D4()
{
  return sub_252D1A718();
}

uint64_t sub_252CB9320(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CB934C()
{
  return 0;
}

uint64_t sub_252CB9360()
{
  return v0;
}

uint64_t sub_252CB936C()
{
  return v0;
}

uint64_t sub_252CB9384(uint64_t a1)
{
  *(void *)(v3 + 40) = a1;
  return sub_252CB7E00(v2, v1, v4);
}

uint64_t sub_252CB93C0()
{
  return sub_252D1A578();
}

uint64_t sub_252CB93D8(uint64_t a1)
{
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
}

uint64_t sub_252CB93F4(uint64_t result, int a2)
{
  *(void *)(result + 8) = (a2 - 1);
  return result;
}

uint64_t sub_252CB9400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CB940C()
{
  *(void *)(v5 - 544) = v0;
  *(void *)(v5 - 560) = v1;
  *(void *)(v5 - 552) = v2;
  *(void *)(v5 - 536) = v4;
  *(void *)(v5 - 72) = v3;
  return sub_252D1A4C8();
}

uint64_t sub_252CB944C(uint64_t a1)
{
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for ActionResponse(0) + 20));
  *uint64_t v2 = 0;
  v2[1] = 0;
  return type metadata accessor for ResponseManifest(0);
}

uint64_t sub_252CB94B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_252ACE78C(a1, a2, a3, a4, v4);
  sub_252ACE78C(v9, v8, v6, v5, v7);
  return sub_252AD16B4(v9, v8, v6, v5, v7);
}

uint64_t sub_252CB9504()
{
  return v0;
}

uint64_t sub_252CB9514(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_252CB9534()
{
  return 1;
}

uint64_t sub_252CB9544()
{
  return 1;
}

uint64_t sub_252CB9564()
{
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(unsigned char *)(v0 + 24) = *(unsigned char *)(v1 + 24);
  type metadata accessor for ParameterConfirmation(0);
  return sub_252D19BE8();
}

uint64_t sub_252CB95B8()
{
  return *(void *)v0;
}

void sub_252CB95C8(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1 + 8) = (v1 - 1);
}

uint64_t sub_252CB95D8(uint64_t result, uint64_t a2)
{
  unsigned __int8 v4 = (void *)(v2 + *(int *)(*(void *)(v3 - 144) + 20));
  *unsigned __int8 v4 = result;
  v4[1] = a2;
  *(unsigned char *)(v3 - 67) = 2;
  return result;
}

void sub_252CB95F4()
{
  *(void *)(v0 - 64) = 0;
  *(void *)(v0 - 56) = 0xE000000000000000;
}

uint64_t sub_252CB9614(uint64_t a1)
{
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
  uint64_t result = type metadata accessor for SystemPromptResolution(0);
  uint64_t v3 = v1 + *(int *)(result + 32);
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(unsigned char *)(v3 + 16) = 2;
  return result;
}

uint64_t sub_252CB965C()
{
  *(unsigned char *)(v0 - 67) = 2;
  return v0 - 67;
}

unint64_t sub_252CB966C@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_252CB967C()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_252D1A448();
}

uint64_t sub_252CB96A4()
{
  return sub_252D1A498();
}

uint64_t sub_252CB96E0()
{
  return sub_252D19588();
}

uint64_t sub_252CB9708()
{
  return 0;
}

void sub_252CB9730()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 72) = v0[1];
  uint64_t v3 = v0[3];
  *(void *)(v1 - 208) = v0[2];
  *(void *)(v1 - 200) = v2;
  *(void *)(v1 - 192) = v3;
  *(void *)(v1 - 216) = v0[5];
  *(unsigned char *)(v1 - 152) = 1;
}

uint64_t sub_252CB9760()
{
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CB978C()
{
  return v0;
}

uint64_t sub_252CB979C()
{
  sub_252AD16E4(v0, v5, v3);
  return sub_252AD16E4(v1, v4, v2);
}

uint64_t sub_252CB97D8()
{
  return v0;
}

uint64_t sub_252CB97E8()
{
  *(unsigned char *)(v0 - 96) = 1;
  return sub_252D19588();
}

uint64_t sub_252CB9810()
{
  *(unsigned char *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_252CB982C()
{
  return 0;
}

uint64_t sub_252CB9848(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_252CB9874@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
  return 0;
}

uint64_t sub_252CB9888()
{
  return 0;
}

__n128 sub_252CB9894()
{
  result.n128_u8[0] = *(unsigned char *)(v0 - 112);
  return result;
}

uint64_t sub_252CB98A8()
{
  return sub_252D1A578();
}

uint64_t sub_252CB98C8()
{
  return _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
}

uint64_t sub_252CB98E8()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB9908()
{
  *(void *)(v1 - 568) = v0;
  return 1;
}

uint64_t sub_252CB9934()
{
  return swift_initStructMetadata();
}

uint64_t sub_252CB9954()
{
  return v0;
}

uint64_t sub_252CB9960()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CB9978()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB9998()
{
  return sub_252D1A3E8();
}

uint64_t _s16IntelligenceFlow18ActionConfirmationV15parameterValuesSDySSAA14ParameterValueVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CB99C0()
{
  return sub_252BA661C();
}

uint64_t sub_252CB99D8()
{
  return v0;
}

uint64_t sub_252CB99EC()
{
  return v0;
}

uint64_t sub_252CB99F8()
{
  return sub_252D19BE8();
}

uint64_t sub_252CB9A18()
{
  return sub_252D19BE8();
}

uint64_t sub_252CB9A44()
{
  return sub_252D1A718();
}

uint64_t sub_252CB9A64()
{
  return sub_252D1A718();
}

uint64_t sub_252CB9A84()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_252CB9A98()
{
  return v0;
}

void sub_252CB9AA4()
{
  *(void *)(v1 - 72) = *(void *)v0;
  *(void *)(v1 - 192) = *(void *)(v0 + 16);
  *(_DWORD *)(v1 - 200) = *(unsigned __int8 *)(v0 + 24);
  *(unsigned char *)(v1 - 152) = 5;
}

uint64_t sub_252CB9AD0()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CB9AF0()
{
  return v0;
}

uint64_t sub_252CB9AFC()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CB9B20()
{
  return sub_252D19BE8();
}

uint64_t sub_252CB9B3C()
{
  *(void *)(v3 - 144) = v2;
  *(void *)(v3 - 136) = v0;
  *(void *)(v3 - 88) = v1;
  return sub_252D1A4C8();
}

uint64_t sub_252CB9B6C()
{
  type metadata accessor for MessagePayload.ClientAction(0);
  return sub_252D19588();
}

uint64_t sub_252CB9BB8()
{
  return 1;
}

uint64_t sub_252CB9BC8()
{
  return 1;
}

uint64_t sub_252CB9BD8()
{
  *(void *)(v1 - 184) = v0;
  return 1;
}

uint64_t sub_252CB9C00()
{
  return sub_252D1A498();
}

uint64_t sub_252CB9C18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CB9C40()
{
  *uint64_t v0 = *v1;
  v0[1] = v1[1];
  return 0;
}

uint64_t sub_252CB9C58()
{
  return sub_252D1A498();
}

uint64_t sub_252CB9C70()
{
  *(_OWORD *)(v0 + *(int *)(v2 + 28)) = *(_OWORD *)(v1 + *(int *)(v2 + 28));
  *(_OWORD *)(v0 + *(int *)(v2 + 32)) = *(_OWORD *)(v1 + *(int *)(v2 + 32));
  return v0;
}

__n128 sub_252CB9C98@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  *(_DWORD *)(v2 - 88) = *(_DWORD *)v3;
  __n128 result = *(__n128 *)(v3 + 8);
  *(__n128 *)(v2 - 80) = result;
  return result;
}

uint64_t sub_252CB9CB0()
{
  return v0;
}

uint64_t sub_252CB9CBC()
{
  return sub_252C0DA94(v0, v1);
}

uint64_t sub_252CB9CE0()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CB9CF8()
{
  return sub_252D1A718();
}

unint64_t sub_252CB9D1C()
{
  *(void *)(v5 - 152) = *(void *)(v5 - 200);
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = *(void *)(v5 - 208);
  *(void *)(v5 - 128) = v3;
  uint64_t v7 = *(void *)(v5 - 216);
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v7;
  *(void *)(v5 - 104) = v0;
  *(_WORD *)(v5 - 96) = v2;
  return sub_252C0B560();
}

uint64_t sub_252CB9D50()
{
  *(unsigned char *)(v0 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CB9D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t result = *(void *)(v3 + 16);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)v3;
  *(void *)(v1 + 8) = v5;
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_252CB9D9C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_252CB9DAC()
{
  uint64_t v1 = *(void *)(v0 - 144);
  uint64_t v2 = *(void *)(v0 - 552);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 - 160);
  *(void *)(v2 + 16) = v1;
  return v2;
}

uint64_t sub_252CB9DD4()
{
  return v0;
}

uint64_t sub_252CB9DE0()
{
  return v0;
}

uint64_t sub_252CB9DF8()
{
  return v0;
}

uint64_t sub_252CB9E10()
{
  return sub_252D1A4D8();
}

unint64_t sub_252CB9E28()
{
  *(void *)(v5 - 152) = *(void *)(v5 - 72);
  *(void *)(v5 - 144) = v3;
  *(void *)(v5 - 72) = v3;
  *(void *)(v5 - 136) = *(void *)(v5 - 192);
  *(unsigned char *)(v5 - 128) = *(_DWORD *)(v5 - 200);
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v2;
  *(void *)(v5 - 104) = v0;
  *(void *)(v5 - 96) = v1;
  return sub_252C0B430();
}

uint64_t sub_252CB9E5C()
{
  return v0;
}

void sub_252CB9E74()
{
  *(unsigned char *)(v0 - 104) = 1;
}

uint64_t sub_252CB9E80(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_252CB9E9C()
{
  uint64_t v1 = *(void *)(v0 - 128);
  long long v2 = *(_OWORD *)(v0 - 144);
  uint64_t v3 = *(void *)(v0 - 504);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 - 160);
  *(_OWORD *)(v3 + 16) = v2;
  *(void *)(v3 + 32) = v1;
  return v3;
}

uint64_t sub_252CB9EC4()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_252D19588();
}

uint64_t sub_252CB9EDC()
{
  char v1 = *(unsigned char *)(v0 - 144);
  uint64_t v2 = *(void *)(v0 - 528);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 - 160);
  *(unsigned char *)(v2 + 16) = v1;
  return v2;
}

uint64_t sub_252CB9F04()
{
  return sub_252D1A578();
}

uint64_t sub_252CB9F20()
{
  return sub_252D19588();
}

uint64_t sub_252CB9F3C()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CB9F60()
{
  return v0;
}

uint64_t sub_252CB9F6C()
{
  return sub_252AD16F8(v0, v1, 2);
}

uint64_t sub_252CB9F88()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CB9FD0()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CB9FE8()
{
  return sub_252D19588();
}

uint64_t sub_252CBA018()
{
  return sub_252D1A498();
}

uint64_t sub_252CBA030()
{
  *uint64_t v0 = *v1;
  uint64_t result = v1[1];
  v0[1] = result;
  v0[2] = v1[2];
  v0[3] = v1[3];
  return result;
}

uint64_t sub_252CBA054()
{
  uint64_t v6 = *v3;
  uint64_t v7 = v3[1];
  char v8 = *((unsigned char *)v3 + 16);
  *(void *)(v4 - 152) = v2;
  *(void *)(v4 - 144) = v1;
  *(unsigned char *)(v4 - 136) = v0;
  *(void *)(v4 - 216) = v6;
  *(void *)(v4 - 208) = v7;
  *(unsigned char *)(v4 - 200) = v8;
  return static ActionRequirement.== infix(_:_:)(v4 - 152, v4 - 216);
}

uint64_t sub_252CBA084()
{
  return sub_252AD1724(v6, v5, v4, v3, v2, v1, v0);
}

uint64_t sub_252CBA0B4()
{
  sub_252ACE78C(v4, v5, v2, v1, v0);
  return v3;
}

uint64_t sub_252CBA0F0()
{
  *(void *)(v1 - 128) = v0;
  *(unsigned char *)(v1 - 65) = 0;
  return sub_252D1A448();
}

uint64_t sub_252CBA120()
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  sub_252ACE7BC(v2, v3, v4);
  *(void *)uint64_t v0 = v2;
  *(void *)(v0 + 8) = v3;
  *(unsigned char *)(v0 + 16) = v4;
  return v0;
}

void sub_252CBA15C(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t sub_252CBA168()
{
  return v0;
}

uint64_t sub_252CBA174()
{
  return v0;
}

__n128 sub_252CBA180()
{
  uint64_t v3 = (__n128 *)(v0 + *(int *)(v1 + 24));
  unint64_t v4 = v3[1].n128_u64[0];
  __n128 result = *v3;
  *(__n128 *)(v2 - 96) = *v3;
  *(void *)(v2 - 80) = v4;
  *(unsigned char *)(v2 - 97) = 2;
  return result;
}

uint64_t sub_252CBA1C8()
{
  return v0;
}

uint64_t sub_252CBA1D4()
{
  return v0;
}

void *sub_252CBA1E0(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

__n128 sub_252CBA21C@<Q0>(int a1@<W8>)
{
  uint64_t v4 = v2 + v1;
  *(_DWORD *)uint64_t v4 = a1;
  __n128 result = *(__n128 *)(v3 - 96);
  *(__n128 *)(v4 + 8) = result;
  return result;
}

uint64_t sub_252CBA230(uint64_t a1, unint64_t a2)
{
  return sub_252C089D0(a1, a2);
}

uint64_t sub_252CBA260()
{
  return 0;
}

uint64_t sub_252CBA274()
{
  uint64_t v5 = *(void *)(v3 - 88);
  *uint64_t v0 = v2;
  v0[1] = v1;
  v0[2] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CBA294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *uint64_t v11 = v15;
  v11[1] = v14;
  uint64_t v17 = (void *)(v13 + *(int *)(v16 + 24));
  uint64_t result = a11;
  *uint64_t v17 = v12;
  v17[1] = a10;
  return result;
}

uint64_t sub_252CBA2B4(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_252CBA2C4(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_252CBA2D8()
{
  return 1;
}

uint64_t sub_252CBA2E8()
{
  sub_252AD16E4(v2, v3, v5);
  return sub_252AD16E4(v4, v1, v0);
}

uint64_t sub_252CBA348()
{
  return sub_252D1A498();
}

uint64_t sub_252CBA374()
{
  *(void *)(v3 - 240) = v0;
  return sub_252C089D0(v1, v2);
}

uint64_t sub_252CBA3A0()
{
  return sub_252D1A4D8();
}

unsigned char *sub_252CBA3CC@<X0>(char a1@<W8>)
{
  unint64_t v2 = *(unsigned char **)(v1 - 256);
  *unint64_t v2 = a1;
  return v2;
}

uint64_t sub_252CBA3E0()
{
  *uint64_t v0 = *v1;
  type metadata accessor for ParameterNotAllowed(0);
  return sub_252D19BE8();
}

void *sub_252CBA424()
{
  uint64_t v1 = *(void **)(v0 - 512);
  *uint64_t v1 = *(void *)(v0 - 160);
  return v1;
}

uint64_t sub_252CBA444@<X0>(void *a1@<X8>)
{
  *uint64_t v1 = *a1;
  uint64_t result = a1[1];
  v1[1] = result;
  return result;
}

uint64_t sub_252CBA458()
{
  return v0;
}

uint64_t sub_252CBA46C()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CBA484()
{
  return v0;
}

uint64_t sub_252CBA498()
{
  return sub_252C06474();
}

uint64_t sub_252CBA4B0()
{
  return sub_252D1A458();
}

uint64_t sub_252CBA4DC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  return sub_252D19BE8();
}

uint64_t sub_252CBA4FC()
{
  return v0;
}

uint64_t sub_252CBA50C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBA528()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBA548()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBA564()
{
  return sub_252D1A738();
}

void sub_252CBA5C8()
{
  *(unsigned char *)(v0 - 65) = 3;
}

uint64_t sub_252CBA5D4()
{
  return sub_252D1A408();
}

uint64_t sub_252CBA5F4()
{
  return v0;
}

uint64_t sub_252CBA600()
{
  return v0;
}

uint64_t sub_252CBA60C()
{
  return sub_252D1A5D8();
}

uint64_t sub_252CBA628()
{
  return sub_252D1A498();
}

uint64_t sub_252CBA648()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CBA674()
{
  return sub_252D1A498();
}

uint64_t sub_252CBA6A0()
{
  return sub_252D1A498();
}

uint64_t sub_252CBA6CC()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CBA6E8()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CBA700()
{
  return sub_252D19DD8();
}

uint64_t sub_252CBA718()
{
  return v0;
}

uint64_t sub_252CBA724()
{
  return v0;
}

uint64_t sub_252CBA730()
{
  return v0;
}

uint64_t sub_252CBA73C(uint64_t a1)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
}

uint64_t sub_252CBA75C()
{
  return sub_252D1A738();
}

void sub_252CBA77C()
{
  *(void *)(v2 - 152) = v0;
  *(void *)(v2 - 144) = v1;
  *(unsigned char *)(v2 - 65) = 0;
}

uint64_t sub_252CBA790()
{
  return v0;
}

uint64_t sub_252CBA79C()
{
  return v0;
}

uint64_t sub_252CBA7A8()
{
  return v0 - 72;
}

uint64_t sub_252CBA7BC()
{
  return sub_252D19BE8();
}

void sub_252CBA7FC()
{
  *(unsigned char *)(v0 - 65) = 2;
}

void sub_252CBA808()
{
  *(unsigned char *)(v0 - 67) = 2;
}

void sub_252CBA818()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t sub_252CBA828()
{
  return sub_252D1A578();
}

uint64_t sub_252CBA854()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_252D1A528();
}

uint64_t sub_252CBA880()
{
  return sub_252D1A738();
}

uint64_t sub_252CBA8B0()
{
  return sub_252D1A718();
}

uint64_t sub_252CBA92C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_252CBA94C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void *sub_252CBA9CC()
{
  return malloc(0x30uLL);
}

uint64_t sub_252CBA9E8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 136) = a1;
  return 0;
}

uint64_t sub_252CBAA08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_252AC3A24(a3);
}

uint64_t sub_252CBAA24()
{
  return 0;
}

uint64_t sub_252CBAA44()
{
  return _s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_252CBAA5C(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  return sub_252D19588();
}

uint64_t sub_252CBAA78()
{
  return v0;
}

uint64_t sub_252CBAA88()
{
  return v0;
}

uint64_t sub_252CBAA94()
{
  return v0;
}

uint64_t sub_252CBAAA0()
{
  return sub_252C08D48(v1, v0);
}

uint64_t sub_252CBAABC()
{
  return v0;
}

uint64_t sub_252CBAAD0()
{
  return v0;
}

uint64_t sub_252CBAAE4()
{
  return v0;
}

uint64_t sub_252CBAAF4()
{
  return v0;
}

uint64_t sub_252CBAB04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CBAB24()
{
  return sub_252D1A538();
}

uint64_t sub_252CBAB40()
{
  return sub_252C08D48(v0, v1);
}

uint64_t sub_252CBAB5C()
{
  return sub_252C08D04(v0, v1);
}

uint64_t sub_252CBAB78()
{
  sub_252C099B4(v2, v1, v0);
  return swift_bridgeObjectRelease();
}

void *sub_252CBABAC(void *result)
{
  *uint64_t v1 = result;
  *uint64_t result = v2;
  return result;
}

uint64_t sub_252CBABBC()
{
  return v0;
}

uint64_t sub_252CBABD0()
{
  return sub_252D19588();
}

uint64_t sub_252CBABF0()
{
  return sub_252BA6670();
}

uint64_t sub_252CBAC10()
{
  return 0;
}

uint64_t sub_252CBAC24()
{
  return sub_252D19588();
}

uint64_t sub_252CBAC50(uint64_t a1)
{
  uint64_t v3 = *(int *)(a1 + 20);
  *(void *)(v2 - 104) = v1;
  return v1 + v3;
}

uint64_t sub_252CBAC6C()
{
  *(void *)(v4 - 176) = v1;
  *(void *)(v4 - 168) = v2;
  *(void *)(v4 - 160) = v0;
  *(void *)(v4 - 88) = v3;
  return sub_252D1A4C8();
}

uint64_t sub_252CBACA0()
{
  return v0;
}

uint64_t sub_252CBACAC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBACD4()
{
  return sub_252BA661C();
}

uint64_t sub_252CBACEC()
{
  return sub_252D1A578();
}

uint64_t sub_252CBAD14()
{
  return sub_252D1A578();
}

uint64_t sub_252CBAD3C@<X0>(void *a1@<X8>)
{
  uint64_t result = a1[1];
  *uint64_t v1 = *a1;
  v1[1] = result;
  return result;
}

uint64_t sub_252CBAD54()
{
  return v0;
}

uint64_t sub_252CBAD60()
{
  return v0;
}

uint64_t sub_252CBAD6C()
{
  return sub_252C06474();
}

void sub_252CBAD90()
{
  *(unsigned char *)(v0 + *(int *)(v2 + 32)) = *(unsigned char *)(v1 + *(int *)(v2 + 32));
}

uint64_t _s16IntelligenceFlow14MessagePayloadO5QueryV9variablesSDySS7ToolKit10TypedValueOGSgvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CBADB4()
{
  return sub_252D1A3E8();
}

void *sub_252CBADDC()
{
  *(void *)(v2 - 120) = *(void *)(v0 + 16);
  return sub_252AC3A68(v1, v1[3]);
}

uint64_t sub_252CBAE10()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CBAE38()
{
  return sub_252D1A498();
}

uint64_t sub_252CBAE6C()
{
  return swift_bridgeObjectRetain();
}

void sub_252CBAE94(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
}

uint64_t sub_252CBAEAC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 104) = a2;
  return sub_252AC3A24(a1);
}

void sub_252CBAEE0()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_252CBAEEC()
{
  *(void *)(v4 - 96) = v0;
  uint64_t v6 = *(int *)(v0 + 20);
  return sub_252CB7E00(v1 + v6, v3, v2);
}

uint64_t sub_252CBAF14()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CBAF2C()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CBAF44(uint64_t a1)
{
  uint64_t result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, 1, 1, a1);
  uint64_t v5 = (void *)(v1 + *(int *)(v2 + 24));
  *uint64_t v5 = 0;
  v5[1] = 0;
  v5[2] = 0;
  return result;
}

uint64_t sub_252CBAF78()
{
  return 0;
}

void sub_252CBAF9C()
{
  *(unsigned char *)(v0 - 68) = 2;
}

void sub_252CBAFA8()
{
  *(unsigned char *)(v0 - 104) = 2;
}

void sub_252CBAFB4()
{
  *(unsigned char *)(v0 - 81) = 1;
}

void sub_252CBAFC0()
{
  *(unsigned char *)(v0 - 67) = 1;
}

uint64_t sub_252CBAFCC()
{
  return sub_252D1A4E8();
}

uint64_t sub_252CBAFE4()
{
  return v0;
}

uint64_t sub_252CBB000()
{
  return sub_252D1A578();
}

uint64_t sub_252CBB028()
{
  *(unsigned char *)(v1 - 65) = 0;
  return v0;
}

uint64_t sub_252CBB044()
{
  return sub_252D1A738();
}

uint64_t sub_252CBB06C()
{
  return type metadata accessor for MessagePayload.RequestContent(0);
}

uint64_t sub_252CBB0B0()
{
  return sub_252D19BE8();
}

uint64_t sub_252CBB0F4()
{
  return sub_252D19588();
}

uint64_t sub_252CBB11C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v3 = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return ActionOutcome.asStatementOutcome.getter((uint64_t)v3);
}

uint64_t sub_252CBB160(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t sub_252CBB17C()
{
  return type metadata accessor for MessagePayload.ClientAction(0);
}

uint64_t sub_252CBB194()
{
  return type metadata accessor for MessagePayload.Request(0);
}

uint64_t sub_252CBB1AC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBB1C4()
{
  return v0;
}

uint64_t sub_252CBB1D0()
{
  return v0;
}

void sub_252CBB1DC()
{
  *(_DWORD *)(v1 - 128) = v0;
  *(unsigned char *)(v1 - 65) = 1;
}

uint64_t _s16IntelligenceFlow21ParameterConfirmationV14parameterIndexSiSgvs_0(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

__n128 sub_252CBB218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  __n128 result = a9;
  __n128 *v10 = a9;
  v10[1].n128_u64[0] = v9;
  return result;
}

uint64_t sub_252CBB244()
{
  return v0;
}

uint64_t sub_252CBB254()
{
  *uint64_t v1 = v0;
  return sub_252D1A3F8();
}

uint64_t sub_252CBB278()
{
  *uint64_t v1 = v0;
  return sub_252D1A3F8();
}

__n128 sub_252CBB29C()
{
  __n128 result = *(__n128 *)(v0 - 104);
  *(__n128 *)(v0 - 128) = result;
  return result;
}

void sub_252CBB2CC()
{
  *(void *)(v1 - 88) = v0;
}

void sub_252CBB2DC(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = v1;
  *(void *)(v2 - 112) = a1;
}

void sub_252CBB2EC(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
}

void sub_252CBB2F4(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_252CBB30C()
{
  return v0 - 96;
}

uint64_t sub_252CBB334()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBB358()
{
  *uint64_t v0 = *v1;
  return type metadata accessor for ActionSuccess.FollowUpAction.ExecutableAction.LinkAction(0);
}

uint64_t sub_252CBB398()
{
  return v0;
}

uint64_t sub_252CBB3A4()
{
  return v0;
}

uint64_t sub_252CBB3B0()
{
  return v0;
}

uint64_t sub_252CBB3BC()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CBB3D4()
{
  return v0;
}

uint64_t sub_252CBB3E4()
{
  return v0;
}

uint64_t sub_252CBB3FC()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CBB414()
{
  return sub_252D1A718();
}

uint64_t sub_252CBB43C()
{
  return v0;
}

uint64_t sub_252CBB454()
{
  return sub_252C06474();
}

uint64_t sub_252CBB46C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBB490()
{
  return sub_252D1A578();
}

uint64_t sub_252CBB4B4()
{
  return sub_252D1A578();
}

uint64_t sub_252CBB4D8()
{
  return sub_252D1A578();
}

uint64_t sub_252CBB4FC()
{
  return v0;
}

uint64_t sub_252CBB514()
{
  return v0;
}

uint64_t sub_252CBB52C()
{
  uint64_t v2 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v2;
  return 0;
}

uint64_t sub_252CBB53C()
{
  *(void *)(v1 - 240) = v0;
  return sub_252BA661C();
}

uint64_t sub_252CBB560()
{
  return 0;
}

uint64_t sub_252CBB578()
{
  return 0;
}

uint64_t sub_252CBB590()
{
  return v0;
}

uint64_t sub_252CBB59C()
{
  uint64_t v2 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v2;
  return 0;
}

uint64_t sub_252CBB5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 128) = (char *)&a9 - v9;
  return sub_252D19588();
}

void sub_252CBB618()
{
  static MessagePayload.RequestContent.== infix(_:_:)();
}

uint64_t sub_252CBB63C()
{
  *(unsigned char *)(v1 + 16) = *(unsigned char *)(v0 + 16);
  *(unsigned char *)(v1 + 17) = *(unsigned char *)(v0 + 17);
  return v1;
}

uint64_t sub_252CBB654()
{
  *(unsigned char *)(v0 - 69) = 4;
  return v0 - 69;
}

uint64_t sub_252CBB664()
{
  *(unsigned char *)(v0 - 69) = 4;
  return 0;
}

void sub_252CBB67C()
{
  *(unsigned char *)(v0 - 104) = 3;
}

uint64_t sub_252CBB688()
{
  return v0;
}

uint64_t sub_252CBB698()
{
  return v0;
}

uint64_t sub_252CBB6B4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_252CBB6C4()
{
  return v0;
}

uint64_t sub_252CBB6D4()
{
  return v0;
}

uint64_t sub_252CBB6F0()
{
  return 0;
}

void sub_252CBB708()
{
  *(_DWORD *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
}

uint64_t sub_252CBB714()
{
  return 0;
}

void sub_252CBB724(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

void sub_252CBB730()
{
  *(void *)(v2 - 160) = v1;
  *(void *)(v2 - 72) = v0;
}

uint64_t sub_252CBB778()
{
  *(unsigned char *)(v0 - 104) = 0;
  return sub_252D1A448();
}

uint64_t sub_252CBB79C()
{
  return 0;
}

void sub_252CBB7A8(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1 + 16) = v1;
}

uint64_t sub_252CBB7B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (uint64_t *)(v2 + a1);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = v4[2];
  *unsigned int v1 = *v4;
  v1[1] = v6;
  v1[2] = v7;
  return sub_252C08D04(v5, v6);
}

uint64_t sub_252CBB7DC()
{
  return sub_252BA661C();
}

uint64_t sub_252CBB7F8@<X0>(uint64_t a1@<X8>)
{
  return sub_252CB7E00(v2 + a1, v3, v1);
}

uint64_t sub_252CBB814()
{
  return v0;
}

uint64_t sub_252CBB82C()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_252CBB83C()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16IntelligenceFlow13ActionFailureV21DeveloperDefinedErrorV15localizedString6domain4codeAESS_SSSitcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_252CBB868()
{
  return v0;
}

uint64_t sub_252CBB880()
{
  return sub_252AC5C14(v0, v1);
}

uint64_t sub_252CBB898()
{
  return v0;
}

uint64_t sub_252CBB8A8()
{
  return sub_252D1A718();
}

uint64_t sub_252CBB8CC()
{
  return sub_252D1A718();
}

uint64_t sub_252CBB8F0()
{
  return sub_252D1A718();
}

uint64_t sub_252CBB914()
{
  uint64_t v3 = *(void *)(v1 - 72);
  return sub_252C089D0(v3, v0);
}

void sub_252CBB938()
{
  uint64_t v1 = *(void *)(v0 - 128);
  *(void *)(v0 - 96) = *(void *)(v0 - 120);
  *(void *)(v0 - 88) = v1;
}

uint64_t sub_252CBB948()
{
  return sub_252D1A438();
}

uint64_t sub_252CBB960()
{
  return sub_252D1A498();
}

uint64_t sub_252CBB97C()
{
  return sub_252D1A718();
}

uint64_t sub_252CBB9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_252CBB9C4()
{
  return sub_252CB7E00(v1, v0, v2);
}

uint64_t sub_252CBBA08()
{
  return v0 - 192;
}

uint64_t sub_252CBBA14()
{
  return sub_252D1A508();
}

uint64_t sub_252CBBA68()
{
  return v0;
}

uint64_t sub_252CBBA80()
{
  return sub_252D1A738();
}

uint64_t sub_252CBBA9C()
{
  return sub_252D1A738();
}

uint64_t sub_252CBBAC0(void *a1, void *a2)
{
  uint64_t result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  return result;
}

uint64_t sub_252CBBADC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
  return 0;
}

uint64_t sub_252CBBAEC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBBB08()
{
  return type metadata accessor for InterpretedStatementResult(0);
}

uint64_t sub_252CBBB20()
{
  return type metadata accessor for ActionResponse(0);
}

uint64_t sub_252CBBB38()
{
  return type metadata accessor for SystemResponse(0);
}

uint64_t sub_252CBBB50()
{
  return type metadata accessor for ActionSuccess(0);
}

uint64_t sub_252CBBB74()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CBBB90(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  return swift_bridgeObjectRelease();
}

void sub_252CBBBB4()
{
  *(unsigned char *)(v0 - 152) = 10;
}

uint64_t sub_252CBBBCC()
{
  return v0;
}

uint64_t sub_252CBBBDC()
{
  sub_252B226FC();
  return sub_252B226FC();
}

uint64_t sub_252CBBC18()
{
  return v0;
}

uint64_t sub_252CBBC34()
{
  return v0;
}

uint64_t sub_252CBBC40()
{
  return v0;
}

uint64_t sub_252CBBC4C()
{
  return v0;
}

void sub_252CBBC58(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t sub_252CBBC64()
{
  return v0 & 1;
}

uint64_t sub_252CBBC70()
{
  return sub_252C0DA94(v0, v1);
}

uint64_t sub_252CBBC94()
{
  return v0;
}

uint64_t sub_252CBBCAC()
{
  return v0;
}

unint64_t sub_252CBBCBC()
{
  return sub_252BA62F0(v0);
}

uint64_t sub_252CBBCD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_252CB7E00(v3, v4, a3);
}

uint64_t sub_252CBBCF0()
{
  return sub_252D19DB8();
}

uint64_t sub_252CBBD0C()
{
  return v0;
}

uint64_t sub_252CBBD18()
{
  return sub_252BA661C();
}

uint64_t sub_252CBBD30()
{
  return v0;
}

uint64_t sub_252CBBD3C()
{
  return 0;
}

uint64_t sub_252CBBD60()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CBBD84()
{
  return v0;
}

uint64_t sub_252CBBD94()
{
  return sub_252CB7E00(v2, v0, v1);
}

BOOL sub_252CBBDB8@<W0>(uint64_t a1@<X8>)
{
  return *(unsigned __int8 *)(v2 + a1) == *(unsigned __int8 *)(v1 + a1);
}

uint64_t sub_252CBBDCC()
{
  *uint64_t v1 = v0;
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(*(void *)(v2 - 88));
}

uint64_t sub_252CBBDEC(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(a1 + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  unsigned __int8 v6 = *(unsigned char *)(v3 + 16);
  return sub_252AD1694(v4, v5, v6);
}

uint64_t sub_252CBBE20@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_252CBBE40()
{
  return v0;
}

void sub_252CBBE54()
{
  *(_DWORD *)(v1 - 72) = *(unsigned __int8 *)(v0 + 16);
  *(_DWORD *)(v1 - 92) = *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_252CBBE7C()
{
  return 0;
}

uint64_t sub_252CBBE9C()
{
  *uint64_t v2 = v1;
  v2[1] = v0;
  return sub_252D19BE8();
}

uint64_t sub_252CBBEC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CBBEE0()
{
  return sub_252D1A498();
}

void *sub_252CBBEF8(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  return malloc(v1);
}

uint64_t sub_252CBBF10()
{
  return sub_252D1A498();
}

uint64_t sub_252CBBF28@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
  return sub_252D19B58();
}

void sub_252CBBF48()
{
  *(void *)(v1 - 88) = v0;
}

unsigned char *_s16IntelligenceFlow14MessagePayloadO22PlannerReturnedRawPlanV6sourceAE6SourceOvs_0(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t sub_252CBBF60(void *a1)
{
  *uint64_t v1 = a1;
  *a1 = v2;
  return 0;
}

uint64_t sub_252CBBF74()
{
  return v0;
}

uint64_t sub_252CBBFC0()
{
  return sub_252D1A4D8();
}

void sub_252CBBFEC()
{
  *(void *)(v3 - 192) = v2;
  *(void *)(v3 - 184) = v0;
  *(void *)(v3 - 176) = v1;
}

uint64_t sub_252CBBFF8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBC024()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CBC03C()
{
  return sub_252D1A578();
}

uint64_t sub_252CBC070@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(*(void *)(a1 - 256) + 24);
}

uint64_t sub_252CBC084@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(*(void *)(a1 - 256) + 20);
}

uint64_t sub_252CBC098()
{
  return sub_252D1A498();
}

uint64_t sub_252CBC0B8()
{
  return sub_252D1A498();
}

uint64_t sub_252CBC0D8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  return 0;
}

uint64_t sub_252CBC0EC()
{
  return 1;
}

void sub_252CBC100()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(unsigned char *)(v0 + 24) = *(unsigned char *)(v1 + 24);
}

uint64_t sub_252CBC114()
{
  return sub_252D1A738();
}

uint64_t sub_252CBC140()
{
  return sub_252D19BE8();
}

void sub_252CBC160()
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(unsigned char *)(v0 + 24) = *(unsigned char *)(v1 + 24);
  *(void *)(v0 + 16) = v2;
}

uint64_t sub_252CBC174()
{
  return *(void *)(v0 - 136);
}

uint64_t sub_252CBC188()
{
  return sub_252D1A498();
}

uint64_t sub_252CBC1A8()
{
  return sub_252D1A498();
}

uint64_t sub_252CBC1C8()
{
  return sub_252D1A498();
}

uint64_t sub_252CBC1E8()
{
  return swift_initStructMetadata();
}

uint64_t sub_252CBC208()
{
  return sub_252D1A738();
}

uint64_t sub_252CBC228@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 144) = a1;
  return sub_252D19588();
}

void sub_252CBC27C()
{
  *(unsigned char *)(v0 - 71) = 6;
}

void sub_252CBC288()
{
  *(unsigned char *)(v0 - 65) = 5;
}

void sub_252CBC294()
{
  *(unsigned char *)(v0 - 70) = 5;
}

uint64_t sub_252CBC2A0()
{
  return *(void *)(v0 + *(int *)(v1 + 36));
}

void sub_252CBC2B4()
{
  *(unsigned char *)(v0 - 104) = 4;
}

uint64_t sub_252CBC2C0()
{
  *(unsigned char *)(v0 - 68) = 3;
  return v0 - 68;
}

uint64_t sub_252CBC2D4()
{
  return sub_252D1A448();
}

uint64_t sub_252CBC2F4()
{
  return v0 - 104;
}

uint64_t sub_252CBC308()
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 0, 1, v0);
}

uint64_t sub_252CBC328()
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 0, 1, v1);
}

uint64_t sub_252CBC348()
{
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v1);
  return v0;
}

uint64_t sub_252CBC364()
{
  return v0;
}

uint64_t sub_252CBC378()
{
  return v0;
}

void sub_252CBC390()
{
  sub_252AD16D8(v0);
}

uint64_t sub_252CBC3A8()
{
  return v0;
}

uint64_t sub_252CBC3B4()
{
  return v0;
}

uint64_t _s16IntelligenceFlow21ParameterConfirmationV14parameterIndexSiSgvg_0()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_252CBC3CC()
{
  return v0;
}

uint64_t sub_252CBC3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for ActionResponse(0);
}

uint64_t sub_252CBC40C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CBC42C()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_252CBC438()
{
  return 0;
}

uint64_t sub_252CBC470(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_252CBC490()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CBC4B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 - 112) = a3;
  *(void *)(v4 - 104) = v3;
  return sub_252AC3A24(a2);
}

uint64_t sub_252CBC4D0()
{
  *(void *)(v1 - 112) = v0;
  return v0;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO015ClientInitiatedE6ActionV6toolId10parametersAESS_SDySS7ToolKit10TypedValueOGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO11SpeechQueryV9CandidateV11recognitionAGSS_tcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_252CBC4F0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 136) = a1;
  return 0;
}

uint64_t sub_252CBC51C()
{
  return v0;
}

uint64_t sub_252CBC530(uint64_t a1)
{
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
  return type metadata accessor for InterpretedStatementResult(0);
}

uint64_t sub_252CBC574()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CBC594()
{
  return sub_252B5A4CC(v1, v0);
}

uint64_t sub_252CBC5AC(uint64_t a1)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, a1);
}

void sub_252CBC5D8()
{
  *uint64_t v0 = *(void *)(v1 - 72);
}

unint64_t sub_252CBC5F0()
{
  *(void *)(v5 - 72) = v4;
  *(void *)(v5 - 152) = v4;
  *(void *)(v5 - 144) = v0;
  *(void *)(v5 - 136) = v1;
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 120) = v3;
  return sub_252C0C1D0();
}

void sub_252CBC610()
{
  *(unsigned char *)(v0 - 112) = 2;
}

uint64_t sub_252CBC61C()
{
  return sub_252D19BE8();
}

uint64_t sub_252CBC63C(uint64_t result)
{
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t sub_252CBC648()
{
  *(unsigned char *)(v0 - 66) = 1;
  return *(unsigned int *)(v0 - 72);
}

uint64_t sub_252CBC65C()
{
  *(unsigned char *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t sub_252CBC670(uint64_t result)
{
  uint64_t v4 = v2 + *(int *)(result + 20);
  *(void *)uint64_t v4 = v1;
  *(unsigned char *)(v4 + 8) = v3;
  return result;
}

uint64_t sub_252CBC684()
{
  return sub_252BA661C();
}

uint64_t sub_252CBC69C()
{
  return v0;
}

uint64_t sub_252CBC6B0()
{
  return v0 - 72;
}

uint64_t sub_252CBC6C4()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_252D19BE8();
}

uint64_t sub_252CBC6DC()
{
  *(unsigned char *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t sub_252CBC6F4()
{
  return sub_252D1A718();
}

uint64_t sub_252CBC728()
{
  return v0;
}

uint64_t sub_252CBC768()
{
  return type metadata accessor for SystemPromptResolution(0);
}

void sub_252CBC780()
{
  *(unsigned char *)(v0 - 152) = 8;
}

uint64_t sub_252CBC794()
{
  return sub_252D1A578();
}

uint64_t sub_252CBC7C0()
{
  return sub_252AC5C14(v1, v0);
}

uint64_t sub_252CBC7D8()
{
  return sub_252B1D710(v1, v0);
}

uint64_t sub_252CBC7F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CBC810()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_252CBC830(uint64_t a1, uint64_t a2)
{
  return *(__n128 *)a2;
}

uint64_t sub_252CBC85C()
{
  return sub_252BA661C();
}

uint64_t sub_252CBC87C()
{
  return v0;
}

void sub_252CBC888()
{
  *(unsigned char *)(v0 - 152) = 2;
}

uint64_t sub_252CBC89C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CBC8B4()
{
  return sub_252B5A4CC(v0, v1);
}

uint64_t sub_252CBC8CC()
{
  return v0;
}

uint64_t sub_252CBC8D8()
{
  return sub_252BA6670();
}

uint64_t sub_252CBC8F0()
{
  return sub_252BA661C();
}

uint64_t sub_252CBC908()
{
  return v0;
}

void *sub_252CBC914(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_252CBC92C()
{
  return sub_252BA661C();
}

uint64_t sub_252CBC944()
{
  return v0;
}

uint64_t sub_252CBC964()
{
  return sub_252D1A498();
}

uint64_t sub_252CBC984()
{
  return v0;
}

uint64_t sub_252CBC998()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBC9B0()
{
  return sub_252AC5C14(v1, v0);
}

uint64_t sub_252CBC9C8()
{
  return sub_252BA661C();
}

uint64_t sub_252CBC9E0()
{
  return v0;
}

uint64_t sub_252CBC9EC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CBCA18()
{
  return *(void *)(v0 - 160);
}

uint64_t sub_252CBCA2C()
{
  return sub_252D19BE8();
}

uint64_t SessionClientDebuggerEvent.init(payload:)()
{
  return sub_252CC6D18();
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.Payload(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2347D0);
}

void SessionClientDebuggerEvent.PostDeferredTransaction.init(id:from:)()
{
  sub_252AFC730();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v31 = v4;
  uint64_t v32 = v6;
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  char v8 = (int *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v12;
  uint64_t v13 = sub_252D19588();
  sub_252AEDBD0();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_252AF45D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v1, v5, v13);
  uint64_t v17 = *v3;
  uint64_t v28 = v3[1];
  uint64_t v18 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  sub_252AECE0C((uint64_t)v3 + v18[6], (uint64_t)v12);
  uint64_t v19 = v18[8];
  uint64_t v20 = (uint64_t *)((char *)v3 + v18[7]);
  uint64_t v21 = v20[1];
  uint64_t v29 = *v20;
  uint64_t v22 = *(uint64_t *)((char *)v3 + v19);
  uint64_t v23 = v0 + v8[9];
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v23, 1, 1, v13);
  sub_252B7E53C();
  v24();
  *(void *)(v0 + v8[7]) = v17;
  *(void *)(v0 + v8[8]) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_252AECE74((uint64_t)v30, v23);
  uint64_t v25 = (void *)(v0 + v8[10]);
  void *v25 = v29;
  v25[1] = v21;
  *(void *)(v0 + v8[11]) = v22;
  sub_252CC6D18();
  sub_252CC6D8C();
  sub_252B5F67C();
  v26();
  sub_252AFC718();
}

void SessionClientDebuggerEvent.InjectionResponse.init(id:respondingTo:with:)()
{
  sub_252AFC730();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_252D19588();
  sub_252AEDBD0();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_252B7E3F8();
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v16);
  sub_252CBA5B8();
  _s16IntelligenceFlow15SessionClientIDVACycfC_0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v12);
  uint64_t v17 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v0, v7 + *(int *)(v17 + 36), v12);
  sub_252CC6D8C();
  uint64_t v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  uint64_t v19 = (void *)(v11 + *(int *)(v18 + 24));
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  v20(v11, v1, v12);
  v20(v11 + *(int *)(v18 + 20), v0, v12);
  void *v19 = v5;
  v19[1] = v3;
  sub_252AFC718();
}

uint64_t SessionClientDebuggerEvent.payload.getter()
{
  return sub_252CC91CC();
}

uint64_t SessionClientDebuggerEvent.payload.setter()
{
  return sub_252CC923C();
}

uint64_t (*SessionClientDebuggerEvent.payload.modify())()
{
  return nullsub_1;
}

void static SessionClientDebuggerEvent.Payload.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v71 = v2;
  uint64_t v72 = v3;
  uint64_t v58 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  unint64_t v66 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_252AEDD78();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.DisableInjection(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AEDE70();
  uint64_t v65 = v9;
  uint64_t v10 = sub_252AEDD78();
  uint64_t v11 = type metadata accessor for SessionClientDebuggerEvent.EnableInjection(v10);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  sub_252AEDE70();
  uint64_t v64 = v13;
  uint64_t v14 = sub_252AEDD78();
  uint64_t v15 = type metadata accessor for SessionClientDebuggerEvent.Sync(v14);
  uint64_t v16 = sub_252AEA368(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v63 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_252AEDD78();
  uint64_t v57 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v18);
  sub_252AEA304();
  MEMORY[0x270FA5388](v19);
  uint64_t v67 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_252AEDD78();
  uint64_t v22 = type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(v21);
  uint64_t v23 = sub_252AEA368(v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v62 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_252AEDD78();
  uint64_t v26 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v25);
  uint64_t v27 = sub_252AEA368(v26);
  MEMORY[0x270FA5388](v27);
  sub_252AEDE70();
  uint64_t v61 = v28;
  uint64_t v29 = sub_252AEDD78();
  uint64_t v30 = type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(v29);
  uint64_t v31 = sub_252AEA368(v30);
  MEMORY[0x270FA5388](v31);
  sub_252AEDE70();
  uint64_t v60 = v32;
  uint64_t v33 = sub_252AEDD78();
  uint64_t v34 = type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(v33);
  uint64_t v35 = sub_252AEA368(v34);
  MEMORY[0x270FA5388](v35);
  uint64_t v59 = (char *)&v57 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_252AEDD78();
  type metadata accessor for SessionClientDebuggerEvent.Payload(v37);
  sub_252AEA304();
  MEMORY[0x270FA5388](v38);
  sub_252AEDC14();
  uint64_t v69 = v39;
  MEMORY[0x270FA5388](v40);
  sub_252AEDDB4();
  uint64_t v68 = v41;
  MEMORY[0x270FA5388](v42);
  sub_252CE3654();
  MEMORY[0x270FA5388](v43);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v44);
  sub_252AEDDB4();
  uint64_t v70 = v45;
  MEMORY[0x270FA5388](v46);
  sub_252B22BD0();
  MEMORY[0x270FA5388](v47);
  sub_252CB9300();
  MEMORY[0x270FA5388](v48);
  sub_252CB8500();
  MEMORY[0x270FA5388](v49);
  sub_252CBA5B8();
  uint64_t v50 = sub_252AC3A24(&qword_269C47D78);
  uint64_t v51 = sub_252AEA368(v50);
  MEMORY[0x270FA5388](v51);
  sub_252B7732C();
  sub_252CC91CC();
  sub_252CC91CC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CC91CC();
      if (sub_252CE3468() != 1) {
        goto LABEL_29;
      }
      goto LABEL_32;
    case 2u:
      sub_252CC91CC();
      if (sub_252CE3468() != 2) {
        goto LABEL_29;
      }
      sub_252CC6D18();
      static SessionClientDebuggerEvent.PostDeferredTransaction.== infix(_:_:)();
      sub_252CC6D8C();
      goto LABEL_33;
    case 3u:
      sub_252CC91CC();
      if (sub_252CE3468() == 3) {
        goto LABEL_21;
      }
      goto LABEL_29;
    case 4u:
      uint64_t v52 = v70;
      sub_252CC91CC();
      if (sub_252CE3468() != 4) {
        goto LABEL_29;
      }
      uint64_t v53 = v67;
      sub_252CC6D18();
      if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) != 0
        && (sub_252B1CC20(*(void *)(v52 + *(int *)(v57 + 20)), *(void *)&v53[*(int *)(v57 + 20)]) & 1) != 0)
      {
        goto LABEL_39;
      }
      goto LABEL_41;
    case 5u:
      sub_252CC91CC();
      if (sub_252CE3468() == 5) {
        goto LABEL_32;
      }
      goto LABEL_29;
    case 6u:
      if (sub_252CE3468() == 6) {
        goto LABEL_40;
      }
      goto LABEL_30;
    case 7u:
      sub_252CC91CC();
      if (sub_252CE3468() == 7) {
        goto LABEL_32;
      }
      goto LABEL_29;
    case 8u:
      sub_252CC91CC();
      if (sub_252CE3468() != 8) {
        goto LABEL_29;
      }
LABEL_21:
      sub_252CC6D18();
      sub_252CE36BC();
      sub_252CC6D8C();
      goto LABEL_33;
    case 9u:
      uint64_t v54 = v69;
      sub_252CC91CC();
      if (sub_252CE3468() != 9) {
        goto LABEL_29;
      }
      sub_252CC6D18();
      if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0
        || (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0)
      {
        goto LABEL_41;
      }
      if (*(void *)(v54 + *(int *)(v58 + 24) + 8) >> 60 == 15)
      {
        sub_252CE3B60();
        if (!(!v56 & v55)) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_252CE3B60();
        if (!v56 & v55)
        {
LABEL_37:
          sub_252CE3564();
LABEL_41:
          sub_252CC6D8C();
          goto LABEL_33;
        }
        sub_252CE35C8();
        sub_252CE3B08();
        if ((v0 & 1) == 0) {
          goto LABEL_41;
        }
      }
LABEL_39:
      sub_252CC6D8C();
      sub_252CC6D8C();
LABEL_40:
      sub_252CC6D8C();
LABEL_34:
      sub_252AFC718();
      return;
    default:
      sub_252CC91CC();
      if (sub_252CE3468())
      {
LABEL_29:
        sub_252CC6D8C();
LABEL_30:
        sub_252B5A4CC(v1, &qword_269C47D78);
      }
      else
      {
LABEL_32:
        sub_252CC6D18();
        _s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0();
        sub_252CC6D8C();
LABEL_33:
        sub_252CC6D8C();
        sub_252CC6D8C();
      }
      goto LABEL_34;
  }
}

uint64_t sub_252CBD9D0()
{
  return 0x64616F6C796170;
}

uint64_t sub_252CBD9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CBEDF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252CBDA18(uint64_t a1)
{
  unint64_t v2 = sub_252CC9118();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBDA54(uint64_t a1)
{
  unint64_t v2 = sub_252CC9118();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C47D80);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CC9118();
  sub_252B5F8D4();
  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  sub_252CC9184(&qword_269C47D90, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.Payload);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = sub_252CB9874(v2);
  type metadata accessor for SessionClientDebuggerEvent.Payload(v3);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  sub_252AF4404(v5, v11);
  sub_252AC3A24(&qword_269C47D98);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_252AF4420();
  uint64_t v8 = type metadata accessor for SessionClientDebuggerEvent(v7);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252CB85D0(v0);
  sub_252CC9118();
  sub_252CE37FC();
  if (!v1)
  {
    sub_252CC9184(&qword_269C47DA0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.Payload);
    sub_252CB9C00();
    sub_252B5F53C();
    v10();
    sub_252CC6D18();
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CBDD3C()
{
}

void sub_252CBDD54()
{
}

uint64_t SessionServerDebuggerEvent.payload.getter()
{
  return sub_252CC91CC();
}

uint64_t SessionServerDebuggerEvent.payload.setter()
{
  return sub_252CC923C();
}

uint64_t (*SessionServerDebuggerEvent.payload.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.init(payload:)()
{
  return sub_252CC6D18();
}

void static SessionServerDebuggerEvent.Payload.== infix(_:_:)()
{
  sub_252AFC730();
  *(void *)&long long v112 = v4;
  uint64_t v111 = v5;
  uint64_t v103 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_252B7E454((uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252AEDE70();
  uint64_t v12 = sub_252B7E454(v11);
  uint64_t v13 = type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(v12);
  uint64_t v14 = sub_252AEA368(v13);
  MEMORY[0x270FA5388](v14);
  sub_252AEDE70();
  uint64_t v16 = sub_252B7E454(v15);
  uint64_t v102 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v16);
  sub_252AEA304();
  MEMORY[0x270FA5388](v17);
  sub_252AEDE70();
  uint64_t v19 = sub_252B7E454(v18);
  uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(v19);
  uint64_t v21 = sub_252AEA368(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = sub_252B7E454((uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = type metadata accessor for SessionServerDebuggerEvent.Synced(v23);
  uint64_t v25 = sub_252AEA368(v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = sub_252B7E454((uint64_t)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v101 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v27);
  sub_252AEA304();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = sub_252B7E454((uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v30);
  uint64_t v32 = sub_252AEA368(v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = sub_252B7E454((uint64_t)&v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(v34);
  uint64_t v36 = sub_252AEA368(v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = sub_252B7E454((uint64_t)&v100 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v38);
  uint64_t v40 = sub_252AEA368(v39);
  MEMORY[0x270FA5388](v40);
  sub_252AEDE70();
  uint64_t v42 = sub_252B7E454(v41);
  uint64_t v43 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(v42);
  uint64_t v44 = sub_252AEA368(v43);
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = sub_252B7E454((uint64_t)&v100 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SessionServerDebuggerEvent.Payload(v46);
  sub_252AEA304();
  MEMORY[0x270FA5388](v47);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v48);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v49);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v50);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v51);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v52);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v53);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v54);
  sub_252AEDDB4();
  sub_252AEDC04();
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  MEMORY[0x270FA5388](v56);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v57);
  sub_252CE3654();
  MEMORY[0x270FA5388](v58);
  sub_252B22BD0();
  MEMORY[0x270FA5388](v59);
  sub_252CB8500();
  MEMORY[0x270FA5388](v60);
  uint64_t v62 = (uint64_t *)((char *)&v100 - v61);
  uint64_t v63 = sub_252AC3A24(&qword_269C47DA8);
  uint64_t v64 = sub_252AEA368(v63);
  MEMORY[0x270FA5388](v64);
  sub_252AF45F0();
  uint64_t v66 = v2 + *(int *)(v65 + 56);
  sub_252CC91CC();
  *(void *)&long long v112 = v66;
  sub_252CC91CC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CC91CC();
      if (sub_252CE3258() != 1) {
        goto LABEL_52;
      }
      sub_252CE36FC();
      static SessionServerDebuggerEvent.DeferredTransactionReady.== infix(_:_:)();
      sub_252CC6D8C();
      goto LABEL_42;
    case 2u:
      sub_252CC91CC();
      if (sub_252CE3258() == 2) {
        goto LABEL_40;
      }
      goto LABEL_52;
    case 3u:
      sub_252CC91CC();
      uint64_t v68 = v3[1];
      uint64_t v67 = v3[2];
      if (sub_252CE39D4() != 3) {
        goto LABEL_33;
      }
      uint64_t v69 = *v3;
      goto LABEL_12;
    case 4u:
      sub_252CC91CC();
      uint64_t v68 = v1[1];
      uint64_t v67 = v1[2];
      if (sub_252CE39D4() != 4)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
      uint64_t v69 = *v1;
LABEL_12:
      if (v69 == *v0)
      {
        if (v68 == v0[1] && v67 == v0[2])
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_252D1A5D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_57;
    case 5u:
      sub_252CC91CC();
      if (sub_252CE3258() != 5) {
        goto LABEL_52;
      }
      sub_252CC6D18();
      static SessionServerDebuggerEvent.FinalTransactionPosted.== infix(_:_:)();
      sub_252CC6D8C();
      goto LABEL_42;
    case 6u:
      uint64_t v98 = v105;
      sub_252CC91CC();
      if (sub_252CE3258() != 6) {
        goto LABEL_52;
      }
      uint64_t v99 = v104;
      sub_252CC6D18();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0()) {
        sub_252B1CC20(*(void *)(v98 + *(int *)(v101 + 20)), *(void *)(v99 + *(int *)(v101 + 20)));
      }
      goto LABEL_56;
    case 7u:
      sub_252CE3960();
      if (sub_252CE3258() == 7) {
        goto LABEL_40;
      }
      goto LABEL_52;
    case 8u:
      sub_252CE3960();
      if (sub_252CE3258() == 8) {
        goto LABEL_40;
      }
      goto LABEL_52;
    case 9u:
      sub_252CC91CC();
      if (sub_252CE3258() != 9) {
        goto LABEL_52;
      }
      sub_252CC6D18();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0()) {
        sub_252CE37A8();
      }
      goto LABEL_56;
    case 0xAu:
      sub_252CE3960();
      if (sub_252CE3258() != 10) {
        goto LABEL_52;
      }
LABEL_40:
      sub_252CE36FC();
      sub_252CE36BC();
      goto LABEL_41;
    case 0xBu:
      sub_252CE3960();
      if (sub_252CE3258() != 11) {
        goto LABEL_52;
      }
      sub_252CE36FC();
      static SessionServerDebuggerEvent.InjectionRequest.== infix(_:_:)(v0, v62);
LABEL_41:
      sub_252CC6D8C();
      goto LABEL_42;
    case 0xCu:
      sub_252CC91CC();
      if (sub_252CE3258() != 12) {
        goto LABEL_52;
      }
      sub_252CC6D18();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0()) {
        sub_252CE37A8();
      }
LABEL_56:
      sub_252CC6D8C();
      sub_252CC6D8C();
      goto LABEL_57;
    case 0xDu:
      uint64_t v71 = v109;
      sub_252CC91CC();
      uint64_t v72 = *((void *)v71 + 2);
      uint64_t v73 = *((void *)v71 + 4);
      uint64_t v74 = *((void *)v71 + 6);
      uint64_t v75 = *((void *)v71 + 8);
      uint64_t v76 = *((void *)v71 + 10);
      uint64_t v77 = *((void *)v71 + 11);
      unint64_t v78 = *((void *)v71 + 12);
      uint64_t v79 = (void *)v112;
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v80 = *((void *)v71 + 9);
        uint64_t v81 = *((void *)v71 + 7);
        uint64_t v82 = *((void *)v71 + 5);
        uint64_t v83 = *((void *)v71 + 3);
        unint64_t v84 = v78;
        unint64_t v108 = v78;
        uint64_t v86 = v79[2];
        uint64_t v85 = v79[3];
        uint64_t v87 = v77;
        uint64_t v107 = v77;
        uint64_t v89 = v79[4];
        uint64_t v88 = v79[5];
        uint64_t v90 = v75;
        uint64_t v106 = v75;
        uint64_t v92 = v79[6];
        uint64_t v91 = v79[7];
        uint64_t v111 = v2;
        uint64_t v93 = v79;
        uint64_t v94 = v79[10];
        uint64_t v95 = v79[11];
        uint64_t v96 = v72;
        uint64_t v110 = v72;
        unint64_t v97 = v93[12];
        long long v124 = *v71;
        uint64_t v125 = v96;
        uint64_t v126 = v83;
        uint64_t v127 = v73;
        uint64_t v128 = v82;
        uint64_t v129 = v74;
        uint64_t v130 = v81;
        uint64_t v131 = v90;
        uint64_t v132 = v80;
        uint64_t v133 = v76;
        uint64_t v134 = v87;
        unint64_t v135 = v84;
        long long v113 = *(_OWORD *)v93;
        uint64_t v114 = v86;
        uint64_t v115 = v85;
        uint64_t v116 = v89;
        uint64_t v117 = v88;
        uint64_t v118 = v92;
        uint64_t v119 = v91;
        long long v112 = *((_OWORD *)v93 + 4);
        long long v120 = v112;
        uint64_t v121 = v94;
        uint64_t v122 = v95;
        unint64_t v123 = v97;
        static SessionServerDebuggerEvent.InjectionValueCaptured.== infix(_:_:)(&v124, &v113);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_252AC5C14(v95, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_252AC5C14(v107, v108);
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_252AC5C14(v77, v78);
      goto LABEL_53;
    default:
      sub_252CC91CC();
      if (sub_252CE3258())
      {
LABEL_52:
        sub_252CC6D8C();
LABEL_53:
        sub_252B5A4CC(v2, &qword_269C47DA8);
      }
      else
      {
        sub_252CC6D18();
        _s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0();
        sub_252CC6D8C();
LABEL_42:
        sub_252CC6D8C();
LABEL_57:
        sub_252CC6D8C();
      }
      sub_252AFC718();
      return;
  }
}

uint64_t sub_252CBEDF0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_252CB8520();
    sub_252CB8EFC();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252CBEE68(uint64_t a1)
{
  unint64_t v2 = sub_252CCCFF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBEEA4(uint64_t a1)
{
  unint64_t v2 = sub_252CCCFF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C47DB0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CCCFF8();
  sub_252B5F8D4();
  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  sub_252CC9184(&qword_269C47DC0, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.Payload);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = sub_252CB9874(v2);
  type metadata accessor for SessionServerDebuggerEvent.Payload(v3);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  sub_252AF4404(v5, v11);
  sub_252AC3A24(&qword_269C47DC8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_252AF4420();
  uint64_t v8 = type metadata accessor for SessionServerDebuggerEvent(v7);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252CB85D0(v0);
  sub_252CCCFF8();
  sub_252CE37FC();
  if (!v1)
  {
    sub_252CC9184(&qword_269C47DD0, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.Payload);
    sub_252CB9C00();
    sub_252B5F53C();
    v10();
    sub_252CC6D18();
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CBF18C()
{
}

void sub_252CBF1A4()
{
}

void static SessionClientDebuggerEvent.PostDeferredTransaction.== infix(_:_:)()
{
  sub_252AFC730();
  sub_252CB9F20();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252AC423C();
  uint64_t v7 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252B23278();
  uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252CE3730();
  MEMORY[0x270FA5388](v11);
  sub_252B98DB0();
  MEMORY[0x270FA5388](v12);
  sub_252CBA5B8();
  if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v13 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  if ((sub_252B1CC20(*(void *)(v1 + v13[5]), *(void *)(v0 + v13[5])) & 1) == 0
    || *(void *)(v1 + v13[6]) != *(void *)(v0 + v13[6]))
  {
    goto LABEL_13;
  }
  sub_252AECE0C(v1 + v13[7], v4);
  sub_252AECE0C(v0 + v13[7], v5);
  sub_252CE3690();
  sub_252AECE0C(v5, v7);
  sub_252CB8170(v2);
  if (!v14)
  {
    sub_252AECE0C(v2, v3);
    sub_252CB8170(v7);
    if (!v14)
    {
      sub_252B7E53C();
      v17();
      sub_252CC9184(&qword_269C41B28, MEMORY[0x263F07508]);
      char v25 = sub_252CE3A90();
      sub_252CBA600();
      uint64_t v19 = v18;
      sub_252B5F658();
      v20();
      sub_252B5A4CC(v5, &qword_26B2320E8);
      sub_252B5A4CC(v4, &qword_26B2320E8);
      sub_252B5F658();
      v19();
      sub_252B5A4CC(v2, &qword_26B2320E8);
      if ((v25 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_15;
    }
    sub_252B5A4CC(v5, &qword_26B2320E8);
    sub_252B5A4CC(v4, &qword_26B2320E8);
    uint64_t v15 = sub_252CE386C();
    v16(v15);
LABEL_12:
    sub_252B5A4CC(v2, &qword_269C441F0);
    goto LABEL_13;
  }
  sub_252B5A4CC(v5, &qword_26B2320E8);
  sub_252B5A4CC(v4, &qword_26B2320E8);
  sub_252CB8170(v7);
  if (!v14) {
    goto LABEL_12;
  }
  sub_252B5A4CC(v2, &qword_26B2320E8);
LABEL_15:
  sub_252CE34AC();
  if (v14) {
    BOOL v23 = v21 == v22;
  }
  else {
    BOOL v23 = 0;
  }
  if (v23 || (sub_252D1A5D8(), sub_252B5F6F8(), (v24 & 1) != 0)) {
    sub_252BB3648();
  }
LABEL_13:
  sub_252AFC718();
}

uint64_t static SessionClientDebuggerEvent.ReplaceCurrentTranscript.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252CC2578(a1, a2, type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
}

uint64_t static SessionClientDebuggerEvent.TerminateSession.== infix(_:_:)()
{
  return 1;
}

BOOL static SessionClientDebuggerEvent.InjectionResponse.== infix(_:_:)(uint64_t a1)
{
  if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  if (*(void *)(a1 + *(int *)(v3 + 24) + 8) >> 60 == 15)
  {
    sub_252CE3B60();
    if (!(!v5 & v4)) {
      goto LABEL_9;
    }
    return 1;
  }
  sub_252CE3B60();
  if (!(!v5 & v4))
  {
    sub_252CE35C8();
    sub_252CE3B08();
    return (v1 & 1) != 0;
  }
LABEL_9:
  sub_252CE3564();
  return 0;
}

uint64_t sub_252CBF5A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1E630 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1E650 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1E670 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000252D1E690 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000252D1E6B0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    BOOL v5 = a1 == 1668184435 && a2 == 0xE400000000000000;
    if (v5 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E6D0 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      BOOL v6 = a1 == 0x6E49656C62616E65 && a2 == 0xEF6E6F697463656ALL;
      if (v6 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E6F0 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1E710)
      {
        swift_bridgeObjectRelease();
        return 9;
      }
      else
      {
        char v7 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v7) {
          return 9;
        }
        else {
          return 10;
        }
      }
    }
  }
}

unint64_t sub_252CBF968(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 1668184435;
      break;
    case 6:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6E49656C62616E65;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CBFA8C()
{
  return sub_252CBF968(*v0);
}

uint64_t sub_252CBFA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CBF5A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CBFABC(uint64_t a1)
{
  unint64_t v2 = sub_252CCD064();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFAF8(uint64_t a1)
{
  unint64_t v2 = sub_252CCD064();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFB34(uint64_t a1)
{
  unint64_t v2 = sub_252CCD35C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFB70(uint64_t a1)
{
  unint64_t v2 = sub_252CCD35C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFBAC(uint64_t a1)
{
  unint64_t v2 = sub_252CCD0FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFBE8(uint64_t a1)
{
  unint64_t v2 = sub_252CCD0FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFC24(uint64_t a1)
{
  unint64_t v2 = sub_252CCD3A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFC60(uint64_t a1)
{
  unint64_t v2 = sub_252CCD3A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFC9C(uint64_t a1)
{
  unint64_t v2 = sub_252CCD148();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFCD8(uint64_t a1)
{
  unint64_t v2 = sub_252CCD148();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFD14(uint64_t a1)
{
  unint64_t v2 = sub_252CCD0B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFD50(uint64_t a1)
{
  unint64_t v2 = sub_252CCD0B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFD8C(uint64_t a1)
{
  unint64_t v2 = sub_252CCD310();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFDC8(uint64_t a1)
{
  unint64_t v2 = sub_252CCD310();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFE04(uint64_t a1)
{
  unint64_t v2 = sub_252CCD278();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFE40(uint64_t a1)
{
  unint64_t v2 = sub_252CCD278();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFE7C(uint64_t a1)
{
  unint64_t v2 = sub_252CCD2C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFEB8(uint64_t a1)
{
  unint64_t v2 = sub_252CCD2C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFEF4(uint64_t a1)
{
  unint64_t v2 = sub_252CCD22C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFF30(uint64_t a1)
{
  unint64_t v2 = sub_252CCD22C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CBFF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CC30CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252CBFF98(uint64_t a1)
{
  unint64_t v2 = sub_252CCD194();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CBFFD4(uint64_t a1)
{
  unint64_t v2 = sub_252CCD194();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.Payload.encode(to:)()
{
  sub_252AF4380();
  uint64_t v81 = v1;
  uint64_t v83 = v0;
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C47DD8);
  sub_252AEDBD0();
  v80[43] = v5;
  v80[44] = v4;
  MEMORY[0x270FA5388](v4);
  v80[42] = (uint64_t)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_252AEDD78();
  v80[39] = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  v80[41] = (uint64_t)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80[40] = sub_252AC3A24(&qword_269C47DE0);
  sub_252AEDBD0();
  v80[38] = v10;
  MEMORY[0x270FA5388](v11);
  v80[37] = (uint64_t)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_252AEDD78();
  v80[34] = type metadata accessor for SessionClientDebuggerEvent.DisableInjection(v13);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  sub_252CB8694(v15, v80[0]);
  v80[35] = sub_252AC3A24(&qword_269C47DE8);
  sub_252AEDBD0();
  v80[33] = v16;
  MEMORY[0x270FA5388](v17);
  v80[32] = (uint64_t)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_252AEDD78();
  v80[30] = type metadata accessor for SessionClientDebuggerEvent.EnableInjection(v19);
  sub_252AEA304();
  MEMORY[0x270FA5388](v20);
  sub_252CB8A78(v21, v80[0]);
  v80[29] = sub_252AC3A24(&qword_269C47DF0);
  sub_252AEDBD0();
  v80[28] = v22;
  MEMORY[0x270FA5388](v23);
  sub_252B9857C((uint64_t)v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[27] = sub_252AC3A24(&qword_269C47DF8);
  sub_252AEDBD0();
  v80[26] = v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = sub_252B7E454((uint64_t)v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[21] = type metadata accessor for SessionClientDebuggerEvent.Sync(v28);
  sub_252AEA304();
  MEMORY[0x270FA5388](v29);
  sub_252B9857C((uint64_t)v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[22] = sub_252AC3A24(&qword_269C47E00);
  sub_252AEDBD0();
  v80[20] = v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = sub_252B7E454((uint64_t)v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[16] = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v34);
  sub_252AEA304();
  MEMORY[0x270FA5388](v35);
  sub_252B9857C((uint64_t)v80 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[17] = sub_252AC3A24(&qword_269C47E08);
  sub_252AEDBD0();
  v80[15] = v37;
  MEMORY[0x270FA5388](v38);
  sub_252AEDE70();
  uint64_t v40 = sub_252B7E454(v39);
  v80[12] = type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(v40);
  sub_252AEA304();
  MEMORY[0x270FA5388](v41);
  sub_252B9857C((uint64_t)v80 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[11] = sub_252AC3A24(&qword_269C47E10);
  sub_252AEDBD0();
  v80[10] = v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = sub_252B7E454((uint64_t)v80 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[7] = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v46);
  sub_252AEA304();
  MEMORY[0x270FA5388](v47);
  sub_252B9857C((uint64_t)v80 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[6] = sub_252AC3A24(&qword_269C47E18);
  sub_252AEDBD0();
  v80[5] = v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = sub_252B7E454((uint64_t)v80 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[2] = type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(v52);
  sub_252AEA304();
  MEMORY[0x270FA5388](v53);
  sub_252B9857C((uint64_t)v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80[1] = sub_252AC3A24(&qword_269C47E20);
  sub_252AEDBD0();
  v80[0] = v55;
  MEMORY[0x270FA5388](v56);
  uint64_t v57 = sub_252BA59A0();
  type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(v57);
  sub_252AEA304();
  MEMORY[0x270FA5388](v58);
  sub_252AC423C();
  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v59);
  sub_252AF45D8();
  v80[46] = sub_252AC3A24(&qword_269C47E28);
  sub_252AEDBD0();
  uint64_t v82 = v60;
  MEMORY[0x270FA5388](v61);
  sub_252B5F630();
  sub_252AC3A68(v3, v3[3]);
  sub_252CCD064();
  sub_252D1A738();
  sub_252CC91CC();
  sub_252CB9954();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CE33AC();
      char v85 = 1;
      sub_252CCD35C();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47EC0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions);
      sub_252CB8C54();
      sub_252CE353C();
      uint64_t v65 = sub_252CE317C();
      v66(v65);
      goto LABEL_12;
    case 2u:
      sub_252CE33AC();
      sub_252CCD310();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47EB0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
      sub_252CB8C54();
      sub_252CE353C();
      uint64_t v67 = sub_252CE317C();
      v68(v67);
      goto LABEL_12;
    case 3u:
      sub_252CE33AC();
      sub_252CCD2C4();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47EA0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE353C();
      uint64_t v69 = sub_252CE317C();
      v70(v69);
      goto LABEL_12;
    case 4u:
      sub_252CE33AC();
      sub_252CCD278();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47E90, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE353C();
      uint64_t v71 = sub_252CE317C();
      v72(v71);
      goto LABEL_12;
    case 5u:
      sub_252CE33AC();
      sub_252CCD22C();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47E80, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.Sync);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE353C();
      uint64_t v73 = sub_252CE317C();
      v74(v73);
      goto LABEL_12;
    case 6u:
      sub_252CCD194();
      sub_252CE3224();
      sub_252CCD1E0();
      sub_252CB8C54();
      sub_252CE35B0();
      uint64_t v75 = sub_252CE317C();
      v76(v75);
      goto LABEL_13;
    case 7u:
      sub_252CC6D18();
      sub_252CCD148();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47E60, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.EnableInjection);
      sub_252B98D40();
      sub_252CE35B0();
      sub_252B5F53C();
      v77();
      goto LABEL_12;
    case 8u:
      sub_252CC6D18();
      sub_252CCD0FC();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47E50, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.DisableInjection);
      sub_252B98D40();
      sub_252CE35B0();
      sub_252B5F53C();
      v78();
      goto LABEL_12;
    case 9u:
      sub_252CC6D18();
      sub_252CCD0B0();
      sub_252CE3224();
      sub_252CC9184(&qword_269C47E40, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.InjectionResponse);
      sub_252B98D40();
      sub_252CE35B0();
      sub_252B5F53C();
      v79();
LABEL_12:
      sub_252CC6D8C();
LABEL_13:
      uint64_t v63 = sub_252B7E4CC();
      break;
    default:
      sub_252CC6D18();
      char v84 = 0;
      sub_252CCD3A8();
      sub_252D1A4D8();
      sub_252CC9184(&qword_269C47ED0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
      sub_252D1A578();
      sub_252B5F53C();
      v62();
      sub_252CC6D8C();
      uint64_t v63 = sub_252B233D8();
      break;
  }
  v64(v63);
  sub_252AF4368();
}

void SessionClientDebuggerEvent.Payload.init(from:)()
{
  sub_252AF4380();
  uint64_t v97 = v1;
  uint64_t v8 = v7;
  v94[37] = v9;
  v94[27] = sub_252AC3A24(&qword_269C47ED8);
  sub_252AEDBD0();
  v94[39] = v10;
  MEMORY[0x270FA5388](v11);
  v94[36] = (uint64_t)v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94[26] = sub_252AC3A24(&qword_269C47EE0);
  sub_252AEDBD0();
  v94[38] = v13;
  MEMORY[0x270FA5388](v14);
  v94[35] = (uint64_t)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94[25] = sub_252AC3A24(&qword_269C47EE8);
  sub_252AEDBD0();
  v94[13] = v16;
  MEMORY[0x270FA5388](v17);
  sub_252CB8694(v18, v94[0]);
  v94[24] = sub_252AC3A24(&qword_269C47EF0);
  sub_252AEDBD0();
  v94[12] = v19;
  MEMORY[0x270FA5388](v20);
  sub_252AEDE70();
  v94[33] = v21;
  v94[23] = sub_252AC3A24(&qword_269C47EF8);
  sub_252AEDBD0();
  v94[11] = v22;
  MEMORY[0x270FA5388](v23);
  v94[44] = (uint64_t)v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94[22] = sub_252AC3A24(&qword_269C47F00);
  sub_252AEDBD0();
  v94[10] = v25;
  MEMORY[0x270FA5388](v26);
  sub_252B774E4(v27, v94[0]);
  v94[43] = sub_252AC3A24(&qword_269C47F08);
  sub_252AEDBD0();
  v94[9] = v28;
  MEMORY[0x270FA5388](v29);
  sub_252AEDE70();
  v94[31] = v30;
  v94[21] = sub_252AC3A24(&qword_269C47F10);
  sub_252AEDBD0();
  v94[8] = v31;
  MEMORY[0x270FA5388](v32);
  v94[30] = (uint64_t)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94[20] = sub_252AC3A24(&qword_269C47F18);
  sub_252AEDBD0();
  v94[7] = v34;
  MEMORY[0x270FA5388](v35);
  sub_252CB8A78(v36, v94[0]);
  v94[19] = sub_252AC3A24(&qword_269C47F20);
  sub_252AEDBD0();
  v94[6] = v37;
  MEMORY[0x270FA5388](v38);
  sub_252AEDE70();
  v94[28] = v39;
  sub_252AC3A24(&qword_269C47F28);
  sub_252AEDBD0();
  v94[41] = v41;
  v94[42] = v40;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = sub_252B4C750();
  v94[40] = type metadata accessor for SessionClientDebuggerEvent.Payload(v42);
  sub_252AEA304();
  MEMORY[0x270FA5388](v43);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v44);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v45);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v46);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v47);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v48);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v49);
  sub_252CB8500();
  MEMORY[0x270FA5388](v50);
  sub_252CB9300();
  MEMORY[0x270FA5388](v51);
  sub_252CE3654();
  MEMORY[0x270FA5388](v52);
  sub_252B98DB0();
  MEMORY[0x270FA5388](v53);
  sub_252CBA5B8();
  uint64_t v96 = v8;
  sub_252CB85D0(v8);
  sub_252CCD064();
  uint64_t v95 = v3;
  uint64_t v54 = v97;
  sub_252D1A718();
  if (v54) {
    goto LABEL_16;
  }
  v94[1] = v6;
  v94[2] = v0;
  v94[3] = v2;
  v94[4] = v5;
  uint64_t v97 = v4;
  uint64_t v55 = sub_252D1A4C8();
  if (!*(void *)(v55 + 16)
    || (v94[0] = 0,
        uint64_t v56 = *(unsigned __int8 *)(v55 + 32),
        sub_252B5F440(1),
        uint64_t v58 = v57,
        unint64_t v60 = v59,
        swift_bridgeObjectRelease(),
        v58 != v60 >> 1))
  {
    sub_252D1A308();
    swift_allocError();
    sub_252AC3A24(&qword_269C42E78);
    sub_252CE3B40();
    sub_252B77578();
    sub_252B0014C();
    sub_252CE389C();
    v62();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252B5F67C();
    v63();
LABEL_16:
    uint64_t v77 = (uint64_t)v96;
    goto LABEL_17;
  }
  switch(v56)
  {
    case 1:
      char v99 = 1;
      sub_252CCD35C();
      sub_252CE329C();
      uint64_t v64 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(v64);
      sub_252CC9184(&qword_269C47F70, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252CE3640();
      sub_252B5F53C();
      v65();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v66();
      sub_252CE3558();
      goto LABEL_18;
    case 2:
      sub_252CCD310();
      sub_252CE329C();
      uint64_t v67 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v67);
      sub_252CC9184(&qword_269C47F68, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252CE3640();
      sub_252B5F53C();
      v68();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v69();
      sub_252CE3558();
      goto LABEL_18;
    case 3:
      sub_252CCD2C4();
      sub_252CE329C();
      type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(0);
      sub_252CC9184(&qword_269C47F60, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript);
      sub_252D1A498();
      sub_252CE3640();
      sub_252B5F53C();
      v81();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v82();
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    case 4:
      sub_252CCD278();
      sub_252CE329C();
      uint64_t v70 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v70);
      sub_252CC9184(&qword_269C47F58, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252CE3640();
      sub_252B5F53C();
      v71();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v72();
      sub_252CE3558();
      goto LABEL_18;
    case 5:
      sub_252CCD22C();
      sub_252CE329C();
      uint64_t v73 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.Sync(v73);
      sub_252CC9184(&qword_269C47F50, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.Sync);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252CE3640();
      sub_252B5F53C();
      v74();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v75();
      sub_252CE3558();
      goto LABEL_18;
    case 6:
      sub_252CCD194();
      sub_252CE329C();
      sub_252CD14BC();
      sub_252CB8C54();
      sub_252D1A498();
      uint64_t v83 = sub_252CE317C();
      v84(v83);
      swift_unknownObjectRelease();
      uint64_t v85 = sub_252CE3884();
      v86(v85);
      sub_252CE3558();
      goto LABEL_18;
    case 7:
      sub_252CCD148();
      sub_252CE329C();
      uint64_t v76 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.EnableInjection(v76);
      sub_252CC9184(&qword_269C47F40, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.EnableInjection);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252CE3640();
      sub_252B5F53C();
      v87();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v88();
      sub_252CE3558();
      goto LABEL_18;
    case 8:
      sub_252CCD0FC();
      sub_252CE329C();
      type metadata accessor for SessionClientDebuggerEvent.DisableInjection(0);
      sub_252CC9184(&qword_269C47F38, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.DisableInjection);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252CE3640();
      sub_252B983F0();
      v91();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v92();
      sub_252CE3558();
      goto LABEL_18;
    case 9:
      sub_252CCD0B0();
      sub_252CE329C();
      uint64_t v78 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v78);
      sub_252CC9184(&qword_269C47F30, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.InjectionResponse);
      sub_252CE3348();
      sub_252D1A498();
      sub_252CE3640();
      sub_252CB8ACC();
      v89();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v90();
      sub_252CE3558();
      goto LABEL_18;
    default:
      char v98 = 0;
      sub_252CCD3A8();
      sub_252CE329C();
      uint64_t v61 = sub_252CE36B0();
      type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(v61);
      sub_252CC9184(&qword_269C47F78, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
      sub_252CE3348();
      sub_252CE32CC();
      sub_252B5F53C();
      v79();
      swift_unknownObjectRelease();
      sub_252CB927C();
      sub_252B5F53C();
      v80();
      sub_252CE3558();
LABEL_18:
      swift_storeEnumTagMultiPayload();
LABEL_19:
      uint64_t v93 = (uint64_t)v96;
      sub_252CC6D18();
      sub_252CC6D18();
      uint64_t v77 = v93;
      break;
  }
LABEL_17:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v77);
  sub_252AF4368();
}

void sub_252CC1F00()
{
}

void sub_252CC1F18()
{
}

void static SessionServerDebuggerEvent.DeferredTransactionReady.== infix(_:_:)()
{
  sub_252AFC730();
  sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_252AC423C();
  uint64_t v9 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B23278();
  uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  sub_252CE3730();
  MEMORY[0x270FA5388](v13);
  sub_252B98DB0();
  MEMORY[0x270FA5388](v14);
  if ((sub_252CE3820() & 1) == 0 || *(void *)(v1 + 8) != *(void *)(v0 + 8)) {
    goto LABEL_12;
  }
  uint64_t v26 = v7;
  uint64_t v15 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  sub_252AECE0C(v1 + *(int *)(v15 + 24), v4);
  sub_252AECE0C(v0 + *(int *)(v15 + 24), v5);
  sub_252CE3690();
  sub_252AECE0C(v5, v9);
  sub_252CB8170(v2);
  if (!v16)
  {
    sub_252AECE0C(v2, v3);
    sub_252CB8170(v9);
    if (!v16)
    {
      sub_252B7E53C();
      v19();
      sub_252CC9184(&qword_269C41B28, MEMORY[0x263F07508]);
      char v25 = sub_252CE3A90();
      uint64_t v20 = *(void (**)(void))(v26 + 8);
      sub_252CBA600();
      sub_252B983F0();
      v20();
      sub_252B5A4CC(v5, &qword_26B2320E8);
      sub_252B5A4CC(v4, &qword_26B2320E8);
      sub_252B983F0();
      v20();
      sub_252B5A4CC(v2, &qword_26B2320E8);
      if ((v25 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_14;
    }
    sub_252B5A4CC(v5, &qword_26B2320E8);
    sub_252B5A4CC(v4, &qword_26B2320E8);
    uint64_t v17 = sub_252CE386C();
    v18(v17);
LABEL_11:
    sub_252B5A4CC(v2, &qword_269C441F0);
    goto LABEL_12;
  }
  sub_252B5A4CC(v5, &qword_26B2320E8);
  sub_252B5A4CC(v4, &qword_26B2320E8);
  sub_252CB8170(v9);
  if (!v16) {
    goto LABEL_11;
  }
  sub_252B5A4CC(v2, &qword_26B2320E8);
LABEL_14:
  sub_252CE34AC();
  if (v16) {
    BOOL v23 = v21 == v22;
  }
  else {
    BOOL v23 = 0;
  }
  if (v23 || (sub_252D1A5D8(), sub_252B5F6F8(), (v24 & 1) != 0)) {
    sub_252BB3648();
  }
LABEL_12:
  sub_252AFC718();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_252D1A5D8();
  }
}

void static SessionServerDebuggerEvent.FinalTransactionPosted.== infix(_:_:)()
{
  sub_252AFC730();
  sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_252B5F630();
  uint64_t v9 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B23278();
  uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  sub_252B7E3F8();
  sub_252CB8500();
  MEMORY[0x270FA5388](v13);
  sub_252B98DB0();
  MEMORY[0x270FA5388](v14);
  if ((sub_252CE3820() & 1) == 0 || *(void *)(v1 + 8) != *(void *)(v0 + 8)) {
    goto LABEL_14;
  }
  uint64_t v24 = v7;
  uint64_t v15 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
  sub_252AECE0C(v1 + *(int *)(v15 + 24), v4);
  sub_252AECE0C(v0 + *(int *)(v15 + 24), v5);
  sub_252CE3690();
  sub_252AECE0C(v5, v9);
  sub_252CB8170(v2);
  if (v16)
  {
    sub_252B5A4CC(v5, &qword_26B2320E8);
    sub_252B5A4CC(v4, &qword_26B2320E8);
    sub_252CB8170(v9);
    if (v16)
    {
      sub_252B5A4CC(v2, &qword_26B2320E8);
LABEL_13:
      sub_252BB3648();
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  sub_252AECE0C(v2, v3);
  sub_252CB8170(v9);
  if (v16)
  {
    sub_252B5A4CC(v5, &qword_26B2320E8);
    sub_252B5A4CC(v4, &qword_26B2320E8);
    uint64_t v17 = sub_252CBA600();
    v18(v17);
LABEL_11:
    sub_252B5A4CC(v2, &qword_269C441F0);
    goto LABEL_14;
  }
  sub_252B7E53C();
  v19();
  sub_252CC9184(&qword_269C41B28, MEMORY[0x263F07508]);
  char v23 = sub_252D19CF8();
  uint64_t v20 = *(void (**)(void))(v24 + 8);
  sub_252B5F67C();
  v20();
  sub_252B5A4CC(v5, &qword_26B2320E8);
  sub_252B5A4CC(v4, &qword_26B2320E8);
  sub_252CBA600();
  sub_252B5F67C();
  v20();
  uint64_t v21 = sub_252CBA1D4();
  sub_252B5A4CC(v21, v22);
  if (v23) {
    goto LABEL_13;
  }
LABEL_14:
  sub_252AFC718();
}

uint64_t static SessionServerDebuggerEvent.CurrentTranscript.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252CC2578(a1, a2, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
}

uint64_t sub_252CC2578(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3(0) + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);

  return sub_252B1CC20(v7, v8);
}

BOOL static SessionServerDebuggerEvent.RequestFailed.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

uint64_t static SessionServerDebuggerEvent.InjectionRequest.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  BOOL v4 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v4 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v6 & 1) != 0))
  {
    BOOL v7 = a1[3] == a2[3] && a1[4] == a2[4];
    if (v7 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v8 & 1) != 0))
    {
      BOOL v9 = a1[5] == a2[5] && a1[6] == a2[6];
      if (v9 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v10 & 1) != 0))
      {
        uint64_t v11 = a1[8];
        uint64_t v12 = a2[8];
        if (v11)
        {
          if (!v12) {
            return 0;
          }
          if (a1[7] != a2[7] || v11 != v12)
          {
            sub_252D1A5D8();
            uint64_t result = sub_252B5F6F8();
            if ((v14 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v12)
        {
          return 0;
        }
        uint64_t v15 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
        {
          sub_252CE34AC();
          if (!v4 || v16 != v17)
          {
            sub_252D1A5D8();
            uint64_t result = sub_252B5F6F8();
            if ((v19 & 1) == 0) {
              return result;
            }
          }
          if (MEMORY[0x2533C8590](*(void *)((char *)a1 + *(int *)(v15 + 44)), *(void *)((char *)a1 + *(int *)(v15 + 44) + 8), *(void *)((char *)a2 + *(int *)(v15 + 44)), *(void *)((char *)a2 + *(int *)(v15 + 44) + 8)))
          {
            sub_252CE34AC();
            if (v4 && v20 == v21) {
              return 1;
            }
            return sub_252D1A5D8();
          }
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t static SessionServerDebuggerEvent.InjectionResponseAccepted.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
  {
    sub_252CE374C();
    char v5 = *(unsigned char *)(a1 + v4) ^ *(unsigned char *)(a2 + v4) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t static SessionServerDebuggerEvent.InjectionValueCaptured.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2)
  {
    uint64_t v2 = a1[3];
    uint64_t v4 = a1[4];
    uint64_t v3 = a1[5];
    uint64_t v5 = a1[6];
    uint64_t v6 = a1[8];
    uint64_t v23 = a1[9];
    uint64_t v22 = a1[10];
    uint64_t v8 = a2[3];
    uint64_t v7 = a2[4];
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[8];
    uint64_t v18 = a2[7];
    uint64_t v19 = a1[7];
    uint64_t v20 = a2[10];
    uint64_t v21 = a2[9];
    BOOL v12 = a1[1] == a2[1] && a1[2] == a2[2];
    if (v12 || (sub_252D1A5D8() & 1) != 0)
    {
      BOOL v13 = v2 == v8 && v4 == v7;
      if (v13 || (sub_252D1A5D8() & 1) != 0)
      {
        BOOL v14 = v3 == v9 && v5 == v10;
        if (v14 || (sub_252D1A5D8() & 1) != 0)
        {
          if (v6)
          {
            if (!v11) {
              return 0;
            }
            BOOL v15 = v19 == v18 && v6 == v11;
            if (!v15 && (sub_252CB8520() & 1) == 0) {
              return 0;
            }
          }
          else if (v11)
          {
            return 0;
          }
          BOOL v16 = v23 == v21 && v22 == v20;
          if (v16 || (sub_252D1A5D8() & 1) != 0)
          {
            JUMPOUT(0x2533C8590);
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_252CC29CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001FLL && a2 == 0x8000000252D1E730 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000252D1E750 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000252D1E770 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    BOOL v5 = a1 == 0x726174536E617073 && a2 == 0xEB00000000646574;
    if (v5 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v6 = a1 == 0x65646E456E617073 && a2 == 0xE900000000000064;
      if (v6 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1E790 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1E7B0 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        BOOL v7 = a1 == 0x6465636E7973 && a2 == 0xE600000000000000;
        if (v7 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000252D1E7D0 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          BOOL v8 = a1 == 0x4674736575716572 && a2 == 0xED000064656C6961;
          if (v8 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1E7F0 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E810 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000019 && a2 == 0x8000000252D1E830 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1E850)
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else
          {
            char v9 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v9) {
              return 13;
            }
            else {
              return 14;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252CC2F30()
{
  return 14;
}

unint64_t sub_252CC2F38(char a1)
{
  unint64_t result = 0xD00000000000001FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0x726174536E617073;
      break;
    case 4:
      unint64_t result = 0x65646E456E617073;
      break;
    case 5:
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6465636E7973;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0x4674736575716572;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252CC30CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_252CB8520();
    sub_252CB8EFC();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

unint64_t sub_252CC312C()
{
  return sub_252CC2F38(*v0);
}

uint64_t sub_252CC3134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CC29CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CC315C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252CC2F30();
  *a1 = result;
  return result;
}

uint64_t sub_252CC3184(uint64_t a1)
{
  unint64_t v2 = sub_252CD1508();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC31C0(uint64_t a1)
{
  unint64_t v2 = sub_252CD1508();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC31FC(uint64_t a1)
{
  unint64_t v2 = sub_252CD17B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3238(uint64_t a1)
{
  unint64_t v2 = sub_252CD17B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3274(uint64_t a1)
{
  unint64_t v2 = sub_252CD197C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC32B0(uint64_t a1)
{
  unint64_t v2 = sub_252CD197C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC32EC(uint64_t a1)
{
  unint64_t v2 = sub_252CD19C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3328(uint64_t a1)
{
  unint64_t v2 = sub_252CD19C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3364(uint64_t a1)
{
  unint64_t v2 = sub_252CD1A14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC33A0(uint64_t a1)
{
  unint64_t v2 = sub_252CD1A14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC33DC(uint64_t a1)
{
  unint64_t v2 = sub_252CD1800();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3418(uint64_t a1)
{
  unint64_t v2 = sub_252CD1800();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3454(uint64_t a1)
{
  unint64_t v2 = sub_252CD1638();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3490(uint64_t a1)
{
  unint64_t v2 = sub_252CD1638();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC34CC(uint64_t a1)
{
  unint64_t v2 = sub_252CD15EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3508(uint64_t a1)
{
  unint64_t v2 = sub_252CD15EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3544(uint64_t a1)
{
  unint64_t v2 = sub_252CD1684();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3580(uint64_t a1)
{
  unint64_t v2 = sub_252CD1684();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC35BC(uint64_t a1)
{
  unint64_t v2 = sub_252CD1554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC35F8(uint64_t a1)
{
  unint64_t v2 = sub_252CD1554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3634(uint64_t a1)
{
  unint64_t v2 = sub_252CD16D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3670(uint64_t a1)
{
  unint64_t v2 = sub_252CD16D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC36AC(uint64_t a1)
{
  unint64_t v2 = sub_252CD184C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC36E8(uint64_t a1)
{
  unint64_t v2 = sub_252CD184C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3724(uint64_t a1)
{
  unint64_t v2 = sub_252CD18E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3760(uint64_t a1)
{
  unint64_t v2 = sub_252CD18E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC379C(uint64_t a1)
{
  unint64_t v2 = sub_252CD1768();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC37D8(uint64_t a1)
{
  unint64_t v2 = sub_252CD1768();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CC3814(uint64_t a1)
{
  unint64_t v2 = sub_252CD171C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC3850(uint64_t a1)
{
  unint64_t v2 = sub_252CD171C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.Payload.encode(to:)()
{
  sub_252AF4380();
  uint64_t v133 = v0;
  sub_252AC3A24(&qword_269C47F80);
  sub_252AEDBD0();
  uint64_t v128 = v4;
  uint64_t v129 = v3;
  MEMORY[0x270FA5388](v3);
  sub_252CB8A78(v5, v120[0]);
  uint64_t v127 = sub_252AC3A24(&qword_269C47F88);
  sub_252AEDBD0();
  uint64_t v126 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = sub_252B7E454((uint64_t)v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(v9);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B9857C((uint64_t)v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = sub_252AC3A24(&qword_269C47F90);
  sub_252AEDBD0();
  uint64_t v121 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = sub_252B7E454((uint64_t)v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[48] = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v15);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252B9857C((uint64_t)v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[49] = sub_252AC3A24(&qword_269C47F98);
  sub_252AEDBD0();
  v120[47] = v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = sub_252B7E454((uint64_t)v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[43] = type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(v21);
  sub_252AEA304();
  MEMORY[0x270FA5388](v22);
  sub_252B9857C((uint64_t)v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[44] = sub_252AC3A24(&qword_269C47FA0);
  sub_252AEDBD0();
  v120[42] = v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = sub_252B7E454((uint64_t)v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[38] = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v27);
  sub_252AEA304();
  MEMORY[0x270FA5388](v28);
  sub_252B9857C((uint64_t)v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[39] = sub_252AC3A24(&qword_269C47FA8);
  sub_252AEDBD0();
  v120[37] = v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = sub_252B7E454((uint64_t)v120 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[33] = type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(v33);
  sub_252AEA304();
  MEMORY[0x270FA5388](v34);
  sub_252B9857C((uint64_t)v120 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[34] = sub_252AC3A24(&qword_269C47FB0);
  sub_252AEDBD0();
  v120[32] = v36;
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = sub_252B7E454((uint64_t)v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[28] = type metadata accessor for SessionServerDebuggerEvent.Synced(v39);
  sub_252AEA304();
  MEMORY[0x270FA5388](v40);
  sub_252B9857C((uint64_t)v120 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120[29] = sub_252AC3A24(&qword_269C47FB8);
  sub_252AEDBD0();
  v120[27] = v42;
  MEMORY[0x270FA5388](v43);
  sub_252AEDE70();
  uint64_t v45 = sub_252B7E454(v44);
  v120[23] = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v45);
  sub_252AEA304();
  MEMORY[0x270FA5388](v46);
  sub_252AEDE70();
  sub_252B9857C(v47);
  v120[24] = sub_252AC3A24(&qword_269C47FC0);
  sub_252AEDBD0();
  v120[22] = v48;
  MEMORY[0x270FA5388](v49);
  sub_252AEDE70();
  uint64_t v51 = sub_252B7E454(v50);
  v120[19] = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v51);
  sub_252AEA304();
  MEMORY[0x270FA5388](v52);
  sub_252AEDE70();
  sub_252B9857C(v53);
  v120[18] = sub_252AC3A24(&qword_269C47FC8);
  sub_252AEDBD0();
  v120[17] = v54;
  MEMORY[0x270FA5388](v55);
  sub_252AEDE70();
  sub_252B9857C(v56);
  v120[15] = sub_252AC3A24(&qword_269C47FD0);
  sub_252AEDBD0();
  v120[14] = v57;
  MEMORY[0x270FA5388](v58);
  sub_252AEDE70();
  sub_252B9857C(v59);
  v120[12] = sub_252AC3A24(&qword_269C47FD8);
  sub_252AEDBD0();
  v120[11] = v60;
  MEMORY[0x270FA5388](v61);
  sub_252AEDE70();
  uint64_t v63 = sub_252B7E454(v62);
  v120[8] = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(v63);
  sub_252AEA304();
  MEMORY[0x270FA5388](v64);
  sub_252AEDE70();
  sub_252B9857C(v65);
  v120[7] = sub_252AC3A24(&qword_269C47FE0);
  sub_252AEDBD0();
  v120[6] = v66;
  MEMORY[0x270FA5388](v67);
  sub_252AEDE70();
  uint64_t v69 = sub_252B7E454(v68);
  v120[3] = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v69);
  sub_252AEA304();
  MEMORY[0x270FA5388](v70);
  sub_252AEDE70();
  sub_252B9857C(v71);
  v120[2] = sub_252AC3A24(&qword_269C47FE8);
  sub_252AEDBD0();
  v120[1] = v72;
  MEMORY[0x270FA5388](v73);
  sub_252B5F630();
  uint64_t v74 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v75);
  uint64_t v76 = sub_252B4C750();
  uint64_t v77 = type metadata accessor for SessionServerDebuggerEvent.Payload(v76);
  sub_252AEA304();
  MEMORY[0x270FA5388](v78);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C47FF0);
  sub_252AEDBD0();
  uint64_t v131 = v79;
  uint64_t v132 = v80;
  MEMORY[0x270FA5388](v79);
  sub_252B7732C();
  sub_252CE39B4();
  sub_252CD1508();
  uint64_t v130 = v2;
  sub_252D1A738();
  sub_252CC91CC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CE33AC();
      LOBYTE(v134) = 1;
      sub_252CD19C8();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C480C8, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v85 = sub_252CE317C();
      v86(v85);
      goto LABEL_16;
    case 2u:
      sub_252CE33AC();
      LOBYTE(v134) = 2;
      sub_252CD197C();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C480B8, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v87 = sub_252CE317C();
      v88(v87);
      goto LABEL_16;
    case 3u:
      uint64_t v89 = *v1;
      uint64_t v90 = v1[1];
      uint64_t v91 = v1[2];
      LOBYTE(v134) = 3;
      sub_252CD18E4();
      sub_252CE3768();
      uint64_t v134 = v89;
      uint64_t v135 = v90;
      uint64_t v136 = v91;
      sub_252CD1930();
      sub_252CE3940();
      goto LABEL_7;
    case 4u:
      uint64_t v92 = *v1;
      uint64_t v93 = v1[1];
      uint64_t v94 = v1[2];
      LOBYTE(v134) = 4;
      sub_252CD184C();
      sub_252CE3768();
      uint64_t v134 = v92;
      uint64_t v135 = v93;
      uint64_t v136 = v94;
      sub_252CD1898();
      sub_252CE3940();
LABEL_7:
      sub_252B5F53C();
      v95();
      sub_252CE3B78();
      sub_252B5F53C();
      v96();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 5u:
      sub_252CE33AC();
      LOBYTE(v134) = 5;
      sub_252CD1800();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48088, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v97 = sub_252CE317C();
      v98(v97);
      goto LABEL_16;
    case 6u:
      sub_252CE33AC();
      LOBYTE(v134) = 6;
      sub_252CD17B4();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48078, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v99 = sub_252CE317C();
      v100(v99);
      goto LABEL_16;
    case 7u:
      sub_252CE33AC();
      LOBYTE(v134) = 7;
      sub_252CD1768();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48068, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.Synced);
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v101 = sub_252CE317C();
      v102(v101);
      goto LABEL_16;
    case 8u:
      sub_252CE33AC();
      LOBYTE(v134) = 8;
      sub_252CD171C();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48058, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted);
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v103 = sub_252CE317C();
      v104(v103);
      goto LABEL_16;
    case 9u:
      sub_252CE33AC();
      LOBYTE(v134) = 9;
      sub_252CD16D0();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48048, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.RequestFailed);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v105 = sub_252CE317C();
      v106(v105);
      goto LABEL_16;
    case 0xAu:
      sub_252CE33AC();
      LOBYTE(v134) = 10;
      sub_252CD1684();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48038, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v107 = sub_252CE317C();
      v108(v107);
      goto LABEL_16;
    case 0xBu:
      sub_252CE33AC();
      LOBYTE(v134) = 11;
      sub_252CD1638();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48028, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CE3308();
      uint64_t v109 = sub_252CE317C();
      v110(v109);
      goto LABEL_16;
    case 0xCu:
      sub_252CE33AC();
      LOBYTE(v134) = 12;
      sub_252CD15EC();
      sub_252CE31DC();
      sub_252CC9184(&qword_269C48018, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted);
      sub_252B98D40();
      sub_252CE3308();
      uint64_t v111 = sub_252CE317C();
      v112(v111);
LABEL_16:
      sub_252CC6D8C();
      sub_252CE3B78();
      uint64_t v84 = v74;
      goto LABEL_17;
    case 0xDu:
      uint64_t v147 = *v1;
      uint64_t v113 = v1[2];
      uint64_t v127 = v1[1];
      uint64_t v114 = v1[4];
      uint64_t v126 = v1[3];
      uint64_t v125 = v1[5];
      uint64_t v122 = v1[6];
      uint64_t v124 = v1[7];
      uint64_t v123 = v1[8];
      uint64_t v115 = v1[10];
      uint64_t v121 = v1[9];
      uint64_t v117 = v1[11];
      unint64_t v116 = v1[12];
      LOBYTE(v134) = 13;
      sub_252CD1554();
      sub_252D1A4D8();
      uint64_t v134 = v147;
      uint64_t v135 = v127;
      uint64_t v136 = v113;
      uint64_t v137 = v126;
      uint64_t v127 = v114;
      uint64_t v138 = v114;
      uint64_t v139 = v125;
      uint64_t v140 = v122;
      uint64_t v141 = v124;
      uint64_t v142 = v123;
      uint64_t v143 = v121;
      uint64_t v144 = v115;
      uint64_t v126 = v117;
      uint64_t v145 = v117;
      unint64_t v146 = v116;
      sub_252CD15A0();
      sub_252D1A578();
      sub_252B5F53C();
      v118();
      sub_252CE3B78();
      sub_252CB9954();
      sub_252B5F53C();
      v119();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_252AC5C14(v126, v116);
      goto LABEL_18;
    default:
      sub_252CB9954();
      sub_252CC6D18();
      LOBYTE(v134) = 0;
      sub_252CD1A14();
      uint64_t v81 = v130;
      uint64_t v77 = v131;
      sub_252D1A4D8();
      sub_252CC9184(&qword_269C480D8, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
      sub_252B98D40();
      sub_252D1A578();
      sub_252CB927C();
      sub_252B5F53C();
      v82();
      sub_252CC6D8C();
      sub_252CE3B78();
      uint64_t v84 = v81;
LABEL_17:
      v83(v84, v77);
LABEL_18:
      sub_252AF4368();
      return;
  }
}

void SessionServerDebuggerEvent.Payload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  uint64_t v188 = v11;
  uint64_t v15 = v14;
  uint64_t v182 = v16;
  uint64_t v181 = sub_252AC3A24(&qword_269C480E0);
  sub_252AEDBD0();
  uint64_t v168 = v17;
  MEMORY[0x270FA5388](v18);
  sub_252AEDE70();
  sub_252B9857C(v19);
  uint64_t v180 = sub_252AC3A24(&qword_269C480E8);
  sub_252AEDBD0();
  uint64_t v167 = v20;
  MEMORY[0x270FA5388](v21);
  sub_252B9857C((uint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v179 = sub_252AC3A24(&qword_269C480F0);
  sub_252AEDBD0();
  uint64_t v166 = v23;
  MEMORY[0x270FA5388](v24);
  sub_252B9857C((uint64_t)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v178 = sub_252AC3A24(&qword_269C480F8);
  sub_252AEDBD0();
  uint64_t v165 = v26;
  MEMORY[0x270FA5388](v27);
  sub_252AEDE70();
  sub_252B9857C(v28);
  uint64_t v177 = sub_252AC3A24(&qword_269C48100);
  sub_252AEDBD0();
  uint64_t v164 = v29;
  MEMORY[0x270FA5388](v30);
  sub_252B9857C((uint64_t)&v147 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v176 = sub_252AC3A24(&qword_269C48108);
  sub_252AEDBD0();
  uint64_t v163 = v32;
  MEMORY[0x270FA5388](v33);
  sub_252B9857C((uint64_t)&v147 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v175 = sub_252AC3A24(&qword_269C48110);
  sub_252AEDBD0();
  uint64_t v162 = v35;
  MEMORY[0x270FA5388](v36);
  sub_252B9857C((uint64_t)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v174 = sub_252AC3A24(&qword_269C48118);
  sub_252AEDBD0();
  uint64_t v161 = v38;
  MEMORY[0x270FA5388](v39);
  sub_252B9857C((uint64_t)&v147 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_252AC3A24(&qword_269C48120);
  sub_252AEDBD0();
  uint64_t v160 = v41;
  MEMORY[0x270FA5388](v42);
  sub_252B774E4(v43, v147);
  uint64_t v172 = sub_252AC3A24(&qword_269C48128);
  sub_252AEDBD0();
  uint64_t v159 = v44;
  MEMORY[0x270FA5388](v45);
  sub_252AEDE70();
  sub_252B9857C(v46);
  uint64_t v171 = sub_252AC3A24(&qword_269C48130);
  sub_252AEDBD0();
  uint64_t v158 = v47;
  MEMORY[0x270FA5388](v48);
  sub_252B9857C((uint64_t)&v147 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = sub_252AC3A24(&qword_269C48138);
  sub_252AEDBD0();
  uint64_t v157 = v50;
  MEMORY[0x270FA5388](v51);
  sub_252AEDE70();
  sub_252B9857C(v52);
  uint64_t v185 = sub_252AC3A24(&qword_269C48140);
  sub_252AEDBD0();
  uint64_t v156 = v53;
  MEMORY[0x270FA5388](v54);
  sub_252B9857C((uint64_t)&v147 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = sub_252AC3A24(&qword_269C48148);
  sub_252AEDBD0();
  uint64_t v155 = v56;
  MEMORY[0x270FA5388](v57);
  sub_252B9857C((uint64_t)&v147 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v186 = sub_252AC3A24(&qword_269C48150);
  sub_252AEDBD0();
  uint64_t v184 = v59;
  MEMORY[0x270FA5388](v60);
  sub_252AF4404(v61, v147);
  uint64_t v183 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v62);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v63);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v64);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v65);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v66);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v67);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v68);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v69);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v70);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v71);
  sub_252B98DB0();
  MEMORY[0x270FA5388](v72);
  sub_252CB9300();
  MEMORY[0x270FA5388](v73);
  sub_252B22BD0();
  uint64_t v75 = MEMORY[0x270FA5388](v74);
  uint64_t v77 = (char *)&v147 - v76;
  uint64_t v78 = MEMORY[0x270FA5388](v75);
  uint64_t v80 = (char *)&v147 - v79;
  MEMORY[0x270FA5388](v78);
  uint64_t v82 = (char *)&v147 - v81;
  uint64_t v187 = v15;
  sub_252CB88F4(v15);
  sub_252CD1508();
  uint64_t v83 = v188;
  sub_252D1A718();
  if (v83) {
    goto LABEL_7;
  }
  uint64_t v151 = v80;
  uint64_t v152 = v77;
  uint64_t v149 = v10;
  uint64_t v153 = v12;
  uint64_t v150 = v13;
  uint64_t v188 = v82;
  uint64_t v84 = v186;
  uint64_t v85 = sub_252D1A4C8();
  if (!*(void *)(v85 + 16)
    || (uint64_t v148 = 0,
        uint64_t v147 = *(unsigned __int8 *)(v85 + 32),
        sub_252B5F440(1),
        uint64_t v87 = v86,
        unint64_t v89 = v88,
        swift_bridgeObjectRelease(),
        v87 != v89 >> 1))
  {
    uint64_t v95 = v184;
    sub_252D1A308();
    swift_allocError();
    sub_252AC3A24(&qword_269C42E78);
    sub_252CE3B40();
    sub_252B77578();
    sub_252B0014C();
    sub_252CE389C();
    v96();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(a10, v84);
LABEL_7:
    uint64_t v90 = (uint64_t)v187;
    goto LABEL_8;
  }
  uint64_t v90 = v148;
  switch(v147)
  {
    case 1:
      v189.n128_u8[0] = 1;
      sub_252CD19C8();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v97 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v97);
      sub_252CC9184(&qword_269C481B8, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady);
      sub_252CE337C();
      sub_252CB9C00();
      sub_252CE3408();
      sub_252B5F53C();
      v98();
      swift_unknownObjectRelease();
      uint64_t v99 = sub_252CE3240();
      v100(v99);
      sub_252CE345C();
      goto LABEL_22;
    case 2:
      v189.n128_u8[0] = 2;
      sub_252CD197C();
      sub_252CE3204();
      type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(0);
      sub_252CC9184(&qword_269C481B0, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted);
      sub_252CE3348();
      sub_252D1A498();
      sub_252B5F53C();
      v137();
      swift_unknownObjectRelease();
      sub_252B233D8();
      sub_252B5F53C();
      v138();
      swift_storeEnumTagMultiPayload();
      sub_252CC6D18();
      uint64_t v90 = (uint64_t)v187;
      goto LABEL_23;
    case 3:
      v189.n128_u8[0] = 3;
      sub_252CD18E4();
      sub_252CE31B4();
      sub_252CE33FC();
      sub_252CD1AF8();
      sub_252CB9C00();
      sub_252CE3408();
      sub_252B5F53C();
      v130();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v131();
      sub_252CE37C0(v190, v189);
      goto LABEL_22;
    case 4:
      v189.n128_u8[0] = 4;
      sub_252CD184C();
      sub_252CE31B4();
      sub_252CE33FC();
      sub_252CD1AAC();
      sub_252CB9C00();
      sub_252CE3408();
      sub_252B5F53C();
      v132();
      swift_unknownObjectRelease();
      sub_252CBA1D4();
      sub_252B0012C();
      v133();
      sub_252CE37C0(v190, v189);
      goto LABEL_22;
    case 5:
      v189.n128_u8[0] = 5;
      sub_252CD1800();
      sub_252CE3204();
      sub_252CE33FC();
      uint64_t v101 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v101);
      sub_252CC9184(&qword_269C48198, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted);
      sub_252CB9C00();
      sub_252CE3408();
      sub_252B5F53C();
      v102();
      swift_unknownObjectRelease();
      uint64_t v103 = sub_252CE3240();
      v104(v103);
      sub_252CE345C();
      goto LABEL_22;
    case 6:
      v189.n128_u8[0] = 6;
      sub_252CD17B4();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v105 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v105);
      sub_252CC9184(&qword_269C48190, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v106();
      swift_unknownObjectRelease();
      uint64_t v107 = sub_252CE3240();
      v108(v107);
      sub_252CE345C();
      goto LABEL_22;
    case 7:
      v189.n128_u8[0] = 7;
      sub_252CD1768();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v109 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.Synced(v109);
      sub_252CC9184(&qword_269C48188, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.Synced);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v110();
      swift_unknownObjectRelease();
      uint64_t v111 = sub_252CE3240();
      v112(v111);
      sub_252CE345C();
      goto LABEL_22;
    case 8:
      v189.n128_u8[0] = 8;
      sub_252CD171C();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v113 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(v113);
      sub_252CC9184(&qword_269C48180, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v114();
      swift_unknownObjectRelease();
      uint64_t v115 = sub_252CE3240();
      v116(v115);
      sub_252CE345C();
      goto LABEL_22;
    case 9:
      v189.n128_u8[0] = 9;
      sub_252CD16D0();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v117 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v117);
      sub_252CC9184(&qword_269C48178, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.RequestFailed);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v118();
      swift_unknownObjectRelease();
      uint64_t v119 = sub_252CE3240();
      v120(v119);
      sub_252CE345C();
      goto LABEL_22;
    case 10:
      v189.n128_u8[0] = 10;
      sub_252CD1684();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v121 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(v121);
      sub_252CC9184(&qword_269C48170, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v122();
      swift_unknownObjectRelease();
      uint64_t v123 = sub_252CE3240();
      v124(v123);
      sub_252CE345C();
      goto LABEL_22;
    case 11:
      v189.n128_u8[0] = 11;
      sub_252CD1638();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v125 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v125);
      sub_252CC9184(&qword_269C48168, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionRequest);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v126();
      swift_unknownObjectRelease();
      uint64_t v127 = sub_252CE3240();
      v128(v127);
      sub_252CE345C();
      goto LABEL_22;
    case 12:
      v189.n128_u8[0] = 12;
      sub_252CD15EC();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v129 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(v129);
      sub_252CC9184(&qword_269C48160, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v134();
      swift_unknownObjectRelease();
      uint64_t v135 = sub_252CE3240();
      v136(v135);
      sub_252CE345C();
      goto LABEL_22;
    case 13:
      v189.n128_u8[0] = 13;
      sub_252CD1554();
      sub_252CE31B4();
      sub_252CE33FC();
      sub_252CD1A60();
      sub_252CB9C00();
      sub_252CE3408();
      sub_252B5F53C();
      v139();
      swift_unknownObjectRelease();
      sub_252B233D8();
      sub_252B0012C();
      v140();
      __n128 v142 = (__n128)v190;
      __n128 v141 = v191;
      unint64_t v143 = v192;
      unint64_t v144 = v194;
      unint64_t v145 = v195;
      unint64_t v146 = v154;
      *uint64_t v154 = v189;
      v146[1] = v142;
      v146[2] = v141;
      v146[3].n128_u64[0] = v143;
      *(__n128 *)((char *)v146 + 56) = v193;
      v146[4].n128_u64[1] = v144;
      v146[5].n128_u64[0] = v145;
      *(__n128 *)((char *)v146 + 88) = v196;
      goto LABEL_22;
    default:
      v189.n128_u8[0] = 0;
      sub_252CD1A14();
      sub_252CE31B4();
      sub_252CE33FC();
      uint64_t v91 = sub_252CE3480();
      type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(v91);
      sub_252CC9184(&qword_269C481C0, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
      sub_252CE337C();
      sub_252CE3278();
      sub_252CE3408();
      sub_252B5F53C();
      v92();
      swift_unknownObjectRelease();
      uint64_t v93 = sub_252CE3240();
      v94(v93);
      sub_252CE345C();
LABEL_22:
      swift_storeEnumTagMultiPayload();
      sub_252CC6D18();
LABEL_23:
      sub_252CC6D18();
      break;
  }
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v90);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC61B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionServerDebuggerEvent.Payload.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CC61D0()
{
}

uint64_t (*SessionClientDebuggerEvent.EnableDeferredTransactions.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC621C(uint64_t a1)
{
  unint64_t v2 = sub_252CD1B44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC6258(uint64_t a1)
{
  unint64_t v2 = sub_252CD1B44();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.EnableDeferredTransactions.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C481C8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1B44();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.EnableDeferredTransactions.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C481D8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1B44();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC6514()
{
}

void sub_252CC652C()
{
}

uint64_t (*SessionClientDebuggerEvent.DisableDeferredTransactions.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC6578(uint64_t a1)
{
  unint64_t v2 = sub_252CD1B90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC65B4(uint64_t a1)
{
  unint64_t v2 = sub_252CD1B90();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.DisableDeferredTransactions.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C481E0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1B90();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.DisableDeferredTransactions.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C481F0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1B90();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC6870()
{
}

void sub_252CC6888()
{
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.eventsData.getter()
{
  return sub_252CC7D24((void (*)(void))type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.eventsData.setter()
{
  return sub_252CC7D78();
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.eventsData.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.spanId.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0) + 24));
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.spanId.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.queryEventId.getter()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v2) + 28);

  return sub_252AECE0C(v3, v0);
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.queryEventId.setter(uint64_t a1)
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  sub_252CB9B60();

  return sub_252AECE74(a1, v2);
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.queryEventId.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.clientRequestId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.clientRequestId.setter()
{
  uint64_t v3 = sub_252CE38F8();
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v3);
  uint64_t result = sub_252B4C9A4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.clientRequestId.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.participantSpans.getter()
{
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);

  return swift_bridgeObjectRetain();
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.participantSpans.setter()
{
  uint64_t v2 = *(int *)(sub_252CE3AF0() + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*SessionClientDebuggerEvent.PostDeferredTransaction.participantSpans.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.PostDeferredTransaction.init(id:eventsData:spanId:queryEventId:clientRequestId:participantSpans:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v13 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
  uint64_t v14 = a7 + v13[7];
  uint64_t v15 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14, 1, 1, v15);
  sub_252B0014C();
  sub_252CB9954();
  sub_252B4C1CC();
  v16();
  *(void *)(a7 + v13[5]) = a1;
  *(void *)(a7 + v13[6]) = a2;
  uint64_t result = sub_252AECE74(a3, v14);
  uint64_t v18 = (void *)(a7 + v13[8]);
  *uint64_t v18 = a4;
  v18[1] = a5;
  *(void *)(a7 + v13[9]) = a6;
  return result;
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2347B0);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234820);
}

uint64_t sub_252CC6D18()
{
  uint64_t v1 = sub_252B23194();
  v2(v1);
  sub_252AEA304();
  sub_252B4C1CC();
  v3();
  return v0;
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2347F0);
}

uint64_t sub_252CC6D8C()
{
  uint64_t v1 = sub_252B4C0D0();
  v2(v1);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return v0;
}

uint64_t sub_252CC6DDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x614473746E657665 && a2 == 0xEA00000000006174;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E870)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v10 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v10) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_252CC7074(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614473746E657665;
      break;
    case 2:
      unint64_t result = 0x64496E617073;
      break;
    case 3:
      unint64_t result = 0x6576457972657571;
      break;
    case 4:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CC714C()
{
  return sub_252CC7074(*v0);
}

uint64_t sub_252CC7154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CC6DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CC717C(uint64_t a1)
{
  unint64_t v2 = sub_252CD1BDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC71B8(uint64_t a1)
{
  unint64_t v2 = sub_252CD1BDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.PostDeferredTransaction.encode(to:)()
{
  sub_252AF4380();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C481F8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD1BDC();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252B982A8();
  if (!v0)
  {
    uint64_t v2 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
    sub_252AC3A24(&qword_269C48208);
    sub_252CD1C28(&qword_269C48210, (void (*)(void))sub_252B5935C);
    sub_252CE34C0();
    sub_252CE37D8(2);
    sub_252D1A518();
    sub_252CE3B6C(*(int *)(v2 + 32));
    sub_252CB8868();
    sub_252AC3A24(&qword_269C48218);
    sub_252CD1C98(&qword_269C48220);
    sub_252CE34C0();
  }
  sub_252B5F658();
  v3();
  sub_252AF4368();
}

void SessionClientDebuggerEvent.PostDeferredTransaction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  uint64_t v13 = v12;
  uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v15 = sub_252AEA368(v14);
  MEMORY[0x270FA5388](v15);
  sub_252AF4420();
  uint64_t v16 = sub_252D19588();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  sub_252AF45F0();
  sub_252AC3A24(&qword_269C48228);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_252B5FA38();
  type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(v19);
  sub_252AEA304();
  MEMORY[0x270FA5388](v20);
  sub_252CE38C4();
  uint64_t v29 = v21;
  uint64_t v30 = v22;
  uint64_t v28 = v22 + v21[7];
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v28, 1, 1, v16);
  sub_252CE39B4();
  sub_252CD1BDC();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v13);
    sub_252B5A4CC(v28, &qword_26B2320E8);
  }
  else
  {
    LOBYTE(a10) = 0;
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A498();
    sub_252B7E53C();
    v23();
    sub_252AC3A24(&qword_269C48208);
    sub_252CD1C28(&qword_269C48230, (void (*)(void))sub_252B593A8);
    sub_252D1A498();
    *(void *)(v30 + v29[5]) = a10;
    sub_252CE3978(2);
    *(void *)(v30 + v29[6]) = sub_252D1A4B8();
    LOBYTE(a10) = 3;
    sub_252D1A438();
    sub_252AECE74(v11, v28);
    sub_252CE3978(4);
    uint64_t v24 = sub_252D1A448();
    uint64_t v25 = (uint64_t *)(v30 + v29[8]);
    uint64_t *v25 = v24;
    v25[1] = v26;
    sub_252AC3A24(&qword_269C48218);
    sub_252CD1C98(&qword_269C48238);
    sub_252D1A498();
    sub_252B0012C();
    v27();
    *(void *)(v30 + v29[9]) = a10;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v13);
    sub_252CC6D8C();
  }
  sub_252AF4368();
}

void sub_252CC7960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionClientDebuggerEvent.PostDeferredTransaction.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CC7978()
{
}

uint64_t (*SessionClientDebuggerEvent.RequestCurrentTranscript.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC79BC(uint64_t a1)
{
  unint64_t v2 = sub_252CD1D00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC79F8(uint64_t a1)
{
  unint64_t v2 = sub_252CD1D00();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.RequestCurrentTranscript.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C48240);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1D00();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.RequestCurrentTranscript.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C48250);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1D00();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC7CB4()
{
}

void sub_252CC7CCC()
{
}

uint64_t (*SessionClientDebuggerEvent.ReplaceCurrentTranscript.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.ReplaceCurrentTranscript.eventData.getter()
{
  return sub_252CC7D24((void (*)(void))type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
}

uint64_t sub_252CC7D24(void (*a1)(void))
{
  a1(0);

  return swift_bridgeObjectRetain();
}

uint64_t SessionClientDebuggerEvent.ReplaceCurrentTranscript.eventData.setter()
{
  return sub_252CC7D78();
}

uint64_t sub_252CC7D78()
{
  uint64_t v2 = sub_252B4C0D0();
  uint64_t v4 = *(int *)(v3(v2) + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v4) = v0;
  return result;
}

uint64_t (*SessionClientDebuggerEvent.ReplaceCurrentTranscript.eventData.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.ReplaceCurrentTranscript.init(id:eventData:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_252CCC2AC(a1, type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript, a2);
}

uint64_t sub_252CC7E10(char a1)
{
  if (a1) {
    return 0x746144746E657665;
  }
  else {
    return 25705;
  }
}

uint64_t sub_252CC7E40()
{
  return sub_252CC7E10(*v0);
}

uint64_t sub_252CC7E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCC324(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CC7E70(uint64_t a1)
{
  unint64_t v2 = sub_252CD1D4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC7EAC(uint64_t a1)
{
  unint64_t v2 = sub_252CD1D4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.ReplaceCurrentTranscript.encode(to:)()
{
}

void SessionClientDebuggerEvent.ReplaceCurrentTranscript.init(from:)()
{
  sub_252AF4380();
  sub_252CE3A28(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252AC3A24(&qword_269C48268);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252AF4420();
  type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(v5);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  sub_252CB88F4(v0);
  sub_252CD1D4C();
  sub_252CBB8A8();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252CE39A0();
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252CE34E0();
    sub_252B7E53C();
    v7();
    sub_252AC3A24(&qword_269C48208);
    sub_252CB8A60();
    sub_252CD1C28(&qword_269C48230, (void (*)(void))sub_252B593A8);
    sub_252CE3610();
    uint64_t v8 = sub_252CE32F0();
    v9(v8);
    sub_252CE3AB0();
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252CC6D8C();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252CC81A4()
{
}

void sub_252CC81BC()
{
}

uint64_t (*SessionClientDebuggerEvent.Sync.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC8204(uint64_t a1)
{
  unint64_t v2 = sub_252CD1D98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC8240(uint64_t a1)
{
  unint64_t v2 = sub_252CD1D98();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.Sync.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C48270);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1D98();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.Sync.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C48280);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.Sync(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1D98();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC84FC()
{
}

void sub_252CC8514()
{
}

uint64_t sub_252CC852C(uint64_t a1)
{
  unint64_t v2 = sub_252CD1DE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC8568(uint64_t a1)
{
  unint64_t v2 = sub_252CD1DE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionClientDebuggerEvent.TerminateSession.encode(to:)()
{
  sub_252AC3A24(&qword_269C48288);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B5F630();
  sub_252CE39B4();
  sub_252CD1DE4();
  sub_252D1A738();
  sub_252B233D8();
  sub_252CB8ACC();
  return v1();
}

uint64_t SessionClientDebuggerEvent.TerminateSession.init(from:)(uint64_t a1)
{
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
}

uint64_t sub_252CC8690(uint64_t a1)
{
  return SessionClientDebuggerEvent.TerminateSession.init(from:)(a1);
}

uint64_t sub_252CC86A8()
{
  return SessionClientDebuggerEvent.TerminateSession.encode(to:)();
}

uint64_t (*SessionClientDebuggerEvent.EnableInjection.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC86EC()
{
  return 25705;
}

uint64_t sub_252CC86F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCE8C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252CC8724(uint64_t a1)
{
  unint64_t v2 = sub_252CD1E30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC8760(uint64_t a1)
{
  unint64_t v2 = sub_252CD1E30();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.EnableInjection.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C48298);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1E30();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.EnableInjection.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C482A8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.EnableInjection(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1E30();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC8A1C()
{
}

void sub_252CC8A34()
{
}

uint64_t (*SessionClientDebuggerEvent.DisableInjection.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC8A78(uint64_t a1)
{
  unint64_t v2 = sub_252CD1E7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC8AB4(uint64_t a1)
{
  unint64_t v2 = sub_252CD1E7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.DisableInjection.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C482B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1E7C();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionClientDebuggerEvent.DisableInjection.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C482C0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.DisableInjection(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1E7C();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC8D70()
{
}

void sub_252CC8D88()
{
}

uint64_t (*SessionClientDebuggerEvent.InjectionResponse.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.InjectionResponse.injectionRequestId.getter()
{
  uint64_t v0 = sub_252B4C488();
  type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v1 = sub_252AEA3DC();

  return v2(v1);
}

uint64_t SessionClientDebuggerEvent.InjectionResponse.injectionRequestId.setter()
{
  type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v0 = sub_252B4C32C();

  return v1(v0);
}

uint64_t (*SessionClientDebuggerEvent.InjectionResponse.injectionRequestId.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientDebuggerEvent.InjectionResponse.responseData.getter()
{
  uint64_t v0 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
  uint64_t v1 = sub_252CE3A68(*(int *)(v0 + 24));
  sub_252B592FC(v1, v2);
  return sub_252AEA3DC();
}

uint64_t SessionClientDebuggerEvent.InjectionResponse.responseData.setter()
{
  uint64_t v3 = sub_252CE38F8();
  uint64_t v4 = v1 + *(int *)(type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v3) + 24);
  uint64_t result = sub_252B592E8(*(void *)v4, *(void *)(v4 + 8));
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = v0;
  return result;
}

uint64_t (*SessionClientDebuggerEvent.InjectionResponse.responseData.modify())()
{
  return nullsub_1;
}

void SessionClientDebuggerEvent.InjectionResponse.init(id:injectionRequestId:responseData:)()
{
  sub_252AFC730();
  uint64_t v4 = sub_252CB982C();
  uint64_t v5 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v4);
  uint64_t v6 = (void *)(v3 + *(int *)(v5 + 24));
  uint64_t v7 = sub_252D19588();
  sub_252AEA304();
  BOOL v9 = *(void (**)(uint64_t))(v8 + 32);
  uint64_t v10 = sub_252B233D8();
  v9(v10);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v3 + *(int *)(v5 + 20), v2, v7);
  *uint64_t v6 = v1;
  v6[1] = v0;
  sub_252AFC718();
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2347A0);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.DisableInjection(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D40);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.EnableInjection(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D30);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.Sync(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D80);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2347C0);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D50);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D70);
}

uint64_t type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D60);
}

unint64_t sub_252CC9118()
{
  unint64_t result = qword_269C47D88;
  if (!qword_269C47D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47D88);
  }
  return result;
}

uint64_t type metadata accessor for SessionClientDebuggerEvent(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231D90);
}

uint64_t sub_252CC9184(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252CC91CC()
{
  uint64_t v1 = sub_252B23194();
  v2(v1);
  sub_252AEA304();
  sub_252CE352C();
  v3();
  return v0;
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.Payload(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234840);
}

uint64_t sub_252CC923C()
{
  uint64_t v2 = sub_252B23194();
  v3(v2);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v0, v1);
  return v0;
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234830);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C48588);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.RequestFailed(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2347E0);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C48578);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.Synced(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C48568);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234800);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234810);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C48558);
}

uint64_t type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C48548);
}

uint64_t sub_252CC93B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1E890 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252CC9500(char a1)
{
  if (!a1) {
    return 25705;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0x65736E6F70736572;
}

uint64_t sub_252CC9558()
{
  return sub_252CC9500(*v0);
}

uint64_t sub_252CC9560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CC93B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CC9588(uint64_t a1)
{
  unint64_t v2 = sub_252CD1EC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC95C4(uint64_t a1)
{
  unint64_t v2 = sub_252CD1EC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientDebuggerEvent.InjectionResponse.encode(to:)()
{
  sub_252AF4380();
  sub_252CB8764();
  sub_252AC3A24(&qword_269C482C8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD1EC8();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252B980EC();
  if (!v0)
  {
    type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
    sub_252B980EC();
    sub_252B5935C();
    sub_252CE3680();
    sub_252D1A518();
  }
  sub_252B5F658();
  v2();
  sub_252AF4368();
}

void SessionClientDebuggerEvent.InjectionResponse.init(from:)()
{
  sub_252AF4380();
  uint64_t v34 = v0;
  uint64_t v5 = v4;
  uint64_t v27 = v6;
  uint64_t v7 = sub_252D19588();
  sub_252AEDBD0();
  uint64_t v28 = v8;
  MEMORY[0x270FA5388](v9);
  sub_252B7E3F8();
  sub_252CE3654();
  MEMORY[0x270FA5388](v10);
  uint64_t v30 = (char *)&v25 - v11;
  uint64_t v31 = sub_252AC3A24(&qword_269C482D8);
  sub_252AEDBD0();
  uint64_t v29 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252AF4420();
  uint64_t v15 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252AC423C();
  uint64_t v33 = v1 + *(int *)(v17 + 24);
  *(_OWORD *)uint64_t v33 = xmmword_252D2DEF0;
  sub_252CB85D0(v5);
  sub_252CD1EC8();
  uint64_t v32 = v2;
  uint64_t v18 = v34;
  sub_252D1A718();
  if (v18)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_252B592E8(*(void *)v33, *(void *)(v33 + 8));
  }
  else
  {
    uint64_t v34 = v5;
    uint64_t v25 = v15;
    uint64_t v26 = v1;
    LOBYTE(v35) = 0;
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    uint64_t v19 = v30;
    sub_252CE3A7C();
    sub_252D1A498();
    uint64_t v30 = *(char **)(v28 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v30)(v26, v19, v7);
    LOBYTE(v35) = 1;
    sub_252CE3A7C();
    sub_252D1A498();
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v26 + *(int *)(v25 + 20), v3, v7);
    sub_252B593A8();
    sub_252D1A438();
    uint64_t v20 = (uint64_t)v34;
    sub_252B5F53C();
    v21();
    uint64_t v22 = v35;
    uint64_t v23 = v36;
    uint64_t v24 = (void *)v33;
    sub_252B592E8(*(void *)v33, *(void *)(v33 + 8));
    void *v24 = v22;
    v24[1] = v23;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v20);
    sub_252CC6D8C();
  }
  sub_252AF4368();
}

void sub_252CC9B44()
{
}

void sub_252CC9B5C()
{
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionStateChanged.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CC9BA4(uint64_t a1)
{
  unint64_t v2 = sub_252CD1F14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CC9BE0(uint64_t a1)
{
  unint64_t v2 = sub_252CD1F14();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.DeferredTransactionStateChanged.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C482E0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1F14();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.DeferredTransactionStateChanged.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C482F0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1F14();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CC9E9C()
{
}

void sub_252CC9EB4()
{
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.eventsData.modify())()
{
  return nullsub_1;
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.queryEventId.getter()
{
  return sub_252CCB6C8();
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.queryEventId.setter()
{
  return sub_252CCB728();
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.queryEventId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.clientRequestId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.clientRequestId.setter()
{
  uint64_t v3 = sub_252CE38F8();
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v3);
  uint64_t result = sub_252B4C9A4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.clientRequestId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.participantSpans.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);

  return swift_bridgeObjectRetain();
}

uint64_t SessionServerDebuggerEvent.DeferredTransactionReady.participantSpans.setter()
{
  uint64_t v2 = *(int *)(sub_252CE3AD8() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionReady.participantSpans.modify())()
{
  return nullsub_1;
}

void SessionServerDebuggerEvent.DeferredTransactionReady.init(eventsData:spanId:queryEventId:clientRequestId:participantSpans:)()
{
  sub_252AFC730();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
  uint64_t v15 = (uint64_t)v13 + v14[6];
  uint64_t v16 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v15, 1, 1, v16);
  *uint64_t v13 = v11;
  v13[1] = v9;
  sub_252AECE74(v7, v15);
  uint64_t v17 = (void *)((char *)v13 + v14[7]);
  *uint64_t v17 = v5;
  v17[1] = v3;
  *(void *)((char *)v13 + v14[8]) = v1;
  sub_252AFC718();
}

uint64_t sub_252CCA164(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614473746E657665 && a2 == 0xEA00000000006174;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E870)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_252D1A5D8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_252CCA3B4(char a1)
{
  unint64_t result = 0x614473746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64496E617073;
      break;
    case 2:
      unint64_t result = 0x6576457972657571;
      break;
    case 3:
      unint64_t result = 0x6552746E65696C63;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CCA47C()
{
  return sub_252CCA3B4(*v0);
}

uint64_t sub_252CCA484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCA164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CCA4AC(uint64_t a1)
{
  unint64_t v2 = sub_252CD1F60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCA4E8(uint64_t a1)
{
  unint64_t v2 = sub_252CD1F60();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.DeferredTransactionReady.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C482F8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD1F60();
  sub_252B5F8D4();
  sub_252AC3A24(&qword_269C48208);
  sub_252CD1C28(&qword_269C48210, (void (*)(void))sub_252B5935C);
  sub_252CE34C0();
  if (!v0)
  {
    sub_252CE37D8(1);
    uint64_t v2 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
    sub_252D19588();
    sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
    sub_252CE3714();
    sub_252D1A518();
    sub_252CE3B6C(*(int *)(v2 + 28));
    sub_252CB8868();
    sub_252AC3A24(&qword_269C48218);
    sub_252CD1C98(&qword_269C48220);
    sub_252CE34C0();
  }
  sub_252BA591C();
  v3();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.DeferredTransactionReady.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  uint64_t v13 = v12;
  uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v15 = sub_252AEA368(v14);
  MEMORY[0x270FA5388](v15);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C48308);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_252BA59A0();
  type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(v17);
  sub_252AEA304();
  MEMORY[0x270FA5388](v18);
  sub_252CE38C4();
  uint64_t v31 = v19;
  uint64_t v29 = v20;
  uint64_t v21 = sub_252D19588();
  uint64_t v22 = sub_252CE39F4();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, v23, v24, v21);
  sub_252AC3A68(v13, v13[3]);
  sub_252CD1F60();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v13);
    sub_252B5A4CC(v30, &qword_26B2320E8);
  }
  else
  {
    sub_252AC3A24(&qword_269C48208);
    sub_252CD1C28(&qword_269C48230, (void (*)(void))sub_252B593A8);
    sub_252CE3518();
    sub_252D1A498();
    void *v29 = a10;
    v29[1] = sub_252D1A4B8();
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A438();
    sub_252AECE74(v11, v30);
    LOBYTE(a10) = 3;
    uint64_t v25 = sub_252D1A448();
    uint64_t v26 = (void *)((char *)v29 + *(int *)(v31 + 28));
    *uint64_t v26 = v25;
    v26[1] = v27;
    sub_252AC3A24(&qword_269C48218);
    sub_252CD1C98(&qword_269C48238);
    sub_252CE3518();
    sub_252D1A498();
    sub_252CB8ACC();
    v28();
    *(void *)((char *)v29 + *(int *)(v31 + 32)) = a10;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v13);
    sub_252CC6D8C();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252CCAB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionServerDebuggerEvent.DeferredTransactionReady.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CCABA4()
{
}

uint64_t (*SessionServerDebuggerEvent.DeferredTransactionPostAccepted.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CCABEC(uint64_t a1)
{
  unint64_t v2 = sub_252CD1FAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCAC28(uint64_t a1)
{
  unint64_t v2 = sub_252CD1FAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.DeferredTransactionPostAccepted.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C48310);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD1FAC();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.DeferredTransactionPostAccepted.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C48320);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD1FAC();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CCAEE4()
{
}

void sub_252CCAEFC()
{
}

uint64_t (*SessionServerDebuggerEvent.SpanStarted.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.SpanStarted.participant.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.SpanStarted.participant.setter()
{
  uint64_t result = sub_252CE38DC();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.SpanStarted.participant.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.SpanStarted.init(spanId:participant:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_252CCAFC4(char a1)
{
  if (a1) {
    return 0x7069636974726170;
  }
  else {
    return 0x64496E617073;
  }
}

uint64_t sub_252CCB000()
{
  return sub_252CCAFC4(*v0);
}

uint64_t sub_252CCB008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCB1C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CCB030(uint64_t a1)
{
  unint64_t v2 = sub_252CD1FF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCB06C(uint64_t a1)
{
  unint64_t v2 = sub_252CD1FF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.SpanStarted.encode(to:)()
{
}

void SessionServerDebuggerEvent.SpanStarted.init(from:)()
{
}

void sub_252CCB120()
{
}

void sub_252CCB138()
{
}

uint64_t sub_252CCB154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SessionServerDebuggerEvent.SpanStarted.id.getter();
  *a1 = result;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.SpanEnded.spanId.modify())()
{
  return nullsub_1;
}

uint64_t (*SessionServerDebuggerEvent.SpanEnded.participant.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CCB1C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2 || (sub_252CB8520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_252CB8520();
    sub_252CB8EFC();
    if (a1) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CCB2AC(uint64_t a1)
{
  unint64_t v2 = sub_252CD2044();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCB2E8(uint64_t a1)
{
  unint64_t v2 = sub_252CD2044();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.SpanEnded.encode(to:)()
{
}

void sub_252CCB360()
{
  sub_252AF4380();
  uint64_t v7 = v1;
  uint64_t v3 = v2;
  sub_252AC3A24(v4);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B23278();
  sub_252AC3A68(v3, v3[3]);
  v7();
  sub_252CE3AC4();
  sub_252D1A738();
  sub_252D1A598();
  if (!v0)
  {
    sub_252CB8A60();
    sub_252CB8868();
  }
  sub_252BA591C();
  v6();
  sub_252AF4368();
}

void SessionServerDebuggerEvent.SpanEnded.init(from:)()
{
}

void sub_252CCB4A4()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v13 = v5;
  sub_252AC3A24(v6);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AC423C();
  sub_252AC3A68(v4, v4[3]);
  v2();
  sub_252D1A718();
  if (!v0)
  {
    uint64_t v8 = sub_252D1A4B8();
    uint64_t v9 = sub_252D1A448();
    uint64_t v11 = v10;
    sub_252B983F0();
    v12();
    *uint64_t v13 = v8;
    v13[1] = v9;
    v13[2] = v11;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252CCB604()
{
}

void sub_252CCB61C()
{
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.eventData.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.spanId.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.queryEventId.getter()
{
  return sub_252CCB6C8();
}

uint64_t sub_252CCB6C8()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t v4 = v1 + *(int *)(v3(v2) + 24);

  return sub_252AECE0C(v4, v0);
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.queryEventId.setter()
{
  return sub_252CCB728();
}

uint64_t sub_252CCB728()
{
  uint64_t v1 = sub_252B4C0D0();
  v2(v1);
  sub_252B4C3A8();

  return sub_252AECE74(v0, v3);
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.queryEventId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.participantSpans.getter()
{
  type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);

  return swift_bridgeObjectRetain();
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.participantSpans.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.FinalTransactionPosted.participantSpans.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.id.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SessionServerDebuggerEvent.FinalTransactionPosted.init(eventData:spanId:queryEventId:participantSpans:)()
{
  uint64_t v5 = sub_252CB982C();
  uint64_t v6 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v5);
  uint64_t v7 = (uint64_t)v4 + *(int *)(v6 + 24);
  uint64_t v8 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v7, 1, 1, v8);
  *uint64_t v4 = v3;
  v4[1] = v2;
  uint64_t result = sub_252AECE74(v1, v7);
  *(void *)((char *)v4 + *(int *)(v6 + 28)) = v0;
  return result;
}

uint64_t sub_252CCB8E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E870)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_252CCBAB4(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64496E617073;
      break;
    case 2:
      unint64_t result = 0x6576457972657571;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CCBB54()
{
  return sub_252CCBAB4(*v0);
}

uint64_t sub_252CCBB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCB8E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CCBB84(uint64_t a1)
{
  unint64_t v2 = sub_252CD2090();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCBBC0(uint64_t a1)
{
  unint64_t v2 = sub_252CD2090();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.FinalTransactionPosted.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8764();
  sub_252AC3A24(&qword_269C48358);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD2090();
  sub_252B5F8D4();
  sub_252AC3A24(&qword_269C48208);
  sub_252CD1C28(&qword_269C48210, (void (*)(void))sub_252B5935C);
  sub_252CB82A0();
  if (!v0)
  {
    sub_252CE3680();
    sub_252D1A598();
    type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
    sub_252D19588();
    sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
    sub_252CE3714();
    sub_252D1A518();
    sub_252AC3A24(&qword_269C48218);
    sub_252CD1C98(&qword_269C48220);
    sub_252CB82A0();
  }
  sub_252BA591C();
  v2();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.FinalTransactionPosted.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  uint64_t v14 = v13;
  uint64_t v15 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v16 = sub_252AEA368(v15);
  MEMORY[0x270FA5388](v16);
  sub_252B23278();
  sub_252AC3A24(&qword_269C48368);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_252B5FA38();
  uint64_t v19 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(v18);
  sub_252AEA304();
  MEMORY[0x270FA5388](v20);
  sub_252B5F688();
  uint64_t v21 = sub_252D19588();
  uint64_t v22 = sub_252CE39F4();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, v23, v24, v21);
  sub_252AC3A68(v14, v14[3]);
  sub_252CD2090();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    sub_252B5A4CC(v26, &qword_26B2320E8);
  }
  else
  {
    sub_252AC3A24(&qword_269C48208);
    sub_252CD1C28(&qword_269C48230, (void (*)(void))sub_252B593A8);
    sub_252CE3518();
    sub_252CE3A08();
    *uint64_t v12 = a10;
    v12[1] = sub_252D1A4B8();
    LOBYTE(a10) = 2;
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A438();
    sub_252AECE74(v11, v26);
    sub_252AC3A24(&qword_269C48218);
    sub_252CD1C98(&qword_269C48238);
    sub_252CE3518();
    sub_252CE3A08();
    sub_252B983F0();
    v25();
    *(void *)((char *)v12 + *(int *)(v19 + 28)) = a10;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    sub_252CC6D8C();
  }
  sub_252AF4368();
}

void sub_252CCC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionServerDebuggerEvent.FinalTransactionPosted.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CCC1B8()
{
}

uint64_t sub_252CCC1D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SessionServerDebuggerEvent.FinalTransactionPosted.id.getter();
  *a1 = result;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.CurrentTranscript.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.CurrentTranscript.eventData.getter()
{
  return sub_252CC7D24((void (*)(void))type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
}

uint64_t SessionServerDebuggerEvent.CurrentTranscript.eventData.setter()
{
  return sub_252CC7D78();
}

uint64_t (*SessionServerDebuggerEvent.CurrentTranscript.eventData.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.CurrentTranscript.init(id:eventData:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_252CCC2AC(a1, type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript, a2);
}

uint64_t sub_252CCC2AC@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v6();
  uint64_t result = a2(0);
  *(void *)(a3 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t sub_252CCC324(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_252CB8520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_252CB8520();
    sub_252CB8EFC();
    if (a1) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CCC3F0(uint64_t a1)
{
  unint64_t v2 = sub_252CD20DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCC42C(uint64_t a1)
{
  unint64_t v2 = sub_252CD20DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.CurrentTranscript.encode(to:)()
{
}

void sub_252CCC4B8()
{
  sub_252AF4380();
  uint64_t v11 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_252AC3A24(v6);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  char v8 = sub_252CB88F4(v5);
  v3(v8);
  sub_252CE3AC4();
  sub_252D1A738();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252D1A578();
  if (!v0)
  {
    v11(0);
    sub_252CB8A60();
    sub_252AC3A24(&qword_269C48208);
    sub_252CD1C28(&qword_269C48210, (void (*)(void))sub_252B5935C);
    sub_252D1A578();
  }
  uint64_t v9 = sub_252B7E4CC();
  v10(v9);
  sub_252CB8538();
  sub_252AF4368();
}

void SessionServerDebuggerEvent.CurrentTranscript.init(from:)()
{
  sub_252AF4380();
  sub_252CE3A28(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252AC3A24(&qword_269C48380);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252AF4420();
  type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(v5);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  sub_252CB88F4(v0);
  sub_252CD20DC();
  sub_252CBB8A8();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252CE39A0();
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252CE34E0();
    sub_252B7E53C();
    v7();
    sub_252AC3A24(&qword_269C48208);
    sub_252CB8A60();
    sub_252CD1C28(&qword_269C48230, (void (*)(void))sub_252B593A8);
    sub_252CE3610();
    uint64_t v8 = sub_252CE32F0();
    v9(v8);
    sub_252CE3AB0();
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252CC6D8C();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252CCC8DC()
{
}

void sub_252CCC8F4()
{
}

uint64_t (*SessionServerDebuggerEvent.Synced.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CCC93C(uint64_t a1)
{
  unint64_t v2 = sub_252CD2128();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCC978(uint64_t a1)
{
  unint64_t v2 = sub_252CD2128();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.Synced.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C48388);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD2128();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.Synced.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C48398);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionServerDebuggerEvent.Synced(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD2128();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CCCC34()
{
}

void sub_252CCCC4C()
{
}

uint64_t (*SessionServerDebuggerEvent.TranscriptReplacementAccepted.id.modify())()
{
  return nullsub_1;
}

uint64_t sub_252CCCC90(uint64_t a1)
{
  unint64_t v2 = sub_252CD2174();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCCCCC(uint64_t a1)
{
  unint64_t v2 = sub_252CD2174();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.TranscriptReplacementAccepted.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C483A0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD2174();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.TranscriptReplacementAccepted.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C483B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD2174();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CCCF88()
{
}

void sub_252CCCFA0()
{
}

uint64_t SessionServerDebuggerEvent.RequestFailed.Reason.hash(into:)()
{
  return sub_252D1A6B8();
}

BOOL static SessionServerDebuggerEvent.RequestFailed.Reason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_252CCCFF8()
{
  unint64_t result = qword_269C47DB8;
  if (!qword_269C47DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47DB8);
  }
  return result;
}

uint64_t type metadata accessor for SessionServerDebuggerEvent(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B231DA0);
}

unint64_t sub_252CCD064()
{
  unint64_t result = qword_269C47E30;
  if (!qword_269C47E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E30);
  }
  return result;
}

unint64_t sub_252CCD0B0()
{
  unint64_t result = qword_269C47E38;
  if (!qword_269C47E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E38);
  }
  return result;
}

unint64_t sub_252CCD0FC()
{
  unint64_t result = qword_269C47E48;
  if (!qword_269C47E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E48);
  }
  return result;
}

unint64_t sub_252CCD148()
{
  unint64_t result = qword_269C47E58;
  if (!qword_269C47E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E58);
  }
  return result;
}

unint64_t sub_252CCD194()
{
  unint64_t result = qword_269C47E68;
  if (!qword_269C47E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E68);
  }
  return result;
}

unint64_t sub_252CCD1E0()
{
  unint64_t result = qword_269C47E70;
  if (!qword_269C47E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E70);
  }
  return result;
}

unint64_t sub_252CCD22C()
{
  unint64_t result = qword_269C47E78;
  if (!qword_269C47E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E78);
  }
  return result;
}

unint64_t sub_252CCD278()
{
  unint64_t result = qword_269C47E88;
  if (!qword_269C47E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E88);
  }
  return result;
}

unint64_t sub_252CCD2C4()
{
  unint64_t result = qword_269C47E98;
  if (!qword_269C47E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47E98);
  }
  return result;
}

unint64_t sub_252CCD310()
{
  unint64_t result = qword_269C47EA8;
  if (!qword_269C47EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47EA8);
  }
  return result;
}

unint64_t sub_252CCD35C()
{
  unint64_t result = qword_269C47EB8;
  if (!qword_269C47EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47EB8);
  }
  return result;
}

unint64_t sub_252CCD3A8()
{
  unint64_t result = qword_269C47EC8;
  if (!qword_269C47EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47EC8);
  }
  return result;
}

uint64_t sub_252CCD3F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1E8B0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1E8D0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000252D1E8F0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6576456F72657ALL && a2 == 0xEE00746E65537374)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_252CCD5BC(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0x6E6576456F72657ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CCD658()
{
  return sub_252CCD5BC(*v0);
}

uint64_t sub_252CCD660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCD3F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CCD688(uint64_t a1)
{
  unint64_t v2 = sub_252CD21C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCD6C4(uint64_t a1)
{
  unint64_t v2 = sub_252CD21C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CCD700(uint64_t a1)
{
  unint64_t v2 = sub_252CD2258();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCD73C(uint64_t a1)
{
  unint64_t v2 = sub_252CD2258();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CCD778(uint64_t a1)
{
  unint64_t v2 = sub_252CD22A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCD7B4(uint64_t a1)
{
  unint64_t v2 = sub_252CD22A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CCD7F0(uint64_t a1)
{
  unint64_t v2 = sub_252CD22F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCD82C(uint64_t a1)
{
  unint64_t v2 = sub_252CD22F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CCD868(uint64_t a1)
{
  unint64_t v2 = sub_252CD220C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCD8A4(uint64_t a1)
{
  unint64_t v2 = sub_252CD220C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.RequestFailed.Reason.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C483B8);
  sub_252AEDBD0();
  v21[9] = v5;
  v21[10] = v4;
  MEMORY[0x270FA5388](v4);
  sub_252AEDE70();
  v21[8] = v6;
  sub_252AC3A24(&qword_269C483C0);
  sub_252AEDBD0();
  v21[6] = v8;
  v21[7] = v7;
  MEMORY[0x270FA5388](v7);
  sub_252CB8440(v9, v21[0]);
  sub_252AC3A24(&qword_269C483C8);
  sub_252AEDBD0();
  v21[3] = v11;
  v21[4] = v10;
  MEMORY[0x270FA5388](v10);
  v21[2] = (uint64_t)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252AC3A24(&qword_269C483D0);
  sub_252AEDBD0();
  v21[0] = v14;
  v21[1] = v13;
  MEMORY[0x270FA5388](v13);
  sub_252AC423C();
  uint64_t v15 = sub_252AC3A24(&qword_269C483D8);
  sub_252AEDBD0();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  sub_252AF45F0();
  uint64_t v19 = *v0;
  sub_252AC3A68(v3, v3[3]);
  sub_252CD21C0();
  sub_252D1A738();
  switch(v19)
  {
    case 1:
      sub_252CD22A4();
      sub_252CE3664();
      break;
    case 2:
      sub_252CD2258();
      sub_252CE3664();
      break;
    case 3:
      sub_252CD220C();
      sub_252CE3664();
      break;
    default:
      sub_252CD22F0();
      sub_252CE3664();
      break;
  }
  sub_252B5F53C();
  v20();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v15);
  sub_252AF4368();
}

uint64_t SessionServerDebuggerEvent.RequestFailed.Reason.hashValue.getter()
{
  return sub_252D1A6E8();
}

void SessionServerDebuggerEvent.RequestFailed.Reason.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v31 = v4;
  sub_252AC3A24(&qword_269C48408);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C48410);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252CB8440(v7, v29);
  sub_252AC3A24(&qword_269C48418);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C48420);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  sub_252AC423C();
  uint64_t v10 = sub_252AC3A24(&qword_269C48428);
  sub_252AEDBD0();
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v12);
  sub_252B7732C();
  uint64_t v13 = (void *)sub_252B7E4CC();
  sub_252AC3A68(v13, v14);
  sub_252CD21C0();
  sub_252D1A718();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v33 = v3;
  uint64_t v15 = sub_252D1A4C8();
  if (!*(void *)(v15 + 16)
    || (uint64_t v30 = *(unsigned __int8 *)(v15 + 32),
        sub_252B5F440(1),
        uint64_t v17 = v16,
        unint64_t v19 = v18,
        swift_bridgeObjectRelease(),
        v17 != v19 >> 1))
  {
    sub_252D1A308();
    swift_allocError();
    uint64_t v21 = v20;
    sub_252AC3A24(&qword_269C42E78);
    *uint64_t v21 = &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason;
    sub_252D1A3F8();
    sub_252B77578();
    sub_252B0014C();
    sub_252CE389C();
    v22();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v1, v10);
    uint64_t v3 = v33;
LABEL_7:
    uint64_t v23 = v3;
    goto LABEL_8;
  }
  switch(v30)
  {
    case 1:
      sub_252CD22A4();
      sub_252CBA6CC();
      goto LABEL_12;
    case 2:
      sub_252CD2258();
      sub_252CBA6CC();
      goto LABEL_12;
    case 3:
      sub_252CD220C();
      sub_252CBA6CC();
      sub_252B983F0();
      v26();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v27();
      uint64_t v23 = v33;
      uint64_t v28 = v31;
      goto LABEL_13;
    default:
      sub_252CD22F0();
      sub_252CBA6CC();
LABEL_12:
      sub_252B5F53C();
      v24();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v25();
      uint64_t v23 = v33;
      uint64_t v28 = v31;
LABEL_13:
      *uint64_t v28 = v30;
      break;
  }
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v23);
  sub_252AF4368();
}

void sub_252CCE108()
{
}

void sub_252CCE120()
{
}

uint64_t (*SessionServerDebuggerEvent.RequestFailed.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.RequestFailed.reason.getter()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t result = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v2);
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t SessionServerDebuggerEvent.RequestFailed.reason.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.RequestFailed.reason.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.RequestFailed.init(id:reason:)@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v4();
  uint64_t result = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v3;
  return result;
}

uint64_t sub_252CCE274(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CCE344(char a1)
{
  if (a1) {
    return 0x6E6F73616572;
  }
  else {
    return 25705;
  }
}

uint64_t sub_252CCE36C()
{
  return sub_252CCE344(*v0);
}

uint64_t sub_252CCE374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCE274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CCE39C(uint64_t a1)
{
  unint64_t v2 = sub_252CD233C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCE3D8(uint64_t a1)
{
  unint64_t v2 = sub_252CD233C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.RequestFailed.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8764();
  sub_252AC3A24(&qword_269C48430);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD233C();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB82A0();
  if (!v0)
  {
    type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
    sub_252CD2388();
    sub_252CE3680();
    sub_252D1A578();
  }
  sub_252BA591C();
  v2();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.RequestFailed.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_252AF4380();
  uint64_t v33 = sub_252CE3A48(v14);
  sub_252AEDBD0();
  uint64_t v30 = v15;
  MEMORY[0x270FA5388](v16);
  sub_252B23278();
  sub_252AC3A24(&qword_269C48448);
  sub_252AEDBD0();
  uint64_t v31 = v17;
  uint64_t v32 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = sub_252AF4420();
  uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(v19);
  sub_252AEA304();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252CB88F4(v12);
  sub_252CD233C();
  sub_252CBB8A8();
  if (v13)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
  }
  else
  {
    uint64_t v29 = v20;
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A498();
    uint64_t v28 = v23;
    sub_252B7E53C();
    v24();
    sub_252CD23D4();
    sub_252D1A498();
    uint64_t v25 = sub_252CE32F0();
    v26(v25);
    v28[*(int *)(v29 + 20)] = a12;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
    sub_252CC6D8C();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252CCE804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionServerDebuggerEvent.RequestFailed.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_252CCE81C()
{
}

uint64_t (*SessionServerDebuggerEvent.InjectionStateChanged.id.modify())()
{
  return nullsub_1;
}

uint64_t _s16IntelligenceFlow26SessionClientDebuggerEventV24RequestCurrentTranscriptV2idAE10Foundation4UUIDV_tcfC_0()
{
  sub_252D19588();
  sub_252AEA304();
  uint64_t v0 = sub_252B4C32C();

  return v1(v0);
}

uint64_t sub_252CCE8C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_252CB8520();
    sub_252CB8EFC();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252CCE920(uint64_t a1)
{
  unint64_t v2 = sub_252CD2420();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCE95C(uint64_t a1)
{
  unint64_t v2 = sub_252CD2420();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.InjectionStateChanged.encode(to:)()
{
  sub_252B2330C();
  sub_252CE32BC();
  sub_252AC3A24(&qword_269C48458);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252CD2420();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB87B8();
  uint64_t v1 = sub_252CE3198();
  v2(v1);
  sub_252CBAF90();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.InjectionStateChanged.init(from:)()
{
  sub_252AF4380();
  sub_252AF4518(v2);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v12);
  sub_252AC3A24(&qword_269C48468);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45B4();
  sub_252CD2420();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    uint64_t v10 = sub_252AF43B8();
    v11(v10);
    sub_252CE342C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252CCEC18()
{
}

void sub_252CCEC30()
{
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.participantId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.participantId.setter()
{
  uint64_t result = sub_252CE38DC();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.participantId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.aliasParticipantId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.aliasParticipantId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.aliasParticipantId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionPointId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionPointId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionPointId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionInstanceId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionInstanceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionInstanceId.modify())()
{
  return nullsub_1;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV16InjectionRequestV2id10Foundation4UUIDVvg_0()
{
  uint64_t v0 = sub_252B4C488();
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v1 = sub_252AEA3DC();

  return v2(v1);
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionRequestId.setter()
{
  type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v0 = sub_252B4C32C();

  return v1(v0);
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionRequestId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionInputMangledTypeName.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionInputMangledTypeName.setter()
{
  sub_252CE3908();
  uint64_t result = sub_252B4C9A4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionInputMangledTypeName.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionInputData.getter()
{
  uint64_t v0 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  uint64_t v1 = sub_252CE3A68(*(int *)(v0 + 44));
  sub_252AC5A54(v1, v2);
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionInputData.setter()
{
  uint64_t v3 = v1 + *(int *)(sub_252CE3908() + 44);
  uint64_t result = sub_252AC5C14(*(void *)v3, *(void *)(v3 + 8));
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionInputData.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionOutputMangledTypeName.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.injectionOutputMangledTypeName.setter()
{
  sub_252CE3908();
  uint64_t result = sub_252B4C9A4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionRequest.injectionOutputMangledTypeName.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.inputType.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0) + 40));
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];

  return MEMORY[0x270F9E9B8](v2, v3);
}

uint64_t SessionServerDebuggerEvent.InjectionRequest.outputType.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0) + 48));
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];

  return MEMORY[0x270F9E9B8](v2, v3);
}

void SessionServerDebuggerEvent.InjectionRequest.init(spanId:participantId:aliasParticipantId:injectionPointId:injectionInstanceId:injectionRequestId:injectionInputMangledTypeName:injectionInputData:injectionOutputMangledTypeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_252AFC730();
  uint64_t v29 = v28;
  *uint64_t v28 = v30;
  v28[1] = v31;
  v28[2] = v32;
  v28[3] = v33;
  v28[4] = v34;
  v28[5] = v35;
  v28[6] = v36;
  v28[7] = v37;
  v28[8] = a21;
  uint64_t v38 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v39();
  uint64_t v40 = (void *)((char *)v29 + v38[10]);
  *uint64_t v40 = a23;
  v40[1] = a24;
  uint64_t v41 = (void *)((char *)v29 + v38[11]);
  *uint64_t v41 = a25;
  v41[1] = a26;
  uint64_t v42 = (void *)((char *)v29 + v38[12]);
  *uint64_t v42 = a27;
  v42[1] = a28;
  sub_252AFC718();
}

uint64_t sub_252CCF2BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7069636974726170 && a2 == 0xED00006449746E61;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1E910 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E930 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1E950 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1E890 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000252D1E970 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1E990 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000252D1E9B0)
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else
    {
      char v7 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 8;
      }
      else {
        return 9;
      }
    }
  }
}

unint64_t sub_252CCF634(char a1)
{
  unint64_t result = 0x64496E617073;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7069636974726170;
      break;
    case 2:
    case 5:
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CCF750()
{
  return sub_252CCF634(*v0);
}

uint64_t sub_252CCF758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CCF2BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CCF780(uint64_t a1)
{
  unint64_t v2 = sub_252CD246C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CCF7BC(uint64_t a1)
{
  unint64_t v2 = sub_252CD246C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.InjectionRequest.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C48470);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD246C();
  sub_252B5F8D4();
  sub_252D1A598();
  if (!v0)
  {
    sub_252CE3324(1);
    sub_252CE3324(2);
    sub_252CE3324(3);
    sub_252D1A4E8();
    uint64_t v2 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
    sub_252D19588();
    sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
    sub_252B982A8();
    sub_252CE3B6C(*(int *)(v2 + 40));
    sub_252CE3324(6);
    sub_252B5935C();
    sub_252B982A8();
    sub_252CE3B6C(*(int *)(v2 + 48));
    sub_252CE3324(8);
  }
  sub_252BA591C();
  v3();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.InjectionRequest.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  sub_252D19588();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C48480);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252BA59A0();
  uint64_t v23 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(v5);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  sub_252AEDE70();
  v7[7] = 0;
  v7[8] = 0;
  uint64_t v8 = v7;
  sub_252AC3A68(v2, v2[3]);
  sub_252CD246C();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = v8;
    *uint64_t v8 = sub_252D1A4B8();
    v8[1] = sub_252CE33DC(1);
    v8[2] = v10;
    v8[3] = sub_252CE33DC(2);
    v8[4] = v11;
    v8[5] = sub_252CE33DC(3);
    v8[6] = v12;
    v8[7] = sub_252D1A408();
    v8[8] = v13;
    LOBYTE(v24) = 5;
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A498();
    sub_252B7E53C();
    v14();
    uint64_t v15 = sub_252CE33DC(6);
    uint64_t v16 = (uint64_t *)((char *)v8 + v23[10]);
    *uint64_t v16 = v15;
    v16[1] = v17;
    sub_252B593A8();
    sub_252D1A498();
    *(_OWORD *)((char *)v8 + v23[11]) = v24;
    uint64_t v18 = sub_252CE33DC(8);
    uint64_t v20 = v19;
    sub_252B0012C();
    v21();
    uint64_t v22 = (uint64_t *)((char *)v9 + v23[12]);
    uint64_t *v22 = v18;
    v22[1] = v20;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    sub_252CC6D8C();
  }
  sub_252AF4368();
}

void sub_252CCFF0C()
{
}

void sub_252CCFF24()
{
}

uint64_t _s16IntelligenceFlow26SessionClientDebuggerEventV26EnableDeferredTransactionsV2id10Foundation4UUIDVvg_0()
{
  sub_252B4C488();
  sub_252D19588();
  sub_252AEA304();
  uint64_t v0 = sub_252AEA3DC();

  return v1(v0);
}

uint64_t (*SessionServerDebuggerEvent.InjectionResponseAccepted.id.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionResponseAccepted.successful.getter()
{
  sub_252CE374C();
  return *(unsigned __int8 *)(v0 + v1);
}

uint64_t SessionServerDebuggerEvent.InjectionResponseAccepted.successful.setter(char a1)
{
  uint64_t result = sub_252CE374C();
  *(unsigned char *)(v1 + v4) = a1;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionResponseAccepted.successful.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionResponseAccepted.init(id:successful:)@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v4();
  uint64_t result = sub_252CE374C();
  *(unsigned char *)(a2 + v6) = a1;
  return result;
}

uint64_t sub_252CD00B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6673736563637573 && a2 == 0xEA00000000006C75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CD0194(char a1)
{
  if (a1) {
    return 0x6673736563637573;
  }
  else {
    return 25705;
  }
}

uint64_t sub_252CD01C4()
{
  return sub_252CD0194(*v0);
}

uint64_t sub_252CD01CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CD00B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CD01F4(uint64_t a1)
{
  unint64_t v2 = sub_252CD24B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CD0230(uint64_t a1)
{
  unint64_t v2 = sub_252CD24B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.InjectionResponseAccepted.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8764();
  sub_252AC3A24(&qword_269C48488);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252CD24B8();
  sub_252B5F8D4();
  sub_252D19588();
  sub_252CC9184(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252CB82A0();
  if (!v0)
  {
    type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
    sub_252CB8A60();
    sub_252CE3680();
    sub_252D1A538();
  }
  sub_252BA591C();
  v2();
  sub_252B232F8();
}

void SessionServerDebuggerEvent.InjectionResponseAccepted.init(from:)()
{
  sub_252AF4380();
  sub_252CE3A48(v3);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B5F688();
  sub_252AC3A24(&qword_269C48498);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(v6);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252B5F630();
  sub_252AC3A68(v0, v0[3]);
  sub_252CD24B8();
  sub_252D1A718();
  if (v2)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252CC9184(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A498();
    sub_252B7E53C();
    v9();
    char v10 = sub_252D1A458();
    uint64_t v11 = sub_252CE3790();
    v12(v11);
    *(unsigned char *)(v1 + *(int *)(v7 + 20)) = v10 & 1;
    sub_252CC91CC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252CC6D8C();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252CD0624()
{
}

void sub_252CD063C()
{
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.spanId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.participantId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.participantId.setter()
{
  uint64_t result = sub_252CE38DC();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.participantId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.aliasParticipantId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.aliasParticipantId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.aliasParticipantId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionPointId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionPointId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionPointId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionInstanceId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionInstanceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionInstanceId.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueMangledTypeName.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueMangledTypeName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueMangledTypeName.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueData.getter()
{
  sub_252AC5A54(*(void *)(v0 + 88), *(void *)(v0 + 96));
  return sub_252AEA3DC();
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_252AC5C14(*(void *)(v2 + 88), *(void *)(v2 + 96));
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*SessionServerDebuggerEvent.InjectionValueCaptured.injectionValueData.modify())()
{
  return nullsub_1;
}

uint64_t SessionServerDebuggerEvent.InjectionValueCaptured.valueType.getter()
{
  return MEMORY[0x270F9E9B8](*(void *)(v0 + 72), *(void *)(v0 + 80));
}

__n128 SessionServerDebuggerEvent.InjectionValueCaptured.init(spanId:participantId:aliasParticipantId:injectionPointId:injectionInstanceId:injectionValueMangledTypeName:injectionValueData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12)
{
  __n128 result = a11;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a12;
  return result;
}

uint64_t sub_252CD09BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496E617073 && a2 == 0xE600000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7069636974726170 && a2 == 0xED00006449746E61;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1E910 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1E930 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1E950 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000252D1E9D0 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1E9F0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      char v7 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 6;
      }
      else {
        return 7;
      }
    }
  }
}

unint64_t sub_252CD0C8C(char a1)
{
  unint64_t result = 0x64496E617073;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7069636974726170;
      break;
    case 2:
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CD0D7C()
{
  return sub_252CD0C8C(*v0);
}

uint64_t sub_252CD0D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CD09BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CD0DAC(uint64_t a1)
{
  unint64_t v2 = sub_252CD2504();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CD0DE8(uint64_t a1)
{
  unint64_t v2 = sub_252CD2504();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerDebuggerEvent.InjectionValueCaptured.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C484A0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252AC3A68(v2, v2[3]);
  sub_252CD2504();
  sub_252D1A738();
  sub_252D1A598();
  if (!v0)
  {
    sub_252CE3844(1);
    sub_252CE3444();
    sub_252CE3844(2);
    sub_252CE3444();
    sub_252CE3844(3);
    sub_252CE3444();
    sub_252CE3844(4);
    sub_252D1A4E8();
    sub_252CE3844(5);
    sub_252CE3444();
    sub_252B5935C();
    sub_252B982A8();
  }
  sub_252B5F658();
  v4();
  sub_252AF4368();
}

void SessionServerDebuggerEvent.InjectionValueCaptured.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C484B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AC423C();
  uint64_t v6 = *(void *)(v2 + 32);
  char v7 = (void *)sub_252CBA1D4();
  sub_252AC3A68(v7, v8);
  sub_252CD2504();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252CE398C();
    uint64_t v9 = sub_252D1A4B8();
    uint64_t v22 = sub_252CE348C();
    sub_252CE3850(2);
    uint64_t v25 = v6;
    uint64_t v21 = sub_252CE348C();
    sub_252CE3850(3);
    uint64_t v24 = v6;
    uint64_t v19 = sub_252CE348C();
    uint64_t v20 = v4;
    sub_252CE3850(4);
    sub_252CE398C();
    uint64_t v23 = v6;
    uint64_t v10 = sub_252D1A408();
    uint64_t v12 = v11;
    uint64_t v18 = v10;
    LOBYTE(v26) = 5;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_252CE348C();
    uint64_t v15 = v14;
    uint64_t v17 = v13;
    sub_252B593A8();
    swift_bridgeObjectRetain();
    sub_252D1A498();
    sub_252B775A0();
    v16();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_252AC5A54(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v20 = v9;
    v20[1] = v22;
    v20[2] = v25;
    v20[3] = v21;
    v20[4] = v24;
    v20[5] = v19;
    v20[6] = v23;
    v20[7] = v18;
    v20[8] = v12;
    v20[9] = v17;
    v20[10] = v15;
    v20[11] = v26;
    v20[12] = v27;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252AC5C14(v26, v27);
  }
  sub_252AF4368();
}

void sub_252CD1488()
{
}

void sub_252CD14A0()
{
}

unint64_t sub_252CD14BC()
{
  unint64_t result = qword_269C47F48;
  if (!qword_269C47F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47F48);
  }
  return result;
}

unint64_t sub_252CD1508()
{
  unint64_t result = qword_269C47FF8;
  if (!qword_269C47FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C47FF8);
  }
  return result;
}

unint64_t sub_252CD1554()
{
  unint64_t result = qword_269C48000;
  if (!qword_269C48000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48000);
  }
  return result;
}

unint64_t sub_252CD15A0()
{
  unint64_t result = qword_269C48008;
  if (!qword_269C48008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48008);
  }
  return result;
}

unint64_t sub_252CD15EC()
{
  unint64_t result = qword_269C48010;
  if (!qword_269C48010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48010);
  }
  return result;
}

unint64_t sub_252CD1638()
{
  unint64_t result = qword_269C48020;
  if (!qword_269C48020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48020);
  }
  return result;
}

unint64_t sub_252CD1684()
{
  unint64_t result = qword_269C48030;
  if (!qword_269C48030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48030);
  }
  return result;
}

unint64_t sub_252CD16D0()
{
  unint64_t result = qword_269C48040;
  if (!qword_269C48040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48040);
  }
  return result;
}

unint64_t sub_252CD171C()
{
  unint64_t result = qword_269C48050;
  if (!qword_269C48050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48050);
  }
  return result;
}

unint64_t sub_252CD1768()
{
  unint64_t result = qword_269C48060;
  if (!qword_269C48060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48060);
  }
  return result;
}

unint64_t sub_252CD17B4()
{
  unint64_t result = qword_269C48070;
  if (!qword_269C48070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48070);
  }
  return result;
}

unint64_t sub_252CD1800()
{
  unint64_t result = qword_269C48080;
  if (!qword_269C48080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48080);
  }
  return result;
}

unint64_t sub_252CD184C()
{
  unint64_t result = qword_269C48090;
  if (!qword_269C48090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48090);
  }
  return result;
}

unint64_t sub_252CD1898()
{
  unint64_t result = qword_269C48098;
  if (!qword_269C48098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48098);
  }
  return result;
}

unint64_t sub_252CD18E4()
{
  unint64_t result = qword_269C480A0;
  if (!qword_269C480A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C480A0);
  }
  return result;
}

unint64_t sub_252CD1930()
{
  unint64_t result = qword_269C480A8;
  if (!qword_269C480A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C480A8);
  }
  return result;
}

unint64_t sub_252CD197C()
{
  unint64_t result = qword_269C480B0;
  if (!qword_269C480B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C480B0);
  }
  return result;
}

unint64_t sub_252CD19C8()
{
  unint64_t result = qword_269C480C0;
  if (!qword_269C480C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C480C0);
  }
  return result;
}

unint64_t sub_252CD1A14()
{
  unint64_t result = qword_269C480D0;
  if (!qword_269C480D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C480D0);
  }
  return result;
}

unint64_t sub_252CD1A60()
{
  unint64_t result = qword_269C48158;
  if (!qword_269C48158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48158);
  }
  return result;
}

unint64_t sub_252CD1AAC()
{
  unint64_t result = qword_269C481A0;
  if (!qword_269C481A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C481A0);
  }
  return result;
}

unint64_t sub_252CD1AF8()
{
  unint64_t result = qword_269C481A8;
  if (!qword_269C481A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C481A8);
  }
  return result;
}

unint64_t sub_252CD1B44()
{
  unint64_t result = qword_269C481D0;
  if (!qword_269C481D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C481D0);
  }
  return result;
}

unint64_t sub_252CD1B90()
{
  unint64_t result = qword_269C481E8;
  if (!qword_269C481E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C481E8);
  }
  return result;
}

unint64_t sub_252CD1BDC()
{
  unint64_t result = qword_269C48200;
  if (!qword_269C48200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48200);
  }
  return result;
}

uint64_t sub_252CD1C28(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252AEA288(&qword_269C48208);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252CD1C98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252AEA288(&qword_269C48218);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_252CD1D00()
{
  unint64_t result = qword_269C48248;
  if (!qword_269C48248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48248);
  }
  return result;
}

unint64_t sub_252CD1D4C()
{
  unint64_t result = qword_269C48260;
  if (!qword_269C48260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48260);
  }
  return result;
}

unint64_t sub_252CD1D98()
{
  unint64_t result = qword_269C48278;
  if (!qword_269C48278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48278);
  }
  return result;
}

unint64_t sub_252CD1DE4()
{
  unint64_t result = qword_269C48290;
  if (!qword_269C48290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48290);
  }
  return result;
}

unint64_t sub_252CD1E30()
{
  unint64_t result = qword_269C482A0;
  if (!qword_269C482A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C482A0);
  }
  return result;
}

unint64_t sub_252CD1E7C()
{
  unint64_t result = qword_269C482B8;
  if (!qword_269C482B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C482B8);
  }
  return result;
}

unint64_t sub_252CD1EC8()
{
  unint64_t result = qword_269C482D0;
  if (!qword_269C482D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C482D0);
  }
  return result;
}

unint64_t sub_252CD1F14()
{
  unint64_t result = qword_269C482E8;
  if (!qword_269C482E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C482E8);
  }
  return result;
}

unint64_t sub_252CD1F60()
{
  unint64_t result = qword_269C48300;
  if (!qword_269C48300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48300);
  }
  return result;
}

unint64_t sub_252CD1FAC()
{
  unint64_t result = qword_269C48318;
  if (!qword_269C48318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48318);
  }
  return result;
}

unint64_t sub_252CD1FF8()
{
  unint64_t result = qword_269C48330;
  if (!qword_269C48330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48330);
  }
  return result;
}

unint64_t sub_252CD2044()
{
  unint64_t result = qword_269C48348;
  if (!qword_269C48348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48348);
  }
  return result;
}

unint64_t sub_252CD2090()
{
  unint64_t result = qword_269C48360;
  if (!qword_269C48360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48360);
  }
  return result;
}

unint64_t sub_252CD20DC()
{
  unint64_t result = qword_269C48378;
  if (!qword_269C48378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48378);
  }
  return result;
}

unint64_t sub_252CD2128()
{
  unint64_t result = qword_269C48390;
  if (!qword_269C48390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48390);
  }
  return result;
}

unint64_t sub_252CD2174()
{
  unint64_t result = qword_269C483A8;
  if (!qword_269C483A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C483A8);
  }
  return result;
}

unint64_t sub_252CD21C0()
{
  unint64_t result = qword_269C483E0;
  if (!qword_269C483E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C483E0);
  }
  return result;
}

unint64_t sub_252CD220C()
{
  unint64_t result = qword_269C483E8;
  if (!qword_269C483E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C483E8);
  }
  return result;
}

unint64_t sub_252CD2258()
{
  unint64_t result = qword_269C483F0;
  if (!qword_269C483F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C483F0);
  }
  return result;
}

unint64_t sub_252CD22A4()
{
  unint64_t result = qword_269C483F8;
  if (!qword_269C483F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C483F8);
  }
  return result;
}

unint64_t sub_252CD22F0()
{
  unint64_t result = qword_269C48400;
  if (!qword_269C48400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48400);
  }
  return result;
}

unint64_t sub_252CD233C()
{
  unint64_t result = qword_269C48438;
  if (!qword_269C48438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48438);
  }
  return result;
}

unint64_t sub_252CD2388()
{
  unint64_t result = qword_269C48440;
  if (!qword_269C48440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48440);
  }
  return result;
}

unint64_t sub_252CD23D4()
{
  unint64_t result = qword_269C48450;
  if (!qword_269C48450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48450);
  }
  return result;
}

unint64_t sub_252CD2420()
{
  unint64_t result = qword_269C48460;
  if (!qword_269C48460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48460);
  }
  return result;
}

unint64_t sub_252CD246C()
{
  unint64_t result = qword_269C48478;
  if (!qword_269C48478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48478);
  }
  return result;
}

unint64_t sub_252CD24B8()
{
  unint64_t result = qword_269C48490;
  if (!qword_269C48490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48490);
  }
  return result;
}

unint64_t sub_252CD2504()
{
  unint64_t result = qword_269C484A8;
  if (!qword_269C484A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C484A8);
  }
  return result;
}

uint64_t sub_252CD2550()
{
  return sub_252CC9184((unint64_t *)&qword_26B231C18, MEMORY[0x263F07508]);
}

uint64_t sub_252CD2598(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484B8, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD25F0(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484C0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2648(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484C8, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD26A0(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484D0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD26F8(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484D8, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2750(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484E0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.Sync);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD27A8(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484E8, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.EnableInjection);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2800(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484F0, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.DisableInjection);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2858(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C484F8, (void (*)(uint64_t))type metadata accessor for SessionClientDebuggerEvent.InjectionResponse);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD28B0(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48500, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2908()
{
  return MEMORY[0x263F8E980];
}

uint64_t sub_252CD2914(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48508, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD296C(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48510, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD29C4(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48518, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.Synced);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2A1C(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48520, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_252CD2A78()
{
  unint64_t result = qword_269C48528;
  if (!qword_269C48528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48528);
  }
  return result;
}

uint64_t sub_252CD2AC4(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48530, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.RequestFailed);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2B1C(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48538, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_252CD2B74(uint64_t a1)
{
  uint64_t result = sub_252CC9184(&qword_269C48540, (void (*)(uint64_t))type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        uint64_t v7 = sub_252D19588();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_14;
      case 2u:
        uint64_t v9 = sub_252D19588();
        uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        uint64_t v11 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(uint64_t *)((char *)a1 + v11[5]) = *(uint64_t *)((char *)a2 + v11[5]);
        *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
        uint64_t v12 = v11[7];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v9))
        {
          uint64_t v15 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          v10((uint64_t *)v13, (uint64_t *)v14, v9);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v9);
        }
        uint64_t v26 = v11[8];
        unint64_t v27 = (uint64_t *)((char *)a1 + v26);
        uint64_t v28 = (uint64_t *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        *unint64_t v27 = *v28;
        v27[1] = v29;
        *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 4u:
        uint64_t v16 = sub_252D19588();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(uint64_t *)((char *)a1 + *(int *)(v17 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v17 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 9u:
        uint64_t v18 = sub_252D19588();
        uint64_t v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        uint64_t v20 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v19((uint64_t *)((char *)a1 + *(int *)(v20 + 20)), (uint64_t *)((char *)a2 + *(int *)(v20 + 20)), v18);
        uint64_t v21 = *(int *)(v20 + 24);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        unint64_t v24 = *((void *)v23 + 1);
        if (v24 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        }
        else
        {
          uint64_t v25 = *(void *)v23;
          sub_252AC5A54(*(void *)v23, *((void *)v23 + 1));
          *(void *)uint64_t v22 = v25;
          *((void *)v22 + 1) = v24;
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent(uint64_t a1)
{
  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 5:
    case 7:
    case 8:
      uint64_t v3 = sub_252D19588();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      uint64_t v5 = sub_252D19588();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(a1, v5);
      uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(v7 + 28);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v5)) {
        v6(v8, v5);
      }
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4:
      uint64_t v9 = sub_252D19588();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 9:
      uint64_t v10 = sub_252D19588();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(a1, v10);
      uint64_t v12 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v11)(a1 + *(int *)(v12 + 20), v10);
      uint64_t v13 = (uint64_t *)(a1 + *(int *)(v12 + 24));
      unint64_t v14 = v13[1];
      if (v14 >> 60 != 15)
      {
        uint64_t v15 = *v13;
        uint64_t result = sub_252AC5C14(v15, v14);
      }
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for SessionClientDebuggerEvent(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      uint64_t v5 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      goto LABEL_12;
    case 2u:
      uint64_t v6 = sub_252D19588();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(void *)&a1[v8[5]] = *(void *)&a2[v8[5]];
      *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6))
      {
        uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      }
      uint64_t v23 = v8[8];
      unint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)unint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      uint64_t v13 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 9u:
      uint64_t v15 = sub_252D19588();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v16(a1, a2, v15);
      uint64_t v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      uint64_t v18 = *(int *)(v17 + 24);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      unint64_t v21 = *((void *)v20 + 1);
      if (v21 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      }
      else
      {
        uint64_t v22 = *(void *)v20;
        sub_252AC5A54(*(void *)v20, *((void *)v20 + 1));
        *(void *)uint64_t v19 = v22;
        *((void *)v19 + 1) = v21;
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for SessionClientDebuggerEvent(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    uint64_t v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        uint64_t v5 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        goto LABEL_13;
      case 2u:
        uint64_t v6 = sub_252D19588();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(void *)&a1[v8[5]] = *(void *)&a2[v8[5]];
        *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
        uint64_t v9 = v8[7];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6))
        {
          uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
        }
        uint64_t v23 = v8[8];
        unint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        *(void *)unint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        uint64_t v13 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 9u:
        uint64_t v15 = sub_252D19588();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        v16(a1, a2, v15);
        uint64_t v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
        uint64_t v18 = *(int *)(v17 + 24);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        unint64_t v21 = *((void *)v20 + 1);
        if (v21 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        }
        else
        {
          uint64_t v22 = *(void *)v20;
          sub_252AC5A54(*(void *)v20, *((void *)v20 + 1));
          *(void *)uint64_t v19 = v22;
          *((void *)v19 + 1) = v21;
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SessionClientDebuggerEvent(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      uint64_t v5 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_10;
    case 2u:
      uint64_t v6 = sub_252D19588();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(void *)&a1[v8[5]] = *(void *)&a2[v8[5]];
      *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v9], 1, v6))
      {
        uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      }
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
      goto LABEL_10;
    case 4u:
      uint64_t v13 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
      goto LABEL_10;
    case 9u:
      uint64_t v15 = sub_252D19588();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(a1, a2, v15);
      uint64_t v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
      *(_OWORD *)&a1[*(int *)(v17 + 24)] = *(_OWORD *)&a2[*(int *)(v17 + 24)];
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SessionClientDebuggerEvent(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    uint64_t v4 = type metadata accessor for SessionClientDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        uint64_t v5 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_11;
      case 2u:
        uint64_t v6 = sub_252D19588();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(void *)&a1[v8[5]] = *(void *)&a2[v8[5]];
        *(void *)&a1[v8[6]] = *(void *)&a2[v8[6]];
        uint64_t v9 = v8[7];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v9], 1, v6))
        {
          uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
        }
        *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
        *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
        goto LABEL_11;
      case 4u:
        uint64_t v13 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
        goto LABEL_11;
      case 9u:
        uint64_t v15 = sub_252D19588();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16(a1, a2, v15);
        uint64_t v17 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v16(&a1[*(int *)(v17 + 20)], &a2[*(int *)(v17 + 20)], v15);
        *(_OWORD *)&a1[*(int *)(v17 + 24)] = *(_OWORD *)&a2[*(int *)(v17 + 24)];
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CD46AC);
}

uint64_t sub_252CD46AC()
{
  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CD4700);
}

uint64_t sub_252CD4700()
{
  type metadata accessor for SessionClientDebuggerEvent.Payload(0);
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252CD4740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CD6D44(a1, a2, a3, type metadata accessor for SessionClientDebuggerEvent.Payload);
}

void *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent(void *a1, void *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for SessionServerDebuggerEvent.Payload(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (void *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        uint64_t v9 = v8[6];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v12);
        }
        uint64_t v52 = v8[7];
        uint64_t v53 = (void *)((char *)a1 + v52);
        uint64_t v54 = (void *)((char *)a2 + v52);
        uint64_t v55 = v54[1];
        void *v53 = *v54;
        v53[1] = v55;
        *(void *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        uint64_t v15 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        uint64_t v16 = *(int *)(v15 + 24);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v19);
        }
        *(void *)((char *)a1 + *(int *)(v15 + 28)) = *(void *)((char *)a2 + *(int *)(v15 + 28));
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v21 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(void *)((char *)a1 + *(int *)(v22 + 20)) = *(void *)((char *)a2 + *(int *)(v22 + 20));
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v23 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((unsigned char *)a1 + *(int *)(v24 + 20)) = *((unsigned char *)a2 + *(int *)(v24 + 20));
        break;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v25 = a2[3];
        a1[2] = a2[2];
        a1[3] = v25;
        uint64_t v26 = a2[5];
        a1[4] = a2[4];
        a1[5] = v26;
        uint64_t v27 = a2[7];
        a1[6] = a2[6];
        a1[7] = v27;
        a1[8] = a2[8];
        uint64_t v28 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        uint64_t v29 = v28[9];
        uint64_t v58 = (char *)a2 + v29;
        uint64_t v59 = (char *)a1 + v29;
        uint64_t v30 = sub_252D19588();
        uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57(v59, v58, v30);
        uint64_t v31 = v28[10];
        uint64_t v32 = (void *)((char *)a1 + v31);
        uint64_t v33 = (void *)((char *)a2 + v31);
        uint64_t v34 = v33[1];
        *uint64_t v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = v28[11];
        uint64_t v36 = (void *)((char *)a1 + v35);
        uint64_t v37 = (void *)((char *)a2 + v35);
        uint64_t v38 = *v37;
        unint64_t v39 = v37[1];
        swift_bridgeObjectRetain();
        sub_252AC5A54(v38, v39);
        *uint64_t v36 = v38;
        v36[1] = v39;
        uint64_t v40 = v28[12];
        uint64_t v41 = (void *)((char *)a1 + v40);
        uint64_t v42 = (void *)((char *)a2 + v40);
        uint64_t v43 = v42[1];
        *uint64_t v41 = *v42;
        v41[1] = v43;
        swift_bridgeObjectRetain();
        break;
      case 0xCu:
        uint64_t v44 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(a1, a2, v44);
        uint64_t v45 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((unsigned char *)a1 + *(int *)(v45 + 20)) = *((unsigned char *)a2 + *(int *)(v45 + 20));
        break;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v46 = a2[3];
        a1[2] = a2[2];
        a1[3] = v46;
        uint64_t v47 = a2[5];
        a1[4] = a2[4];
        a1[5] = v47;
        uint64_t v48 = a2[7];
        a1[6] = a2[6];
        a1[7] = v48;
        uint64_t v49 = a2[9];
        a1[8] = a2[8];
        a1[9] = v49;
        uint64_t v50 = a2[11];
        a1[10] = a2[10];
        unint64_t v51 = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252AC5A54(v50, v51);
        a1[11] = v50;
        a1[12] = v51;
        break;
      default:
        uint64_t v5 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SessionServerDebuggerEvent(uint64_t a1)
{
  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
      uint64_t v3 = sub_252D19588();
      int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
      uint64_t v6 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3:
    case 4:
      goto LABEL_13;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
      uint64_t v8 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
      goto LABEL_13;
    case 6:
      uint64_t v9 = sub_252D19588();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      goto LABEL_13;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      uint64_t v11 = a1 + *(int *)(v10 + 36);
      uint64_t v12 = sub_252D19588();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      sub_252AC5C14(*(void *)(a1 + *(int *)(v10 + 44)), *(void *)(a1 + *(int *)(v10 + 44) + 8));
LABEL_13:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a1 + 88);
      unint64_t v14 = *(void *)(a1 + 96);
      uint64_t result = sub_252AC5C14(v13, v14);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for SessionServerDebuggerEvent(void *a1, void *a2)
{
  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_252D19588();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v50 = v6[7];
      unint64_t v51 = (void *)((char *)a1 + v50);
      uint64_t v52 = (void *)((char *)a2 + v50);
      uint64_t v53 = v52[1];
      *unint64_t v51 = *v52;
      v51[1] = v53;
      *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
      uint64_t v14 = *(int *)(v13 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_252D19588();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
      }
      *(void *)((char *)a1 + *(int *)(v13 + 28)) = *(void *)((char *)a2 + *(int *)(v13 + 28));
      swift_bridgeObjectRetain();
      break;
    case 6u:
      uint64_t v19 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(void *)((char *)a1 + *(int *)(v20 + 20)) = *(void *)((char *)a2 + *(int *)(v20 + 20));
      swift_bridgeObjectRetain();
      break;
    case 9u:
      uint64_t v21 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
      *((unsigned char *)a1 + *(int *)(v22 + 20)) = *((unsigned char *)a2 + *(int *)(v22 + 20));
      break;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v23 = a2[3];
      a1[2] = a2[2];
      a1[3] = v23;
      uint64_t v24 = a2[5];
      a1[4] = a2[4];
      a1[5] = v24;
      uint64_t v25 = a2[7];
      a1[6] = a2[6];
      a1[7] = v25;
      a1[8] = a2[8];
      uint64_t v26 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      uint64_t v27 = v26[9];
      uint64_t v56 = (char *)a2 + v27;
      uint64_t v57 = (char *)a1 + v27;
      uint64_t v28 = sub_252D19588();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v57, v56, v28);
      uint64_t v29 = v26[10];
      uint64_t v30 = (void *)((char *)a1 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      void *v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v26[11];
      uint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      uint64_t v36 = *v35;
      unint64_t v37 = v35[1];
      swift_bridgeObjectRetain();
      sub_252AC5A54(v36, v37);
      uint64_t *v34 = v36;
      v34[1] = v37;
      uint64_t v38 = v26[12];
      unint64_t v39 = (void *)((char *)a1 + v38);
      uint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      void *v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRetain();
      break;
    case 0xCu:
      uint64_t v42 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
      uint64_t v43 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
      *((unsigned char *)a1 + *(int *)(v43 + 20)) = *((unsigned char *)a2 + *(int *)(v43 + 20));
      break;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v44 = a2[3];
      a1[2] = a2[2];
      a1[3] = v44;
      uint64_t v45 = a2[5];
      a1[4] = a2[4];
      a1[5] = v45;
      uint64_t v46 = a2[7];
      a1[6] = a2[6];
      a1[7] = v46;
      uint64_t v47 = a2[9];
      a1[8] = a2[8];
      a1[9] = v47;
      uint64_t v48 = a2[11];
      a1[10] = a2[10];
      unint64_t v49 = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252AC5A54(v48, v49);
      a1[11] = v48;
      a1[12] = v49;
      break;
    default:
      uint64_t v4 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SessionServerDebuggerEvent(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    type metadata accessor for SessionServerDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v5 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        uint64_t v6 = v5[6];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
        {
          uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
        }
        uint64_t v39 = v5[7];
        uint64_t v40 = (void *)((char *)a1 + v39);
        uint64_t v41 = (void *)((char *)a2 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v11 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        uint64_t v12 = *(int *)(v11 + 24);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v15);
        }
        *(void *)((char *)a1 + *(int *)(v11 + 28)) = *(void *)((char *)a2 + *(int *)(v11 + 28));
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v17 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(void *)((char *)a1 + *(int *)(v18 + 20)) = *(void *)((char *)a2 + *(int *)(v18 + 20));
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v19 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        break;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v21 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        uint64_t v22 = v21[9];
        uint64_t v44 = (char *)a2 + v22;
        uint64_t v45 = (char *)a1 + v22;
        uint64_t v23 = sub_252D19588();
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v45, v44, v23);
        uint64_t v24 = v21[10];
        uint64_t v25 = (void *)((char *)a1 + v24);
        uint64_t v26 = (void *)((char *)a2 + v24);
        void *v25 = *v26;
        v25[1] = v26[1];
        uint64_t v27 = v21[11];
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (void *)((char *)a2 + v27);
        uint64_t v30 = *v29;
        unint64_t v31 = v29[1];
        swift_bridgeObjectRetain();
        sub_252AC5A54(v30, v31);
        *uint64_t v28 = v30;
        v28[1] = v31;
        uint64_t v32 = v21[12];
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (void *)((char *)a2 + v32);
        void *v33 = *v34;
        v33[1] = v34[1];
        swift_bridgeObjectRetain();
        break;
      case 0xCu:
        uint64_t v35 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        uint64_t v36 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((unsigned char *)a1 + *(int *)(v36 + 20)) = *((unsigned char *)a2 + *(int *)(v36 + 20));
        break;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        uint64_t v38 = a2[11];
        unint64_t v37 = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252AC5A54(v38, v37);
        a1[11] = v38;
        a1[12] = v37;
        break;
      default:
        uint64_t v4 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 7u:
    case 8u:
    case 0xAu:
      uint64_t v5 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_16;
    case 1u:
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      }
      *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
      *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
      goto LABEL_16;
    case 5u:
      *a1 = *a2;
      uint64_t v12 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
      }
      *(void *)((char *)a1 + *(int *)(v12 + 28)) = *(void *)((char *)a2 + *(int *)(v12 + 28));
      goto LABEL_16;
    case 6u:
      uint64_t v18 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      uint64_t v19 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(void *)((char *)a1 + *(int *)(v19 + 20)) = *(void *)((char *)a2 + *(int *)(v19 + 20));
      goto LABEL_16;
    case 9u:
      uint64_t v20 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      uint64_t v21 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
      *((unsigned char *)a1 + *(int *)(v21 + 20)) = *((unsigned char *)a2 + *(int *)(v21 + 20));
      goto LABEL_16;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      uint64_t v22 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      uint64_t v23 = v22[9];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)((char *)a1 + v22[10]) = *(_OWORD *)((char *)a2 + v22[10]);
      *(_OWORD *)((char *)a1 + v22[11]) = *(_OWORD *)((char *)a2 + v22[11]);
      *(_OWORD *)((char *)a1 + v22[12]) = *(_OWORD *)((char *)a2 + v22[12]);
      goto LABEL_16;
    case 0xCu:
      uint64_t v27 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
      uint64_t v28 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
      *((unsigned char *)a1 + *(int *)(v28 + 20)) = *((unsigned char *)a2 + *(int *)(v28 + 20));
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for SessionServerDebuggerEvent(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    uint64_t v4 = type metadata accessor for SessionServerDebuggerEvent.Payload(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0xAu:
        uint64_t v5 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_17;
      case 1u:
        *a1 = *a2;
        uint64_t v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        uint64_t v7 = v6[6];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
        {
          uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
        }
        *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
        *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
        goto LABEL_17;
      case 5u:
        *a1 = *a2;
        uint64_t v12 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        uint64_t v13 = *(int *)(v12 + 24);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
        }
        *(void *)((char *)a1 + *(int *)(v12 + 28)) = *(void *)((char *)a2 + *(int *)(v12 + 28));
        goto LABEL_17;
      case 6u:
        uint64_t v18 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        uint64_t v19 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(void *)((char *)a1 + *(int *)(v19 + 20)) = *(void *)((char *)a2 + *(int *)(v19 + 20));
        goto LABEL_17;
      case 9u:
        uint64_t v20 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        uint64_t v21 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((unsigned char *)a1 + *(int *)(v21 + 20)) = *((unsigned char *)a2 + *(int *)(v21 + 20));
        goto LABEL_17;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        uint64_t v22 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        uint64_t v23 = v22[9];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)((char *)a1 + v22[10]) = *(_OWORD *)((char *)a2 + v22[10]);
        *(_OWORD *)((char *)a1 + v22[11]) = *(_OWORD *)((char *)a2 + v22[11]);
        *(_OWORD *)((char *)a1 + v22[12]) = *(_OWORD *)((char *)a2 + v22[12]);
        goto LABEL_17;
      case 0xCu:
        uint64_t v27 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        uint64_t v28 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((unsigned char *)a1 + *(int *)(v28 + 20)) = *((unsigned char *)a2 + *(int *)(v28 + 20));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CD6C98);
}

uint64_t sub_252CD6C98()
{
  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CD6CEC);
}

uint64_t sub_252CD6CEC()
{
  type metadata accessor for SessionServerDebuggerEvent.Payload(0);
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252CD6D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CD6D44(a1, a2, a3, type metadata accessor for SessionServerDebuggerEvent.Payload);
}

uint64_t sub_252CD6D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent.Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        uint64_t v7 = sub_252D19588();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_14;
      case 2u:
        uint64_t v9 = sub_252D19588();
        uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        uint64_t v11 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(uint64_t *)((char *)a1 + v11[5]) = *(uint64_t *)((char *)a2 + v11[5]);
        *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
        uint64_t v12 = v11[7];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v9))
        {
          uint64_t v15 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          v10((uint64_t *)v13, (uint64_t *)v14, v9);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v9);
        }
        uint64_t v26 = v11[8];
        uint64_t v27 = (uint64_t *)((char *)a1 + v26);
        uint64_t v28 = (uint64_t *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v29;
        *(uint64_t *)((char *)a1 + v11[9]) = *(uint64_t *)((char *)a2 + v11[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 4u:
        uint64_t v16 = sub_252D19588();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(uint64_t *)((char *)a1 + *(int *)(v17 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v17 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 9u:
        uint64_t v18 = sub_252D19588();
        uint64_t v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        uint64_t v20 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v19((uint64_t *)((char *)a1 + *(int *)(v20 + 20)), (uint64_t *)((char *)a2 + *(int *)(v20 + 20)), v18);
        uint64_t v21 = *(int *)(v20 + 24);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        unint64_t v24 = *((void *)v23 + 1);
        if (v24 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        }
        else
        {
          uint64_t v25 = *(void *)v23;
          sub_252AC5A54(*(void *)v23, *((void *)v23 + 1));
          *(void *)uint64_t v22 = v25;
          *((void *)v22 + 1) = v24;
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent.Payload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
    case 5:
    case 7:
    case 8:
      uint64_t v3 = sub_252D19588();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      uint64_t v5 = sub_252D19588();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(a1, v5);
      uint64_t v7 = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(v7 + 28);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v5)) {
        v6(v8, v5);
      }
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4:
      uint64_t v9 = sub_252D19588();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 9:
      uint64_t v10 = sub_252D19588();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(a1, v10);
      uint64_t v12 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v11)(a1 + *(int *)(v12 + 20), v10);
      uint64_t v13 = (uint64_t *)(a1 + *(int *)(v12 + 24));
      unint64_t v14 = v13[1];
      if (v14 >> 60 != 15)
      {
        uint64_t v15 = *v13;
        uint64_t result = sub_252AC5C14(v15, v14);
      }
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      uint64_t v6 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_12;
    case 2u:
      uint64_t v7 = sub_252D19588();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
      *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
      uint64_t v10 = v9[7];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7))
      {
        uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
      }
      uint64_t v24 = v9[8];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      uint64_t v14 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 9u:
      uint64_t v16 = sub_252D19588();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(a1, a2, v16);
      uint64_t v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
      uint64_t v19 = *(int *)(v18 + 24);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      unint64_t v22 = *((void *)v21 + 1);
      if (v22 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      }
      else
      {
        uint64_t v23 = *(void *)v21;
        sub_252AC5A54(*(void *)v21, *((void *)v21 + 1));
        *(void *)uint64_t v20 = v23;
        *((void *)v20 + 1) = v22;
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        uint64_t v6 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_13;
      case 2u:
        uint64_t v7 = sub_252D19588();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        uint64_t v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
        *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
        uint64_t v10 = v9[7];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7))
        {
          uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          v8(v11, v12, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
        }
        uint64_t v24 = v9[8];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = *((void *)v26 + 1);
        *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        uint64_t v14 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 9u:
        uint64_t v16 = sub_252D19588();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        v17(a1, a2, v16);
        uint64_t v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
        uint64_t v19 = *(int *)(v18 + 24);
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        unint64_t v22 = *((void *)v21 + 1);
        if (v22 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        }
        else
        {
          uint64_t v23 = *(void *)v21;
          sub_252AC5A54(*(void *)v21, *((void *)v21 + 1));
          *(void *)uint64_t v20 = v23;
          *((void *)v20 + 1) = v22;
        }
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
    case 5u:
    case 7u:
    case 8u:
      uint64_t v6 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_10;
    case 2u:
      uint64_t v7 = sub_252D19588();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
      *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
      *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
      uint64_t v10 = v9[7];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v10], 1, v7))
      {
        uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v7);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
      }
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
      goto LABEL_10;
    case 4u:
      uint64_t v14 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
      *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
      goto LABEL_10;
    case 9u:
      uint64_t v16 = sub_252D19588();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v17(a1, a2, v16);
      uint64_t v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
      v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
      *(_OWORD *)&a1[*(int *)(v18 + 24)] = *(_OWORD *)&a2[*(int *)(v18 + 24)];
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SessionClientDebuggerEvent.Payload(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
      case 5u:
      case 7u:
      case 8u:
        uint64_t v6 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_11;
      case 2u:
        uint64_t v7 = sub_252D19588();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        uint64_t v9 = (int *)type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
        *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
        *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
        uint64_t v10 = v9[7];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v10], 1, v7))
        {
          uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          v8(v11, v12, v7);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
        }
        *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
        *(void *)&a1[v9[9]] = *(void *)&a2[v9[9]];
        goto LABEL_11;
      case 4u:
        uint64_t v14 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(0);
        *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
        goto LABEL_11;
      case 9u:
        uint64_t v16 = sub_252D19588();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
        v17(a1, a2, v16);
        uint64_t v18 = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(0);
        v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v16);
        *(_OWORD *)&a1[*(int *)(v18 + 24)] = *(_OWORD *)&a2[*(int *)(v18 + 24)];
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_252CD8868()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for SessionClientDebuggerEvent.InjectionResponse(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.Payload(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (void *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        uint64_t v10 = v9[6];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v53 = v9[7];
        uint64_t v54 = (void *)((char *)a1 + v53);
        uint64_t v55 = (void *)((char *)a2 + v53);
        uint64_t v56 = v55[1];
        void *v54 = *v55;
        v54[1] = v56;
        *(void *)((char *)a1 + v9[8]) = *(void *)((char *)a2 + v9[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        uint64_t v16 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        uint64_t v17 = *(int *)(v16 + 24);
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v18, 0, 1, v20);
        }
        *(void *)((char *)a1 + *(int *)(v16 + 28)) = *(void *)((char *)a2 + *(int *)(v16 + 28));
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v22 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(void *)((char *)a1 + *(int *)(v23 + 20)) = *(void *)((char *)a2 + *(int *)(v23 + 20));
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v24 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((unsigned char *)a1 + *(int *)(v25 + 20)) = *((unsigned char *)a2 + *(int *)(v25 + 20));
        break;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v26 = a2[3];
        a1[2] = a2[2];
        a1[3] = v26;
        uint64_t v27 = a2[5];
        a1[4] = a2[4];
        a1[5] = v27;
        uint64_t v28 = a2[7];
        a1[6] = a2[6];
        a1[7] = v28;
        a1[8] = a2[8];
        uint64_t v29 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        uint64_t v30 = v29[9];
        uint64_t v59 = (char *)a2 + v30;
        uint64_t v60 = (char *)a1 + v30;
        uint64_t v31 = sub_252D19588();
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v58(v60, v59, v31);
        uint64_t v32 = v29[10];
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (void *)((char *)a2 + v32);
        uint64_t v35 = v34[1];
        void *v33 = *v34;
        v33[1] = v35;
        uint64_t v36 = v29[11];
        unint64_t v37 = (void *)((char *)a1 + v36);
        uint64_t v38 = (void *)((char *)a2 + v36);
        uint64_t v39 = *v38;
        unint64_t v40 = v38[1];
        swift_bridgeObjectRetain();
        sub_252AC5A54(v39, v40);
        *unint64_t v37 = v39;
        v37[1] = v40;
        uint64_t v41 = v29[12];
        uint64_t v42 = (void *)((char *)a1 + v41);
        uint64_t v43 = (void *)((char *)a2 + v41);
        uint64_t v44 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v44;
        swift_bridgeObjectRetain();
        break;
      case 0xCu:
        uint64_t v45 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
        uint64_t v46 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((unsigned char *)a1 + *(int *)(v46 + 20)) = *((unsigned char *)a2 + *(int *)(v46 + 20));
        break;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v47 = a2[3];
        a1[2] = a2[2];
        a1[3] = v47;
        uint64_t v48 = a2[5];
        a1[4] = a2[4];
        a1[5] = v48;
        uint64_t v49 = a2[7];
        a1[6] = a2[6];
        a1[7] = v49;
        uint64_t v50 = a2[9];
        a1[8] = a2[8];
        a1[9] = v50;
        uint64_t v51 = a2[11];
        a1[10] = a2[10];
        unint64_t v52 = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252AC5A54(v51, v52);
        a1[11] = v51;
        a1[12] = v52;
        break;
      default:
        uint64_t v6 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SessionServerDebuggerEvent.Payload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
      uint64_t v3 = sub_252D19588();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0) + 24);
      uint64_t v6 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3:
    case 4:
      goto LABEL_13;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0) + 24);
      uint64_t v8 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
      goto LABEL_13;
    case 6:
      uint64_t v9 = sub_252D19588();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      goto LABEL_13;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      uint64_t v11 = a1 + *(int *)(v10 + 36);
      uint64_t v12 = sub_252D19588();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      sub_252AC5C14(*(void *)(a1 + *(int *)(v10 + 44)), *(void *)(a1 + *(int *)(v10 + 44) + 8));
LABEL_13:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a1 + 88);
      unint64_t v14 = *(void *)(a1 + 96);
      uint64_t result = sub_252AC5C14(v13, v14);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for SessionServerDebuggerEvent.Payload(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_252D19588();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v50 = v6[7];
      uint64_t v51 = (void *)((char *)a1 + v50);
      unint64_t v52 = (void *)((char *)a2 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
      uint64_t v14 = *(int *)(v13 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_252D19588();
      swift_bridgeObjectRetain();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
      }
      *(void *)((char *)a1 + *(int *)(v13 + 28)) = *(void *)((char *)a2 + *(int *)(v13 + 28));
      swift_bridgeObjectRetain();
      break;
    case 6u:
      uint64_t v19 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(void *)((char *)a1 + *(int *)(v20 + 20)) = *(void *)((char *)a2 + *(int *)(v20 + 20));
      swift_bridgeObjectRetain();
      break;
    case 9u:
      uint64_t v21 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
      *((unsigned char *)a1 + *(int *)(v22 + 20)) = *((unsigned char *)a2 + *(int *)(v22 + 20));
      break;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v23 = a2[3];
      a1[2] = a2[2];
      a1[3] = v23;
      uint64_t v24 = a2[5];
      a1[4] = a2[4];
      a1[5] = v24;
      uint64_t v25 = a2[7];
      a1[6] = a2[6];
      a1[7] = v25;
      a1[8] = a2[8];
      uint64_t v26 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      uint64_t v27 = v26[9];
      uint64_t v56 = (char *)a2 + v27;
      uint64_t v57 = (char *)a1 + v27;
      uint64_t v28 = sub_252D19588();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v57, v56, v28);
      uint64_t v29 = v26[10];
      uint64_t v30 = (void *)((char *)a1 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      uint64_t v32 = v31[1];
      void *v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v26[11];
      uint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      uint64_t v36 = *v35;
      unint64_t v37 = v35[1];
      swift_bridgeObjectRetain();
      sub_252AC5A54(v36, v37);
      uint64_t *v34 = v36;
      v34[1] = v37;
      uint64_t v38 = v26[12];
      uint64_t v39 = (void *)((char *)a1 + v38);
      unint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      void *v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRetain();
      break;
    case 0xCu:
      uint64_t v42 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
      uint64_t v43 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
      *((unsigned char *)a1 + *(int *)(v43 + 20)) = *((unsigned char *)a2 + *(int *)(v43 + 20));
      break;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v44 = a2[3];
      a1[2] = a2[2];
      a1[3] = v44;
      uint64_t v45 = a2[5];
      a1[4] = a2[4];
      a1[5] = v45;
      uint64_t v46 = a2[7];
      a1[6] = a2[6];
      a1[7] = v46;
      uint64_t v47 = a2[9];
      a1[8] = a2[8];
      a1[9] = v47;
      uint64_t v48 = a2[11];
      a1[10] = a2[10];
      unint64_t v49 = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252AC5A54(v48, v49);
      a1[11] = v48;
      a1[12] = v49;
      break;
    default:
      uint64_t v4 = sub_252D19588();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SessionServerDebuggerEvent.Payload(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v5 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        uint64_t v6 = v5[6];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
        {
          uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
        }
        uint64_t v39 = v5[7];
        unint64_t v40 = (void *)((char *)a1 + v39);
        uint64_t v41 = (void *)((char *)a2 + v39);
        *unint64_t v40 = *v41;
        v40[1] = v41[1];
        *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v11 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        uint64_t v12 = *(int *)(v11 + 24);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_252D19588();
        swift_bridgeObjectRetain();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v15);
        }
        *(void *)((char *)a1 + *(int *)(v11 + 28)) = *(void *)((char *)a2 + *(int *)(v11 + 28));
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v17 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(void *)((char *)a1 + *(int *)(v18 + 20)) = *(void *)((char *)a2 + *(int *)(v18 + 20));
        swift_bridgeObjectRetain();
        break;
      case 9u:
        uint64_t v19 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        break;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v21 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        uint64_t v22 = v21[9];
        uint64_t v44 = (char *)a2 + v22;
        uint64_t v45 = (char *)a1 + v22;
        uint64_t v23 = sub_252D19588();
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v45, v44, v23);
        uint64_t v24 = v21[10];
        uint64_t v25 = (void *)((char *)a1 + v24);
        uint64_t v26 = (void *)((char *)a2 + v24);
        void *v25 = *v26;
        v25[1] = v26[1];
        uint64_t v27 = v21[11];
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (void *)((char *)a2 + v27);
        uint64_t v30 = *v29;
        unint64_t v31 = v29[1];
        swift_bridgeObjectRetain();
        sub_252AC5A54(v30, v31);
        *uint64_t v28 = v30;
        v28[1] = v31;
        uint64_t v32 = v21[12];
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (void *)((char *)a2 + v32);
        void *v33 = *v34;
        v33[1] = v34[1];
        swift_bridgeObjectRetain();
        break;
      case 0xCu:
        uint64_t v35 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        uint64_t v36 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((unsigned char *)a1 + *(int *)(v36 + 20)) = *((unsigned char *)a2 + *(int *)(v36 + 20));
        break;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        uint64_t v38 = a2[11];
        unint64_t v37 = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252AC5A54(v38, v37);
        a1[11] = v38;
        a1[12] = v37;
        break;
      default:
        uint64_t v4 = sub_252D19588();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent.Payload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 7u:
    case 8u:
    case 0xAu:
      uint64_t v6 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_16;
    case 1u:
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
      goto LABEL_16;
    case 5u:
      *a1 = *a2;
      uint64_t v13 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
      uint64_t v14 = *(int *)(v13 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
      }
      *(void *)((char *)a1 + *(int *)(v13 + 28)) = *(void *)((char *)a2 + *(int *)(v13 + 28));
      goto LABEL_16;
    case 6u:
      uint64_t v19 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
      *(void *)((char *)a1 + *(int *)(v20 + 20)) = *(void *)((char *)a2 + *(int *)(v20 + 20));
      goto LABEL_16;
    case 9u:
      uint64_t v21 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
      *((unsigned char *)a1 + *(int *)(v22 + 20)) = *((unsigned char *)a2 + *(int *)(v22 + 20));
      goto LABEL_16;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      uint64_t v23 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
      uint64_t v24 = v23[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_252D19588();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)((char *)a1 + v23[10]) = *(_OWORD *)((char *)a2 + v23[10]);
      *(_OWORD *)((char *)a1 + v23[11]) = *(_OWORD *)((char *)a2 + v23[11]);
      *(_OWORD *)((char *)a1 + v23[12]) = *(_OWORD *)((char *)a2 + v23[12]);
      goto LABEL_16;
    case 0xCu:
      uint64_t v28 = sub_252D19588();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
      uint64_t v29 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
      *((unsigned char *)a1 + *(int *)(v29 + 20)) = *((unsigned char *)a2 + *(int *)(v29 + 20));
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for SessionServerDebuggerEvent.Payload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252CC6D8C();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0xAu:
        uint64_t v6 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_17;
      case 1u:
        *a1 = *a2;
        uint64_t v7 = (int *)type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
        uint64_t v8 = v7[6];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
        {
          uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
        *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
        goto LABEL_17;
      case 5u:
        *a1 = *a2;
        uint64_t v13 = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(0);
        uint64_t v14 = *(int *)(v13 + 24);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
        }
        *(void *)((char *)a1 + *(int *)(v13 + 28)) = *(void *)((char *)a2 + *(int *)(v13 + 28));
        goto LABEL_17;
      case 6u:
        uint64_t v19 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(0);
        *(void *)((char *)a1 + *(int *)(v20 + 20)) = *(void *)((char *)a2 + *(int *)(v20 + 20));
        goto LABEL_17;
      case 9u:
        uint64_t v21 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(0);
        *((unsigned char *)a1 + *(int *)(v22 + 20)) = *((unsigned char *)a2 + *(int *)(v22 + 20));
        goto LABEL_17;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        uint64_t v23 = (int *)type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
        uint64_t v24 = v23[9];
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_252D19588();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        *(_OWORD *)((char *)a1 + v23[10]) = *(_OWORD *)((char *)a2 + v23[10]);
        *(_OWORD *)((char *)a1 + v23[11]) = *(_OWORD *)((char *)a2 + v23[11]);
        *(_OWORD *)((char *)a1 + v23[12]) = *(_OWORD *)((char *)a2 + v23[12]);
        goto LABEL_17;
      case 0xCu:
        uint64_t v28 = sub_252D19588();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
        uint64_t v29 = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
        *((unsigned char *)a1 + *(int *)(v29 + 20)) = *((unsigned char *)a2 + *(int *)(v29 + 20));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_252CDAEAC()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for SessionServerDebuggerEvent.RequestFailed(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(319);
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.EnableDeferredTransactions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDB0E0);
}

uint64_t sub_252CDB0E0()
{
  sub_252AF44D4();
  uint64_t v0 = sub_252B4C32C();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.EnableDeferredTransactions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDB128);
}

uint64_t sub_252CDB128()
{
  sub_252AF44D4();
  uint64_t v0 = sub_252AF4744();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_252CDB15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CD6D44(a1, a2, a3, MEMORY[0x263F07508]);
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.DisableDeferredTransactions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30DC);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.DisableDeferredTransactions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30B4);
}

char *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = a3[6];
    *(void *)&a1[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    *(void *)&a1[v9] = *(uint64_t *)((char *)a2 + v9);
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v12, 1, v7))
    {
      uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 0, 1, v7);
    }
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = &a1[v15];
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *(void *)uint64_t v17 = *v18;
    *((void *)v17 + 1) = v19;
    *(void *)&a1[v16] = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent.PostDeferredTransaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19588();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6))
  {
    uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v10, v11, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

char *assignWithTake for SessionClientDebuggerEvent.PostDeferredTransaction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.PostDeferredTransaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDBA48);
}

uint64_t sub_252CDBA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252AF44D4();
  sub_252B4C01C();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_252B4C1B8(*(void *)(v4 + *(int *)(a3 + 20)));
    }
    uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
    uint64_t v9 = v4 + *(int *)(a3 + 28);
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, v3, v8);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.PostDeferredTransaction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDBAFC);
}

void sub_252CDBAFC()
{
  sub_252CE3358();
  sub_252B4C01C();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
      return;
    }
    uint64_t v6 = sub_252AC3A24(&qword_26B2320E8);
    uint64_t v7 = v1 + *(int *)(v2 + 28);
  }

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v7, v0, v0, v6);
}

void sub_252CDBB9C()
{
  sub_252D19588();
  if (v0 <= 0x3F)
  {
    sub_252CDBC8C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_252CDBC8C()
{
  if (!qword_26B2320F0)
  {
    sub_252D19588();
    unint64_t v0 = sub_252D1A178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2320F0);
    }
  }
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.RequestCurrentTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30E0);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.RequestCurrentTranscript(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30B8);
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.ReplaceCurrentTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDBD38);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.ReplaceCurrentTranscript(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDBD50);
}

uint64_t sub_252CDBD54()
{
  return sub_252CDEBA0();
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.Sync(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30E4);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.Sync(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30BC);
}

void type metadata accessor for SessionClientDebuggerEvent.TerminateSession()
{
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.EnableInjection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30E8);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.EnableInjection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30C0);
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.DisableInjection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30EC);
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.DisableInjection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30C4);
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionClientDebuggerEvent.InjectionResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    unint64_t v12 = *((void *)v11 + 1);
    if (v12 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v14 = *(void *)v11;
      sub_252AC5A54(*(void *)v11, *((void *)v11 + 1));
      *(void *)uint64_t v10 = v14;
      *((void *)v10 + 1) = v12;
    }
  }
  return a1;
}

uint64_t destroy for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19588();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(a2 + 20), v4);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15)
  {
    uint64_t v9 = *v7;
    return sub_252AC5C14(v9, v8);
  }
  return result;
}

uint64_t initializeWithCopy for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t *)(a2 + v8);
  unint64_t v11 = v10[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v12 = *v10;
    sub_252AC5A54(*v10, v10[1]);
    *(void *)uint64_t v9 = v12;
    *(void *)(v9 + 8) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  unint64_t v11 = *(void *)(a2 + v8 + 8);
  if (*(void *)(a1 + v8 + 8) >> 60 != 15)
  {
    if (v11 >> 60 != 15)
    {
      uint64_t v13 = *v10;
      sub_252AC5A54(v13, v11);
      uint64_t v14 = *v9;
      unint64_t v15 = v9[1];
      uint64_t *v9 = v13;
      v9[1] = v11;
      sub_252AC5C14(v14, v15);
      return a1;
    }
    sub_252B5AA44((uint64_t)v9);
    goto LABEL_6;
  }
  if (v11 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    return a1;
  }
  uint64_t v12 = *v10;
  sub_252AC5A54(v12, v11);
  uint64_t *v9 = v12;
  v9[1] = v11;
  return a1;
}

uint64_t initializeWithTake for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  unint64_t v11 = *(void *)(a1 + v8 + 8);
  if (v11 >> 60 != 15)
  {
    unint64_t v12 = v10[1];
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *v9;
      uint64_t *v9 = *v10;
      v9[1] = v12;
      sub_252AC5C14(v13, v11);
      return a1;
    }
    sub_252B5AA44((uint64_t)v9);
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDC360);
}

uint64_t sub_252CDC360()
{
  sub_252CBAC24();
  sub_252B4C01C();
  if (*(_DWORD *)(v3 + 84) == v1)
  {
    uint64_t v4 = sub_252CB9030();
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + *(int *)(v2 + 24) + 8) >> 60;
    BOOL v9 = ((4 * v8) & 0xC) == 0;
    unsigned int v10 = ((4 * v8) & 0xC | (v8 >> 2)) ^ 0xF;
    if (v9) {
      return 0;
    }
    else {
      return v10;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SessionClientDebuggerEvent.InjectionResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDC3F8);
}

void sub_252CDC3F8()
{
  sub_252CE3358();
  sub_252B4C01C();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
  }
  else
  {
    BOOL v9 = (void *)(v1 + *(int *)(v2 + 24));
    void *v9 = 0;
    v9[1] = (unint64_t)((~v0 >> 2) & 3 | (4 * ~v0)) << 60;
  }
}

uint64_t sub_252CDC474()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionStateChanged(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30F0);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionStateChanged(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30C8);
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    BOOL v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_252D19588();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    unint64_t v15 = (uint64_t *)((char *)v7 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)v7 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionServerDebuggerEvent.DeferredTransactionReady(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  BOOL v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19588();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v12);
  unint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionServerDebuggerEvent.DeferredTransactionReady(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  unint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent.DeferredTransactionReady(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  return a1;
}

void *assignWithTake for SessionServerDebuggerEvent.DeferredTransactionReady(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  unint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  void *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDCD0C);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDCD24);
}

void sub_252CDCD28()
{
  sub_252CDBC8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30F4);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionPostAccepted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30CC);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.SpanStarted(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for SessionServerDebuggerEvent.SpanStarted(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SessionServerDebuggerEvent.SpanStarted()
{
}

void *_s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_252CDCF1C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SessionServerDebuggerEvent.SpanEnded()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_252D19588();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_252D19588();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionServerDebuggerEvent.FinalTransactionPosted(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19588();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionServerDebuggerEvent.FinalTransactionPosted(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SessionServerDebuggerEvent.FinalTransactionPosted(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for SessionServerDebuggerEvent.FinalTransactionPosted(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDD6B0);
}

uint64_t sub_252CDD6B4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_252B4C1B8(*a1);
  }
  uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 24);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.FinalTransactionPosted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDD748);
}

void sub_252CDD74C()
{
  sub_252B4C1A4();
  if (v3)
  {
    *unint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_252AC3A24(&qword_26B2320E8);
    uint64_t v6 = (uint64_t)v1 + *(int *)(v4 + 24);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, v0, v0, v5);
  }
}

void sub_252CDD7C4()
{
  sub_252CDBC8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwCP_0(uint64_t a1, uint64_t a2)
{
  sub_252B4C01C();
  if ((*(_DWORD *)(v5 + 80) & 0x20000) != 0)
  {
    sub_252CE36D4();
  }
  else
  {
    uint64_t v6 = v4;
    sub_252D19588();
    sub_252AEA304();
    sub_252CE352C();
    v7();
    *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwxx_0()
{
  sub_252CE33C4();
  sub_252AEA304();
  sub_252B5F53C();
  v0();

  return swift_bridgeObjectRelease();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwcp_0()
{
  sub_252CE338C();
  sub_252AEA304();
  sub_252CE352C();
  v3();
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwca_0()
{
  sub_252CE338C();
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v2, v1);
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwtk_0()
{
  sub_252CE338C();
  sub_252AEA304();
  sub_252B4C1CC();
  v3();
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV17CurrentTranscriptVwta_0()
{
  sub_252CE338C();
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v2, v1);
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.CurrentTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDDB08);
}

uint64_t sub_252CDDB0C()
{
  sub_252CBAC24();
  sub_252B4C01C();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return sub_252B4C1B8(*(void *)(v0 + *(int *)(v2 + 20)));
  }
  uint64_t v4 = sub_252CB9030();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.CurrentTranscript(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDDB8C);
}

void sub_252CDDB90()
{
  sub_252CE3358();
  sub_252B4C01C();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.Synced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30F8);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.Synced(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30D0);
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.TranscriptReplacementAccepted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE30FC);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.TranscriptReplacementAccepted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30D4);
}

uint64_t assignWithCopy for SessionServerDebuggerEvent.RequestFailed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SessionServerDebuggerEvent.RequestFailed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.RequestFailed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDDD64);
}

uint64_t sub_252CDDD64()
{
  sub_252CBAC24();
  sub_252B4C01C();
  if (*(_DWORD *)(v3 + 84) == v1)
  {
    uint64_t v4 = sub_252CB9030();
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
    if (v8 >= 4) {
      return v8 - 3;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.RequestFailed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDDDEC);
}

void sub_252CDDDEC()
{
  sub_252CE3358();
  sub_252B4C01C();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 3;
  }
}

uint64_t sub_252CDDE58()
{
  return sub_252CDEBA0();
}

void type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason()
{
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwCP_0()
{
  sub_252CE33C4();
  sub_252AEA304();
  uint64_t v0 = sub_252B4C32C();

  return v1(v0);
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwcp_0()
{
  sub_252CE33C4();
  sub_252AEA304();
  uint64_t v1 = sub_252AF4538();
  v2(v1);
  return v0;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwca_0()
{
  sub_252CE33C4();
  sub_252AEA304();
  uint64_t v1 = sub_252AF4538();
  v2(v1);
  return v0;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwtk_0()
{
  sub_252CE33C4();
  sub_252AEA304();
  sub_252B4C1CC();
  v1();
  return v0;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwta_0()
{
  sub_252CE33C4();
  sub_252AEA304();
  uint64_t v1 = sub_252AF4538();
  v2(v1);
  return v0;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionStateChanged(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CE3100);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionStateChanged(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CE30D8);
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionServerDebuggerEvent.InjectionRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a3[9];
    uint64_t v27 = (char *)a2 + v10;
    uint64_t v28 = (char *)a1 + v10;
    a1[8] = a2[8];
    uint64_t v11 = sub_252D19588();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v28, v27, v11);
    uint64_t v13 = a3[10];
    uint64_t v14 = a3[11];
    unint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v14);
    uint64_t v19 = *(uint64_t *)((char *)a2 + v14);
    unint64_t v20 = *(uint64_t *)((char *)a2 + v14 + 8);
    swift_bridgeObjectRetain();
    sub_252AC5A54(v19, v20);
    *uint64_t v18 = v19;
    v18[1] = v20;
    uint64_t v21 = a3[12];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_252AC5C14(*(void *)(a1 + *(int *)(a2 + 44)), *(void *)(a1 + *(int *)(a2 + 44) + 8));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a3[9];
  uint64_t v25 = a2 + v9;
  uint64_t v26 = a1 + v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v10 = sub_252D19588();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v26, v25, v10);
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v12);
  unint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (uint64_t *)(a1 + v13);
  uint64_t v18 = *(void *)(a2 + v13);
  unint64_t v19 = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  sub_252AC5A54(v18, v19);
  *uint64_t v17 = v18;
  v17[1] = v19;
  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionServerDebuggerEvent.InjectionRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19588();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)((char *)a1 + v13);
  unint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  sub_252AC5A54(*v15, v17);
  uint64_t v18 = *v14;
  unint64_t v19 = v14[1];
  *uint64_t v14 = v16;
  v14[1] = v17;
  sub_252AC5C14(v18, v19);
  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_252D19588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  uint64_t v19 = *(void *)(a1 + v18);
  unint64_t v20 = *(void *)(a1 + v18 + 8);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  sub_252AC5C14(v19, v20);
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDE730);
}

uint64_t sub_252CDE730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_252B4C1B8(*(void *)(a1 + 16));
  }
  uint64_t v7 = sub_252D19588();
  uint64_t v8 = a1 + *(int *)(a3 + 36);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDE7C0);
}

void sub_252CDE7C0()
{
  sub_252B4C1A4();
  if (v3)
  {
    *(void *)(v1 + 16) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_252D19588();
    uint64_t v6 = v1 + *(int *)(v4 + 36);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, v0, v0, v5);
  }
}

uint64_t sub_252CDE834()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedVwCP_0(uint64_t a1, uint64_t a2)
{
  sub_252B4C01C();
  if ((*(_DWORD *)(v5 + 80) & 0x20000) != 0)
  {
    sub_252CE36D4();
  }
  else
  {
    uint64_t v6 = v4;
    sub_252D19588();
    sub_252AEA304();
    sub_252CE352C();
    v7();
    *(unsigned char *)(a1 + *(int *)(v6 + 20)) = *(unsigned char *)(a2 + *(int *)(v6 + 20));
  }
  return a1;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV31DeferredTransactionStateChangedVwxx_0(uint64_t a1)
{
  sub_252D19588();
  sub_252AEA304();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);

  return v4(a1, v2);
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedVwcp_0()
{
  sub_252CE338C();
  sub_252AEA304();
  sub_252CE352C();
  v0();
  return sub_252CE3924();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedVwtk_0()
{
  sub_252CE338C();
  sub_252AEA304();
  sub_252B4C1CC();
  v0();
  return sub_252CE3924();
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionResponseAccepted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CDEA8C);
}

uint64_t sub_252CDEA8C()
{
  sub_252CBAC24();
  sub_252B4C01C();
  if (*(_DWORD *)(v3 + 84) == v1)
  {
    uint64_t v4 = sub_252CB9030();
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, v5, v6);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
    if (v8 >= 2) {
      return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionResponseAccepted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CDEB28);
}

void sub_252CDEB28()
{
  sub_252CE3358();
  sub_252B4C01C();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_252AF4744();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
  }
}

uint64_t sub_252CDEB94()
{
  return sub_252CDEBA0();
}

uint64_t sub_252CDEBA0()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);

  return sub_252AC5C14(v2, v3);
}

uint64_t initializeWithCopy for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  unint64_t v8 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_252AC5A54(v7, v8);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  return a1;
}

void *assignWithCopy for SessionServerDebuggerEvent.InjectionValueCaptured(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[11];
  unint64_t v4 = a2[12];
  sub_252AC5A54(v5, v4);
  uint64_t v6 = a1[11];
  unint64_t v7 = a1[12];
  a1[11] = v5;
  a1[12] = v4;
  sub_252AC5C14(v6, v7);
  return a1;
}

uint64_t assignWithTake for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 88);
  unint64_t v9 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_252AC5C14(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionValueCaptured(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SessionServerDebuggerEvent.InjectionValueCaptured()
{
}

unsigned char *storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionValueCaptured.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionResponseAccepted.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SessionServerDebuggerEvent.InjectionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF13CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionRequest.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.InjectionStateChanged.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToParseProtoDataCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.UnableToEncodeProtoDataCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ProtoDataViolatesSecurityPolicyCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.RequestFailed.Reason.ZeroEventsSentCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.TranscriptReplacementAccepted.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Synced.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Synced.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.CurrentTranscript.CodingKeys;
}

unsigned char *_s16IntelligenceFlow26SessionServerDebuggerEventV13RequestFailedV6ReasonOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF2E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.FinalTransactionPosted.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.SpanEnded.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.SpanEnded.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.SpanStarted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.SpanStarted.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.DeferredTransactionPostAccepted.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.DeferredTransactionReady.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.DeferredTransactionStateChanged.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SessionClientDebuggerEvent.InjectionResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF52CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.InjectionResponse.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.InjectionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.DisableInjection.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.DisableInjection.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.EnableInjection.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.EnableInjection.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.TerminateSession.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.TerminateSession.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Sync.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Sync.CodingKeys;
}

unsigned char *_s16IntelligenceFlow26SessionServerDebuggerEventV25InjectionResponseAcceptedV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.ReplaceCurrentTranscript.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.RequestCurrentTranscript.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.PostDeferredTransaction.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.DisableDeferredTransactions.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.EnableDeferredTransactions.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionServerDebuggerEvent.Payload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 13) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v5 = v6 - 14;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionServerDebuggerEvent.Payload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDF930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionStateChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionReadyCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.DeferredTransactionPostAcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.SpanStartedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.SpanEndedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.FinalTransactionPostedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.CurrentTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.SyncedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.SyncedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.TranscriptReplacementAcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.RequestFailedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionStateChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionRequestCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionResponseAcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.Payload.InjectionValueCapturedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SessionClientDebuggerEvent.Payload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CDFB14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.EnableDeferredTransactionsCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.DisableDeferredTransactionsCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.PostDeferredTransactionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.RequestCurrentTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.ReplaceCurrentTranscriptCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.SyncCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.SyncCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.TerminateSessionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.EnableInjectionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.DisableInjectionCodingKeys;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.Payload.InjectionResponseCodingKeys;
}

ValueMetadata *type metadata accessor for SessionServerDebuggerEvent.CodingKeys()
{
  return &type metadata for SessionServerDebuggerEvent.CodingKeys;
}

unsigned char *_s16IntelligenceFlow26SessionServerDebuggerEventV21InjectionStateChangedV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252CDFC98);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientDebuggerEvent.CodingKeys()
{
  return &type metadata for SessionClientDebuggerEvent.CodingKeys;
}

unint64_t sub_252CDFCD4()
{
  unint64_t result = qword_269C48598;
  if (!qword_269C48598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48598);
  }
  return result;
}

unint64_t sub_252CDFD24()
{
  unint64_t result = qword_269C485A0;
  if (!qword_269C485A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485A0);
  }
  return result;
}

unint64_t sub_252CDFD74()
{
  unint64_t result = qword_269C485A8;
  if (!qword_269C485A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485A8);
  }
  return result;
}

unint64_t sub_252CDFDC4()
{
  unint64_t result = qword_269C485B0;
  if (!qword_269C485B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485B0);
  }
  return result;
}

unint64_t sub_252CDFE14()
{
  unint64_t result = qword_269C485B8;
  if (!qword_269C485B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485B8);
  }
  return result;
}

unint64_t sub_252CDFE64()
{
  unint64_t result = qword_269C485C0;
  if (!qword_269C485C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485C0);
  }
  return result;
}

unint64_t sub_252CDFEB4()
{
  unint64_t result = qword_269C485C8;
  if (!qword_269C485C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485C8);
  }
  return result;
}

unint64_t sub_252CDFF04()
{
  unint64_t result = qword_269C485D0;
  if (!qword_269C485D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485D0);
  }
  return result;
}

unint64_t sub_252CDFF54()
{
  unint64_t result = qword_269C485D8;
  if (!qword_269C485D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485D8);
  }
  return result;
}

unint64_t sub_252CDFFA4()
{
  unint64_t result = qword_269C485E0;
  if (!qword_269C485E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485E0);
  }
  return result;
}

unint64_t sub_252CDFFF4()
{
  unint64_t result = qword_269C485E8;
  if (!qword_269C485E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485E8);
  }
  return result;
}

unint64_t sub_252CE0044()
{
  unint64_t result = qword_269C485F0;
  if (!qword_269C485F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485F0);
  }
  return result;
}

unint64_t sub_252CE0094()
{
  unint64_t result = qword_269C485F8;
  if (!qword_269C485F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C485F8);
  }
  return result;
}

unint64_t sub_252CE00E4()
{
  unint64_t result = qword_269C48600;
  if (!qword_269C48600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48600);
  }
  return result;
}

unint64_t sub_252CE0134()
{
  unint64_t result = qword_269C48608;
  if (!qword_269C48608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48608);
  }
  return result;
}

unint64_t sub_252CE0184()
{
  unint64_t result = qword_269C48610;
  if (!qword_269C48610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48610);
  }
  return result;
}

unint64_t sub_252CE01D4()
{
  unint64_t result = qword_269C48618;
  if (!qword_269C48618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48618);
  }
  return result;
}

unint64_t sub_252CE0224()
{
  unint64_t result = qword_269C48620;
  if (!qword_269C48620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48620);
  }
  return result;
}

unint64_t sub_252CE0274()
{
  unint64_t result = qword_269C48628;
  if (!qword_269C48628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48628);
  }
  return result;
}

unint64_t sub_252CE02C4()
{
  unint64_t result = qword_269C48630;
  if (!qword_269C48630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48630);
  }
  return result;
}

unint64_t sub_252CE0314()
{
  unint64_t result = qword_269C48638;
  if (!qword_269C48638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48638);
  }
  return result;
}

unint64_t sub_252CE0364()
{
  unint64_t result = qword_269C48640;
  if (!qword_269C48640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48640);
  }
  return result;
}

unint64_t sub_252CE03B4()
{
  unint64_t result = qword_269C48648;
  if (!qword_269C48648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48648);
  }
  return result;
}

unint64_t sub_252CE0404()
{
  unint64_t result = qword_269C48650;
  if (!qword_269C48650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48650);
  }
  return result;
}

unint64_t sub_252CE0454()
{
  unint64_t result = qword_269C48658;
  if (!qword_269C48658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48658);
  }
  return result;
}

unint64_t sub_252CE04A4()
{
  unint64_t result = qword_269C48660;
  if (!qword_269C48660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48660);
  }
  return result;
}

unint64_t sub_252CE04F4()
{
  unint64_t result = qword_269C48668;
  if (!qword_269C48668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48668);
  }
  return result;
}

unint64_t sub_252CE0544()
{
  unint64_t result = qword_269C48670;
  if (!qword_269C48670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48670);
  }
  return result;
}

unint64_t sub_252CE0594()
{
  unint64_t result = qword_269C48678;
  if (!qword_269C48678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48678);
  }
  return result;
}

unint64_t sub_252CE05E4()
{
  unint64_t result = qword_269C48680;
  if (!qword_269C48680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48680);
  }
  return result;
}

unint64_t sub_252CE0634()
{
  unint64_t result = qword_269C48688;
  if (!qword_269C48688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48688);
  }
  return result;
}

unint64_t sub_252CE0684()
{
  unint64_t result = qword_269C48690;
  if (!qword_269C48690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48690);
  }
  return result;
}

unint64_t sub_252CE06D4()
{
  unint64_t result = qword_269C48698;
  if (!qword_269C48698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48698);
  }
  return result;
}

unint64_t sub_252CE0724()
{
  unint64_t result = qword_269C486A0;
  if (!qword_269C486A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486A0);
  }
  return result;
}

unint64_t sub_252CE0774()
{
  unint64_t result = qword_269C486A8;
  if (!qword_269C486A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486A8);
  }
  return result;
}

unint64_t sub_252CE07C4()
{
  unint64_t result = qword_269C486B0;
  if (!qword_269C486B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486B0);
  }
  return result;
}

unint64_t sub_252CE0814()
{
  unint64_t result = qword_269C486B8;
  if (!qword_269C486B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486B8);
  }
  return result;
}

unint64_t sub_252CE0864()
{
  unint64_t result = qword_269C486C0;
  if (!qword_269C486C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486C0);
  }
  return result;
}

unint64_t sub_252CE08B4()
{
  unint64_t result = qword_269C486C8;
  if (!qword_269C486C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486C8);
  }
  return result;
}

unint64_t sub_252CE0904()
{
  unint64_t result = qword_269C486D0;
  if (!qword_269C486D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486D0);
  }
  return result;
}

unint64_t sub_252CE0954()
{
  unint64_t result = qword_269C486D8;
  if (!qword_269C486D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486D8);
  }
  return result;
}

unint64_t sub_252CE09A4()
{
  unint64_t result = qword_269C486E0;
  if (!qword_269C486E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486E0);
  }
  return result;
}

unint64_t sub_252CE09F4()
{
  unint64_t result = qword_269C486E8;
  if (!qword_269C486E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486E8);
  }
  return result;
}

unint64_t sub_252CE0A44()
{
  unint64_t result = qword_269C486F0;
  if (!qword_269C486F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486F0);
  }
  return result;
}

unint64_t sub_252CE0A94()
{
  unint64_t result = qword_269C486F8;
  if (!qword_269C486F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C486F8);
  }
  return result;
}

unint64_t sub_252CE0AE4()
{
  unint64_t result = qword_269C48700;
  if (!qword_269C48700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48700);
  }
  return result;
}

unint64_t sub_252CE0B34()
{
  unint64_t result = qword_269C48708;
  if (!qword_269C48708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48708);
  }
  return result;
}

unint64_t sub_252CE0B84()
{
  unint64_t result = qword_269C48710;
  if (!qword_269C48710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48710);
  }
  return result;
}

unint64_t sub_252CE0BD4()
{
  unint64_t result = qword_269C48718;
  if (!qword_269C48718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48718);
  }
  return result;
}

unint64_t sub_252CE0C24()
{
  unint64_t result = qword_269C48720;
  if (!qword_269C48720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48720);
  }
  return result;
}

unint64_t sub_252CE0C74()
{
  unint64_t result = qword_269C48728;
  if (!qword_269C48728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48728);
  }
  return result;
}

unint64_t sub_252CE0CC4()
{
  unint64_t result = qword_269C48730;
  if (!qword_269C48730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48730);
  }
  return result;
}

unint64_t sub_252CE0D14()
{
  unint64_t result = qword_269C48738;
  if (!qword_269C48738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48738);
  }
  return result;
}

unint64_t sub_252CE0D64()
{
  unint64_t result = qword_269C48740;
  if (!qword_269C48740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48740);
  }
  return result;
}

unint64_t sub_252CE0DB4()
{
  unint64_t result = qword_269C48748;
  if (!qword_269C48748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48748);
  }
  return result;
}

unint64_t sub_252CE0E04()
{
  unint64_t result = qword_269C48750;
  if (!qword_269C48750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48750);
  }
  return result;
}

unint64_t sub_252CE0E54()
{
  unint64_t result = qword_269C48758;
  if (!qword_269C48758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48758);
  }
  return result;
}

unint64_t sub_252CE0EA4()
{
  unint64_t result = qword_269C48760;
  if (!qword_269C48760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48760);
  }
  return result;
}

unint64_t sub_252CE0EF4()
{
  unint64_t result = qword_269C48768;
  if (!qword_269C48768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48768);
  }
  return result;
}

unint64_t sub_252CE0F44()
{
  unint64_t result = qword_269C48770;
  if (!qword_269C48770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48770);
  }
  return result;
}

unint64_t sub_252CE0F94()
{
  unint64_t result = qword_269C48778;
  if (!qword_269C48778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48778);
  }
  return result;
}

unint64_t sub_252CE0FE4()
{
  unint64_t result = qword_269C48780;
  if (!qword_269C48780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48780);
  }
  return result;
}

unint64_t sub_252CE1034()
{
  unint64_t result = qword_269C48788;
  if (!qword_269C48788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48788);
  }
  return result;
}

unint64_t sub_252CE1084()
{
  unint64_t result = qword_269C48790;
  if (!qword_269C48790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48790);
  }
  return result;
}

unint64_t sub_252CE10D4()
{
  unint64_t result = qword_269C48798;
  if (!qword_269C48798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48798);
  }
  return result;
}

unint64_t sub_252CE1124()
{
  unint64_t result = qword_269C487A0;
  if (!qword_269C487A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487A0);
  }
  return result;
}

unint64_t sub_252CE1174()
{
  unint64_t result = qword_269C487A8;
  if (!qword_269C487A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487A8);
  }
  return result;
}

unint64_t sub_252CE11C4()
{
  unint64_t result = qword_269C487B0;
  if (!qword_269C487B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487B0);
  }
  return result;
}

unint64_t sub_252CE1214()
{
  unint64_t result = qword_269C487B8;
  if (!qword_269C487B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487B8);
  }
  return result;
}

unint64_t sub_252CE1264()
{
  unint64_t result = qword_269C487C0;
  if (!qword_269C487C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487C0);
  }
  return result;
}

unint64_t sub_252CE12B4()
{
  unint64_t result = qword_269C487C8;
  if (!qword_269C487C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487C8);
  }
  return result;
}

unint64_t sub_252CE1304()
{
  unint64_t result = qword_269C487D0;
  if (!qword_269C487D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487D0);
  }
  return result;
}

unint64_t sub_252CE1354()
{
  unint64_t result = qword_269C487D8;
  if (!qword_269C487D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487D8);
  }
  return result;
}

unint64_t sub_252CE13A4()
{
  unint64_t result = qword_269C487E0;
  if (!qword_269C487E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487E0);
  }
  return result;
}

unint64_t sub_252CE13F4()
{
  unint64_t result = qword_269C487E8;
  if (!qword_269C487E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487E8);
  }
  return result;
}

unint64_t sub_252CE1444()
{
  unint64_t result = qword_269C487F0;
  if (!qword_269C487F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487F0);
  }
  return result;
}

unint64_t sub_252CE1494()
{
  unint64_t result = qword_269C487F8;
  if (!qword_269C487F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C487F8);
  }
  return result;
}

unint64_t sub_252CE14E4()
{
  unint64_t result = qword_269C48800;
  if (!qword_269C48800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48800);
  }
  return result;
}

unint64_t sub_252CE1534()
{
  unint64_t result = qword_269C48808;
  if (!qword_269C48808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48808);
  }
  return result;
}

unint64_t sub_252CE1584()
{
  unint64_t result = qword_269C48810;
  if (!qword_269C48810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48810);
  }
  return result;
}

unint64_t sub_252CE15D4()
{
  unint64_t result = qword_269C48818;
  if (!qword_269C48818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48818);
  }
  return result;
}

unint64_t sub_252CE1624()
{
  unint64_t result = qword_269C48820;
  if (!qword_269C48820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48820);
  }
  return result;
}

unint64_t sub_252CE1674()
{
  unint64_t result = qword_269C48828;
  if (!qword_269C48828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48828);
  }
  return result;
}

unint64_t sub_252CE16C4()
{
  unint64_t result = qword_269C48830;
  if (!qword_269C48830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48830);
  }
  return result;
}

unint64_t sub_252CE1714()
{
  unint64_t result = qword_269C48838;
  if (!qword_269C48838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48838);
  }
  return result;
}

unint64_t sub_252CE1764()
{
  unint64_t result = qword_269C48840;
  if (!qword_269C48840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48840);
  }
  return result;
}

unint64_t sub_252CE17B4()
{
  unint64_t result = qword_269C48848;
  if (!qword_269C48848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48848);
  }
  return result;
}

unint64_t sub_252CE1804()
{
  unint64_t result = qword_269C48850;
  if (!qword_269C48850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48850);
  }
  return result;
}

unint64_t sub_252CE1854()
{
  unint64_t result = qword_269C48858;
  if (!qword_269C48858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48858);
  }
  return result;
}

unint64_t sub_252CE18A4()
{
  unint64_t result = qword_269C48860;
  if (!qword_269C48860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48860);
  }
  return result;
}

unint64_t sub_252CE18F4()
{
  unint64_t result = qword_269C48868;
  if (!qword_269C48868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48868);
  }
  return result;
}

unint64_t sub_252CE1944()
{
  unint64_t result = qword_269C48870;
  if (!qword_269C48870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48870);
  }
  return result;
}

unint64_t sub_252CE1994()
{
  unint64_t result = qword_269C48878;
  if (!qword_269C48878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48878);
  }
  return result;
}

unint64_t sub_252CE19E4()
{
  unint64_t result = qword_269C48880;
  if (!qword_269C48880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48880);
  }
  return result;
}

unint64_t sub_252CE1A34()
{
  unint64_t result = qword_269C48888;
  if (!qword_269C48888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48888);
  }
  return result;
}

unint64_t sub_252CE1A84()
{
  unint64_t result = qword_269C48890;
  if (!qword_269C48890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48890);
  }
  return result;
}

unint64_t sub_252CE1AD4()
{
  unint64_t result = qword_269C48898;
  if (!qword_269C48898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48898);
  }
  return result;
}

unint64_t sub_252CE1B24()
{
  unint64_t result = qword_269C488A0;
  if (!qword_269C488A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488A0);
  }
  return result;
}

unint64_t sub_252CE1B74()
{
  unint64_t result = qword_269C488A8;
  if (!qword_269C488A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488A8);
  }
  return result;
}

unint64_t sub_252CE1BC4()
{
  unint64_t result = qword_269C488B0;
  if (!qword_269C488B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488B0);
  }
  return result;
}

unint64_t sub_252CE1C14()
{
  unint64_t result = qword_269C488B8;
  if (!qword_269C488B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488B8);
  }
  return result;
}

unint64_t sub_252CE1C64()
{
  unint64_t result = qword_269C488C0;
  if (!qword_269C488C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488C0);
  }
  return result;
}

unint64_t sub_252CE1CB4()
{
  unint64_t result = qword_269C488C8;
  if (!qword_269C488C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488C8);
  }
  return result;
}

unint64_t sub_252CE1D04()
{
  unint64_t result = qword_269C488D0;
  if (!qword_269C488D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488D0);
  }
  return result;
}

unint64_t sub_252CE1D54()
{
  unint64_t result = qword_269C488D8;
  if (!qword_269C488D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488D8);
  }
  return result;
}

unint64_t sub_252CE1DA4()
{
  unint64_t result = qword_269C488E0;
  if (!qword_269C488E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488E0);
  }
  return result;
}

unint64_t sub_252CE1DF4()
{
  unint64_t result = qword_269C488E8;
  if (!qword_269C488E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488E8);
  }
  return result;
}

unint64_t sub_252CE1E44()
{
  unint64_t result = qword_269C488F0;
  if (!qword_269C488F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488F0);
  }
  return result;
}

unint64_t sub_252CE1E94()
{
  unint64_t result = qword_269C488F8;
  if (!qword_269C488F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C488F8);
  }
  return result;
}

unint64_t sub_252CE1EE4()
{
  unint64_t result = qword_269C48900;
  if (!qword_269C48900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48900);
  }
  return result;
}

unint64_t sub_252CE1F34()
{
  unint64_t result = qword_269C48908;
  if (!qword_269C48908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48908);
  }
  return result;
}

unint64_t sub_252CE1F84()
{
  unint64_t result = qword_269C48910;
  if (!qword_269C48910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48910);
  }
  return result;
}

unint64_t sub_252CE1FD4()
{
  unint64_t result = qword_269C48918;
  if (!qword_269C48918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48918);
  }
  return result;
}

unint64_t sub_252CE2024()
{
  unint64_t result = qword_269C48920;
  if (!qword_269C48920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48920);
  }
  return result;
}

unint64_t sub_252CE2074()
{
  unint64_t result = qword_269C48928;
  if (!qword_269C48928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48928);
  }
  return result;
}

unint64_t sub_252CE20C4()
{
  unint64_t result = qword_269C48930;
  if (!qword_269C48930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48930);
  }
  return result;
}

unint64_t sub_252CE2114()
{
  unint64_t result = qword_269C48938;
  if (!qword_269C48938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48938);
  }
  return result;
}

unint64_t sub_252CE2164()
{
  unint64_t result = qword_269C48940;
  if (!qword_269C48940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48940);
  }
  return result;
}

unint64_t sub_252CE21B4()
{
  unint64_t result = qword_269C48948;
  if (!qword_269C48948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48948);
  }
  return result;
}

unint64_t sub_252CE2204()
{
  unint64_t result = qword_269C48950;
  if (!qword_269C48950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48950);
  }
  return result;
}

unint64_t sub_252CE2254()
{
  unint64_t result = qword_269C48958;
  if (!qword_269C48958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48958);
  }
  return result;
}

unint64_t sub_252CE22A4()
{
  unint64_t result = qword_269C48960;
  if (!qword_269C48960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48960);
  }
  return result;
}

unint64_t sub_252CE22F4()
{
  unint64_t result = qword_269C48968;
  if (!qword_269C48968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48968);
  }
  return result;
}

unint64_t sub_252CE2344()
{
  unint64_t result = qword_269C48970;
  if (!qword_269C48970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48970);
  }
  return result;
}

unint64_t sub_252CE2394()
{
  unint64_t result = qword_269C48978;
  if (!qword_269C48978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48978);
  }
  return result;
}

unint64_t sub_252CE23E4()
{
  unint64_t result = qword_269C48980;
  if (!qword_269C48980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48980);
  }
  return result;
}

unint64_t sub_252CE2434()
{
  unint64_t result = qword_269C48988;
  if (!qword_269C48988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48988);
  }
  return result;
}

unint64_t sub_252CE2484()
{
  unint64_t result = qword_269C48990;
  if (!qword_269C48990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48990);
  }
  return result;
}

unint64_t sub_252CE24D4()
{
  unint64_t result = qword_269C48998;
  if (!qword_269C48998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48998);
  }
  return result;
}

unint64_t sub_252CE2524()
{
  unint64_t result = qword_269C489A0;
  if (!qword_269C489A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489A0);
  }
  return result;
}

unint64_t sub_252CE2574()
{
  unint64_t result = qword_269C489A8;
  if (!qword_269C489A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489A8);
  }
  return result;
}

unint64_t sub_252CE25C4()
{
  unint64_t result = qword_269C489B0;
  if (!qword_269C489B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489B0);
  }
  return result;
}

unint64_t sub_252CE2614()
{
  unint64_t result = qword_269C489B8;
  if (!qword_269C489B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489B8);
  }
  return result;
}

unint64_t sub_252CE2664()
{
  unint64_t result = qword_269C489C0;
  if (!qword_269C489C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489C0);
  }
  return result;
}

unint64_t sub_252CE26B4()
{
  unint64_t result = qword_269C489C8;
  if (!qword_269C489C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489C8);
  }
  return result;
}

unint64_t sub_252CE2704()
{
  unint64_t result = qword_269C489D0;
  if (!qword_269C489D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489D0);
  }
  return result;
}

unint64_t sub_252CE2754()
{
  unint64_t result = qword_269C489D8;
  if (!qword_269C489D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489D8);
  }
  return result;
}

unint64_t sub_252CE27A4()
{
  unint64_t result = qword_269C489E0;
  if (!qword_269C489E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489E0);
  }
  return result;
}

unint64_t sub_252CE27F4()
{
  unint64_t result = qword_269C489E8;
  if (!qword_269C489E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489E8);
  }
  return result;
}

unint64_t sub_252CE2844()
{
  unint64_t result = qword_269C489F0;
  if (!qword_269C489F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489F0);
  }
  return result;
}

unint64_t sub_252CE2894()
{
  unint64_t result = qword_269C489F8;
  if (!qword_269C489F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C489F8);
  }
  return result;
}

unint64_t sub_252CE28E4()
{
  unint64_t result = qword_269C48A00;
  if (!qword_269C48A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A00);
  }
  return result;
}

unint64_t sub_252CE2934()
{
  unint64_t result = qword_269C48A08;
  if (!qword_269C48A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A08);
  }
  return result;
}

unint64_t sub_252CE2984()
{
  unint64_t result = qword_269C48A10;
  if (!qword_269C48A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A10);
  }
  return result;
}

unint64_t sub_252CE29D4()
{
  unint64_t result = qword_269C48A18;
  if (!qword_269C48A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A18);
  }
  return result;
}

unint64_t sub_252CE2A24()
{
  unint64_t result = qword_269C48A20;
  if (!qword_269C48A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A20);
  }
  return result;
}

unint64_t sub_252CE2A74()
{
  unint64_t result = qword_269C48A28;
  if (!qword_269C48A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A28);
  }
  return result;
}

unint64_t sub_252CE2AC4()
{
  unint64_t result = qword_269C48A30;
  if (!qword_269C48A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A30);
  }
  return result;
}

unint64_t sub_252CE2B14()
{
  unint64_t result = qword_269C48A38;
  if (!qword_269C48A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A38);
  }
  return result;
}

unint64_t sub_252CE2B64()
{
  unint64_t result = qword_269C48A40;
  if (!qword_269C48A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A40);
  }
  return result;
}

unint64_t sub_252CE2BB4()
{
  unint64_t result = qword_269C48A48;
  if (!qword_269C48A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A48);
  }
  return result;
}

unint64_t sub_252CE2C04()
{
  unint64_t result = qword_269C48A50;
  if (!qword_269C48A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A50);
  }
  return result;
}

unint64_t sub_252CE2C54()
{
  unint64_t result = qword_269C48A58;
  if (!qword_269C48A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A58);
  }
  return result;
}

unint64_t sub_252CE2CA4()
{
  unint64_t result = qword_269C48A60;
  if (!qword_269C48A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A60);
  }
  return result;
}

unint64_t sub_252CE2CF4()
{
  unint64_t result = qword_269C48A68;
  if (!qword_269C48A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A68);
  }
  return result;
}

unint64_t sub_252CE2D44()
{
  unint64_t result = qword_269C48A70;
  if (!qword_269C48A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A70);
  }
  return result;
}

unint64_t sub_252CE2D94()
{
  unint64_t result = qword_269C48A78;
  if (!qword_269C48A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A78);
  }
  return result;
}

unint64_t sub_252CE2DE4()
{
  unint64_t result = qword_269C48A80;
  if (!qword_269C48A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A80);
  }
  return result;
}

unint64_t sub_252CE2E34()
{
  unint64_t result = qword_269C48A88;
  if (!qword_269C48A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A88);
  }
  return result;
}

unint64_t sub_252CE2E84()
{
  unint64_t result = qword_269C48A90;
  if (!qword_269C48A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A90);
  }
  return result;
}

unint64_t sub_252CE2ED4()
{
  unint64_t result = qword_269C48A98;
  if (!qword_269C48A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48A98);
  }
  return result;
}

unint64_t sub_252CE2F24()
{
  unint64_t result = qword_269C48AA0;
  if (!qword_269C48AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AA0);
  }
  return result;
}

unint64_t sub_252CE2F74()
{
  unint64_t result = qword_269C48AA8;
  if (!qword_269C48AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AA8);
  }
  return result;
}

unint64_t sub_252CE2FC4()
{
  unint64_t result = qword_269C48AB0;
  if (!qword_269C48AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AB0);
  }
  return result;
}

unint64_t sub_252CE3014()
{
  unint64_t result = qword_269C48AB8;
  if (!qword_269C48AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AB8);
  }
  return result;
}

unint64_t sub_252CE3064()
{
  unint64_t result = qword_269C48AC0;
  if (!qword_269C48AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AC0);
  }
  return result;
}

uint64_t sub_252CE317C()
{
  return v0;
}

uint64_t sub_252CE3198()
{
  return v0;
}

uint64_t sub_252CE31B4()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CE31DC()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CE3204()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CE3224()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CE3240()
{
  return v0;
}

uint64_t sub_252CE3258()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CE3278()
{
  return sub_252D1A498();
}

uint64_t sub_252CE329C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CE32CC()
{
  return sub_252D1A498();
}

uint64_t sub_252CE32F0()
{
  return v0;
}

uint64_t sub_252CE3308()
{
  return sub_252D1A578();
}

uint64_t sub_252CE3324@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_252D1A528();
}

uint64_t sub_252CE3348()
{
  return v0;
}

uint64_t sub_252CE3358()
{
  return sub_252D19588();
}

uint64_t sub_252CE337C()
{
  return v0;
}

uint64_t sub_252CE338C()
{
  return sub_252D19588();
}

uint64_t sub_252CE33AC()
{
  return sub_252CC6D18();
}

uint64_t sub_252CE33C4()
{
  return sub_252D19588();
}

uint64_t sub_252CE33DC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_252D1A448();
}

uint64_t sub_252CE3414()
{
  return v0;
}

uint64_t sub_252CE342C()
{
  return sub_252CC6D18();
}

uint64_t sub_252CE3444()
{
  return sub_252D1A528();
}

uint64_t sub_252CE345C()
{
  return v0;
}

uint64_t sub_252CE3468()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CE3480()
{
  return 0;
}

uint64_t sub_252CE348C()
{
  return sub_252D1A448();
}

uint64_t sub_252CE34AC()
{
  return *(void *)v0;
}

uint64_t sub_252CE34C0()
{
  return sub_252D1A578();
}

uint64_t sub_252CE34E0()
{
  return sub_252D1A498();
}

uint64_t sub_252CE3518()
{
  return v0;
}

uint64_t sub_252CE353C()
{
  return sub_252D1A578();
}

uint64_t sub_252CE3558()
{
  return v0;
}

uint64_t sub_252CE3564()
{
  sub_252B592FC(v0, v1);
  sub_252B592FC(v2, v3);
  sub_252B592E8(v0, v1);
  return sub_252B592E8(v2, v3);
}

uint64_t sub_252CE35B0()
{
  return sub_252D1A578();
}

void sub_252CE35C8()
{
  sub_252B592FC(v0, v1);
  sub_252B592FC(v2, v3);
  JUMPOUT(0x2533C8590);
}

uint64_t sub_252CE3610()
{
  return sub_252D1A498();
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedV6spanIds6UInt64Vvg_0()
{
  return *(void *)v0;
}

uint64_t sub_252CE3664()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CE3690()
{
  return sub_252AECE0C(v1, v0);
}

uint64_t sub_252CE36B0()
{
  return 0;
}

uint64_t sub_252CE36BC()
{
  return _s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_252CE36D4()
{
  *uint64_t v0 = *v1;
  return swift_retain();
}

uint64_t sub_252CE36FC()
{
  return sub_252CC6D18();
}

uint64_t sub_252CE3714()
{
  return v0;
}

uint64_t sub_252CE374C()
{
  return type metadata accessor for SessionServerDebuggerEvent.InjectionResponseAccepted(0);
}

uint64_t sub_252CE3768()
{
  return sub_252D1A4D8();
}

uint64_t sub_252CE3790()
{
  return v0;
}

__n128 *sub_252CE37C0@<X0>(unint64_t a1@<X8>, __n128 a2@<Q0>)
{
  unint64_t v3 = *(__n128 **)(v2 - 256);
  *unint64_t v3 = a2;
  v3[1].n128_u64[0] = a1;
  return v3;
}

uint64_t sub_252CE37D8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_252D1A598();
}

uint64_t sub_252CE37FC()
{
  return sub_252D1A718();
}

uint64_t sub_252CE3820()
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v0;
  return sub_252B1CC20(v3, v4);
}

void sub_252CE3844(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
}

uint64_t sub_252CE3850@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CE386C()
{
  return v0;
}

uint64_t sub_252CE3884()
{
  return v0;
}

uint64_t sub_252CE38AC()
{
  return v0;
}

uint64_t sub_252CE38DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CE38F8()
{
  return 0;
}

uint64_t sub_252CE3908()
{
  return type metadata accessor for SessionServerDebuggerEvent.InjectionRequest(0);
}

uint64_t sub_252CE3924()
{
  *(unsigned char *)(v2 + *(int *)(v0 + 20)) = *(unsigned char *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t _s16IntelligenceFlow26SessionServerDebuggerEventV11SpanStartedV6spanIds6UInt64Vvs_0(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_252CE3940()
{
  return sub_252D1A578();
}

uint64_t sub_252CE3960()
{
  return sub_252CC91CC();
}

uint64_t sub_252CE3978@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_252CE398C()
{
  return v0 - 96;
}

void sub_252CE39A0()
{
  *(void *)(v1 - 136) = v0;
  *(unsigned char *)(v1 - 65) = 0;
}

void *sub_252CE39B4()
{
  return sub_252AC3A68(v0, v1);
}

uint64_t sub_252CE39D4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252CE39F4()
{
  *(void *)(v1 - 104) = v0;
  return v0;
}

uint64_t sub_252CE3A08()
{
  return sub_252D1A498();
}

uint64_t sub_252CE3A28@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  return sub_252D19588();
}

uint64_t sub_252CE3A48@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
  return sub_252D19588();
}

uint64_t sub_252CE3A68@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_252CE3A7C()
{
  return v0;
}

uint64_t sub_252CE3A90()
{
  return sub_252D19CF8();
}

void sub_252CE3AB0()
{
  *(void *)(*(void *)(v0 - 144) + *(int *)(*(void *)(v0 - 136) + 20)) = *(void *)(v0 - 88);
}

uint64_t sub_252CE3AC4()
{
  return v0;
}

uint64_t sub_252CE3AD8()
{
  return type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady(0);
}

uint64_t sub_252CE3AF0()
{
  return type metadata accessor for SessionClientDebuggerEvent.PostDeferredTransaction(0);
}

uint64_t sub_252CE3B08()
{
  sub_252B592E8(v2, v3);
  return sub_252B592E8(v0, v1);
}

uint64_t sub_252CE3B40()
{
  *uint64_t v0 = v1;
  return sub_252D1A3F8();
}

uint64_t sub_252CE3B6C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t static SessionStatusUpdate.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v8[0] = *a1;
  v8[1] = v2;
  long long v3 = a1[3];
  v8[2] = a1[2];
  v8[3] = v3;
  long long v4 = a2[1];
  v7[0] = *a2;
  v7[1] = v4;
  long long v5 = a2[3];
  v7[2] = a2[2];
  v7[3] = v5;
  return static SessionStatusUpdate.Payload.== infix(_:_:)((uint64_t *)v8, (uint64_t *)v7) & 1;
}

uint64_t SessionStatusUpdate.payload.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_252ACE7FC(v2, v3, v4, v5, v6, v7, v8);
}

__n128 SessionStatusUpdate.payload.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  sub_252AD1724(*v1, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6]);
  *(_OWORD *)uint64_t v1 = v7;
  *((_OWORD *)v1 + 1) = v6;
  __n128 result = v5;
  *((__n128 *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  return result;
}

uint64_t (*SessionStatusUpdate.payload.modify())()
{
  return nullsub_1;
}

__n128 SessionStatusUpdate.init(payload:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v4;
  return result;
}

uint64_t static SessionStatusUpdate.Payload.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v14 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v16 = a2[7];
  v75[0] = *a1;
  v75[1] = v3;
  v75[2] = v5;
  v75[3] = v4;
  v75[4] = v7;
  v75[5] = v6;
  v75[6] = v8;
  v75[7] = v9;
  v75[8] = v11;
  v75[9] = v10;
  v75[10] = v13;
  v75[11] = v12;
  v75[12] = v15;
  v75[13] = v14;
  v75[14] = v17;
  v75[15] = v16;
  if (v8 < 0)
  {
    if (v17 < 0)
    {
      uint64_t v67 = v2;
      uint64_t v68 = v3;
      uint64_t v69 = v5;
      uint64_t v70 = v4;
      uint64_t v71 = v7;
      uint64_t v72 = v6;
      uint64_t v52 = v3;
      uint64_t v54 = v5;
      uint64_t v31 = v2;
      char v73 = v8 & 1;
      uint64_t v74 = v9;
      uint64_t v59 = v11;
      uint64_t v60 = v10;
      uint64_t v61 = v13;
      uint64_t v62 = v12;
      uint64_t v63 = v15;
      uint64_t v64 = v14;
      char v65 = v17 & 1;
      uint64_t v66 = v16;
      uint64_t v56 = v4;
      uint64_t v58 = v7;
      uint64_t v49 = v6;
      sub_252ACE7FC(v11, v10, v13, v12, v15, v14, v17);
      sub_252ACE7FC(v31, v52, v54, v56, v58, v49, v8);
      uint64_t v32 = sub_252CE9660();
      sub_252ACE7FC(v32, v33, v34, v35, v36, v37, v38);
      sub_252ACE7FC(v31, v52, v54, v56, v58, v49, v8);
      static SessionStatusUpdate.IntermediateQueryResult.== infix(_:_:)((uint64_t)&v67, (uint64_t)&v59);
      char v20 = v39;
      sub_252CE3F14(v75);
      uint64_t v40 = sub_252CE9660();
      sub_252AD1724(v40, v41, v42, v43, v44, v45, v46);
      sub_252AD1724(v31, v52, v54, v56, v58, v49, v8);
      return v20 & 1;
    }
    goto LABEL_5;
  }
  if (v17 < 0)
  {
LABEL_5:
    uint64_t v21 = v11;
    uint64_t v22 = v10;
    uint64_t v23 = v5;
    uint64_t v24 = v13;
    uint64_t v25 = v4;
    uint64_t v26 = v12;
    uint64_t v27 = v7;
    uint64_t v28 = v15;
    uint64_t v29 = v6;
    uint64_t v30 = v2;
    sub_252ACE7FC(v21, v22, v24, v26, v28, v14, v17);
    sub_252ACE7FC(v30, v3, v23, v25, v27, v29, v8);
    sub_252CE3F14(v75);
    char v20 = 0;
    return v20 & 1;
  }
  LODWORD(v67) = v2;
  uint64_t v68 = v3;
  uint64_t v69 = v5;
  uint64_t v70 = v4;
  uint64_t v71 = v7;
  LODWORD(v59) = v11;
  uint64_t v60 = v10;
  uint64_t v61 = v13;
  uint64_t v62 = v12;
  uint64_t v63 = v15;
  uint64_t v48 = v6;
  uint64_t v50 = v8;
  uint64_t v55 = v4;
  uint64_t v57 = v7;
  uint64_t v51 = v3;
  uint64_t v53 = v5;
  uint64_t v18 = v2;
  uint64_t v19 = v14;
  char v20 = static SessionStatusUpdate.ToolExecutionProgressUpdate.== infix(_:_:)((uint64_t)&v67, (uint64_t)&v59);
  sub_252ACE7FC(v11, v10, v13, v12, v15, v19, v17);
  sub_252ACE7FC(v18, v51, v53, v55, v57, v48, v50);
  sub_252CE3F14(v75);
  return v20 & 1;
}

uint64_t *sub_252CE3F14(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  sub_252AD1724(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_252AD1724(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_252CE3FA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252CE402C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE3FA4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252CE4058(uint64_t a1)
{
  unint64_t v2 = sub_252CE449C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE4094(uint64_t a1)
{
  unint64_t v2 = sub_252CE449C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStatusUpdate.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C48AC8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252AC3A68(v1, v1[3]);
  sub_252CE449C();
  sub_252CE97A8();
  sub_252CE44E8();
  sub_252D1A578();
  uint64_t v3 = sub_252CE3198();
  v4(v3);
  sub_252AF4368();
}

void SessionStatusUpdate.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  char v4 = v3;
  sub_252AC3A24(&qword_269C48AE0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F60C();
  sub_252CE449C();
  sub_252B5F908();
  if (!v0)
  {
    sub_252CE4534();
    sub_252BA5ABC();
    uint64_t v6 = sub_252CE9570();
    v7(v6);
    *char v4 = v8;
    v4[1] = v9;
    v4[2] = v10;
    v4[3] = v11;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
  sub_252AF4368();
}

void sub_252CE42E0()
{
}

void sub_252CE42F8()
{
}

uint64_t static SessionStatusUpdate.ToolExecutionProgressUpdate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && v3 == v6;
  if (v9 || (char v10 = sub_252D1A5D8(), result = 0, (v10 & 1) != 0))
  {
LABEL_11:
    if (v5)
    {
      if (v8)
      {
        if (v4 == v7 && v5 == v8) {
          return 1;
        }
        sub_252AEA3DC();
        if (sub_252D1A5D8()) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void static SessionStatusUpdate.IntermediateQueryResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 48);
  long long v5 = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_12;
  }
  long long v12 = *(_OWORD *)(a1 + 32);
  long long v13 = *(_OWORD *)(a1 + 16);
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  char v9 = sub_252D1A5D8();
  long long v6 = v10;
  long long v5 = v11;
  long long v3 = v12;
  long long v2 = v13;
  if (v9)
  {
LABEL_12:
    v16[0] = v2;
    v16[1] = v3;
    char v17 = v4;
    v14[0] = v5;
    v14[1] = v6;
    char v15 = v7;
    if (static SessionStatusUpdate.IntermediateQueryResult.Source.== infix(_:_:)((uint64_t)v16, (uint64_t)v14))
    {
      sub_252AEA3DC();
      sub_252B1D7E4();
    }
  }
}

unint64_t sub_252CE449C()
{
  unint64_t result = qword_269C48AD0;
  if (!qword_269C48AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AD0);
  }
  return result;
}

unint64_t sub_252CE44E8()
{
  unint64_t result = qword_269C48AD8;
  if (!qword_269C48AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AD8);
  }
  return result;
}

unint64_t sub_252CE4534()
{
  unint64_t result = qword_269C48AE8;
  if (!qword_269C48AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48AE8);
  }
  return result;
}

uint64_t sub_252CE4580(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1EA10 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1EA30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_252CE466C()
{
  return 0xD000000000000017;
}

unint64_t sub_252CE46A0()
{
  return sub_252CE466C();
}

uint64_t sub_252CE46A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE4580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CE46D0(uint64_t a1)
{
  unint64_t v2 = sub_252CE65C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE470C(uint64_t a1)
{
  unint64_t v2 = sub_252CE65C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CE4748(uint64_t a1)
{
  unint64_t v2 = sub_252CE66AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE4784(uint64_t a1)
{
  unint64_t v2 = sub_252CE66AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CE47C0(uint64_t a1)
{
  unint64_t v2 = sub_252CE6614();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE47FC(uint64_t a1)
{
  unint64_t v2 = sub_252CE6614();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStatusUpdate.Payload.encode(to:)()
{
  sub_252AF4380();
  sub_252CE981C();
  sub_252AC3A24(&qword_269C48AF0);
  sub_252AEDBD0();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252AC3A24(&qword_269C48AF8);
  sub_252AEDBD0();
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v7);
  sub_252B7732C();
  uint64_t v32 = sub_252AC3A24(&qword_269C48B00);
  sub_252AEDBD0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_252B5F630();
  uint64_t v11 = v0[1];
  uint64_t v27 = *v0;
  uint64_t v28 = v11;
  sub_252CE979C();
  uint64_t v29 = v13;
  uint64_t v30 = v12;
  uint64_t v31 = v0[4];
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[7];
  uint64_t v21 = v0[5];
  uint64_t v22 = v15;
  sub_252AC3A68(v2, v2[3]);
  sub_252CE65C8();
  sub_252D1A738();
  if (v14 < 0)
  {
    LOBYTE(v33) = 1;
    sub_252CE6614();
    uint64_t v18 = v32;
    sub_252D1A4D8();
    uint64_t v33 = v27;
    uint64_t v34 = v28;
    uint64_t v35 = v29;
    uint64_t v36 = v30;
    uint64_t v37 = v31;
    uint64_t v38 = v21;
    char v39 = v14 & 1;
    uint64_t v40 = v22;
    sub_252CE6660();
    sub_252D1A578();
    sub_252B5F53C();
    v19();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v18);
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_252CE66AC();
    uint64_t v16 = v32;
    sub_252D1A4D8();
    LODWORD(v33) = v27;
    uint64_t v34 = v28;
    uint64_t v35 = v29;
    uint64_t v36 = v30;
    uint64_t v37 = v31;
    sub_252CE66F8();
    sub_252D1A578();
    sub_252B5F53C();
    v17();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v16);
  }
  sub_252AF4368();
}

void SessionStatusUpdate.Payload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  sub_252CE981C();
  uint64_t v43 = v12;
  sub_252AC3A24(&qword_269C48B30);
  sub_252AEDBD0();
  uint64_t v45 = v14;
  uint64_t v46 = v13;
  MEMORY[0x270FA5388](v13);
  sub_252B23278();
  uint64_t v15 = sub_252AC3A24(&qword_269C48B38);
  sub_252AEDBD0();
  uint64_t v44 = v16;
  MEMORY[0x270FA5388](v17);
  sub_252AC423C();
  sub_252AC3A24(&qword_269C48B40);
  sub_252AEDBD0();
  uint64_t v47 = v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v11[4];
  sub_252AC3A68(v11, v11[3]);
  sub_252CE65C8();
  sub_252B5F908();
  if (a10) {
    goto LABEL_7;
  }
  v42[1] = v15;
  v42[2] = v10;
  if (!*(void *)(sub_252D1A4C8() + 16) || (uint64_t v23 = sub_252CE95D8(), sub_252B5F440(v23), sub_252CE97C8(), v22))
  {
    sub_252D1A308();
    swift_allocError();
    uint64_t v25 = v24;
    sub_252AC3A24(&qword_269C42E78);
    void *v25 = &type metadata for SessionStatusUpdate.Payload;
    sub_252D1A3F8();
    sub_252CE9684();
    uint64_t v26 = sub_252CE9788();
    v27(v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_252CE9760();
    v29(v28);
LABEL_7:
    uint64_t v30 = (uint64_t)v11;
    goto LABEL_8;
  }
  if (v21)
  {
    LOBYTE(v48) = 1;
    sub_252CE6614();
    sub_252CE96B0();
    sub_252CE78CC();
    sub_252D1A498();
    sub_252B5F53C();
    v31();
    swift_unknownObjectRelease();
    sub_252CE9584();
    v32();
    uint64_t v33 = v48;
    uint64_t v34 = v49;
    long long v35 = v50;
    long long v36 = v51;
    uint64_t v37 = v53;
    unint64_t v38 = v52 | 0x8000000000000000;
  }
  else
  {
    LOBYTE(v48) = 0;
    sub_252CE66AC();
    sub_252CE97E8();
    sub_252CE7918();
    sub_252D1A498();
    sub_252B5F53C();
    v39();
    swift_unknownObjectRelease();
    sub_252CE9584();
    v40();
    unint64_t v38 = 0;
    uint64_t v37 = 0;
    uint64_t v33 = v48;
    uint64_t v34 = v49;
    long long v35 = v50;
    *(void *)&long long v36 = v51;
  }
  uint64_t v41 = v43;
  *uint64_t v43 = v33;
  v41[1] = v34;
  *((_OWORD *)v41 + 1) = v35;
  *((_OWORD *)v41 + 2) = v36;
  v41[6] = v38;
  v41[7] = v37;
  uint64_t v30 = (uint64_t)v11;
LABEL_8:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v30);
  sub_252AF4368();
}

void sub_252CE4FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionStatusUpdate.Payload.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CE4FC4()
{
}

float SessionStatusUpdate.ToolExecutionProgressUpdate.progress.getter()
{
  return *(float *)v0;
}

uint64_t SessionStatusUpdate.ToolExecutionProgressUpdate.progressDescription.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionStatusUpdate.ToolExecutionProgressUpdate.additionalProgressDescription.getter()
{
  return sub_252AEA3DC();
}

void __swiftcall SessionStatusUpdate.ToolExecutionProgressUpdate.init(progress:progressDescription:additionalProgressDescription:)(IntelligenceFlow::SessionStatusUpdate::ToolExecutionProgressUpdate *__return_ptr retstr, Swift::Float progress, Swift::String_optional progressDescription, Swift::String_optional additionalProgressDescription)
{
  retstr->progress = progress;
  retstr->progressDescription = progressDescription;
  retstr->additionalProgressDescription = additionalProgressDescription;
}

void __swiftcall SessionStatusUpdate.ToolExecutionProgressUpdate.init(progress:)(IntelligenceFlow::SessionStatusUpdate::ToolExecutionProgressUpdate *__return_ptr retstr, Swift::Float progress)
{
  retstr->progress = progress;
  retstr->progressDescription = 0u;
  retstr->additionalProgressDescription = 0u;
}

uint64_t sub_252CE5064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572676F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1EA50 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000252D1EA70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252CE51B0(char a1)
{
  if (!a1) {
    return 0x73736572676F7270;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0xD00000000000001DLL;
}

uint64_t sub_252CE520C()
{
  return sub_252CE51B0(*v0);
}

uint64_t sub_252CE5214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE5064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CE523C(uint64_t a1)
{
  unint64_t v2 = sub_252CE7964();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE5278(uint64_t a1)
{
  unint64_t v2 = sub_252CE7964();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionStatusUpdate.ToolExecutionProgressUpdate.encode(to:)(void *a1)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C48B58);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252CB8E64(a1);
  sub_252CE7964();
  sub_252CE96D8();
  sub_252D1A548();
  if (!v1)
  {
    sub_252D1A4E8();
    sub_252D1A4E8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t SessionStatusUpdate.ToolExecutionProgressUpdate.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_252AC3A24(&qword_269C48B68);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F60C();
  sub_252CE7964();
  sub_252B5F908();
  if (v2) {
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
  }
  sub_252D1A468();
  int v7 = v6;
  uint64_t v8 = sub_252D1A408();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_252D1A408();
  uint64_t v13 = v12;
  uint64_t v17 = v11;
  uint64_t v14 = sub_252CE9570();
  v15(v14);
  *(_DWORD *)a2 = v7;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v13;
  swift_bridgeObjectRetain();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CE55F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SessionStatusUpdate.ToolExecutionProgressUpdate.init(from:)(a1, a2);
}

uint64_t sub_252CE560C(void *a1)
{
  return SessionStatusUpdate.ToolExecutionProgressUpdate.encode(to:)(a1);
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.query.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.query.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.query.modify())()
{
  return nullsub_1;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return sub_252ACE888(v2, v3, v4, v5, v6);
}

__n128 SessionStatusUpdate.IntermediateQueryResult.source.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  sub_252AD17B0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
  __n128 result = v6;
  *(__n128 *)(v1 + 16) = v6;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 48) = v4;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.source.modify())()
{
  return nullsub_1;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.results.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.results.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.results.modify())()
{
  return nullsub_1;
}

__n128 SessionStatusUpdate.IntermediateQueryResult.init(query:source:results:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *(unsigned char *)(a3 + 32);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  __n128 result = *(__n128 *)a3;
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a5 + 32) = v7;
  *(unsigned char *)(a5 + 48) = v5;
  *(void *)(a5 + 56) = a4;
  return result;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *uint64_t v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.associatedActionContext.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery __swiftcall SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.init(associatedActionContext:)(IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery associatedActionContext)
{
  uint64_t v2 = *(void *)(associatedActionContext.associatedActionContext.toolId._countAndFlagsBits + 16);
  uint64_t v3 = *(void *)(associatedActionContext.associatedActionContext.toolId._countAndFlagsBits + 24);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)associatedActionContext.associatedActionContext.toolId._countAndFlagsBits;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return associatedActionContext;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.toolId.modify())()
{
  return nullsub_1;
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.parameterId.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SessionStatusUpdate::IntermediateQueryResult::Source::AppEntityStringQuery::ActionContext __swiftcall SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(toolId:parameterId:)(Swift::String toolId, Swift::String parameterId)
{
  *uint64_t v2 = toolId;
  v2[1] = parameterId;
  result.parameterId = parameterId;
  result.toolId = toolId;
  return result;
}

uint64_t static SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.== infix(_:_:)(uint64_t a1)
{
  sub_252B5F824(a1);
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (char v8 = sub_252D1A5D8(), result = 0, (v8 & 1) != 0))
  {
    if (v1 == v3 && v2 == v4)
    {
      return 1;
    }
    else
    {
      sub_252B5F7B4();
      return sub_252D1A5D8();
    }
  }
  return result;
}

uint64_t sub_252CE5A0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEB00000000644972)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CE5B0C(char a1)
{
  if (a1) {
    return 0x6574656D61726170;
  }
  else {
    return 0x64496C6F6F74;
  }
}

uint64_t sub_252CE5B48()
{
  return sub_252B60E68();
}

uint64_t sub_252CE5B64()
{
  return sub_252CE5B0C(*v0);
}

uint64_t sub_252CE5B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE5A0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CE5B94(uint64_t a1)
{
  unint64_t v2 = sub_252CE79B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE5BD0(uint64_t a1)
{
  unint64_t v2 = sub_252CE79B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C48B70);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252CE979C();
  sub_252CB8E64(v3);
  sub_252CE79B0();
  sub_252CE96D8();
  sub_252D1A528();
  if (!v0) {
    sub_252D1A528();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_252AF4368();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C48B80);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F60C();
  sub_252CE79B0();
  sub_252B5F908();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
  }
  else
  {
    uint64_t v6 = sub_252D1A448();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_252D1A448();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = sub_252CE9570();
    v13(v12);
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v14;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

void sub_252CE5EB8()
{
}

void sub_252CE5ED0()
{
}

BOOL static SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.== infix(_:_:)(uint64_t a1)
{
  sub_252B5F824(a1);
  BOOL v7 = v7 && v5 == v6;
  BOOL result = 0;
  if (v7 || (sub_252D1A5D8() & 1) != 0)
  {
    if (v1 == v3 && v2 == v4) {
      return 1;
    }
    sub_252B5F7B4();
    if (sub_252D1A5D8()) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_252CE5F48(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1EA90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_252CE5FD0()
{
  return 0xD000000000000017;
}

uint64_t sub_252CE5FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE5F48(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252CE601C(uint64_t a1)
{
  unint64_t v2 = sub_252CE79FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE6058(uint64_t a1)
{
  unint64_t v2 = sub_252CE79FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C48B88);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252AC3A68(v1, v1[3]);
  sub_252CE79FC();
  sub_252CE97A8();
  sub_252CE7A48();
  sub_252D1A578();
  uint64_t v3 = sub_252CE3198();
  v4(v3);
  sub_252AF4368();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C48BA0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F60C();
  sub_252CE79FC();
  sub_252B5F908();
  if (!v0)
  {
    sub_252CE7A94();
    sub_252BA5ABC();
    uint64_t v6 = sub_252CE9570();
    v7(v6);
    *(_OWORD *)uint64_t v4 = v8;
    *(void *)(v4 + 16) = v9;
    *(void *)(v4 + 24) = v10;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
  sub_252AF4368();
}

void sub_252CE6290()
{
}

void sub_252CE62A8()
{
}

uint64_t static SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_252CE62CC(uint64_t a1)
{
  unint64_t v2 = sub_252CE7AE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE6308(uint64_t a1)
{
  unint64_t v2 = sub_252CE7AE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.encode(to:)(void *a1)
{
  uint64_t v3 = sub_252AC3A24(&qword_269C48BB0);
  sub_252AEDBD0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_252B5F630();
  sub_252CB8E64(a1);
  sub_252CE7AE0();
  sub_252CE96D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.init(from:)(uint64_t a1)
{
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
}

uint64_t sub_252CE6430(uint64_t a1)
{
  return SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.init(from:)(a1);
}

uint64_t sub_252CE6448(void *a1)
{
  return SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.encode(to:)(a1);
}

uint64_t static SessionStatusUpdate.IntermediateQueryResult.Source.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  if (v4 == 1)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      BOOL v9 = *(void *)a1 == v6 && *(void *)(a1 + 8) == v5;
      if (v9 || (sub_252D1A5D8() & 1) != 0)
      {
        if (v3 == v8 && v2 == v7)
        {
          uint64_t v12 = 1;
          uint64_t v37 = sub_252CE96F4();
          sub_252ACE888(v37, v38, v39, v40, v41);
          sub_252CE9624();
          sub_252CE9600();
          uint64_t v42 = sub_252CE96F4();
          sub_252AD17B0(v42, v43, v44, v45, v46);
          return v12;
        }
        char v11 = sub_252D1A5D8();
        uint64_t v12 = 1;
        sub_252CE9724();
        sub_252CE9624();
        sub_252CE9600();
        uint64_t v13 = sub_252CE970C();
        sub_252AD17B0(v13, v14, v15, v16, v17);
        if (v11) {
          return v12;
        }
        return 0;
      }
      sub_252CE9724();
      sub_252CE9624();
      sub_252CE9600();
      uint64_t v31 = sub_252CE970C();
LABEL_18:
      sub_252AD17B0(v31, v32, v33, v34, v35);
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_17:
    uint64_t v22 = sub_252CE9748();
    sub_252ACE888(v22, v23, v24, v25, v26);
    uint64_t v27 = sub_252CE9828();
    sub_252AD17B0(v27, v28, v29, v30, v4);
    uint64_t v31 = sub_252CE9748();
    goto LABEL_18;
  }
  if (*(unsigned char *)(a2 + 32)) {
    goto LABEL_17;
  }
  uint64_t v18 = sub_252CE9828();
  sub_252AD17B0(v18, v19, v20, v21, 0);
  sub_252AD17B0(v6, v5, v8, v7, 0);
  return 1;
}

unint64_t sub_252CE65C8()
{
  unint64_t result = qword_269C48B08;
  if (!qword_269C48B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B08);
  }
  return result;
}

unint64_t sub_252CE6614()
{
  unint64_t result = qword_269C48B10;
  if (!qword_269C48B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B10);
  }
  return result;
}

unint64_t sub_252CE6660()
{
  unint64_t result = qword_269C48B18;
  if (!qword_269C48B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B18);
  }
  return result;
}

unint64_t sub_252CE66AC()
{
  unint64_t result = qword_269C48B20;
  if (!qword_269C48B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B20);
  }
  return result;
}

unint64_t sub_252CE66F8()
{
  unint64_t result = qword_269C48B28;
  if (!qword_269C48B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B28);
  }
  return result;
}

uint64_t sub_252CE6744(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616553696E6D6FLL && a2 == 0xEA00000000006863;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1EAB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CE6840(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x72616553696E6D6FLL;
  }
}

uint64_t sub_252CE6880(uint64_t a1)
{
  unint64_t v2 = sub_252CE7B78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE68BC(uint64_t a1)
{
  unint64_t v2 = sub_252CE7B78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CE68F8()
{
  return sub_252CE6840(*v0);
}

uint64_t sub_252CE6900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE6744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CE6928(uint64_t a1)
{
  unint64_t v2 = sub_252CE7B2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE6964(uint64_t a1)
{
  unint64_t v2 = sub_252CE7B2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252CE69A0(uint64_t a1)
{
  unint64_t v2 = sub_252CE7C10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE69DC(uint64_t a1)
{
  unint64_t v2 = sub_252CE7C10();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStatusUpdate.IntermediateQueryResult.Source.encode(to:)()
{
  sub_252AF4380();
  sub_252CE981C();
  sub_252AC3A24(&qword_269C48BC0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC3A24(&qword_269C48BC8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C48BD0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252AC423C();
  sub_252CE979C();
  int v5 = *(unsigned __int8 *)(v0 + 32);
  sub_252AC3A68(v1, v1[3]);
  sub_252CE7B2C();
  sub_252D1A738();
  if (v5 == 1)
  {
    sub_252CE7B78();
    sub_252D1A4D8();
    sub_252CE7BC4();
  }
  else
  {
    sub_252CE7C10();
    sub_252D1A4D8();
    sub_252CE7C5C();
  }
  sub_252D1A578();
  sub_252B5F53C();
  v6();
  sub_252B5F53C();
  v7();
  sub_252AF4368();
}

void SessionStatusUpdate.IntermediateQueryResult.Source.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  sub_252CE981C();
  char v41 = v12;
  sub_252AC3A24(&qword_269C48C00);
  sub_252AEDBD0();
  uint64_t v43 = v14;
  uint64_t v44 = v13;
  MEMORY[0x270FA5388](v13);
  sub_252B23278();
  uint64_t v15 = sub_252AC3A24(&qword_269C48C08);
  sub_252AEDBD0();
  uint64_t v42 = v16;
  MEMORY[0x270FA5388](v17);
  sub_252AC423C();
  sub_252AC3A24(&qword_269C48C10);
  sub_252AEDBD0();
  uint64_t v45 = v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v11[4];
  sub_252AC3A68(v11, v11[3]);
  sub_252CE7B2C();
  sub_252B5F908();
  if (a10) {
    goto LABEL_8;
  }
  v40[1] = v15;
  v40[2] = v10;
  if (!*(void *)(sub_252D1A4C8() + 16) || (uint64_t v23 = sub_252CE95D8(), sub_252B5F440(v23), sub_252CE97C8(), v22))
  {
    sub_252D1A308();
    swift_allocError();
    uint64_t v25 = v24;
    sub_252AC3A24(&qword_269C42E78);
    void *v25 = &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source;
    sub_252D1A3F8();
    sub_252CE9684();
    uint64_t v26 = sub_252CE9788();
    v27(v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_252CE9760();
    v29(v28);
LABEL_8:
    uint64_t v30 = (uint64_t)v11;
    goto LABEL_9;
  }
  if (v21)
  {
    LOBYTE(v46) = 1;
    sub_252CE7B78();
    sub_252CE96B0();
    sub_252CE7CA8();
    sub_252D1A498();
    sub_252B5F53C();
    v31();
    swift_unknownObjectRelease();
    sub_252CE9584();
    v32();
    uint64_t v33 = v46;
    uint64_t v34 = v47;
    uint64_t v35 = v48;
    uint64_t v36 = v49;
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_252CE7C10();
    sub_252CE97E8();
    sub_252CE7CF4();
    sub_252D1A498();
    sub_252B5F53C();
    v37();
    swift_unknownObjectRelease();
    sub_252CE9584();
    v38();
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v39 = v41;
  *char v41 = v33;
  v39[1] = v34;
  v39[2] = v35;
  v39[3] = v36;
  *((unsigned char *)v39 + 32) = (_BYTE)v21;
  uint64_t v30 = (uint64_t)v11;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v30);
  sub_252AF4368();
}

uint64_t sub_252CE70FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252CE723C(char a1)
{
  if (!a1) {
    return 0x7972657571;
  }
  if (a1 == 1) {
    return 0x656372756F73;
  }
  return 0x73746C75736572;
}

void sub_252CE7290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionStatusUpdate.IntermediateQueryResult.Source.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CE72A8()
{
}

uint64_t sub_252CE72C0()
{
  return sub_252CE723C(*v0);
}

uint64_t sub_252CE72C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CE70FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CE72F0(uint64_t a1)
{
  unint64_t v2 = sub_252CE7D40();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CE732C(uint64_t a1)
{
  unint64_t v2 = sub_252CE7D40();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionStatusUpdate.IntermediateQueryResult.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C48C28);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252CE979C();
  sub_252AC3A68(v3, v3[3]);
  sub_252CE7D40();
  sub_252D1A738();
  sub_252D1A528();
  if (!v0)
  {
    sub_252CE7D8C();
    sub_252D1A578();
    sub_252AC3A24(&qword_269C446F0);
    sub_252CE7E24((unint64_t *)&qword_269C446F8, &qword_269C440E0);
    sub_252D1A578();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_252AF4368();
}

void SessionStatusUpdate.IntermediateQueryResult.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C48C40);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252CB8E64(v2);
  sub_252CE7D40();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    LOBYTE(v20) = 0;
    uint64_t v6 = sub_252D1A448();
    uint64_t v8 = v7;
    uint64_t v19 = v6;
    sub_252CE7DD8();
    swift_bridgeObjectRetain();
    sub_252D1A498();
    sub_252AC3A24(&qword_269C446F0);
    sub_252ACE888(v20, v21, v22, v23, v24);
    sub_252CE7E24((unint64_t *)&qword_269C44708, &qword_269C440F0);
    sub_252D1A498();
    uint64_t v9 = sub_252CE9648();
    v10(v9);
    swift_bridgeObjectRetain();
    sub_252ACE888(v20, v21, v22, v23, v24);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_252CE9774();
    sub_252AD17B0(v11, v12, v13, v14, v24);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v19;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v20;
    *(void *)(v4 + 24) = v21;
    *(void *)(v4 + 32) = v22;
    *(void *)(v4 + 40) = v23;
    *(unsigned char *)(v4 + 48) = v24;
    *(void *)(v4 + 56) = v20;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_252CE9774();
    sub_252AD17B0(v15, v16, v17, v18, v24);
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

void sub_252CE789C()
{
}

void sub_252CE78B4()
{
}

unint64_t sub_252CE78CC()
{
  unint64_t result = qword_269C48B48;
  if (!qword_269C48B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B48);
  }
  return result;
}

unint64_t sub_252CE7918()
{
  unint64_t result = qword_269C48B50;
  if (!qword_269C48B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B50);
  }
  return result;
}

unint64_t sub_252CE7964()
{
  unint64_t result = qword_269C48B60;
  if (!qword_269C48B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B60);
  }
  return result;
}

unint64_t sub_252CE79B0()
{
  unint64_t result = qword_269C48B78;
  if (!qword_269C48B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B78);
  }
  return result;
}

unint64_t sub_252CE79FC()
{
  unint64_t result = qword_269C48B90;
  if (!qword_269C48B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B90);
  }
  return result;
}

unint64_t sub_252CE7A48()
{
  unint64_t result = qword_269C48B98;
  if (!qword_269C48B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48B98);
  }
  return result;
}

unint64_t sub_252CE7A94()
{
  unint64_t result = qword_269C48BA8;
  if (!qword_269C48BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BA8);
  }
  return result;
}

unint64_t sub_252CE7AE0()
{
  unint64_t result = qword_269C48BB8;
  if (!qword_269C48BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BB8);
  }
  return result;
}

unint64_t sub_252CE7B2C()
{
  unint64_t result = qword_269C48BD8;
  if (!qword_269C48BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BD8);
  }
  return result;
}

unint64_t sub_252CE7B78()
{
  unint64_t result = qword_269C48BE0;
  if (!qword_269C48BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BE0);
  }
  return result;
}

unint64_t sub_252CE7BC4()
{
  unint64_t result = qword_269C48BE8;
  if (!qword_269C48BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BE8);
  }
  return result;
}

unint64_t sub_252CE7C10()
{
  unint64_t result = qword_269C48BF0;
  if (!qword_269C48BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BF0);
  }
  return result;
}

unint64_t sub_252CE7C5C()
{
  unint64_t result = qword_269C48BF8;
  if (!qword_269C48BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48BF8);
  }
  return result;
}

unint64_t sub_252CE7CA8()
{
  unint64_t result = qword_269C48C18;
  if (!qword_269C48C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C18);
  }
  return result;
}

unint64_t sub_252CE7CF4()
{
  unint64_t result = qword_269C48C20;
  if (!qword_269C48C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C20);
  }
  return result;
}

unint64_t sub_252CE7D40()
{
  unint64_t result = qword_269C48C30;
  if (!qword_269C48C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C30);
  }
  return result;
}

unint64_t sub_252CE7D8C()
{
  unint64_t result = qword_269C48C38;
  if (!qword_269C48C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C38);
  }
  return result;
}

unint64_t sub_252CE7DD8()
{
  unint64_t result = qword_269C48C48;
  if (!qword_269C48C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C48);
  }
  return result;
}

uint64_t sub_252CE7E24(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252AEA288(&qword_269C446F0);
    sub_252CE7EA4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252CE7EA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252D19BE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for SessionStatusUpdate()
{
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwxx_0(uint64_t *a1)
{
  return sub_252AD1724(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwcp_0(uint64_t a1, uint64_t *a2)
{
  sub_252CE9594(a1, a2);
  sub_252CE9808();
  return v2;
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwca_0(uint64_t a1, uint64_t *a2)
{
  sub_252CE9594(a1, a2);
  sub_252CE9808();
  sub_252AD1724(v3, v4, v5, v6, v7, v8, v9);
  return v2;
}

uint64_t *_s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  long long v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  long long v11 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v11;
  sub_252AD1724(v3, v5, v4, v6, v7, v8, v9);
  return a1;
}

uint64_t _s16IntelligenceFlow19SessionStatusUpdateV7PayloadOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if ((a2 & 0x80000000) == 0 || !*(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(void *)(a1 + 48) >> 1;
    if (v2 > 0x80000000) {
      return sub_252B989F4(~v2);
    }
    return sub_252B989F4(-1);
  }
  return sub_252B989F4(*(_DWORD *)a1 + 0x7FFFFFFF);
}

double sub_252CE805C(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = 2 * -a2;
      *(void *)(a1 + 56) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_252CE80BC(uint64_t a1)
{
  return *(void *)(a1 + 48) >> 63;
}

uint64_t sub_252CE80C8(uint64_t result)
{
  *(void *)(result + 48) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_252CE80D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(void *)(result + 48) & 1 | (a2 << 63);
  return result;
}

void type metadata accessor for SessionStatusUpdate.Payload()
{
}

uint64_t destroy for SessionStatusUpdate.ToolExecutionProgressUpdate()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionStatusUpdate.ToolExecutionProgressUpdate(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionStatusUpdate.ToolExecutionProgressUpdate(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionStatusUpdate.ToolExecutionProgressUpdate(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionStatusUpdate.ToolExecutionProgressUpdate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionStatusUpdate.ToolExecutionProgressUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)double result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for SessionStatusUpdate.ToolExecutionProgressUpdate()
{
}

uint64_t destroy for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_252AD17B0(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_252ACE888(v5, v6, v7, v8, v9);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_252ACE888(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  sub_252AD17B0(v9, v10, v11, v12, v13);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionStatusUpdate.IntermediateQueryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  long long v11 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 48) = v5;
  sub_252AD17B0(v6, v7, v8, v9, v10);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult()
{
}

uint64_t destroy for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1)
{
  return sub_252AD17B0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_252ACE888(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_252ACE888(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_252AD17B0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_252AD17B0(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionStatusUpdate.IntermediateQueryResult.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)double result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252CE86C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_252CE86C8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source()
{
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery()
{
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext()
{
}

void type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery()
{
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchCodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQueryCodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.OmniSearchQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.IntermediateQueryResult.Source.AppEntityStringQuery.ActionContext.CodingKeys;
}

unsigned char *_s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CE884CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.ToolExecutionProgressUpdate.CodingKeys;
}

unsigned char *_s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV6SourceO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CE8950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.Payload.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys()
{
  return &type metadata for SessionStatusUpdate.Payload.ExecutionProgressUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys()
{
  return &type metadata for SessionStatusUpdate.Payload.IntermediateQueryResultCodingKeys;
}

unsigned char *_s16IntelligenceFlow19SessionStatusUpdateV23IntermediateQueryResultV6SourceO20OmniSearchCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252CE8A44);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionStatusUpdate.CodingKeys()
{
  return &type metadata for SessionStatusUpdate.CodingKeys;
}

unint64_t sub_252CE8A80()
{
  unint64_t result = qword_269C48C50;
  if (!qword_269C48C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C50);
  }
  return result;
}

unint64_t sub_252CE8AD0()
{
  unint64_t result = qword_269C48C58;
  if (!qword_269C48C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C58);
  }
  return result;
}

unint64_t sub_252CE8B20()
{
  unint64_t result = qword_269C48C60;
  if (!qword_269C48C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C60);
  }
  return result;
}

unint64_t sub_252CE8B70()
{
  unint64_t result = qword_269C48C68;
  if (!qword_269C48C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C68);
  }
  return result;
}

unint64_t sub_252CE8BC0()
{
  unint64_t result = qword_269C48C70;
  if (!qword_269C48C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C70);
  }
  return result;
}

unint64_t sub_252CE8C10()
{
  unint64_t result = qword_269C48C78;
  if (!qword_269C48C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C78);
  }
  return result;
}

unint64_t sub_252CE8C60()
{
  unint64_t result = qword_269C48C80;
  if (!qword_269C48C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C80);
  }
  return result;
}

unint64_t sub_252CE8CB0()
{
  unint64_t result = qword_269C48C88;
  if (!qword_269C48C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C88);
  }
  return result;
}

unint64_t sub_252CE8D00()
{
  unint64_t result = qword_269C48C90;
  if (!qword_269C48C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C90);
  }
  return result;
}

unint64_t sub_252CE8D50()
{
  unint64_t result = qword_269C48C98;
  if (!qword_269C48C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48C98);
  }
  return result;
}

unint64_t sub_252CE8DA0()
{
  unint64_t result = qword_269C48CA0;
  if (!qword_269C48CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CA0);
  }
  return result;
}

unint64_t sub_252CE8DF0()
{
  unint64_t result = qword_269C48CA8;
  if (!qword_269C48CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CA8);
  }
  return result;
}

unint64_t sub_252CE8E40()
{
  unint64_t result = qword_269C48CB0;
  if (!qword_269C48CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CB0);
  }
  return result;
}

unint64_t sub_252CE8E90()
{
  unint64_t result = qword_269C48CB8;
  if (!qword_269C48CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CB8);
  }
  return result;
}

unint64_t sub_252CE8EE0()
{
  unint64_t result = qword_269C48CC0;
  if (!qword_269C48CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CC0);
  }
  return result;
}

unint64_t sub_252CE8F30()
{
  unint64_t result = qword_269C48CC8;
  if (!qword_269C48CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CC8);
  }
  return result;
}

unint64_t sub_252CE8F80()
{
  unint64_t result = qword_269C48CD0;
  if (!qword_269C48CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CD0);
  }
  return result;
}

unint64_t sub_252CE8FD0()
{
  unint64_t result = qword_269C48CD8;
  if (!qword_269C48CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CD8);
  }
  return result;
}

unint64_t sub_252CE9020()
{
  unint64_t result = qword_269C48CE0;
  if (!qword_269C48CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CE0);
  }
  return result;
}

unint64_t sub_252CE9070()
{
  unint64_t result = qword_269C48CE8;
  if (!qword_269C48CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CE8);
  }
  return result;
}

unint64_t sub_252CE90C0()
{
  unint64_t result = qword_269C48CF0;
  if (!qword_269C48CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CF0);
  }
  return result;
}

unint64_t sub_252CE9110()
{
  unint64_t result = qword_269C48CF8;
  if (!qword_269C48CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48CF8);
  }
  return result;
}

unint64_t sub_252CE9160()
{
  unint64_t result = qword_269C48D00;
  if (!qword_269C48D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D00);
  }
  return result;
}

unint64_t sub_252CE91B0()
{
  unint64_t result = qword_269C48D08;
  if (!qword_269C48D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D08);
  }
  return result;
}

unint64_t sub_252CE9200()
{
  unint64_t result = qword_269C48D10;
  if (!qword_269C48D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D10);
  }
  return result;
}

unint64_t sub_252CE9250()
{
  unint64_t result = qword_269C48D18;
  if (!qword_269C48D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D18);
  }
  return result;
}

unint64_t sub_252CE92A0()
{
  unint64_t result = qword_269C48D20;
  if (!qword_269C48D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D20);
  }
  return result;
}

unint64_t sub_252CE92F0()
{
  unint64_t result = qword_269C48D28;
  if (!qword_269C48D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D28);
  }
  return result;
}

unint64_t sub_252CE9340()
{
  unint64_t result = qword_269C48D30;
  if (!qword_269C48D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D30);
  }
  return result;
}

unint64_t sub_252CE9390()
{
  unint64_t result = qword_269C48D38;
  if (!qword_269C48D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D38);
  }
  return result;
}

unint64_t sub_252CE93E0()
{
  unint64_t result = qword_269C48D40;
  if (!qword_269C48D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D40);
  }
  return result;
}

unint64_t sub_252CE9430()
{
  unint64_t result = qword_269C48D48;
  if (!qword_269C48D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D48);
  }
  return result;
}

unint64_t sub_252CE9480()
{
  unint64_t result = qword_269C48D50;
  if (!qword_269C48D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D50);
  }
  return result;
}

unint64_t sub_252CE94D0()
{
  unint64_t result = qword_269C48D58;
  if (!qword_269C48D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D58);
  }
  return result;
}

unint64_t sub_252CE9520()
{
  unint64_t result = qword_269C48D60;
  if (!qword_269C48D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D60);
  }
  return result;
}

uint64_t sub_252CE9570()
{
  return v0;
}

uint64_t sub_252CE9594(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = a2[5];
  uint64_t v7 = a2[6];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  return sub_252ACE7FC(v8, v9, v3, v4, v5, v6, v7);
}

uint64_t sub_252CE95D8()
{
  return 1;
}

uint64_t sub_252CE9600()
{
  return sub_252AD17B0(v3, v2, v1, v0, 1);
}

uint64_t sub_252CE9624()
{
  return sub_252ACE888(v3, v2, v1, v0, 1);
}

uint64_t sub_252CE9648()
{
  return v0;
}

uint64_t sub_252CE9660()
{
  return v0;
}

uint64_t sub_252CE9684()
{
  return sub_252D1A2F8();
}

uint64_t sub_252CE96B0()
{
  return sub_252D1A3E8();
}

uint64_t sub_252CE96D8()
{
  return sub_252D1A738();
}

uint64_t sub_252CE96F4()
{
  return v0;
}

uint64_t sub_252CE970C()
{
  return v0;
}

uint64_t sub_252CE9724()
{
  return sub_252ACE888(v1, v0, v3, v2, 1);
}

uint64_t sub_252CE9748()
{
  return v0;
}

uint64_t sub_252CE9760()
{
  return v0;
}

uint64_t sub_252CE9774()
{
  return v0;
}

uint64_t sub_252CE9788()
{
  return v0;
}

uint64_t sub_252CE97A8()
{
  return sub_252D1A738();
}

uint64_t sub_252CE97C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_252CE97E8()
{
  return sub_252D1A3E8();
}

void sub_252CE9808()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  v0[6] = v7;
  v0[7] = v8;
}

void sub_252CE981C()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_252CE9828()
{
  return v0;
}

uint64_t StatementOutcome.asActionOutcome.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CE9C38((void (*)(void))type metadata accessor for StatementOutcome, (void (*)(uint64_t))type metadata accessor for ActionOutcome, a1);
}

uint64_t sub_252CE9868(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t ActionOutcome.asStatementOutcome.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CE9C38((void (*)(void))type metadata accessor for ActionOutcome, (void (*)(uint64_t))type metadata accessor for StatementOutcome, a1);
}

uint64_t sub_252CE98F4@<X0>(void (*a1)(void)@<X0>, void (*a2)(void)@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = v4;
  a1(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - v10;
  sub_252CE9BCC(v7, (uint64_t)&v36 - v10, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v15 = *((void *)v11 + 2);
      __int16 v16 = *((_WORD *)v11 + 28);
      *(_OWORD *)a4 = *(_OWORD *)v11;
      *(void *)(a4 + 16) = v15;
      *(_OWORD *)(a4 + 24) = *(_OWORD *)(v11 + 24);
      *(_OWORD *)(a4 + 40) = *(_OWORD *)(v11 + 40);
      *(_WORD *)(a4 + 56) = v16;
      uint64_t v17 = sub_252CE9C2C();
      a3(v17);
      sub_252B4C794();
      break;
    case 2:
      uint64_t v18 = *((void *)v11 + 2);
      *(_OWORD *)a4 = *(_OWORD *)v11;
      *(void *)(a4 + 16) = v18;
      uint64_t v19 = sub_252CE9C2C();
      a3(v19);
      sub_252B4C794();
      break;
    case 3:
      sub_252CE9C40(EnumCaseMultiPayload, v13, (void (*)(void))type metadata accessor for ParameterNeedsValue);
      uint64_t v20 = sub_252CE9C2C();
      a3(v20);
      sub_252B4C794();
      break;
    case 4:
      sub_252CE9C40(EnumCaseMultiPayload, v13, (void (*)(void))type metadata accessor for ParameterConfirmation);
      uint64_t v21 = sub_252CE9C2C();
      a3(v21);
      sub_252B4C794();
      break;
    case 5:
      uint64_t v22 = *((void *)v11 + 2);
      char v23 = v11[24];
      uint64_t v24 = *((void *)v11 + 4);
      uint64_t v25 = *((void *)v11 + 7);
      *(_OWORD *)a4 = *(_OWORD *)v11;
      *(void *)(a4 + 16) = v22;
      *(unsigned char *)(a4 + 24) = v23;
      *(void *)(a4 + 32) = v24;
      *(_OWORD *)(a4 + 40) = *(_OWORD *)(v11 + 40);
      *(void *)(a4 + 56) = v25;
      uint64_t v26 = sub_252CE9C2C();
      a3(v26);
      sub_252B4C794();
      break;
    case 6:
      sub_252CE9C40(EnumCaseMultiPayload, v13, (void (*)(void))type metadata accessor for ParameterNotAllowed);
      uint64_t v27 = sub_252CE9C2C();
      a3(v27);
      sub_252B4C794();
      break;
    case 7:
      sub_252CE9C40(EnumCaseMultiPayload, v13, (void (*)(void))type metadata accessor for ParameterCandidatesNotFound);
      uint64_t v28 = sub_252CE9C2C();
      a3(v28);
      sub_252B4C794();
      break;
    case 8:
      char v33 = v11[16];
      *(_OWORD *)a4 = *(_OWORD *)v11;
      *(unsigned char *)(a4 + 16) = v33;
      uint64_t v34 = sub_252CE9C2C();
      a3(v34);
      sub_252B4C794();
      break;
    case 9:
      *(void *)a4 = *(void *)v11;
      uint64_t v29 = sub_252CE9C2C();
      a3(v29);
      sub_252B4C794();
      break;
    case 10:
      uint64_t v30 = *((void *)v11 + 4);
      long long v31 = *((_OWORD *)v11 + 1);
      *(_OWORD *)a4 = *(_OWORD *)v11;
      *(_OWORD *)(a4 + 16) = v31;
      *(void *)(a4 + 32) = v30;
      uint64_t v32 = sub_252CE9C2C();
      a3(v32);
      sub_252B4C794();
      break;
    default:
      sub_252CE9C40(EnumCaseMultiPayload, v13, (void (*)(void))type metadata accessor for ActionSuccess);
      uint64_t v14 = sub_252CE9C2C();
      a3(v14);
      sub_252B4C794();
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_252CE9BCC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_252CE9C2C()
{
  return 0;
}

uint64_t sub_252CE9C38@<X0>(void (*a1)(void)@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X8>)
{
  return sub_252CE98F4(a1, a1, a2, a3);
}

uint64_t sub_252CE9C40(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_252CE9868(v4, v3, a3);
}

uint64_t sub_252CE9C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_252AC7C94(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = sub_252AC3A24(&qword_269C437E0);
    sub_252AEA304();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(a4, v9 + *(void *)(v11 + 72) * v8, v10);
    sub_252CEE49C();
  }
  else
  {
    sub_252AC3A24(&qword_269C437E0);
    uint64_t v12 = sub_252B7E590();
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v12, v13, v14, v15);
}

uint64_t sub_252CE9D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_252AC7C94(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = sub_252D19BE8();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * v8, v10);
    uint64_t v11 = a4;
    uint64_t v12 = 0;
    uint64_t v13 = v10;
  }
  else
  {
    uint64_t v13 = sub_252D19BE8();
    uint64_t v11 = a4;
    uint64_t v12 = 1;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, v12, 1, v13);
}

uint64_t sub_252CE9DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_252AC7C94(a1, a2), (v3 & 1) != 0))
  {
    type metadata accessor for ClientAction(0);
    sub_252AEA304();
    sub_252CEE274();
    sub_252CEE49C();
  }
  else
  {
    type metadata accessor for ClientAction(0);
    uint64_t v4 = sub_252B7E590();
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, v5, v6, v7);
}

uint64_t TypedValue.toBool.getter()
{
  sub_252D19BB8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252CEE41C();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AEDE38();
  v3();
  sub_252CEE3AC();
  if (v4() != *MEMORY[0x263F804E8])
  {
    uint64_t v12 = sub_252CEE46C();
    v13(v12);
    return 2;
  }
  uint64_t v5 = sub_252CEE4BC();
  v6(v5);
  swift_projectBox();
  sub_252AEDE38();
  v7();
  sub_252CEE3AC();
  if (v8() != *MEMORY[0x263F80458])
  {
    sub_252CEE45C();
    v14();
    swift_release();
    return 2;
  }
  uint64_t v9 = sub_252CEE484();
  v10(v9);
  uint64_t v11 = *v0;
  swift_release();
  return v11;
}

uint64_t TypedValue.toInt.getter()
{
  uint64_t v1 = sub_252D19BB8();
  sub_252AEDBD0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252CEE384();
  sub_252AEDBD0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_252CEE3B8();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void (**)(void))(v7 + 16);
  sub_252CEE3D4();
  v12();
  sub_252CEE3AC();
  if (v13() != *MEMORY[0x263F804E8]) {
    goto LABEL_9;
  }
  sub_252CEE3D4();
  v12();
  uint64_t v14 = sub_252CEE400();
  v15(v14);
  swift_projectBox();
  sub_252CEE3AC();
  if (v16() != *MEMORY[0x263F80478])
  {
    swift_release();
    goto LABEL_9;
  }
  sub_252CEE4E4();
  sub_252AEDE38();
  v17();
  (*(void (**)(double *, uint64_t))(v3 + 96))(v0, v1);
  double v18 = *v0;
  uint64_t result = swift_release();
  if (v18 != floor(v18))
  {
LABEL_9:
    uint64_t v20 = 0;
    goto LABEL_10;
  }
  if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v18 < 9.22337204e18)
  {
    uint64_t v20 = (uint64_t)v18;
LABEL_10:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v5);
    return v20;
  }
LABEL_13:
  __break(1u);
  return result;
}

void TypedValue.toDouble.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_252AFC730();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = sub_252D19BB8();
  sub_252AEDBD0();
  uint64_t v25 = v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_252CEE384();
  sub_252AEDBD0();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  sub_252CEE3B8();
  MEMORY[0x270FA5388](v31);
  char v33 = (char *)&a9 - v32;
  uint64_t v34 = *(void (**)(void))(v29 + 16);
  sub_252CEE3D4();
  v34();
  sub_252CEE3AC();
  if (v35() == *MEMORY[0x263F804E8])
  {
    sub_252CEE3D4();
    v34();
    uint64_t v36 = sub_252CEE400();
    v37(v36);
    swift_projectBox();
    sub_252CEE3AC();
    if (v38() == *MEMORY[0x263F80478])
    {
      sub_252CEE4E4();
      sub_252AEDE38();
      v39();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v25 + 96))(v20, v23);
    }
    else
    {
      swift_release();
    }
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v27);
  sub_252AFC718();
}

uint64_t TypedValue.toString.getter()
{
  sub_252D19BB8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252CEE41C();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AEDE38();
  v3();
  sub_252CEE3AC();
  if (v4() != *MEMORY[0x263F804E8])
  {
    uint64_t v12 = sub_252CEE46C();
    v13(v12);
    return 0;
  }
  uint64_t v5 = sub_252CEE4BC();
  v6(v5);
  swift_projectBox();
  sub_252AEDE38();
  v7();
  sub_252CEE3AC();
  if (v8() != *MEMORY[0x263F80488])
  {
    sub_252CEE45C();
    v14();
    swift_release();
    return 0;
  }
  uint64_t v9 = sub_252CEE484();
  v10(v9);
  uint64_t v11 = *v0;
  swift_release();
  return v11;
}

uint64_t TypedValue.toArray.getter()
{
  uint64_t v0 = sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_252B0011C();
  uint64_t v6 = v5 - v4;
  sub_252D19B78();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AEDE38();
  v8();
  sub_252CEE3AC();
  if (v9() == *MEMORY[0x263F804A0])
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 96))(v6, v0);
    swift_projectBox();
    sub_252AEDE38();
    v10();
    swift_release();
    uint64_t v11 = sub_252D19B68();
    sub_252CEE45C();
    v12();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
    return 0;
  }
  return v11;
}

void TypedValue.toObject.getter()
{
  sub_252AFC730();
  uint64_t v28 = v1;
  uint64_t v2 = sub_252D19C48();
  sub_252AEDBD0();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252CEE384();
  sub_252AEDBD0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_252B0011C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_252D19BA8();
  sub_252AEDBD0();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_252B0011C();
  uint64_t v19 = v18 - v17;
  sub_252AEDE38();
  v20();
  sub_252CEE3AC();
  if (v21() == *MEMORY[0x263F804C8])
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 96))(v12, v6);
    swift_projectBox();
    sub_252AEDE38();
    v22();
    uint64_t v23 = swift_release();
    MEMORY[0x2533C8C60](v23);
    uint64_t v24 = sub_252D19B88();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v28, v0, v2);
    uint64_t v25 = type metadata accessor for TypedValue.Object();
    *(void *)(v28 + *(int *)(v25 + 20)) = v24;
    uint64_t v26 = v28;
    uint64_t v27 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    uint64_t v25 = type metadata accessor for TypedValue.Object();
    uint64_t v26 = v28;
    uint64_t v27 = 1;
  }
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v26, v27, 1, v25);
  sub_252AFC718();
}

uint64_t type metadata accessor for TypedValue.Object()
{
  uint64_t result = qword_269C48DA0;
  if (!qword_269C48DA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TypedValue.Object.init(type:properties:)()
{
  sub_252CB9724();
  uint64_t v3 = v2;
  sub_252D19C48();
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v1);
  uint64_t result = type metadata accessor for TypedValue.Object();
  *(void *)(v3 + *(int *)(result + 20)) = v0;
  return result;
}

void TypedValue.subscript.getter()
{
  sub_252AFC730();
  unint64_t v3 = v2;
  uint64_t v19 = v4;
  uint64_t v5 = sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_252AC423C();
  uint64_t v9 = sub_252D19B78();
  sub_252AEDBD0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_252B23260();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v13(v1, v0, v5);
  sub_252CEE3AC();
  if (v14() != *MEMORY[0x263F804A0])
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
    sub_252D19BB8();
    uint64_t v17 = swift_allocBox();
    sub_252CEE4D4();
    sub_252CEE4AC();
    v18();
    uint64_t *v19 = v17;
    (*(void (**)(void))(v7 + 104))();
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 96))(v1, v5);
  swift_projectBox();
  sub_252AEDE38();
  v15();
  swift_release();
  uint64_t v16 = sub_252D19B68();
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v16 + 16) > v3)
  {
    v13((uint64_t)v19, v16+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v3, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v9);
LABEL_6:
    sub_252AFC718();
    return;
  }
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  unsigned int (*v18)(void);
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(void);
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;

  sub_252AFC730();
  uint64_t v4 = v3;
  uint64_t v29 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = sub_252AC3A24(&qword_269C450E0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_252CEE384();
  sub_252AEDBD0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_252AF4420();
  uint64_t v13 = sub_252D19BA8();
  sub_252AEDBD0();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_252B23260();
  sub_252AEDE38();
  v17();
  sub_252CEE3AC();
  if (v18() == *MEMORY[0x263F804C8])
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 96))(v2, v9);
    swift_projectBox();
    sub_252AEDE38();
    v19();
    swift_release();
    uint64_t v20 = sub_252D19B88();
    swift_bridgeObjectRetain();
    sub_252CE9D08(v29, v4, v20, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0, v13);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v1, 1, v9) == 1)
    {
      sub_252D19BB8();
      uint64_t v21 = swift_allocBox();
      sub_252CEE4D4();
      sub_252CEE4AC();
      v22();
      *uint64_t v7 = v21;
      uint64_t v23 = sub_252CEE444();
      v24(v23);
      sub_252AC8104(v1, &qword_269C450E0);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 32))(v7, v1, v9);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v9);
    sub_252D19BB8();
    uint64_t v25 = swift_allocBox();
    sub_252CEE4D4();
    sub_252CEE4AC();
    v26();
    *uint64_t v7 = v25;
    uint64_t v27 = sub_252CEE444();
    v28(v27);
  }
  sub_252AFC718();
}

uint64_t TypedValue.Object.type.getter@<X0>(uint64_t a1@<X8>)
{
  sub_252D19C48();
  sub_252AEA304();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t TypedValue.Object.type.setter(uint64_t a1)
{
  sub_252D19C48();
  sub_252AEA304();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);

  return v5(v1, a1, v3);
}

uint64_t (*TypedValue.Object.type.modify())()
{
  return nullsub_1;
}

uint64_t TypedValue.Object.properties.getter()
{
  type metadata accessor for TypedValue.Object();

  return swift_bridgeObjectRetain();
}

uint64_t TypedValue.Object.properties.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TypedValue.Object() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TypedValue.Object.properties.modify())()
{
  return nullsub_1;
}

void TypedValue.Object.description.getter()
{
  sub_252AFC730();
  uint64_t v31 = sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_252B0011C();
  uint64_t v28 = v5 - v4;
  uint64_t v6 = sub_252AC3A24(&qword_269C47D48);
  MEMORY[0x270FA5388](v6 - 8);
  sub_252CEE3B8();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - v8;
  v32[1] = 123;
  v32[2] = 0xE100000000000000;
  type metadata accessor for TypedValue.Object();
  uint64_t v10 = swift_bridgeObjectRetain();
  size_t v11 = sub_252CEBD8C(v10);
  swift_bridgeObjectRelease();
  v32[0] = v11;
  sub_252CEBF20(v32);
  size_t v12 = v32[0];
  unint64_t v13 = *(void *)(v32[0] + 16);
  uint64_t v29 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v30 = (void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  swift_retain();
  unint64_t v14 = 0;
  uint64_t v27 = v9;
  for (uint64_t i = v31; ; (*v29)(v25, i))
  {
    if (v14 == v13)
    {
      uint64_t v16 = sub_252AC3A24(&qword_269C43838);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 1, 1, v16);
      unint64_t v14 = v13;
    }
    else
    {
      if (v14 >= *(void *)(v12 + 16))
      {
        __break(1u);
        swift_release();
        __break(1u);
        return;
      }
      uint64_t v17 = *(void *)(sub_252AC3A24(&qword_269C43838) - 8);
      sub_252CEBFCC(v12+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v14++, v0);
      sub_252CEE49C();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v18, v19, v20, v21);
    }
    sub_252CEE318();
    uint64_t v22 = sub_252AC3A24(&qword_269C43838);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v22) == 1) {
      break;
    }
    uint64_t v23 = &v9[*(int *)(v22 + 48)];
    uint64_t v24 = v28;
    (*v30)(v28, v23, i);
    sub_252D19DD8();
    swift_bridgeObjectRelease();
    sub_252D19DD8();
    sub_252D19BC8();
    sub_252D19DD8();
    swift_bridgeObjectRelease();
    sub_252D19DD8();
    uint64_t v25 = v24;
    uint64_t v9 = v27;
  }
  swift_release_n();
  if (v13)
  {
    sub_252CEB468();
    swift_bridgeObjectRelease();
    sub_252CEB468();
    swift_bridgeObjectRelease();
  }
  sub_252D19DD8();
  sub_252AFC718();
}

uint64_t sub_252CEB468()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v2 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_252D19DC8();
  return sub_252D19DF8();
}

void static TypedValue.Object.== infix(_:_:)()
{
  sub_252CB9724();
  if (sub_252D19C38())
  {
    type metadata accessor for TypedValue.Object();
    sub_252BB3204();
  }
}

uint64_t TypedValue.Object.hash(into:)(long long *a1)
{
  sub_252D19C48();
  sub_252CEE2D0(&qword_269C48D68, MEMORY[0x263F80768]);
  sub_252D19CD8();
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for TypedValue.Object() + 20));
  swift_bridgeObjectRetain();
  sub_252CED604(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_252CEB5D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CEB6C0(char a1)
{
  if (a1) {
    return 0x69747265706F7270;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_252CEB6F4()
{
  return sub_252CEB6C0(*v0);
}

uint64_t sub_252CEB6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CEB5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CEB724(uint64_t a1)
{
  unint64_t v2 = sub_252CEDA4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CEB760(uint64_t a1)
{
  unint64_t v2 = sub_252CEDA4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TypedValue.Object.encode(to:)(void *a1)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C48D70);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252AC3A68(a1, a1[3]);
  sub_252CEDA4C();
  sub_252D1A738();
  sub_252D19C48();
  sub_252CEE2D0(&qword_269C48D80, MEMORY[0x263F80768]);
  sub_252CB82A0();
  if (!v1)
  {
    type metadata accessor for TypedValue.Object();
    sub_252AC3A24(&qword_269C44218);
    sub_252C06534();
    sub_252CB82A0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t TypedValue.Object.hashValue.getter()
{
  sub_252D1A6A8();
  sub_252D19C48();
  sub_252CEE2D0(&qword_269C48D68, MEMORY[0x263F80768]);
  sub_252D19CD8();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TypedValue.Object() + 20));
  swift_bridgeObjectRetain();
  sub_252CED604(v3, v1);
  swift_bridgeObjectRelease();
  return sub_252D1A6E8();
}

uint64_t TypedValue.Object.init(from:)(void *a1)
{
  uint64_t v14 = sub_252D19C48();
  sub_252AEDBD0();
  uint64_t v13 = v5;
  MEMORY[0x270FA5388](v6);
  sub_252B23278();
  sub_252AC3A24(&qword_269C48D88);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AF4420();
  uint64_t v8 = type metadata accessor for TypedValue.Object();
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252AC423C();
  sub_252AC3A68(a1, a1[3]);
  sub_252CEDA4C();
  sub_252D1A718();
  if (v1) {
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  }
  sub_252CEE2D0(&qword_269C48D90, MEMORY[0x263F80768]);
  sub_252D1A498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v2, v14);
  sub_252AC3A24(&qword_269C44218);
  sub_252C06678();
  sub_252D1A498();
  uint64_t v10 = sub_252CEE3E4();
  v11(v10);
  *(void *)(v3 + *(int *)(v8 + 20)) = v15;
  sub_252CEE274();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  return sub_252CEDA98(v3);
}

uint64_t sub_252CEBC98(void *a1)
{
  return TypedValue.Object.init(from:)(a1);
}

uint64_t sub_252CEBCB0(void *a1)
{
  return TypedValue.Object.encode(to:)(a1);
}

uint64_t sub_252CEBCD8(uint64_t a1, uint64_t a2)
{
  sub_252D1A6A8();
  sub_252D19C48();
  sub_252CEE2D0(&qword_269C48D68, MEMORY[0x263F80768]);
  sub_252D19CD8();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_252CED604(v6, v4);
  swift_bridgeObjectRelease();
  return sub_252D1A6E8();
}

size_t sub_252CEBD8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_252AC3A24(&qword_269C43840);
  uint64_t v2 = *(void *)(sub_252AC3A24(&qword_269C43838) - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v5);
  if (v3)
  {
    if (result - v4 != 0x8000000000000000 || v3 != -1)
    {
      v5[2] = v1;
      v5[3] = 2 * ((uint64_t)(result - v4) / v3);
      sub_252AC3A24(&qword_269C43838);
      sub_252CED2D8();
      uint64_t v9 = v8;
      swift_bridgeObjectRetain();
      sub_252CB7DF8();
      if (v9 == v1) {
        return (size_t)v5;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_252CEBF20(size_t *a1)
{
  uint64_t v2 = *(void *)(sub_252AC3A24(&qword_269C43838) - 8);
  size_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    size_t v3 = sub_252CEE370(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_252CEC034(v5);
  *a1 = v3;
}

uint64_t sub_252CEBFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C43838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_252CEC034(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v144 = sub_252AC3A24(&qword_269C43838);
  uint64_t v4 = *(void *)(v144 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v144);
  uint64_t v139 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v149 = (char *)&v130 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  size_t v11 = (char *)&v130 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v130 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char **)((char *)&v130 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  __n128 v141 = (char **)((char *)&v130 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v137 = (char **)((char *)&v130 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v136 = (char **)((char *)&v130 - v22);
  uint64_t v151 = a1;
  uint64_t v23 = a1[1];
  uint64_t v24 = sub_252D1A5A8();
  if (v24 >= v23)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      if (v23) {
        sub_252CECAA0(0, v23, 1, v151);
      }
      return;
    }
    goto LABEL_158;
  }
  uint64_t v25 = v24;
  uint64_t v132 = sub_252C05E68(v23 / 2);
  uint64_t v133 = v23;
  unint64_t v142 = v26;
  uint64_t v143 = v4;
  if (v23 <= 0)
  {
LABEL_122:
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
    unint64_t v72 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_123:
    if (v72 < 2)
    {
LABEL_134:
      swift_bridgeObjectRelease();
      if (v133 >= -1) {
        goto LABEL_135;
      }
      goto LABEL_162;
    }
    uint64_t v123 = *v151;
    while (1)
    {
      unint64_t v124 = v72 - 2;
      if (v72 < 2) {
        break;
      }
      if (!v123) {
        goto LABEL_166;
      }
      uint64_t v125 = v28;
      uint64_t v126 = *(void *)&v28[16 * v124 + 32];
      uint64_t v127 = *(void *)&v28[16 * v72 + 24];
      sub_252CECD40(v123 + *(void *)(v143 + 72) * v126, v123 + *(void *)(v143 + 72) * *(void *)&v28[16 * v72 + 16], v123 + *(void *)(v143 + 72) * v127, v142);
      if (v2) {
        goto LABEL_120;
      }
      if (v127 < v126) {
        goto LABEL_153;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v125 = sub_252CED2C4((uint64_t)v28);
      }
      if (v124 >= *((void *)v125 + 2)) {
        goto LABEL_154;
      }
      uint64_t v128 = &v125[16 * v124 + 32];
      *(void *)uint64_t v128 = v126;
      *((void *)v128 + 1) = v127;
      unint64_t v129 = *((void *)v125 + 2);
      if (v72 > v129) {
        goto LABEL_155;
      }
      memmove(&v125[16 * v72 + 16], &v125[16 * v72 + 32], 16 * (v129 - v72));
      *((void *)v125 + 2) = v129 - 1;
      unint64_t v72 = v129 - 1;
      uint64_t v28 = v125;
      if (v129 <= 2) {
        goto LABEL_134;
      }
    }
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
    return;
  }
  uint64_t v131 = v25;
  unint64_t v145 = v14;
  uint64_t v27 = 0;
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v29 = v23;
  uint64_t v147 = v11;
  uint64_t v134 = v17;
  while (1)
  {
    uint64_t v30 = v27;
    uint64_t v31 = v27 + 1;
    uint64_t v140 = v27;
    uint64_t v146 = v29;
    if (v27 + 1 >= v29)
    {
      uint64_t v39 = v11;
      uint64_t v40 = v27 + 1;
    }
    else
    {
      uint64_t v135 = v2;
      uint64_t v32 = *v151;
      uint64_t v33 = *(void *)(v4 + 72);
      uint64_t v34 = v136;
      sub_252CEBFCC(*v151 + v33 * v31, (uint64_t)v136);
      uint64_t v138 = v32;
      uint64_t v150 = v33;
      uint64_t v35 = v32 + v33 * v30;
      uint64_t v36 = v137;
      sub_252CEBFCC(v35, (uint64_t)v137);
      if (*v34 == *v36 && v34[1] == v36[1]) {
        int v38 = 0;
      }
      else {
        int v38 = sub_252D1A5D8();
      }
      sub_252AC8104((uint64_t)v137, &qword_269C43838);
      sub_252AC8104((uint64_t)v136, &qword_269C43838);
      uint64_t v148 = v30 + 2;
      if (v30 + 2 < v29)
      {
        uint64_t v41 = v150 * v31;
        uint64_t v42 = v138;
        uint64_t v43 = v150 * (v30 + 2);
        while (1)
        {
          uint64_t v44 = v141;
          sub_252CEBFCC(v42 + v43, (uint64_t)v141);
          sub_252CEBFCC(v42 + v41, (uint64_t)v17);
          BOOL v45 = *v44 == *v17 && v44[1] == v17[1];
          int v46 = v45 ? 0 : sub_252D1A5D8();
          sub_252AC8104((uint64_t)v17, &qword_269C43838);
          sub_252AC8104((uint64_t)v141, &qword_269C43838);
          if ((v38 ^ v46)) {
            break;
          }
          size_t v11 = v147;
          v42 += v150;
          if (++v148 >= v146)
          {
            uint64_t v148 = v146;
            goto LABEL_24;
          }
        }
        size_t v11 = v147;
LABEL_24:
        uint64_t v30 = v140;
      }
      uint64_t v39 = v11;
      if (v38)
      {
        uint64_t v40 = v148;
        if (v148 < v30) {
          goto LABEL_159;
        }
        uint64_t v4 = v143;
        if (v30 < v148)
        {
          uint64_t v47 = 0;
          uint64_t v48 = v150 * (v148 - 1);
          uint64_t v49 = v30;
          uint64_t v50 = v148 * v150;
          uint64_t v51 = v49;
          uint64_t v52 = v49 * v150;
          do
          {
            if (v51 != v40 + v47 - 1)
            {
              uint64_t v53 = v138;
              if (!v138) {
                goto LABEL_165;
              }
              unint64_t v54 = v138 + v52;
              sub_252CEE318();
              if (v52 < v48 || v54 >= v53 + v50)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v52 != v48)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_252CEE318();
              uint64_t v39 = v147;
              uint64_t v40 = v148;
            }
            ++v51;
            --v47;
            v48 -= v150;
            v50 -= v150;
            v52 += v150;
          }
          while (v51 < v40 + v47);
          uint64_t v4 = v143;
          uint64_t v2 = v135;
          uint64_t v30 = v140;
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v40 = v148;
        uint64_t v4 = v143;
      }
      uint64_t v2 = v135;
    }
LABEL_44:
    if (v40 < v146)
    {
      if (__OFSUB__(v40, v30)) {
        goto LABEL_157;
      }
      if (v40 - v30 < v131)
      {
        if (__OFADD__(v30, v131)) {
          goto LABEL_160;
        }
        uint64_t v56 = v146;
        if (v30 + v131 < v146) {
          uint64_t v56 = v30 + v131;
        }
        if (v56 < v30) {
          goto LABEL_161;
        }
        if (v40 != v56)
        {
          uint64_t v130 = v28;
          uint64_t v135 = v2;
          uint64_t v57 = *(void *)(v4 + 72);
          uint64_t v150 = v57 * (v40 - 1);
          uint64_t v146 = v57;
          uint64_t v58 = v40 * v57;
          uint64_t v138 = v56;
          do
          {
            uint64_t v59 = 0;
            uint64_t v60 = v30;
            uint64_t v61 = v39;
            uint64_t v148 = v40;
            while (1)
            {
              uint64_t v62 = *v151;
              uint64_t v63 = v58;
              uint64_t v64 = v58 + v59 + *v151;
              char v65 = v145;
              sub_252CEBFCC(v64, (uint64_t)v145);
              sub_252CEBFCC(v150 + v59 + v62, (uint64_t)v61);
              if (*v65 == *v61 && v65[1] == v61[1]) {
                break;
              }
              char v67 = sub_252D1A5D8();
              sub_252AC8104((uint64_t)v61, &qword_269C43838);
              sub_252AC8104((uint64_t)v65, &qword_269C43838);
              if ((v67 & 1) == 0) {
                goto LABEL_63;
              }
              if (!*v151) {
                goto LABEL_163;
              }
              uint64_t v58 = v63;
              sub_252CEE318();
              swift_arrayInitWithTakeFrontToBack();
              sub_252CEE318();
              uint64_t v61 = v147;
              v59 -= v146;
              ++v60;
              uint64_t v68 = v148;
              if (v148 == v60) {
                goto LABEL_64;
              }
            }
            sub_252AC8104((uint64_t)v61, &qword_269C43838);
            sub_252AC8104((uint64_t)v65, &qword_269C43838);
LABEL_63:
            uint64_t v68 = v148;
            uint64_t v58 = v63;
LABEL_64:
            uint64_t v39 = v61;
            uint64_t v40 = v68 + 1;
            v150 += v146;
            v58 += v146;
            uint64_t v30 = v140;
          }
          while (v40 != v138);
          uint64_t v40 = v138;
          uint64_t v2 = v135;
          uint64_t v28 = v130;
        }
      }
    }
    if (v40 < v30) {
      goto LABEL_156;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v148 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v28 = sub_252CED1CC(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v71 = *((void *)v28 + 2);
    unint64_t v70 = *((void *)v28 + 3);
    unint64_t v72 = v71 + 1;
    size_t v11 = (char *)v39;
    uint64_t v73 = v2;
    if (v71 >= v70 >> 1) {
      uint64_t v28 = sub_252CED1CC((char *)(v70 > 1), v71 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v72;
    uint64_t v74 = v28 + 32;
    uint64_t v75 = &v28[16 * v71 + 32];
    uint64_t v76 = v148;
    *(void *)uint64_t v75 = v30;
    *((void *)v75 + 1) = v76;
    if (v71) {
      break;
    }
    unint64_t v72 = 1;
LABEL_114:
    uint64_t v29 = v151[1];
    uint64_t v27 = v148;
    uint64_t v2 = v73;
    uint64_t v17 = v134;
    uint64_t v4 = v143;
    if (v148 >= v29) {
      goto LABEL_123;
    }
  }
  while (1)
  {
    unint64_t v77 = v72 - 1;
    if (v72 >= 4)
    {
      uint64_t v82 = &v74[16 * v72];
      uint64_t v83 = *((void *)v82 - 8);
      uint64_t v84 = *((void *)v82 - 7);
      BOOL v88 = __OFSUB__(v84, v83);
      uint64_t v85 = v84 - v83;
      if (v88) {
        goto LABEL_141;
      }
      uint64_t v87 = *((void *)v82 - 6);
      uint64_t v86 = *((void *)v82 - 5);
      BOOL v88 = __OFSUB__(v86, v87);
      uint64_t v80 = v86 - v87;
      char v81 = v88;
      if (v88) {
        goto LABEL_142;
      }
      unint64_t v89 = v72 - 2;
      uint64_t v90 = &v74[16 * v72 - 32];
      uint64_t v92 = *(void *)v90;
      uint64_t v91 = *((void *)v90 + 1);
      BOOL v88 = __OFSUB__(v91, v92);
      uint64_t v93 = v91 - v92;
      if (v88) {
        goto LABEL_143;
      }
      BOOL v88 = __OFADD__(v80, v93);
      uint64_t v94 = v80 + v93;
      if (v88) {
        goto LABEL_145;
      }
      if (v94 >= v85)
      {
        long long v112 = &v74[16 * v77];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        BOOL v88 = __OFSUB__(v113, v114);
        uint64_t v115 = v113 - v114;
        if (v88) {
          goto LABEL_151;
        }
        BOOL v105 = v80 < v115;
        goto LABEL_103;
      }
    }
    else
    {
      if (v72 != 3)
      {
        uint64_t v106 = *((void *)v28 + 4);
        uint64_t v107 = *((void *)v28 + 5);
        BOOL v88 = __OFSUB__(v107, v106);
        uint64_t v99 = v107 - v106;
        char v100 = v88;
        goto LABEL_97;
      }
      uint64_t v79 = *((void *)v28 + 4);
      uint64_t v78 = *((void *)v28 + 5);
      BOOL v88 = __OFSUB__(v78, v79);
      uint64_t v80 = v78 - v79;
      char v81 = v88;
    }
    if (v81) {
      goto LABEL_144;
    }
    unint64_t v89 = v72 - 2;
    uint64_t v95 = &v74[16 * v72 - 32];
    uint64_t v97 = *(void *)v95;
    uint64_t v96 = *((void *)v95 + 1);
    BOOL v98 = __OFSUB__(v96, v97);
    uint64_t v99 = v96 - v97;
    char v100 = v98;
    if (v98) {
      goto LABEL_146;
    }
    uint64_t v101 = &v74[16 * v77];
    uint64_t v103 = *(void *)v101;
    uint64_t v102 = *((void *)v101 + 1);
    BOOL v88 = __OFSUB__(v102, v103);
    uint64_t v104 = v102 - v103;
    if (v88) {
      goto LABEL_148;
    }
    if (__OFADD__(v99, v104)) {
      goto LABEL_150;
    }
    if (v99 + v104 >= v80)
    {
      BOOL v105 = v80 < v104;
LABEL_103:
      if (v105) {
        unint64_t v77 = v89;
      }
      goto LABEL_105;
    }
LABEL_97:
    if (v100) {
      goto LABEL_147;
    }
    unint64_t v108 = &v74[16 * v77];
    uint64_t v110 = *(void *)v108;
    uint64_t v109 = *((void *)v108 + 1);
    BOOL v88 = __OFSUB__(v109, v110);
    uint64_t v111 = v109 - v110;
    if (v88) {
      goto LABEL_149;
    }
    if (v111 < v99) {
      goto LABEL_114;
    }
LABEL_105:
    unint64_t v116 = v77 - 1;
    if (v77 - 1 >= v72)
    {
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
      goto LABEL_152;
    }
    if (!*v151) {
      goto LABEL_164;
    }
    uint64_t v117 = v28;
    uint64_t v118 = &v74[16 * v116];
    uint64_t v119 = *(void *)v118;
    long long v120 = &v74[16 * v77];
    uint64_t v121 = *((void *)v120 + 1);
    sub_252CECD40(*v151 + *(void *)(v143 + 72) * *(void *)v118, *v151 + *(void *)(v143 + 72) * *(void *)v120, *v151 + *(void *)(v143 + 72) * v121, v142);
    if (v73) {
      break;
    }
    if (v121 < v119) {
      goto LABEL_138;
    }
    if (v77 > *((void *)v117 + 2)) {
      goto LABEL_139;
    }
    *(void *)uint64_t v118 = v119;
    *(void *)&v74[16 * v116 + 8] = v121;
    unint64_t v122 = *((void *)v117 + 2);
    if (v77 >= v122) {
      goto LABEL_140;
    }
    uint64_t v28 = v117;
    unint64_t v72 = v122 - 1;
    memmove(&v74[16 * v77], v120 + 16, 16 * (v122 - 1 - v77));
    *((void *)v117 + 2) = v122 - 1;
    size_t v11 = v147;
    if (v122 <= 2) {
      goto LABEL_114;
    }
  }
  uint64_t v2 = v73;
LABEL_120:
  swift_bridgeObjectRelease();
  if (v133 < -1)
  {
    __break(1u);
    goto LABEL_122;
  }
LABEL_135:
  *(void *)(v132 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_252CECAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = a1;
  uint64_t v25 = sub_252AC3A24(&qword_269C43838);
  uint64_t v7 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  size_t v11 = (uint64_t *)((char *)&v22 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (uint64_t *)((char *)&v22 - v14);
  uint64_t v27 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v30 = v16 * (v27 - 1);
    uint64_t v26 = v16;
    uint64_t v29 = v16 * v27;
    while (2)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v24;
      while (1)
      {
        uint64_t v19 = *a4;
        sub_252CEBFCC(v29 + v17 + *a4, (uint64_t)v15);
        sub_252CEBFCC(v30 + v17 + v19, (uint64_t)v11);
        if (*v15 == *v11 && v15[1] == v11[1]) {
          break;
        }
        char v21 = sub_252D1A5D8();
        sub_252AC8104((uint64_t)v11, &qword_269C43838);
        uint64_t result = sub_252AC8104((uint64_t)v15, &qword_269C43838);
        if (v21)
        {
          if (!*a4)
          {
            __break(1u);
            return result;
          }
          sub_252CEE318();
          swift_arrayInitWithTakeFrontToBack();
          uint64_t result = sub_252CEE318();
          v17 -= v26;
          if (v27 != ++v18) {
            continue;
          }
        }
        goto LABEL_13;
      }
      sub_252AC8104((uint64_t)v11, &qword_269C43838);
      uint64_t result = sub_252AC8104((uint64_t)v15, &qword_269C43838);
LABEL_13:
      v30 += v26;
      v29 += v26;
      if (++v27 != v23) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_252CECD40(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v53 = a4;
  unint64_t v55 = a3;
  uint64_t v54 = sub_252AC3A24(&qword_269C43838);
  uint64_t v6 = MEMORY[0x270FA5388](v54);
  uint64_t v8 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v58 = (uint64_t *)((char *)&v52 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v52 - v12);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v52 - v14);
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  int64_t v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_88;
  }
  int64_t v20 = v55 - a2;
  if (v55 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_89;
  }
  uint64_t v22 = v18 / v17;
  uint64_t v23 = v20 / v17;
  uint64_t v57 = v17;
  if (v18 / v17 >= v20 / v17)
  {
    unint64_t v36 = v53;
    sub_252B7B62C(a2, v20 / v17);
    unint64_t v26 = v36 + v23 * v17;
    if (v23 * v17 < 1 || a1 >= a2)
    {
      unint64_t v24 = v53;
    }
    else
    {
      uint64_t v56 = -v17;
      unint64_t v38 = v55;
      do
      {
        unint64_t v39 = v38;
        unint64_t v55 = v26;
        uint64_t v40 = v56;
        unint64_t v41 = v26 + v56;
        uint64_t v42 = v26 + v56;
        uint64_t v43 = v58;
        sub_252CEBFCC(v42, (uint64_t)v58);
        unint64_t v44 = a2 + v40;
        sub_252CEBFCC(a2 + v40, (uint64_t)v8);
        if (*v43 == *v8 && v43[1] == v8[1]) {
          char v46 = 0;
        }
        else {
          char v46 = sub_252D1A5D8();
        }
        unint64_t v38 = v39 + v56;
        sub_252AC8104((uint64_t)v8, &qword_269C43838);
        sub_252AC8104((uint64_t)v58, &qword_269C43838);
        if (v46)
        {
          if (v39 < a2 || v38 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            a2 = v44;
            unint64_t v26 = v55;
          }
          else
          {
            if (v39 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
            a2 = v44;
            unint64_t v26 = v55;
          }
        }
        else if (v39 < v55 || v38 >= v55)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v26 = v41;
        }
        else
        {
          if (v39 != v55) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v26 = v41;
        }
      }
      while (v26 > v53 && a2 > a1);
      unint64_t v24 = v53;
    }
  }
  else
  {
    unint64_t v24 = v53;
    sub_252B7B62C(a1, v18 / v17);
    uint64_t v25 = v22 * v17;
    unint64_t v26 = v24 + v22 * v17;
    if (v25 >= 1 && a2 < v55)
    {
      while (1)
      {
        sub_252CEBFCC(a2, (uint64_t)v15);
        sub_252CEBFCC(v24, (uint64_t)v13);
        if (*v15 == *v13 && v15[1] == v13[1]) {
          break;
        }
        char v29 = sub_252D1A5D8();
        sub_252AC8104((uint64_t)v13, &qword_269C43838);
        sub_252AC8104((uint64_t)v15, &qword_269C43838);
        if ((v29 & 1) == 0) {
          goto LABEL_27;
        }
        uint64_t v30 = v57;
        unint64_t v31 = a2 + v57;
        if (a1 < a2 || a1 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_39:
          uint64_t v30 = v57;
          goto LABEL_40;
        }
        if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_39;
        }
LABEL_40:
        a1 += v30;
        BOOL v35 = v24 >= v26 || v31 >= v55;
        a2 = v31;
        if (v35) {
          goto LABEL_82;
        }
      }
      sub_252AC8104((uint64_t)v13, &qword_269C43838);
      sub_252AC8104((uint64_t)v15, &qword_269C43838);
LABEL_27:
      uint64_t v30 = v57;
      unint64_t v33 = v24 + v57;
      if (a1 < v24 || a1 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (a1 == v24)
        {
LABEL_36:
          unint64_t v31 = a2;
          unint64_t v24 = v33;
          goto LABEL_40;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v30 = v57;
      goto LABEL_36;
    }
  }
LABEL_82:
  int64_t v50 = v26 - v24;
  if (v57 != -1 || v50 != 0x8000000000000000)
  {
    sub_252B7B62C(v24, v50 / v57);
    return;
  }
LABEL_90:
  __break(1u);
}

char *sub_252CED1CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_269C48DD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_252CED2C4(uint64_t a1)
{
  return sub_252CED1CC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_252CED2D8()
{
  sub_252AFC730();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int64_t v7 = v6;
  sub_252AC3A24(&qword_269C43838);
  sub_252AEDBD0();
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = v1;
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v35 = v1 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(v1 + 32);
  if (-v14 < 64) {
    uint64_t v15 = ~(-1 << -(char)v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  if (!v5)
  {
    int64_t v17 = 0;
LABEL_38:
    uint64_t v29 = v35;
    *int64_t v7 = v39;
    v7[1] = v29;
    v7[2] = ~v14;
    v7[3] = v17;
    _OWORD v7[4] = v16;
    sub_252AFC718();
    return;
  }
  if (!v3)
  {
    int64_t v17 = 0;
    goto LABEL_38;
  }
  if (v3 < 0) {
    goto LABEL_40;
  }
  uint64_t v32 = v14;
  unint64_t v33 = v7;
  int64_t v17 = 0;
  uint64_t v18 = 0;
  int64_t v34 = (unint64_t)(63 - v14) >> 6;
  int64_t v31 = v34 - 1;
  uint64_t v36 = v3;
  if (!v16) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v20 = v19 | (v17 << 6);
  while (1)
  {
    ++v18;
    uint64_t v24 = *(void *)(v39 + 56);
    uint64_t v25 = (uint64_t *)(*(void *)(v39 + 48) + 16 * v20);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    sub_252D19BE8();
    sub_252AEA304();
    (*(void (**)(char *, unint64_t))(v28 + 16))(&v12[*(int *)(v38 + 48)], v24 + *(void *)(v28 + 72) * v20);
    *(void *)uint64_t v12 = v26;
    *((void *)v12 + 1) = v27;
    sub_252CEE318();
    sub_252CEE318();
    if (v18 == v36)
    {
      swift_bridgeObjectRetain();
LABEL_37:
      uint64_t v14 = v32;
      int64_t v7 = v33;
      goto LABEL_38;
    }
    v5 += *(void *)(v37 + 72);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v21 >= v34) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    if (!v22)
    {
      v17 += 2;
      if (v21 + 1 >= v34)
      {
        unint64_t v16 = 0;
        int64_t v17 = v21;
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v17);
      if (v22) {
        goto LABEL_14;
      }
      int64_t v23 = v21 + 2;
      if (v21 + 2 >= v34) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v23);
      if (!v22)
      {
        int64_t v17 = v21 + 3;
        if (v21 + 3 >= v34)
        {
          unint64_t v16 = 0;
          int64_t v17 = v21 + 2;
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v17);
        if (v22)
        {
LABEL_14:
          int64_t v21 = v17;
          goto LABEL_18;
        }
        int64_t v23 = v21 + 4;
        if (v21 + 4 >= v34)
        {
LABEL_33:
          unint64_t v16 = 0;
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v21 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_41;
            }
            if (v21 >= v34)
            {
              unint64_t v16 = 0;
              int64_t v17 = v31;
              goto LABEL_37;
            }
            unint64_t v22 = *(void *)(v35 + 8 * v21);
            ++v23;
            if (v22) {
              goto LABEL_18;
            }
          }
        }
      }
      int64_t v21 = v23;
    }
LABEL_18:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v17 = v21;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_252CED604(long long *a1, uint64_t a2)
{
  char v46 = a1;
  uint64_t v48 = sub_252D19BE8();
  uint64_t v3 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  BOOL v45 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_252AC3A24(&qword_269C47D48);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v38 = a2 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v40 = v3 + 16;
  uint64_t v41 = v3;
  uint64_t v43 = (void (**)(char *, uint64_t))(v3 + 8);
  unint64_t v44 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  int64_t v39 = (unint64_t)(v12 + 63) >> 6;
  int64_t v37 = v39 - 1;
  uint64_t v42 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  int64_t v47 = 0;
  if (!v14) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v17 = v16;
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  unint64_t v19 = v18 | (v47 << 6);
LABEL_5:
  uint64_t v20 = v41;
  int64_t v21 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  unint64_t v24 = *(void *)(v42 + 56) + *(void *)(v41 + 72) * v19;
  uint64_t v25 = sub_252AC3A24(&qword_269C43838);
  (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(&v8[*(int *)(v25 + 48)], v24, v48);
  *(void *)uint64_t v8 = v23;
  *((void *)v8 + 1) = v22;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v25);
  swift_bridgeObjectRetain();
  uint64_t v16 = v17;
  while (1)
  {
    sub_252CEE318();
    uint64_t v31 = sub_252AC3A24(&qword_269C43838);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v31) == 1)
    {
      swift_release();
      return sub_252D1A6B8();
    }
    uint64_t v32 = v45;
    uint64_t v33 = v48;
    (*v44)(v45, &v10[*(int *)(v31 + 48)], v48);
    uint64_t v34 = *((void *)v46 + 8);
    long long v35 = v46[1];
    long long v49 = *v46;
    long long v50 = v35;
    long long v36 = v46[3];
    long long v51 = v46[2];
    long long v52 = v36;
    uint64_t v53 = v34;
    sub_252D19DB8();
    swift_bridgeObjectRelease();
    sub_252CEE2D0(&qword_269C48DC8, MEMORY[0x263F80508]);
    sub_252D19CD8();
    (*v43)(v32, v33);
    uint64_t result = sub_252D1A6E8();
    v16 ^= result;
    if (v14) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v26 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 < v39)
    {
      unint64_t v27 = *(void *)(v38 + 8 * v26);
      if (v27) {
        goto LABEL_9;
      }
      int64_t v28 = v47 + 2;
      ++v47;
      if (v26 + 1 < v39)
      {
        unint64_t v27 = *(void *)(v38 + 8 * v28);
        if (v27)
        {
          ++v26;
LABEL_9:
          uint64_t v17 = v16;
          unint64_t v14 = (v27 - 1) & v27;
          unint64_t v19 = __clz(__rbit64(v27)) + (v26 << 6);
          int64_t v47 = v26;
          goto LABEL_5;
        }
        int64_t v29 = v26 + 2;
        int64_t v47 = v26 + 1;
        if (v26 + 2 < v39) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v30 = sub_252AC3A24(&qword_269C43838);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 1, 1, v30);
    unint64_t v14 = 0;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v29);
  if (v27)
  {
    v26 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v26 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v26 >= v39)
    {
      int64_t v47 = v37;
      goto LABEL_21;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    ++v29;
    if (v27) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_252CEDA4C()
{
  unint64_t result = qword_269C48D78;
  if (!qword_269C48D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48D78);
  }
  return result;
}

uint64_t sub_252CEDA98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TypedValue.Object();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_252CEDAF4()
{
  return sub_252CEE2D0(&qword_269C48D98, (void (*)(uint64_t))type metadata accessor for TypedValue.Object);
}

ValueMetadata *type metadata accessor for AST()
{
  return &type metadata for AST;
}

ValueMetadata *type metadata accessor for AST.Value()
{
  return &type metadata for AST.Value;
}

uint64_t *_s6ObjectVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19C48();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s6ObjectVwxx(uint64_t a1)
{
  uint64_t v2 = sub_252D19C48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t _s6ObjectVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19C48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ObjectVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19C48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ObjectVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19C48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s6ObjectVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19C48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ObjectVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CEDEC0);
}

uint64_t sub_252CEDEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252D19C48();
  sub_252AEA314();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t _s6ObjectVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CEDF60);
}

void sub_252CEDF60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252D19C48();
  sub_252AEA314();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_252CEDFE8()
{
  uint64_t result = sub_252D19C48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s6ObjectV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CEE14CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ObjectV10CodingKeysOMa()
{
  return &_s6ObjectV10CodingKeysON;
}

unint64_t sub_252CEE188()
{
  unint64_t result = qword_269C48DB0;
  if (!qword_269C48DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48DB0);
  }
  return result;
}

unint64_t sub_252CEE1D8()
{
  unint64_t result = qword_269C48DB8;
  if (!qword_269C48DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48DB8);
  }
  return result;
}

unint64_t sub_252CEE228()
{
  unint64_t result = qword_269C48DC0;
  if (!qword_269C48DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48DC0);
  }
  return result;
}

uint64_t sub_252CEE274()
{
  sub_252CB9724();
  v2(0);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v0, v1);
  return v0;
}

uint64_t sub_252CEE2D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252CEE318()
{
  sub_252CB9724();
  sub_252AC3A24(v2);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v0, v1);
  return v0;
}

size_t sub_252CEE370(uint64_t a1)
{
  return sub_252B7D3C8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_252CEE384()
{
  return sub_252D19BE8();
}

uint64_t sub_252CEE3E4()
{
  return v0;
}

uint64_t sub_252CEE400()
{
  return v0;
}

uint64_t sub_252CEE41C()
{
  return sub_252D19BE8();
}

uint64_t sub_252CEE444()
{
  return v0;
}

uint64_t sub_252CEE46C()
{
  return v0;
}

uint64_t sub_252CEE484()
{
  return v0;
}

uint64_t sub_252CEE4BC()
{
  return v0;
}

uint64_t sub_252CEE4E4()
{
  return v0;
}

uint64_t sub_252CEE4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_252AC3A24(&qword_269C437D8);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252B5F630();
  uint64_t v10 = sub_252AC3A24(&qword_269C437E0);
  sub_252AEDBD0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_252AF45F0();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v10) == 1)
  {
    sub_252B5A4CC(a1, &qword_269C437D8);
    sub_252CF35B8(a2, a3, v3);
    swift_bridgeObjectRelease();
    return sub_252B5A4CC(v3, &qword_269C437D8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v4, a1, v10);
    sub_252CF3940(v4, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_252CF4550);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_252CEE650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252AC3A24(&qword_269C48E08);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ClientAction(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v12) == 1)
  {
    sub_252B5A4CC(a1, &qword_269C48E08);
    sub_252CF3738(a2, a3, (uint64_t)v8);
    swift_bridgeObjectRelease();
    return sub_252B5A4CC((uint64_t)v8, &qword_269C48E08);
  }
  else
  {
    sub_252CF4BDC(a1, (uint64_t)v11, (void (*)(void))type metadata accessor for ClientAction);
    sub_252CF3940((uint64_t)v11, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_252CF47F8);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_252CEE7BC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_252B7D030(0, v1, 0);
  uint64_t v2 = v27;
  uint64_t result = sub_252CF840C(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v6 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v7 = a1 + 64;
      while ((*(void *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
      {
        if (v5 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_18;
        }
        int64_t v17 = v1;
        int v18 = v5;
        uint64_t v8 = *(void *)(a1 + 56) + 104 * v6;
        uint64_t v9 = *(void *)(v8 + 8);
        uint64_t v10 = *(void *)(v8 + 24);
        uint64_t v22 = *(void *)(v8 + 16);
        uint64_t v23 = *(void *)v8;
        uint64_t v11 = *(void *)(v8 + 40);
        uint64_t v20 = *(void *)(v8 + 48);
        uint64_t v21 = *(void *)(v8 + 32);
        unint64_t v12 = *(void *)(v8 + 64);
        uint64_t v13 = *(void *)(v8 + 72);
        char v19 = *(unsigned char *)(v8 + 80);
        uint64_t v25 = *(void *)(v8 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = v11;
        swift_bridgeObjectRetain();
        unint64_t v24 = v12;
        sub_252CF4B1C(v12);
        unint64_t v15 = *(void *)(v27 + 16);
        unint64_t v14 = *(void *)(v27 + 24);
        uint64_t result = swift_bridgeObjectRetain();
        if (v15 >= v14 >> 1) {
          uint64_t result = (uint64_t)sub_252B7D030((char *)(v14 > 1), v15 + 1, 1);
        }
        *(void *)(v27 + 16) = v15 + 1;
        uint64_t v16 = v27 + 88 * v15;
        *(void *)(v16 + 32) = v23;
        *(void *)(v16 + 40) = v9;
        *(void *)(v16 + 48) = v22;
        *(void *)(v16 + 56) = v10;
        *(void *)(v16 + 64) = v21;
        *(void *)(v16 + 72) = v26;
        *(void *)(v16 + 80) = v20;
        *(void *)(v16 + 88) = v25;
        *(void *)(v16 + 96) = v24;
        *(void *)(v16 + 104) = v13;
        *(unsigned char *)(v16 + 112) = v19;
        if ((uint64_t)v6 >= -(-1 << *(unsigned char *)(a1 + 32))) {
          goto LABEL_19;
        }
        uint64_t v7 = a1 + 64;
        if ((*(void *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0) {
          goto LABEL_20;
        }
        if (v18 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_21;
        }
        uint64_t result = sub_252D1A1D8();
        int64_t v1 = v17 - 1;
        if (v17 == 1) {
          return v2;
        }
        unint64_t v6 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          int v5 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_252CEEA10(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ClientAction(0);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (uint64_t)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (uint64_t)v22 - v6;
  uint64_t v7 = type metadata accessor for ClientAction.Definition(0);
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  v22[1] = v1;
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_252B7D070();
  uint64_t result = sub_252CF840C(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v14 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      int v15 = v13;
      uint64_t v16 = a1 + 64;
      uint64_t v23 = a1 + 64;
      unint64_t v24 = v9;
      while ((*(void *)(v16 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
      {
        if (v15 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_20;
        }
        uint64_t v17 = v26;
        sub_252CF4B7C(*(void *)(a1 + 56) + *(void *)(v28 + 72) * v14, v26, (void (*)(void))type metadata accessor for ClientAction);
        uint64_t v18 = v17;
        uint64_t v19 = v27;
        sub_252CF4BDC(v18, v27, (void (*)(void))type metadata accessor for ClientAction);
        sub_252CF4B7C(v19, (uint64_t)v9, (void (*)(void))type metadata accessor for ClientAction.Definition);
        sub_252CF4C50(v19, (void (*)(void))type metadata accessor for ClientAction);
        uint64_t v11 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_252B7D070();
          uint64_t v11 = v29;
        }
        unint64_t v20 = *(void *)(v11 + 16);
        if (v20 >= *(void *)(v11 + 24) >> 1)
        {
          sub_252B7D070();
          uint64_t v11 = v29;
        }
        *(void *)(v11 + 16) = v20 + 1;
        uint64_t v21 = v11
            + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))
            + *(void *)(v25 + 72) * v20;
        uint64_t v9 = v24;
        uint64_t result = sub_252CF4BDC((uint64_t)v24, v21, (void (*)(void))type metadata accessor for ClientAction.Definition);
        if ((uint64_t)v14 >= -(-1 << *(unsigned char *)(a1 + 32))) {
          goto LABEL_21;
        }
        uint64_t v16 = v23;
        if ((*(void *)(v23 + 8 * (v14 >> 6)) & (1 << v14)) == 0) {
          goto LABEL_22;
        }
        if (v15 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_23;
        }
        uint64_t result = sub_252D1A1D8();
        if (!--v10) {
          return v11;
        }
        unint64_t v14 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          int v15 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t ClientEffect.Registry.toolDefinitions.getter()
{
  return sub_252CF2294((uint64_t (*)(uint64_t, uint64_t *))sub_252CEE7BC);
}

IntelligenceFlow::ClientEffect::Registry __swiftcall ClientEffect.Registry.init(clientEffects:)(Swift::OpaquePointer clientEffects)
{
  uint64_t v3 = v1;
  uint64_t v4 = MEMORY[0x263F8EE78];
  sub_252D19CA8();
  int64_t v5 = *((void *)clientEffects._rawValue + 2);
  if (v5)
  {
    uint64_t v19 = v3;
    sub_252B7D050(0, v5, 0);
    uint64_t v6 = 0;
    uint64_t v7 = v4;
    rawValue = clientEffects._rawValue;
    do
    {
      uint64_t v8 = *(void *)((char *)clientEffects._rawValue + v6 + 40);
      uint64_t v9 = *(void *)((char *)clientEffects._rawValue + v6 + 56);
      uint64_t v24 = *(void *)((char *)clientEffects._rawValue + v6 + 48);
      uint64_t v25 = *(void *)((char *)clientEffects._rawValue + v6 + 32);
      uint64_t v10 = *(void *)((char *)clientEffects._rawValue + v6 + 72);
      uint64_t v11 = *(void *)((char *)clientEffects._rawValue + v6 + 88);
      uint64_t v22 = *(void *)((char *)clientEffects._rawValue + v6 + 80);
      uint64_t v23 = *(void *)((char *)clientEffects._rawValue + v6 + 64);
      unint64_t v13 = *(void *)((char *)clientEffects._rawValue + v6 + 96);
      uint64_t v12 = *(void *)((char *)clientEffects._rawValue + v6 + 104);
      char v21 = *((unsigned char *)clientEffects._rawValue + v6 + 112);
      long long v27 = *(_OWORD *)((char *)clientEffects._rawValue + v6 + 120);
      swift_bridgeObjectRetain();
      uint64_t v26 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252CF4B1C(v13);
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v15 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v14 >= v15 >> 1) {
        sub_252B7D050((char *)(v15 > 1), v14 + 1, 1);
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v16 = v7 + 120 * v14;
      *(void *)(v16 + 32) = v23;
      *(void *)(v16 + 40) = v10;
      *(void *)(v16 + 48) = v25;
      *(void *)(v16 + 56) = v26;
      *(void *)(v16 + 64) = v24;
      *(void *)(v16 + 72) = v9;
      *(void *)(v16 + 80) = v23;
      *(void *)(v16 + 88) = v10;
      *(void *)(v16 + 96) = v22;
      *(void *)(v16 + 104) = v11;
      *(void *)(v16 + 112) = v13;
      *(void *)(v16 + 120) = v12;
      *(unsigned char *)(v16 + 128) = v21;
      v6 += 104;
      *(_OWORD *)(v16 + 136) = v27;
      --v5;
      clientEffects._rawValue = rawValue;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v3 = v19;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = sub_252CEEFD0(v7, &qword_269C48EA8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_252CF4D74);
  result.clientEffects._rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v3 = v17;
  return result;
}

uint64_t sub_252CEEFD0(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    sub_252AC3A24(a2);
    uint64_t v4 = sub_252D1A3B8();
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE80];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t ClientEffect.Registry.register(definition:run:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  unint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  char v12 = *(unsigned char *)(a1 + 80);
  v14[0] = *(void *)a1;
  v14[1] = v3;
  _OWORD v14[2] = v4;
  v14[3] = v5;
  v14[4] = v6;
  v14[5] = v7;
  v14[6] = v9;
  v14[7] = v8;
  v14[8] = v10;
  v14[9] = v11;
  char v15 = v12;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_252CF4B1C(v10);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_252CF38B0(v14, v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t ClientEffect.Registry.run(clientEffect:client:)()
{
  sub_252AEA3C4();
  v1[2] = v2;
  v1[3] = v3;
  uint64_t v4 = type metadata accessor for SessionClientMessage(0);
  v1[4] = v4;
  sub_252AEA368(v4);
  v1[5] = sub_252CF84F8();
  v1[6] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MessagePayload(0);
  v1[7] = v5;
  sub_252AEA368(v5);
  v1[8] = sub_252CF84F8();
  v1[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
  sub_252AEA368(v6);
  v1[10] = sub_252AEA350();
  uint64_t v7 = sub_252D19588();
  v1[11] = v7;
  sub_252AEDBEC(v7);
  v1[12] = v8;
  v1[13] = sub_252CF84F8();
  v1[14] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *v0;
  v1[15] = v9;
  v1[16] = v10;
  sub_252CF87CC();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_252CEF27C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[2];
  uint64_t v3 = type metadata accessor for MessagePayload.ClientEffectInvocation(0);
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(v3 + 32));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (*(void *)(v1 + 16))
  {
    uint64_t v7 = v3;
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_252AC7C94(v6, v5);
    if (v9)
    {
      uint64_t v25 = v0[15];
      uint64_t v26 = v0[14];
      uint64_t v10 = v0[11];
      uint64_t v11 = v0[12];
      uint64_t v12 = v0[2];
      uint64_t v13 = (void *)(*(void *)(v0[16] + 56) + 104 * v8);
      v0[17] = v13[1];
      v0[18] = v13[3];
      v0[19] = v13[5];
      v0[20] = v13[7];
      unint64_t v14 = v13[8];
      v0[21] = v14;
      v0[22] = v13[9];
      uint64_t v23 = (int *)v13[11];
      uint64_t v24 = v10;
      v0[23] = v13[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252CF4B1C(v14);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
      v0[24] = v15;
      v0[25] = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v15(v25, v12, v24);
      v15(v26, v12 + *(int *)(v7 + 20), v24);
      uint64_t v16 = (void *)(v12 + *(int *)(v7 + 24));
      v0[26] = *v16;
      v0[27] = v16[1];
      long long v27 = (uint64_t (*)(uint64_t, uint64_t))((char *)v23 + *v23);
      swift_bridgeObjectRetain();
      uint64_t v17 = (void *)swift_task_alloc();
      v0[28] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_252CEF588;
      uint64_t v18 = v0[10];
      uint64_t v19 = v0[2];
      return v27(v18, v19);
    }
    swift_bridgeObjectRelease();
  }
  sub_252CF4B30();
  swift_allocError();
  *(void *)uint64_t v21 = v6;
  *(void *)(v21 + 8) = v5;
  *(unsigned char *)(v21 + 16) = 0;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_252CEF588()
{
  sub_252AEA3C4();
  sub_252AEA2EC();
  uint64_t v1 = *v0;
  sub_252AEA32C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_252CF87CC();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_252CEF650()
{
  uint64_t v20 = v0[26];
  uint64_t v21 = v0[27];
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[24];
  unint64_t v22 = v0[21];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[9];
  uint64_t v23 = v0[14];
  uint64_t v25 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v18 = v0[4];
  uint64_t v19 = v0[6];
  v1(v6, v0[15], v4);
  uint64_t v8 = type metadata accessor for MessagePayload.ClientEffectResolved(0);
  sub_252CF4B7C(v5, v6 + *(int *)(v8 + 20), (void (*)(void))type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  swift_storeEnumTagMultiPayload();
  v1(v3, v23, v4);
  sub_252CF4B7C(v6, v25, (void (*)(void))type metadata accessor for MessagePayload);
  v1(v7, v3, v4);
  sub_252CF4BDC(v25, v7 + *(int *)(v18 + 24), (void (*)(void))type metadata accessor for MessagePayload);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v24(v3, v4);
  char v9 = (void *)(v7 + *(int *)(v18 + 20));
  void *v9 = v20;
  v9[1] = v21;
  sub_252CF4BDC(v7, v19, (void (*)(void))type metadata accessor for SessionClientMessage);
  sub_252D0883C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_252CF4C3C(v22);
  uint64_t v10 = v0[15];
  uint64_t v12 = v0[10];
  uint64_t v11 = v0[11];
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[6];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_252CF4C50(v14, (void (*)(void))type metadata accessor for SessionClientMessage);
  sub_252CF4C50(v13, (void (*)(void))type metadata accessor for MessagePayload);
  sub_252CF4C50(v12, (void (*)(void))type metadata accessor for MessagePayload.ClientEffectResolved.Result);
  uint64_t v15 = sub_252AFC650();
  ((void (*)(uint64_t))v24)(v15);
  v24(v10, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_252AEDE28();
  return v16();
}

uint64_t ClientAction.Definition.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.outputType.getter()
{
  type metadata accessor for ClientAction.Definition(0);
  sub_252D19C08();
  sub_252AEA304();
  uint64_t v0 = sub_252AEA3DC();

  return v1(v0);
}

uint64_t ClientAction.Definition.isUndoable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClientAction.Definition(0) + 32));
}

uint64_t ClientAction.Definition.positiveExampleInvocations.getter()
{
  type metadata accessor for ClientAction.Definition(0);

  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.negativeExampleInvocations.getter()
{
  type metadata accessor for ClientAction.Definition(0);

  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.isSiriXShim.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ClientAction.Definition(0) + 44));
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  long long v27 = v26;
  uint64_t v28 = (int *)type metadata accessor for ClientAction.Definition(0);
  uint64_t v29 = (char *)v27 + v28[7];
  uint64_t v30 = sub_252D19C08();
  sub_252AEA314();
  uint64_t v42 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v15, v30);
  *long long v27 = v25;
  v27[1] = v23;
  v27[2] = v21;
  v27[3] = v19;
  v27[4] = v17;
  *((unsigned char *)v27 + v28[11]) = 0;
  *((unsigned char *)v27 + v28[8]) = 0;
  uint64_t v32 = MEMORY[0x263F8EE78];
  *(void *)((char *)v27 + v28[9]) = MEMORY[0x263F8EE78];
  *(void *)((char *)v27 + v28[10]) = v32;
  sub_252AFC67C();
  return v35(v33, v34, v35, v36, v37, v38, v39, v40, a9, v42, a11, a12, a13, a14);
}

void ClientAction.Definition.init(name:description:parameters:outputType:isSiriXShim:isUndoable:)()
{
  sub_252AFC698();
  v18[0] = v0;
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = (int *)type metadata accessor for ClientAction.Definition(0);
  sub_252D19C08();
  sub_252AEA304();
  sub_252CF8738();
  v16();
  *uint64_t v14 = v12;
  v14[1] = v10;
  _OWORD v14[2] = v8;
  v14[3] = v6;
  v14[4] = v4;
  *((unsigned char *)v14 + v15[11]) = v2;
  *((unsigned char *)v14 + v15[8]) = v18[0];
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)((char *)v14 + v15[9]) = MEMORY[0x263F8EE78];
  *(void *)((char *)v14 + v15[10]) = v17;
  sub_252AFC67C();
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:isUndoable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  sub_252CF8514();
  sub_252AEA314();
  uint64_t v29 = v16;
  uint64_t v17 = sub_252CF86CC();
  v18(v17);
  sub_252CF8790();
  *(unsigned char *)(v14 + v19) = 0;
  *(unsigned char *)(v14 + *(int *)(v15 + 32)) = BYTE4(a10);
  sub_252CF8608(*(int *)(v15 + 36));
  sub_252AFC67C();
  return v22(v20, v21, v22, v23, v24, v25, v26, v27, v29, a10, a11, a12, a13, a14);
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:isUndoable:positiveExampleInvocations:negativeExampleInvocations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  sub_252CF85C4(a1, a2, a3, a4, a5, a8);
  sub_252AEA304();
  sub_252CF8738();
  uint64_t result = v13();
  *((unsigned char *)a8 + v9[11]) = 0;
  *((unsigned char *)a8 + v9[8]) = a6;
  *(void *)((char *)a8 + v9[9]) = a7;
  *(void *)((char *)a8 + v9[10]) = a9;
  return result;
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:isSiriXShim:isUndoable:positiveExampleInvocations:negativeExampleInvocations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W6>, char a7@<W7>, void *a8@<X8>, uint64_t a9, uint64_t a10)
{
  sub_252CF85C4(a1, a2, a3, a4, a5, a8);
  sub_252AEA304();
  sub_252CF8738();
  uint64_t result = v14();
  *((unsigned char *)a8 + v10[11]) = a6;
  *((unsigned char *)a8 + v10[8]) = a7;
  *(void *)((char *)a8 + v10[9]) = a9;
  *(void *)((char *)a8 + v10[10]) = a10;
  return result;
}

uint64_t ClientAction.Definition.init(name:description:parameters:outputType:isSiriXShim:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  sub_252CF8514();
  sub_252AEA314();
  uint64_t v29 = v16;
  uint64_t v17 = sub_252CF86CC();
  v18(v17);
  sub_252CF8790();
  *(unsigned char *)(v14 + v19) = BYTE4(a10);
  *(unsigned char *)(v14 + *(int *)(v15 + 32)) = 0;
  sub_252CF8608(*(int *)(v15 + 36));
  sub_252AFC67C();
  return v22(v20, v21, v22, v23, v24, v25, v26, v27, v29, a10, a11, a12, a13, a14);
}

uint64_t ClientAction.Definition.ParameterDefinition.name.getter()
{
  return sub_252AEA3DC();
}

uint64_t ClientAction.Definition.ParameterDefinition.description.getter()
{
  return sub_252AEA3DC();
}

uint64_t ClientAction.Definition.ParameterDefinition.valueType.getter()
{
  sub_252CF856C();
  sub_252AEA304();
  uint64_t v0 = sub_252AEA3DC();

  return v1(v0);
}

uint64_t ClientAction.Definition.ParameterDefinition.init(name:description:valueType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  sub_252CF856C();
  sub_252AEA304();
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 32);

  return v10(a6, a5, v8);
}

uint64_t static ClientAction.Definition.ParameterDefinition.== infix(_:_:)(uint64_t a1)
{
  sub_252CB8AB0(a1);
  BOOL v5 = v5 && v3 == v4;
  if (!v5 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  BOOL v6 = *(void *)(v2 + 16) == *(void *)(v1 + 16) && *(void *)(v2 + 24) == *(void *)(v1 + 24);
  if (!v6 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ClientAction.Definition.ParameterDefinition(0);

  return sub_252D19BF8();
}

uint64_t ClientAction.Definition.ParameterDefinition.hash(into:)()
{
  return sub_252D19CD8();
}

uint64_t sub_252CF0198(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x70795465756C6176 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252CF02FC(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0x7470697263736564;
  }
  return 0x70795465756C6176;
}

uint64_t sub_252CF0358()
{
  return sub_252CF02FC(*v0);
}

uint64_t sub_252CF0360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CF0198(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CF0388(uint64_t a1)
{
  unint64_t v2 = sub_252CF4CE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CF03C4(uint64_t a1)
{
  unint64_t v2 = sub_252CF4CE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClientAction.Definition.ParameterDefinition.encode(to:)(void *a1)
{
  uint64_t v3 = sub_252AC3A24(&qword_26B231710);
  sub_252AEDBD0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_252AC3A68(a1, a1[3]);
  sub_252CF4CE4();
  sub_252AF4784();
  v10[15] = 0;
  sub_252CB8868();
  if (!v1)
  {
    v10[14] = 1;
    sub_252CB8868();
    type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
    v10[13] = 2;
    sub_252D19C08();
    sub_252CF4D30((uint64_t)&unk_26B231558);
    sub_252D1A578();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t ClientAction.Definition.ParameterDefinition.hashValue.getter()
{
  return sub_252D1A6E8();
}

void ClientAction.Definition.ParameterDefinition.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v21 = v4;
  uint64_t v5 = sub_252D19C08();
  sub_252AEDBD0();
  uint64_t v20 = v6;
  MEMORY[0x270FA5388](v7);
  sub_252B0011C();
  uint64_t v10 = v9 - v8;
  sub_252AC3A24(&qword_26B231E20);
  sub_252AEDBD0();
  uint64_t v22 = v12;
  uint64_t v23 = v11;
  MEMORY[0x270FA5388](v11);
  sub_252B0011C();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v17);
  sub_252AF45D8();
  sub_252AC3A68(v3, v3[3]);
  sub_252CF4CE4();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
  }
  else
  {
    *uint64_t v1 = sub_252D1A448();
    v1[1] = v18;
    v1[2] = sub_252D1A448();
    v1[3] = v19;
    sub_252CF4D30((uint64_t)&unk_26B231DD8);
    sub_252D1A498();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v15, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))((char *)v1 + *(int *)(v16 + 24), v10, v5);
    sub_252CF4B7C((uint64_t)v1, v21, (void (*)(void))type metadata accessor for ClientAction.Definition.ParameterDefinition);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_252CF4C50((uint64_t)v1, (void (*)(void))type metadata accessor for ClientAction.Definition.ParameterDefinition);
  }
  sub_252AF4368();
}

void sub_252CF0940()
{
}

uint64_t sub_252CF0958(void *a1)
{
  return ClientAction.Definition.ParameterDefinition.encode(to:)(a1);
}

uint64_t sub_252CF097C()
{
  return sub_252D1A6E8();
}

uint64_t ClientAction.Definition.ExampleInvocationDefinition.phrases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClientAction.Definition.ExampleInvocationDefinition.expectedResult.getter()
{
  return sub_252AEA3DC();
}

IntelligenceFlow::ClientAction::Definition::ExampleInvocationDefinition __swiftcall ClientAction.Definition.ExampleInvocationDefinition.init(phrases:expectedResult:)(Swift::OpaquePointer phrases, Swift::String_optional expectedResult)
{
  *(Swift::OpaquePointer *)uint64_t v2 = phrases;
  *(Swift::String_optional *)(v2 + 8) = expectedResult;
  result.expectedResult = expectedResult;
  result.phrases = phrases;
  return result;
}

uint64_t ClientAction.Definition.ExampleInvocationDefinition.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  swift_bridgeObjectRetain();
  sub_252CF5704(a1, v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    return sub_252D1A6C8();
  }
  sub_252D1A6C8();
  swift_bridgeObjectRetain();
  sub_252D19DB8();

  return swift_bridgeObjectRelease();
}

uint64_t static ClientAction.Definition.ExampleInvocationDefinition.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (sub_252B1D710(*(void **)a1, *(void **)a2))
  {
    if (v3)
    {
      if (v5)
      {
        BOOL v6 = v2 == v4 && v3 == v5;
        if (v6 || (sub_252D1A5D8() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_252CF0BD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73657361726870 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465746365707865 && a2 == 0xEE00746C75736552)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252CF0CE4(char a1)
{
  if (a1) {
    return 0x6465746365707865;
  }
  else {
    return 0x73657361726870;
  }
}

uint64_t sub_252CF0D28()
{
  return sub_252CF0CE4(*v0);
}

uint64_t sub_252CF0D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CF0BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CF0D58(uint64_t a1)
{
  unint64_t v2 = sub_252CF577C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CF0D94(uint64_t a1)
{
  unint64_t v2 = sub_252CF577C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ClientAction.Definition.ExampleInvocationDefinition.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C48DF0);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v0 + 8);
  v11[1] = *(void *)(v0 + 16);
  v11[2] = v10;
  sub_252AC3A68(v3, v3[3]);
  sub_252CF577C();
  sub_252D1A738();
  char v13 = 0;
  sub_252AC3A24(qword_269C41E38);
  sub_252C078F4((uint64_t)&unk_269C493B0);
  sub_252CF8654();
  if (!v1)
  {
    char v12 = 1;
    sub_252D1A4E8();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_252AF4368();
}

uint64_t ClientAction.Definition.ExampleInvocationDefinition.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_252AF455C();
  swift_bridgeObjectRetain();
  sub_252CF5704((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_252D1A6C8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_252D19DB8();
    swift_bridgeObjectRelease();
  }
  return sub_252D1A6E8();
}

void ClientAction.Definition.ExampleInvocationDefinition.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  char v12 = v11;
  uint64_t v14 = v13;
  sub_252AC3A24(&qword_269C48E00);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  sub_252AF45F0();
  sub_252AC3A68(v12, v12[3]);
  sub_252CF577C();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_252AC3A24(qword_269C41E38);
    sub_252C078F4((uint64_t)&unk_269C493C0);
    sub_252D1A498();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_252D1A408();
    uint64_t v18 = v17;
    uint64_t v19 = sub_252BA572C();
    v20(v19);
    *uint64_t v14 = a10;
    v14[1] = v16;
    _OWORD v14[2] = v18;
    swift_bridgeObjectRetain();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

uint64_t sub_252CF11AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  sub_252D1A6A8();
  swift_bridgeObjectRetain();
  sub_252CF5704((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_252D1A6C8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_252D19DB8();
    swift_bridgeObjectRelease();
  }
  return sub_252D1A6E8();
}

void sub_252CF1248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ClientAction.Definition.ExampleInvocationDefinition.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CF1260()
{
}

uint64_t static ClientAction.Definition.== infix(_:_:)(uint64_t a1)
{
  sub_252CB8AB0(a1);
  BOOL v5 = v5 && v3 == v4;
  if (v5 || (char v6 = sub_252D1A5D8(), v7 = 0, (v6 & 1) != 0))
  {
    BOOL v8 = *(void *)(v2 + 16) == *(void *)(v1 + 16) && *(void *)(v2 + 24) == *(void *)(v1 + 24);
    if (v8 || (v9 = sub_252D1A5D8(), char v7 = 0, (v9 & 1) != 0))
    {
      sub_252B1D41C();
      if ((v10 & 1) != 0
        && (uint64_t v11 = type metadata accessor for ClientAction.Definition(0), (sub_252D19BF8() & 1) != 0)
        && *(unsigned __int8 *)(v2 + *(int *)(v11 + 32)) == *(unsigned __int8 *)(v1 + *(int *)(v11 + 32))
        && (sub_252B1D5C0(), (v12 & 1) != 0)
        && (sub_252B1D5C0(), (v13 & 1) != 0))
      {
        char v7 = *(unsigned char *)(v2 + *(int *)(v11 + 44)) ^ *(unsigned char *)(v1 + *(int *)(v11 + 44)) ^ 1;
      }
      else
      {
        char v7 = 0;
      }
    }
  }
  return v7 & 1;
}

uint64_t ClientAction.Definition.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_252D19DB8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_252D19DB8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_252AEA3DC();
  sub_252CF57C8(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for ClientAction.Definition(0);
  sub_252D19C08();
  sub_252CF4D30((uint64_t)&unk_269C48DE8);
  sub_252D19CD8();
  sub_252D1A6C8();
  uint64_t v7 = *(void *)(v1 + *(int *)(v6 + 36));
  swift_bridgeObjectRetain();
  sub_252CF55B4(a1, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + *(int *)(v6 + 40));
  swift_bridgeObjectRetain();
  sub_252CF55B4(a1, v8);
  swift_bridgeObjectRelease();
  return sub_252D1A6C8();
}

uint64_t sub_252CF14DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x795474757074756FLL && a2 == 0xEA00000000006570;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x62616F646E557369 && a2 == 0xEA0000000000656CLL;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1EAD0 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1EAF0 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x5358697269537369 && a2 == 0xEB000000006D6968)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v11 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_252CF1828(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7470697263736564;
      break;
    case 2:
      unint64_t result = 0x6574656D61726170;
      break;
    case 3:
      unint64_t result = 0x795474757074756FLL;
      break;
    case 4:
      unint64_t result = 0x62616F646E557369;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0x5358697269537369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252CF1940()
{
  return sub_252CF1828(*v0);
}

uint64_t sub_252CF1948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CF14DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CF1970(uint64_t a1)
{
  unint64_t v2 = sub_252CF599C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CF19AC(uint64_t a1)
{
  unint64_t v2 = sub_252CF599C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ClientAction.Definition.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v3 = sub_252AC3A24(&qword_26B231718);
  sub_252AEDBD0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  BOOL v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252AC3A68(v2, v2[3]);
  sub_252CF599C();
  sub_252AF4784();
  sub_252CB8868();
  if (!v0)
  {
    sub_252CB8868();
    char v10 = 2;
    sub_252AC3A24(&qword_26B234898);
    sub_252CF5A34((uint64_t)&unk_26B231568);
    sub_252CF8654();
    type metadata accessor for ClientAction.Definition(0);
    sub_252D19C08();
    sub_252CF4D30((uint64_t)&unk_26B231558);
    sub_252D1A578();
    sub_252CF86F8(4);
    char v10 = 5;
    sub_252AC3A24(&qword_26B232178);
    sub_252CF5AC4((uint64_t)&unk_26B231560);
    sub_252CF8680();
    char v10 = 6;
    sub_252CF8680();
    sub_252CF86F8(7);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  sub_252AF4368();
}

uint64_t ClientAction.Definition.hashValue.getter()
{
  sub_252AF455C();
  ClientAction.Definition.hash(into:)((uint64_t)v1);
  return sub_252D1A6E8();
}

void ClientAction.Definition.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  char v12 = v11;
  uint64_t v29 = v13;
  sub_252D19C08();
  sub_252AEDBD0();
  uint64_t v30 = v15;
  uint64_t v31 = v14;
  MEMORY[0x270FA5388](v14);
  sub_252B0011C();
  uint64_t v18 = v17 - v16;
  sub_252AC3A24(&qword_26B231E28);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_252B4C750();
  uint64_t v32 = (int *)type metadata accessor for ClientAction.Definition(v20);
  sub_252AEA304();
  MEMORY[0x270FA5388](v21);
  sub_252AEDE70();
  uint64_t v23 = v22;
  sub_252AC3A68(v12, v12[3]);
  sub_252CF599C();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
  }
  else
  {
    *uint64_t v23 = sub_252D1A448();
    v23[1] = v24;
    LOBYTE(a10) = 1;
    v23[2] = sub_252D1A448();
    v23[3] = v25;
    sub_252AC3A24(&qword_26B234898);
    sub_252CF5A34((uint64_t)&unk_26B231DF0);
    sub_252D1A498();
    v23[4] = a10;
    LOBYTE(a10) = 3;
    sub_252CF4D30((uint64_t)&unk_26B231DD8);
    sub_252D1A498();
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))((char *)v23 + v32[7], v18, v31);
    *((unsigned char *)v23 + v32[8]) = sub_252CF8770(4) & 1;
    sub_252AC3A24(&qword_26B232178);
    sub_252CF5AC4((uint64_t)&unk_26B231DE8);
    sub_252CF8628();
    *(uint64_t *)((char *)v23 + v32[9]) = a10;
    sub_252CF8628();
    *(uint64_t *)((char *)v23 + v32[10]) = a10;
    char v26 = sub_252CF8770(7);
    uint64_t v27 = sub_252CF84E0();
    v28(v27);
    *((unsigned char *)v23 + v32[11]) = v26 & 1;
    sub_252CF4B7C((uint64_t)v23, v29, (void (*)(void))type metadata accessor for ClientAction.Definition);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
    sub_252CF4C50((uint64_t)v23, (void (*)(void))type metadata accessor for ClientAction.Definition);
  }
  sub_252AF4368();
}

void sub_252CF2204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ClientAction.Definition.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CF221C()
{
}

uint64_t sub_252CF2240()
{
  sub_252D1A6A8();
  ClientAction.Definition.hash(into:)((uint64_t)v1);
  return sub_252D1A6E8();
}

uint64_t ClientAction.Registry.toolDefinitions.getter()
{
  return sub_252CF2294((uint64_t (*)(uint64_t, uint64_t *))sub_252CEEA10);
}

uint64_t sub_252CF2294(uint64_t (*a1)(uint64_t, uint64_t *))
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = a1(v2, &v5);
  swift_bridgeObjectRelease();
  return v3;
}

IntelligenceFlow::ClientAction::Registry __swiftcall ClientAction.Registry.init(clientActions:)(Swift::OpaquePointer clientActions)
{
  uint64_t v4 = v1;
  uint64_t v5 = sub_252AC3A24(&qword_269C43810);
  sub_252AEDBD0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_252B4C750();
  uint64_t v10 = type metadata accessor for ClientAction(v9);
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_252D19CA8();
  int64_t v12 = *((void *)clientActions._rawValue + 2);
  if (v12)
  {
    uint64_t v22 = v4;
    sub_252B7D0C4(0, v12, 0);
    uint64_t v13 = *(void *)(v10 - 8);
    uint64_t v14 = (char *)clientActions._rawValue
        + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    do
    {
      uint64_t v16 = (void *)((char *)v2 + *(int *)(v5 + 48));
      sub_252CF4B7C((uint64_t)v14, (uint64_t)v16, (void (*)(void))type metadata accessor for ClientAction);
      uint64_t v17 = v16[1];
      *uint64_t v2 = *v16;
      v2[1] = v17;
      unint64_t v19 = *(void *)(v11 + 16);
      unint64_t v18 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1) {
        sub_252B7D0C4(v18 > 1, v19 + 1, 1);
      }
      *(void *)(v11 + 16) = v19 + 1;
      sub_252CF5B9C((uint64_t)v2, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v4 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_252CEEFD0(v11, &qword_269C48E98, (void (*)(uint64_t, uint64_t, uint64_t *))sub_252CF5160);
  result.clientActions._rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v4 = v20;
  return result;
}

uint64_t ClientAction.Registry.register(definition:run:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ClientAction.Definition(0);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AF45D8();
  uint64_t v9 = sub_252AC3A24(&qword_269C48E08);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252B0011C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  sub_252CF4B7C((uint64_t)a1, v3, (void (*)(void))type metadata accessor for ClientAction.Definition);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  sub_252CF4BDC(v3, v13, (void (*)(void))type metadata accessor for ClientAction.Definition);
  uint64_t v17 = type metadata accessor for ClientAction(0);
  unint64_t v18 = (void *)(v13 + *(int *)(v17 + 20));
  *unint64_t v18 = &unk_269C48E18;
  v18[1] = v16;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v13, 0, 1, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_252CEE650(v13, v14, v15);
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  uint64_t v7 = sub_252AC3A24(&qword_269C48E08);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252B5F630();
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  sub_252CF4B7C((uint64_t)a1, v3, (void (*)(void))type metadata accessor for ClientAction.Definition);
  uint64_t v11 = type metadata accessor for ClientAction(0);
  uint64_t v12 = (void *)(v3 + *(int *)(v11 + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, 0, 1, v11);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_252CEE650(v3, v9, v10);
}

uint64_t sub_252CF2680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_252CF2768;
  return v8(a1, a2);
}

uint64_t sub_252CF2768()
{
  sub_252AEA3C4();
  sub_252AEA2EC();
  uint64_t v1 = *v0;
  sub_252AEA32C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_252AEDE28();
  return v3();
}

uint64_t ClientAction.Registry.run(action:client:sessionId:clientRequestId:)()
{
  sub_252AEA3C4();
  v1[5] = v2;
  v1[6] = v3;
  v1[3] = v4;
  v1[4] = v5;
  v1[2] = v6;
  uint64_t v7 = sub_252D19588();
  v1[7] = v7;
  sub_252AEDBEC(v7);
  v1[8] = v8;
  v1[9] = sub_252CF84F8();
  v1[10] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StatementOutcome(0);
  sub_252AEA368(v9);
  v1[11] = sub_252AEA350();
  uint64_t v10 = sub_252AC3A24(&qword_269C41A88);
  sub_252AEA368(v10);
  v1[12] = sub_252AEA350();
  uint64_t v11 = type metadata accessor for MessagePayload(0);
  v1[13] = v11;
  sub_252AEA368(v11);
  v1[14] = sub_252CF84F8();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ActionOutcome(0);
  sub_252AEA368(v12);
  v1[17] = sub_252CF84F8();
  v1[18] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SessionClientMessage(0);
  v1[19] = v13;
  sub_252AEA368(v13);
  v1[20] = sub_252CF84F8();
  v1[21] = swift_task_alloc();
  uint64_t v14 = sub_252AC3A24(&qword_269C48E08);
  sub_252AEA368(v14);
  v1[22] = sub_252AEA350();
  uint64_t v15 = type metadata accessor for ClientAction(0);
  v1[23] = v15;
  sub_252AEA368(v15);
  uint64_t v16 = sub_252AEA350();
  uint64_t v17 = *v0;
  v1[24] = v16;
  v1[25] = v17;
  sub_252CF87CC();
  return MEMORY[0x270FA2498](v18, v19, v20);
}

void sub_252CF2AD4()
{
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[2];
  uint64_t v5 = (uint64_t *)(v4 + *(int *)(type metadata accessor for MessagePayload.ClientAction(0) + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_bridgeObjectRetain();
  sub_252CE9DCC(v7, v6, v1);
  swift_bridgeObjectRelease();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, 1, v2) == 1)
  {
    sub_252B5A4CC(v0[22], &qword_269C48E08);
    sub_252CF5DC8();
    swift_allocError();
    *(void *)uint64_t v8 = v7;
    *(void *)(v8 + 8) = v6;
    *(unsigned char *)(v8 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_252CF871C();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v11 = v0[23];
  uint64_t v12 = v0[24];
  sub_252CF4BDC(v0[22], v12, (void (*)(void))type metadata accessor for ClientAction);
  v0[26] = *(void *)(v12 + *(int *)(v11 + 20) + 8);
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[27] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_252CF2D68;
  sub_252CF871C();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_252CF2D68()
{
  sub_252AEA3C4();
  sub_252AEA2EC();
  uint64_t v2 = *v1;
  sub_252AEA32C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 224) = v0;
  swift_task_dealloc();
  sub_252CF87CC();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_252CF2E48()
{
  uint64_t v27 = v0[21];
  uint64_t v1 = v0[18];
  uint64_t v26 = v1;
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v20 = v0[11];
  uint64_t v21 = v0[15];
  uint64_t v22 = v0[20];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v25 = v0[19];
  unint64_t v23 = v0[6];
  uint64_t v24 = v0[5];
  swift_release();
  uint64_t v7 = *(void (**)(void))(v6 + 16);
  sub_252CF86E8();
  v7();
  sub_252CF4B7C(v1, v2, (void (*)(void))type metadata accessor for ActionOutcome);
  uint64_t v8 = type metadata accessor for ResponseManifest(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, 1, 1, v8);
  uint64_t v9 = type metadata accessor for MessagePayload.ClientActionResult(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3 + *(int *)(v9 + 24), 1, 1, v8);
  ActionOutcome.asStatementOutcome.getter(v20);
  sub_252CF4C50(v2, (void (*)(void))type metadata accessor for ActionOutcome);
  sub_252CF4BDC(v20, v3 + *(int *)(v9 + 20), (void (*)(void))type metadata accessor for StatementOutcome);
  uint64_t v10 = sub_252AFC650();
  sub_252CF5E14(v10, v11);
  swift_storeEnumTagMultiPayload();
  sub_252CF86E8();
  v7();
  sub_252CF4B7C(v3, v21, (void (*)(void))type metadata accessor for MessagePayload);
  sub_252CF86E8();
  v7();
  sub_252CF4B7C(v21, v22 + *(int *)(v25 + 24), (void (*)(void))type metadata accessor for MessagePayload);
  if (v23) {
    uint64_t v12 = v24;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v23) {
    unint64_t v13 = v23;
  }
  else {
    unint64_t v13 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_252CF4C50(v21, (void (*)(void))type metadata accessor for MessagePayload);
  sub_252B5F53C();
  v14();
  uint64_t v15 = (void *)(v22 + *(int *)(v25 + 20));
  void *v15 = v12;
  v15[1] = v13;
  sub_252CF4C50(v3, (void (*)(void))type metadata accessor for MessagePayload);
  sub_252CF4C50(v26, (void (*)(void))type metadata accessor for ActionOutcome);
  sub_252CF4BDC(v22, v27, (void (*)(void))type metadata accessor for SessionClientMessage);
  uint64_t v16 = v0[28];
  sub_252D0883C();
  uint64_t v17 = v0[24];
  if (v16)
  {
    sub_252CF4C50(v0[21], (void (*)(void))type metadata accessor for SessionClientMessage);
    sub_252CF4C50(v17, (void (*)(void))type metadata accessor for ClientAction);
    sub_252CF85A0();
    sub_252CF8758();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_252CF8748();
  }
  else
  {
    sub_252CF86AC();
    sub_252CF8758();
    swift_bridgeObjectRelease();
    sub_252CF4C50(v5, (void (*)(void))type metadata accessor for SessionClientMessage);
    sub_252CF4C50(v17, (void (*)(void))type metadata accessor for ClientAction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_252AEDE28();
  }
  return v18();
}

void sub_252CF326C()
{
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = v0[14];
  uint64_t v19 = v0[19];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  unint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v20 = v0[5];
  uint64_t v21 = v0[21];
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v3, v7, v5);
  sub_252AC3A24(&qword_269C440F8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_252D2A140;
  *(void *)(v9 + 32) = v1;
  *(unsigned char *)(v9 + 40) = 0;
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = v9;
  swift_storeEnumTagMultiPayload();
  v8(v21, v3, v5);
  sub_252CF4B7C(v2, v21 + *(int *)(v19 + 24), (void (*)(void))type metadata accessor for MessagePayload);
  if (v6) {
    uint64_t v10 = v20;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v6) {
    unint64_t v11 = v6;
  }
  else {
    unint64_t v11 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  id v12 = v1;
  sub_252CF4C50(v2, (void (*)(void))type metadata accessor for MessagePayload);
  uint64_t v13 = sub_252AFC650();
  v14(v13);
  uint64_t v15 = (void *)(v21 + *(int *)(v19 + 20));
  void *v15 = v10;
  v15[1] = v11;
  sub_252D0883C();
  uint64_t v16 = v0[24];
  sub_252CF86AC();
  sub_252CF87A4();
  swift_bridgeObjectRelease();
  sub_252CF4C50(v4 + 8, (void (*)(void))type metadata accessor for SessionClientMessage);
  sub_252CF4C50(v16, (void (*)(void))type metadata accessor for ClientAction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_252AEDE28();
  sub_252CF871C();
  __asm { BRAA            X1, X16 }
}

uint64_t ClientAction.Registry.run(clientAction:client:)()
{
  return sub_252CF5E7C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_252CF35B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_252AC7C94(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_252AC3A24(&qword_269C48E88);
    sub_252D1A338();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v16 + 56);
    uint64_t v11 = sub_252AC3A24(&qword_269C437E0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * v8, v11);
    sub_252D1A358();
    *uint64_t v4 = v16;
    swift_bridgeObjectRelease();
    uint64_t v12 = a3;
    uint64_t v13 = 0;
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = sub_252AC3A24(&qword_269C437E0);
    uint64_t v12 = a3;
    uint64_t v13 = 1;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v12, v13, 1, v14);
}

uint64_t sub_252CF3738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_252AC7C94(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_252AC3A24(&qword_269C48E90);
    sub_252D1A338();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v16 + 56);
    uint64_t v11 = type metadata accessor for ClientAction(0);
    sub_252CF4BDC(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v8, a3, (void (*)(void))type metadata accessor for ClientAction);
    sub_252D1A358();
    *uint64_t v4 = v16;
    swift_bridgeObjectRelease();
    uint64_t v12 = a3;
    uint64_t v13 = 0;
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = type metadata accessor for ClientAction(0);
    uint64_t v12 = a3;
    uint64_t v13 = 1;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v12, v13, 1, v14);
}

uint64_t sub_252CF38B0(void *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_252CF46C0(a1, a2, a3);
  *uint64_t v3 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t sub_252CF3940(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  a4(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v11;

  return swift_bridgeObjectRelease();
}

uint64_t sub_252CF39D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v48 = sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252AEDE70();
  uint64_t v47 = v8;
  uint64_t v9 = *v2;
  sub_252AC3A24(qword_269C48EB0);
  char v46 = a2;
  uint64_t v10 = sub_252D1A3A8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_40;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & *(void *)(v9 + 64);
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  unint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v15 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v19 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v18 << 6))
  {
    uint64_t v25 = *(void *)(v9 + 56);
    uint64_t v26 = v9;
    uint64_t v27 = (uint64_t *)(*(void *)(v9 + 48) + 16 * i);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = *(void *)(v45 + 72);
    uint64_t v31 = v25 + v30 * i;
    if (v46)
    {
      (*v15)(v47, v31, v48);
    }
    else
    {
      (*v44)(v47, v31, v48);
      swift_bridgeObjectRetain();
    }
    sub_252D1A6A8();
    sub_252D19DB8();
    uint64_t result = sub_252D1A6E8();
    uint64_t v32 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) == 0)
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v32) >> 6;
      while (++v34 != v37 || (v36 & 1) == 0)
      {
        BOOL v38 = v34 == v37;
        if (v34 == v37) {
          unint64_t v34 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v34);
        if (v39 != -1)
        {
          unint64_t v35 = __clz(__rbit64(~v39)) + (v34 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    unint64_t v35 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(void *)(v16 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    uint64_t v40 = (void *)(*(void *)(v11 + 48) + 16 * v35);
    *uint64_t v40 = v28;
    v40[1] = v29;
    uint64_t result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))*v15)(*(void *)(v11 + 56) + v30 * v35, v47, v48);
    ++*(void *)(v11 + 16);
    uint64_t v9 = v26;
    if (v14) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_42;
    }
    if (v21 >= v42)
    {
      swift_release();
      uint64_t v3 = v2;
      uint64_t v22 = v43;
      goto LABEL_35;
    }
    uint64_t v22 = v43;
    unint64_t v23 = v43[v21];
    ++v18;
    if (!v23)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v18];
      if (!v23) {
        break;
      }
    }
LABEL_18:
    unint64_t v14 = (v23 - 1) & v23;
  }
  int64_t v24 = v21 + 2;
  if (v24 < v42)
  {
    unint64_t v23 = v43[v24];
    if (!v23)
    {
      while (1)
      {
        int64_t v18 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_43;
        }
        if (v18 >= v42) {
          goto LABEL_33;
        }
        unint64_t v23 = v43[v18];
        ++v24;
        if (v23) {
          goto LABEL_18;
        }
      }
    }
    int64_t v18 = v24;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v2;
LABEL_35:
  if (v46)
  {
    uint64_t v41 = 1 << *(unsigned char *)(v9 + 32);
    if (v41 >= 64) {
      sub_252AED1B0(0, (unint64_t)(v41 + 63) >> 6, v22);
    }
    else {
      void *v22 = -1 << v41;
    }
    *(void *)(v9 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_252CF3D80(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_252AC3A24(&qword_269C48EA8);
  char v50 = a2;
  uint64_t v5 = sub_252D1A3A8();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
    uint64_t v43 = v45;
    goto LABEL_41;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v47 = (void *)(v4 + 64);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  int64_t v46 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v5 + 64;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  uint64_t v48 = v4;
  uint64_t v49 = v6;
  uint64_t v13 = v6;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v51 = (v9 - 1) & v9;
  int64_t v52 = v12;
  for (unint64_t i = __clz(__rbit64(v9)) | (v12 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    uint64_t v20 = *(void *)(v4 + 56);
    int64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    int64_t v24 = (uint64_t *)(v20 + 104 * i);
    uint64_t v25 = v24[1];
    uint64_t v53 = *v24;
    uint64_t v26 = v24[3];
    uint64_t v27 = v24[5];
    uint64_t v56 = v24[4];
    uint64_t v57 = v24[2];
    uint64_t v28 = v24[7];
    uint64_t v55 = v24[6];
    unint64_t v29 = v24[8];
    uint64_t v30 = v24[9];
    char v54 = *((unsigned char *)v24 + 80);
    long long v58 = *(_OWORD *)(v24 + 11);
    if ((v50 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252CF4B1C(v29);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_252D1A6A8();
    sub_252D19DB8();
    uint64_t v31 = sub_252D1A6E8();
    uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v10 + 8 * (v33 >> 6))) == 0)
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v32) >> 6;
      uint64_t v36 = v27;
      uint64_t result = v30;
      while (++v34 != v38 || (v37 & 1) == 0)
      {
        BOOL v39 = v34 == v38;
        if (v34 == v38) {
          unint64_t v34 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v10 + 8 * v34);
        if (v40 != -1)
        {
          unint64_t v35 = __clz(__rbit64(~v40)) + (v34 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    unint64_t v35 = __clz(__rbit64((-1 << v33) & ~*(void *)(v10 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    uint64_t v36 = v27;
    uint64_t result = v30;
LABEL_30:
    *(void *)(v10 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    uint64_t v41 = (void *)(*(void *)(v13 + 48) + 16 * v35);
    *uint64_t v41 = v23;
    v41[1] = v22;
    uint64_t v42 = *(void *)(v13 + 56) + 104 * v35;
    *(void *)uint64_t v42 = v53;
    *(void *)(v42 + 8) = v25;
    *(void *)(v42 + 16) = v57;
    *(void *)(v42 + 24) = v26;
    *(void *)(v42 + 32) = v56;
    *(void *)(v42 + 40) = v36;
    *(void *)(v42 + 48) = v55;
    *(void *)(v42 + 56) = v28;
    *(void *)(v42 + 64) = v29;
    *(void *)(v42 + 72) = result;
    *(unsigned char *)(v42 + 80) = v54;
    *(_OWORD *)(v42 + 88) = v58;
    ++*(void *)(v13 + 16);
    uint64_t v4 = v48;
    unint64_t v9 = v51;
    int64_t v12 = v52;
    if (v51) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_43;
    }
    if (v15 >= v46)
    {
      swift_release();
      uint64_t v43 = v45;
      uint64_t v16 = v47;
      goto LABEL_35;
    }
    uint64_t v16 = v47;
    unint64_t v17 = v47[v15];
    int64_t v18 = v12 + 1;
    if (!v17)
    {
      int64_t v18 = v12 + 2;
      if (v12 + 2 >= v46) {
        goto LABEL_33;
      }
      unint64_t v17 = v47[v18];
      if (!v17) {
        break;
      }
    }
LABEL_18:
    uint64_t v51 = (v17 - 1) & v17;
    int64_t v52 = v18;
  }
  uint64_t v19 = v12 + 3;
  if (v12 + 3 < v46)
  {
    unint64_t v17 = v47[v19];
    if (!v17)
    {
      while (1)
      {
        int64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_44;
        }
        if (v18 >= v46) {
          goto LABEL_33;
        }
        unint64_t v17 = v47[v18];
        ++v19;
        if (v17) {
          goto LABEL_18;
        }
      }
    }
    int64_t v18 = v12 + 3;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v43 = v45;
LABEL_35:
  if (v50)
  {
    uint64_t v44 = 1 << *(unsigned char *)(v4 + 32);
    if (v44 >= 64) {
      sub_252AED1B0(0, (unint64_t)(v44 + 63) >> 6, v16);
    }
    else {
      *uint64_t v16 = -1 << v44;
    }
    uint64_t v6 = v49;
    *(void *)(v4 + 16) = 0;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v6 = v49;
  }
LABEL_41:
  *uint64_t v43 = v6;
  return result;
}

uint64_t sub_252CF417C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ClientAction(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_252AC3A24(&qword_269C48E98);
  int v43 = a2;
  uint64_t v9 = sub_252D1A3A8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_40;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  BOOL v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    int64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * i);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *(void *)(v42 + 72);
    uint64_t v28 = *(void *)(v8 + 56) + v27 * i;
    if (v43)
    {
      sub_252CF4BDC(v28, (uint64_t)v7, (void (*)(void))type metadata accessor for ClientAction);
    }
    else
    {
      sub_252CF4B7C(v28, (uint64_t)v7, (void (*)(void))type metadata accessor for ClientAction);
      swift_bridgeObjectRetain();
    }
    sub_252D1A6A8();
    sub_252D19DB8();
    uint64_t result = sub_252D1A6E8();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) == 0)
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      while (++v31 != v34 || (v33 & 1) == 0)
      {
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v31);
        if (v36 != -1)
        {
          unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(void *)(v15 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    char v37 = (void *)(*(void *)(v10 + 48) + 16 * v32);
    *char v37 = v26;
    v37[1] = v25;
    uint64_t result = sub_252CF4BDC((uint64_t)v7, *(void *)(v10 + 56) + v27 * v32, (void (*)(void))type metadata accessor for ClientAction);
    ++*(void *)(v10 + 16);
    if (v14) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_42;
    }
    if (v20 >= v40)
    {
      swift_release();
      uint64_t v3 = v39;
      int64_t v21 = v41;
      goto LABEL_35;
    }
    int64_t v21 = v41;
    unint64_t v22 = v41[v20];
    ++v17;
    if (!v22)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v22 = v41[v17];
      if (!v22) {
        break;
      }
    }
LABEL_18:
    unint64_t v14 = (v22 - 1) & v22;
  }
  int64_t v23 = v20 + 2;
  if (v23 < v40)
  {
    unint64_t v22 = v41[v23];
    if (!v22)
    {
      while (1)
      {
        int64_t v17 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_43;
        }
        if (v17 >= v40) {
          goto LABEL_33;
        }
        unint64_t v22 = v41[v17];
        ++v23;
        if (v22) {
          goto LABEL_18;
        }
      }
    }
    int64_t v17 = v23;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v39;
LABEL_35:
  if (v43)
  {
    uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
    if (v38 >= 64) {
      sub_252AED1B0(0, (unint64_t)(v38 + 63) >> 6, v21);
    }
    else {
      *int64_t v21 = -1 << v38;
    }
    *(void *)(v8 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_252CF4550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_252AC7C94(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_252AC3A24(&qword_269C48E88);
  if ((sub_252D1A338() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_252AC7C94(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_252D1A628();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t v17 = sub_252AC3A24(&qword_269C437E0);
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v11;
    return v19(v21, a1, v20);
  }
  else
  {
    sub_252CF4948(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_252CF46C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_252AC7C94(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_252AC3A24(&qword_269C48EA0);
  if ((sub_252D1A338() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_252AC7C94(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_252D1A628();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7] + 104 * v11;
    return sub_252CF848C((uint64_t)a1, v16);
  }
  else
  {
    sub_252CF49FC(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_252CF47F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_252AC7C94(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_252AC3A24(&qword_269C48E90);
  if ((sub_252D1A338() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_252AC7C94(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_252D1A628();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t v17 = v16 + *(void *)(*(void *)(type metadata accessor for ClientAction(0) - 8) + 72) * v11;
    return sub_252CF8340(a1, v17);
  }
  else
  {
    sub_252CF4A70(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_252CF4948(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_252AC3A24(&qword_269C437E0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_252CF49FC(unint64_t a1, uint64_t a2, uint64_t a3, void *__src, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = memcpy((void *)(a5[7] + 104 * a1), __src, 0x68uLL);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_252CF4A70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ClientAction(0);
  uint64_t result = sub_252CF4BDC(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (void (*)(void))type metadata accessor for ClientAction);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_252CF4B1C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_252B223A4(result);
  }
  return result;
}

unint64_t sub_252CF4B30()
{
  unint64_t result = qword_269C48DE0;
  if (!qword_269C48DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48DE0);
  }
  return result;
}

uint64_t sub_252CF4B7C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_252CF4BDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_252CF4C3C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_252B223EC(result);
  }
  return result;
}

uint64_t sub_252CF4C50(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

uint64_t type metadata accessor for ClientAction.Definition(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B232108);
}

uint64_t type metadata accessor for ClientAction.Definition.ParameterDefinition(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2320F8);
}

unint64_t sub_252CF4CE4()
{
  unint64_t result = qword_26B234130;
  if (!qword_26B234130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234130);
  }
  return result;
}

unint64_t sub_252CF4D30(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void sub_252CF4D74(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v32 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v31 = v3;
  while (1)
  {
    if (v6 >= *(void *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_252D1A628();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v7 = *(void *)(v3 + v5 + 32);
    uint64_t v8 = *(void *)(v3 + v5 + 40);
    uint64_t v9 = *(void *)(v3 + v5 + 56);
    uint64_t v10 = *(void *)(v3 + v5 + 72);
    uint64_t v38 = *(void *)(v3 + v5 + 64);
    uint64_t v39 = *(void *)(v3 + v5 + 48);
    uint64_t v11 = *(void *)(v3 + v5 + 88);
    uint64_t v36 = *(void *)(v3 + v5 + 96);
    uint64_t v37 = *(void *)(v3 + v5 + 80);
    unint64_t v13 = *(void *)(v3 + v5 + 112);
    uint64_t v12 = *(void *)(v3 + v5 + 120);
    char v35 = *(unsigned char *)(v3 + v5 + 128);
    long long v43 = *(_OWORD *)(v3 + v5 + 136);
    uint64_t v40 = *(void *)(v3 + v5 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_252CF4B1C(v13);
    swift_bridgeObjectRetain();
    swift_retain();
    if (!v8) {
      goto LABEL_18;
    }
    unint64_t v33 = v13;
    uint64_t v34 = v12;
    uint64_t v14 = (void *)*a3;
    unint64_t v16 = sub_252AC7C94(v7, v8);
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_21;
    }
    char v20 = v15;
    if (v14[3] < v19) {
      break;
    }
    if (a2)
    {
      if (v15) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_252AC3A24(&qword_269C48EA0);
      sub_252D1A348();
      if (v20) {
        goto LABEL_16;
      }
    }
LABEL_12:
    int64_t v23 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    int64_t v24 = (uint64_t *)(v23[6] + 16 * v16);
    uint64_t *v24 = v7;
    v24[1] = v8;
    uint64_t v25 = v23[7] + 104 * v16;
    *(void *)uint64_t v25 = v39;
    *(void *)(v25 + 8) = v9;
    *(void *)(v25 + 16) = v38;
    *(void *)(v25 + 24) = v10;
    *(void *)(v25 + 32) = v37;
    *(void *)(v25 + 40) = v11;
    *(void *)(v25 + 48) = v36;
    *(void *)(v25 + 56) = v40;
    *(void *)(v25 + 64) = v33;
    *(void *)(v25 + 72) = v34;
    *(unsigned char *)(v25 + 80) = v35;
    *(_OWORD *)(v25 + 88) = v43;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_22;
    }
    ++v6;
    v23[2] = v28;
    v5 += 120;
    a2 = 1;
    uint64_t v3 = v31;
    if (v32 == v6) {
      goto LABEL_18;
    }
  }
  sub_252CF3D80(v19, a2 & 1);
  unint64_t v21 = sub_252AC7C94(v7, v8);
  if ((v20 & 1) != (v22 & 1)) {
    goto LABEL_23;
  }
  unint64_t v16 = v21;
  if ((v20 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v29 = (void *)swift_allocError();
  swift_willThrow();
  id v30 = v29;
  sub_252AC3A24(&qword_26B231758);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_252CF4C3C(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_252D1A268();
  sub_252D19DD8();
  sub_252D1A328();
  sub_252D19DD8();
  sub_252D1A378();
  __break(1u);
}

void sub_252CF5160(uint64_t a1, char a2, void *a3)
{
  uint64_t v40 = a3;
  uint64_t v6 = type metadata accessor for ClientAction(0);
  uint64_t v39 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_252AC3A24(&qword_269C43810);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (void *)((char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35[1] = v3;
  v35[2] = a1;
  uint64_t v38 = (uint64_t)v13 + *(int *)(v10 + 48);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v36 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  uint64_t v37 = v8;
  while (1)
  {
    sub_252CF83A4(v15, (uint64_t)v13);
    unint64_t v16 = v13;
    uint64_t v17 = *v13;
    uint64_t v18 = v13[1];
    uint64_t v43 = v17;
    uint64_t v44 = v18;
    sub_252CF4BDC(v38, (uint64_t)v8, (void (*)(void))type metadata accessor for ClientAction);
    uint64_t v19 = (void *)*v40;
    unint64_t v21 = sub_252AC7C94(v17, v18);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_252D1A628();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_252AC3A24(&qword_269C48E90);
      sub_252D1A348();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = (void *)*v40;
    *(void *)(*v40 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    uint64_t v29 = (uint64_t *)(v28[6] + 16 * v21);
    uint64_t *v29 = v17;
    v29[1] = v18;
    uint64_t v8 = v37;
    sub_252CF4BDC((uint64_t)v37, v28[7] + *(void *)(v39 + 72) * v21, (void (*)(void))type metadata accessor for ClientAction);
    uint64_t v30 = v28[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_18;
    }
    v28[2] = v32;
    v15 += v36;
    a2 = 1;
    --v14;
    unint64_t v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_252CF417C(v24, a2 & 1);
  unint64_t v26 = sub_252AC7C94(v17, v18);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  unint64_t v33 = (void *)swift_allocError();
  swift_willThrow();
  id v45 = v33;
  id v34 = v33;
  sub_252AC3A24(&qword_26B231758);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_252CF4C50((uint64_t)v37, (void (*)(void))type metadata accessor for ClientAction);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_252D1A268();
  sub_252D19DD8();
  sub_252D1A328();
  sub_252D19DD8();
  sub_252D1A378();
  __break(1u);
}

uint64_t sub_252CF55B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_252D1A6B8();
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v11 = a2 + 32;
    do
    {
      uint64_t v6 = (uint64_t *)(v11 + 24 * v5);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[2];
      sub_252D1A6B8();
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v10 = v7 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_252D19DB8();
          swift_bridgeObjectRelease();
          v10 += 16;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        if (!v8)
        {
LABEL_9:
          sub_252D1A6C8();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v8) {
          goto LABEL_9;
        }
      }
      sub_252D1A6C8();
      swift_bridgeObjectRetain();
      sub_252D19DB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      ++v5;
      uint64_t result = swift_bridgeObjectRelease();
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t sub_252CF5704(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_252D1A6B8();
  if (v3)
  {
    uint64_t v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_252D19DB8();
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_252CF577C()
{
  unint64_t result = qword_269C48DF8;
  if (!qword_269C48DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48DF8);
  }
  return result;
}

uint64_t sub_252CF57C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_252D1A6B8();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_252CF4B7C(v9, (uint64_t)v6, (void (*)(void))type metadata accessor for ClientAction.Definition.ParameterDefinition);
      swift_bridgeObjectRetain();
      sub_252D19DB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_252D19DB8();
      swift_bridgeObjectRelease();
      sub_252D19C08();
      sub_252CF4D30((uint64_t)&unk_269C48DE8);
      sub_252D19CD8();
      uint64_t result = sub_252CF4C50((uint64_t)v6, (void (*)(void))type metadata accessor for ClientAction.Definition.ParameterDefinition);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

unint64_t sub_252CF599C()
{
  unint64_t result = qword_26B234148;
  if (!qword_26B234148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234148);
  }
  return result;
}

unint64_t sub_252CF59E8()
{
  unint64_t result = qword_26B231448;
  if (!qword_26B231448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231448);
  }
  return result;
}

unint64_t sub_252CF5A34(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_252AEA288(&qword_26B234898);
    sub_252CF4D30(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252CF5AC4(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_252AEA288(&qword_26B232178);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252CF5B30()
{
  unint64_t result = qword_26B231C50;
  if (!qword_26B231C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C50);
  }
  return result;
}

uint64_t type metadata accessor for ClientAction(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C48E50);
}

uint64_t sub_252CF5B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C43810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_252CF5C04()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_252CF5C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_252CF5D04;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269C48E10 + dword_269C48E10);
  return v8(a1, a2, v6);
}

uint64_t sub_252CF5D04()
{
  sub_252AEA3C4();
  sub_252AEA2EC();
  uint64_t v1 = *v0;
  sub_252AEA32C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

unint64_t sub_252CF5DC8()
{
  unint64_t result = qword_269C48E28;
  if (!qword_269C48E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E28);
  }
  return result;
}

uint64_t sub_252CF5E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C41A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_252CF5E7C(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_252CF5E88()
{
  return sub_252CF4D30((uint64_t)&unk_269C48E38);
}

unint64_t sub_252CF5ED4()
{
  unint64_t result = qword_269C48E40;
  if (!qword_269C48E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E40);
  }
  return result;
}

unint64_t sub_252CF5F20()
{
  return sub_252CF4D30((uint64_t)&unk_269C48E48);
}

uint64_t destroy for ClientEffect(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 64);
  if ((~v2 & 0xF000000000000007) != 0) {
    sub_252B223EC(v2);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ClientEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  unint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v8 & 0xF000000000000007) != 0) {
    sub_252B223A4(v8);
  }
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClientEffect(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (unint64_t *)(a1 + 64);
  unint64_t v5 = *(void *)(a2 + 64);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 64) & 0xF000000000000007) != 0)
  {
    if (v6 == 0xF000000000000007)
    {
      sub_252CF61DC(a1 + 64);
      *uint64_t v4 = *(void *)(a2 + 64);
    }
    else
    {
      sub_252B223A4(*(void *)(a2 + 64));
      unint64_t v7 = *v4;
      *uint64_t v4 = v5;
      sub_252B223EC(v7);
    }
  }
  else
  {
    if (v6 != 0xF000000000000007) {
      sub_252B223A4(*(void *)(a2 + 64));
    }
    *uint64_t v4 = v5;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_252CF61DC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ClientEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(a1 + 64);
  unint64_t v8 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a2 + 64);
  if ((~v8 & 0xF000000000000007) != 0)
  {
    if ((~v10 & 0xF000000000000007) != 0)
    {
      void *v9 = v10;
      sub_252B223EC(v8);
      goto LABEL_6;
    }
    sub_252CF61DC(a1 + 64);
  }
  void *v9 = v10;
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientEffect(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientEffect(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ClientEffect()
{
}

void type metadata accessor for ClientEffect.Registry()
{
}

void *initializeBufferWithCopyOfBuffer for ClientAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    uint64_t v9 = (int *)type metadata accessor for ClientAction.Definition(0);
    uint64_t v10 = v9[7];
    uint64_t v19 = (char *)a2 + v10;
    char v20 = (char *)v4 + v10;
    uint64_t v11 = sub_252D19C08();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v20, v19, v11);
    *((unsigned char *)v4 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    *(void *)((char *)v4 + v9[9]) = *(void *)((char *)a2 + v9[9]);
    *(void *)((char *)v4 + v9[10]) = *(void *)((char *)a2 + v9[10]);
    *((unsigned char *)v4 + v9[11]) = *((unsigned char *)a2 + v9[11]);
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ClientAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ClientAction.Definition(0) + 28);
  uint64_t v3 = sub_252D19C08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for ClientAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  uint64_t v7 = (int *)type metadata accessor for ClientAction.Definition(0);
  uint64_t v8 = v7[7];
  uint64_t v17 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_252D19C08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v17, v9, v10);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
  *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ClientAction(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for ClientAction.Definition(0);
  uint64_t v7 = v6[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = (int *)type metadata accessor for ClientAction.Definition(0);
  uint64_t v8 = v7[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_252D19C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *(void *)(a1 + v7[10]) = *(void *)(a2 + v7[10]);
  *(unsigned char *)(a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for ClientAction(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for ClientAction.Definition(0);
  uint64_t v9 = v8[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
  *(void *)((char *)a1 + v8[9]) = *(void *)((char *)a2 + v8[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v8[10]) = *(void *)((char *)a2 + v8[10]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CF6A94);
}

uint64_t sub_252CF6A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ClientAction.Definition(0);
  sub_252AEA314();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_252B4C1B8(*(void *)(a1 + *(int *)(a3 + 20)));
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for ClientAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CF6B28);
}

void sub_252CF6B28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ClientAction.Definition(0);
  sub_252AEA314();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_252CF6BB0()
{
  uint64_t result = type metadata accessor for ClientAction.Definition(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClientAction.Definition(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    uint64_t v17 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    uint64_t v11 = sub_252D19C08();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v17, v10, v11);
    uint64_t v13 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)v4 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ClientAction.Definition(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_252D19C08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClientAction.Definition(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[7];
  uint64_t v15 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_252D19C08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v15, v9, v10);
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClientAction.Definition(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for ClientAction.Definition(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_252D19C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

void *assignWithTake for ClientAction.Definition(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CF723C);
}

uint64_t sub_252CF723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_252B4C1B8(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_252D19C08();
  uint64_t v8 = a1 + *(int *)(a3 + 28);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CF72CC);
}

void sub_252CF72CC()
{
  sub_252B4C1A4();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_252D19C08();
    uint64_t v6 = v1 + *(int *)(v4 + 28);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, v0, v0, v5);
  }
}

uint64_t sub_252CF7340()
{
  uint64_t result = sub_252D19C08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientAction.Definition.ParameterDefinition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_252D19C08();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for ClientAction.Definition.ParameterDefinition(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_252D19C08();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ClientAction.Definition.ParameterDefinition(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19C08();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for ClientAction.Definition.ParameterDefinition(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ClientAction.Definition.ParameterDefinition(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for ClientAction.Definition.ParameterDefinition(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_252D19C08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252CF7800);
}

uint64_t sub_252CF7800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_252B4C1B8(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_252D19C08();
  uint64_t v8 = a1 + *(int *)(a3 + 24);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252CF7890);
}

void sub_252CF7890()
{
  sub_252B4C1A4();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_252D19C08();
    uint64_t v6 = v1 + *(int *)(v4 + 24);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, v0, v0, v5);
  }
}

uint64_t sub_252CF7904()
{
  uint64_t result = sub_252D19C08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ClientAction.Definition.ExampleInvocationDefinition()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16IntelligenceFlow12ClientActionV10DefinitionV27ExampleInvocationDefinitionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClientAction.Definition.ExampleInvocationDefinition(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ClientAction.Definition.ExampleInvocationDefinition(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientAction.Definition.ExampleInvocationDefinition(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientAction.Definition.ExampleInvocationDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ClientAction.Definition.ExampleInvocationDefinition()
{
}

void type metadata accessor for ClientAction.Registry()
{
}

uint64_t sub_252CF7B64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_252CF7F18(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_252CF7B7C);
}

uint64_t sub_252CF7B7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_252CF7B84()
{
  return sub_252CF7B94();
}

uint64_t sub_252CF7B94()
{
  return swift_bridgeObjectRelease();
}

uint64_t *sub_252CF7B9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_252CF7F94(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_252CF7B7C, (void (*)(uint64_t, uint64_t, uint64_t))sub_252CF7B94);
}

uint64_t *sub_252CF7BC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_252CF8018(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_252CF7B94);
}

void type metadata accessor for ClientAction.Registry.RegistryError()
{
}

unsigned char *storeEnumTagSinglePayload for ClientAction.Definition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CF7CC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientAction.Definition.CodingKeys()
{
  return &type metadata for ClientAction.Definition.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CF7DC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys()
{
  return &type metadata for ClientAction.Definition.ExampleInvocationDefinition.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClientAction.Definition.ParameterDefinition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CF7EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientAction.Definition.ParameterDefinition.CodingKeys()
{
  return &type metadata for ClientAction.Definition.ParameterDefinition.CodingKeys;
}

uint64_t sub_252CF7F00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_252CF7F18(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_252CF84CC);
}

uint64_t sub_252CF7F18(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *sub_252CF7F68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_252CF7F94(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_252CF84CC, (void (*)(uint64_t, uint64_t, uint64_t))sub_252CF84D0);
}

uint64_t *sub_252CF7F94(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *sub_252CF8000(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_252CF8018(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_252CF84D0);
}

uint64_t *sub_252CF8018(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

void type metadata accessor for ClientEffect.Registry.RegistryError()
{
}

unint64_t sub_252CF8074()
{
  unint64_t result = qword_269C48E60;
  if (!qword_269C48E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E60);
  }
  return result;
}

unint64_t sub_252CF80C4()
{
  unint64_t result = qword_269C48E68;
  if (!qword_269C48E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E68);
  }
  return result;
}

unint64_t sub_252CF8114()
{
  unint64_t result = qword_269C48E70;
  if (!qword_269C48E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E70);
  }
  return result;
}

unint64_t sub_252CF8164()
{
  unint64_t result = qword_26B234158;
  if (!qword_26B234158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234158);
  }
  return result;
}

unint64_t sub_252CF81B4()
{
  unint64_t result = qword_26B234150;
  if (!qword_26B234150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234150);
  }
  return result;
}

unint64_t sub_252CF8204()
{
  unint64_t result = qword_269C48E78;
  if (!qword_269C48E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E78);
  }
  return result;
}

unint64_t sub_252CF8254()
{
  unint64_t result = qword_269C48E80;
  if (!qword_269C48E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48E80);
  }
  return result;
}

unint64_t sub_252CF82A4()
{
  unint64_t result = qword_26B234140;
  if (!qword_26B234140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234140);
  }
  return result;
}

unint64_t sub_252CF82F4()
{
  unint64_t result = qword_26B234138;
  if (!qword_26B234138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234138);
  }
  return result;
}

uint64_t sub_252CF8340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_252CF83A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C43810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_252CF840C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_252CF848C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_252CF84E0()
{
  return v0;
}

uint64_t sub_252CF84F8()
{
  return swift_task_alloc();
}

uint64_t sub_252CF8514()
{
  type metadata accessor for ClientAction.Definition(0);
  return sub_252D19C08();
}

uint64_t sub_252CF856C()
{
  type metadata accessor for ClientAction.Definition.ParameterDefinition(0);
  return sub_252D19C08();
}

uint64_t sub_252CF85A0()
{
  return *(void *)(v0 + 192);
}

uint64_t sub_252CF85C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  type metadata accessor for ClientAction.Definition(0);
  return sub_252D19C08();
}

uint64_t sub_252CF8608@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 + a1) = v1;
  *(void *)(v3 + *(int *)(v4 + 40)) = v1;
  return v2;
}

uint64_t sub_252CF8628()
{
  return sub_252D1A498();
}

uint64_t sub_252CF8654()
{
  return sub_252D1A578();
}

uint64_t sub_252CF8680()
{
  return sub_252D1A578();
}

uint64_t sub_252CF86CC()
{
  return v0;
}

uint64_t sub_252CF86F8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_252D1A538();
}

uint64_t sub_252CF8748()
{
  return v0 + 8;
}

void sub_252CF8758()
{
  *(void *)(v1 - 88) = *(void *)(v0 + 72);
}

uint64_t sub_252CF8770@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return sub_252D1A458();
}

void sub_252CF8790()
{
  *char v5 = v4;
  v5[1] = v3;
  uint64_t v5[2] = v2;
  v5[3] = v1;
  v5[4] = v0;
}

uint64_t sub_252CF87B8()
{
  return v0;
}

uint64_t IndexedElements.Iterator.inner.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CF8B3C(MEMORY[0x263F8DC58], a1);
}

uint64_t IndexedElements.Iterator.inner.setter(uint64_t a1)
{
  sub_252CFABA0();
  sub_252CFAB64();
  sub_252CFAB4C();
  sub_252D1A2B8();
  sub_252CFAB38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v1, a1);
}

uint64_t (*IndexedElements.Iterator.inner.modify())()
{
  return nullsub_1;
}

uint64_t IndexedElements.Iterator.init(inner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252CF8C1C(a1, MEMORY[0x263F8DC58], a2);
}

uint64_t IndexedElements.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = sub_252CFABC0();
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = v4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_252D1A178();
  sub_252AEDBD0();
  uint64_t v10 = v9;
  sub_252CFAB80();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_252CFABC0();
  uint64_t v15 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v28 = v14;
  uint64_t v29 = v2;
  uint64_t v30 = v15;
  uint64_t v31 = v5;
  sub_252D1A2B8();
  sub_252D1A2A8();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v13, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
    uint64_t v16 = swift_getTupleTypeMetadata2();
    uint64_t v17 = v27;
    uint64_t v18 = 1;
  }
  else
  {
    uint64_t v19 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v20 = v26;
    uint64_t v21 = swift_getTupleTypeMetadata2();
    uint64_t v22 = v27;
    uint64_t v23 = v27 + *(int *)(v21 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v27, v13, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v23, v19, AssociatedTypeWitness);
    uint64_t v17 = v22;
    uint64_t v18 = 0;
    uint64_t v16 = v21;
  }
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v17, v18, 1, v16);
}

uint64_t IndexedElements.inner.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CF8B3C(MEMORY[0x263F8DC60], a1);
}

uint64_t sub_252CF8B3C@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_252CFABE0();
  a1(v5);
  sub_252CFAB38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
}

uint64_t IndexedElements.init(inner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252CF8C1C(a1, MEMORY[0x263F8DC60], a2);
}

uint64_t sub_252CF8C1C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = sub_252CFABE0();
  a2(v6);
  sub_252CFAB38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(a3, a1);
}

uint64_t IndexedElements.makeIterator()@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  sub_252CFAB64();
  sub_252CFAB8C();
  uint64_t v3 = sub_252D1A2C8();
  sub_252AEDBD0();
  uint64_t v5 = v4;
  sub_252CFAB80();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v13[-v7];
  sub_252CFAB8C();
  sub_252D1A2B8();
  sub_252CFAB80();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v13[-v10];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v3);
  sub_252D1A298();
  return IndexedElements.Iterator.init(inner:)((uint64_t)v11, a1);
}

uint64_t sub_252CF8E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  IndexedElements.makeIterator()(a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t sub_252CF8EA8()
{
  return sub_252D19E58();
}

uint64_t Collection.indexed()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_252AEDBD0();
  uint64_t v8 = v7;
  sub_252CFAB80();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v13 = *(void *)(a2 + 8);
  v18[0] = AssociatedTypeWitness;
  v18[1] = a1;
  v18[2] = v12;
  v18[3] = v13;
  sub_252D1A2C8();
  sub_252CFAB80();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v18 - v15;
  sub_252D1A078();
  sub_252D1A608();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
  return IndexedElements.init(inner:)((uint64_t)v16, a3);
}

uint64_t sub_252CF9044()
{
  return swift_getWitnessTable();
}

uint64_t sub_252CF9060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CF9B24(a1, a2, a3, MEMORY[0x263F8DC60]);
}

uint64_t *sub_252CF9078(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(v5 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v7 + 64) + v9;
  uint64_t v11 = (*(unsigned char *)(v7 + 80) | v9);
  if (v11 > 7
    || ((*(_DWORD *)(v7 + 80) | v9) & 0x100000) != 0
    || (v10 & ~(unint64_t)v9) + *(void *)(*(void *)(v5 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
  }
  else
  {
    unint64_t v15 = ~(unint64_t)v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v15, ((unint64_t)a2 + v10) & v15, v5);
  }
  return a1;
}

uint64_t sub_252CF91EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  unint64_t v8 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8, v3);
}

uint64_t sub_252CF92B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_252CF9380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_252CF944C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_252CF9518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v5);
  return a1;
}

uint64_t sub_252CF95E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  uint64_t v8 = *(void *)(v5 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v12 = AssociatedTypeWitness;
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v5 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v7 >= v9)
        {
          uint64_t v21 = (uint64_t)a1;
        }
        else
        {
          uint64_t v21 = ((unint64_t)a1 + v13) & ~v11;
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v12 = v5;
        }
        return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, v7, v12);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = (v13 & ~v11) + *(_DWORD *)(*(void *)(v5 - 8) + 64);
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v10 + (v20 | v18) + 1;
}

void sub_252CF981C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9) {
    unsigned int v12 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v7 - 8) + 64);
  char v16 = 8 * v15;
  if (a3 <= v12)
  {
    int v17 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v20 = ((a3 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v15 < 4)
    {
      int v19 = (v18 >> v16) + 1;
      if (v15)
      {
        int v21 = v18 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v15] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v19;
        return;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v15] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x252CF9ACCLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v11)
        {
          uint64_t v22 = (uint64_t)a1;
          uint64_t v23 = a2;
        }
        else
        {
          uint64_t v22 = (unint64_t)&a1[v14] & ~v13;
          uint64_t v23 = a2;
          uint64_t v9 = v11;
          uint64_t AssociatedTypeWitness = v7;
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, v23, v9, AssociatedTypeWitness);
      }
      return;
  }
}

uint64_t type metadata accessor for IndexedElements()
{
  return sub_252AC6680();
}

uint64_t sub_252CF9B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_252CF9B24(a1, a2, a3, MEMORY[0x263F8DC58]);
}

uint64_t sub_252CF9B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  sub_252CFABA0();
  sub_252CFAB64();
  sub_252CFAB4C();
  uint64_t result = a4(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_252CF9BF8(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v6 + v9;
  uint64_t v12 = *(void *)(v8 + 64);
  int v13 = *(_DWORD *)(v5 + 80) | v9;
  uint64_t v14 = v13;
  int v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || v12 + (v11 & (unint64_t)~v10) + 1 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v7;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    *(unsigned char *)((((unint64_t)a1 + v11) & v20) + v12) = *(unsigned char *)(v21 + v12);
  }
  return a1;
}

uint64_t sub_252CF9E00(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_252CF9F38(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  *(unsigned char *)(*(void *)(v9 + 48) + v11) = *(unsigned char *)(*(void *)(v9 + 48) + v12);
  return a1;
}

uint64_t sub_252CFA090(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  *(unsigned char *)(*(void *)(v9 + 40) + v11) = *(unsigned char *)(*(void *)(v9 + 40) + v12);
  return a1;
}

uint64_t sub_252CFA1E8(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  *(unsigned char *)(*(void *)(v9 + 32) + v11) = *(unsigned char *)(*(void *)(v9 + 32) + v12);
  return a1;
}

uint64_t sub_252CFA340(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  *(unsigned char *)(*(void *)(v9 + 24) + v11) = *(unsigned char *)(*(void *)(v9 + 24) + v12);
  return a1;
}

uint64_t sub_252CFA498(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6) {
    unsigned int v10 = v6;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  if (v10 <= 0xFE) {
    unsigned int v10 = 254;
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v7;
  uint64_t v14 = *(void *)(v5 + 64) + v11;
  if (a2 > v10)
  {
    uint64_t v15 = v12 + (v14 & ~v11) + 1;
    char v16 = 8 * v15;
    if (v15 > 3) {
      goto LABEL_9;
    }
    unsigned int v18 = ((a2 - v10 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
    if (v18 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
    if (v18 >= 2)
    {
LABEL_9:
      int v17 = *((unsigned __int8 *)a1 + v15);
      if (!*((unsigned char *)a1 + v15)) {
        goto LABEL_26;
      }
LABEL_16:
      int v19 = (v17 - 1) << v16;
      if (v15 > 3) {
        int v19 = 0;
      }
      if (v15)
      {
        if (v15 <= 3) {
          int v20 = v15;
        }
        else {
          int v20 = 4;
        }
        switch(v20)
        {
          case 2:
            int v21 = *a1;
            break;
          case 3:
            int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a1;
            break;
          default:
            int v21 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v21 = 0;
      }
      int v25 = v10 + (v21 | v19);
      return (v25 + 1);
    }
  }
LABEL_26:
  if (v6 != v10)
  {
    uint64_t v22 = ((unint64_t)a1 + v14) & ~v11;
    if (v9 == v10) {
      goto LABEL_29;
    }
    unsigned int v24 = *(unsigned __int8 *)(v22 + v12);
    if (v24 < 2) {
      return 0;
    }
    int v25 = (v24 + 2147483646) & 0x7FFFFFFF;
    return (v25 + 1);
  }
  uint64_t v22 = (uint64_t)a1;
  uint64_t v9 = v6;
  uint64_t v13 = AssociatedTypeWitness;
LABEL_29:

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, v9, v13);
}

void sub_252CFA790(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  if (v11 <= 0xFE) {
    unsigned int v11 = 254;
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64);
  size_t v15 = v14 + (v13 & ~v12) + 1;
  char v16 = 8 * v15;
  if (a3 <= v11)
  {
    int v17 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v21 = ((a3 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v21))
    {
      int v17 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v21 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v11 < a2)
  {
    unsigned int v18 = ~v11 + a2;
    if (v15 < 4)
    {
      int v19 = (v18 >> v16) + 1;
      if (v14 + (v13 & ~v12) != -1)
      {
        int v22 = v18 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v15] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v19;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v15] = v19;
        return;
      default:
        return;
    }
  }
  uint64_t v20 = ~v12;
  switch(v17)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x252CFAAF8);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (!a2) {
        return;
      }
LABEL_26:
      if (v7 == v11)
      {
        uint64_t v23 = (uint64_t)a1;
        uint64_t v24 = a2;
        uint64_t v10 = v7;
        uint64_t v8 = AssociatedTypeWitness;
      }
      else
      {
        uint64_t v23 = (unint64_t)&a1[v13] & v20;
        if (v10 != v11)
        {
          *(unsigned char *)(v23 + v14) = a2 + 1;
          return;
        }
        uint64_t v24 = a2;
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v23, v24, v10, v8);
      return;
  }
}

uint64_t type metadata accessor for IndexedElements.Iterator()
{
  return sub_252AC6680();
}

uint64_t sub_252CFAB64()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_252CFAB8C()
{
  *(void *)(v4 - 112) = v1;
  *(void *)(v4 - 104) = v0;
  *(void *)(v4 - 96) = v2;
  *(void *)(v4 - 88) = v3;
  return 0;
}

uint64_t sub_252CFABA0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_252CFABC0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_252CFABE0()
{
  return 0;
}

uint64_t static IntelligenceFlowError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = *(void **)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void **)a1;
  if (v3)
  {
    sub_252ACE7B0(v6);
    uint64_t v7 = v2;
  }
  else
  {
    sub_252ACE7B0(v6);
    uint64_t v7 = (void *)sub_252D193E8();
    sub_252AD16D8(v2);
  }
  sub_252ACE7B0(v4);
  if (v5)
  {
    uint64_t v8 = v4;
  }
  else
  {
    uint64_t v8 = (void *)sub_252D193E8();
    sub_252AD16D8(v4);
  }
  sub_252C0CBD4(0, (unint64_t *)&qword_269C49530);
  char v9 = sub_252D1A158();

  return v9 & 1;
}

uint64_t IntelligenceFlowError.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void *sub_252CFACDC(void *a1)
{
  char v3 = sub_252AC3A68(a1, a1[3]);
  sub_252D1A708();
  if (!v1)
  {
    sub_252AC3A68(v8, v8[3]);
    sub_252B593A8();
    sub_252D1A5E8();
    sub_252C0CBD4(0, &qword_269C48FC8);
    sub_252C0CBD4(0, &qword_269C48FD0);
    uint64_t v4 = sub_252D1A0C8();
    char v3 = (void *)v4;
    if (v4)
    {
      sub_252AC5C14(v6, v7);
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v8);
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
      return v3;
    }
    sub_252CFB59C();
    swift_allocError();
    swift_willThrow();
    sub_252AC5C14(v6, v7);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v8);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_252CFAE54(void *a1, uint64_t a2)
{
  v10[5] = *(id *)MEMORY[0x263EF8340];
  v10[0] = 0;
  id v3 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a2, 1, v10);
  id v4 = v10[0];
  if (v3)
  {
    uint64_t v5 = sub_252D194D8();
    unint64_t v7 = v6;

    sub_252AC3A68(a1, a1[3]);
    sub_252D1A728();
    sub_252CFB320((uint64_t)v10, (uint64_t)v10[3]);
    sub_252B5935C();
    sub_252D1A5F8();
    sub_252AC5C14(v5, v7);
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v10);
  }
  else
  {
    char v9 = v4;
    sub_252D193F8();

    return swift_willThrow();
  }
}

void *sub_252CFAFAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_252CFACDC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_252CFAFD8(void *a1)
{
  return sub_252CFAE54(a1, *v1);
}

id IntelligenceFlowError.error.getter()
{
  id v1 = *v0;
  sub_252ACE7B0(*v0);
  return v1;
}

id IntelligenceFlowError.nsError.getter()
{
  id v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    return v1;
  }
  else
  {
    uint64_t v5 = *(void **)v0;
    id v3 = v1;
    uint64_t v4 = sub_252D193E8();
    sub_252AD16D8(v5);
    return (id)v4;
  }
}

uint64_t IntelligenceFlowError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_252AC3A68(a1, a1[3]);
  sub_252D1A708();
  if (!v2)
  {
    sub_252AC3A68(v9, v9[3]);
    sub_252CFB19C();
    sub_252D1A5E8();
    id v5 = v8;
    uint64_t v6 = sub_252D1A128();

    if (v6)
    {

      id v5 = (id)v6;
    }
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v9);
    *(void *)a2 = v5;
    *(unsigned char *)(a2 + 8) = v6 == 0;
  }
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
}

unint64_t sub_252CFB19C()
{
  unint64_t result = qword_269C48FB8;
  if (!qword_269C48FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48FB8);
  }
  return result;
}

uint64_t IntelligenceFlowError.encode(to:)(void *a1)
{
  uint64_t v2 = *(void **)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_252AC3A68(a1, a1[3]);
  sub_252D1A728();
  if (v3)
  {
    sub_252CFB320((uint64_t)v7, v8);
    sub_252CFB370();
    sub_252D1A5F8();
  }
  else
  {
    swift_getErrorValue();
    id v4 = v2;
    uint64_t v6 = (void *)sub_252D1A648();
    sub_252CFB320((uint64_t)v7, v8);
    sub_252CFB370();
    sub_252D1A5F8();

    sub_252AD16D8(v2);
  }
  return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v7);
}

uint64_t sub_252CFB320(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_252CFB370()
{
  unint64_t result = qword_269C48FC0;
  if (!qword_269C48FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48FC0);
  }
  return result;
}

uint64_t sub_252CFB3BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFlowError.init(from:)(a1, a2);
}

uint64_t sub_252CFB3D4(void *a1)
{
  return IntelligenceFlowError.encode(to:)(a1);
}

void type metadata accessor for IntelligenceFlowError()
{
}

uint64_t _s16IntelligenceFlow21IntelligenceFlowErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_252ACE7B0(*(id *)a2);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void _s16IntelligenceFlow21IntelligenceFlowErrorVwxx_0(id *a1)
{
}

uint64_t _s16IntelligenceFlow21IntelligenceFlowErrorVwca_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_252ACE7B0(*(id *)a2);
  id v5 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_252AD16D8(v5);
  return a1;
}

uint64_t _s16IntelligenceFlow21IntelligenceFlowErrorVwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  sub_252AD16D8(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolboxClient.ToolboxClientError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolboxClient.ToolboxClientError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252CFB578(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for IntelligenceFlowError.Representation()
{
}

void type metadata accessor for IntelligenceFlowError.WrappedNSError()
{
}

unint64_t sub_252CFB59C()
{
  unint64_t result = qword_269C48FD8;
  if (!qword_269C48FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48FD8);
  }
  return result;
}

void type metadata accessor for IntelligenceFlowError.WrappedNSError.CouldNotUnarchiveNSError()
{
}

uint64_t SaltedLoggingIDConvertible.toLoggingId(scope:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(_OWORD *)id v5 = *a1;
  (*(void (**)(uint64_t *__return_ptr, unsigned char *))(a2 + 8))(&v9, v5);
  *(void *)id v5 = v9;
  *(_OWORD *)&v5[8] = v10;
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  SaltedLoggingIDData.toLoggingID()(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t SaltedLoggingIDData.toLoggingID()@<X0>(uint64_t a1@<X8>)
{
  v7[1] = a1;
  uint64_t v1 = sub_252D19588();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  char v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269C41880 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_252B01480(v1, (uint64_t)qword_269C48FE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v7[2] = 0;
  v7[3] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  swift_bridgeObjectRetain();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  swift_bridgeObjectRetain();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  return UUID.init(namespace:name:)((uint64_t)v4);
}

uint64_t sub_252CFB868()
{
  uint64_t v0 = sub_252D19588();
  sub_252B2279C(v0, qword_269C48FE0);
  sub_252B01480(v0, (uint64_t)qword_269C48FE0);
  return _s16IntelligenceFlow15SessionClientIDVACycfC_0();
}

void __swiftcall SaltedLoggingIDData.init(_:scope:category:)(IntelligenceFlow::SaltedLoggingIDData *__return_ptr retstr, Swift::String _, IntelligenceFlow::SaltedLoggingIDScope scope, Swift::String category)
{
  retstr->scope = *(IntelligenceFlow::SaltedLoggingIDScope *)scope.scopeData.value._countAndFlagsBits;
  retstr->logData = _;
  retstr->category._countAndFlagsBits = (uint64_t)scope.scopeData.value._object;
  retstr->category._object = (void *)category._countAndFlagsBits;
}

void static SaltedLoggingIDScope.process.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t static SaltedLoggingIDScope.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

IntelligenceFlow::SaltedLoggingIDCategory_optional __swiftcall SaltedLoggingIDCategory.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_252D1A3D8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SaltedLoggingIDCategory.rawValue.getter()
{
  if (*v0) {
    return 0x6574656D61726170;
  }
  else {
    return 0x74616469646E6163;
  }
}

uint64_t sub_252CFB980(char *a1, char *a2)
{
  return sub_252B00D94(*a1, *a2);
}

unint64_t sub_252CFB990()
{
  unint64_t result = qword_269C48FF8;
  if (!qword_269C48FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C48FF8);
  }
  return result;
}

uint64_t sub_252CFB9DC()
{
  return sub_252CFBEF0();
}

uint64_t sub_252CFB9E4()
{
  return sub_252B4CD18();
}

uint64_t sub_252CFB9EC()
{
  return sub_252B4D2FC();
}

IntelligenceFlow::SaltedLoggingIDCategory_optional sub_252CFB9F4(Swift::String *a1)
{
  return SaltedLoggingIDCategory.init(rawValue:)(*a1);
}

uint64_t sub_252CFBA00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SaltedLoggingIDCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t dispatch thunk of SaltedLoggingIDConvertible.getSaltedLoggingIDData(loggingScope:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void type metadata accessor for SaltedLoggingIDData()
{
}

void type metadata accessor for SaltedLoggingIDScope()
{
}

unsigned char *storeEnumTagSinglePayload for SaltedLoggingIDCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252CFBB20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SaltedLoggingIDCategory()
{
}

uint64_t _s16IntelligenceFlow15StructBuildablePAAE6create_23furtherInitializingWithxxn_yxzqd__YKXEtqd__YKs5ErrorRd__lFZ@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  sub_252AC66B4();
  uint64_t v12 = v11;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17(v14, v16);
  uint64_t v18 = *(void *)(a2 - 8);
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(a5, a1, a2);
  }
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v16, a3);
}

uint64_t _s16IntelligenceFlow20EmptyStructBuildablePAAEyxyxzqd__YKXEqd__YKcs5ErrorRd__lufC@<X0>(uint64_t (*a1)(uint64_t, char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v19 = a4;
  sub_252AC66B4();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
  uint64_t result = a1(a5, v14);
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a5, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v19, v14, a3);
  }
  return result;
}

uint64_t dispatch thunk of EmptyStructBuildable.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_252CFBDD4()
{
  return sub_252B4D218();
}

uint64_t sub_252CFBDE0(uint64_t a1)
{
  return sub_252CFBE20(a1, (void (*)(uint64_t))sub_252B1FF88);
}

uint64_t sub_252CFBE00(uint64_t a1)
{
  return sub_252CFBE20(a1, (void (*)(uint64_t))sub_252B20148);
}

uint64_t sub_252CFBE20(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = sub_252D1A6A8();
  a2(v3);
  sub_252D19CD8();
  return sub_252D1A6E8();
}

uint64_t sub_252CFBE80(uint64_t a1)
{
  return sub_252CFBF08(a1, (void (*)(unsigned char *, uint64_t))sub_252B4CEB8);
}

uint64_t sub_252CFBE98(uint64_t a1)
{
  return sub_252CFBF08(a1, (void (*)(unsigned char *, uint64_t))sub_252B4CD88);
}

uint64_t sub_252CFBEB0()
{
  return sub_252D1A6E8();
}

uint64_t sub_252CFBEF0()
{
  return sub_252B4D2FC();
}

uint64_t sub_252CFBEFC()
{
  return sub_252B4D110();
}

uint64_t sub_252CFBF08(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_252AF455C();
  a2(v5, a1);
  return sub_252D1A6E8();
}

uint64_t ToolDefinition.effect.getter@<X0>(unsigned char *a1@<X8>)
{
  sub_252D19B48();
  char v2 = sub_252D19E18();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

IntelligenceFlow::ToolEffect_optional __swiftcall ToolEffect.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  uint64_t v3 = sub_252D1A3D8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *char v2 = v5;
  return result;
}

uint64_t ToolEffect.rawValue.getter()
{
  if (*v0) {
    return 0x7972657571;
  }
  else {
    return 0x6E6F69746361;
  }
}

uint64_t sub_252CFC048(char *a1, char *a2)
{
  return sub_252B0138C(*a1, *a2);
}

uint64_t sub_252CFC054()
{
  return sub_252CFBEFC();
}

uint64_t sub_252CFC05C()
{
  return sub_252B4D0AC();
}

uint64_t sub_252CFC064()
{
  return sub_252B4D110();
}

IntelligenceFlow::ToolEffect_optional sub_252CFC06C(Swift::String *a1)
{
  return ToolEffect.init(rawValue:)(*a1);
}

uint64_t sub_252CFC078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ToolEffect.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_252CFC0A0()
{
  return sub_252D19E98();
}

uint64_t sub_252CFC100()
{
  return sub_252D19E68();
}

uint64_t ToolDefinition.id.getter()
{
  return sub_252AEA3DC();
}

uint64_t ToolDefinition.id.setter()
{
  uint64_t result = sub_252AF46E4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*ToolDefinition.id.modify())()
{
  return nullsub_1;
}

uint64_t ToolDefinition.bundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t ToolDefinition.bundleId.setter()
{
  uint64_t result = sub_252CBBB74();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*ToolDefinition.bundleId.modify())()
{
  return nullsub_1;
}

uint64_t ToolDefinition.displayName.getter()
{
  return sub_252AEA3DC();
}

uint64_t ToolDefinition.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ToolDefinition.displayName.modify())()
{
  return nullsub_1;
}

uint64_t ToolDefinition.explanation.getter()
{
  return sub_252AEA3DC();
}

uint64_t ToolDefinition.explanation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ToolDefinition.explanation.modify())()
{
  return nullsub_1;
}

unint64_t ToolDefinition.returnType.getter()
{
  unint64_t v1 = *(void *)(v0 + 64);
  sub_252CF4B1C(v1);
  return v1;
}

unint64_t ToolDefinition.returnType.setter(uint64_t a1)
{
  unint64_t result = sub_252CF4C3C(*(void *)(v1 + 64));
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*ToolDefinition.returnType.modify())()
{
  return nullsub_1;
}

uint64_t ToolDefinition.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ToolDefinition.parameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*ToolDefinition.parameters.modify())()
{
  return nullsub_1;
}

void ToolDefinition.effect.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

unsigned char *ToolDefinition.effect.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 80) = *result;
  return result;
}

uint64_t (*ToolDefinition.effect.modify())()
{
  return nullsub_1;
}

uint64_t ToolDefinition.init(id:bundleId:displayName:explanation:returnType:parameters:effect:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char *a12)
{
  char v12 = *a12;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(unsigned char *)(a9 + 80) = v12;
  return result;
}

uint64_t static ToolDefinition.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1 = sub_252CBA2B4(a1);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v8 = *(void *)(v3 + 56);
  unint64_t v26 = *(void *)(v3 + 64);
  char v22 = *(unsigned char *)(v3 + 80);
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v12 = *(void *)(v2 + 40);
  uint64_t v13 = *(void *)(v2 + 56);
  uint64_t v27 = *(void *)(v2 + 48);
  uint64_t v28 = *(void *)(v3 + 48);
  uint64_t v24 = *(void *)(v3 + 72);
  unint64_t v25 = *(void *)(v2 + 64);
  uint64_t v23 = *(void *)(v2 + 72);
  BOOL v14 = v1 == *(void *)v2 && *(void *)(v3 + 8) == *(void *)(v2 + 8);
  char v21 = *(unsigned char *)(v2 + 80);
  if (!v14 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  BOOL v15 = v4 == v9 && v6 == v10;
  if (!v15 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  BOOL v16 = v5 == v11 && v7 == v12;
  if (!v16 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  if (v8)
  {
    if (!v13) {
      return 0;
    }
    BOOL v17 = v28 == v27 && v8 == v13;
    if (!v17 && (sub_252D1A5D8() & 1) == 0) {
      return 0;
    }
  }
  else if (v13)
  {
    return 0;
  }
  unint64_t v18 = v25 & 0xF000000000000007;
  if ((~v26 & 0xF000000000000007) != 0)
  {
    if (v18 == 0xF000000000000007) {
      return 0;
    }
    sub_252CF4B1C(v25);
    sub_252CF4B1C(v26);
    char v19 = static TypeDefinition.== infix(_:_:)(v26, v25);
    sub_252CF4C3C(v25);
    sub_252CF4C3C(v26);
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  else if (v18 != 0xF000000000000007)
  {
    return 0;
  }
  if ((sub_252B1DB04(v24, v23) & 1) == 0) {
    return 0;
  }

  return sub_252B0138C(v22, v21);
}

uint64_t sub_252CFC640(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x74616E616C707865 && a2 == 0xEB000000006E6F69;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x79546E7275746572 && a2 == 0xEA00000000006570;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x746365666665 && a2 == 0xE600000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_252D1A5D8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252CFC930(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6449656C646E7562;
      break;
    case 2:
      uint64_t result = 0x4E79616C70736964;
      break;
    case 3:
      uint64_t result = 0x74616E616C707865;
      break;
    case 4:
      uint64_t result = 0x79546E7275746572;
      break;
    case 5:
      uint64_t result = 0x6574656D61726170;
      break;
    case 6:
      uint64_t result = 0x746365666665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252CFCA24()
{
  return sub_252CFC930(*v0);
}

uint64_t sub_252CFCA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252CFC640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252CFCA54(uint64_t a1)
{
  unint64_t v2 = sub_252CFD730();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252CFCA90(uint64_t a1)
{
  unint64_t v2 = sub_252CFD730();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ToolDefinition.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C49000);
  sub_252AEDBD0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_252B23278();
  uint64_t v7 = v3[3];
  BOOL v8 = v3;
  uint64_t v10 = v9;
  sub_252AC3A68(v8, v7);
  sub_252CFD730();
  sub_252D1A738();
  sub_252D030AC();
  if (!v0)
  {
    sub_252D0311C();
    sub_252D1A528();
    sub_252D1A528();
    sub_252D1A4E8();
    sub_252D03178();
    sub_252CFD77C();
    sub_252D03094();
    sub_252D1A518();
    sub_252AC3A24(&qword_269C49018);
    sub_252D01520(&qword_269C49020, &qword_269C49018, (void (*)(void))sub_252CFD7C8);
    sub_252D1A578();
    sub_252CFD814();
    sub_252D03094();
    sub_252D1A578();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v10);
  sub_252AF4368();
}

void ToolDefinition.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  sub_252AF4380();
  char v12 = v11;
  uint64_t v14 = v13;
  sub_252AC3A24(&qword_269C49038);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  sub_252AF45F0();
  sub_252AC3A68(v12, v12[3]);
  sub_252CFD730();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
    int v16 = 0;
    unint64_t v17 = 0xF000000000000007;
  }
  else
  {
    uint64_t v18 = sub_252D02FC4();
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_252D02FC4();
    uint64_t v40 = v18;
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    uint64_t v42 = v22;
    uint64_t v37 = sub_252D02FC4();
    uint64_t v38 = v14;
    LOBYTE(a10) = 3;
    uint64_t v24 = v23;
    swift_bridgeObjectRetain();
    uint64_t v41 = v24;
    uint64_t v25 = sub_252D1A408();
    uint64_t v27 = v26;
    uint64_t v36 = v25;
    sub_252D03178();
    unint64_t v28 = sub_252CFD860();
    swift_bridgeObjectRetain();
    sub_252D02F88();
    sub_252D1A438();
    if (v28)
    {
      uint64_t v29 = sub_252BA572C();
      v30(v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v16 = 0;
      unint64_t v17 = 0xF000000000000007;
    }
    else
    {
      unint64_t v17 = a10;
      sub_252AC3A24(&qword_269C49018);
      sub_252CF4B1C(a10);
      sub_252D01520(&qword_269C49048, &qword_269C49018, (void (*)(void))sub_252CFD8AC);
      sub_252D1A498();
      unint64_t v31 = sub_252CFD8F8();
      swift_bridgeObjectRetain();
      sub_252D02F88();
      sub_252D1A498();
      if (!v31)
      {
        uint64_t v34 = sub_252BA572C();
        v35(v34);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_252CF4B1C(a10);
        sub_252CF4C3C(a10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v38 = v40;
        *(void *)(v38 + 8) = v20;
        *(void *)(v38 + 16) = v39;
        *(void *)(v38 + 24) = v42;
        *(void *)(v38 + 32) = v37;
        *(void *)(v38 + 40) = v41;
        *(void *)(v38 + 48) = v36;
        *(void *)(v38 + 56) = v27;
        *(void *)(v38 + 64) = a10;
        *(void *)(v38 + 72) = a10;
        *(unsigned char *)(v38 + 80) = 3;
        _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_252CF4C3C(a10);
        goto LABEL_5;
      }
      uint64_t v32 = sub_252BA572C();
      v33(v32);
      swift_bridgeObjectRelease();
      sub_252CF4C3C(a10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v16 = 1;
    }
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_252CF4C3C(v17);
  if (v16) {
LABEL_5:
  }
    swift_bridgeObjectRelease();
  sub_252AF4368();
}

void sub_252CFD228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ToolDefinition.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252CFD240()
{
}

uint64_t (*ParameterDefinition.id.modify())()
{
  return nullsub_1;
}

uint64_t (*ParameterDefinition.displayName.modify())()
{
  return nullsub_1;
}

unint64_t ParameterDefinition.type.getter()
{
  unint64_t v1 = *(void *)(v0 + 32);
  sub_252B223A4(v1);
  return v1;
}

unint64_t ParameterDefinition.type.setter(uint64_t a1)
{
  unint64_t result = sub_252B223EC(*(void *)(v1 + 32));
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ParameterDefinition.type.modify())()
{
  return nullsub_1;
}

uint64_t ParameterDefinition.explanation.getter()
{
  return sub_252AEA3DC();
}

uint64_t ParameterDefinition.explanation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ParameterDefinition.explanation.modify())()
{
  return nullsub_1;
}

uint64_t ParameterDefinition.init(id:displayName:type:explanation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v12 = result;
  if (!a4)
  {
    uint64_t result = swift_bridgeObjectRetain();
    a3 = v12;
    a4 = a2;
  }
  *a8 = v12;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t static ParameterDefinition.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2 = sub_252D03190(a1);
  uint64_t v7 = v5[3];
  unint64_t v6 = v5[4];
  uint64_t v9 = v5[5];
  uint64_t v8 = v5[6];
  uint64_t v10 = v4[2];
  uint64_t v11 = v4[3];
  unint64_t v13 = v4[4];
  uint64_t v12 = v4[5];
  uint64_t v14 = v4[6];
  BOOL v15 = v2 == *v4 && v3 == v4[1];
  if (v15 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v17 & 1) != 0))
  {
    BOOL v18 = v1 == v10 && v7 == v11;
    if (v18 || (sub_252D030C4(), uint64_t result = sub_252B5F6F8(), (v19 & 1) != 0))
    {
      if (static TypeDefinition.== infix(_:_:)(v6, v13))
      {
        if (v8)
        {
          if (v14)
          {
            BOOL v20 = v9 == v12 && v8 == v14;
            if (v20 || (sub_252D1A5D8() & 1) != 0) {
              return 1;
            }
          }
        }
        else if (!v14)
        {
          return 1;
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t static TypeDefinition.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  switch(a1 >> 61)
  {
    case 1uLL:
      if (a2 >> 61 != 1) {
        goto LABEL_23;
      }
      uint64_t v8 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
      uint64_t v9 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v10 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = v10;
      long long v23 = *(_OWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v24 = v9;
      long long v25 = *(_OWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v26 = v8;
      char v11 = static ObjectDefinition.== infix(_:_:)((uint64_t)&v21);
      return v11 & 1;
    case 2uLL:
      if (a2 >> 61 != 2) {
        goto LABEL_23;
      }
      unint64_t v2 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v3 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_6;
    case 3uLL:
      if (a2 >> 61 != 3) {
        goto LABEL_23;
      }
      uint64_t v12 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v13 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v21 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = v13;
      long long v23 = *(_OWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v24 = v12;
      char v11 = static EnumDefinition.== infix(_:_:)((uint64_t)&v21);
      return v11 & 1;
    case 4uLL:
      switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
      {
        case 1:
          sub_252D02EF0();
          break;
        case 2:
          sub_252D02EF0();
          uint64_t v7 = v14 + 8;
          break;
        case 3:
          sub_252D02EF0();
          uint64_t v7 = v15 | 0x10;
          break;
        case 4:
          sub_252D02EF0();
          uint64_t v7 = v16 + 24;
          break;
        case 5:
          sub_252D02EF0();
          uint64_t v7 = v17 | 0x20;
          break;
        case 6:
          sub_252D02EF0();
          uint64_t v7 = v18 + 40;
          break;
        case 7:
          sub_252D02EF0();
          uint64_t v7 = v19 | 0x30;
          break;
        case 8:
          sub_252D02EF0();
          uint64_t v7 = v20 + 56;
          break;
        default:
          uint64_t v7 = 0x8000000000000000;
          break;
      }
      if (a2 != v7) {
        goto LABEL_23;
      }
      char v11 = 1;
      return v11 & 1;
    default:
      if (a2 >> 61)
      {
LABEL_23:
        char v11 = 0;
        return v11 & 1;
      }
      else
      {
        unint64_t v2 = *(void *)(a1 + 16);
        unint64_t v3 = *(void *)(a2 + 16);
LABEL_6:
        sub_252B223A4(v2);
        sub_252B223A4(v3);
        uint64_t v4 = sub_252AEA3DC();
        char v5 = static TypeDefinition.== infix(_:_:)(v4);
        sub_252B223EC(v3);
        sub_252B223EC(v2);
        return v5 & 1;
      }
  }
}