void ResponseManifest.init(from:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t *v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;

  sub_252AF4380();
  v3 = v2;
  sub_252AC3A24(&qword_269C43068);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  v5 = sub_252B5FA38();
  v6 = type metadata accessor for ResponseManifest(v5);
  v7 = (int *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  sub_252B5F688();
  bzero(v1, 0xB9uLL);
  type metadata accessor for ResponseVisual.UIType(0);
  v8 = sub_252B5FC98();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, v9, v10, v11);
  v12 = (void *)((char *)v1 + v7[11]);
  *v12 = 0;
  v12[1] = 0;
  v13 = (void *)((char *)v1 + v7[12]);
  *v13 = 0;
  v13[1] = 0;
  v14 = v7[13];
  *((unsigned char *)v1 + v14) = 2;
  v15 = v7[14];
  *((unsigned char *)v1 + v15) = 2;
  sub_252B5FD8C(v3);
  sub_252B5A1B0();
  sub_252D1A718();
  if (v0)
  {
    v19 = (uint64_t)v3;
    v16 = (uint64_t)v1;
  }
  else
  {
    v21 = v12;
    sub_252AC3A24(&qword_269C43050);
    sub_252B59D7C((uint64_t)&unk_269C43070);
    sub_252D1A438();
    v16 = (uint64_t)v1;
    *v1 = v22;
    sub_252B5FC80();
    sub_252B5A568();
    sub_252B5FC5C();
    *(_OWORD *)(v1 + 1) = v22;
    *(_OWORD *)(v1 + 3) = v23;
    *(_OWORD *)(v1 + 5) = v24;
    *(_OWORD *)(v1 + 7) = v25;
    *(_OWORD *)(v1 + 9) = v26;
    sub_252B5A5B4();
    sub_252B5FC5C();
    *(_OWORD *)(v1 + 21) = v22;
    *((unsigned char *)v1 + 184) = v23;
    *v21 = sub_252B5FE40(3);
    v21[1] = v17;
    *v13 = sub_252B5FE40(4);
    v13[1] = v18;
    *((unsigned char *)v1 + v14) = sub_252D1A418();
    sub_252B5A600();
    sub_252D1A438();
    sub_252B5F648();
    v20();
    *((unsigned char *)v1 + v15) = 5;
    sub_252B5A1FC();
    v19 = (uint64_t)v3;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v19);
  sub_252B595F4(v16, (void (*)(void))type metadata accessor for ResponseManifest);
  sub_252AF4368();
}

{
  void *v0;
  void *v1;
  char **v2;
  char **v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  void *v18;
  char *v19;
  long long v20;
  long long v21;
  id v22;
  unint64_t v23;
  id v24;
  char *v25;
  id v26;
  long long v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;

  sub_252AFC730();
  v1 = v0;
  v3 = v2;
  sub_252D19D78();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B5F630();
  v5 = (int *)type metadata accessor for ResponseManifest(0);
  bzero(v3, 0xB9uLL);
  v6 = (uint64_t)v3 + v5[8];
  v7 = type metadata accessor for ResponseVisual.UIType(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, 1, 1, v7);
  sub_252B4CA88(v5[9]);
  sub_252B4CA88(v5[10]);
  *((unsigned char *)v3 + v5[11]) = 2;
  *((unsigned char *)v3 + v5[12]) = 2;
  if (v1)
  {
    self;
    v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v1;
      sub_252B598A8(v9, (SEL *)&selRef_options);
      v11 = 0xF000000000000000;
      if (v12)
      {
        sub_252D19D68();
        v13 = sub_252D19D58();
        v15 = v14;
        swift_bridgeObjectRelease();
        sub_252B5F658();
        v16();
        if (v15 >> 60 == 15) {
          v17 = 0;
        }
        else {
          v17 = v13;
        }
        if (v15 >> 60 != 15) {
          v11 = v15;
        }
      }
      else
      {
        v17 = 0;
      }
      v22 = objc_msgSend(v9, sel_nlgParams);
      sub_252B5A64C();
      v23 = sub_252D19ED8();

      v24 = v10;
      v25 = sub_252B4CAB4(v23, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v3 = v25;
      v26 = objc_msgSend(v9, sel_fallbackDialog);
      if (v26)
      {
        sub_252B570A8(v26, (uint64_t *)&v39);

        sub_252B592E8(v17, v11);
        v37 = v40;
        v38 = v39;
        v35 = v42;
        v36 = v41;
        v27 = v43;
        sub_252B5FCE4();
        sub_252B5A058(v28, v29);
        *(_OWORD *)(v3 + 11) = v38;
        *(_OWORD *)(v3 + 13) = v37;
        *(_OWORD *)(v3 + 15) = v36;
        *(_OWORD *)(v3 + 17) = v35;
        *(_OWORD *)(v3 + 19) = v27;
      }
      else
      {

        sub_252B592E8(v17, v11);
      }
    }
    else
    {
      self;
      v18 = (void *)swift_dynamicCastObjCClass();
      if (v18)
      {
        sub_252B57284(v18, (uint64_t *)&v39);
        v19 = (char *)*((void *)&v39 + 1);
        v3[1] = (char *)v39;
        v3[2] = v19;
        v20 = v41;
        *(_OWORD *)(v3 + 3) = v40;
        *(_OWORD *)(v3 + 5) = v20;
        v21 = v43;
        *(_OWORD *)(v3 + 7) = v42;
        *(_OWORD *)(v3 + 9) = v21;
      }
      else
      {
        sub_252B570A8(v1, (uint64_t *)&v39);
        v30 = (char *)*((void *)&v39 + 1);
        if (*((void *)&v39 + 1))
        {
          v31 = v40;
          v32 = v41;
          v33 = v42;
          v34 = v43;
          v3[1] = (char *)v39;
          v3[2] = v30;
          *(_OWORD *)(v3 + 3) = v31;
          *(_OWORD *)(v3 + 5) = v32;
          *(_OWORD *)(v3 + 7) = v33;
          *(_OWORD *)(v3 + 9) = v34;
        }
      }
    }
  }
  sub_252AFC718();
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_252AFC730();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = (int *)type metadata accessor for ResponseManifest(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252AEDE70();
  v32 = v9;
  sub_252D19B18();
  sub_252AEDBD0();
  v33 = v11;
  v34 = v10;
  v12 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v12);
  v14 = (char *)&v30 - v13;
  v15 = sub_252D19D78();
  sub_252AEDBD0();
  v17 = v16;
  MEMORY[0x270FA5388](v18);
  sub_252AC423C();
  bzero(v6, 0xB9uLL);
  v19 = (uint64_t)&v6[v7[8]];
  v20 = type metadata accessor for ResponseVisual.UIType(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v19, 1, 1, v20);
  v21 = &v6[v7[9]];
  *(void *)v21 = 0;
  *((void *)v21 + 1) = 0;
  v22 = &v6[v7[10]];
  *(void *)v22 = 0;
  *((void *)v22 + 1) = 0;
  v6[v7[11]] = 2;
  v6[v7[12]] = 2;
  sub_252D19D68();
  v31 = v4;
  v23 = sub_252D19D58();
  v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v15);
  if (v25 >> 60 == 15)
  {
    sub_252D198D8();
    swift_bridgeObjectRetain();
    v26 = sub_252D19B08();
    v27 = sub_252D1A0A8();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      *(_DWORD *)v28 = 136315138;
      swift_bridgeObjectRetain();
      v29 = sub_252B58B30(v31, v2, &v35);
      sub_252B5F960(v29);
      sub_252D1A188();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_252AC1000, v26, v27, "Unable to create response generation manifest from JSON: %s", v28, 0xCu);
      swift_arrayDestroy();
      sub_252B5F6E0();
      sub_252B5F6E0();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  }
  else
  {
    sub_252D19378();
    swift_allocObject();
    sub_252D19368();
    sub_252B59590((uint64_t)&unk_269C430B0);
    sub_252D19358();
    sub_252B595F4((uint64_t)v6, (void (*)(void))type metadata accessor for ResponseManifest);
    swift_release();
    swift_bridgeObjectRelease();
    sub_252B592E8(v23, v25);
    sub_252B59950();
  }
  sub_252AFC718();
}

void sub_252B56D40()
{
}

uint64_t sub_252B56D58(void *a1)
{
  return ResponseManifest.encode(to:)(a1);
}

void sub_252B56D74()
{
}

double sub_252B570A8@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    id v6 = a1;
    id v7 = objc_msgSend(v5, sel_localeIdentifier);
    v8 = v7;
    v9 = v7;
    if (!v7)
    {
      sub_252D19D48();
      v9 = (void *)sub_252D19D18();
      swift_bridgeObjectRelease();
      sub_252D19D48();
      v8 = (void *)sub_252D19D18();
      swift_bridgeObjectRelease();
    }
    id v10 = v7;
    id v11 = objc_msgSend(v5, sel_fullString);
    id v12 = objc_msgSend(v11, sel_localizedStringForLocaleIdentifier_, v9);

    uint64_t v13 = sub_252D19D48();
    uint64_t v15 = v14;

    id v16 = objc_msgSend(v5, sel_supportingString);
    if (v16)
    {
      v17 = v16;
      id v18 = objc_msgSend(v16, sel_localizedStringForLocaleIdentifier_, v8);

      uint64_t v19 = sub_252D19D48();
      uint64_t v21 = v20;

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();

      *a2 = v13;
      a2[1] = v15;
      a2[2] = v13;
      a2[3] = v15;
      a2[4] = v19;
      a2[5] = v21;
      a2[6] = v19;
      a2[7] = v21;
      a2[8] = 0;
      a2[9] = 0;
    }
    else
    {

      swift_bridgeObjectRetain();
      *a2 = v13;
      a2[1] = v15;
      a2[2] = v13;
      a2[3] = v15;
      double result = 0.0;
      *((_OWORD *)a2 + 2) = 0u;
      *((_OWORD *)a2 + 3) = 0u;
      *((_OWORD *)a2 + 4) = 0u;
    }
  }
  else
  {

    double result = 0.0;
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

void sub_252B57284(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_localeIdentifier);
  v5 = v4;
  id v6 = v4;
  id v7 = v4;
  v8 = v4;
  if (!v4)
  {
    sub_252D19D48();
    v8 = (void *)sub_252D19D18();
    swift_bridgeObjectRelease();
    sub_252D19D48();
    id v7 = (void *)sub_252D19D18();
    swift_bridgeObjectRelease();
    sub_252D19D48();
    id v6 = (void *)sub_252D19D18();
    swift_bridgeObjectRelease();
    sub_252D19D48();
    v5 = (void *)sub_252D19D18();
    swift_bridgeObjectRelease();
  }
  id v9 = v4;
  id v10 = objc_msgSend(a1, sel_fullSpeakableString);
  id v11 = objc_msgSend(v10, sel_printed);

  id v12 = objc_msgSend(v11, sel_localizedStringForLocaleIdentifier_, v8);
  uint64_t v13 = sub_252D19D48();
  uint64_t v33 = v14;
  uint64_t v34 = v13;

  id v15 = objc_msgSend(a1, sel_fullSpeakableString);
  id v16 = objc_msgSend(v15, sel_spoken);

  id v17 = objc_msgSend(v16, sel_localizedStringForLocaleIdentifier_, v7);
  uint64_t v18 = sub_252D19D48();
  uint64_t v20 = v19;

  id v21 = objc_msgSend(a1, sel_supportingSpeakableString);
  v22 = v21;
  if (v21)
  {
    id v23 = objc_msgSend(v21, sel_printed);

    id v24 = objc_msgSend(v23, (SEL)0x265391657, v6);
    uint64_t v25 = sub_252D19D48();
    v22 = v26;
  }
  else
  {

    uint64_t v25 = 0;
  }
  id v27 = objc_msgSend(a1, sel_supportingSpeakableString);
  v28 = v27;
  if (v27)
  {
    id v29 = objc_msgSend(v27, sel_spoken);

    id v30 = objc_msgSend(v29, (SEL)0x265391657, v5);
    uint64_t v31 = sub_252D19D48();
    v28 = v32;
  }
  else
  {

    uint64_t v31 = 0;
  }
  *a2 = v34;
  a2[1] = v33;
  a2[2] = v18;
  a2[3] = v20;
  a2[4] = v25;
  a2[5] = (uint64_t)v22;
  a2[6] = v31;
  a2[7] = (uint64_t)v28;
  a2[8] = 0;
  a2[9] = 0;
}

uint64_t ResponseManifest.init(from:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return MEMORY[0x270FA2498](sub_252B575B0, 0, 0);
}

uint64_t sub_252B575B0()
{
  v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[13];
  v3 = (int *)type metadata accessor for ResponseManifest(0);
  bzero(v1, 0xB9uLL);
  uint64_t v4 = type metadata accessor for ResponseVisual.UIType(0);
  sub_252B5FCAC(v4);
  sub_252B4CA88(v3[9]);
  sub_252B4CA88(v3[10]);
  *((unsigned char *)v1 + v3[11]) = 2;
  *((unsigned char *)v1 + v3[12]) = 2;
  id v5 = v2;
  id v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *id v6 = v0;
  v6[1] = sub_252B576B8;
  uint64_t v7 = v0[13];
  return sub_252B57878((uint64_t)(v0 + 2), v7);
}

uint64_t sub_252B576B8()
{
  sub_252AEA2EC();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_252B57790, 0, 0);
}

uint64_t sub_252B57790()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  long long v27 = *(_OWORD *)(v0 + 48);
  long long v26 = *(_OWORD *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = sub_252B5F9F4();
  v1[1] = v3;
  v1[2] = v4;
  *(void *)&double v15 = sub_252B5FAA4(v6, v7, v8, v9, v10, v11, v12, v13, v24, v25, v14, v26, v27).n128_u64[0];
  v1[9] = v5;
  v1[10] = v2;
  id v16 = *(void **)(v0 + 104);
  if (v4)
  {
    uint64_t v17 = *(void *)(v0 + 96);
    id v18 = objc_msgSend(*(id *)(v0 + 104), sel_identifier, v15);
    uint64_t v19 = sub_252D19D48();
    uint64_t v21 = v20;

    swift_bridgeObjectRelease();
    *(void *)(v17 + 72) = v19;
    *(void *)(v17 + 80) = v21;
  }
  else
  {
  }
  v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_252B57878(uint64_t a1, uint64_t a2)
{
  v2[18] = a1;
  v2[19] = a2;
  uint64_t v3 = sub_252D19B18();
  v2[20] = v3;
  v2[21] = *(void *)(v3 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v4 = sub_252D19498();
  v2[23] = v4;
  v2[24] = *(void *)(v4 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_252B57994, 0, 0);
}

uint64_t sub_252B57994()
{
  uint64_t v1 = (void *)v0[19];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_252B57A90;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_252B58720;
  v0[13] = &unk_265390EB0;
  v0[14] = v2;
  objc_msgSend(v1, sel_getResultWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_252B57A90()
{
  sub_252AEA2EC();
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v2 + 208) = v1;
  if (v1) {
    uint64_t v3 = sub_252B57DA8;
  }
  else {
    uint64_t v3 = sub_252B57B7C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_252B57B7C()
{
  uint64_t v1 = (void *)v0[15];
  id v2 = objc_msgSend(v1, sel_print);
  uint64_t v3 = (void *)sub_252D19ED8();

  if (v3[2])
  {
    unint64_t v20 = v3[5];
    uint64_t v21 = v3[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xE000000000000000;
    uint64_t v21 = 0;
  }
  id v4 = objc_msgSend(v1, sel_speak);
  uint64_t v5 = (void *)sub_252D19ED8();

  if (v5[2])
  {
    uint64_t v6 = v5[5];
    uint64_t v19 = v5[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v1, sel_captionPrint);
  uint64_t v8 = (void *)sub_252D19ED8();

  if (v8[2])
  {
    uint64_t v10 = v8[4];
    uint64_t v9 = v8[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v1, sel_captionSpeak);
  uint64_t v12 = (void *)sub_252D19ED8();

  if (v12[2])
  {
    uint64_t v14 = v12[4];
    uint64_t v13 = v12[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v13 = 0;
  }
  id v16 = (void *)v0[18];
  double v15 = (void *)v0[19];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  *id v16 = v21;
  v16[1] = v20;
  v16[2] = v19;
  v16[3] = v6;
  v16[4] = v10;
  v16[5] = v9;
  v16[6] = v14;
  v16[7] = v13;
  v16[8] = 0;
  v16[9] = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_252B57DA8()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();
  sub_252D198C8();
  id v2 = v1;
  uint64_t v3 = sub_252D19B08();
  os_log_type_t v4 = sub_252D1A0A8();
  if (os_log_type_enabled(v3, v4))
  {
    id v25 = *(id *)(v0 + 208);
    uint64_t v5 = *(void **)(v0 + 152);
    uint64_t v6 = swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    id v7 = objc_msgSend(v5, sel_identifier);
    log = v3;
    uint64_t v8 = sub_252D19D48();
    unint64_t v10 = v9;

    *(void *)(v0 + 128) = sub_252B58B30(v8, v10, v26);
    sub_252D1A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 12) = 2080;
    id v11 = objc_msgSend(v5, sel_templateDirectoryURL);
    sub_252D19448();

    uint64_t v12 = sub_252D19428();
    unint64_t v14 = v13;
    sub_252B0012C();
    v15();
    *(void *)(v0 + 136) = sub_252B58B30(v12, v14, v26);
    sub_252D1A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_252AC1000, log, v4, "Execution of LNCATDialog failed for CAT %s at template dir %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    sub_252B5F6E0();
    sub_252B5F6E0();

    sub_252B5F53C();
    v16();
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v18 = *(void *)(v0 + 176);
    unint64_t v20 = *(void **)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
  }
  uint64_t v21 = *(_OWORD **)(v0 + 144);
  v21[3] = 0u;
  v21[4] = 0u;
  v21[1] = 0u;
  v21[2] = 0u;
  *uint64_t v21 = 0u;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t ResponseManifest.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  uint64_t v6 = (int *)type metadata accessor for ResponseManifest(0);
  *(double *)&long long v7 = sub_252B5FAF8();
  *(_OWORD *)(a3 + 168) = v7;
  *(unsigned char *)(a3 + 184) = 0;
  uint64_t v8 = type metadata accessor for ResponseVisual.UIType(0);
  sub_252B5FCAC(v8);
  unint64_t v9 = (void *)(a3 + v6[9]);
  void *v9 = 0;
  v9[1] = 0;
  unint64_t v10 = (void *)(a3 + v6[10]);
  *unint64_t v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(a3 + v6[11]) = 2;
  *(unsigned char *)(a3 + v6[12]) = 2;
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 16) = a2;
  *(void *)(a3 + 24) = a1;
  *(void *)(a3 + 32) = a2;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;

  return swift_bridgeObjectRetain();
}

uint64_t sub_252B58720(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_252B58798(v3, (uint64_t)v4);
  }
  else if (a2)
  {
    swift_unknownObjectRetain();
    return sub_252B587FC(v3, a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_252B58798(uint64_t a1, uint64_t a2)
{
  sub_252AC3A24(&qword_26B231758);
  uint64_t v4 = swift_allocError();
  void *v5 = a2;

  return MEMORY[0x270FA2410](a1, v4);
}

uint64_t sub_252B587FC(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x270FA2408]();
}

uint64_t ResponseManifest.ResponseDialogPresentationHint.suppressed.getter()
{
  return *v0;
}

void ConfirmationView.ControlMetadata.init(from:)()
{
  sub_252AFC730();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v11 = v5;
  sub_252D19B18();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252AF45F0();
  uint64_t v7 = sub_252D19C58();
  sub_252AEDBD0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_252B5F688();
  sub_252D19378();
  swift_allocObject();
  sub_252D19368();
  sub_252B59590((uint64_t)&unk_269C42DD0);
  sub_252D19358();
  sub_252AC5C14(v4, v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v11, v0, v7);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, 0, 1, v7);
  sub_252AFC718();
}

uint64_t sub_252B58B30(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_252B58C04(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_252B5F4C0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_252B5F4C0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_252B58C04(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_252B58D5C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_252D1A198();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_252B58E34(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_252D1A318();
    if (!v8)
    {
      uint64_t result = sub_252D1A368();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_252B58D5C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_252B58E34(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_252B58ECC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_252B590A8(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_252B590A8((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_252B58ECC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_252D19E08();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_252B59040(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_252D1A278();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_252D1A3C8();
  __break(1u);
LABEL_14:
  uint64_t result = sub_252D1A368();
  __break(1u);
  return result;
}

void *sub_252B59040(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_252AC3A24(&qword_26B230FB8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_252B590A8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_26B230FB8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B59258(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B59180(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_252B59180(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_252B59258(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_252D1A3C8();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_252B592E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_252AC5C14(a1, a2);
  }
  return a1;
}

uint64_t sub_252B592FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_252AC5A54(a1, a2);
  }
  return a1;
}

unint64_t sub_252B59310()
{
  unint64_t result = qword_269C42D28;
  if (!qword_269C42D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D28);
  }
  return result;
}

unint64_t sub_252B5935C()
{
  unint64_t result = qword_269C42D30;
  if (!qword_269C42D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D30);
  }
  return result;
}

unint64_t sub_252B593A8()
{
  unint64_t result = qword_269C42D40;
  if (!qword_269C42D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D40);
  }
  return result;
}

unint64_t sub_252B593F4()
{
  unint64_t result = qword_269C42D50;
  if (!qword_269C42D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D50);
  }
  return result;
}

unint64_t sub_252B59440()
{
  unint64_t result = qword_269C42D68;
  if (!qword_269C42D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D68);
  }
  return result;
}

unint64_t sub_252B5948C()
{
  unint64_t result = qword_269C42D80;
  if (!qword_269C42D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D80);
  }
  return result;
}

unint64_t sub_252B594D8()
{
  unint64_t result = qword_269C42D98;
  if (!qword_269C42D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42D98);
  }
  return result;
}

unint64_t sub_252B59524()
{
  unint64_t result = qword_269C42DC0;
  if (!qword_269C42DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42DC0);
  }
  return result;
}

uint64_t type metadata accessor for ResponseVisual.UIType.ControlPayload(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C430E8);
}

unint64_t sub_252B59590(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for ResponseVisual.UIType(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234600);
}

uint64_t sub_252B595F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

unint64_t sub_252B59648()
{
  unint64_t result = qword_269C42E08;
  if (!qword_269C42E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E08);
  }
  return result;
}

unint64_t sub_252B59694()
{
  unint64_t result = qword_269C42E10;
  if (!qword_269C42E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E10);
  }
  return result;
}

unint64_t sub_252B596E0()
{
  unint64_t result = qword_269C42E18;
  if (!qword_269C42E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E18);
  }
  return result;
}

unint64_t sub_252B5972C()
{
  unint64_t result = qword_269C42E20;
  if (!qword_269C42E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E20);
  }
  return result;
}

unint64_t sub_252B59778()
{
  unint64_t result = qword_269C42E30;
  if (!qword_269C42E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E30);
  }
  return result;
}

unint64_t sub_252B597C4()
{
  unint64_t result = qword_269C42E38;
  if (!qword_269C42E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E38);
  }
  return result;
}

unint64_t sub_252B59810()
{
  unint64_t result = qword_269C42E40;
  if (!qword_269C42E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E40);
  }
  return result;
}

unint64_t sub_252B5985C()
{
  unint64_t result = qword_269C42E48;
  if (!qword_269C42E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E48);
  }
  return result;
}

uint64_t sub_252B598A8(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_252D19D48();
  }
  return sub_252AEA3DC();
}

unint64_t sub_252B59904()
{
  unint64_t result = qword_269C42E80;
  if (!qword_269C42E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E80);
  }
  return result;
}

uint64_t sub_252B59950()
{
  uint64_t v2 = sub_252B23194();
  v3(v2);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

unint64_t sub_252B599A8()
{
  unint64_t result = qword_269C42E90;
  if (!qword_269C42E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E90);
  }
  return result;
}

unint64_t sub_252B599F4()
{
  unint64_t result = qword_269C42E98;
  if (!qword_269C42E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42E98);
  }
  return result;
}

unint64_t sub_252B59A40()
{
  unint64_t result = qword_269C42EA8;
  if (!qword_269C42EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42EA8);
  }
  return result;
}

unint64_t sub_252B59A8C()
{
  unint64_t result = qword_269C42EC8;
  if (!qword_269C42EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42EC8);
  }
  return result;
}

unint64_t sub_252B59AD8()
{
  unint64_t result = qword_269C42ED0;
  if (!qword_269C42ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42ED0);
  }
  return result;
}

unint64_t sub_252B59B24()
{
  unint64_t result = qword_269C42ED8;
  if (!qword_269C42ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42ED8);
  }
  return result;
}

unint64_t sub_252B59B70()
{
  unint64_t result = qword_269C42EF0;
  if (!qword_269C42EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42EF0);
  }
  return result;
}

unint64_t sub_252B59BBC()
{
  unint64_t result = qword_269C42F00;
  if (!qword_269C42F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42F00);
  }
  return result;
}

unint64_t sub_252B59C08()
{
  unint64_t result = qword_269C42F18;
  if (!qword_269C42F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42F18);
  }
  return result;
}

unint64_t sub_252B59C54()
{
  unint64_t result = qword_269C42F48;
  if (!qword_269C42F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42F48);
  }
  return result;
}

unint64_t sub_252B59CA0()
{
  unint64_t result = qword_269C42F50;
  if (!qword_269C42F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42F50);
  }
  return result;
}

unint64_t sub_252B59CEC(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_252AEA288(&qword_269C42F20);
    sub_252B59590(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252B59D7C(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    char v5 = v4;
    sub_252AEA288(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252B59DE4()
{
  unint64_t result = qword_269C42F78;
  if (!qword_269C42F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42F78);
  }
  return result;
}

unint64_t sub_252B59E30()
{
  unint64_t result = qword_269C42F80;
  if (!qword_269C42F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42F80);
  }
  return result;
}

unint64_t sub_252B59E7C()
{
  unint64_t result = qword_269C42FA0;
  if (!qword_269C42FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42FA0);
  }
  return result;
}

unint64_t sub_252B59EC8()
{
  unint64_t result = qword_269C42FA8;
  if (!qword_269C42FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42FA8);
  }
  return result;
}

unint64_t sub_252B59F14()
{
  unint64_t result = qword_269C42FB0;
  if (!qword_269C42FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42FB0);
  }
  return result;
}

uint64_t type metadata accessor for ResponseManifest(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B232140);
}

uint64_t sub_252B59F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C41A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_252B59FE8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_252B5A058(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_252B5A0C8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_252B5A108(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_252B5A148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C41A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_252B5A1B0()
{
  unint64_t result = qword_269C42FD8;
  if (!qword_269C42FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42FD8);
  }
  return result;
}

uint64_t sub_252B5A1FC()
{
  uint64_t v2 = sub_252B23194();
  v3(v2);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

unint64_t sub_252B5A254()
{
  unint64_t result = qword_269C42FF0;
  if (!qword_269C42FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C42FF0);
  }
  return result;
}

unint64_t sub_252B5A2A0(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    sub_252AEA288(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252B5A300()
{
  unint64_t result = qword_269C43018;
  if (!qword_269C43018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43018);
  }
  return result;
}

unint64_t sub_252B5A34C()
{
  unint64_t result = qword_269C43030;
  if (!qword_269C43030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43030);
  }
  return result;
}

unint64_t sub_252B5A398()
{
  return sub_252B59D7C((uint64_t)&unk_269C43048);
}

unint64_t sub_252B5A3D4()
{
  unint64_t result = qword_269C43058;
  if (!qword_269C43058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43058);
  }
  return result;
}

uint64_t *sub_252B5A420(uint64_t *a1)
{
  uint64_t v4 = a1[10];
  uint64_t v2 = a1[11];
  sub_252B5A058(*a1, a1[1]);
  sub_252B5A058(v4, v2);
  return a1;
}

uint64_t sub_252B5A4CC(uint64_t a1, uint64_t *a2)
{
  sub_252AC3A24(a2);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

unint64_t sub_252B5A51C()
{
  unint64_t result = qword_269C43078;
  if (!qword_269C43078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43078);
  }
  return result;
}

unint64_t sub_252B5A568()
{
  unint64_t result = qword_269C43080;
  if (!qword_269C43080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43080);
  }
  return result;
}

unint64_t sub_252B5A5B4()
{
  unint64_t result = qword_269C43088;
  if (!qword_269C43088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43088);
  }
  return result;
}

unint64_t sub_252B5A600()
{
  unint64_t result = qword_269C43090;
  if (!qword_269C43090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43090);
  }
  return result;
}

unint64_t sub_252B5A64C()
{
  unint64_t result = qword_269C43098;
  if (!qword_269C43098)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269C43098);
  }
  return result;
}

unint64_t sub_252B5A690()
{
  unint64_t result = qword_269C430B8;
  if (!qword_269C430B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C430B8);
  }
  return result;
}

unint64_t sub_252B5A6E0()
{
  unint64_t result = qword_269C430C0;
  if (!qword_269C430C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C430C0);
  }
  return result;
}

unint64_t sub_252B5A730()
{
  unint64_t result = qword_269C430C8;
  if (!qword_269C430C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C430C8);
  }
  return result;
}

unint64_t sub_252B5A780()
{
  unint64_t result = qword_269C430D0;
  if (!qword_269C430D0)
  {
    sub_252AEA288(&qword_269C430D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C430D0);
  }
  return result;
}

unint64_t sub_252B5A7D8()
{
  unint64_t result = qword_269C430E0;
  if (!qword_269C430E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C430E0);
  }
  return result;
}

uint64_t destroy for ResponseParameter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >> 60 != 15) {
    sub_252AC5C14(*(void *)(a1 + 16), v2);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  char v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_252AC5A54(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseParameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_252AC5A54(*v4, *(void *)(a2 + 24));
      uint64_t v8 = *(void *)(a1 + 16);
      unint64_t v9 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v5;
      sub_252AC5C14(v8, v9);
      goto LABEL_8;
    }
    sub_252B5AA44(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_252AC5A54(*v4, *(void *)(a2 + 24));
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t sub_252B5AA44(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for ResponseParameter(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ResponseParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_252AC5C14(v8, v6);
      goto LABEL_6;
    }
    sub_252B5AA44(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseParameter(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseParameter()
{
}

uint64_t destroy for ResponseDialog()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResponseDialog(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResponseDialog(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ResponseDialog(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

void *assignWithTake for ResponseDialog(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseDialog(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseDialog(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseDialog()
{
}

uint64_t destroy for ResponseVisual()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s16IntelligenceFlow14ResponseVisualVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseVisual(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for SystemPromptResolution.ResolutionInput(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ResponseVisual(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseVisual()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ResponseVisual.UIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v12 = sub_252D19C58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 3u:
        uint64_t v13 = *a2;
        unint64_t v14 = a2[1];
        sub_252AC5A54(*a2, v14);
        *a1 = v13;
        a1[1] = v14;
        uint64_t v15 = a2[3];
        a1[2] = a2[2];
        a1[3] = v15;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = *a2;
        unint64_t v7 = a2[1];
        sub_252AC5A54(*a2, v7);
        *a1 = v6;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        uint64_t v9 = a2[4];
        uint64_t v10 = a2[5];
        a1[4] = v9;
        a1[5] = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ResponseVisual.UIType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_252AC5C14(*(void *)a1, *(void *)(a1 + 8));
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1:
      goto LABEL_7;
    case 2:
      uint64_t v3 = sub_252D19C58();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 3:
      sub_252AC5C14(*(void *)a1, *(void *)(a1 + 8));
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ResponseVisual.UIType(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v9 = sub_252D19C58();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      break;
    case 3u:
      uint64_t v10 = *a2;
      unint64_t v11 = a2[1];
      sub_252AC5A54(*a2, v11);
      *a1 = v10;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *a2;
      unint64_t v5 = a2[1];
      sub_252AC5A54(*a2, v5);
      *a1 = v4;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      uint64_t v7 = a2[4];
      uint64_t v8 = a2[5];
      a1[4] = v7;
      a1[5] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ResponseVisual.UIType(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_252B595F4((uint64_t)a1, (void (*)(void))type metadata accessor for ResponseVisual.UIType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v6 = sub_252D19C58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
      case 3u:
        uint64_t v7 = *a2;
        unint64_t v8 = a2[1];
        sub_252AC5A54(*a2, v8);
        *a1 = v7;
        a1[1] = v8;
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = *a2;
        unint64_t v5 = a2[1];
        sub_252AC5A54(*a2, v5);
        *a1 = v4;
        a1[1] = v5;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ResponseVisual.UIType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_252D19C58();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ResponseVisual.UIType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252B595F4((uint64_t)a1, (void (*)(void))type metadata accessor for ResponseVisual.UIType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_252D19C58();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_252B5B7AC()
{
  uint64_t result = sub_252D19C58();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for ResponseVisual.UIType.ArchivedViewPayload(uint64_t a1)
{
  sub_252AC5C14(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ResponseVisual.UIType.ArchivedViewPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ResponseVisual.UIType.ArchivedViewPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_252AC5C14(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for ResponseVisual.UIType.ArchivedViewPayload(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_252AC5C14(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.ArchivedViewPayload(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.ArchivedViewPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

void type metadata accessor for ResponseVisual.UIType.ArchivedViewPayload()
{
}

void type metadata accessor for ResponseVisual.UIType.LiveActivityPayload()
{
}

uint64_t destroy for ResponseVisual.UIType.PluginSnippetPayload(uint64_t a1)
{
  sub_252AC5C14(*(void *)a1, *(void *)(a1 + 8));

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ResponseVisual.UIType.PluginSnippetPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ResponseVisual.UIType.PluginSnippetPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_252AC5C14(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for ResponseVisual.UIType.PluginSnippetPayload(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_252AC5C14(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.PluginSnippetPayload(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.PluginSnippetPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseVisual.UIType.PluginSnippetPayload()
{
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for ResponseVisual.UIType.ControlPayload(uint64_t a1)
{
  uint64_t v2 = sub_252D19C58();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B5BEF4);
}

uint64_t sub_252B5BEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResponseVisual.UIType.ControlPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B5BF50);
}

uint64_t sub_252B5BF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19C58();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t sub_252B5BF9C()
{
  uint64_t result = sub_252D19C58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ResponseVisual.UILabel()
{
}

void type metadata accessor for ResponseVisual.UILabel.UIConfirmationPayload()
{
}

uint64_t getEnumTagSinglePayload for SystemPromptResolution.RequirementResolution(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseVisual.ResponseVisualOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5C1BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ResponseVisual.ResponseVisualOptions()
{
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseManifest(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v8;
      uint64_t v9 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v9;
      uint64_t v10 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v10;
      uint64_t v11 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v11;
      uint64_t v12 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + 8), a2 + 1, 0x50uLL);
    }
    uint64_t v13 = a2[12];
    if (v13)
    {
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v13;
      uint64_t v14 = a2[14];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v14;
      uint64_t v15 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v15;
      uint64_t v16 = a2[18];
      *(void *)(a1 + 136) = a2[17];
      *(void *)(a1 + 144) = v16;
      uint64_t v17 = a2[20];
      *(void *)(a1 + 152) = a2[19];
      *(void *)(a1 + 160) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + 88), a2 + 11, 0x50uLL);
    }
    uint64_t v18 = a2[21];
    if (v18)
    {
      uint64_t v19 = a2[22];
      *(void *)(a1 + 168) = v18;
      *(void *)(a1 + 176) = v19;
      *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = type metadata accessor for ResponseVisual.UIType(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_252AC3A24(&qword_269C41A80);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v30 = v22[1];
          *uint64_t v21 = *v22;
          v21[1] = v30;
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v31 = sub_252D19C58();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v21, v22, v31);
          break;
        case 3u:
          uint64_t v32 = *v22;
          unint64_t v33 = v22[1];
          sub_252AC5A54(*v22, v33);
          *uint64_t v21 = v32;
          v21[1] = v33;
          uint64_t v34 = v22[3];
          v21[2] = v22[2];
          v21[3] = v34;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v25 = *v22;
          unint64_t v26 = v22[1];
          sub_252AC5A54(*v22, v26);
          *uint64_t v21 = v25;
          v21[1] = v26;
          uint64_t v27 = v22[3];
          v21[2] = v22[2];
          v21[3] = v27;
          uint64_t v28 = v22[4];
          uint64_t v29 = v22[5];
          v21[4] = v28;
          v21[5] = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v35 = a3[9];
    uint64_t v36 = a3[10];
    v37 = (void *)(a1 + v35);
    v38 = (uint64_t *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    v40 = (void *)(a1 + v36);
    v41 = (uint64_t *)((char *)a2 + v36);
    uint64_t v42 = v41[1];
    void *v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = a3[12];
    *(unsigned char *)(a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(unsigned char *)(a1 + v43) = *((unsigned char *)a2 + v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ResponseManifest(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[21])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for ResponseVisual.UIType(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_252AC5C14(*(void *)v4, *(void *)(v4 + 8));
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 1u:
        goto LABEL_12;
      case 2u:
        uint64_t v6 = sub_252D19C58();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
        break;
      case 3u:
        sub_252AC5C14(*(void *)v4, *(void *)(v4 + 8));
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseManifest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x50uLL);
  }
  uint64_t v11 = *(void *)(a2 + 96);
  if (v11)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v14;
    uint64_t v15 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0x50uLL);
  }
  uint64_t v16 = *(void *)(a2 + 168);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = v16;
    *(void *)(a1 + 176) = v17;
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for ResponseVisual.UIType(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_252AC3A24(&qword_269C41A80);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v28 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v28;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v29 = sub_252D19C58();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v19, v20, v29);
        break;
      case 3u:
        uint64_t v30 = *v20;
        unint64_t v31 = v20[1];
        sub_252AC5A54(*v20, v31);
        *uint64_t v19 = v30;
        v19[1] = v31;
        uint64_t v32 = v20[3];
        v19[2] = v20[2];
        v19[3] = v32;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v23 = *v20;
        unint64_t v24 = v20[1];
        sub_252AC5A54(*v20, v24);
        *uint64_t v19 = v23;
        v19[1] = v24;
        uint64_t v25 = v20[3];
        v19[2] = v20[2];
        v19[3] = v25;
        uint64_t v26 = v20[4];
        uint64_t v27 = v20[5];
        v19[4] = v26;
        v19[5] = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v33 = a3[9];
  uint64_t v34 = a3[10];
  uint64_t v35 = (void *)(a1 + v33);
  uint64_t v36 = (void *)(a2 + v33);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  v38 = (void *)(a1 + v34);
  uint64_t v39 = (void *)(a2 + v34);
  uint64_t v40 = v39[1];
  void *v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseManifest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_252B5D188(a1 + 8);
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x50uLL);
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v7)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_252B5D188(a1 + 88);
  }
  else if (v7)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0x50uLL);
LABEL_15:
  uint64_t v8 = (_OWORD *)(a1 + 168);
  uint64_t v10 = (_OWORD *)(a2 + 168);
  uint64_t v9 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168))
  {
    if (v9)
    {
      *(void *)(a1 + 168) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    }
    else
    {
      sub_252B5D1B8(a1 + 168);
      char v11 = *(unsigned char *)(a2 + 184);
      _OWORD *v8 = *v10;
      *(unsigned char *)(a1 + 184) = v11;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 168) = v9;
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v10;
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    _OWORD *v8 = v12;
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = (uint64_t *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ResponseVisual.UIType(0);
  int v17 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v16);
  int v18 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v14 = *v15;
          v14[1] = v15[1];
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v24 = sub_252D19C58();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
          break;
        case 3u:
          uint64_t v25 = *v15;
          unint64_t v26 = v15[1];
          sub_252AC5A54(*v15, v26);
          *uint64_t v14 = v25;
          v14[1] = v26;
          v14[2] = v15[2];
          v14[3] = v15[3];
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v19 = *v15;
          unint64_t v20 = v15[1];
          sub_252AC5A54(*v15, v20);
          *uint64_t v14 = v19;
          v14[1] = v20;
          v14[2] = v15[2];
          v14[3] = v15[3];
          v14[4] = v15[4];
          v14[5] = v15[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
      goto LABEL_40;
    }
LABEL_28:
    uint64_t v21 = sub_252AC3A24(&qword_269C41A80);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_40;
  }
  if (v18)
  {
    sub_252B595F4((uint64_t)v14, (void (*)(void))type metadata accessor for ResponseVisual.UIType);
    goto LABEL_28;
  }
  if (a1 != a2)
  {
    sub_252B595F4((uint64_t)v14, (void (*)(void))type metadata accessor for ResponseVisual.UIType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v27 = sub_252D19C58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(v14, v15, v27);
        break;
      case 3u:
        uint64_t v28 = *v15;
        unint64_t v29 = v15[1];
        sub_252AC5A54(*v15, v29);
        *uint64_t v14 = v28;
        v14[1] = v29;
        v14[2] = v15[2];
        v14[3] = v15[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v22 = *v15;
        unint64_t v23 = v15[1];
        sub_252AC5A54(*v15, v23);
        *uint64_t v14 = v22;
        v14[1] = v23;
        v14[2] = v15[2];
        v14[3] = v15[3];
        v14[4] = v15[4];
        v14[5] = v15[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_40:
  uint64_t v30 = a3[9];
  unint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  *unint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[10];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_252B5D188(uint64_t a1)
{
  return a1;
}

uint64_t sub_252B5D1B8(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for ResponseManifest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  memcpy(a1 + 1, a2 + 1, 0x50uLL);
  memcpy(a1 + 11, a2 + 11, 0x61uLL);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ResponseVisual.UIType(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_269C41A80);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v11 = sub_252D19C58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  return a1;
}

uint64_t assignWithTake for ResponseManifest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16))
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_252B5D188(a1 + 8);
  }
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x50uLL);
LABEL_6:
  if (*(void *)(a1 + 96))
  {
    uint64_t v11 = *(void *)(a2 + 96);
    if (v11)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_252B5D188(a1 + 88);
  }
  memcpy((void *)(a1 + 88), (const void *)(a2 + 88), 0x50uLL);
LABEL_11:
  uint64_t v16 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168))
  {
    if (v16)
    {
      *(void *)(a1 + 168) = v16;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      goto LABEL_16;
    }
    sub_252B5D1B8(a1 + 168);
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
LABEL_16:
  uint64_t v17 = a3[8];
  int v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for ResponseVisual.UIType(0);
  int v21 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    if (!v22)
    {
      if (a1 == a2) {
        goto LABEL_29;
      }
      sub_252B595F4((uint64_t)v18, (void (*)(void))type metadata accessor for ResponseVisual.UIType);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v25 = sub_252D19C58();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v18, v19, v25);
        swift_storeEnumTagMultiPayload();
        goto LABEL_29;
      }
      size_t v24 = *(void *)(*(void *)(v20 - 8) + 64);
      goto LABEL_23;
    }
    sub_252B595F4((uint64_t)v18, (void (*)(void))type metadata accessor for ResponseVisual.UIType);
LABEL_22:
    size_t v24 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A80) - 8) + 64);
LABEL_23:
    memcpy(v18, v19, v24);
    goto LABEL_29;
  }
  if (v22) {
    goto LABEL_22;
  }
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v23 = sub_252D19C58();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v18, v19, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_29:
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseManifest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B5D74C);
}

uint64_t sub_252B5D74C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_252AC3A24(&qword_269C41A80);
    uint64_t v10 = (uint64_t)a1 + *(int *)(a3 + 32);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseManifest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B5D7F8);
}

void *sub_252B5D7F8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_252AC3A24(&qword_269C41A80);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 32);
    return (void *)_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_252B5D87C()
{
  sub_252B5D940();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_252B5D940()
{
  if (!qword_26B234610)
  {
    type metadata accessor for ResponseVisual.UIType(255);
    unint64_t v0 = sub_252D1A178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B234610);
    }
  }
}

uint64_t getEnumTagSinglePayload for ResponseManifest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseManifest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5DAECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for ResponseManifest.CodingKeys()
{
}

void type metadata accessor for ResponseManifest.EncodingConfiguration()
{
}

void type metadata accessor for ResponseManifest.ResponseDialogPresentationHint()
{
}

ValueMetadata *type metadata accessor for ResponseManifest.ResponseDialogPresentationHint.CodingKeys()
{
  return &type metadata for ResponseManifest.ResponseDialogPresentationHint.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys()
{
  return &type metadata for ResponseManifest.ResponseDialogPresentationHint.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys()
{
  return &type metadata for ResponseManifest.ResponseDialogPresentationHint.SuppressPrintCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.CodingKeys()
{
  return &type metadata for ResponseVisual.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.ResponseVisualOptions.CodingKeys()
{
  return &type metadata for ResponseVisual.ResponseVisualOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UILabel.CodingKeys()
{
  return &type metadata for ResponseVisual.UILabel.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UILabel.ConfirmationCodingKeys()
{
  return &type metadata for ResponseVisual.UILabel.ConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UILabel.UIConfirmationPayload.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ResponseVisual.UIType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5DC94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ArchivedViewCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ArchivedViewCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.LiveActivityCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.LiveActivityCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ControlCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ControlCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.PluginSnippetCodingKeys()
{
  return &type metadata for ResponseVisual.UIType.PluginSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ControlPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ControlPayload.CodingKeys;
}

unsigned char *_s16IntelligenceFlow16ResponseManifestV30ResponseDialogPresentationHintOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5DDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.PluginSnippetPayload.CodingKeys;
}

unsigned char *_s16IntelligenceFlow14ResponseVisualV21ResponseVisualOptionsV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252B5DEBCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.LiveActivityPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.LiveActivityPayload.CodingKeys;
}

unsigned char *_s16IntelligenceFlow14ResponseVisualV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5DFC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys()
{
  return &type metadata for ResponseVisual.UIType.ArchivedViewPayload.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ResponseDialog.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseDialog.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5E14CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseDialog.CodingKeys()
{
  return &type metadata for ResponseDialog.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ResponseParameter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseParameter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B5E2D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseParameter.CodingKeys()
{
  return &type metadata for ResponseParameter.CodingKeys;
}

unint64_t sub_252B5E314()
{
  unint64_t result = qword_269C430F8;
  if (!qword_269C430F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C430F8);
  }
  return result;
}

unint64_t sub_252B5E364()
{
  unint64_t result = qword_269C43100;
  if (!qword_269C43100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43100);
  }
  return result;
}

unint64_t sub_252B5E3B4()
{
  unint64_t result = qword_269C43108;
  if (!qword_269C43108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43108);
  }
  return result;
}

unint64_t sub_252B5E404()
{
  unint64_t result = qword_269C43110;
  if (!qword_269C43110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43110);
  }
  return result;
}

unint64_t sub_252B5E454()
{
  unint64_t result = qword_269C43118;
  if (!qword_269C43118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43118);
  }
  return result;
}

unint64_t sub_252B5E4A4()
{
  unint64_t result = qword_269C43120;
  if (!qword_269C43120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43120);
  }
  return result;
}

unint64_t sub_252B5E4F4()
{
  unint64_t result = qword_269C43128;
  if (!qword_269C43128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43128);
  }
  return result;
}

unint64_t sub_252B5E544()
{
  unint64_t result = qword_269C43130;
  if (!qword_269C43130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43130);
  }
  return result;
}

unint64_t sub_252B5E594()
{
  unint64_t result = qword_269C43138;
  if (!qword_269C43138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43138);
  }
  return result;
}

unint64_t sub_252B5E5E4()
{
  unint64_t result = qword_269C43140;
  if (!qword_269C43140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43140);
  }
  return result;
}

unint64_t sub_252B5E634()
{
  unint64_t result = qword_269C43148;
  if (!qword_269C43148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43148);
  }
  return result;
}

unint64_t sub_252B5E684()
{
  unint64_t result = qword_269C43150;
  if (!qword_269C43150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43150);
  }
  return result;
}

unint64_t sub_252B5E6D4()
{
  unint64_t result = qword_269C43158;
  if (!qword_269C43158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43158);
  }
  return result;
}

unint64_t sub_252B5E724()
{
  unint64_t result = qword_269C43160;
  if (!qword_269C43160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43160);
  }
  return result;
}

unint64_t sub_252B5E774()
{
  unint64_t result = qword_269C43168;
  if (!qword_269C43168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43168);
  }
  return result;
}

unint64_t sub_252B5E7C4()
{
  unint64_t result = qword_269C43170;
  if (!qword_269C43170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43170);
  }
  return result;
}

unint64_t sub_252B5E814()
{
  unint64_t result = qword_269C43178;
  if (!qword_269C43178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43178);
  }
  return result;
}

unint64_t sub_252B5E864()
{
  unint64_t result = qword_269C43180;
  if (!qword_269C43180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43180);
  }
  return result;
}

unint64_t sub_252B5E8B4()
{
  unint64_t result = qword_269C43188;
  if (!qword_269C43188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43188);
  }
  return result;
}

unint64_t sub_252B5E904()
{
  unint64_t result = qword_269C43190;
  if (!qword_269C43190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43190);
  }
  return result;
}

unint64_t sub_252B5E954()
{
  unint64_t result = qword_269C43198;
  if (!qword_269C43198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43198);
  }
  return result;
}

unint64_t sub_252B5E9A4()
{
  unint64_t result = qword_269C431A0;
  if (!qword_269C431A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431A0);
  }
  return result;
}

unint64_t sub_252B5E9F4()
{
  unint64_t result = qword_269C431A8;
  if (!qword_269C431A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431A8);
  }
  return result;
}

unint64_t sub_252B5EA44()
{
  unint64_t result = qword_269C431B0;
  if (!qword_269C431B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431B0);
  }
  return result;
}

unint64_t sub_252B5EA94()
{
  unint64_t result = qword_269C431B8;
  if (!qword_269C431B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431B8);
  }
  return result;
}

unint64_t sub_252B5EAE4()
{
  unint64_t result = qword_269C431C0;
  if (!qword_269C431C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431C0);
  }
  return result;
}

unint64_t sub_252B5EB34()
{
  unint64_t result = qword_269C431C8;
  if (!qword_269C431C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431C8);
  }
  return result;
}

unint64_t sub_252B5EB84()
{
  unint64_t result = qword_269C431D0;
  if (!qword_269C431D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431D0);
  }
  return result;
}

unint64_t sub_252B5EBD4()
{
  unint64_t result = qword_269C431D8;
  if (!qword_269C431D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431D8);
  }
  return result;
}

unint64_t sub_252B5EC24()
{
  unint64_t result = qword_269C431E0;
  if (!qword_269C431E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431E0);
  }
  return result;
}

unint64_t sub_252B5EC74()
{
  unint64_t result = qword_269C431E8;
  if (!qword_269C431E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431E8);
  }
  return result;
}

unint64_t sub_252B5ECC4()
{
  unint64_t result = qword_269C431F0;
  if (!qword_269C431F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431F0);
  }
  return result;
}

unint64_t sub_252B5ED14()
{
  unint64_t result = qword_269C431F8;
  if (!qword_269C431F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C431F8);
  }
  return result;
}

unint64_t sub_252B5ED64()
{
  unint64_t result = qword_269C43200;
  if (!qword_269C43200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43200);
  }
  return result;
}

unint64_t sub_252B5EDB4()
{
  unint64_t result = qword_269C43208;
  if (!qword_269C43208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43208);
  }
  return result;
}

unint64_t sub_252B5EE04()
{
  unint64_t result = qword_269C43210;
  if (!qword_269C43210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43210);
  }
  return result;
}

unint64_t sub_252B5EE54()
{
  unint64_t result = qword_269C43218;
  if (!qword_269C43218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43218);
  }
  return result;
}

unint64_t sub_252B5EEA4()
{
  unint64_t result = qword_269C43220;
  if (!qword_269C43220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43220);
  }
  return result;
}

unint64_t sub_252B5EEF4()
{
  unint64_t result = qword_269C43228;
  if (!qword_269C43228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43228);
  }
  return result;
}

unint64_t sub_252B5EF44()
{
  unint64_t result = qword_269C43230;
  if (!qword_269C43230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43230);
  }
  return result;
}

unint64_t sub_252B5EF94()
{
  unint64_t result = qword_269C43238;
  if (!qword_269C43238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43238);
  }
  return result;
}

unint64_t sub_252B5EFE4()
{
  unint64_t result = qword_269C43240;
  if (!qword_269C43240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43240);
  }
  return result;
}

unint64_t sub_252B5F034()
{
  unint64_t result = qword_269C43248;
  if (!qword_269C43248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43248);
  }
  return result;
}

unint64_t sub_252B5F084()
{
  unint64_t result = qword_269C43250;
  if (!qword_269C43250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43250);
  }
  return result;
}

unint64_t sub_252B5F0D4()
{
  unint64_t result = qword_269C43258;
  if (!qword_269C43258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43258);
  }
  return result;
}

unint64_t sub_252B5F124()
{
  unint64_t result = qword_269C43260;
  if (!qword_269C43260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43260);
  }
  return result;
}

unint64_t sub_252B5F174()
{
  unint64_t result = qword_269C43268;
  if (!qword_269C43268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43268);
  }
  return result;
}

unint64_t sub_252B5F1C4()
{
  unint64_t result = qword_269C43270;
  if (!qword_269C43270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43270);
  }
  return result;
}

unint64_t sub_252B5F214()
{
  unint64_t result = qword_269C43278;
  if (!qword_269C43278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43278);
  }
  return result;
}

unint64_t sub_252B5F264()
{
  unint64_t result = qword_269C43280;
  if (!qword_269C43280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43280);
  }
  return result;
}

unint64_t sub_252B5F2B4()
{
  unint64_t result = qword_269C43288;
  if (!qword_269C43288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43288);
  }
  return result;
}

unint64_t sub_252B5F304()
{
  unint64_t result = qword_269C43290;
  if (!qword_269C43290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43290);
  }
  return result;
}

unint64_t sub_252B5F354()
{
  unint64_t result = qword_269C43298;
  if (!qword_269C43298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43298);
  }
  return result;
}

unint64_t sub_252B5F3A4()
{
  unint64_t result = qword_269C432A0;
  if (!qword_269C432A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C432A0);
  }
  return result;
}

unint64_t sub_252B5F3F4()
{
  unint64_t result = qword_269C432A8;
  if (!qword_269C432A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C432A8);
  }
  return result;
}

uint64_t sub_252B5F444(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_252B5F4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_252B5F548()
{
  return sub_252D1A578();
}

uint64_t sub_252B5F574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  *(void *)(v10 - 328) = a1;
  *(void *)(v10 - 320) = v9;
  *(void *)(v10 - 312) = a2;
  *(void *)(v10 - 304) = a3;
  *(void *)(v10 - 296) = a4;
  *(void *)(v10 - 288) = a5;
  *(void *)(v10 - 280) = a6;
  *(void *)(v10 - 272) = a7;
  *(void *)(v10 - 264) = a8;
  *(void *)(v10 - 256) = v8;
  return static ResponseDialog.== infix(_:_:)((void *)(v10 - 248), (void *)(v10 - 328));
}

uint64_t sub_252B5F5D8()
{
  return v0;
}

uint64_t sub_252B5F5F0()
{
  return 0x6574616C706D6574;
}

void *sub_252B5F60C()
{
  return sub_252AC3A68(v0, v0[3]);
}

uint64_t sub_252B5F664()
{
  return v0;
}

uint64_t sub_252B5F6B8()
{
  return 0x6C6175736976;
}

unint64_t sub_252B5F6CC()
{
  return 0xD000000000000016;
}

void sub_252B5F6E0()
{
  JUMPOUT(0x2533CA020);
}

uint64_t sub_252B5F6F8()
{
  return 0;
}

uint64_t sub_252B5F720()
{
  return 0x676F6C616964;
}

uint64_t sub_252B5F734()
{
  return sub_252D1A3E8();
}

void sub_252B5F754()
{
  *(void *)(v10 - 248) = v0;
  *(void *)(v10 - 240) = v9;
  *(void *)(v10 - 232) = v8;
  *(void *)(v10 - 224) = v3;
  *(void *)(v10 - 216) = v7;
  *(void *)(v10 - 208) = v5;
  *(void *)(v10 - 200) = v1;
  *(void *)(v10 - 192) = v4;
  *(void *)(v10 - 184) = v2;
  *(void *)(v10 - 176) = v6;
}

uint64_t sub_252B5F76C()
{
  return sub_252D1A718();
}

uint64_t sub_252B5F790()
{
  return sub_252D1A518();
}

uint64_t sub_252B5F7B4()
{
  return v0;
}

uint64_t sub_252B5F7CC()
{
  return 0x6574616C706D6574;
}

__n128 sub_252B5F7E8(uint64_t a1)
{
  *(_OWORD *)(v1 - 48) = *(_OWORD *)a1;
  return *(__n128 *)(a1 + 48);
}

uint64_t sub_252B5F80C()
{
  return sub_252D1A4E8();
}

uint64_t sub_252B5F824(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_252B5F890()
{
  sub_252B592E8(*(void *)(v0 - 104), *(void *)(v0 - 112));
  return swift_bridgeObjectRelease();
}

uint64_t sub_252B5F8C4()
{
  return v0;
}

uint64_t sub_252B5F8D4()
{
  return sub_252D1A738();
}

BOOL _s16IntelligenceFlow14ResponseVisualV0cD7OptionsV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_252B5F908()
{
  return sub_252D1A718();
}

unint64_t sub_252B5F920()
{
  return 0xD000000000000015;
}

uint64_t sub_252B5F934()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_252B5F94C()
{
  return 0xD000000000000010;
}

uint64_t sub_252B5F960(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_252B5F974()
{
  return sub_252D1A6A8();
}

uint64_t sub_252B5F98C()
{
  return sub_252D1A498();
}

uint64_t sub_252B5F9B4()
{
  return 0x6C6175736976;
}

uint64_t sub_252B5F9C8()
{
  return 0x676F6C616964;
}

uint64_t sub_252B5F9DC()
{
  return sub_252D1A408();
}

uint64_t sub_252B5F9F4()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  return sub_252B5A058(v2, v3);
}

void sub_252B5FA1C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252B5FA38()
{
  return 0;
}

uint64_t sub_252B5FA54()
{
  return type metadata accessor for ResponseVisual.UIType(0);
}

uint64_t sub_252B5FA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = v9;
  a9[9] = v10;
  return sub_252B59FE8(a1, a2);
}

__n128 sub_252B5FAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __n128 a11, long long a12, long long a13)
{
  *(_OWORD *)(v13 + 24) = a13;
  *(_OWORD *)(v13 + 40) = a12;
  __n128 result = a11;
  *(__n128 *)(v13 + 56) = a11;
  return result;
}

uint64_t _s16IntelligenceFlow14ResponseVisualV5viewsSayAC6UITypeOGvg_0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_252B5FAC8()
{
  return 0xD000000000000010;
}

double sub_252B5FAF8()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  return result;
}

uint64_t sub_252B5FB14()
{
  *(unsigned char *)(v0 - 96) = 1;
  return *(void *)(v0 - 112);
}

uint64_t sub_252B5FB30()
{
  sub_252B592FC(v3, v2);
  sub_252B592FC(v1, v0);
  return v3;
}

uint64_t sub_252B5FB6C()
{
  return v0 - 72;
}

uint64_t sub_252B5FB7C()
{
  return sub_252D1A578();
}

uint64_t sub_252B5FBA0()
{
  return sub_252D1A718();
}

uint64_t sub_252B5FBD0()
{
  return sub_252D1A738();
}

uint64_t sub_252B5FBF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  uint64_t v3 = type metadata accessor for ResponseVisual.UIType(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, 1, 1, v3);
}

uint64_t sub_252B5FC40()
{
  return sub_252D1A2F8();
}

uint64_t sub_252B5FC5C()
{
  return sub_252D1A438();
}

void sub_252B5FC80()
{
  *(unsigned char *)(v0 - 65) = 1;
}

uint64_t sub_252B5FC8C()
{
  return v0;
}

uint64_t sub_252B5FC98()
{
  return v0;
}

uint64_t sub_252B5FCAC(uint64_t a1)
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
}

uint64_t sub_252B5FCCC()
{
  return sub_252D1A4D8();
}

uint64_t sub_252B5FCF8()
{
  return sub_252AC5C14(v1, v0);
}

uint64_t sub_252B5FD10()
{
  return v0;
}

uint64_t sub_252B5FD30()
{
  return sub_252AC5C14(v0, v1);
}

uint64_t sub_252B5FD48()
{
  return type metadata accessor for ResponseManifest(0);
}

uint64_t sub_252B5FD60(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_252B5FD6C()
{
  return *(void *)(v0 + 88);
}

void *sub_252B5FD8C(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

uint64_t sub_252B5FDA8()
{
  return sub_252D1A418();
}

uint64_t sub_252B5FDC8()
{
  return v0 - 96;
}

void sub_252B5FDDC()
{
  *(void *)(v2 - 344) = v1;
  *(void *)(v2 - 336) = v0;
}

uint64_t sub_252B5FDF0()
{
  return v0;
}

uint64_t sub_252B5FE04()
{
  return v0;
}

uint64_t sub_252B5FE18()
{
  return v0;
}

uint64_t sub_252B5FE40@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 160) = a1;
  return sub_252D1A408();
}

uint64_t _s16IntelligenceFlow14ResponseVisualV6UITypeO20PluginSnippetPayloadV15pluginModelData8bundleIdAG10Foundation0K0V_SStcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void sub_252B5FE80(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 16) = 0;
}

void sub_252B5FE88(char a1@<W8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 - 160) = a2;
  *(unsigned char *)(v2 - 144) = a1;
  *(unsigned char *)(v2 - 65) = 2;
}

uint64_t sub_252B5FE9C()
{
  return sub_252D1A6A8();
}

void *sub_252B5FEB4(void *a1)
{
  return sub_252AC3A68(a1, v1);
}

unint64_t sub_252B5FED0()
{
  return 0xD000000000000015;
}

uint64_t sub_252B5FEF8()
{
  return v0;
}

uint64_t sub_252B5FF20()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252B5FF74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_252B5FF8C()
{
  *(unsigned char *)(v0 - 66) = 1;
  return *(void *)(v0 - 96);
}

uint64_t ResponseOutput.VisualOutput.LiveActivityOutputPayload.sessionId.getter()
{
  return sub_252AEA3DC();
}

IntelligenceFlow::ResponseOutput::VisualOutput::LiveActivityOutputPayload __swiftcall ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(sessionId:)(IntelligenceFlow::ResponseOutput::VisualOutput::LiveActivityOutputPayload sessionId)
{
  IntelligenceFlow::ResponseOutput::VisualOutput::LiveActivityOutputPayload *v1 = sessionId;
  return sessionId;
}

uint64_t sub_252B5FFD8()
{
  return sub_252AC378C();
}

uint64_t sub_252B5FFF0(uint64_t a1)
{
  unint64_t v2 = sub_252B600A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B6002C(uint64_t a1)
{
  unint64_t v2 = sub_252B600A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.VisualOutput.LiveActivityOutputPayload.encode(to:)()
{
}

unint64_t sub_252B600A4()
{
  unint64_t result = qword_269C432B8;
  if (!qword_269C432B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C432B8);
  }
  return result;
}

void ResponseOutput.VisualOutput.LiveActivityOutputPayload.init(from:)()
{
}

void sub_252B6012C()
{
}

void sub_252B60144()
{
}

uint64_t _s16IntelligenceFlow14ResponseOutputV06VisualD0O012LiveActivityD7PayloadV2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_252D1A5D8();
  }
}

uint64_t sub_252B60194(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252B6021C()
{
  return 0x6449656C646E7562;
}

uint64_t sub_252B60238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B60194(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252B60264(uint64_t a1)
{
  unint64_t v2 = sub_252B60410();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B602A0(uint64_t a1)
{
  unint64_t v2 = sub_252B60410();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.VisualOutput.InAppResponseOutputPayload.encode(to:)()
{
}

void sub_252B60318()
{
  sub_252AF4380();
  uint64_t v6 = v0;
  unint64_t v2 = v1;
  sub_252AC3A24(v3);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252AF45D8();
  sub_252AC3A68(v2, v2[3]);
  v6();
  sub_252D1A738();
  sub_252D1A528();
  sub_252B775A0();
  v5();
  sub_252B5FD80();
  sub_252AF4368();
}

unint64_t sub_252B60410()
{
  unint64_t result = qword_269C432D0;
  if (!qword_269C432D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C432D0);
  }
  return result;
}

void ResponseOutput.VisualOutput.InAppResponseOutputPayload.init(from:)()
{
}

void sub_252B60498()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v12 = v5;
  sub_252AC3A24(v6);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AC423C();
  sub_252AC3A68(v4, v4[3]);
  v2();
  sub_252D1A718();
  if (!v0)
  {
    uint64_t v8 = sub_252D1A448();
    uint64_t v10 = v9;
    sub_252B775A0();
    v11();
    *uint64_t v12 = v8;
    v12[1] = v10;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_252AF4368();
}

void sub_252B605C8()
{
}

void sub_252B605E0()
{
}

uint64_t ResponseOutput.VisualOutput.SystemSnippetOutputPayload.pluginModel.getter()
{
  return sub_252B6175C();
}

uint64_t ResponseOutput.VisualOutput.SystemSnippetOutputPayload.init(pluginModel:)()
{
  return sub_252B60CEC();
}

uint64_t static RGPluginModel.== infix(_:_:)()
{
  type metadata accessor for RGPluginModel(0);
  sub_252B60A84(&qword_269C432E0, (void (*)(uint64_t))type metadata accessor for RGPluginModel);
  uint64_t v0 = sub_252D19608();
  unint64_t v2 = v1;
  uint64_t v4 = sub_252D19608();
  unint64_t v5 = v3;
  if (v2 >> 60 == 15)
  {
    if (v3 >> 60 == 15) {
      return 1;
    }
    goto LABEL_5;
  }
  if (v3 >> 60 == 15)
  {
LABEL_5:
    sub_252B592E8(v0, v2);
    sub_252B592E8(v4, v5);
    return 0;
  }
  sub_252AC5A54(v0, v2);
  char v7 = MEMORY[0x2533C8590](v0, v2, v4, v5);
  sub_252B592E8(v4, v5);
  sub_252B592E8(v0, v2);
  sub_252B592E8(v0, v2);
  return v7 & 1;
}

uint64_t sub_252B6079C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F4D6E6967756C70 && a2 == 0xEB000000006C6564)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252B6083C()
{
  return 0x6F4D6E6967756C70;
}

uint64_t sub_252B60860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B6079C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252B6088C(uint64_t a1)
{
  unint64_t v2 = sub_252B60A38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B608C8(uint64_t a1)
{
  unint64_t v2 = sub_252B60A38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResponseOutput.VisualOutput.SystemSnippetOutputPayload.encode(to:)(void *a1)
{
  sub_252AC3A24(&qword_269C432E8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252AC3A68(a1, a1[3]);
  sub_252B60A38();
  sub_252B77644();
  sub_252D1A738();
  type metadata accessor for RGPluginModel(0);
  sub_252B60A84(&qword_269C432F8, (void (*)(uint64_t))type metadata accessor for RGPluginModel);
  sub_252D1A578();
  sub_252B775A0();
  return v3();
}

unint64_t sub_252B60A38()
{
  unint64_t result = qword_269C432F0;
  if (!qword_269C432F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C432F0);
  }
  return result;
}

uint64_t sub_252B60A84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void ResponseOutput.VisualOutput.SystemSnippetOutputPayload.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  type metadata accessor for RGPluginModel(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v3);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43300);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
  uint64_t v6 = sub_252AEA368(v5);
  MEMORY[0x270FA5388](v6);
  sub_252AF45D8();
  sub_252AC3A68(v2, v2[3]);
  sub_252B60A38();
  sub_252B7765C();
  sub_252D1A718();
  if (!v0)
  {
    sub_252B60A84(&qword_269C43308, (void (*)(uint64_t))type metadata accessor for RGPluginModel);
    sub_252D1A498();
    sub_252B5F53C();
    v9(v7, v8);
    sub_252B60CEC();
    sub_252B60CEC();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  sub_252AF4368();
}

uint64_t type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C435B8);
}

uint64_t sub_252B60CEC()
{
  uint64_t v2 = sub_252B23194();
  v3(v2);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

void sub_252B60D44()
{
}

uint64_t sub_252B60D5C(void *a1)
{
  return ResponseOutput.VisualOutput.SystemSnippetOutputPayload.encode(to:)(a1);
}

uint64_t ResponseOutput.VisualOutput.PluginSnippetOutputPayload.pluginModelData.getter()
{
  uint64_t v0 = sub_252AEA3DC();
  sub_252AC5A54(v0, v1);
  return sub_252AEA3DC();
}

uint64_t ResponseOutput.VisualOutput.PluginSnippetOutputPayload.bundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(pluginModelData:bundleId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t static ResponseOutput.VisualOutput.PluginSnippetOutputPayload.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  if ((MEMORY[0x2533C8590](*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  sub_252AEA3DC();

  return sub_252D1A5D8();
}

uint64_t sub_252B60E68()
{
  return sub_252D1A6E8();
}

uint64_t sub_252B60EB0()
{
  return sub_252B60E68();
}

uint64_t sub_252B60EB8(uint64_t a1)
{
  unint64_t v2 = sub_252B61070();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B60EF4(uint64_t a1)
{
  unint64_t v2 = sub_252B61070();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C43310);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252AC3A68(v3, v3[3]);
  sub_252B61070();
  sub_252D1A738();
  sub_252B5935C();
  sub_252D1A578();
  if (!v0) {
    sub_252D1A528();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_252AF4368();
}

unint64_t sub_252B61070()
{
  unint64_t result = qword_269C43318;
  if (!qword_269C43318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43318);
  }
  return result;
}

void ResponseOutput.VisualOutput.PluginSnippetOutputPayload.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C43320);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AF45F0();
  sub_252AC3A68(v2, v2[3]);
  sub_252B61070();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_252B593A8();
    sub_252D1A498();
    sub_252AC5A54(v11, v12);
    uint64_t v6 = sub_252D1A448();
    uint64_t v8 = v7;
    uint64_t v10 = v6;
    sub_252B5F658();
    v9();
    sub_252AC5A54(v11, v12);
    swift_bridgeObjectRetain();
    sub_252B5FD30();
    *uint64_t v4 = v11;
    v4[1] = v12;
    v4[2] = v10;
    v4[3] = v8;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    sub_252B5FD30();
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

void sub_252B61294()
{
}

void sub_252B612AC()
{
}

uint64_t static ResponseOutput.VisualOutput.== infix(_:_:)()
{
  uint64_t v3 = type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252AEDE70();
  uint64_t v35 = v5;
  type metadata accessor for ResponseOutput.VisualOutput(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  sub_252B234B4();
  MEMORY[0x270FA5388](v7);
  sub_252B5FE2C();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v34 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v34 - v12);
  uint64_t v14 = sub_252AC3A24(&qword_269C43328);
  uint64_t v15 = sub_252AEA368(v14);
  MEMORY[0x270FA5388](v15);
  sub_252B5F6A0();
  uint64_t v17 = (uint64_t *)(v0 + *(int *)(v16 + 56));
  sub_252B6175C();
  sub_252B6175C();
  sub_252AEA3DC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252B6175C();
      uint64_t v19 = *v11;
      uint64_t v18 = v11[1];
      if (sub_252B7762C() != 1) {
        goto LABEL_23;
      }
      goto LABEL_7;
    case 2u:
      sub_252B6175C();
      if (sub_252B7762C() == 2)
      {
        uint64_t v20 = v35;
        sub_252B60CEC();
        char v21 = static RGPluginModel.== infix(_:_:)();
        sub_252B617B4(v20, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
        sub_252B617B4(v1, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
        sub_252B617B4(v0, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
        return v21 & 1;
      }
      sub_252B617B4(v1, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
      goto LABEL_24;
    case 3u:
      sub_252B6175C();
      uint64_t v25 = *v2;
      uint64_t v24 = v2[1];
      uint64_t v27 = v2[2];
      uint64_t v26 = v2[3];
      if (sub_252B7762C() != 3)
      {
        sub_252B5FCF8();
LABEL_23:
        swift_bridgeObjectRelease();
LABEL_24:
        sub_252B5A4CC(v0, &qword_269C43328);
        goto LABEL_25;
      }
      uint64_t v29 = *v17;
      unint64_t v28 = v17[1];
      uint64_t v31 = v17[2];
      uint64_t v30 = v17[3];
      if ((MEMORY[0x2533C8590](v25, v24, *v17, v28) & 1) == 0)
      {
        sub_252AC5C14(v29, v28);
        swift_bridgeObjectRelease();
        sub_252B5FCF8();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      if (v27 != v31 || v26 != v30)
      {
        char v23 = sub_252D1A5D8();
        sub_252AC5C14(v29, v28);
        swift_bridgeObjectRelease();
        sub_252B5FCF8();
        goto LABEL_19;
      }
      sub_252AC5C14(v29, v28);
      swift_bridgeObjectRelease();
      sub_252B5FCF8();
      swift_bridgeObjectRelease();
      goto LABEL_30;
    default:
      sub_252B6175C();
      uint64_t v19 = *v13;
      uint64_t v18 = v13[1];
      if (sub_252B7762C()) {
        goto LABEL_23;
      }
LABEL_7:
      if (v19 == *v17 && v18 == v17[1])
      {
        swift_bridgeObjectRelease_n();
LABEL_30:
        sub_252B617B4(v0, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
        char v21 = 1;
        return v21 & 1;
      }
      char v23 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_30;
      }
LABEL_28:
      sub_252B617B4(v0, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
LABEL_25:
      char v21 = 0;
      return v21 & 1;
  }
}

uint64_t type metadata accessor for ResponseOutput.VisualOutput(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2345D0);
}

uint64_t sub_252B6175C()
{
  uint64_t v2 = sub_252B23194();
  v3(v2);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_252B617B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

uint64_t sub_252B61808(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463416576696CLL && a2 == 0xEC00000079746976;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7365527070416E69 && a2 == 0xED000065736E6F70;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E536D6574737973 && a2 == 0xED00007465707069;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E536E6967756C70 && a2 == 0xED00007465707069)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_252B61A34(char a1)
{
  uint64_t result = 0x697463416576696CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7365527070416E69;
      break;
    case 2:
      uint64_t v3 = 0x6D6574737973;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x6E6967756C70;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6E53000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252B61AE0()
{
  return sub_252AF06D0();
}

uint64_t sub_252B61AFC()
{
  return sub_252B61A34(*v0);
}

uint64_t sub_252B61B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B61808(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B61B2C(uint64_t a1)
{
  unint64_t v2 = sub_252B622C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B61B68(uint64_t a1)
{
  unint64_t v2 = sub_252B622C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B61BA4(uint64_t a1)
{
  unint64_t v2 = sub_252B623F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B61BE0(uint64_t a1)
{
  unint64_t v2 = sub_252B623F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B61C1C(uint64_t a1)
{
  unint64_t v2 = sub_252B62490();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B61C58(uint64_t a1)
{
  unint64_t v2 = sub_252B62490();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B61C94(uint64_t a1)
{
  unint64_t v2 = sub_252B62314();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B61CD0(uint64_t a1)
{
  unint64_t v2 = sub_252B62314();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B61D0C(uint64_t a1)
{
  unint64_t v2 = sub_252B623AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B61D48(uint64_t a1)
{
  unint64_t v2 = sub_252B623AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.VisualOutput.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C43330);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43338);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252AEDE70();
  type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252AEDE70();
  uint64_t v22 = v6;
  sub_252AC3A24(&qword_269C43340);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C43348);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252B77500();
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C43350);
  sub_252AEDBD0();
  uint64_t v23 = v10;
  MEMORY[0x270FA5388](v10);
  sub_252B5F630();
  sub_252AC3A68(v2, v2[3]);
  sub_252B622C8();
  sub_252D1A738();
  sub_252B6175C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252B623F8();
      sub_252B5FCCC();
      sub_252B62444();
      sub_252D1A578();
      sub_252B5F53C();
      v21();
      uint64_t v12 = sub_252B77448();
      uint64_t v14 = v23;
      goto LABEL_6;
    case 2u:
      sub_252B60CEC();
      sub_252B623AC();
      sub_252B5FCCC();
      sub_252B60A84(&qword_269C43378, (void (*)(uint64_t))type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
      sub_252D1A578();
      sub_252B5F53C();
      v15();
      sub_252B617B4(v22, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
      sub_252B77448();
      sub_252B5F53C();
      v16();
      goto LABEL_8;
    case 3u:
      uint64_t v17 = *v0;
      unint64_t v18 = v0[1];
      sub_252B62314();
      sub_252B5FCCC();
      sub_252B62360();
      sub_252D1A578();
      sub_252B5F53C();
      v19();
      sub_252B77448();
      sub_252B5F53C();
      v20();
      sub_252AC5C14(v17, v18);
      goto LABEL_7;
    default:
      sub_252B62490();
      sub_252B5FCCC();
      sub_252B624DC();
      sub_252D1A578();
      sub_252B5F53C();
      v11();
      uint64_t v12 = sub_252B77448();
      uint64_t v14 = v23;
LABEL_6:
      v13(v12, v14);
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      sub_252B5FD80();
      sub_252AF4368();
      return;
  }
}

unint64_t sub_252B622C8()
{
  unint64_t result = qword_269C43358;
  if (!qword_269C43358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43358);
  }
  return result;
}

unint64_t sub_252B62314()
{
  unint64_t result = qword_269C43360;
  if (!qword_269C43360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43360);
  }
  return result;
}

unint64_t sub_252B62360()
{
  unint64_t result = qword_269C43368;
  if (!qword_269C43368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43368);
  }
  return result;
}

unint64_t sub_252B623AC()
{
  unint64_t result = qword_269C43370;
  if (!qword_269C43370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43370);
  }
  return result;
}

unint64_t sub_252B623F8()
{
  unint64_t result = qword_269C43380;
  if (!qword_269C43380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43380);
  }
  return result;
}

unint64_t sub_252B62444()
{
  unint64_t result = qword_269C43388;
  if (!qword_269C43388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43388);
  }
  return result;
}

unint64_t sub_252B62490()
{
  unint64_t result = qword_269C43390;
  if (!qword_269C43390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43390);
  }
  return result;
}

unint64_t sub_252B624DC()
{
  unint64_t result = qword_269C43398;
  if (!qword_269C43398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43398);
  }
  return result;
}

void ResponseOutput.VisualOutput.init(from:)()
{
  sub_252AF4380();
  uint64_t v5 = v4;
  uint64_t v75 = v6;
  sub_252AC3A24(&qword_269C433A0);
  sub_252AEDBD0();
  uint64_t v73 = v8;
  uint64_t v74 = v7;
  MEMORY[0x270FA5388](v7);
  sub_252AEDE70();
  uint64_t v71 = v9;
  sub_252AC3A24(&qword_269C433A8);
  sub_252AEDBD0();
  uint64_t v68 = v11;
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v10);
  sub_252AEDE70();
  uint64_t v72 = v12;
  uint64_t v78 = sub_252AC3A24(&qword_269C433B0);
  sub_252AEDBD0();
  uint64_t v67 = v13;
  MEMORY[0x270FA5388](v14);
  sub_252AEDE70();
  uint64_t v70 = v15;
  uint64_t v66 = sub_252AC3A24(&qword_269C433B8);
  sub_252AEDBD0();
  uint64_t v65 = v16;
  MEMORY[0x270FA5388](v17);
  sub_252B774E4(v18, v60);
  sub_252AC3A24(&qword_269C433C0);
  sub_252AEDBD0();
  uint64_t v76 = v20;
  uint64_t v77 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v79 = sub_252B77500();
  sub_252AEA304();
  MEMORY[0x270FA5388](v21);
  sub_252B234B4();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v60 - v24;
  MEMORY[0x270FA5388](v23);
  sub_252B5FE2C();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v60 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = v5[3];
  v80 = v5;
  sub_252AC3A68(v5, v30);
  sub_252B622C8();
  sub_252B7765C();
  sub_252D1A718();
  if (v0) {
    goto LABEL_10;
  }
  v61 = v29;
  v62 = v1;
  v64 = v25;
  v63 = v2;
  uint64_t v31 = v79;
  uint64_t v32 = v77;
  if (!*(void *)(sub_252D1A4C8() + 16)
    || (uint64_t v60 = 0,
        uint64_t v33 = sub_252B773C4(),
        sub_252B5F440(v33),
        uint64_t v35 = v34,
        unint64_t v37 = v36,
        swift_bridgeObjectRelease(),
        v35 != v37 >> 1))
  {
    uint64_t v38 = sub_252D1A308();
    swift_allocError();
    uint64_t v40 = v39;
    sub_252AC3A24(&qword_269C42E78);
    uint64_t *v40 = v31;
    sub_252D1A3F8();
    sub_252B77578();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v40, *MEMORY[0x263F8DCB0], v38);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v3, v32);
LABEL_10:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v80);
    goto LABEL_11;
  }
  switch(v3)
  {
    case 1:
      LOBYTE(v81) = 1;
      sub_252B623F8();
      sub_252B5F734();
      sub_252B66C04();
      sub_252D1A498();
      sub_252B77650();
      sub_252B5F53C();
      v46();
      swift_unknownObjectRelease();
      uint64_t v47 = sub_252B5F664();
      v48(v47);
      uint64_t v49 = *((void *)&v81 + 1);
      v50 = v62;
      void *v62 = v81;
      v50[1] = v49;
      sub_252B77690();
      goto LABEL_12;
    case 2:
      LOBYTE(v81) = 2;
      sub_252B623AC();
      sub_252B5F734();
      type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(0);
      sub_252B60A84(&qword_269C433D0, (void (*)(uint64_t))type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload);
      sub_252D1A498();
      sub_252B5F53C();
      v51();
      swift_unknownObjectRelease();
      sub_252B7767C();
      sub_252B5F53C();
      v52();
      sub_252B77690();
      goto LABEL_12;
    case 3:
      LOBYTE(v81) = 3;
      sub_252B62314();
      sub_252B5F734();
      sub_252B66BB8();
      sub_252D1A498();
      uint64_t v53 = sub_252B77668();
      v54(v53);
      swift_unknownObjectRelease();
      uint64_t v55 = sub_252B5F664();
      v56(v55);
      uint64_t v57 = v82;
      uint64_t v58 = v83;
      v59 = v63;
      _OWORD *v63 = v81;
      *((void *)v59 + 2) = v57;
      *((void *)v59 + 3) = v58;
      sub_252B77690();
      swift_storeEnumTagMultiPayload();
      sub_252B60CEC();
      goto LABEL_13;
    default:
      LOBYTE(v81) = 0;
      sub_252B62490();
      sub_252B5F734();
      sub_252B66C50();
      sub_252D1A498();
      sub_252B5F53C();
      v41();
      swift_unknownObjectRelease();
      uint64_t v42 = sub_252B5F664();
      v43(v42);
      uint64_t v44 = *((void *)&v81 + 1);
      v45 = v61;
      void *v61 = v81;
      v45[1] = v44;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      sub_252B60CEC();
LABEL_13:
      sub_252B60CEC();
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v80);
      break;
  }
LABEL_11:
  sub_252B5FD80();
  sub_252AF4368();
}

void sub_252B62D1C()
{
}

void sub_252B62D34()
{
}

uint64_t ResponseOutput.VisualOutputOptions.canReplacePrintableText.getter()
{
  return *v0;
}

IntelligenceFlow::ResponseOutput::VisualOutputOptions __swiftcall ResponseOutput.VisualOutputOptions.init(canReplacePrintableText:)(IntelligenceFlow::ResponseOutput::VisualOutputOptions canReplacePrintableText)
{
  v1->canReplacePrintableText = canReplacePrintableText.canReplacePrintableText;
  return canReplacePrintableText;
}

BOOL static ResponseOutput.VisualOutputOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_252B62D78(uint64_t a1)
{
  unint64_t v2 = sub_252B66C9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B62DB4(uint64_t a1)
{
  unint64_t v2 = sub_252B66C9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.VisualOutputOptions.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C433E8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252AC3A68(v1, v1[3]);
  sub_252B66C9C();
  sub_252B77644();
  sub_252D1A738();
  sub_252D1A538();
  sub_252B5F658();
  v3();
  sub_252B5FD80();
  sub_252AF4368();
}

void ResponseOutput.VisualOutputOptions.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C433F8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AC423C();
  sub_252AC3A68(v2, v2[3]);
  sub_252B66C9C();
  sub_252B77644();
  sub_252D1A718();
  if (!v0)
  {
    char v6 = sub_252D1A458();
    sub_252B5F658();
    v7();
    *uint64_t v4 = v6 & 1;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  sub_252AF4368();
}

void sub_252B62FD4()
{
}

void sub_252B62FEC()
{
}

uint64_t ResponseOutput.DialogType.content.getter()
{
  sub_252ACE7E4(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return sub_252AEA3DC();
}

uint64_t static ResponseOutput.DialogType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_40;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_252B772E8();
      }
      sub_252ACE7E4(v6, v5, 1u);
      sub_252ACE7E4(v3, v2, 1u);
      uint64_t v15 = sub_252B77458(v3, v2, 1u);
      unsigned __int8 v17 = 1;
      goto LABEL_49;
    case 2u:
      if (v7 != 2) {
        goto LABEL_40;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_252B772E8();
      }
      sub_252ACE7E4(v6, v5, 2u);
      sub_252ACE7E4(v3, v2, 2u);
      uint64_t v15 = sub_252B77458(v3, v2, 2u);
      unsigned __int8 v17 = 2;
      goto LABEL_49;
    case 3u:
      if (v7 != 3) {
        goto LABEL_40;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_252B772E8();
      }
      sub_252ACE7E4(v6, v5, 3u);
      sub_252ACE7E4(v3, v2, 3u);
      uint64_t v15 = sub_252B77458(v3, v2, 3u);
      unsigned __int8 v17 = 3;
      goto LABEL_49;
    case 4u:
      if (v3 | v2)
      {
        if (v7 != 4 || v6 != 1 || v5 != 0)
        {
LABEL_40:
          sub_252ACE7E4(*(void *)a2, *(void *)(a2 + 8), v7);
          sub_252ACE7E4(v3, v2, v4);
          uint64_t v19 = sub_252B77458(v3, v2, v4);
          sub_252AD170C(v19, v20, v7);
          char v9 = 0;
          return v9 & 1;
        }
        sub_252AD170C(*(void *)a1, v2, 4u);
        char v9 = 1;
        uint64_t v15 = 1;
        uint64_t v16 = 0;
        unsigned __int8 v17 = 4;
LABEL_49:
        sub_252AD170C(v15, v16, v17);
      }
      else
      {
        if (v7 != 4 || (v5 | v6) != 0) {
          goto LABEL_40;
        }
        sub_252AD170C(*(void *)a1, v2, 4u);
        sub_252AD170C(0, 0, 4u);
        char v9 = 1;
      }
      return v9 & 1;
    default:
      if (*(unsigned char *)(a2 + 16)) {
        goto LABEL_40;
      }
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_252B772E8();
      }
      sub_252ACE7E4(v6, v5, 0);
      sub_252ACE7E4(v3, v2, 0);
      uint64_t v15 = sub_252B77458(v3, v2, 0);
      unsigned __int8 v17 = 0;
      goto LABEL_49;
  }
}

uint64_t sub_252B63314(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6554636974617473 && a2 == 0xEA00000000007478;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F6C616944746163 && a2 == 0xE900000000000067;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x63696E6F73 && a2 == 0xE500000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x65746172656E6567 && a2 == 0xE900000000000064;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1CFE0 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x7373657270707573 && a2 == 0xEA00000000006465)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = sub_252D1A5D8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_252B635A4(char a1)
{
  unint64_t result = 0x6554636974617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F6C616944746163;
      break;
    case 2:
      unint64_t result = 0x63696E6F73;
      break;
    case 3:
      unint64_t result = 0x65746172656E6567;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x7373657270707573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252B63684(uint64_t a1)
{
  unint64_t v2 = sub_252B66E64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B636C0(uint64_t a1)
{
  unint64_t v2 = sub_252B66E64();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_252B636FC()
{
  return sub_252B635A4(*v0);
}

uint64_t sub_252B63704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B63314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B6372C(uint64_t a1)
{
  unint64_t v2 = sub_252B66CE8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B63768(uint64_t a1)
{
  unint64_t v2 = sub_252B66CE8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B637A4(uint64_t a1)
{
  unint64_t v2 = sub_252B66DCC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B637E0(uint64_t a1)
{
  unint64_t v2 = sub_252B66DCC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B6381C(uint64_t a1)
{
  unint64_t v2 = sub_252B66E18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B63858(uint64_t a1)
{
  unint64_t v2 = sub_252B66E18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B63894(uint64_t a1)
{
  unint64_t v2 = sub_252B66EB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B638D0(uint64_t a1)
{
  unint64_t v2 = sub_252B66EB0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B6390C(uint64_t a1)
{
  unint64_t v2 = sub_252B66D34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B63948(uint64_t a1)
{
  unint64_t v2 = sub_252B66D34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B63984(uint64_t a1)
{
  unint64_t v2 = sub_252B66D80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B639C0(uint64_t a1)
{
  unint64_t v2 = sub_252B66D80();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.DialogType.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C43400);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B774E4(v5, v19);
  sub_252AC3A24(&qword_269C43408);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43410);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43418);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43420);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C43428);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v10);
  sub_252AC3A24(&qword_269C43430);
  sub_252AEDBD0();
  uint64_t v21 = v12;
  uint64_t v22 = v11;
  MEMORY[0x270FA5388](v11);
  sub_252B5F630();
  long long v20 = *v0;
  uint64_t v13 = *((unsigned __int8 *)v0 + 16);
  sub_252AC3A68(v3, v3[3]);
  sub_252B66CE8();
  sub_252D1A738();
  switch(v13)
  {
    case 1:
      sub_252B66E64();
      uint64_t v15 = v22;
      sub_252B5FCCC();
      sub_252D1A528();
      goto LABEL_7;
    case 2:
      sub_252B66E18();
      uint64_t v15 = v22;
      sub_252B5FCCC();
      sub_252D1A528();
      goto LABEL_6;
    case 3:
      sub_252B66DCC();
      uint64_t v15 = v22;
      sub_252B5FCCC();
      sub_252D1A528();
LABEL_6:
      sub_252B77650();
LABEL_7:
      sub_252B5F53C();
      v16();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v15);
      break;
    case 4:
      if (v20 == 0) {
        sub_252B66D80();
      }
      else {
        sub_252B66D34();
      }
      sub_252B5FCCC();
      sub_252B77650();
      sub_252B5F53C();
      v17();
      sub_252B0012C();
      v18();
      break;
    default:
      sub_252B66EB0();
      sub_252B5FCCC();
      sub_252D1A528();
      sub_252B5F53C();
      v14();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v22);
      break;
  }
  sub_252AF4368();
}

void ResponseOutput.DialogType.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v51 = v4;
  sub_252AC3A24(&qword_269C43470);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43478);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B774C8(v7, v50);
  sub_252AC3A24(&qword_269C43480);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43488);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43490);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v10);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C43498);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v11);
  sub_252B5F630();
  uint64_t v12 = sub_252AC3A24(&qword_269C434A0);
  sub_252AEDBD0();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_252B7732C();
  uint64_t v52 = (uint64_t)v3;
  sub_252AC3A68(v3, v3[3]);
  sub_252B66CE8();
  sub_252B7765C();
  sub_252D1A718();
  if (!v0)
  {
    if (*(void *)(sub_252D1A4C8() + 16)
      && (uint64_t v16 = sub_252B773C4(), sub_252B5F440(v16), v18 = v17, v20 = v19, swift_bridgeObjectRelease(), v18 == v20 >> 1))
    {
      switch(v1)
      {
        case 1:
          sub_252B66E64();
          sub_252B7730C();
          uint64_t v38 = sub_252D1A448();
          uint64_t v29 = v28;
          sub_252B5F53C();
          v30();
          swift_unknownObjectRelease();
          uint64_t v31 = sub_252B77344();
          v32(v31);
          uint64_t v43 = v29;
          char v44 = 1;
          break;
        case 2:
          sub_252B66E18();
          sub_252B7730C();
          uint64_t v38 = sub_252D1A448();
          uint64_t v34 = v33;
          sub_252B5F53C();
          v35();
          swift_unknownObjectRelease();
          uint64_t v36 = sub_252B77344();
          v37(v36);
          uint64_t v43 = v34;
          char v44 = 2;
          break;
        case 3:
          sub_252B66DCC();
          sub_252B7730C();
          uint64_t v38 = sub_252D1A448();
          uint64_t v46 = v45;
          sub_252B5F53C();
          v47();
          swift_unknownObjectRelease();
          uint64_t v48 = sub_252B77344();
          v49(v48);
          uint64_t v43 = v46;
          char v44 = 3;
          break;
        case 4:
          sub_252B66D80();
          sub_252B7730C();
          sub_252B5F53C();
          v24();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v25();
          uint64_t v38 = 0;
          uint64_t v43 = 0;
          char v44 = 4;
          break;
        case 5:
          sub_252B66D34();
          sub_252B7730C();
          sub_252B5F53C();
          v26();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v27();
          uint64_t v43 = 0;
          char v44 = 4;
          uint64_t v38 = 1;
          break;
        default:
          sub_252B66EB0();
          sub_252D1A3E8();
          uint64_t v38 = sub_252D1A448();
          uint64_t v40 = v39;
          sub_252B5F53C();
          v41();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v42();
          uint64_t v43 = v40;
          char v44 = 0;
          break;
      }
      *(void *)uint64_t v51 = v38;
      *(void *)(v51 + 8) = v43;
      *(unsigned char *)(v51 + 16) = v44;
    }
    else
    {
      uint64_t v21 = sub_252D1A308();
      swift_allocError();
      uint64_t v23 = v22;
      sub_252AC3A24(&qword_269C42E78);
      *uint64_t v23 = &type metadata for ResponseOutput.DialogType;
      sub_252D1A3F8();
      sub_252B77578();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v52);
  sub_252AF4368();
}

void sub_252B646C0()
{
}

void sub_252B646D8()
{
}

uint64_t ResponseOutput.ResponseType.hash(into:)()
{
  return sub_252D1A6B8();
}

BOOL static ResponseOutput.ResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_252B64734(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974656C706D6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252B648CC(char a1)
{
  if (!a1) {
    return 0x6974656C706D6F63;
  }
  if (a1 == 1) {
    return 0x6769626D61736964;
  }
  return 0x616D7269666E6F63;
}

uint64_t sub_252B6493C()
{
  return sub_252B648CC(*v0);
}

uint64_t sub_252B64944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B64734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B6496C(uint64_t a1)
{
  unint64_t v2 = sub_252B66EFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B649A8(uint64_t a1)
{
  unint64_t v2 = sub_252B66EFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B649E4(uint64_t a1)
{
  unint64_t v2 = sub_252B66FE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B64A20(uint64_t a1)
{
  unint64_t v2 = sub_252B66FE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B64A5C(uint64_t a1)
{
  unint64_t v2 = sub_252B66F48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B64A98(uint64_t a1)
{
  unint64_t v2 = sub_252B66F48();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B64AD4(uint64_t a1)
{
  unint64_t v2 = sub_252B66F94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B64B10(uint64_t a1)
{
  unint64_t v2 = sub_252B66F94();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ResponseOutput.ResponseType.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C434A8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B774C8(v6, v16);
  sub_252AC3A24(&qword_269C434B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C434B8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252B5F630();
  uint64_t v9 = sub_252AC3A24(&qword_269C434C0);
  sub_252AEDBD0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_252AC423C();
  int v13 = *v2;
  sub_252AC3A68(v4, v4[3]);
  sub_252B66EFC();
  sub_252B77644();
  sub_252D1A738();
  if (v13)
  {
    if (v13 == 1) {
      sub_252B66F94();
    }
    else {
      sub_252B66F48();
    }
    sub_252B775C8();
  }
  else
  {
    sub_252B66FE0();
    sub_252B775C8();
  }
  sub_252B5F53C();
  v15(v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  sub_252AF4368();
}

uint64_t ResponseOutput.ResponseType.hashValue.getter()
{
  return sub_252D1A6E8();
}

void ResponseOutput.ResponseType.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v31 = v4;
  sub_252AC3A24(&qword_269C434E8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C434F0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B23278();
  sub_252AC3A24(&qword_269C434F8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AF45F0();
  uint64_t v8 = sub_252AC3A24(&qword_269C43500);
  sub_252AEDBD0();
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v10);
  sub_252B7732C();
  sub_252AC3A68(v3, v3[3]);
  sub_252B66EFC();
  sub_252B7765C();
  sub_252D1A718();
  if (v0) {
    goto LABEL_10;
  }
  uint64_t v33 = v3;
  uint64_t v11 = v1;
  uint64_t v12 = sub_252D1A4C8();
  if (!*(void *)(v12 + 16))
  {
LABEL_9:
    uint64_t v23 = sub_252D1A308();
    swift_allocError();
    uint64_t v25 = v24;
    sub_252AC3A24(&qword_269C42E78);
    *uint64_t v25 = &type metadata for ResponseOutput.ResponseType;
    sub_252D1A3F8();
    sub_252D1A2F8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v11, v8);
    uint64_t v3 = v33;
LABEL_10:
    uint64_t v26 = (uint64_t)v3;
    goto LABEL_11;
  }
  uint64_t v13 = v1;
  int v14 = *(unsigned __int8 *)(v12 + 32);
  sub_252B5F440(1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    uint64_t v11 = v13;
    goto LABEL_9;
  }
  char v19 = v14;
  if (v14)
  {
    if (v14 == 1)
    {
      sub_252B66F94();
      sub_252B775AC();
      unint64_t v20 = v31;
      sub_252B5F53C();
      v21();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v22();
    }
    else
    {
      sub_252B66F48();
      sub_252B775AC();
      unint64_t v20 = v31;
      sub_252B5F53C();
      v29();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v30();
      char v19 = v14;
    }
  }
  else
  {
    sub_252B66FE0();
    sub_252B775AC();
    sub_252B5F53C();
    v27();
    swift_unknownObjectRelease();
    sub_252B5F53C();
    v28();
    unint64_t v20 = v31;
  }
  *unint64_t v20 = v19;
  uint64_t v26 = (uint64_t)v33;
LABEL_11:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v26);
  sub_252AF4368();
}

void sub_252B65268()
{
}

void sub_252B65280()
{
}

uint64_t ResponseOutput.visualOutput.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResponseOutput.printedDialogOutput.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_252B774C0(v2, v3, *(unsigned char *)(v1 + 24), (uint64_t)a1);
}

uint64_t ResponseOutput.spokenDialogOutput.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_252B774C0(v2, v3, *(unsigned char *)(v1 + 48), (uint64_t)a1);
}

uint64_t ResponseOutput.attribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ResponseOutput(0) + 28);

  return sub_252B67060(v3, a1);
}

uint64_t ResponseOutput.options.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ResponseOutput(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ResponseOutput.options.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ResponseOutput(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*ResponseOutput.options.modify())()
{
  return nullsub_1;
}

uint64_t ResponseOutput.responseType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ResponseOutput(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t ResponseOutput.resultStatementIds.getter()
{
  type metadata accessor for ResponseOutput(0);

  return swift_bridgeObjectRetain();
}

uint64_t ResponseOutput.dialogIdentifier.getter()
{
  return sub_252AEA3DC();
}

uint64_t ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:responseType:)@<X0>(uint64_t a1@<X8>)
{
  sub_252B774B4();
  char v3 = *v2;
  uint64_t v8 = (int *)sub_252B773E4(v4, v5, v6, v7);
  *(unsigned char *)(a1 + v9) = v3;
  *(void *)(a1 + v8[10]) = MEMORY[0x263F8EE78];
  uint64_t v10 = (void *)(a1 + v8[11]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(a1 + v8[8]) = 0;
  uint64_t v11 = sub_252B77268();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, v12, v13, v14);
}

uint64_t ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:)@<X0>(uint64_t a1@<X8>)
{
  sub_252B774B4();
  uint64_t v6 = (int *)sub_252B773E4(v2, v3, v4, v5);
  *(unsigned char *)(a1 + v7) = 2;
  *(void *)(a1 + v6[10]) = MEMORY[0x263F8EE78];
  uint64_t v8 = (void *)(a1 + v6[11]);
  void *v8 = 0;
  v8[1] = 0;
  *(unsigned char *)(a1 + v6[8]) = 0;
  uint64_t v9 = sub_252B77268();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, v10, v11, v12);
}

uint64_t ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:resultStatementIds:)@<X0>(uint64_t a1@<X8>)
{
  sub_252B774B4();
  sub_252B77290(v2, v3, v4, v5);
  *(unsigned char *)(a1 + v6) = 0;
  uint64_t v7 = sub_252B77268();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v7, v8, v9, v10);
}

uint64_t ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:resultStatementIds:visualOutputOptions:)@<X0>(uint64_t a1@<X8>)
{
  sub_252B774B4();
  char v3 = *v2;
  sub_252B77290(v4, v5, v6, v7);
  *(unsigned char *)(a1 + v8) = v3;
  uint64_t v9 = sub_252B77268();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, v10, v11, v12);
}

uint64_t ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:attribution:resultStatementIds:visualOutputOptions:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  sub_252B774B4();
  char v7 = *v6;
  *(void *)a3 = v8;
  *(_OWORD *)(a3 + 8) = *v9;
  *(unsigned char *)(a3 + 24) = v10;
  *(_OWORD *)(a3 + 32) = *v11;
  *(unsigned char *)(a3 + 48) = v12;
  uint64_t v13 = (int *)type metadata accessor for ResponseOutput(0);
  uint64_t result = sub_252B670C8(a1, a3 + v13[7]);
  *(unsigned char *)(a3 + v13[9]) = 2;
  *(void *)(a3 + v13[10]) = a2;
  uint64_t v15 = (void *)(a3 + v13[11]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  *(unsigned char *)(a3 + v13[8]) = v7;
  return result;
}

uint64_t ResponseOutput.init(visualOutput:printedDialogOutput:spokenDialogOutput:attribution:resultStatementIds:visualOutputOptions:dialogIdentifier:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  sub_252B774B4();
  char v11 = *v10;
  *(void *)a5 = v12;
  *(_OWORD *)(a5 + 8) = *v13;
  *(unsigned char *)(a5 + 24) = v14;
  *(_OWORD *)(a5 + 32) = *v15;
  *(unsigned char *)(a5 + 48) = v16;
  unint64_t v17 = (int *)type metadata accessor for ResponseOutput(0);
  uint64_t result = sub_252B670C8(a1, a5 + v17[7]);
  *(unsigned char *)(a5 + v17[9]) = 2;
  *(void *)(a5 + v17[10]) = a2;
  char v19 = (void *)(a5 + v17[11]);
  *char v19 = a3;
  v19[1] = a4;
  *(unsigned char *)(a5 + v17[8]) = v11;
  return result;
}

BOOL static ResponseOutput.== infix(_:_:)()
{
  uint64_t v3 = sub_252B23194();
  uint64_t v4 = type metadata accessor for ResponseOutput.VisualOutput(v3);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252B5F630();
  uint64_t v6 = sub_252AC3A24(&qword_269C43508);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_252AC3A24(&qword_269C41AB0);
  uint64_t v11 = sub_252AEA368(v10);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v42 - v18;
  sub_252B1DF6C();
  if ((v20 & 1) == 0) {
    return 0;
  }
  uint64_t v46 = v9;
  uint64_t v47 = v19;
  uint64_t v43 = v2;
  char v44 = v14;
  uint64_t v45 = v4;
  uint64_t v22 = *(void *)(v1 + 8);
  uint64_t v21 = *(void *)(v1 + 16);
  int v23 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v25 = *(void *)(v0 + 8);
  uint64_t v24 = *(void *)(v0 + 16);
  int v26 = *(unsigned __int8 *)(v0 + 24);
  if (v23 == 255)
  {
    if (v26 != 255) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(v1 + 8);
    uint64_t v49 = v21;
    char v50 = v23;
    if (v26 == 255)
    {
LABEL_11:
      sub_252ACE7E4(v22, v21, v23);
      sub_252ACE7E4(v22, v21, v23);
      sub_252AD170C(v22, v21, v23);
      goto LABEL_13;
    }
    sub_252B77374();
    sub_252B77474();
    if ((v26 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v22 = *(void *)(v1 + 32);
  uint64_t v21 = *(void *)(v1 + 40);
  int v23 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v25 = *(void *)(v0 + 32);
  uint64_t v24 = *(void *)(v0 + 40);
  int v26 = *(unsigned __int8 *)(v0 + 48);
  if (v23 == 255)
  {
    if (v26 == 255) {
      goto LABEL_15;
    }
LABEL_13:
    sub_252B6702C(v25, v24, v26);
    sub_252B67130(v22, v21, v23);
    sub_252B67130(v25, v24, v26);
    return 0;
  }
  uint64_t v48 = *(void *)(v1 + 32);
  uint64_t v49 = v21;
  char v50 = v23;
  if (v26 == 255) {
    goto LABEL_11;
  }
  sub_252B77374();
  sub_252B77474();
  if ((v26 & 1) == 0) {
    return 0;
  }
LABEL_15:
  uint64_t v28 = (int *)type metadata accessor for ResponseOutput(0);
  uint64_t v29 = (uint64_t)v47;
  sub_252B67060(v1 + v28[7], (uint64_t)v47);
  sub_252B67060(v0 + v28[7], (uint64_t)v17);
  uint64_t v30 = (uint64_t)v46;
  uint64_t v31 = (uint64_t)&v46[*(int *)(v6 + 48)];
  sub_252B67060(v29, (uint64_t)v46);
  sub_252B67060((uint64_t)v17, v31);
  uint64_t v32 = v45;
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v30, 1, v45) == 1)
  {
    sub_252B5A4CC((uint64_t)v17, &qword_269C41AB0);
    sub_252B5A4CC(v29, &qword_269C41AB0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v31, 1, v32) == 1)
    {
      sub_252B5A4CC(v30, &qword_269C41AB0);
      goto LABEL_22;
    }
LABEL_20:
    sub_252B5A4CC(v30, &qword_269C43508);
    return 0;
  }
  uint64_t v33 = (uint64_t)v44;
  sub_252B67060(v30, (uint64_t)v44);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v31, 1, v32) == 1)
  {
    sub_252B5A4CC((uint64_t)v17, &qword_269C41AB0);
    sub_252B5A4CC((uint64_t)v47, &qword_269C41AB0);
    sub_252B617B4(v33, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
    goto LABEL_20;
  }
  uint64_t v34 = v43;
  sub_252B60CEC();
  char v35 = static ResponseOutput.VisualOutput.== infix(_:_:)();
  sub_252B617B4(v34, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
  sub_252B5A4CC((uint64_t)v17, &qword_269C41AB0);
  sub_252B5A4CC((uint64_t)v47, &qword_269C41AB0);
  sub_252B617B4(v33, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
  sub_252B5A4CC(v30, &qword_269C41AB0);
  if ((v35 & 1) == 0) {
    return 0;
  }
LABEL_22:
  if (*(unsigned __int8 *)(v1 + v28[8]) != *(unsigned __int8 *)(v0 + v28[8])
    || *(unsigned __int8 *)(v1 + v28[9]) != *(unsigned __int8 *)(v0 + v28[9])
    || (sub_252B1E128(*(void *)(v1 + v28[10]), *(void *)(v0 + v28[10])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v36 = v28[11];
  unint64_t v37 = (void *)(v1 + v36);
  uint64_t v38 = *(void *)(v1 + v36 + 8);
  uint64_t v39 = (void *)(v0 + v36);
  uint64_t v40 = v39[1];
  if (!v38) {
    return !v40;
  }
  if (!v40) {
    return 0;
  }
  BOOL v41 = *v37 == *v39 && v38 == v40;
  return v41 || (sub_252D1A5D8() & 1) != 0;
}

uint64_t sub_252B65BC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x754F6C6175736976 && a2 == 0xEC00000074757074;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1D000 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1D020 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    BOOL v6 = a1 == 0x7475626972747461 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x65736E6F70736572 && a2 == 0xEC00000065707954;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1D040 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D060)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          char v9 = sub_252D1A5D8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 7;
          }
          else {
            return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_252B65F1C()
{
  return 8;
}

unint64_t sub_252B65F24(char a1)
{
  unint64_t result = 0x754F6C6175736976;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7475626972747461;
      break;
    case 4:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 5:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252B66040()
{
  return sub_252B65F24(*v0);
}

uint64_t sub_252B66048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B65BC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B66070@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252B65F1C();
  *a1 = result;
  return result;
}

uint64_t sub_252B66098(uint64_t a1)
{
  unint64_t v2 = sub_252B67144();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B660D4(uint64_t a1)
{
  unint64_t v2 = sub_252B67144();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResponseOutput.encode(to:)(void *a1)
{
  sub_252AC3A24(&qword_269C43510);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252AC3A68(a1, a1[3]);
  sub_252B67144();
  sub_252D1A738();
  sub_252AC3A24(&qword_269C43520);
  sub_252B672C0(&qword_269C43528, &qword_269C43530);
  sub_252B7741C();
  if (!v1)
  {
    sub_252B67190();
    sub_252B77550();
    sub_252B77550();
    type metadata accessor for ResponseOutput(0);
    type metadata accessor for ResponseOutput.VisualOutput(0);
    sub_252B60A84(&qword_269C43530, (void (*)(uint64_t))type metadata accessor for ResponseOutput.VisualOutput);
    sub_252D1A518();
    sub_252B671DC();
    sub_252B77608();
    sub_252B67228();
    sub_252B77608();
    sub_252AC3A24(&qword_269C43550);
    sub_252B67438(&qword_269C43558, (void (*)(void))sub_252B67274);
    sub_252B7741C();
    sub_252D1A4E8();
  }
  sub_252B775A0();
  return v7(v4, v5, v6);
}

void ResponseOutput.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C41AB0);
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C43568);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B5F6A0();
  uint64_t v16 = (int *)type metadata accessor for ResponseOutput(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  sub_252AEDE70();
  uint64_t v15 = v8;
  sub_252AC3A68(v3, v3[3]);
  sub_252B67144();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_252AC3A24(&qword_269C43520);
    sub_252B672C0(&qword_269C43570, &qword_269C43578);
    sub_252D1A498();
    *(void *)uint64_t v15 = v17;
    sub_252B67354();
    sub_252B77528();
    *(_OWORD *)(v15 + 8) = v17;
    *(unsigned char *)(v15 + 24) = v18;
    sub_252B77528();
    *(_OWORD *)(v15 + 32) = v17;
    *(unsigned char *)(v15 + 48) = v18;
    type metadata accessor for ResponseOutput.VisualOutput(0);
    LOBYTE(v17) = 3;
    sub_252B60A84(&qword_269C43578, (void (*)(uint64_t))type metadata accessor for ResponseOutput.VisualOutput);
    sub_252D1A438();
    sub_252B670C8(v1, v15 + v16[7]);
    sub_252B673A0();
    sub_252B775E4();
    *(unsigned char *)(v15 + v16[8]) = 3;
    sub_252B673EC();
    sub_252B775E4();
    *(unsigned char *)(v15 + v16[9]) = 3;
    sub_252AC3A24(&qword_269C43550);
    sub_252B67438(&qword_269C43598, (void (*)(void))sub_252B674A8);
    sub_252D1A498();
    *(void *)(v15 + v16[10]) = v17;
    uint64_t v9 = sub_252D1A408();
    uint64_t v11 = v10;
    sub_252B5F658();
    v13(v12);
    char v14 = (uint64_t *)(v15 + v16[11]);
    *char v14 = v9;
    v14[1] = v11;
    sub_252B77690();
    sub_252B6175C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_252B617B4(v15, (void (*)(void))type metadata accessor for ResponseOutput);
  }
  sub_252AF4368();
}

void sub_252B669A0()
{
}

uint64_t sub_252B669B8(void *a1)
{
  return ResponseOutput.encode(to:)(a1);
}

uint64_t static ResponseOutput.VisualOutput.build(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_252AC3A24(&qword_269C435A8);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252B23278();
  uint64_t v5 = type metadata accessor for RGPluginModel(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  sub_252AF45F0();
  sub_252D19378();
  swift_allocObject();
  sub_252D19368();
  sub_252B60A84(&qword_269C43308, (void (*)(uint64_t))type metadata accessor for RGPluginModel);
  sub_252D19358();
  swift_release();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 0, 1, v5);
  sub_252B60CEC();
  sub_252B60CEC();
  uint64_t v7 = type metadata accessor for ResponseOutput.VisualOutput(0);
  sub_252AEA3DC();
  swift_storeEnumTagMultiPayload();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, 0, 1, v7);
}

unint64_t sub_252B66BB8()
{
  unint64_t result = qword_269C433C8;
  if (!qword_269C433C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C433C8);
  }
  return result;
}

unint64_t sub_252B66C04()
{
  unint64_t result = qword_269C433D8;
  if (!qword_269C433D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C433D8);
  }
  return result;
}

unint64_t sub_252B66C50()
{
  unint64_t result = qword_269C433E0;
  if (!qword_269C433E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C433E0);
  }
  return result;
}

unint64_t sub_252B66C9C()
{
  unint64_t result = qword_269C433F0;
  if (!qword_269C433F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C433F0);
  }
  return result;
}

unint64_t sub_252B66CE8()
{
  unint64_t result = qword_269C43438;
  if (!qword_269C43438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43438);
  }
  return result;
}

unint64_t sub_252B66D34()
{
  unint64_t result = qword_269C43440;
  if (!qword_269C43440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43440);
  }
  return result;
}

unint64_t sub_252B66D80()
{
  unint64_t result = qword_269C43448;
  if (!qword_269C43448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43448);
  }
  return result;
}

unint64_t sub_252B66DCC()
{
  unint64_t result = qword_269C43450;
  if (!qword_269C43450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43450);
  }
  return result;
}

unint64_t sub_252B66E18()
{
  unint64_t result = qword_269C43458;
  if (!qword_269C43458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43458);
  }
  return result;
}

unint64_t sub_252B66E64()
{
  unint64_t result = qword_269C43460;
  if (!qword_269C43460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43460);
  }
  return result;
}

unint64_t sub_252B66EB0()
{
  unint64_t result = qword_269C43468;
  if (!qword_269C43468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43468);
  }
  return result;
}

unint64_t sub_252B66EFC()
{
  unint64_t result = qword_269C434C8;
  if (!qword_269C434C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C434C8);
  }
  return result;
}

unint64_t sub_252B66F48()
{
  unint64_t result = qword_269C434D0;
  if (!qword_269C434D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C434D0);
  }
  return result;
}

unint64_t sub_252B66F94()
{
  unint64_t result = qword_269C434D8;
  if (!qword_269C434D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C434D8);
  }
  return result;
}

unint64_t sub_252B66FE0()
{
  unint64_t result = qword_269C434E0;
  if (!qword_269C434E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C434E0);
  }
  return result;
}

uint64_t sub_252B6702C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_252ACE7E4(a1, a2, a3);
  }
  return a1;
}

uint64_t type metadata accessor for ResponseOutput(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2345E8);
}

uint64_t sub_252B67060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C41AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_252B670C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C41AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_252B67130(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_252AD170C(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_252B67144()
{
  unint64_t result = qword_269C43518;
  if (!qword_269C43518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43518);
  }
  return result;
}

unint64_t sub_252B67190()
{
  unint64_t result = qword_269C43538;
  if (!qword_269C43538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43538);
  }
  return result;
}

unint64_t sub_252B671DC()
{
  unint64_t result = qword_269C43540;
  if (!qword_269C43540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43540);
  }
  return result;
}

unint64_t sub_252B67228()
{
  unint64_t result = qword_269C43548;
  if (!qword_269C43548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43548);
  }
  return result;
}

unint64_t sub_252B67274()
{
  unint64_t result = qword_269C43560;
  if (!qword_269C43560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43560);
  }
  return result;
}

uint64_t sub_252B672C0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252AEA288(&qword_269C43520);
    sub_252B60A84(a2, (void (*)(uint64_t))type metadata accessor for ResponseOutput.VisualOutput);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_252B67354()
{
  unint64_t result = qword_269C43580;
  if (!qword_269C43580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43580);
  }
  return result;
}

unint64_t sub_252B673A0()
{
  unint64_t result = qword_269C43588;
  if (!qword_269C43588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43588);
  }
  return result;
}

unint64_t sub_252B673EC()
{
  unint64_t result = qword_269C43590;
  if (!qword_269C43590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43590);
  }
  return result;
}

uint64_t sub_252B67438(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252AEA288(&qword_269C43550);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_252B674A8()
{
  unint64_t result = qword_269C435A0;
  if (!qword_269C435A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435A0);
  }
  return result;
}

unint64_t sub_252B674F8()
{
  unint64_t result = qword_269C435B0;
  if (!qword_269C435B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435B0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseOutput(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    int v8 = *((unsigned __int8 *)a2 + 24);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    }
    else
    {
      uint64_t v9 = a2[1];
      uint64_t v10 = a2[2];
      sub_252ACE7E4(v9, v10, v8);
      *(void *)(a1 + 8) = v9;
      *(void *)(a1 + 16) = v10;
      *(unsigned char *)(a1 + 24) = v8;
    }
    int v11 = *((unsigned __int8 *)a2 + 48);
    if (v11 == 255)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    }
    else
    {
      uint64_t v12 = a2[4];
      uint64_t v13 = a2[5];
      sub_252ACE7E4(v12, v13, *((unsigned char *)a2 + 48));
      *(void *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      *(unsigned char *)(a1 + 48) = v11;
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for ResponseOutput.VisualOutput(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_252AC3A24(&qword_269C41AB0);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v37 = sub_252D19588();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v37))
              {
                uint64_t v38 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v15, v16, *(void *)(*(void *)(v38 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v37 - 8) + 16))(v15, v16, v37);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v37);
              }
              uint64_t v65 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
              __dstc((char *)v15 + v65[5], (char *)v16 + v65[5], v37);
              uint64_t v66 = v65[6];
              uint64_t v67 = (char *)v15 + v66;
              uint64_t v68 = (char *)v16 + v66;
              *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
              uint64_t v126 = *((void *)v68 + 2);
              *((void *)v67 + 1) = *((void *)v68 + 1);
              *((void *)v67 + 2) = v126;
              uint64_t v69 = v65[7];
              v131 = (char *)v15 + v69;
              v133 = v65;
              v128 = (char *)v16 + v69;
              uint64_t v70 = sub_252D19408();
              uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
              swift_bridgeObjectRetain();
              v71(v131, v128, v70);
              v71((char *)v15 + v133[8], (char *)v16 + v133[8], v70);
              __dstc((char *)v15 + v133[9], (char *)v16 + v133[9], v37);
              break;
            case 2u:
              uint64_t v39 = sub_252D19588();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v39))
              {
                uint64_t v40 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v15, v16, *(void *)(*(void *)(v40 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v39 - 8) + 16))(v15, v16, v39);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v39);
              }
              uint64_t v72 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
              uint64_t v129 = v39;
              v127((char *)v15 + v72[5], (char *)v16 + v72[5], v39);
              uint64_t v73 = v72[6];
              uint64_t v74 = (char *)v15 + v73;
              uint64_t v75 = (char *)v16 + v73;
              *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
              uint64_t v76 = *((void *)v75 + 2);
              *((void *)v74 + 1) = *((void *)v75 + 1);
              *((void *)v74 + 2) = v76;
              uint64_t v77 = v72[7];
              __dstd = (char *)v15 + v77;
              v144 = v72;
              v134 = (char *)v16 + v77;
              uint64_t v78 = sub_252D19408();
              v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
              swift_bridgeObjectRetain();
              v136(__dstd, v134, v78);
              uint64_t v135 = v78;
              v136((char *)v15 + v144[8], (char *)v16 + v144[8], v78);
              uint64_t v79 = v72[9];
              v80 = (char *)v15 + v79;
              long long v81 = (char *)v16 + v79;
              uint64_t v82 = type metadata accessor for RGDisplayRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v81, 1, v82))
              {
                uint64_t v83 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
              }
              else
              {
                v136(v80, v81, v135);
                v122 = (int *)v82;
                uint64_t v84 = *(int *)(v82 + 20);
                __dst = v80;
                v85 = &v80[v84];
                __src = &v81[v84];
                v124 = v81;
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v81[v84], 1, v135))
                {
                  uint64_t v86 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v85, __src, *(void *)(*(void *)(v86 - 8) + 64));
                }
                else
                {
                  v136(v85, __src, v135);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v135);
                }
                uint64_t v87 = v122[6];
                __srca = &v80[v87];
                v88 = &v81[v87];
                uint64_t v89 = sub_252D19C68();
                v119 = v88;
                uint64_t v90 = (uint64_t)v88;
                uint64_t v91 = v89;
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v90, 1, v89))
                {
                  uint64_t v92 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(__srca, v119, *(void *)(*(void *)(v92 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(__srca, v119, v91);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__srca, 0, 1, v91);
                }
                uint64_t v93 = v122[7];
                v94 = &v80[v93];
                v95 = &v124[v93];
                uint64_t v96 = *((void *)v95 + 1);
                *(void *)v94 = *(void *)v95;
                *((void *)v94 + 1) = v96;
                uint64_t v97 = v122[8];
                v98 = &v80[v97];
                v99 = &v124[v97];
                unint64_t v100 = *(void *)&v124[v97 + 8];
                swift_bridgeObjectRetain();
                if (v100 >> 60 == 15)
                {
                  *(_OWORD *)v98 = *(_OWORD *)v99;
                }
                else
                {
                  uint64_t v101 = *(void *)v99;
                  sub_252AC5A54(v101, v100);
                  *(void *)v98 = v101;
                  *((void *)v98 + 1) = v100;
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v122);
              }
              uint64_t v102 = v144[10];
              __dsta = (char *)v15 + v102;
              v103 = (char *)v16 + v102;
              uint64_t v104 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v103, 1, v104))
              {
                uint64_t v105 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(__dsta, v103, *(void *)(*(void *)(v105 - 8) + 64));
              }
              else
              {
                v136(__dsta, v103, v135);
                uint64_t v106 = *(int *)(v104 + 20);
                v123 = &__dsta[v106];
                uint64_t v125 = v104;
                v107 = &v103[v106];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v103[v106], 1, v135))
                {
                  uint64_t v108 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v123, v107, *(void *)(*(void *)(v108 - 8) + 64));
                }
                else
                {
                  v136(v123, v107, v135);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v123, 0, 1, v135);
                }
                uint64_t v109 = *(int *)(v125 + 24);
                v137 = &__dsta[v109];
                v110 = &v103[v109];
                uint64_t v111 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v110, 1, v111))
                {
                  uint64_t v112 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v137, v110, *(void *)(*(void *)(v112 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v137, v110, v111);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v137, 0, 1, v111);
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v125);
              }
              v127((char *)v15 + v144[11], (char *)v16 + v144[11], v129);
              break;
            case 3u:
              __dstb = (void *)sub_252D19588();
              BOOL v41 = *(void (**)(uint64_t *, uint64_t *, void *))(*(__dstb - 1) + 16);
              v41(v15, v16, __dstb);
              uint64_t v42 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              v41((uint64_t *)((char *)v15 + v42[5]), (uint64_t *)((char *)v16 + v42[5]), __dstb);
              uint64_t v43 = v42[6];
              char v44 = (char *)v15 + v43;
              uint64_t v45 = (char *)v16 + v43;
              *(_DWORD *)char v44 = *(_DWORD *)v45;
              uint64_t v46 = *((void *)v45 + 2);
              *((void *)v44 + 1) = *((void *)v45 + 1);
              *((void *)v44 + 2) = v46;
              *(uint64_t *)((char *)v15 + v42[7]) = *(uint64_t *)((char *)v16 + v42[7]);
              *(uint64_t *)((char *)v15 + v42[8]) = *(uint64_t *)((char *)v16 + v42[8]);
              uint64_t v47 = v42[9];
              uint64_t v48 = (char *)v15 + v47;
              uint64_t v49 = (char *)v16 + v47;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v41((uint64_t *)v48, (uint64_t *)v49, __dstb);
              break;
            case 4u:
              uint64_t v50 = *v16;
              unint64_t v51 = v16[1];
              sub_252AC5A54(*v16, v51);
              *uint64_t v15 = v50;
              v15[1] = v51;
              break;
            case 5u:
              uint64_t v52 = *v16;
              unint64_t v53 = v16[1];
              sub_252AC5A54(*v16, v53);
              *uint64_t v15 = v52;
              v15[1] = v53;
              uint64_t v54 = v16[3];
              v15[2] = v16[2];
              v15[3] = v54;
              uint64_t v55 = v16[5];
              v15[4] = v16[4];
              v15[5] = v55;
              swift_bridgeObjectRetain();
              goto LABEL_28;
            case 6u:
              uint64_t v56 = *v16;
              unint64_t v57 = v16[1];
              sub_252AC5A54(*v16, v57);
              *uint64_t v15 = v56;
              v15[1] = v57;
              uint64_t v58 = v16[3];
              v15[2] = v16[2];
              v15[3] = v58;
              v59 = v16 + 4;
              unint64_t v60 = v16[5];
              swift_bridgeObjectRetain();
              if (v60 >> 60 == 15)
              {
                *((_OWORD *)v15 + 2) = *v59;
              }
              else
              {
                uint64_t v63 = *(void *)v59;
                sub_252AC5A54(v63, v60);
                v15[4] = v63;
                v15[5] = v60;
              }
              uint64_t v64 = v16[7];
              v15[6] = v16[6];
              v15[7] = v64;
              swift_bridgeObjectRetain();
              break;
            case 7u:
              uint64_t v61 = sub_252D19C58();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v61 - 8) + 16))(v15, v16, v61);
              break;
            case 8u:
              uint64_t v62 = v16[1];
              *uint64_t v15 = *v16;
              v15[1] = v62;
LABEL_28:
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v143 = sub_252D19588();
              char v20 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v143 - 8) + 16);
              v20(v15, v16, v143);
              uint64_t v21 = (int *)type metadata accessor for RGDisambiguationModel(0);
              v20((uint64_t *)((char *)v15 + v21[5]), (uint64_t *)((char *)v16 + v21[5]), v143);
              uint64_t v22 = v21[6];
              int v23 = (char *)v15 + v22;
              uint64_t v24 = (char *)v16 + v22;
              *(_DWORD *)int v23 = *(_DWORD *)v24;
              uint64_t v25 = *((void *)v24 + 2);
              *((void *)v23 + 1) = *((void *)v24 + 1);
              *((void *)v23 + 2) = v25;
              *(uint64_t *)((char *)v15 + v21[7]) = *(uint64_t *)((char *)v16 + v21[7]);
              *(uint64_t *)((char *)v15 + v21[8]) = *(uint64_t *)((char *)v16 + v21[8]);
              uint64_t v26 = v21[9];
              v130 = (char *)v16 + v26;
              v132 = (char *)v15 + v26;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v20((uint64_t *)v132, (uint64_t *)v130, v143);
              uint64_t v27 = v21[10];
              uint64_t v28 = (uint64_t *)((char *)v15 + v27);
              uint64_t v29 = (uint64_t *)((char *)v16 + v27);
              uint64_t v30 = v29[1];
              void *v28 = *v29;
              v28[1] = v30;
              uint64_t v31 = v21[11];
              uint64_t v32 = (char *)v15 + v31;
              uint64_t v33 = (char *)v16 + v31;
              swift_bridgeObjectRetain();
              v20((uint64_t *)v32, (uint64_t *)v33, v143);
              break;
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v34 = *v16;
          unint64_t v35 = v16[1];
          sub_252AC5A54(*v16, v35);
          *uint64_t v15 = v34;
          v15[1] = v35;
          uint64_t v36 = v16[3];
          v15[2] = v16[2];
          v15[3] = v36;
          goto LABEL_16;
        default:
          uint64_t v19 = v16[1];
          *uint64_t v15 = *v16;
          v15[1] = v19;
LABEL_16:
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
    }
    uint64_t v113 = a3[9];
    *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(unsigned char *)(a1 + v113) = *((unsigned char *)a2 + v113);
    uint64_t v114 = a3[11];
    *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v115 = (void *)(a1 + v114);
    v116 = (uint64_t *)((char *)a2 + v114);
    uint64_t v117 = v116[1];
    void *v115 = *v116;
    v115[1] = v117;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ResponseOutput(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 != 255) {
    sub_252AD170C(*(void *)(a1 + 8), *(void *)(a1 + 16), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 48);
  if (v5 != 255) {
    sub_252AD170C(*(void *)(a1 + 32), *(void *)(a1 + 40), v5);
  }
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  uint64_t v7 = type metadata accessor for ResponseOutput.VisualOutput(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v6, 1, v7))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        goto LABEL_10;
      case 2u:
        type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v8 = sub_252D19588();
            uint64_t v9 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v8 - 8) + 8);
            v9(v6, v8);
            uint64_t v10 = (int *)type metadata accessor for RGDisambiguationModel(0);
            v9((uint64_t *)((char *)v6 + v10[5]), v8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v9((uint64_t *)((char *)v6 + v10[9]), v8);
            swift_bridgeObjectRelease();
            uint64_t v11 = v10[11];
            goto LABEL_33;
          case 1u:
            uint64_t v13 = sub_252D19588();
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v6, 1, v13)) {
              (*(void (**)(uint64_t *, uint64_t))(*(void *)(v13 - 8) + 8))(v6, v13);
            }
            uint64_t v14 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            uint64_t v43 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
            v43((char *)v6 + v14[5], v13);
            swift_bridgeObjectRelease();
            uint64_t v15 = (char *)v6 + v14[7];
            uint64_t v16 = sub_252D19408();
            uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8);
            v17(v15, v16);
            v17((char *)v6 + v14[8], v16);
            v43((char *)v6 + v14[9], v13);
            goto LABEL_11;
          case 2u:
            uint64_t v18 = sub_252D19588();
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v6, 1, v18)) {
              (*(void (**)(uint64_t *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
            }
            uint64_t v19 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            char v20 = *(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8);
            v20((char *)v6 + v19[5], v18);
            swift_bridgeObjectRelease();
            uint64_t v21 = (char *)v6 + v19[7];
            uint64_t v22 = sub_252D19408();
            int v23 = *(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8);
            v23(v21, v22);
            uint64_t v42 = (void (*)(uint64_t, uint64_t))v23;
            v23((char *)v6 + v19[8], v22);
            uint64_t v24 = (uint64_t)v6 + v19[9];
            uint64_t v25 = (int *)type metadata accessor for RGDisplayRepresentation(0);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v24, 1, (uint64_t)v25))
            {
              uint64_t v39 = v18;
              uint64_t v40 = v20;
              v42(v24, v22);
              uint64_t v26 = v24 + v25[5];
              if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v26, 1, v22)) {
                v42(v26, v22);
              }
              uint64_t v27 = v24 + v25[6];
              uint64_t v28 = sub_252D19C68();
              if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v27, 1, v28)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
              }
              swift_bridgeObjectRelease();
              uint64_t v29 = (uint64_t *)(v24 + v25[8]);
              unint64_t v30 = v29[1];
              uint64_t v18 = v39;
              char v20 = v40;
              if (v30 >> 60 != 15) {
                sub_252AC5C14(*v29, v30);
              }
            }
            uint64_t v31 = (uint64_t)v6 + v19[10];
            uint64_t v32 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v31, 1, v32))
            {
              BOOL v41 = v20;
              v42(v31, v22);
              uint64_t v33 = v31 + *(int *)(v32 + 20);
              if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v33, 1, v22)) {
                v42(v33, v22);
              }
              uint64_t v34 = v31 + *(int *)(v32 + 24);
              uint64_t v35 = sub_252D19C68();
              char v20 = v41;
              if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v34, 1, v35)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
              }
            }
            v20((char *)v6 + v19[11], v18);
            goto LABEL_11;
          case 3u:
            uint64_t v8 = sub_252D19588();
            uint64_t v9 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v8 - 8) + 8);
            v9(v6, v8);
            uint64_t v36 = type metadata accessor for RGToolDisambiguationModel(0);
            v9((uint64_t *)((char *)v6 + *(int *)(v36 + 20)), v8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = *(int *)(v36 + 36);
LABEL_33:
            v9((uint64_t *)((char *)v6 + v11), v8);
            break;
          case 4u:
            sub_252AC5C14(*v6, v6[1]);
            break;
          case 5u:
            sub_252AC5C14(*v6, v6[1]);
            swift_bridgeObjectRelease();
            goto LABEL_10;
          case 6u:
            sub_252AC5C14(*v6, v6[1]);
            swift_bridgeObjectRelease();
            unint64_t v37 = v6[5];
            if (v37 >> 60 != 15) {
              sub_252AC5C14(v6[4], v37);
            }
            goto LABEL_10;
          case 7u:
            uint64_t v38 = sub_252D19C58();
            (*(void (**)(uint64_t *, uint64_t))(*(void *)(v38 - 8) + 8))(v6, v38);
            break;
          case 8u:
            goto LABEL_10;
          default:
            goto LABEL_11;
        }
        break;
      case 3u:
        sub_252AC5C14(*v6, v6[1]);
LABEL_10:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *uint64_t v6 = *(_OWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    sub_252ACE7E4(v8, v9, v7);
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v7;
  }
  int v10 = *(unsigned __int8 *)(a2 + 48);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    sub_252ACE7E4(v11, v12, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 48) = v10;
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (uint64_t *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ResponseOutput.VisualOutput(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v36 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v36))
            {
              uint64_t v37 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v14, v15, *(void *)(*(void *)(v37 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v36 - 8) + 16))(v14, v15, v36);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v36);
            }
            uint64_t v64 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            v139 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
            v139((char *)v14 + v64[5], (char *)v15 + v64[5], v36);
            uint64_t v65 = v64[6];
            uint64_t v66 = (char *)v14 + v65;
            uint64_t v67 = (char *)v15 + v65;
            *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
            uint64_t v127 = *((void *)v67 + 2);
            *((void *)v66 + 1) = *((void *)v67 + 1);
            *((void *)v66 + 2) = v127;
            uint64_t v68 = v64[7];
            v130 = (char *)v14 + v68;
            v133 = v64;
            v128 = (char *)v15 + v68;
            uint64_t v69 = sub_252D19408();
            uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
            swift_bridgeObjectRetain();
            v70(v130, v128, v69);
            v70((char *)v14 + v133[8], (char *)v15 + v133[8], v69);
            v139((char *)v14 + v133[9], (char *)v15 + v133[9], v36);
            break;
          case 2u:
            uint64_t v38 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v15, 1, v38))
            {
              uint64_t v39 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v14, v15, *(void *)(*(void *)(v39 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v38 - 8) + 16))(v14, v15, v38);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v38);
            }
            uint64_t v71 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            uint64_t v126 = v38;
            v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
            v131((char *)v14 + v71[5], (char *)v15 + v71[5], v38);
            uint64_t v72 = v71[6];
            uint64_t v73 = (char *)v14 + v72;
            uint64_t v74 = (char *)v15 + v72;
            *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
            uint64_t v75 = *((void *)v74 + 2);
            *((void *)v73 + 1) = *((void *)v74 + 1);
            *((void *)v73 + 2) = v75;
            uint64_t v76 = v71[7];
            v140 = (char *)v14 + v76;
            v144 = v71;
            v134 = (char *)v15 + v76;
            uint64_t v77 = sub_252D19408();
            v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
            swift_bridgeObjectRetain();
            v136(v140, v134, v77);
            uint64_t v135 = v77;
            v136((char *)v14 + v144[8], (char *)v15 + v144[8], v77);
            uint64_t v78 = v71[9];
            uint64_t v79 = (char *)v14 + v78;
            v80 = (char *)v15 + v78;
            uint64_t v81 = type metadata accessor for RGDisplayRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v80, 1, v81))
            {
              uint64_t v82 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
            }
            else
            {
              v136(v79, v80, v135);
              uint64_t v83 = *(int *)(v81 + 20);
              v141 = v79;
              __dst = &v79[v83];
              v122 = (int *)v81;
              uint64_t v84 = &v80[v83];
              v124 = v80;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v80[v83], 1, v135))
              {
                uint64_t v85 = sub_252AC3A24(&qword_269C41A90);
                memcpy(__dst, v84, *(void *)(*(void *)(v85 - 8) + 64));
              }
              else
              {
                v136(__dst, v84, v135);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v135);
              }
              uint64_t v86 = v122[6];
              __dsta = &v79[v86];
              uint64_t v87 = &v80[v86];
              uint64_t v88 = sub_252D19C68();
              v119 = v87;
              uint64_t v89 = (uint64_t)v87;
              uint64_t v90 = v88;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v89, 1, v88))
              {
                uint64_t v91 = sub_252AC3A24(&qword_269C41A98);
                memcpy(__dsta, v119, *(void *)(*(void *)(v91 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(__dsta, v119, v90);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v90);
              }
              uint64_t v92 = v122[7];
              uint64_t v93 = &v79[v92];
              v94 = &v124[v92];
              uint64_t v95 = *((void *)v94 + 1);
              *(void *)uint64_t v93 = *(void *)v94;
              *((void *)v93 + 1) = v95;
              uint64_t v96 = v122[8];
              uint64_t v97 = &v79[v96];
              v98 = &v124[v96];
              unint64_t v99 = *(void *)&v124[v96 + 8];
              swift_bridgeObjectRetain();
              if (v99 >> 60 == 15)
              {
                *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
              }
              else
              {
                uint64_t v100 = *(void *)v98;
                sub_252AC5A54(v100, v99);
                *(void *)uint64_t v97 = v100;
                *((void *)v97 + 1) = v99;
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v141, 0, 1, (uint64_t)v122);
            }
            uint64_t v101 = v144[10];
            v142 = (char *)v14 + v101;
            uint64_t v102 = (char *)v15 + v101;
            uint64_t v103 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v102, 1, v103))
            {
              uint64_t v104 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v142, v102, *(void *)(*(void *)(v104 - 8) + 64));
              uint64_t v105 = v126;
            }
            else
            {
              v136(v142, v102, v135);
              uint64_t v106 = *(int *)(v103 + 20);
              v123 = &v142[v106];
              uint64_t v125 = v103;
              v107 = &v102[v106];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v102[v106], 1, v135))
              {
                uint64_t v108 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v123, v107, *(void *)(*(void *)(v108 - 8) + 64));
              }
              else
              {
                v136(v123, v107, v135);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v123, 0, 1, v135);
              }
              uint64_t v109 = *(int *)(v125 + 24);
              v137 = &v142[v109];
              v110 = &v102[v109];
              uint64_t v111 = sub_252D19C68();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v110, 1, v111))
              {
                uint64_t v112 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v137, v110, *(void *)(*(void *)(v112 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v137, v110, v111);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v137, 0, 1, v111);
              }
              uint64_t v105 = v126;
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v142, 0, 1, v125);
            }
            v131((char *)v14 + v144[11], (char *)v15 + v144[11], v105);
            break;
          case 3u:
            v138 = (void *)sub_252D19588();
            uint64_t v40 = *(void (**)(uint64_t *, uint64_t *, void *))(*(v138 - 1) + 16);
            v40(v14, v15, v138);
            BOOL v41 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            v40((uint64_t *)((char *)v14 + v41[5]), (uint64_t *)((char *)v15 + v41[5]), v138);
            uint64_t v42 = v41[6];
            uint64_t v43 = (char *)v14 + v42;
            char v44 = (char *)v15 + v42;
            *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
            uint64_t v45 = *((void *)v44 + 2);
            *((void *)v43 + 1) = *((void *)v44 + 1);
            *((void *)v43 + 2) = v45;
            *(uint64_t *)((char *)v14 + v41[7]) = *(uint64_t *)((char *)v15 + v41[7]);
            *(uint64_t *)((char *)v14 + v41[8]) = *(uint64_t *)((char *)v15 + v41[8]);
            uint64_t v46 = v41[9];
            uint64_t v47 = (char *)v14 + v46;
            uint64_t v48 = (char *)v15 + v46;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v40((uint64_t *)v47, (uint64_t *)v48, v138);
            break;
          case 4u:
            uint64_t v49 = *v15;
            unint64_t v50 = v15[1];
            sub_252AC5A54(*v15, v50);
            *uint64_t v14 = v49;
            v14[1] = v50;
            break;
          case 5u:
            uint64_t v51 = *v15;
            unint64_t v52 = v15[1];
            sub_252AC5A54(*v15, v52);
            *uint64_t v14 = v51;
            v14[1] = v52;
            uint64_t v53 = v15[3];
            v14[2] = v15[2];
            v14[3] = v53;
            uint64_t v54 = v15[5];
            v14[4] = v15[4];
            v14[5] = v54;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 6u:
            uint64_t v55 = *v15;
            unint64_t v56 = v15[1];
            sub_252AC5A54(*v15, v56);
            *uint64_t v14 = v55;
            v14[1] = v56;
            uint64_t v57 = v15[3];
            v14[2] = v15[2];
            v14[3] = v57;
            uint64_t v58 = v15 + 4;
            unint64_t v59 = v15[5];
            swift_bridgeObjectRetain();
            if (v59 >> 60 == 15)
            {
              *((_OWORD *)v14 + 2) = *v58;
            }
            else
            {
              uint64_t v62 = *(void *)v58;
              sub_252AC5A54(v62, v59);
              v14[4] = v62;
              v14[5] = v59;
            }
            uint64_t v63 = v15[7];
            v14[6] = v15[6];
            v14[7] = v63;
            swift_bridgeObjectRetain();
            break;
          case 7u:
            uint64_t v60 = sub_252D19C58();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v60 - 8) + 16))(v14, v15, v60);
            break;
          case 8u:
            uint64_t v61 = v15[1];
            *uint64_t v14 = *v15;
            v14[1] = v61;
LABEL_26:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v143 = sub_252D19588();
            uint64_t v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v143 - 8) + 16);
            v19(v14, v15, v143);
            char v20 = (int *)type metadata accessor for RGDisambiguationModel(0);
            v19((uint64_t *)((char *)v14 + v20[5]), (uint64_t *)((char *)v15 + v20[5]), v143);
            uint64_t v21 = v20[6];
            uint64_t v22 = (char *)v14 + v21;
            int v23 = (char *)v15 + v21;
            *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
            uint64_t v24 = *((void *)v23 + 2);
            *((void *)v22 + 1) = *((void *)v23 + 1);
            *((void *)v22 + 2) = v24;
            *(uint64_t *)((char *)v14 + v20[7]) = *(uint64_t *)((char *)v15 + v20[7]);
            *(uint64_t *)((char *)v14 + v20[8]) = *(uint64_t *)((char *)v15 + v20[8]);
            uint64_t v25 = v20[9];
            uint64_t v129 = (char *)v15 + v25;
            v132 = (char *)v14 + v25;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v19((uint64_t *)v132, (uint64_t *)v129, v143);
            uint64_t v26 = v20[10];
            uint64_t v27 = (uint64_t *)((char *)v14 + v26);
            uint64_t v28 = (uint64_t *)((char *)v15 + v26);
            uint64_t v29 = v28[1];
            *uint64_t v27 = *v28;
            v27[1] = v29;
            uint64_t v30 = v20[11];
            uint64_t v31 = (char *)v14 + v30;
            uint64_t v32 = (char *)v15 + v30;
            swift_bridgeObjectRetain();
            v19((uint64_t *)v31, (uint64_t *)v32, v143);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v33 = *v15;
        unint64_t v34 = v15[1];
        sub_252AC5A54(*v15, v34);
        *uint64_t v14 = v33;
        v14[1] = v34;
        uint64_t v35 = v15[3];
        v14[2] = v15[2];
        v14[3] = v35;
        goto LABEL_14;
      default:
        uint64_t v18 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v18;
LABEL_14:
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v113 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v113) = *(unsigned char *)(a2 + v113);
  uint64_t v114 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  v115 = (void *)(a1 + v114);
  v116 = (void *)(a2 + v114);
  uint64_t v117 = v116[1];
  void *v115 = *v116;
  v115[1] = v117;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (long long *)(a1 + 8);
  int v7 = (long long *)(a2 + 8);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v8 == 255)
    {
      long long v17 = *v7;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *uint64_t v6 = v17;
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 16);
      sub_252ACE7E4(v14, v15, *(unsigned char *)(a2 + 24));
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(unsigned char *)(a1 + 24) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_252B6B294(a1 + 8);
    char v16 = *(unsigned char *)(a2 + 24);
    *uint64_t v6 = *v7;
    *(unsigned char *)(a1 + 24) = v16;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    sub_252ACE7E4(v9, v10, *(unsigned char *)(a2 + 24));
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    unsigned __int8 v13 = *(unsigned char *)(a1 + 24);
    *(unsigned char *)(a1 + 24) = v8;
    sub_252AD170C(v11, v12, v13);
  }
  uint64_t v18 = (long long *)(a1 + 32);
  uint64_t v19 = (long long *)(a2 + 32);
  int v20 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v20 == 255)
    {
      long long v29 = *v19;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *uint64_t v18 = v29;
    }
    else
    {
      uint64_t v26 = *(void *)(a2 + 32);
      uint64_t v27 = *(void *)(a2 + 40);
      sub_252ACE7E4(v26, v27, *(unsigned char *)(a2 + 48));
      *(void *)(a1 + 32) = v26;
      *(void *)(a1 + 40) = v27;
      *(unsigned char *)(a1 + 48) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_252B6B294(a1 + 32);
    char v28 = *(unsigned char *)(a2 + 48);
    *uint64_t v18 = *v19;
    *(unsigned char *)(a1 + 48) = v28;
  }
  else
  {
    uint64_t v21 = *(void *)(a2 + 32);
    uint64_t v22 = *(void *)(a2 + 40);
    sub_252ACE7E4(v21, v22, *(unsigned char *)(a2 + 48));
    uint64_t v23 = *(void *)(a1 + 32);
    uint64_t v24 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v21;
    *(void *)(a1 + 40) = v22;
    unsigned __int8 v25 = *(unsigned char *)(a1 + 48);
    *(unsigned char *)(a1 + 48) = v20;
    sub_252AD170C(v23, v24, v25);
  }
  uint64_t v30 = a3[7];
  uint64_t v31 = (uint64_t *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = type metadata accessor for ResponseOutput.VisualOutput(0);
  int v34 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v31, 1, v33);
  int v35 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          type metadata accessor for RGPluginModel(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v65 = sub_252D19588();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v65))
              {
                uint64_t v66 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v31, v32, *(void *)(*(void *)(v66 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v65 - 8) + 16))(v31, v32, v65);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v65);
              }
              v107 = (int *)type metadata accessor for RGActionConfirmationModel(0);
              v236 = (void *)v65;
              __dste = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
              __dste((char *)v31 + v107[5], (char *)v32 + v107[5], v65);
              uint64_t v108 = v107[6];
              uint64_t v109 = (char *)v31 + v108;
              v110 = (char *)v32 + v108;
              *(_DWORD *)uint64_t v109 = *(_DWORD *)v110;
              *((void *)v109 + 1) = *((void *)v110 + 1);
              *((void *)v109 + 2) = *((void *)v110 + 2);
              uint64_t v111 = v107[7];
              v228 = (char *)v31 + v111;
              v221 = (char *)v32 + v111;
              uint64_t v112 = sub_252D19408();
              uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
              swift_bridgeObjectRetain();
              v113(v228, v221, v112);
              v113((char *)v31 + v107[8], (char *)v32 + v107[8], v112);
              __dste((char *)v31 + v107[9], (char *)v32 + v107[9], (uint64_t)v236);
              break;
            case 2u:
              uint64_t v67 = sub_252D19588();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v67))
              {
                uint64_t v68 = sub_252AC3A24(&qword_26B2320E8);
                memcpy(v31, v32, *(void *)(*(void *)(v68 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v67 - 8) + 16))(v31, v32, v67);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v67);
              }
              uint64_t v114 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
              v220 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
              v222 = (void *)v67;
              v220((char *)v31 + v114[5], (char *)v32 + v114[5], v67);
              uint64_t v115 = v114[6];
              v116 = (char *)v31 + v115;
              uint64_t v117 = (char *)v32 + v115;
              *(_DWORD *)v116 = *(_DWORD *)v117;
              *((void *)v116 + 1) = *((void *)v117 + 1);
              *((void *)v116 + 2) = *((void *)v117 + 2);
              uint64_t v118 = v114[7];
              __dstf = (char *)v31 + v118;
              __src = v114;
              v237 = (char *)v32 + v118;
              uint64_t v119 = sub_252D19408();
              v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
              swift_bridgeObjectRetain();
              v232(__dstf, v237, v119);
              v238 = (void *)v119;
              v232((char *)v31 + __src[8], (char *)v32 + __src[8], v119);
              uint64_t v120 = v114[9];
              __dst = (char *)v31 + v120;
              v121 = (char *)v32 + v120;
              uint64_t v122 = type metadata accessor for RGDisplayRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v121, 1, v122))
              {
                uint64_t v123 = sub_252AC3A24(&qword_269C41AA0);
                memcpy(__dst, v121, *(void *)(*(void *)(v123 - 8) + 64));
              }
              else
              {
                v232(__dst, v121, (uint64_t)v238);
                uint64_t v124 = *(int *)(v122 + 20);
                v212 = &__dst[v124];
                uint64_t v216 = v122;
                uint64_t v125 = &v121[v124];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v121[v124], 1, (uint64_t)v238))
                {
                  uint64_t v126 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v212, v125, *(void *)(*(void *)(v126 - 8) + 64));
                }
                else
                {
                  v232(v212, v125, (uint64_t)v238);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v212, 0, 1, (uint64_t)v238);
                }
                uint64_t v149 = *(int *)(v122 + 24);
                v150 = &__dst[v149];
                v213 = v121;
                v151 = &v121[v149];
                uint64_t v152 = sub_252D19C68();
                v153 = v151;
                uint64_t v154 = (uint64_t)v151;
                uint64_t v155 = v152;
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v154, 1, v152))
                {
                  uint64_t v156 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v150, v153, *(void *)(*(void *)(v156 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v150, v153, v155);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v150, 0, 1, v155);
                }
                uint64_t v160 = *(int *)(v216 + 28);
                v161 = &__dst[v160];
                v162 = &v213[v160];
                *(void *)v161 = *(void *)v162;
                *((void *)v161 + 1) = *((void *)v162 + 1);
                uint64_t v163 = *(int *)(v216 + 32);
                v164 = &__dst[v163];
                v165 = &v213[v163];
                unint64_t v166 = *(void *)&v213[v163 + 8];
                swift_bridgeObjectRetain();
                if (v166 >> 60 == 15)
                {
                  *(_OWORD *)v164 = *(_OWORD *)v165;
                }
                else
                {
                  uint64_t v167 = *(void *)v165;
                  sub_252AC5A54(v167, v166);
                  *(void *)v164 = v167;
                  *((void *)v164 + 1) = v166;
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v216);
              }
              uint64_t v168 = __src[10];
              v169 = (char *)v31 + v168;
              v170 = (char *)v32 + v168;
              uint64_t v171 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_252AC3A24(&qword_269C41AA8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                v232(v169, v170, (uint64_t)v238);
                uint64_t v173 = *(int *)(v171 + 20);
                __dstb = v169;
                v215 = &v169[v173];
                uint64_t v218 = v171;
                v174 = &v170[v173];
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v170[v173], 1, (uint64_t)v238))
                {
                  uint64_t v175 = sub_252AC3A24(&qword_269C41A90);
                  memcpy(v215, v174, *(void *)(*(void *)(v175 - 8) + 64));
                }
                else
                {
                  v232(v215, v174, (uint64_t)v238);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v215, 0, 1, (uint64_t)v238);
                }
                uint64_t v176 = *(int *)(v171 + 24);
                v240 = &__dstb[v176];
                v177 = &v170[v176];
                uint64_t v178 = sub_252D19C68();
                if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v177, 1, v178))
                {
                  uint64_t v179 = sub_252AC3A24(&qword_269C41A98);
                  memcpy(v240, v177, *(void *)(*(void *)(v179 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v240, v177, v178);
                  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v240, 0, 1, v178);
                }
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v218);
              }
              v220((char *)v31 + __src[11], (char *)v32 + __src[11], (uint64_t)v222);
              break;
            case 3u:
              __srcc = (void *)sub_252D19588();
              __dstd = *(void (**)(uint64_t *, uint64_t *, void *))(*(__srcc - 1) + 16);
              __dstd(v31, v32, __srcc);
              uint64_t v69 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
              __dstd((uint64_t *)((char *)v31 + v69[5]), (uint64_t *)((char *)v32 + v69[5]), __srcc);
              uint64_t v70 = v69[6];
              uint64_t v71 = (char *)v31 + v70;
              uint64_t v72 = (char *)v32 + v70;
              *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
              *((void *)v71 + 1) = *((void *)v72 + 1);
              *((void *)v71 + 2) = *((void *)v72 + 2);
              *(uint64_t *)((char *)v31 + v69[7]) = *(uint64_t *)((char *)v32 + v69[7]);
              *(uint64_t *)((char *)v31 + v69[8]) = *(uint64_t *)((char *)v32 + v69[8]);
              uint64_t v73 = v69[9];
              uint64_t v74 = (char *)v31 + v73;
              uint64_t v75 = (char *)v32 + v73;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __dstd((uint64_t *)v74, (uint64_t *)v75, __srcc);
              break;
            case 4u:
              uint64_t v77 = *v32;
              unint64_t v76 = v32[1];
              sub_252AC5A54(v77, v76);
              *uint64_t v31 = v77;
              v31[1] = v76;
              break;
            case 5u:
              uint64_t v78 = *v32;
              unint64_t v79 = v32[1];
              sub_252AC5A54(*v32, v79);
              *uint64_t v31 = v78;
              v31[1] = v79;
              v31[2] = v32[2];
              v31[3] = v32[3];
              v31[4] = v32[4];
              v31[5] = v32[5];
              swift_bridgeObjectRetain();
              goto LABEL_45;
            case 6u:
              uint64_t v80 = *v32;
              unint64_t v81 = v32[1];
              sub_252AC5A54(*v32, v81);
              *uint64_t v31 = v80;
              v31[1] = v81;
              v31[2] = v32[2];
              v31[3] = v32[3];
              uint64_t v82 = v32 + 4;
              unint64_t v83 = v32[5];
              swift_bridgeObjectRetain();
              if (v83 >> 60 == 15)
              {
                *((_OWORD *)v31 + 2) = *v82;
              }
              else
              {
                uint64_t v85 = *(void *)v82;
                sub_252AC5A54(v85, v83);
                v31[4] = v85;
                v31[5] = v83;
              }
              v31[6] = v32[6];
              v31[7] = v32[7];
              goto LABEL_45;
            case 7u:
              uint64_t v84 = sub_252D19C58();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v84 - 8) + 16))(v31, v32, v84);
              break;
            case 8u:
              *uint64_t v31 = *v32;
              v31[1] = v32[1];
LABEL_45:
              swift_bridgeObjectRetain();
              break;
            default:
              __srcb = (void *)sub_252D19588();
              __dstc = *(void (**)(uint64_t *, uint64_t *, void *))(*(__srcb - 1) + 16);
              __dstc(v31, v32, __srcb);
              uint64_t v37 = (int *)type metadata accessor for RGDisambiguationModel(0);
              __dstc((uint64_t *)((char *)v31 + v37[5]), (uint64_t *)((char *)v32 + v37[5]), __srcb);
              uint64_t v38 = v37[6];
              uint64_t v39 = (char *)v31 + v38;
              uint64_t v40 = (char *)v32 + v38;
              *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
              *((void *)v39 + 1) = *((void *)v40 + 1);
              *((void *)v39 + 2) = *((void *)v40 + 2);
              *(uint64_t *)((char *)v31 + v37[7]) = *(uint64_t *)((char *)v32 + v37[7]);
              *(uint64_t *)((char *)v31 + v37[8]) = *(uint64_t *)((char *)v32 + v37[8]);
              uint64_t v41 = v37[9];
              v226 = (char *)v32 + v41;
              v230 = (char *)v31 + v41;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              __dstc((uint64_t *)v230, (uint64_t *)v226, __srcb);
              uint64_t v42 = v37[10];
              uint64_t v43 = (uint64_t *)((char *)v31 + v42);
              char v44 = (uint64_t *)((char *)v32 + v42);
              *uint64_t v43 = *v44;
              v43[1] = v44[1];
              uint64_t v45 = v37[11];
              uint64_t v46 = (char *)v31 + v45;
              uint64_t v47 = (char *)v32 + v45;
              swift_bridgeObjectRetain();
              __dstc((uint64_t *)v46, (uint64_t *)v47, __srcb);
              break;
          }
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v48 = *v32;
          unint64_t v49 = v32[1];
          sub_252AC5A54(*v32, v49);
          *uint64_t v31 = v48;
          v31[1] = v49;
          v31[2] = v32[2];
          v31[3] = v32[3];
          goto LABEL_28;
        default:
          *uint64_t v31 = *v32;
          v31[1] = v32[1];
LABEL_28:
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v33);
      goto LABEL_114;
    }
LABEL_21:
    uint64_t v36 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_114;
  }
  if (v35)
  {
    sub_252B617B4((uint64_t)v31, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
    goto LABEL_21;
  }
  if (a1 != a2)
  {
    sub_252B617B4((uint64_t)v31, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v86 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v86))
            {
              uint64_t v87 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v31, v32, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v86 - 8) + 16))(v31, v32, v86);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v86);
            }
            v128 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            __dstg = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
            __dstg((char *)v31 + v128[5], (char *)v32 + v128[5], v86);
            uint64_t v129 = v128[6];
            v130 = (char *)v31 + v129;
            v131 = (char *)v32 + v129;
            *(_DWORD *)v130 = *(_DWORD *)v131;
            *((void *)v130 + 1) = *((void *)v131 + 1);
            *((void *)v130 + 2) = *((void *)v131 + 2);
            uint64_t v132 = v128[7];
            v233 = (char *)v31 + v132;
            v229 = (char *)v32 + v132;
            uint64_t v133 = sub_252D19408();
            v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
            swift_bridgeObjectRetain();
            v134(v233, v229, v133);
            v134((char *)v31 + v128[8], (char *)v32 + v128[8], v133);
            __dstg((char *)v31 + v128[9], (char *)v32 + v128[9], v86);
            break;
          case 2u:
            uint64_t v88 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v88))
            {
              uint64_t v89 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v31, v32, *(void *)(*(void *)(v89 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v88 - 8) + 16))(v31, v32, v88);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v88);
            }
            uint64_t v135 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            v234 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
            v239 = (void *)v88;
            v234((char *)v31 + v135[5], (char *)v32 + v135[5], v88);
            uint64_t v136 = v135[6];
            v137 = (char *)v31 + v136;
            v138 = (char *)v32 + v136;
            *(_DWORD *)v137 = *(_DWORD *)v138;
            *((void *)v137 + 1) = *((void *)v138 + 1);
            *((void *)v137 + 2) = *((void *)v138 + 2);
            uint64_t v139 = v135[7];
            __srce = (char *)v31 + v139;
            v223 = (char *)v32 + v139;
            uint64_t v140 = sub_252D19408();
            v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
            uint64_t v142 = v140;
            swift_bridgeObjectRetain();
            v141(__srce, v223, v142);
            v224 = v141;
            v141((char *)v31 + v135[8], (char *)v32 + v135[8], v142);
            __dsta = v135;
            uint64_t v143 = v135[9];
            v144 = (char *)v31 + v143;
            v145 = (char *)v32 + v143;
            v146 = (int *)type metadata accessor for RGDisplayRepresentation(0);
            uint64_t v217 = v142;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, (uint64_t)v146))
            {
              uint64_t v147 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
              v148 = __dsta;
            }
            else
            {
              v224(v144, v145, v142);
              uint64_t v157 = v146[5];
              uint64_t v219 = (uint64_t)v144;
              v210 = &v144[v157];
              v214 = v146;
              v158 = &v145[v157];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v145[v157], 1, v142))
              {
                uint64_t v159 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v210, v158, *(void *)(*(void *)(v159 - 8) + 64));
              }
              else
              {
                v224(v210, v158, v142);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v210, 0, 1, v142);
              }
              uint64_t v180 = v146[6];
              v211 = (void *)(v219 + v180);
              v181 = &v145[v180];
              uint64_t v182 = sub_252D19C68();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v181, 1, v182))
              {
                uint64_t v183 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v211, v181, *(void *)(*(void *)(v183 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v211, v181, v182);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v211, 0, 1, v182);
              }
              uint64_t v184 = v146[7];
              v185 = (void *)(v219 + v184);
              v186 = &v145[v184];
              void *v185 = *(void *)v186;
              v185[1] = *((void *)v186 + 1);
              uint64_t v187 = v146[8];
              uint64_t v188 = v219 + v187;
              v189 = &v145[v187];
              unint64_t v190 = *(void *)&v145[v187 + 8];
              swift_bridgeObjectRetain();
              if (v190 >> 60 == 15)
              {
                *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
              }
              else
              {
                uint64_t v191 = *(void *)v189;
                sub_252AC5A54(v191, v190);
                *(void *)uint64_t v188 = v191;
                *(void *)(v188 + 8) = v190;
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v219, 0, 1, (uint64_t)v214);
              v148 = __dsta;
            }
            uint64_t v192 = v148[10];
            v193 = (char *)v31 + v192;
            v194 = (char *)v32 + v192;
            uint64_t v195 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v194, 1, v195))
            {
              uint64_t v196 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
              v197 = __dsta;
            }
            else
            {
              v224(v193, v194, v217);
              __srca = (int *)v195;
              uint64_t v198 = *(int *)(v195 + 20);
              v199 = &v193[v198];
              v200 = &v194[v198];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v194[v198], 1, v217))
              {
                uint64_t v201 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
              }
              else
              {
                v224(v199, v200, v217);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v199, 0, 1, v217);
              }
              uint64_t v202 = __srca[6];
              v225 = &v193[v202];
              v203 = &v194[v202];
              uint64_t v204 = sub_252D19C68();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v203, 1, v204))
              {
                uint64_t v205 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v225, v203, *(void *)(*(void *)(v205 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v225, v203, v204);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v225, 0, 1, v204);
              }
              v197 = __dsta;
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v193, 0, 1, (uint64_t)__srca);
            }
            v234((char *)v31 + v197[11], (char *)v32 + v197[11], (uint64_t)v239);
            break;
          case 3u:
            __srcd = (void *)sub_252D19588();
            uint64_t v90 = *(void (**)(uint64_t *, uint64_t *, void *))(*(__srcd - 1) + 16);
            v90(v31, v32, __srcd);
            uint64_t v91 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            v90((uint64_t *)((char *)v31 + v91[5]), (uint64_t *)((char *)v32 + v91[5]), __srcd);
            uint64_t v92 = v91[6];
            uint64_t v93 = (char *)v31 + v92;
            v94 = (char *)v32 + v92;
            *(_DWORD *)uint64_t v93 = *(_DWORD *)v94;
            *((void *)v93 + 1) = *((void *)v94 + 1);
            *((void *)v93 + 2) = *((void *)v94 + 2);
            *(uint64_t *)((char *)v31 + v91[7]) = *(uint64_t *)((char *)v32 + v91[7]);
            *(uint64_t *)((char *)v31 + v91[8]) = *(uint64_t *)((char *)v32 + v91[8]);
            uint64_t v95 = v91[9];
            uint64_t v96 = (char *)v31 + v95;
            uint64_t v97 = (char *)v32 + v95;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v90((uint64_t *)v96, (uint64_t *)v97, __srcd);
            break;
          case 4u:
            uint64_t v99 = *v32;
            unint64_t v98 = v32[1];
            sub_252AC5A54(v99, v98);
            *uint64_t v31 = v99;
            v31[1] = v98;
            break;
          case 5u:
            uint64_t v100 = *v32;
            unint64_t v101 = v32[1];
            sub_252AC5A54(*v32, v101);
            *uint64_t v31 = v100;
            v31[1] = v101;
            v31[2] = v32[2];
            v31[3] = v32[3];
            v31[4] = v32[4];
            v31[5] = v32[5];
            swift_bridgeObjectRetain();
            goto LABEL_66;
          case 6u:
            uint64_t v102 = *v32;
            unint64_t v103 = v32[1];
            sub_252AC5A54(*v32, v103);
            *uint64_t v31 = v102;
            v31[1] = v103;
            v31[2] = v32[2];
            v31[3] = v32[3];
            uint64_t v104 = v32 + 4;
            unint64_t v105 = v32[5];
            swift_bridgeObjectRetain();
            if (v105 >> 60 == 15)
            {
              *((_OWORD *)v31 + 2) = *v104;
            }
            else
            {
              uint64_t v127 = *(void *)v104;
              sub_252AC5A54(v127, v105);
              v31[4] = v127;
              v31[5] = v105;
            }
            v31[6] = v32[6];
            v31[7] = v32[7];
            goto LABEL_66;
          case 7u:
            uint64_t v106 = sub_252D19C58();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v106 - 8) + 16))(v31, v32, v106);
            break;
          case 8u:
            *uint64_t v31 = *v32;
            v31[1] = v32[1];
LABEL_66:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v50 = sub_252D19588();
            uint64_t v51 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v50 - 8) + 16);
            v51(v31, v32, v50);
            unint64_t v52 = (int *)type metadata accessor for RGDisambiguationModel(0);
            v235 = (void *)v50;
            v51((uint64_t *)((char *)v31 + v52[5]), (uint64_t *)((char *)v32 + v52[5]), v50);
            uint64_t v53 = v52[6];
            uint64_t v54 = (char *)v31 + v53;
            uint64_t v55 = (char *)v32 + v53;
            *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
            *((void *)v54 + 1) = *((void *)v55 + 1);
            *((void *)v54 + 2) = *((void *)v55 + 2);
            *(uint64_t *)((char *)v31 + v52[7]) = *(uint64_t *)((char *)v32 + v52[7]);
            *(uint64_t *)((char *)v31 + v52[8]) = *(uint64_t *)((char *)v32 + v52[8]);
            uint64_t v56 = v52[9];
            v227 = (char *)v32 + v56;
            v231 = (char *)v31 + v56;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v51((uint64_t *)v231, (uint64_t *)v227, v50);
            uint64_t v57 = v52[10];
            uint64_t v58 = (uint64_t *)((char *)v31 + v57);
            unint64_t v59 = (uint64_t *)((char *)v32 + v57);
            *uint64_t v58 = *v59;
            v58[1] = v59[1];
            uint64_t v60 = v52[11];
            uint64_t v61 = (char *)v31 + v60;
            uint64_t v62 = (char *)v32 + v60;
            swift_bridgeObjectRetain();
            v51((uint64_t *)v61, (uint64_t *)v62, (uint64_t)v235);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v63 = *v32;
        unint64_t v64 = v32[1];
        sub_252AC5A54(*v32, v64);
        *uint64_t v31 = v63;
        v31[1] = v64;
        v31[2] = v32[2];
        v31[3] = v32[3];
        swift_bridgeObjectRetain();
        break;
      default:
        *uint64_t v31 = *v32;
        v31[1] = v32[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_114:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v206 = a3[11];
  v207 = (void *)(a1 + v206);
  v208 = (void *)(a2 + v206);
  void *v207 = *v208;
  v207[1] = v208[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_252B6B294(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = a3[7];
  int v7 = (char *)(a1 + v6);
  int v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ResponseOutput.VisualOutput(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_269C41AB0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v11 = type metadata accessor for RGPluginModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_252D19588();
          unsigned __int8 v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
          v13(v7, v8, v12);
          uint64_t v14 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v13(&v7[v14[5]], &v8[v14[5]], v12);
          uint64_t v15 = v14[6];
          char v16 = &v7[v15];
          long long v17 = &v8[v15];
          *(_OWORD *)char v16 = *(_OWORD *)v17;
          *((void *)v16 + 2) = *((void *)v17 + 2);
          *(void *)&v7[v14[7]] = *(void *)&v8[v14[7]];
          *(void *)&v7[v14[8]] = *(void *)&v8[v14[8]];
          v13(&v7[v14[9]], &v8[v14[9]], v12);
          *(_OWORD *)&v7[v14[10]] = *(_OWORD *)&v8[v14[10]];
          v13(&v7[v14[11]], &v8[v14[11]], v12);
          goto LABEL_36;
        case 1u:
          uint64_t v18 = sub_252D19588();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v18))
          {
            uint64_t v19 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v18);
          }
          long long v29 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
          v89(&v7[v29[5]], &v8[v29[5]], v18);
          uint64_t v30 = v29[6];
          uint64_t v31 = &v7[v30];
          uint64_t v32 = &v8[v30];
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
          *((void *)v31 + 2) = *((void *)v32 + 2);
          uint64_t v33 = v29[7];
          uint64_t v84 = &v8[v33];
          uint64_t v86 = &v7[v33];
          uint64_t v88 = v18;
          uint64_t v34 = sub_252D19408();
          int v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32);
          v35(v86, v84, v34);
          v35(&v7[v29[8]], &v8[v29[8]], v34);
          v89(&v7[v29[9]], &v8[v29[9]], v88);
          goto LABEL_36;
        case 2u:
          uint64_t v20 = sub_252D19588();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v20))
          {
            uint64_t v21 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v7, v8, v20);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v20);
          }
          uint64_t v36 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
          uint64_t v87 = v20;
          v85(&v7[v36[5]], &v8[v36[5]], v20);
          uint64_t v37 = v36[6];
          uint64_t v38 = &v7[v37];
          uint64_t v39 = &v8[v37];
          *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
          *((void *)v38 + 2) = *((void *)v39 + 2);
          uint64_t v40 = v36[7];
          uint64_t v41 = &v7[v40];
          uint64_t v92 = &v8[v40];
          uint64_t v42 = sub_252D19408();
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32);
          v43(v41, v92, v42);
          uint64_t v90 = (void *)v42;
          uint64_t v44 = v42;
          uint64_t v45 = (void (*)(char *, char *))v43;
          v43(&v7[v36[8]], &v8[v36[8]], v44);
          uint64_t v93 = v36;
          uint64_t v46 = v36[9];
          uint64_t v47 = &v7[v46];
          uint64_t v48 = &v8[v46];
          uint64_t v49 = type metadata accessor for RGDisplayRepresentation(0);
          unint64_t v83 = v45;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v48, 1, v49))
          {
            uint64_t v50 = sub_252AC3A24(&qword_269C41AA0);
            memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v45)(v47, v48, v90);
            uint64_t v78 = (int *)v49;
            uint64_t v51 = *(int *)(v49 + 20);
            uint64_t v81 = (uint64_t)v47;
            unint64_t v52 = &v47[v51];
            uint64_t v53 = v48;
            uint64_t v54 = &v48[v51];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v54, 1, (uint64_t)v90))
            {
              uint64_t v55 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v52, v54, *(void *)(*(void *)(v55 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v45)(v52, v54, v90);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v52, 0, 1, (uint64_t)v90);
            }
            uint64_t v56 = v78[6];
            __dst = (void *)(v81 + v56);
            uint64_t v57 = &v53[v56];
            uint64_t v58 = sub_252D19C68();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v57, 1, v58))
            {
              uint64_t v59 = sub_252AC3A24(&qword_269C41A98);
              memcpy(__dst, v57, *(void *)(*(void *)(v59 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(__dst, v57, v58);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v58);
            }
            *(_OWORD *)(v81 + v78[7]) = *(_OWORD *)&v53[v78[7]];
            *(_OWORD *)(v81 + v78[8]) = *(_OWORD *)&v53[v78[8]];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v81, 0, 1, (uint64_t)v78);
          }
          uint64_t v60 = v93;
          uint64_t v61 = v93[10];
          uint64_t v62 = &v7[v61];
          uint64_t v63 = &v8[v61];
          uint64_t v64 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = sub_252AC3A24(&qword_269C41AA8);
            memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            v83(v62, v63);
            __dsta = v62;
            uint64_t v82 = v64;
            uint64_t v66 = *(int *)(v64 + 20);
            uint64_t v67 = &v62[v66];
            uint64_t v68 = &v63[v66];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v63[v66], 1, (uint64_t)v90))
            {
              uint64_t v69 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v83)(v67, v68, v90);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, (uint64_t)v90);
            }
            uint64_t v70 = (uint64_t)__dsta;
            uint64_t v71 = *(int *)(v64 + 24);
            uint64_t v91 = &__dsta[v71];
            uint64_t v72 = &v63[v71];
            uint64_t v73 = sub_252D19C68();
            uint64_t v60 = v93;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v72, 1, v73))
            {
              uint64_t v74 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v91, v72, *(void *)(*(void *)(v74 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v91, v72, v73);
              uint64_t v70 = (uint64_t)__dsta;
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v91, 0, 1, v73);
            }
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v70, 0, 1, v82);
          }
          v85(&v7[v60[11]], &v8[v60[11]], v87);
          goto LABEL_36;
        case 3u:
          uint64_t v22 = sub_252D19588();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
          v23(v7, v8, v22);
          uint64_t v24 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          v23(&v7[v24[5]], &v8[v24[5]], v22);
          uint64_t v25 = v24[6];
          uint64_t v26 = &v7[v25];
          uint64_t v27 = &v8[v25];
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
          *((void *)v26 + 2) = *((void *)v27 + 2);
          *(void *)&v7[v24[7]] = *(void *)&v8[v24[7]];
          *(void *)&v7[v24[8]] = *(void *)&v8[v24[8]];
          v23(&v7[v24[9]], &v8[v24[9]], v22);
          goto LABEL_36;
        case 7u:
          uint64_t v28 = sub_252D19C58();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
LABEL_36:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v75 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v75) = *(unsigned char *)(a2 + v75);
  uint64_t v76 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v76) = *(_OWORD *)(a2 + v76);
  return a1;
}

uint64_t assignWithTake for ResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a1 + 24);
  if (v7 != 255)
  {
    int v8 = *(unsigned __int8 *)(a2 + 24);
    if (v8 != 255)
    {
      uint64_t v9 = *(void *)(a1 + 8);
      uint64_t v10 = *(void *)(a1 + 16);
      *(_OWORD *)(a1 + 8) = *v6;
      *(unsigned char *)(a1 + 24) = v8;
      sub_252AD170C(v9, v10, v7);
      goto LABEL_6;
    }
    sub_252B6B294(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
LABEL_6:
  uint64_t v11 = (_OWORD *)(a2 + 32);
  int v12 = *(unsigned __int8 *)(a1 + 48);
  if (v12 != 255)
  {
    int v13 = *(unsigned __int8 *)(a2 + 48);
    if (v13 != 255)
    {
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 40);
      *(_OWORD *)(a1 + 32) = *v11;
      *(unsigned char *)(a1 + 48) = v13;
      sub_252AD170C(v14, v15, v12);
      goto LABEL_11;
    }
    sub_252B6B294(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *v11;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
LABEL_11:
  uint64_t v16 = a3[7];
  long long v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for ResponseOutput.VisualOutput(0);
  int v20 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v22 = type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v23 = sub_252D19588();
            uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
            v24(v17, v18, v23);
            uint64_t v25 = (int *)type metadata accessor for RGDisambiguationModel(0);
            v24(&v17[v25[5]], &v18[v25[5]], v23);
            uint64_t v26 = v25[6];
            uint64_t v27 = &v17[v26];
            uint64_t v28 = &v18[v26];
            *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
            *((void *)v27 + 2) = *((void *)v28 + 2);
            *(void *)&v17[v25[7]] = *(void *)&v18[v25[7]];
            *(void *)&v17[v25[8]] = *(void *)&v18[v25[8]];
            v24(&v17[v25[9]], &v18[v25[9]], v23);
            *(_OWORD *)&v17[v25[10]] = *(_OWORD *)&v18[v25[10]];
            v24(&v17[v25[11]], &v18[v25[11]], v23);
            goto LABEL_68;
          case 1u:
            uint64_t v37 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v37))
            {
              uint64_t v38 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v17, v18, *(void *)(*(void *)(v38 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v17, v18, v37);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v37);
            }
            uint64_t v59 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            uint64_t v179 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
            v179(&v17[v59[5]], &v18[v59[5]], v37);
            uint64_t v60 = v59[6];
            uint64_t v61 = &v17[v60];
            uint64_t v62 = &v18[v60];
            *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
            *((void *)v61 + 2) = *((void *)v62 + 2);
            uint64_t v63 = v59[7];
            v169 = &v18[v63];
            uint64_t v173 = &v17[v63];
            uint64_t v177 = v37;
            uint64_t v64 = sub_252D19408();
            uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32);
            v65(v173, v169, v64);
            v65(&v17[v59[8]], &v18[v59[8]], v64);
            v179(&v17[v59[9]], &v18[v59[9]], v177);
            goto LABEL_68;
          case 2u:
            uint64_t v39 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v39))
            {
              uint64_t v40 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(v17, v18, *(void *)(*(void *)(v40 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v17, v18, v39);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v39);
            }
            uint64_t v66 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32);
            uint64_t v174 = v39;
            v170(&v17[v66[5]], &v18[v66[5]], v39);
            uint64_t v67 = v66[6];
            uint64_t v68 = &v17[v67];
            uint64_t v69 = &v18[v67];
            *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
            *((void *)v68 + 2) = *((void *)v69 + 2);
            uint64_t v70 = v66[7];
            uint64_t v71 = &v17[v70];
            uint64_t v184 = &v18[v70];
            uint64_t v72 = sub_252D19408();
            uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32);
            v73(v71, v184, v72);
            uint64_t v180 = (void *)v72;
            uint64_t v74 = v72;
            uint64_t v75 = (void (*)(char *, char *))v73;
            v73(&v17[v66[8]], &v18[v66[8]], v74);
            v185 = v66;
            uint64_t v76 = v66[9];
            uint64_t v77 = &v17[v76];
            uint64_t v78 = &v18[v76];
            uint64_t v79 = type metadata accessor for RGDisplayRepresentation(0);
            uint64_t v167 = v75;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v78, 1, v79))
            {
              uint64_t v80 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, void *))v75)(v77, v78, v180);
              uint64_t v157 = (int *)v79;
              uint64_t v81 = *(int *)(v79 + 20);
              uint64_t v163 = (uint64_t)v77;
              uint64_t v82 = &v77[v81];
              unint64_t v83 = v78;
              uint64_t v84 = &v78[v81];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v84, 1, (uint64_t)v180))
              {
                uint64_t v85 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v82, v84, *(void *)(*(void *)(v85 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, void *))v75)(v82, v84, v180);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v82, 0, 1, (uint64_t)v180);
              }
              uint64_t v108 = v157[6];
              __dst = (void *)(v163 + v108);
              uint64_t v109 = &v83[v108];
              uint64_t v110 = sub_252D19C68();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v109, 1, v110))
              {
                uint64_t v111 = sub_252AC3A24(&qword_269C41A98);
                memcpy(__dst, v109, *(void *)(*(void *)(v111 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v109, v110);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v110);
              }
              *(_OWORD *)(v163 + v157[7]) = *(_OWORD *)&v83[v157[7]];
              *(_OWORD *)(v163 + v157[8]) = *(_OWORD *)&v83[v157[8]];
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v163, 0, 1, (uint64_t)v157);
            }
            uint64_t v117 = v185[10];
            uint64_t v118 = &v17[v117];
            uint64_t v119 = &v18[v117];
            uint64_t v120 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v119, 1, v120))
            {
              uint64_t v121 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
              v170(&v17[v185[11]], &v18[v185[11]], v174);
            }
            else
            {
              v167(v118, v119);
              __dsta = (void *)v120;
              uint64_t v165 = (uint64_t)v118;
              uint64_t v122 = *(int *)(v120 + 20);
              uint64_t v123 = &v118[v122];
              uint64_t v124 = &v119[v122];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v119[v122], 1, (uint64_t)v180))
              {
                uint64_t v125 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, void *))v167)(v123, v124, v180);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v123, 0, 1, (uint64_t)v180);
              }
              uint64_t v126 = *(int *)(v120 + 24);
              uint64_t v127 = (void *)(v165 + v126);
              v128 = &v119[v126];
              uint64_t v129 = sub_252D19C68();
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v128, 1, v129))
              {
                uint64_t v130 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v127, 0, 1, v129);
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v165, 0, 1, (uint64_t)__dsta);
              v170(&v17[v185[11]], &v18[v185[11]], v174);
            }
            goto LABEL_68;
          case 3u:
            uint64_t v41 = sub_252D19588();
            uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32);
            v42(v17, v18, v41);
            uint64_t v43 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            v42(&v17[v43[5]], &v18[v43[5]], v41);
            uint64_t v44 = v43[6];
            uint64_t v45 = &v17[v44];
            uint64_t v46 = &v18[v44];
            *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
            *((void *)v45 + 2) = *((void *)v46 + 2);
            *(void *)&v17[v43[7]] = *(void *)&v18[v43[7]];
            *(void *)&v17[v43[8]] = *(void *)&v18[v43[8]];
            v42(&v17[v43[9]], &v18[v43[9]], v41);
            goto LABEL_68;
          case 7u:
            uint64_t v47 = sub_252D19C58();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v17, v18, v47);
LABEL_68:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_71;
    }
    goto LABEL_18;
  }
  if (v21)
  {
    sub_252B617B4((uint64_t)v17, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
LABEL_18:
    size_t v29 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41AB0) - 8) + 64);
LABEL_19:
    memcpy(v17, v18, v29);
    goto LABEL_71;
  }
  if (a1 == a2) {
    goto LABEL_71;
  }
  sub_252B617B4((uint64_t)v17, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    size_t v29 = *(void *)(*(void *)(v19 - 8) + 64);
    goto LABEL_19;
  }
  uint64_t v30 = type metadata accessor for RGPluginModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v31 = sub_252D19588();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v17, v18, v31);
      uint64_t v33 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v32(&v17[v33[5]], &v18[v33[5]], v31);
      uint64_t v34 = v33[6];
      int v35 = &v17[v34];
      uint64_t v36 = &v18[v34];
      *(_OWORD *)int v35 = *(_OWORD *)v36;
      *((void *)v35 + 2) = *((void *)v36 + 2);
      *(void *)&v17[v33[7]] = *(void *)&v18[v33[7]];
      *(void *)&v17[v33[8]] = *(void *)&v18[v33[8]];
      v32(&v17[v33[9]], &v18[v33[9]], v31);
      *(_OWORD *)&v17[v33[10]] = *(_OWORD *)&v18[v33[10]];
      v32(&v17[v33[11]], &v18[v33[11]], v31);
      goto LABEL_87;
    case 1u:
      uint64_t v48 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v48))
      {
        uint64_t v49 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v17, v18, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v17, v18, v48);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v48);
      }
      uint64_t v86 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32);
      v181(&v17[v86[5]], &v18[v86[5]], v48);
      uint64_t v87 = v86[6];
      uint64_t v88 = &v17[v87];
      uint64_t v89 = &v18[v87];
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *((void *)v88 + 2) = *((void *)v89 + 2);
      uint64_t v90 = v86[7];
      uint64_t v171 = &v18[v90];
      uint64_t v175 = &v17[v90];
      uint64_t v178 = v48;
      uint64_t v91 = sub_252D19408();
      uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32);
      v92(v175, v171, v91);
      v92(&v17[v86[8]], &v18[v86[8]], v91);
      v181(&v17[v86[9]], &v18[v86[9]], v178);
      goto LABEL_87;
    case 2u:
      uint64_t v50 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v18, 1, v50))
      {
        uint64_t v51 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(v17, v18, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v17, v18, v50);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v17, 0, 1, v50);
      }
      uint64_t v93 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32);
      uint64_t v176 = v50;
      v172(&v17[v93[5]], &v18[v93[5]], v50);
      uint64_t v94 = v93[6];
      uint64_t v95 = &v17[v94];
      uint64_t v96 = &v18[v94];
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
      *((void *)v95 + 2) = *((void *)v96 + 2);
      uint64_t v97 = v93[7];
      unint64_t v98 = &v17[v97];
      v186 = &v18[v97];
      uint64_t v99 = sub_252D19408();
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32);
      v100(v98, v186, v99);
      uint64_t v182 = (void *)v99;
      uint64_t v101 = v99;
      uint64_t v102 = (void (*)(char *, char *))v100;
      v100(&v17[v93[8]], &v18[v93[8]], v101);
      uint64_t v187 = v93;
      uint64_t v103 = v93[9];
      uint64_t v104 = &v17[v103];
      unint64_t v105 = &v18[v103];
      uint64_t v106 = type metadata accessor for RGDisplayRepresentation(0);
      uint64_t v168 = v102;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v105, 1, v106))
      {
        uint64_t v107 = sub_252AC3A24(&qword_269C41AA0);
        memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, void *))v102)(v104, v105, v182);
        v158 = (int *)v106;
        uint64_t v112 = *(int *)(v106 + 20);
        uint64_t v164 = (uint64_t)v104;
        uint64_t v113 = &v104[v112];
        uint64_t v114 = v105;
        uint64_t v115 = &v105[v112];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v115, 1, (uint64_t)v182))
        {
          uint64_t v116 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v113, v115, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, void *))v102)(v113, v115, v182);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v113, 0, 1, (uint64_t)v182);
        }
        uint64_t v138 = v158[6];
        __dstb = (void *)(v164 + v138);
        uint64_t v139 = &v114[v138];
        uint64_t v140 = sub_252D19C68();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v139, 1, v140))
        {
          uint64_t v141 = sub_252AC3A24(&qword_269C41A98);
          memcpy(__dstb, v139, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(__dstb, v139, v140);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dstb, 0, 1, v140);
        }
        *(_OWORD *)(v164 + v158[7]) = *(_OWORD *)&v114[v158[7]];
        *(_OWORD *)(v164 + v158[8]) = *(_OWORD *)&v114[v158[8]];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v164, 0, 1, (uint64_t)v158);
      }
      uint64_t v142 = v187;
      uint64_t v143 = v187[10];
      v144 = &v17[v143];
      v145 = &v18[v143];
      uint64_t v146 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v145, 1, v146))
      {
        uint64_t v147 = sub_252AC3A24(&qword_269C41AA8);
        memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        v168(v144, v145);
        __dstc = v144;
        uint64_t v166 = v146;
        uint64_t v148 = *(int *)(v146 + 20);
        uint64_t v149 = &v144[v148];
        v150 = &v145[v148];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v145[v148], 1, (uint64_t)v182))
        {
          uint64_t v151 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, void *))v168)(v149, v150, v182);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v149, 0, 1, (uint64_t)v182);
        }
        uint64_t v152 = (uint64_t)__dstc;
        uint64_t v153 = *(int *)(v146 + 24);
        uint64_t v183 = &__dstc[v153];
        uint64_t v154 = &v145[v153];
        uint64_t v155 = sub_252D19C68();
        uint64_t v142 = v187;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v154, 1, v155))
        {
          uint64_t v156 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v183, v154, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v183, v154, v155);
          uint64_t v152 = (uint64_t)__dstc;
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v183, 0, 1, v155);
        }
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v152, 0, 1, v166);
      }
      v172(&v17[v142[11]], &v18[v142[11]], v176);
      goto LABEL_87;
    case 3u:
      uint64_t v52 = sub_252D19588();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32);
      v53(v17, v18, v52);
      uint64_t v54 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v53(&v17[v54[5]], &v18[v54[5]], v52);
      uint64_t v55 = v54[6];
      uint64_t v56 = &v17[v55];
      uint64_t v57 = &v18[v55];
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *((void *)v56 + 2) = *((void *)v57 + 2);
      *(void *)&v17[v54[7]] = *(void *)&v18[v54[7]];
      *(void *)&v17[v54[8]] = *(void *)&v18[v54[8]];
      v53(&v17[v54[9]], &v18[v54[9]], v52);
      goto LABEL_87;
    case 7u:
      uint64_t v58 = sub_252D19C58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v17, v18, v58);
LABEL_87:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(void *)(v30 - 8) + 64));
      break;
  }
  swift_storeEnumTagMultiPayload();
LABEL_71:
  uint64_t v131 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v131) = *(unsigned char *)(a2 + v131);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v132 = a3[11];
  uint64_t v133 = (void *)(a1 + v132);
  v134 = (uint64_t *)(a2 + v132);
  uint64_t v136 = *v134;
  uint64_t v135 = v134[1];
  void *v133 = v136;
  v133[1] = v135;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B6D3AC);
}

uint64_t sub_252B6D3AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_252AC3A24(&qword_269C41AB0);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 28);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B6D44C);
}

void *sub_252B6D44C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_252AC3A24(&qword_269C41AB0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 28);
    return (void *)_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_252B6D4D0()
{
  sub_252B6D598();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_252B6D598()
{
  if (!qword_26B2345E0)
  {
    type metadata accessor for ResponseOutput.VisualOutput(255);
    unint64_t v0 = sub_252D1A178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2345E0);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ResponseOutput.VisualOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v29 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v29))
            {
              uint64_t v30 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v29);
            }
            uint64_t v59 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
            v123((char *)a1 + v59[5], (char *)a2 + v59[5], v29);
            uint64_t v60 = v59[6];
            uint64_t v61 = (char *)a1 + v60;
            uint64_t v62 = (char *)a2 + v60;
            *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
            uint64_t v63 = *((void *)v62 + 2);
            *((void *)v61 + 1) = *((void *)v62 + 1);
            *((void *)v61 + 2) = v63;
            uint64_t v64 = v59[7];
            uint64_t v65 = (char *)a1 + v64;
            uint64_t v66 = (char *)a2 + v64;
            uint64_t v67 = sub_252D19408();
            uint64_t v122 = v29;
            uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
            swift_bridgeObjectRetain();
            v68(v65, v66, v67);
            v68((char *)a1 + v59[8], (char *)a2 + v59[8], v67);
            v123((char *)a1 + v59[9], (char *)a2 + v59[9], v122);
            break;
          case 2u:
            uint64_t v31 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v31))
            {
              uint64_t v32 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v31);
            }
            uint64_t v69 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
            uint64_t v126 = v31;
            v124((char *)a1 + v69[5], (char *)a2 + v69[5], v31);
            uint64_t v70 = v69[6];
            uint64_t v71 = (char *)a1 + v70;
            uint64_t v72 = (char *)a2 + v70;
            *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
            uint64_t v73 = *((void *)v72 + 2);
            *((void *)v71 + 1) = *((void *)v72 + 1);
            *((void *)v71 + 2) = v73;
            uint64_t v74 = v69[7];
            uint64_t v75 = (char *)a1 + v74;
            uint64_t v76 = (char *)a2 + v74;
            uint64_t v77 = sub_252D19408();
            uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
            swift_bridgeObjectRetain();
            v78(v75, v76, v77);
            v78((char *)a1 + v69[8], (char *)a2 + v69[8], v77);
            uint64_t v79 = v69[9];
            uint64_t v80 = (char *)a1 + v79;
            uint64_t v81 = (char *)a2 + v79;
            uint64_t v82 = (int *)type metadata accessor for RGDisplayRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v81, 1, (uint64_t)v82))
            {
              uint64_t v83 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
            }
            else
            {
              uint64_t v120 = v69;
              v78(v80, v81, v77);
              uint64_t v84 = v82[5];
              __dst = &v80[v84];
              uint64_t v85 = &v81[v84];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v81[v84], 1, v77))
              {
                uint64_t v86 = sub_252AC3A24(&qword_269C41A90);
                memcpy(__dst, v85, *(void *)(*(void *)(v86 - 8) + 64));
              }
              else
              {
                v78(__dst, v85, v77);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v77);
              }
              uint64_t v87 = v82[6];
              __dsta = &v80[v87];
              uint64_t v88 = (uint64_t)&v81[v87];
              uint64_t v89 = sub_252D19C68();
              uint64_t v117 = (const void *)v88;
              int v90 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v88, 1, v89);
              uint64_t v69 = v120;
              uint64_t v116 = v78;
              if (v90)
              {
                uint64_t v91 = sub_252AC3A24(&qword_269C41A98);
                memcpy(__dsta, v117, *(void *)(*(void *)(v91 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(void *)(v89 - 8) + 16))(__dsta, v117, v89);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v89);
              }
              uint64_t v92 = v82[7];
              uint64_t v93 = &v80[v92];
              uint64_t v94 = &v81[v92];
              uint64_t v95 = *((void *)v94 + 1);
              *(void *)uint64_t v93 = *(void *)v94;
              *((void *)v93 + 1) = v95;
              uint64_t v96 = v82[8];
              uint64_t v97 = &v80[v96];
              unint64_t v98 = &v81[v96];
              unint64_t v99 = *((void *)v98 + 1);
              swift_bridgeObjectRetain();
              if (v99 >> 60 == 15)
              {
                *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
              }
              else
              {
                uint64_t v100 = *(void *)v98;
                sub_252AC5A54(v100, v99);
                *(void *)uint64_t v97 = v100;
                *((void *)v97 + 1) = v99;
              }
              uint64_t v78 = v116;
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v80, 0, 1, (uint64_t)v82);
            }
            uint64_t v101 = v69[10];
            uint64_t v102 = (char *)a1 + v101;
            uint64_t v103 = (char *)a2 + v101;
            uint64_t v104 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v103, 1, v104))
            {
              uint64_t v105 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
            }
            else
            {
              uint64_t v121 = v69;
              v78(v102, v103, v77);
              uint64_t v106 = *(int *)(v104 + 20);
              uint64_t v107 = &v102[v106];
              uint64_t v108 = &v103[v106];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v103[v106], 1, v77))
              {
                uint64_t v109 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
              }
              else
              {
                v78(v107, v108, v77);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v107, 0, 1, v77);
              }
              uint64_t v110 = *(int *)(v104 + 24);
              uint64_t v111 = &v102[v110];
              uint64_t v112 = &v103[v110];
              uint64_t v113 = sub_252D19C68();
              uint64_t v69 = v121;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v112, 1, v113))
              {
                uint64_t v114 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v111, 0, 1, v113);
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v102, 0, 1, v104);
            }
            v124((char *)a1 + v69[11], (char *)a2 + v69[11], v126);
            break;
          case 3u:
            uint64_t v33 = sub_252D19588();
            uint64_t v34 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v33 - 8) + 16);
            v34(a1, a2, v33);
            int v35 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            v34((uint64_t *)((char *)a1 + v35[5]), (uint64_t *)((char *)a2 + v35[5]), v33);
            uint64_t v36 = v35[6];
            uint64_t v37 = (char *)a1 + v36;
            uint64_t v38 = (char *)a2 + v36;
            *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
            uint64_t v39 = *((void *)v38 + 2);
            *((void *)v37 + 1) = *((void *)v38 + 1);
            *((void *)v37 + 2) = v39;
            *(uint64_t *)((char *)a1 + v35[7]) = *(uint64_t *)((char *)a2 + v35[7]);
            *(uint64_t *)((char *)a1 + v35[8]) = *(uint64_t *)((char *)a2 + v35[8]);
            uint64_t v40 = v35[9];
            uint64_t v41 = (char *)a1 + v40;
            uint64_t v42 = (char *)a2 + v40;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v34((uint64_t *)v41, (uint64_t *)v42, v33);
            break;
          case 4u:
            uint64_t v44 = *a2;
            unint64_t v43 = a2[1];
            sub_252AC5A54(v44, v43);
            *a1 = v44;
            a1[1] = v43;
            break;
          case 5u:
            uint64_t v45 = *a2;
            unint64_t v46 = a2[1];
            sub_252AC5A54(*a2, v46);
            *a1 = v45;
            a1[1] = v46;
            uint64_t v47 = a2[3];
            a1[2] = a2[2];
            a1[3] = v47;
            uint64_t v48 = a2[4];
            uint64_t v49 = a2[5];
            a1[4] = v48;
            a1[5] = v49;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 6u:
            uint64_t v50 = *a2;
            unint64_t v51 = a2[1];
            sub_252AC5A54(*a2, v51);
            *a1 = v50;
            a1[1] = v51;
            uint64_t v52 = a2[3];
            a1[2] = a2[2];
            a1[3] = v52;
            uint64_t v53 = a2 + 4;
            unint64_t v54 = a2[5];
            swift_bridgeObjectRetain();
            if (v54 >> 60 == 15)
            {
              *((_OWORD *)a1 + 2) = *(_OWORD *)v53;
            }
            else
            {
              uint64_t v57 = *v53;
              sub_252AC5A54(*v53, v54);
              a1[4] = v57;
              a1[5] = v54;
            }
            uint64_t v58 = a2[7];
            a1[6] = a2[6];
            a1[7] = v58;
            swift_bridgeObjectRetain();
            break;
          case 7u:
            uint64_t v55 = sub_252D19C58();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
            break;
          case 8u:
            uint64_t v56 = a2[1];
            *a1 = *a2;
            a1[1] = v56;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v8 = sub_252D19588();
            uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16);
            v9(a1, a2, v8);
            uint64_t v10 = (void (*)(char *, char *, uint64_t))v9;
            uint64_t v125 = (void (*)(char *, char *, uint64_t))v9;
            uint64_t v11 = (int *)type metadata accessor for RGDisambiguationModel(0);
            v10((char *)a1 + v11[5], (char *)a2 + v11[5], v8);
            uint64_t v12 = v11[6];
            int v13 = (char *)a1 + v12;
            uint64_t v14 = (char *)a2 + v12;
            *(_DWORD *)int v13 = *(_DWORD *)v14;
            uint64_t v15 = *((void *)v14 + 2);
            *((void *)v13 + 1) = *((void *)v14 + 1);
            *((void *)v13 + 2) = v15;
            *(uint64_t *)((char *)a1 + v11[7]) = *(uint64_t *)((char *)a2 + v11[7]);
            *(uint64_t *)((char *)a1 + v11[8]) = *(uint64_t *)((char *)a2 + v11[8]);
            uint64_t v16 = v11[9];
            long long v17 = (char *)a1 + v16;
            uint64_t v18 = (char *)a2 + v16;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v125(v17, v18, v8);
            uint64_t v19 = v11[10];
            int v20 = (uint64_t *)((char *)a1 + v19);
            int v21 = (uint64_t *)((char *)a2 + v19);
            uint64_t v22 = v21[1];
            *int v20 = *v21;
            v20[1] = v22;
            uint64_t v23 = v11[11];
            uint64_t v24 = (char *)a1 + v23;
            uint64_t v25 = (char *)a2 + v23;
            swift_bridgeObjectRetain();
            v125(v24, v25, v8);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v26 = *a2;
        unint64_t v27 = a2[1];
        sub_252AC5A54(*a2, v27);
        *a1 = v26;
        a1[1] = v27;
        uint64_t v28 = a2[3];
        a1[2] = a2[2];
        a1[3] = v28;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ResponseOutput.VisualOutput(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      goto LABEL_5;
    case 2:
      type metadata accessor for RGPluginModel(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          uint64_t v3 = sub_252D19588();
          uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
          ((void (*)(void *__return_ptr, uint64_t *, uint64_t))v32)((void *)(v3 - 8), a1, v3);
          uint64_t v4 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v32((char *)a1 + v4[5], v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v32((char *)a1 + v4[9], v3);
          swift_bridgeObjectRelease();
          goto LABEL_25;
        case 1:
          uint64_t v3 = sub_252D19588();
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3)) {
            (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
          }
          int v5 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
          v32((char *)a1 + v5[5], v3);
          swift_bridgeObjectRelease();
          uint64_t v6 = (char *)a1 + v5[7];
          uint64_t v7 = sub_252D19408();
          uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
          v8(v6, v7);
          v8((char *)a1 + v5[8], v7);
          goto LABEL_27;
        case 2:
          uint64_t v3 = sub_252D19588();
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3)) {
            (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
          }
          uint64_t v4 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
          v32((char *)a1 + v4[5], v3);
          swift_bridgeObjectRelease();
          uint64_t v9 = (char *)a1 + v4[7];
          uint64_t v10 = sub_252D19408();
          uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
          v11(v9, v10);
          v11((char *)a1 + v4[8], v10);
          uint64_t v12 = (uint64_t)a1 + v4[9];
          int v13 = (int *)type metadata accessor for RGDisplayRepresentation(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, (uint64_t)v13))
          {
            v11((char *)v12, v10);
            uint64_t v14 = v12 + v13[5];
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v14, 1, v10)) {
              v11((char *)v14, v10);
            }
            uint64_t v15 = v12 + v13[6];
            uint64_t v16 = sub_252D19C68();
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v15, 1, v16)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
            }
            swift_bridgeObjectRelease();
            long long v17 = (uint64_t *)(v12 + v13[8]);
            unint64_t v18 = v17[1];
            if (v18 >> 60 != 15) {
              sub_252AC5C14(*v17, v18);
            }
          }
          uint64_t v19 = (uint64_t)a1 + v4[10];
          uint64_t v20 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
          {
            v11((char *)v19, v10);
            uint64_t v21 = v19 + *(int *)(v20 + 20);
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, 1, v10)) {
              v11((char *)v21, v10);
            }
            uint64_t v22 = v19 + *(int *)(v20 + 24);
            uint64_t v23 = sub_252D19C68();
            if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v23)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
            }
          }
LABEL_25:
          uint64_t v24 = v4[11];
          goto LABEL_28;
        case 3:
          uint64_t v3 = sub_252D19588();
          uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
          ((void (*)(void *__return_ptr, uint64_t *, uint64_t))v32)((void *)(v3 - 8), a1, v3);
          int v5 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          v32((char *)a1 + v5[5], v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_27:
          uint64_t v24 = v5[9];
LABEL_28:
          uint64_t v25 = (uint64_t *)((char *)a1 + v24);
          uint64_t v26 = v3;
          unint64_t v27 = (uint64_t (*)(uint64_t *, uint64_t))v32;
          goto LABEL_29;
        case 4:
          uint64_t v28 = *a1;
          unint64_t v29 = a1[1];
          return sub_252AC5C14(v28, v29);
        case 5:
          sub_252AC5C14(*a1, a1[1]);
          swift_bridgeObjectRelease();
          goto LABEL_5;
        case 6:
          sub_252AC5C14(*a1, a1[1]);
          swift_bridgeObjectRelease();
          unint64_t v30 = a1[5];
          if (v30 >> 60 != 15) {
            sub_252AC5C14(a1[4], v30);
          }
          goto LABEL_5;
        case 7:
          uint64_t v31 = sub_252D19C58();
          unint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v31 - 8) + 8);
          uint64_t v26 = v31;
          uint64_t v25 = a1;
LABEL_29:
          uint64_t result = v27(v25, v26);
          break;
        case 8:
          goto LABEL_5;
        default:
          return result;
      }
      break;
    case 3:
      sub_252AC5C14(*a1, a1[1]);
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ResponseOutput.VisualOutput(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      type metadata accessor for RGPluginModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v26 = sub_252D19588();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v26))
          {
            uint64_t v27 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v26);
          }
          uint64_t v56 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          uint64_t v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
          v120((char *)a1 + v56[5], (char *)a2 + v56[5], v26);
          uint64_t v57 = v56[6];
          uint64_t v58 = (char *)a1 + v57;
          uint64_t v59 = (char *)a2 + v57;
          *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
          uint64_t v60 = *((void *)v59 + 2);
          *((void *)v58 + 1) = *((void *)v59 + 1);
          *((void *)v58 + 2) = v60;
          uint64_t v61 = v56[7];
          uint64_t v62 = (char *)a1 + v61;
          uint64_t v63 = (char *)a2 + v61;
          uint64_t v64 = sub_252D19408();
          uint64_t v119 = v26;
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
          swift_bridgeObjectRetain();
          v65(v62, v63, v64);
          v65((char *)a1 + v56[8], (char *)a2 + v56[8], v64);
          v120((char *)a1 + v56[9], (char *)a2 + v56[9], v119);
          break;
        case 2u:
          uint64_t v28 = sub_252D19588();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v28))
          {
            uint64_t v29 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v28);
          }
          uint64_t v66 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
          uint64_t v123 = v28;
          v121((char *)a1 + v66[5], (char *)a2 + v66[5], v28);
          uint64_t v67 = v66[6];
          uint64_t v68 = (char *)a1 + v67;
          uint64_t v69 = (char *)a2 + v67;
          *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
          uint64_t v70 = *((void *)v69 + 2);
          *((void *)v68 + 1) = *((void *)v69 + 1);
          *((void *)v68 + 2) = v70;
          uint64_t v71 = v66[7];
          uint64_t v72 = (char *)a1 + v71;
          uint64_t v73 = (char *)a2 + v71;
          uint64_t v74 = sub_252D19408();
          uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(v72, v73, v74);
          v75((char *)a1 + v66[8], (char *)a2 + v66[8], v74);
          uint64_t v76 = v66[9];
          uint64_t v77 = (char *)a1 + v76;
          uint64_t v78 = (char *)a2 + v76;
          uint64_t v79 = (int *)type metadata accessor for RGDisplayRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v78, 1, (uint64_t)v79))
          {
            uint64_t v80 = sub_252AC3A24(&qword_269C41AA0);
            memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
          }
          else
          {
            uint64_t v117 = v66;
            v75(v77, v78, v74);
            uint64_t v81 = v79[5];
            __dst = &v77[v81];
            uint64_t v82 = &v78[v81];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v78[v81], 1, v74))
            {
              uint64_t v83 = sub_252AC3A24(&qword_269C41A90);
              memcpy(__dst, v82, *(void *)(*(void *)(v83 - 8) + 64));
            }
            else
            {
              v75(__dst, v82, v74);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v74);
            }
            uint64_t v84 = v79[6];
            __dsta = &v77[v84];
            uint64_t v85 = (uint64_t)&v78[v84];
            uint64_t v86 = sub_252D19C68();
            uint64_t v114 = (const void *)v85;
            int v87 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v85, 1, v86);
            uint64_t v66 = v117;
            uint64_t v113 = v75;
            if (v87)
            {
              uint64_t v88 = sub_252AC3A24(&qword_269C41A98);
              memcpy(__dsta, v114, *(void *)(*(void *)(v88 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(void *)(v86 - 8) + 16))(__dsta, v114, v86);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v86);
            }
            uint64_t v89 = v79[7];
            int v90 = &v77[v89];
            uint64_t v91 = &v78[v89];
            uint64_t v92 = *((void *)v91 + 1);
            *(void *)int v90 = *(void *)v91;
            *((void *)v90 + 1) = v92;
            uint64_t v93 = v79[8];
            uint64_t v94 = &v77[v93];
            uint64_t v95 = &v78[v93];
            unint64_t v96 = *((void *)v95 + 1);
            swift_bridgeObjectRetain();
            if (v96 >> 60 == 15)
            {
              *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
            }
            else
            {
              uint64_t v97 = *(void *)v95;
              sub_252AC5A54(v97, v96);
              *(void *)uint64_t v94 = v97;
              *((void *)v94 + 1) = v96;
            }
            uint64_t v75 = v113;
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v77, 0, 1, (uint64_t)v79);
          }
          uint64_t v98 = v66[10];
          unint64_t v99 = (char *)a1 + v98;
          uint64_t v100 = (char *)a2 + v98;
          uint64_t v101 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v100, 1, v101))
          {
            uint64_t v102 = sub_252AC3A24(&qword_269C41AA8);
            memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            uint64_t v118 = v66;
            v75(v99, v100, v74);
            uint64_t v103 = *(int *)(v101 + 20);
            uint64_t v104 = &v99[v103];
            uint64_t v105 = &v100[v103];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v100[v103], 1, v74))
            {
              uint64_t v106 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              v75(v104, v105, v74);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v104, 0, 1, v74);
            }
            uint64_t v107 = *(int *)(v101 + 24);
            uint64_t v108 = &v99[v107];
            uint64_t v109 = &v100[v107];
            uint64_t v110 = sub_252D19C68();
            uint64_t v66 = v118;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v109, 1, v110))
            {
              uint64_t v111 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v108, 0, 1, v110);
            }
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v99, 0, 1, v101);
          }
          v121((char *)a1 + v66[11], (char *)a2 + v66[11], v123);
          break;
        case 3u:
          uint64_t v30 = sub_252D19588();
          uint64_t v31 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16);
          v31(a1, a2, v30);
          uint64_t v32 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          v31((uint64_t *)((char *)a1 + v32[5]), (uint64_t *)((char *)a2 + v32[5]), v30);
          uint64_t v33 = v32[6];
          uint64_t v34 = (char *)a1 + v33;
          int v35 = (char *)a2 + v33;
          *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
          uint64_t v36 = *((void *)v35 + 2);
          *((void *)v34 + 1) = *((void *)v35 + 1);
          *((void *)v34 + 2) = v36;
          *(uint64_t *)((char *)a1 + v32[7]) = *(uint64_t *)((char *)a2 + v32[7]);
          *(uint64_t *)((char *)a1 + v32[8]) = *(uint64_t *)((char *)a2 + v32[8]);
          uint64_t v37 = v32[9];
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v31((uint64_t *)v38, (uint64_t *)v39, v30);
          break;
        case 4u:
          uint64_t v41 = *a2;
          unint64_t v40 = a2[1];
          sub_252AC5A54(v41, v40);
          *a1 = v41;
          a1[1] = v40;
          break;
        case 5u:
          uint64_t v42 = *a2;
          unint64_t v43 = a2[1];
          sub_252AC5A54(*a2, v43);
          *a1 = v42;
          a1[1] = v43;
          uint64_t v44 = a2[3];
          a1[2] = a2[2];
          a1[3] = v44;
          uint64_t v45 = a2[4];
          uint64_t v46 = a2[5];
          a1[4] = v45;
          a1[5] = v46;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 6u:
          uint64_t v47 = *a2;
          unint64_t v48 = a2[1];
          sub_252AC5A54(*a2, v48);
          *a1 = v47;
          a1[1] = v48;
          uint64_t v49 = a2[3];
          a1[2] = a2[2];
          a1[3] = v49;
          uint64_t v50 = a2 + 4;
          unint64_t v51 = a2[5];
          swift_bridgeObjectRetain();
          if (v51 >> 60 == 15)
          {
            *((_OWORD *)a1 + 2) = *(_OWORD *)v50;
          }
          else
          {
            uint64_t v54 = *v50;
            sub_252AC5A54(*v50, v51);
            a1[4] = v54;
            a1[5] = v51;
          }
          uint64_t v55 = a2[7];
          a1[6] = a2[6];
          a1[7] = v55;
          swift_bridgeObjectRetain();
          break;
        case 7u:
          uint64_t v52 = sub_252D19C58();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
          break;
        case 8u:
          uint64_t v53 = a2[1];
          *a1 = *a2;
          a1[1] = v53;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v5 = sub_252D19588();
          uint64_t v6 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16);
          v6(a1, a2, v5);
          uint64_t v7 = (void (*)(char *, char *, uint64_t))v6;
          uint64_t v122 = (void (*)(char *, char *, uint64_t))v6;
          uint64_t v8 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v7((char *)a1 + v8[5], (char *)a2 + v8[5], v5);
          uint64_t v9 = v8[6];
          uint64_t v10 = (char *)a1 + v9;
          uint64_t v11 = (char *)a2 + v9;
          *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
          uint64_t v12 = *((void *)v11 + 2);
          *((void *)v10 + 1) = *((void *)v11 + 1);
          *((void *)v10 + 2) = v12;
          *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
          *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
          uint64_t v13 = v8[9];
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v122(v14, v15, v5);
          uint64_t v16 = v8[10];
          long long v17 = (uint64_t *)((char *)a1 + v16);
          unint64_t v18 = (uint64_t *)((char *)a2 + v16);
          uint64_t v19 = v18[1];
          void *v17 = *v18;
          v17[1] = v19;
          uint64_t v20 = v8[11];
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          swift_bridgeObjectRetain();
          v122(v21, v22, v5);
          break;
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 3u:
      uint64_t v23 = *a2;
      unint64_t v24 = a2[1];
      sub_252AC5A54(*a2, v24);
      *a1 = v23;
      a1[1] = v24;
      uint64_t v25 = a2[3];
      a1[2] = a2[2];
      a1[3] = v25;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ResponseOutput.VisualOutput(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_252B617B4((uint64_t)a1, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        type metadata accessor for RGPluginModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v22 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v22))
            {
              uint64_t v23 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v22);
            }
            uint64_t v45 = (int *)type metadata accessor for RGActionConfirmationModel(0);
            uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
            v106((char *)a1 + v45[5], (char *)a2 + v45[5], v22);
            uint64_t v46 = v45[6];
            uint64_t v47 = (char *)a1 + v46;
            unint64_t v48 = (char *)a2 + v46;
            *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
            *((void *)v47 + 1) = *((void *)v48 + 1);
            *((void *)v47 + 2) = *((void *)v48 + 2);
            uint64_t v49 = v45[7];
            uint64_t v50 = (char *)a1 + v49;
            unint64_t v51 = (char *)a2 + v49;
            uint64_t v52 = sub_252D19408();
            uint64_t v105 = v22;
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v50, v51, v52);
            v53((char *)a1 + v45[8], (char *)a2 + v45[8], v52);
            v106((char *)a1 + v45[9], (char *)a2 + v45[9], v105);
            break;
          case 2u:
            uint64_t v24 = sub_252D19588();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v24))
            {
              uint64_t v25 = sub_252AC3A24(&qword_26B2320E8);
              memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v24);
            }
            uint64_t v54 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
            uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
            uint64_t v109 = v24;
            v107((char *)a1 + v54[5], (char *)a2 + v54[5], v24);
            uint64_t v55 = v54[6];
            uint64_t v56 = (char *)a1 + v55;
            uint64_t v57 = (char *)a2 + v55;
            *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
            *((void *)v56 + 1) = *((void *)v57 + 1);
            *((void *)v56 + 2) = *((void *)v57 + 2);
            uint64_t v58 = v54[7];
            uint64_t v59 = (char *)a1 + v58;
            uint64_t v60 = (char *)a2 + v58;
            uint64_t v61 = sub_252D19408();
            uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
            swift_bridgeObjectRetain();
            v62(v59, v60, v61);
            v62((char *)a1 + v54[8], (char *)a2 + v54[8], v61);
            uint64_t v63 = v54[9];
            uint64_t v64 = (char *)a1 + v63;
            uint64_t v65 = (char *)a2 + v63;
            uint64_t v66 = (int *)type metadata accessor for RGDisplayRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v65, 1, (uint64_t)v66))
            {
              uint64_t v67 = sub_252AC3A24(&qword_269C41AA0);
              memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
            }
            else
            {
              uint64_t v103 = v54;
              v62(v64, v65, v61);
              uint64_t v68 = v66[5];
              __dst = &v64[v68];
              uint64_t v69 = &v65[v68];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v65[v68], 1, v61))
              {
                uint64_t v70 = sub_252AC3A24(&qword_269C41A90);
                memcpy(__dst, v69, *(void *)(*(void *)(v70 - 8) + 64));
              }
              else
              {
                v62(__dst, v69, v61);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v61);
              }
              uint64_t v71 = v66[6];
              __dsta = &v64[v71];
              uint64_t v72 = (uint64_t)&v65[v71];
              uint64_t v73 = sub_252D19C68();
              uint64_t v100 = (const void *)v72;
              int v74 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v72, 1, v73);
              uint64_t v54 = v103;
              unint64_t v99 = v62;
              if (v74)
              {
                uint64_t v75 = sub_252AC3A24(&qword_269C41A98);
                memcpy(__dsta, v100, *(void *)(*(void *)(v75 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(void *)(v73 - 8) + 16))(__dsta, v100, v73);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v73);
              }
              uint64_t v76 = v66[7];
              uint64_t v77 = &v64[v76];
              uint64_t v78 = &v65[v76];
              *(void *)uint64_t v77 = *(void *)v78;
              *((void *)v77 + 1) = *((void *)v78 + 1);
              uint64_t v79 = v66[8];
              uint64_t v80 = &v64[v79];
              uint64_t v81 = &v65[v79];
              unint64_t v82 = *((void *)v81 + 1);
              swift_bridgeObjectRetain();
              if (v82 >> 60 == 15)
              {
                *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
              }
              else
              {
                uint64_t v83 = *(void *)v81;
                sub_252AC5A54(v83, v82);
                *(void *)uint64_t v80 = v83;
                *((void *)v80 + 1) = v82;
              }
              uint64_t v62 = v99;
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, (uint64_t)v66);
            }
            uint64_t v84 = v54[10];
            uint64_t v85 = (char *)a1 + v84;
            uint64_t v86 = (char *)a2 + v84;
            uint64_t v87 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v86, 1, v87))
            {
              uint64_t v88 = sub_252AC3A24(&qword_269C41AA8);
              memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
            }
            else
            {
              uint64_t v104 = v54;
              v62(v85, v86, v61);
              uint64_t v89 = *(int *)(v87 + 20);
              int v90 = &v85[v89];
              uint64_t v91 = &v86[v89];
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v86[v89], 1, v61))
              {
                uint64_t v92 = sub_252AC3A24(&qword_269C41A90);
                memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
              }
              else
              {
                v62(v90, v91, v61);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v90, 0, 1, v61);
              }
              uint64_t v93 = *(int *)(v87 + 24);
              uint64_t v94 = &v85[v93];
              uint64_t v95 = &v86[v93];
              uint64_t v96 = sub_252D19C68();
              uint64_t v54 = v104;
              if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v95, 1, v96))
              {
                uint64_t v97 = sub_252AC3A24(&qword_269C41A98);
                memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
                _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v94, 0, 1, v96);
              }
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v85, 0, 1, v87);
            }
            v107((char *)a1 + v54[11], (char *)a2 + v54[11], v109);
            break;
          case 3u:
            uint64_t v26 = sub_252D19588();
            uint64_t v27 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16);
            v27(a1, a2, v26);
            uint64_t v28 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
            v27((uint64_t *)((char *)a1 + v28[5]), (uint64_t *)((char *)a2 + v28[5]), v26);
            uint64_t v29 = v28[6];
            uint64_t v30 = (char *)a1 + v29;
            uint64_t v31 = (char *)a2 + v29;
            *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
            *((void *)v30 + 1) = *((void *)v31 + 1);
            *((void *)v30 + 2) = *((void *)v31 + 2);
            *(uint64_t *)((char *)a1 + v28[7]) = *(uint64_t *)((char *)a2 + v28[7]);
            *(uint64_t *)((char *)a1 + v28[8]) = *(uint64_t *)((char *)a2 + v28[8]);
            uint64_t v32 = v28[9];
            uint64_t v33 = (char *)a1 + v32;
            uint64_t v34 = (char *)a2 + v32;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v27((uint64_t *)v33, (uint64_t *)v34, v26);
            break;
          case 4u:
            uint64_t v36 = *a2;
            unint64_t v35 = a2[1];
            sub_252AC5A54(v36, v35);
            *a1 = v36;
            a1[1] = v35;
            break;
          case 5u:
            uint64_t v37 = *a2;
            unint64_t v38 = a2[1];
            sub_252AC5A54(*a2, v38);
            *a1 = v37;
            a1[1] = v38;
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 6u:
            uint64_t v39 = *a2;
            unint64_t v40 = a2[1];
            sub_252AC5A54(*a2, v40);
            *a1 = v39;
            a1[1] = v40;
            a1[2] = a2[2];
            a1[3] = a2[3];
            uint64_t v41 = a2 + 4;
            unint64_t v42 = a2[5];
            swift_bridgeObjectRetain();
            if (v42 >> 60 == 15)
            {
              *((_OWORD *)a1 + 2) = *(_OWORD *)v41;
            }
            else
            {
              uint64_t v44 = *v41;
              sub_252AC5A54(*v41, v42);
              a1[4] = v44;
              a1[5] = v42;
            }
            a1[6] = a2[6];
            a1[7] = a2[7];
            swift_bridgeObjectRetain();
            break;
          case 7u:
            uint64_t v43 = sub_252D19C58();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
            break;
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v4 = sub_252D19588();
            uint64_t v5 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16);
            v5(a1, a2, v4);
            uint64_t v6 = (void (*)(char *, char *, uint64_t))v5;
            uint64_t v108 = (void (*)(char *, char *, uint64_t))v5;
            uint64_t v7 = (int *)type metadata accessor for RGDisambiguationModel(0);
            v6((char *)a1 + v7[5], (char *)a2 + v7[5], v4);
            uint64_t v8 = v7[6];
            uint64_t v9 = (char *)a1 + v8;
            uint64_t v10 = (char *)a2 + v8;
            *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
            *((void *)v9 + 1) = *((void *)v10 + 1);
            *((void *)v9 + 2) = *((void *)v10 + 2);
            *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
            *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
            uint64_t v11 = v7[9];
            uint64_t v12 = (char *)a1 + v11;
            uint64_t v13 = (char *)a2 + v11;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v108(v12, v13, v4);
            uint64_t v14 = v7[10];
            uint64_t v15 = (uint64_t *)((char *)a1 + v14);
            uint64_t v16 = (uint64_t *)((char *)a2 + v14);
            *uint64_t v15 = *v16;
            v15[1] = v16[1];
            uint64_t v17 = v7[11];
            unint64_t v18 = (char *)a1 + v17;
            uint64_t v19 = (char *)a2 + v17;
            swift_bridgeObjectRetain();
            v108(v18, v19, v4);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v20 = *a2;
        unint64_t v21 = a2[1];
        sub_252AC5A54(*a2, v21);
        *a1 = v20;
        a1[1] = v21;
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ResponseOutput.VisualOutput(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = type metadata accessor for RGPluginModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_252D19588();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        uint64_t v9 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v8(&a1[v9[5]], &a2[v9[5]], v7);
        uint64_t v10 = v9[6];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
        *((void *)v11 + 2) = *((void *)v12 + 2);
        *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
        *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
        v8(&a1[v9[9]], &a2[v9[9]], v7);
        *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
        v8(&a1[v9[11]], &a2[v9[11]], v7);
        goto LABEL_34;
      case 1u:
        uint64_t v13 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
        }
        uint64_t v24 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        unint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
        v82(&a1[v24[5]], &a2[v24[5]], v13);
        uint64_t v25 = v24[6];
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((void *)v26 + 2) = *((void *)v27 + 2);
        uint64_t v28 = v24[7];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = sub_252D19408();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
        v32(v29, v30, v31);
        v32(&a1[v24[8]], &a2[v24[8]], v31);
        v82(&a1[v24[9]], &a2[v24[9]], v13);
        goto LABEL_34;
      case 2u:
        uint64_t v15 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v15))
        {
          uint64_t v16 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v15);
        }
        uint64_t v33 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        uint64_t v84 = v15;
        v83(&a1[v33[5]], &a2[v33[5]], v15);
        uint64_t v34 = v33[6];
        unint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        *(_OWORD *)unint64_t v35 = *(_OWORD *)v36;
        *((void *)v35 + 2) = *((void *)v36 + 2);
        uint64_t v37 = v33[7];
        unint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = sub_252D19408();
        uint64_t v41 = (void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32);
        unint64_t v42 = v38;
        uint64_t v43 = *v41;
        (*v41)(v42, v39, v40);
        v43(&a1[v33[8]], &a2[v33[8]], v40);
        uint64_t v44 = v33[9];
        uint64_t v45 = &a1[v44];
        uint64_t v46 = &a2[v44];
        uint64_t v47 = type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
          uint64_t v49 = v40;
        }
        else
        {
          uint64_t v81 = v33;
          v43(v45, v46, v40);
          uint64_t v77 = v47;
          uint64_t v78 = (uint64_t)v45;
          uint64_t v50 = *(int *)(v47 + 20);
          unint64_t v51 = &v45[v50];
          uint64_t v52 = v43;
          uint64_t v53 = &v46[v50];
          uint64_t v79 = v52;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v46[v50], 1, v40))
          {
            uint64_t v54 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v51, v53, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            v52(v51, v53, v40);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v51, 0, 1, v40);
          }
          uint64_t v49 = v40;
          uint64_t v55 = *(int *)(v47 + 24);
          __dst = (void *)(v78 + v55);
          uint64_t v56 = (uint64_t)&v46[v55];
          uint64_t v57 = sub_252D19C68();
          uint64_t v58 = (const void *)v56;
          int v59 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v56, 1, v57);
          uint64_t v33 = v81;
          if (v59)
          {
            uint64_t v60 = sub_252AC3A24(&qword_269C41A98);
            memcpy(__dst, v58, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 32))(__dst, v58, v57);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v57);
          }
          *(_OWORD *)(v78 + *(int *)(v77 + 28)) = *(_OWORD *)&v46[*(int *)(v77 + 28)];
          *(_OWORD *)(v78 + *(int *)(v77 + 32)) = *(_OWORD *)&v46[*(int *)(v77 + 32)];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v78, 0, 1, v77);
          uint64_t v43 = v79;
        }
        uint64_t v61 = v33[10];
        uint64_t v62 = &a1[v61];
        uint64_t v63 = &a2[v61];
        uint64_t v64 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          v43(v62, v63, v49);
          uint64_t v66 = *(int *)(v64 + 20);
          uint64_t v67 = &v62[v66];
          uint64_t v80 = v43;
          uint64_t v68 = &v63[v66];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v63[v66], 1, v49))
          {
            uint64_t v69 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            v80(v67, v68, v49);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, v49);
          }
          uint64_t v70 = *(int *)(v64 + 24);
          uint64_t v71 = &v62[v70];
          uint64_t v72 = &v63[v70];
          uint64_t v73 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v72, 1, v73))
          {
            uint64_t v74 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v71, 0, 1, v73);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v64);
        }
        v83(&a1[v33[11]], &a2[v33[11]], v84);
        goto LABEL_34;
      case 3u:
        uint64_t v17 = sub_252D19588();
        unint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v18(a1, a2, v17);
        uint64_t v19 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v18(&a1[v19[5]], &a2[v19[5]], v17);
        uint64_t v20 = v19[6];
        unint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
        *((void *)v21 + 2) = *((void *)v22 + 2);
        *(void *)&a1[v19[7]] = *(void *)&a2[v19[7]];
        *(void *)&a1[v19[8]] = *(void *)&a2[v19[8]];
        v18(&a1[v19[9]], &a2[v19[9]], v17);
        goto LABEL_34;
      case 7u:
        uint64_t v23 = sub_252D19C58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_34:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ResponseOutput.VisualOutput(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252B617B4((uint64_t)a1, (void (*)(void))type metadata accessor for ResponseOutput.VisualOutput);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = type metadata accessor for RGPluginModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v7 = sub_252D19588();
          uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
          v8(a1, a2, v7);
          uint64_t v9 = (int *)type metadata accessor for RGDisambiguationModel(0);
          v8(&a1[v9[5]], &a2[v9[5]], v7);
          uint64_t v10 = v9[6];
          uint64_t v11 = &a1[v10];
          uint64_t v12 = &a2[v10];
          *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
          *((void *)v11 + 2) = *((void *)v12 + 2);
          *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
          *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
          v8(&a1[v9[9]], &a2[v9[9]], v7);
          *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
          v8(&a1[v9[11]], &a2[v9[11]], v7);
          goto LABEL_35;
        case 1u:
          uint64_t v13 = sub_252D19588();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
          {
            uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
          }
          uint64_t v24 = (int *)type metadata accessor for RGActionConfirmationModel(0);
          unint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
          v82(&a1[v24[5]], &a2[v24[5]], v13);
          uint64_t v25 = v24[6];
          uint64_t v26 = &a1[v25];
          uint64_t v27 = &a2[v25];
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
          *((void *)v26 + 2) = *((void *)v27 + 2);
          uint64_t v28 = v24[7];
          uint64_t v29 = &a1[v28];
          uint64_t v30 = &a2[v28];
          uint64_t v31 = sub_252D19408();
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
          v32(v29, v30, v31);
          v32(&a1[v24[8]], &a2[v24[8]], v31);
          v82(&a1[v24[9]], &a2[v24[9]], v13);
          goto LABEL_35;
        case 2u:
          uint64_t v15 = sub_252D19588();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v15))
          {
            uint64_t v16 = sub_252AC3A24(&qword_26B2320E8);
            memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v15);
          }
          uint64_t v33 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
          uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
          uint64_t v84 = v15;
          v83(&a1[v33[5]], &a2[v33[5]], v15);
          uint64_t v34 = v33[6];
          unint64_t v35 = &a1[v34];
          uint64_t v36 = &a2[v34];
          *(_OWORD *)unint64_t v35 = *(_OWORD *)v36;
          *((void *)v35 + 2) = *((void *)v36 + 2);
          uint64_t v37 = v33[7];
          unint64_t v38 = &a1[v37];
          uint64_t v39 = &a2[v37];
          uint64_t v40 = sub_252D19408();
          uint64_t v41 = (void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32);
          unint64_t v42 = v38;
          uint64_t v43 = *v41;
          (*v41)(v42, v39, v40);
          v43(&a1[v33[8]], &a2[v33[8]], v40);
          uint64_t v44 = v33[9];
          uint64_t v45 = &a1[v44];
          uint64_t v46 = &a2[v44];
          uint64_t v47 = type metadata accessor for RGDisplayRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = sub_252AC3A24(&qword_269C41AA0);
            memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
            uint64_t v49 = v40;
          }
          else
          {
            uint64_t v81 = v33;
            v43(v45, v46, v40);
            uint64_t v77 = v47;
            uint64_t v78 = (uint64_t)v45;
            uint64_t v50 = *(int *)(v47 + 20);
            unint64_t v51 = &v45[v50];
            uint64_t v52 = v43;
            uint64_t v53 = &v46[v50];
            uint64_t v79 = v52;
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v46[v50], 1, v40))
            {
              uint64_t v54 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v51, v53, *(void *)(*(void *)(v54 - 8) + 64));
            }
            else
            {
              v52(v51, v53, v40);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v51, 0, 1, v40);
            }
            uint64_t v49 = v40;
            uint64_t v55 = *(int *)(v47 + 24);
            __dst = (void *)(v78 + v55);
            uint64_t v56 = (uint64_t)&v46[v55];
            uint64_t v57 = sub_252D19C68();
            uint64_t v58 = (const void *)v56;
            int v59 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v56, 1, v57);
            uint64_t v33 = v81;
            if (v59)
            {
              uint64_t v60 = sub_252AC3A24(&qword_269C41A98);
              memcpy(__dst, v58, *(void *)(*(void *)(v60 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 32))(__dst, v58, v57);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v57);
            }
            *(_OWORD *)(v78 + *(int *)(v77 + 28)) = *(_OWORD *)&v46[*(int *)(v77 + 28)];
            *(_OWORD *)(v78 + *(int *)(v77 + 32)) = *(_OWORD *)&v46[*(int *)(v77 + 32)];
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v78, 0, 1, v77);
            uint64_t v43 = v79;
          }
          uint64_t v61 = v33[10];
          uint64_t v62 = &a1[v61];
          uint64_t v63 = &a2[v61];
          uint64_t v64 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = sub_252AC3A24(&qword_269C41AA8);
            memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            v43(v62, v63, v49);
            uint64_t v66 = *(int *)(v64 + 20);
            uint64_t v67 = &v62[v66];
            uint64_t v80 = v43;
            uint64_t v68 = &v63[v66];
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v63[v66], 1, v49))
            {
              uint64_t v69 = sub_252AC3A24(&qword_269C41A90);
              memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              v80(v67, v68, v49);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, v49);
            }
            uint64_t v70 = *(int *)(v64 + 24);
            uint64_t v71 = &v62[v70];
            uint64_t v72 = &v63[v70];
            uint64_t v73 = sub_252D19C68();
            if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v72, 1, v73))
            {
              uint64_t v74 = sub_252AC3A24(&qword_269C41A98);
              memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
              _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v71, 0, 1, v73);
            }
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v62, 0, 1, v64);
          }
          v83(&a1[v33[11]], &a2[v33[11]], v84);
          goto LABEL_35;
        case 3u:
          uint64_t v17 = sub_252D19588();
          unint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
          v18(a1, a2, v17);
          uint64_t v19 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
          v18(&a1[v19[5]], &a2[v19[5]], v17);
          uint64_t v20 = v19[6];
          unint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
          *((void *)v21 + 2) = *((void *)v22 + 2);
          *(void *)&a1[v19[7]] = *(void *)&a2[v19[7]];
          *(void *)&a1[v19[8]] = *(void *)&a2[v19[8]];
          v18(&a1[v19[9]], &a2[v19[9]], v17);
          goto LABEL_35;
        case 7u:
          uint64_t v23 = sub_252D19C58();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_252B71650()
{
  uint64_t result = type metadata accessor for RGPluginModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for ResponseOutput.VisualOutput.LiveActivityOutputPayload()
{
}

void type metadata accessor for ResponseOutput.VisualOutput.InAppResponseOutputPayload()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t *a1, void *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for RGPluginModel(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v24 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v24))
        {
          uint64_t v25 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v24);
        }
        uint64_t v54 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        v117((char *)a1 + v54[5], (char *)a2 + v54[5], v24);
        uint64_t v55 = v54[6];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
        uint64_t v58 = *((void *)v57 + 2);
        *((void *)v56 + 1) = *((void *)v57 + 1);
        *((void *)v56 + 2) = v58;
        uint64_t v59 = v54[7];
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = sub_252D19408();
        uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v63(v60, v61, v62);
        v63((char *)a1 + v54[8], (char *)a2 + v54[8], v62);
        v117((char *)a1 + v54[9], (char *)a2 + v54[9], v24);
        break;
      case 2u:
        uint64_t v26 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v26))
        {
          uint64_t v27 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v26);
        }
        uint64_t v64 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        v118((char *)a1 + v64[5], (char *)a2 + v64[5], v26);
        uint64_t v65 = v64[6];
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
        uint64_t v68 = *((void *)v67 + 2);
        *((void *)v66 + 1) = *((void *)v67 + 1);
        *((void *)v66 + 2) = v68;
        uint64_t v69 = v64[7];
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = sub_252D19408();
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        v73(v70, v71, v72);
        v73((char *)a1 + v64[8], (char *)a2 + v64[8], v72);
        uint64_t v120 = v64;
        uint64_t v74 = v64[9];
        uint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        uint64_t v77 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v76, 1, (uint64_t)v77))
        {
          uint64_t v78 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
          uint64_t v79 = v120;
        }
        else
        {
          uint64_t v115 = v26;
          v73(v75, v76, v72);
          uint64_t v80 = v77[5];
          __dst = &v75[v80];
          uint64_t v81 = &v76[v80];
          uint64_t v113 = v73;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v76[v80], 1, v72))
          {
            uint64_t v82 = sub_252AC3A24(&qword_269C41A90);
            memcpy(__dst, v81, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            v73(__dst, v81, v72);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v72);
          }
          uint64_t v83 = v77[6];
          __dsta = &v75[v83];
          uint64_t v84 = &v76[v83];
          uint64_t v85 = sub_252D19C68();
          uint64_t v79 = v120;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v84, 1, v85))
          {
            uint64_t v86 = sub_252AC3A24(&qword_269C41A98);
            memcpy(__dsta, v84, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(__dsta, v84, v85);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v85);
          }
          uint64_t v87 = v77[7];
          uint64_t v88 = &v75[v87];
          uint64_t v89 = &v76[v87];
          uint64_t v90 = *((void *)v89 + 1);
          *(void *)uint64_t v88 = *(void *)v89;
          *((void *)v88 + 1) = v90;
          uint64_t v91 = v77[8];
          uint64_t v92 = &v75[v91];
          uint64_t v93 = &v76[v91];
          unint64_t v94 = *((void *)v93 + 1);
          swift_bridgeObjectRetain();
          if (v94 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
          }
          else
          {
            uint64_t v95 = *(void *)v93;
            sub_252AC5A54(v95, v94);
            *(void *)uint64_t v92 = v95;
            *((void *)v92 + 1) = v94;
          }
          uint64_t v26 = v115;
          uint64_t v73 = v113;
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
        }
        uint64_t v96 = v79[10];
        uint64_t v97 = (char *)a1 + v96;
        uint64_t v98 = (char *)a2 + v96;
        uint64_t v99 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          uint64_t v116 = v26;
          v73(v97, v98, v72);
          uint64_t v101 = *(int *)(v99 + 20);
          uint64_t v114 = v73;
          uint64_t v102 = &v97[v101];
          uint64_t v103 = &v98[v101];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v98[v101], 1, v72))
          {
            uint64_t v104 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            v114(v102, v103, v72);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v102, 0, 1, v72);
          }
          uint64_t v105 = *(int *)(v99 + 24);
          uint64_t v106 = &v97[v105];
          uint64_t v107 = &v98[v105];
          uint64_t v108 = sub_252D19C68();
          uint64_t v26 = v116;
          uint64_t v79 = v120;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v107, 1, v108))
          {
            uint64_t v109 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v106, 0, 1, v108);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v97, 0, 1, v99);
        }
        v118((char *)a1 + v79[11], (char *)a2 + v79[11], v26);
        break;
      case 3u:
        uint64_t v28 = sub_252D19588();
        uint64_t v29 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(a1, (char *)a2, v28);
        uint64_t v30 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v29((uint64_t *)((char *)a1 + v30[5]), (char *)a2 + v30[5], v28);
        uint64_t v31 = v30[6];
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
        uint64_t v34 = *((void *)v33 + 2);
        *((void *)v32 + 1) = *((void *)v33 + 1);
        *((void *)v32 + 2) = v34;
        *(uint64_t *)((char *)a1 + v30[7]) = *(void *)((char *)a2 + v30[7]);
        *(uint64_t *)((char *)a1 + v30[8]) = *(void *)((char *)a2 + v30[8]);
        uint64_t v35 = v30[9];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29((uint64_t *)v36, v37, v28);
        break;
      case 4u:
        uint64_t v39 = *a2;
        unint64_t v38 = a2[1];
        sub_252AC5A54(v39, v38);
        *a1 = v39;
        a1[1] = v38;
        break;
      case 5u:
        uint64_t v40 = *a2;
        unint64_t v41 = a2[1];
        sub_252AC5A54(*a2, v41);
        *a1 = v40;
        a1[1] = v41;
        uint64_t v42 = a2[3];
        a1[2] = a2[2];
        a1[3] = v42;
        uint64_t v43 = a2[4];
        uint64_t v44 = a2[5];
        a1[4] = v43;
        a1[5] = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v45 = *a2;
        unint64_t v46 = a2[1];
        sub_252AC5A54(*a2, v46);
        *a1 = v45;
        a1[1] = v46;
        uint64_t v47 = a2[3];
        a1[2] = a2[2];
        a1[3] = v47;
        uint64_t v48 = a2 + 4;
        unint64_t v49 = a2[5];
        swift_bridgeObjectRetain();
        if (v49 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *v48;
        }
        else
        {
          uint64_t v52 = *(void *)v48;
          sub_252AC5A54(v52, v49);
          a1[4] = v52;
          a1[5] = v49;
        }
        uint64_t v53 = a2[7];
        a1[6] = a2[6];
        a1[7] = v53;
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v50 = sub_252D19C58();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        break;
      case 8u:
        uint64_t v51 = a2[1];
        *a1 = *a2;
        a1[1] = v51;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v5 = sub_252D19588();
        uint64_t v6 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16);
        v6((char *)a1, (char *)a2, v5);
        uint64_t v7 = v6;
        uint64_t v119 = v6;
        uint64_t v8 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v7((char *)a1 + v8[5], (char *)a2 + v8[5], v5);
        uint64_t v9 = v8[6];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
        uint64_t v12 = *((void *)v11 + 2);
        *((void *)v10 + 1) = *((void *)v11 + 1);
        *((void *)v10 + 2) = v12;
        *(uint64_t *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
        *(uint64_t *)((char *)a1 + v8[8]) = *(void *)((char *)a2 + v8[8]);
        uint64_t v13 = v8[9];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v119(v14, v15, v5);
        uint64_t v16 = v8[10];
        uint64_t v17 = (uint64_t *)((char *)a1 + v16);
        unint64_t v18 = (void *)((char *)a2 + v16);
        uint64_t v19 = v18[1];
        void *v17 = *v18;
        v17[1] = v19;
        uint64_t v20 = v8[11];
        unint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        swift_bridgeObjectRetain();
        v119(v21, v22, v5);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t *a1)
{
  type metadata accessor for RGPluginModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_252D19588();
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t *, uint64_t))v32)((void *)(v3 - 8), a1, v3);
      int v4 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v32((char *)a1 + v4[5], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32((char *)a1 + v4[9], v3);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 1:
      uint64_t v3 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3)) {
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      }
      uint64_t v5 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      v32((char *)a1 + v5[5], v3);
      swift_bridgeObjectRelease();
      uint64_t v6 = (char *)a1 + v5[7];
      uint64_t v7 = sub_252D19408();
      uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v6, v7);
      v8((char *)a1 + v5[8], v7);
      goto LABEL_22;
    case 2:
      uint64_t v3 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3)) {
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      }
      int v4 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      v32((char *)a1 + v4[5], v3);
      swift_bridgeObjectRelease();
      uint64_t v9 = (char *)a1 + v4[7];
      uint64_t v10 = sub_252D19408();
      uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(v9, v10);
      v11((char *)a1 + v4[8], v10);
      uint64_t v12 = (uint64_t)a1 + v4[9];
      uint64_t v13 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, (uint64_t)v13))
      {
        v11((char *)v12, v10);
        uint64_t v14 = v12 + v13[5];
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v14, 1, v10)) {
          v11((char *)v14, v10);
        }
        uint64_t v15 = v12 + v13[6];
        uint64_t v16 = sub_252D19C68();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v15, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
        }
        swift_bridgeObjectRelease();
        uint64_t v17 = (uint64_t *)(v12 + v13[8]);
        unint64_t v18 = v17[1];
        if (v18 >> 60 != 15) {
          sub_252AC5C14(*v17, v18);
        }
      }
      uint64_t v19 = (uint64_t)a1 + v4[10];
      uint64_t v20 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
      {
        v11((char *)v19, v10);
        uint64_t v21 = v19 + *(int *)(v20 + 20);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, 1, v10)) {
          v11((char *)v21, v10);
        }
        uint64_t v22 = v19 + *(int *)(v20 + 24);
        uint64_t v23 = sub_252D19C68();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v23)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        }
      }
LABEL_20:
      uint64_t v24 = v4[11];
      goto LABEL_23;
    case 3:
      uint64_t v3 = sub_252D19588();
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t *, uint64_t))v32)((void *)(v3 - 8), a1, v3);
      uint64_t v5 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v32((char *)a1 + v5[5], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_22:
      uint64_t v24 = v5[9];
LABEL_23:
      uint64_t v25 = (uint64_t *)((char *)a1 + v24);
      uint64_t v26 = v3;
      uint64_t v27 = (uint64_t (*)(uint64_t *, uint64_t))v32;
      goto LABEL_24;
    case 4:
      uint64_t v28 = *a1;
      unint64_t v29 = a1[1];
      return sub_252AC5C14(v28, v29);
    case 5:
      sub_252AC5C14(*a1, a1[1]);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 6:
      sub_252AC5C14(*a1, a1[1]);
      swift_bridgeObjectRelease();
      unint64_t v30 = a1[5];
      if (v30 >> 60 != 15) {
        sub_252AC5C14(a1[4], v30);
      }
      goto LABEL_35;
    case 7:
      uint64_t v31 = sub_252D19C58();
      uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v31 - 8) + 8);
      uint64_t v26 = v31;
      uint64_t v25 = a1;
LABEL_24:
      uint64_t result = v27(v25, v26);
      break;
    case 8:
LABEL_35:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t *a1, uint64_t *a2)
{
  type metadata accessor for RGPluginModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v21))
      {
        uint64_t v22 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v21);
      }
      uint64_t v51 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v114((char *)a1 + v51[5], (char *)a2 + v51[5], v21);
      uint64_t v52 = v51[6];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      uint64_t v55 = *((void *)v54 + 2);
      *((void *)v53 + 1) = *((void *)v54 + 1);
      *((void *)v53 + 2) = v55;
      uint64_t v56 = v51[7];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_252D19408();
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v60(v57, v58, v59);
      v60((char *)a1 + v51[8], (char *)a2 + v51[8], v59);
      v114((char *)a1 + v51[9], (char *)a2 + v51[9], v21);
      break;
    case 2u:
      uint64_t v23 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v23))
      {
        uint64_t v24 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v23);
      }
      uint64_t v61 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      v115((char *)a1 + v61[5], (char *)a2 + v61[5], v23);
      uint64_t v62 = v61[6];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
      uint64_t v65 = *((void *)v64 + 2);
      *((void *)v63 + 1) = *((void *)v64 + 1);
      *((void *)v63 + 2) = v65;
      uint64_t v66 = v61[7];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = sub_252D19408();
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
      swift_bridgeObjectRetain();
      v70(v67, v68, v69);
      v70((char *)a1 + v61[8], (char *)a2 + v61[8], v69);
      uint64_t v116 = v61;
      uint64_t v71 = v61[9];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      uint64_t v74 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v73, 1, (uint64_t)v74))
      {
        uint64_t v75 = sub_252AC3A24(&qword_269C41AA0);
        memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        uint64_t v76 = v116;
      }
      else
      {
        uint64_t v112 = v23;
        v70(v72, v73, v69);
        uint64_t v77 = v74[5];
        uint64_t v78 = &v72[v77];
        uint64_t v79 = &v73[v77];
        uint64_t v111 = v70;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v73[v77], 1, v69))
        {
          uint64_t v80 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          v70(v78, v79, v69);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v69);
        }
        uint64_t v81 = v74[6];
        uint64_t v82 = &v72[v81];
        uint64_t v83 = &v73[v81];
        uint64_t v84 = sub_252D19C68();
        uint64_t v76 = v116;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v83, 1, v84))
        {
          uint64_t v85 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v82, 0, 1, v84);
        }
        uint64_t v86 = v74[7];
        uint64_t v87 = &v72[v86];
        uint64_t v88 = &v73[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)uint64_t v87 = *(void *)v88;
        *((void *)v87 + 1) = v89;
        uint64_t v90 = v74[8];
        uint64_t v91 = &v72[v90];
        uint64_t v92 = &v73[v90];
        unint64_t v93 = *((void *)v92 + 1);
        swift_bridgeObjectRetain();
        if (v93 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
        }
        else
        {
          uint64_t v94 = *(void *)v92;
          sub_252AC5A54(v94, v93);
          *(void *)uint64_t v91 = v94;
          *((void *)v91 + 1) = v93;
        }
        uint64_t v23 = v112;
        uint64_t v70 = v111;
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v72, 0, 1, (uint64_t)v74);
      }
      uint64_t v95 = v76[10];
      uint64_t v96 = (char *)a1 + v95;
      uint64_t v97 = (char *)a2 + v95;
      uint64_t v98 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v98))
      {
        uint64_t v99 = sub_252AC3A24(&qword_269C41AA8);
        memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        uint64_t v113 = v23;
        v70(v96, v97, v69);
        uint64_t v100 = *(int *)(v98 + 20);
        uint64_t v101 = v70;
        uint64_t v102 = &v96[v100];
        uint64_t v103 = &v97[v100];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v97[v100], 1, v69))
        {
          uint64_t v104 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          v101(v102, v103, v69);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v102, 0, 1, v69);
        }
        uint64_t v105 = *(int *)(v98 + 24);
        uint64_t v106 = &v96[v105];
        uint64_t v107 = &v97[v105];
        uint64_t v108 = sub_252D19C68();
        uint64_t v76 = v116;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v106, 0, 1, v108);
        }
        uint64_t v23 = v113;
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v96, 0, 1, v98);
      }
      v115((char *)a1 + v76[11], (char *)a2 + v76[11], v23);
      break;
    case 3u:
      uint64_t v25 = sub_252D19588();
      uint64_t v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16);
      v26(a1, a2, v25);
      uint64_t v27 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v26((uint64_t *)((char *)a1 + v27[5]), (uint64_t *)((char *)a2 + v27[5]), v25);
      uint64_t v28 = v27[6];
      unint64_t v29 = (char *)a1 + v28;
      unint64_t v30 = (char *)a2 + v28;
      *(_DWORD *)unint64_t v29 = *(_DWORD *)v30;
      uint64_t v31 = *((void *)v30 + 2);
      *((void *)v29 + 1) = *((void *)v30 + 1);
      *((void *)v29 + 2) = v31;
      *(uint64_t *)((char *)a1 + v27[7]) = *(uint64_t *)((char *)a2 + v27[7]);
      *(uint64_t *)((char *)a1 + v27[8]) = *(uint64_t *)((char *)a2 + v27[8]);
      uint64_t v32 = v27[9];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26((uint64_t *)v33, (uint64_t *)v34, v25);
      break;
    case 4u:
      uint64_t v36 = *a2;
      unint64_t v35 = a2[1];
      sub_252AC5A54(v36, v35);
      *a1 = v36;
      a1[1] = v35;
      break;
    case 5u:
      uint64_t v37 = *a2;
      unint64_t v38 = a2[1];
      sub_252AC5A54(*a2, v38);
      *a1 = v37;
      a1[1] = v38;
      uint64_t v39 = a2[3];
      a1[2] = a2[2];
      a1[3] = v39;
      uint64_t v40 = a2[4];
      uint64_t v41 = a2[5];
      a1[4] = v40;
      a1[5] = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 6u:
      uint64_t v42 = *a2;
      unint64_t v43 = a2[1];
      sub_252AC5A54(*a2, v43);
      *a1 = v42;
      a1[1] = v43;
      uint64_t v44 = a2[3];
      a1[2] = a2[2];
      a1[3] = v44;
      uint64_t v45 = a2 + 4;
      unint64_t v46 = a2[5];
      swift_bridgeObjectRetain();
      if (v46 >> 60 == 15)
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v45;
      }
      else
      {
        uint64_t v49 = *v45;
        sub_252AC5A54(*v45, v46);
        a1[4] = v49;
        a1[5] = v46;
      }
      uint64_t v50 = a2[7];
      a1[6] = a2[6];
      a1[7] = v50;
      swift_bridgeObjectRetain();
      break;
    case 7u:
      uint64_t v47 = sub_252D19C58();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
      break;
    case 8u:
      uint64_t v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_252D19588();
      uint64_t v5 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v6 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v5((uint64_t *)((char *)a1 + v6[5]), (uint64_t *)((char *)a2 + v6[5]), v4);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v10 = *((void *)v9 + 2);
      *((void *)v8 + 1) = *((void *)v9 + 1);
      *((void *)v8 + 2) = v10;
      *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
      *(uint64_t *)((char *)a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
      uint64_t v11 = v6[9];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5((uint64_t *)v12, (uint64_t *)v13, v4);
      uint64_t v14 = v6[10];
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = v6[11];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      swift_bridgeObjectRetain();
      v5((uint64_t *)v19, (uint64_t *)v20, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_252B617B4((uint64_t)a1, (void (*)(void))type metadata accessor for RGPluginModel);
    type metadata accessor for RGPluginModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v19))
        {
          uint64_t v20 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v19);
        }
        uint64_t v42 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        v102((char *)a1 + v42[5], (char *)a2 + v42[5], v19);
        uint64_t v43 = v42[6];
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        *((void *)v44 + 2) = *((void *)v45 + 2);
        uint64_t v46 = v42[7];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        uint64_t v49 = sub_252D19408();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v47, v48, v49);
        v50((char *)a1 + v42[8], (char *)a2 + v42[8], v49);
        v102((char *)a1 + v42[9], (char *)a2 + v42[9], v19);
        break;
      case 2u:
        uint64_t v21 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v21))
        {
          uint64_t v22 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v21);
        }
        uint64_t v51 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        v103((char *)a1 + v51[5], (char *)a2 + v51[5], v21);
        uint64_t v52 = v51[6];
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        *((void *)v53 + 1) = *((void *)v54 + 1);
        *((void *)v53 + 2) = *((void *)v54 + 2);
        uint64_t v55 = v51[7];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = sub_252D19408();
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v56, v57, v58);
        v59((char *)a1 + v51[8], (char *)a2 + v51[8], v58);
        uint64_t v104 = v51;
        uint64_t v60 = v51[9];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v62, 1, (uint64_t)v63))
        {
          uint64_t v64 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          uint64_t v65 = v104;
        }
        else
        {
          uint64_t v100 = v21;
          v59(v61, v62, v58);
          uint64_t v66 = v63[5];
          uint64_t v67 = &v61[v66];
          uint64_t v68 = &v62[v66];
          uint64_t v99 = v59;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v62[v66], 1, v58))
          {
            uint64_t v69 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            v59(v67, v68, v58);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, v58);
          }
          uint64_t v65 = v104;
          uint64_t v70 = v63[6];
          uint64_t v71 = &v61[v70];
          uint64_t v72 = &v62[v70];
          uint64_t v73 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v72, 1, v73))
          {
            uint64_t v74 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v71, 0, 1, v73);
          }
          uint64_t v75 = v63[7];
          uint64_t v76 = &v61[v75];
          uint64_t v77 = &v62[v75];
          *(void *)uint64_t v76 = *(void *)v77;
          *((void *)v76 + 1) = *((void *)v77 + 1);
          uint64_t v78 = v63[8];
          uint64_t v79 = &v61[v78];
          uint64_t v80 = &v62[v78];
          unint64_t v81 = *((void *)v80 + 1);
          swift_bridgeObjectRetain();
          if (v81 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
          }
          else
          {
            uint64_t v82 = *(void *)v80;
            sub_252AC5A54(v82, v81);
            *(void *)uint64_t v79 = v82;
            *((void *)v79 + 1) = v81;
          }
          uint64_t v21 = v100;
          uint64_t v59 = v99;
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
        }
        uint64_t v83 = v65[10];
        uint64_t v84 = (char *)a1 + v83;
        uint64_t v85 = (char *)a2 + v83;
        uint64_t v86 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
          v103((char *)a1 + v65[11], (char *)a2 + v65[11], v21);
        }
        else
        {
          uint64_t v101 = v21;
          v59(v84, v85, v58);
          uint64_t v88 = *(int *)(v86 + 20);
          uint64_t v89 = v59;
          uint64_t v90 = &v84[v88];
          uint64_t v91 = &v85[v88];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v85[v88], 1, v58))
          {
            uint64_t v92 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            v89(v90, v91, v58);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v90, 0, 1, v58);
          }
          uint64_t v93 = *(int *)(v86 + 24);
          uint64_t v94 = &v84[v93];
          uint64_t v95 = &v85[v93];
          uint64_t v96 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v95, 1, v96))
          {
            uint64_t v97 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v94, 0, 1, v96);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v84, 0, 1, v86);
          v103((char *)a1 + v104[11], (char *)a2 + v104[11], v101);
        }
        break;
      case 3u:
        uint64_t v23 = sub_252D19588();
        uint64_t v24 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        uint64_t v25 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v24((uint64_t *)((char *)a1 + v25[5]), (uint64_t *)((char *)a2 + v25[5]), v23);
        uint64_t v26 = v25[6];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
        *((void *)v27 + 1) = *((void *)v28 + 1);
        *((void *)v27 + 2) = *((void *)v28 + 2);
        *(uint64_t *)((char *)a1 + v25[7]) = *(uint64_t *)((char *)a2 + v25[7]);
        *(uint64_t *)((char *)a1 + v25[8]) = *(uint64_t *)((char *)a2 + v25[8]);
        uint64_t v29 = v25[9];
        unint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24((uint64_t *)v30, (uint64_t *)v31, v23);
        break;
      case 4u:
        uint64_t v33 = *a2;
        unint64_t v32 = a2[1];
        sub_252AC5A54(v33, v32);
        *a1 = v33;
        a1[1] = v32;
        break;
      case 5u:
        uint64_t v34 = *a2;
        unint64_t v35 = a2[1];
        sub_252AC5A54(*a2, v35);
        *a1 = v34;
        a1[1] = v35;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v36 = *a2;
        unint64_t v37 = a2[1];
        sub_252AC5A54(*a2, v37);
        *a1 = v36;
        a1[1] = v37;
        a1[2] = a2[2];
        a1[3] = a2[3];
        unint64_t v38 = a2 + 4;
        unint64_t v39 = a2[5];
        swift_bridgeObjectRetain();
        if (v39 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v38;
        }
        else
        {
          uint64_t v41 = *v38;
          sub_252AC5A54(*v38, v39);
          a1[4] = v41;
          a1[5] = v39;
        }
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v40 = sub_252D19C58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        break;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_252D19588();
        uint64_t v5 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16);
        v5(a1, a2, v4);
        uint64_t v6 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v5((uint64_t *)((char *)a1 + v6[5]), (uint64_t *)((char *)a2 + v6[5]), v4);
        uint64_t v7 = v6[6];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
        *((void *)v8 + 1) = *((void *)v9 + 1);
        *((void *)v8 + 2) = *((void *)v9 + 2);
        *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
        *(uint64_t *)((char *)a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
        uint64_t v10 = v6[9];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v5((uint64_t *)v11, (uint64_t *)v12, v4);
        uint64_t v13 = v6[10];
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        uint64_t v16 = v6[11];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        swift_bridgeObjectRetain();
        v5((uint64_t *)v17, (uint64_t *)v18, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for RGPluginModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v5 = sub_252D19588();
      uint64_t v6 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32);
      v6(a1, a2, v5);
      uint64_t v7 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v6(&a1[v7[5]], &a2[v7[5]], v5);
      uint64_t v8 = v7[6];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      v6(&a1[v7[9]], &a2[v7[9]], v5);
      *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
      v6(&a1[v7[11]], &a2[v7[11]], v5);
      goto LABEL_32;
    case 1u:
      uint64_t v11 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
      }
      uint64_t v22 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v78(&a1[v22[5]], &a2[v22[5]], v11);
      uint64_t v23 = v22[6];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((void *)v24 + 2) = *((void *)v25 + 2);
      uint64_t v26 = v22[7];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = sub_252D19408();
      unint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
      v30(v27, v28, v29);
      v30(&a1[v22[8]], &a2[v22[8]], v29);
      v78(&a1[v22[9]], &a2[v22[9]], v11);
      goto LABEL_32;
    case 2u:
      uint64_t v13 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
      {
        uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
      }
      uint64_t v31 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v77(&a1[v31[5]], &a2[v31[5]], v13);
      uint64_t v32 = v31[6];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      *((void *)v33 + 2) = *((void *)v34 + 2);
      uint64_t v35 = v31[7];
      uint64_t v36 = &a1[v35];
      unint64_t v37 = &a2[v35];
      uint64_t v38 = sub_252D19408();
      unint64_t v39 = (void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
      uint64_t v40 = v36;
      uint64_t v41 = *v39;
      (*v39)(v40, v37, v38);
      v41(&a1[v31[8]], &a2[v31[8]], v38);
      uint64_t v79 = v31;
      uint64_t v42 = v31[9];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      uint64_t v45 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, (uint64_t)v45))
      {
        uint64_t v46 = sub_252AC3A24(&qword_269C41AA0);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v75 = v13;
        v41(v43, v44, v38);
        uint64_t v47 = v45[5];
        uint64_t v48 = &v43[v47];
        uint64_t v49 = v41;
        uint64_t v50 = &v44[v47];
        uint64_t v74 = v49;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v44[v47], 1, v38))
        {
          uint64_t v51 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v48, v50, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          v49(v48, v50, v38);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v48, 0, 1, v38);
        }
        uint64_t v52 = v45[6];
        uint64_t v53 = &v43[v52];
        uint64_t v54 = &v44[v52];
        uint64_t v55 = sub_252D19C68();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v53, 0, 1, v55);
        }
        *(_OWORD *)&v43[v45[7]] = *(_OWORD *)&v44[v45[7]];
        *(_OWORD *)&v43[v45[8]] = *(_OWORD *)&v44[v45[8]];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
        uint64_t v13 = v75;
        uint64_t v41 = v74;
      }
      uint64_t v57 = v79;
      uint64_t v58 = v79[10];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      uint64_t v61 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = sub_252AC3A24(&qword_269C41AA8);
        memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        uint64_t v76 = v13;
        v41(v59, v60, v38);
        uint64_t v63 = *(int *)(v61 + 20);
        uint64_t v64 = &v59[v63];
        uint64_t v65 = v41;
        uint64_t v66 = &v60[v63];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v60[v63], 1, v38))
        {
          uint64_t v67 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v64, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          v65(v64, v66, v38);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v38);
        }
        uint64_t v68 = *(int *)(v61 + 24);
        uint64_t v69 = &v59[v68];
        uint64_t v70 = &v60[v68];
        uint64_t v71 = sub_252D19C68();
        uint64_t v57 = v79;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v69, 0, 1, v71);
        }
        uint64_t v13 = v76;
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v59, 0, 1, v61);
      }
      v77(&a1[v57[11]], &a2[v57[11]], v13);
      goto LABEL_32;
    case 3u:
      uint64_t v15 = sub_252D19588();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(a1, a2, v15);
      uint64_t v17 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v16(&a1[v17[5]], &a2[v17[5]], v15);
      uint64_t v18 = v17[6];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((void *)v19 + 2) = *((void *)v20 + 2);
      *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
      *(void *)&a1[v17[8]] = *(void *)&a2[v17[8]];
      v16(&a1[v17[9]], &a2[v17[9]], v15);
      goto LABEL_32;
    case 7u:
      uint64_t v21 = sub_252D19C58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_32:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_252B617B4((uint64_t)a1, (void (*)(void))type metadata accessor for RGPluginModel);
    uint64_t v4 = type metadata accessor for RGPluginModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v5 = sub_252D19588();
        uint64_t v6 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32);
        v6(a1, a2, v5);
        uint64_t v7 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v6(&a1[v7[5]], &a2[v7[5]], v5);
        uint64_t v8 = v7[6];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
        *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
        v6(&a1[v7[9]], &a2[v7[9]], v5);
        *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
        v6(&a1[v7[11]], &a2[v7[11]], v5);
        goto LABEL_32;
      case 1u:
        uint64_t v11 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v11))
        {
          uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v11);
        }
        uint64_t v22 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
        v78(&a1[v22[5]], &a2[v22[5]], v11);
        uint64_t v23 = v22[6];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((void *)v24 + 2) = *((void *)v25 + 2);
        uint64_t v26 = v22[7];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = sub_252D19408();
        unint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
        v30(v27, v28, v29);
        v30(&a1[v22[8]], &a2[v22[8]], v29);
        v78(&a1[v22[9]], &a2[v22[9]], v11);
        goto LABEL_32;
      case 2u:
        uint64_t v13 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v13);
        }
        uint64_t v31 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
        v77(&a1[v31[5]], &a2[v31[5]], v13);
        uint64_t v32 = v31[6];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
        *((void *)v33 + 2) = *((void *)v34 + 2);
        uint64_t v35 = v31[7];
        uint64_t v36 = &a1[v35];
        unint64_t v37 = &a2[v35];
        uint64_t v38 = sub_252D19408();
        unint64_t v39 = (void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
        uint64_t v40 = v36;
        uint64_t v41 = *v39;
        (*v39)(v40, v37, v38);
        v41(&a1[v31[8]], &a2[v31[8]], v38);
        uint64_t v79 = v31;
        uint64_t v42 = v31[9];
        uint64_t v43 = &a1[v42];
        uint64_t v44 = &a2[v42];
        uint64_t v45 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, (uint64_t)v45))
        {
          uint64_t v46 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          uint64_t v47 = v79;
        }
        else
        {
          uint64_t v75 = v13;
          v41(v43, v44, v38);
          uint64_t v48 = v45[5];
          uint64_t v49 = &v43[v48];
          uint64_t v50 = v41;
          uint64_t v51 = &v44[v48];
          uint64_t v74 = v50;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v44[v48], 1, v38))
          {
            uint64_t v52 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v49, v51, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            v50(v49, v51, v38);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v49, 0, 1, v38);
          }
          uint64_t v53 = v45[6];
          uint64_t v54 = &v43[v53];
          uint64_t v55 = &v44[v53];
          uint64_t v56 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
          {
            uint64_t v57 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
          }
          uint64_t v47 = v79;
          uint64_t v13 = v75;
          uint64_t v41 = v74;
          *(_OWORD *)&v43[v45[7]] = *(_OWORD *)&v44[v45[7]];
          *(_OWORD *)&v43[v45[8]] = *(_OWORD *)&v44[v45[8]];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
        }
        uint64_t v58 = v47[10];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = &a2[v58];
        uint64_t v61 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v60, 1, v61))
        {
          uint64_t v62 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
          v77(&a1[v47[11]], &a2[v47[11]], v13);
        }
        else
        {
          uint64_t v76 = v13;
          v41(v59, v60, v38);
          uint64_t v63 = *(int *)(v61 + 20);
          uint64_t v64 = &v59[v63];
          uint64_t v65 = v41;
          uint64_t v66 = &v60[v63];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v60[v63], 1, v38))
          {
            uint64_t v67 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v64, v66, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            v65(v64, v66, v38);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v64, 0, 1, v38);
          }
          uint64_t v68 = *(int *)(v61 + 24);
          uint64_t v69 = &v59[v68];
          uint64_t v70 = &v60[v68];
          uint64_t v71 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v70, 1, v71))
          {
            uint64_t v72 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v69, 0, 1, v71);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v59, 0, 1, v61);
          v77(&a1[v79[11]], &a2[v79[11]], v76);
        }
        goto LABEL_32;
      case 3u:
        uint64_t v15 = sub_252D19588();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16(a1, a2, v15);
        uint64_t v17 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v16(&a1[v17[5]], &a2[v17[5]], v15);
        uint64_t v18 = v17[6];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
        *(void *)&a1[v17[8]] = *(void *)&a2[v17[8]];
        v16(&a1[v17[9]], &a2[v17[9]], v15);
        goto LABEL_32;
      case 7u:
        uint64_t v21 = sub_252D19C58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B753C8);
}

uint64_t sub_252B753C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RGPluginModel(0);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResponseOutput.VisualOutput.SystemSnippetOutputPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B75424);
}

uint64_t sub_252B75424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RGPluginModel(0);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t sub_252B75470()
{
  uint64_t result = type metadata accessor for RGPluginModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ResponseOutput.VisualOutput.PluginSnippetOutputPayload()
{
}

unsigned char *storeEnumTagSinglePayload for ResponseOutput.VisualOutputOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B755D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ResponseOutput.VisualOutputOptions()
{
}

uint64_t destroy for ResponseOutput.DialogType(uint64_t a1)
{
  return sub_252AD170C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s16IntelligenceFlow14ResponseOutputV10DialogTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_252ACE7E4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ResponseOutput.DialogType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_252ACE7E4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_252AD170C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResponseOutput.DialogType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_252AD170C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOutput.DialogType(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseOutput.DialogType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252B7578C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_252B757A4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ResponseOutput.DialogType()
{
}

void type metadata accessor for ResponseOutput.ResponseType()
{
}

uint64_t getEnumTagSinglePayload for ResponseOutput.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseOutput.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B7592CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.CodingKeys()
{
  return &type metadata for ResponseOutput.CodingKeys;
}

unsigned char *_s16IntelligenceFlow14ResponseOutputV12ResponseTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B75A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.CodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.CompletionCodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.CompletionCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.DisambiguationCodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.DisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.ResponseType.ConfirmationCodingKeys()
{
  return &type metadata for ResponseOutput.ResponseType.ConfirmationCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ResponseOutput.DialogType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B75B64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.CodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.StaticTextCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.StaticTextCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.CatDialogCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.CatDialogCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.SonicCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.SonicCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.GeneratedCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.GeneratedCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.UnableToGenerateCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.UnableToGenerateCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.DialogType.SuppressedCodingKeys()
{
  return &type metadata for ResponseOutput.DialogType.SuppressedCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutputOptions.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutputOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ResponseOutput.VisualOutput.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B75CDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.LiveActivityCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.LiveActivityCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.InAppResponseCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.InAppResponseCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.SystemSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.PluginSnippetCodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.PluginSnippetCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B75E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.PluginSnippetOutputPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.SystemSnippetOutputPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.InAppResponseOutputPayload.CodingKeys;
}

unsigned char *_s16IntelligenceFlow14ResponseOutputV10DialogTypeO20StaticTextCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252B75F14);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys()
{
  return &type metadata for ResponseOutput.VisualOutput.LiveActivityOutputPayload.CodingKeys;
}

unint64_t sub_252B75F50()
{
  unint64_t result = qword_269C435C8;
  if (!qword_269C435C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435C8);
  }
  return result;
}

unint64_t sub_252B75FA0()
{
  unint64_t result = qword_269C435D0;
  if (!qword_269C435D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435D0);
  }
  return result;
}

unint64_t sub_252B75FF0()
{
  unint64_t result = qword_269C435D8;
  if (!qword_269C435D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435D8);
  }
  return result;
}

unint64_t sub_252B76040()
{
  unint64_t result = qword_269C435E0;
  if (!qword_269C435E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435E0);
  }
  return result;
}

unint64_t sub_252B76090()
{
  unint64_t result = qword_269C435E8;
  if (!qword_269C435E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435E8);
  }
  return result;
}

unint64_t sub_252B760E0()
{
  unint64_t result = qword_269C435F0;
  if (!qword_269C435F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435F0);
  }
  return result;
}

unint64_t sub_252B76130()
{
  unint64_t result = qword_269C435F8;
  if (!qword_269C435F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C435F8);
  }
  return result;
}

unint64_t sub_252B76180()
{
  unint64_t result = qword_269C43600;
  if (!qword_269C43600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43600);
  }
  return result;
}

unint64_t sub_252B761D0()
{
  unint64_t result = qword_269C43608;
  if (!qword_269C43608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43608);
  }
  return result;
}

unint64_t sub_252B76220()
{
  unint64_t result = qword_269C43610;
  if (!qword_269C43610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43610);
  }
  return result;
}

unint64_t sub_252B76270()
{
  unint64_t result = qword_269C43618;
  if (!qword_269C43618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43618);
  }
  return result;
}

unint64_t sub_252B762C0()
{
  unint64_t result = qword_269C43620;
  if (!qword_269C43620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43620);
  }
  return result;
}

unint64_t sub_252B76310()
{
  unint64_t result = qword_269C43628;
  if (!qword_269C43628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43628);
  }
  return result;
}

unint64_t sub_252B76360()
{
  unint64_t result = qword_269C43630;
  if (!qword_269C43630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43630);
  }
  return result;
}

unint64_t sub_252B763B0()
{
  unint64_t result = qword_269C43638;
  if (!qword_269C43638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43638);
  }
  return result;
}

unint64_t sub_252B76400()
{
  unint64_t result = qword_269C43640;
  if (!qword_269C43640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43640);
  }
  return result;
}

unint64_t sub_252B76450()
{
  unint64_t result = qword_269C43648;
  if (!qword_269C43648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43648);
  }
  return result;
}

unint64_t sub_252B764A0()
{
  unint64_t result = qword_269C43650;
  if (!qword_269C43650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43650);
  }
  return result;
}

unint64_t sub_252B764F0()
{
  unint64_t result = qword_269C43658;
  if (!qword_269C43658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43658);
  }
  return result;
}

unint64_t sub_252B76540()
{
  unint64_t result = qword_269C43660;
  if (!qword_269C43660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43660);
  }
  return result;
}

unint64_t sub_252B76590()
{
  unint64_t result = qword_269C43668;
  if (!qword_269C43668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43668);
  }
  return result;
}

unint64_t sub_252B765E0()
{
  unint64_t result = qword_269C43670;
  if (!qword_269C43670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43670);
  }
  return result;
}

unint64_t sub_252B76630()
{
  unint64_t result = qword_269C43678;
  if (!qword_269C43678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43678);
  }
  return result;
}

unint64_t sub_252B76680()
{
  unint64_t result = qword_269C43680;
  if (!qword_269C43680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43680);
  }
  return result;
}

unint64_t sub_252B766D0()
{
  unint64_t result = qword_269C43688;
  if (!qword_269C43688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43688);
  }
  return result;
}

unint64_t sub_252B76720()
{
  unint64_t result = qword_269C43690;
  if (!qword_269C43690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43690);
  }
  return result;
}

unint64_t sub_252B76770()
{
  unint64_t result = qword_269C43698;
  if (!qword_269C43698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43698);
  }
  return result;
}

unint64_t sub_252B767C0()
{
  unint64_t result = qword_269C436A0;
  if (!qword_269C436A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436A0);
  }
  return result;
}

unint64_t sub_252B76810()
{
  unint64_t result = qword_269C436A8;
  if (!qword_269C436A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436A8);
  }
  return result;
}

unint64_t sub_252B76860()
{
  unint64_t result = qword_269C436B0;
  if (!qword_269C436B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436B0);
  }
  return result;
}

unint64_t sub_252B768B0()
{
  unint64_t result = qword_269C436B8;
  if (!qword_269C436B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436B8);
  }
  return result;
}

unint64_t sub_252B76900()
{
  unint64_t result = qword_269C436C0;
  if (!qword_269C436C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436C0);
  }
  return result;
}

unint64_t sub_252B76950()
{
  unint64_t result = qword_269C436C8;
  if (!qword_269C436C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436C8);
  }
  return result;
}

unint64_t sub_252B769A0()
{
  unint64_t result = qword_269C436D0;
  if (!qword_269C436D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436D0);
  }
  return result;
}

unint64_t sub_252B769F0()
{
  unint64_t result = qword_269C436D8;
  if (!qword_269C436D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436D8);
  }
  return result;
}

unint64_t sub_252B76A40()
{
  unint64_t result = qword_269C436E0;
  if (!qword_269C436E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436E0);
  }
  return result;
}

unint64_t sub_252B76A90()
{
  unint64_t result = qword_269C436E8;
  if (!qword_269C436E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436E8);
  }
  return result;
}

unint64_t sub_252B76AE0()
{
  unint64_t result = qword_269C436F0;
  if (!qword_269C436F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436F0);
  }
  return result;
}

unint64_t sub_252B76B30()
{
  unint64_t result = qword_269C436F8;
  if (!qword_269C436F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C436F8);
  }
  return result;
}

unint64_t sub_252B76B80()
{
  unint64_t result = qword_269C43700;
  if (!qword_269C43700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43700);
  }
  return result;
}

unint64_t sub_252B76BD0()
{
  unint64_t result = qword_269C43708;
  if (!qword_269C43708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43708);
  }
  return result;
}

unint64_t sub_252B76C20()
{
  unint64_t result = qword_269C43710;
  if (!qword_269C43710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43710);
  }
  return result;
}

unint64_t sub_252B76C70()
{
  unint64_t result = qword_269C43718;
  if (!qword_269C43718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43718);
  }
  return result;
}

unint64_t sub_252B76CC0()
{
  unint64_t result = qword_269C43720;
  if (!qword_269C43720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43720);
  }
  return result;
}

unint64_t sub_252B76D10()
{
  unint64_t result = qword_269C43728;
  if (!qword_269C43728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43728);
  }
  return result;
}

unint64_t sub_252B76D60()
{
  unint64_t result = qword_269C43730;
  if (!qword_269C43730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43730);
  }
  return result;
}

unint64_t sub_252B76DB0()
{
  unint64_t result = qword_269C43738;
  if (!qword_269C43738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43738);
  }
  return result;
}

unint64_t sub_252B76E00()
{
  unint64_t result = qword_269C43740;
  if (!qword_269C43740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43740);
  }
  return result;
}

unint64_t sub_252B76E50()
{
  unint64_t result = qword_269C43748;
  if (!qword_269C43748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43748);
  }
  return result;
}

unint64_t sub_252B76EA0()
{
  unint64_t result = qword_269C43750;
  if (!qword_269C43750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43750);
  }
  return result;
}

unint64_t sub_252B76EF0()
{
  unint64_t result = qword_269C43758;
  if (!qword_269C43758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43758);
  }
  return result;
}

unint64_t sub_252B76F40()
{
  unint64_t result = qword_269C43760;
  if (!qword_269C43760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43760);
  }
  return result;
}

unint64_t sub_252B76F90()
{
  unint64_t result = qword_269C43768;
  if (!qword_269C43768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43768);
  }
  return result;
}

unint64_t sub_252B76FE0()
{
  unint64_t result = qword_269C43770;
  if (!qword_269C43770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43770);
  }
  return result;
}

unint64_t sub_252B77030()
{
  unint64_t result = qword_269C43778;
  if (!qword_269C43778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43778);
  }
  return result;
}

unint64_t sub_252B77080()
{
  unint64_t result = qword_269C43780;
  if (!qword_269C43780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43780);
  }
  return result;
}

unint64_t sub_252B770D0()
{
  unint64_t result = qword_269C43788;
  if (!qword_269C43788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43788);
  }
  return result;
}

unint64_t sub_252B77120()
{
  unint64_t result = qword_269C43790;
  if (!qword_269C43790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43790);
  }
  return result;
}

unint64_t sub_252B77170()
{
  unint64_t result = qword_269C43798;
  if (!qword_269C43798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43798);
  }
  return result;
}

unint64_t sub_252B771C0()
{
  unint64_t result = qword_269C437A0;
  if (!qword_269C437A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C437A0);
  }
  return result;
}

unint64_t sub_252B77210()
{
  unint64_t result = qword_269C437A8;
  if (!qword_269C437A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C437A8);
  }
  return result;
}

uint64_t sub_252B77268()
{
  type metadata accessor for ResponseOutput.VisualOutput(0);
  return v0;
}

int *sub_252B77290@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, char a4@<W8>)
{
  *(void *)uint64_t v6 = a1;
  *(_OWORD *)(v6 + 8) = *a2;
  *(unsigned char *)(v6 + 24) = a4;
  *(_OWORD *)(v6 + 32) = *a3;
  *(unsigned char *)(v6 + 48) = v4;
  unint64_t result = (int *)type metadata accessor for ResponseOutput(0);
  *(unsigned char *)(v6 + result[9]) = 2;
  *(void *)(v6 + result[10]) = v5;
  unsigned __int8 v8 = (void *)(v6 + result[11]);
  void *v8 = 0;
  v8[1] = 0;
  return result;
}

uint64_t sub_252B772E8()
{
  return sub_252D1A5D8();
}

uint64_t sub_252B7730C()
{
  return sub_252D1A3E8();
}

uint64_t sub_252B77344()
{
  return v0;
}

uint64_t sub_252B7735C()
{
  return v0;
}

uint64_t sub_252B77374()
{
  *(void *)(v6 - 128) = v4;
  *(void *)(v6 - 120) = v3;
  *(unsigned char *)(v6 - 112) = v1;
  sub_252ACE7E4(v2, v0, v5);
  sub_252ACE7E4(v2, v0, v5);
  return static ResponseOutput.DialogType.== infix(_:_:)(v6 - 104, v6 - 128);
}

uint64_t sub_252B773C4()
{
  return 1;
}

uint64_t sub_252B773E4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, char a4@<W8>)
{
  *(void *)uint64_t v5 = a1;
  *(_OWORD *)(v5 + 8) = *a2;
  *(unsigned char *)(v5 + 24) = a4;
  *(_OWORD *)(v5 + 32) = *a3;
  *(unsigned char *)(v5 + 48) = v4;
  return type metadata accessor for ResponseOutput(0);
}

uint64_t sub_252B7741C()
{
  return sub_252D1A578();
}

uint64_t sub_252B77448()
{
  return v0;
}

uint64_t sub_252B77458(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_252AD170C(a1, a2, a3);
  return v3;
}

uint64_t sub_252B77474()
{
  sub_252AD170C(v1, v0, v2);
  return sub_252B67130(v1, v0, v2);
}

uint64_t sub_252B774C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + 16) = a3;
  return sub_252B6702C(a1, a2, a3);
}

void sub_252B774C8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252B774E4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252B77500()
{
  return type metadata accessor for ResponseOutput.VisualOutput(0);
}

uint64_t sub_252B77528()
{
  return sub_252D1A438();
}

uint64_t sub_252B77550()
{
  return sub_252D1A518();
}

uint64_t sub_252B77578()
{
  return sub_252D1A2F8();
}

uint64_t sub_252B775AC()
{
  return sub_252D1A3E8();
}

uint64_t sub_252B775C8()
{
  return sub_252D1A4D8();
}

uint64_t sub_252B775E4()
{
  return sub_252D1A498();
}

uint64_t sub_252B77608()
{
  return sub_252D1A578();
}

uint64_t sub_252B7762C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_252B77650()
{
  return v0;
}

uint64_t sub_252B77668()
{
  return v0;
}

uint64_t sub_252B7767C()
{
  return v0;
}

uint64_t sub_252B77690()
{
  return v0;
}

uint64_t sub_252B7769C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_252B776B8(a1, type metadata accessor for InterpretedStatementResult, (void (*)(void))type metadata accessor for InterpretedStatementResult, a2);
}

uint64_t sub_252B776B8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = a2(0);
  uint64_t v9 = v8;
  if (v7)
  {
    sub_252B7D99C(a1+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), a4, a3);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a4, v10, 1, v9);
}

uint64_t ResponseOverrideMatcher.__allocating_init(locale:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ResponseOverrideMatcher.init(locale:)(a1);
  return v2;
}

uint64_t ResponseOverrideMatcher.init(locale:)(uint64_t a1)
{
  uint64_t v5 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
  uint64_t v6 = sub_252AEA368(v5);
  MEMORY[0x270FA5388](v6);
  sub_252B5F630();
  *(void *)(v1 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_regexCache) = MEMORY[0x263F8EE80];
  sub_252B77904(a1, v3);
  sub_252D195E8();
  sub_252AEA304();
  sub_252B5F53C();
  v7();
  if (v2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ResponseOverrideMatcher(0);
    sub_252B7E3D8();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_252B7D9F0(v3, v1 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_overrides, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
  }
  return v1;
}

uint64_t sub_252B77904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v130 = a2;
  uint64_t v4 = sub_252D19698();
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  sub_252B7E454((uint64_t)v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_252D19678();
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252AEDC14();
  v127[1] = v9;
  sub_252B22C04();
  MEMORY[0x270FA5388](v10);
  sub_252AEDD54();
  sub_252B7E454(v11);
  uint64_t v12 = sub_252D19D78();
  uint64_t v13 = sub_252AEA368(v12);
  MEMORY[0x270FA5388](v13);
  sub_252AEDC14();
  v127[4] = v14;
  sub_252B22C04();
  MEMORY[0x270FA5388](v15);
  sub_252AEDD54();
  sub_252B7E454(v16);
  sub_252D19B18();
  sub_252AEDBD0();
  uint64_t v135 = v17;
  uint64_t v136 = v18;
  MEMORY[0x270FA5388](v17);
  sub_252AEDC14();
  uint64_t v129 = v19;
  sub_252B22C04();
  MEMORY[0x270FA5388](v20);
  sub_252AEDDB4();
  uint64_t v133 = v21;
  sub_252B22C04();
  MEMORY[0x270FA5388](v22);
  sub_252AEDD54();
  uint64_t v134 = v23;
  uint64_t v24 = sub_252D19498();
  sub_252AEDBD0();
  uint64_t v145 = v25;
  MEMORY[0x270FA5388](v26);
  sub_252AEDC14();
  v128 = v27;
  sub_252B22C04();
  MEMORY[0x270FA5388](v28);
  sub_252AEDDB4();
  uint64_t v132 = v29;
  sub_252B22C04();
  MEMORY[0x270FA5388](v30);
  sub_252AEDDB4();
  uint64_t v140 = v31;
  sub_252B22C04();
  MEMORY[0x270FA5388](v32);
  sub_252AEDDB4();
  uint64_t v138 = v33;
  sub_252B22C04();
  MEMORY[0x270FA5388](v34);
  sub_252AEDDB4();
  uint64_t v141 = v35;
  sub_252B22C04();
  MEMORY[0x270FA5388](v36);
  sub_252AEDDB4();
  uint64_t v131 = v37;
  sub_252B22C04();
  MEMORY[0x270FA5388](v38);
  sub_252AEDD54();
  uint64_t v139 = v39;
  uint64_t v40 = sub_252D195B8();
  sub_252AEDBD0();
  uint64_t v42 = v41;
  MEMORY[0x270FA5388](v43);
  sub_252B23278();
  uint64_t v44 = sub_252AC3A24(&qword_26B230E38);
  uint64_t v45 = sub_252AEA368(v44);
  MEMORY[0x270FA5388](v45);
  sub_252AEDC14();
  uint64_t v142 = v46;
  sub_252B22C04();
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v50 = (char *)v127 - v49;
  MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)v127 - v51;
  (*(void (**)(uint64_t, void, uint64_t))(v42 + 104))(v2, *MEMORY[0x263F07570], v40);
  uint64_t v143 = a1;
  sub_252D19598();
  sub_252D195A8();
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_252B7E4CC();
  v54(v53);
  *(void *)&v146[0] = 0xD00000000000005ELL;
  *((void *)&v146[0] + 1) = 0x8000000252D1D0D0;
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_252B7E570();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19478();
  swift_bridgeObjectRelease();
  v144 = v52;
  sub_252B22858((uint64_t)v52, (uint64_t)v50, &qword_26B230E38);
  uint64_t v150 = v24;
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v50, 1, v24) == 1)
  {
    sub_252B5A4CC((uint64_t)v50, &qword_26B230E38);
  }
  else
  {
    uint64_t v55 = v145;
    uint64_t v56 = v139;
    sub_252B7E53C();
    v57();
    id v58 = objc_msgSend(self, sel_defaultManager);
    sub_252D19468();
    uint64_t v59 = (void *)sub_252D19D18();
    swift_bridgeObjectRelease();
    unsigned int v60 = objc_msgSend(v58, sel_fileExistsAtPath_, v59);

    if (v60)
    {
      sub_252D198C8();
      sub_252B7E464();
      v61();
      uint64_t v62 = sub_252D19B08();
      os_log_type_t v63 = sub_252D1A088();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v143 = swift_slowAlloc();
        *(void *)&v146[0] = v143;
        *(_DWORD *)uint64_t v64 = 136315138;
        sub_252B7DAC4(&qword_269C43860, MEMORY[0x263F06EA8]);
        uint64_t v65 = sub_252D1A5B8();
        uint64_t v67 = sub_252B58B30(v65, v66, (uint64_t *)v146);
        sub_252B7E43C(v67);
        sub_252D1A188();
        swift_bridgeObjectRelease();
        uint64_t v68 = *(void (**)(void))(v55 + 8);
        sub_252B7E3EC();
        v68();
        _os_log_impl(&dword_252AC1000, v62, v63, "Loading overrides at: %s", v64, 0xCu);
        swift_arrayDestroy();
        sub_252B5F6E0();
        sub_252B5F6E0();
      }
      else
      {
        uint64_t v68 = *(void (**)(void))(v55 + 8);
        sub_252B7E3EC();
        v68();

        sub_252B7E4D8();
      }
      sub_252B5F53C();
      v106();
      uint64_t v107 = v137;
      sub_252D19468();
      sub_252D19D68();
      sub_252D19D08();
      if (!v107)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
        swift_bridgeObjectRetain();
        sub_252D19668();
        sub_252B7DAC4(&qword_269C42518, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
        sub_252B7E408();
      }
      swift_bridgeObjectRelease();
      sub_252B7E3EC();
      v68();
      goto LABEL_30;
    }
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v150);
  }
  uint64_t v69 = v142;
  sub_252B7B168();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v69, 1, v150) != 1)
  {
    uint64_t v76 = v145;
    sub_252B7E53C();
    v77();
    sub_252B7E570();
    sub_252D19438();
    sub_252B7E570();
    sub_252D19438();
    uint64_t v78 = self;
    id v79 = objc_msgSend(v78, (SEL)&selRef_integerValue + 3);
    sub_252D19468();
    uint64_t v80 = (void *)sub_252D19D18();
    swift_bridgeObjectRelease();
    unsigned int v81 = objc_msgSend(v79, sel_fileExistsAtPath_, v80);

    if (v81)
    {
      sub_252D198C8();
      uint64_t v82 = v132;
      sub_252B7E464();
      v83();
      uint64_t v84 = sub_252D19B08();
      os_log_type_t v85 = sub_252D1A088();
      if (os_log_type_enabled(v84, v85))
      {
        swift_slowAlloc();
        *(void *)&v146[0] = sub_252B7E51C();
        *uint64_t v82 = 136315138;
        sub_252B7DAC4(&qword_269C43860, MEMORY[0x263F06EA8]);
        uint64_t v86 = sub_252D1A5B8();
        uint64_t v88 = sub_252B58B30(v86, v87, (uint64_t *)v146);
        sub_252B7E43C(v88);
        uint64_t v89 = v145;
        sub_252D1A188();
        swift_bridgeObjectRelease();
        uint64_t v90 = *(void (**)(void))(v89 + 8);
        sub_252B7E3EC();
        v90();
        sub_252B7E550(&dword_252AC1000, v91, v92, "Loading overrides at: %s");
        swift_arrayDestroy();
        sub_252B5F6E0();
        sub_252B5F6E0();
      }
      else
      {
        uint64_t v90 = *(void (**)(void))(v76 + 8);
        sub_252B7E3EC();
        v90();

        sub_252B7E4D8();
      }
      sub_252B5F53C();
      v108();
      uint64_t v109 = v137;
      uint64_t v110 = sub_252D194A8();
      if (!v109)
      {
        uint64_t v112 = v110;
        uint64_t v113 = v111;
        type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
        uint64_t v148 = v112;
        uint64_t v149 = v113;
        uint64_t v147 = 0;
        memset(v146, 0, sizeof(v146));
        uint64_t v114 = sub_252B7E4CC();
        sub_252AC5A54(v114, v115);
        sub_252D19688();
        sub_252B7DAC4(&qword_269C42518, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
        sub_252D19788();
        uint64_t v116 = sub_252B7E4CC();
        sub_252AC5C14(v116, v117);
      }
      uint64_t v118 = v150;
      sub_252B7E50C();
      v90();
    }
    else
    {
      id v93 = objc_msgSend(v78, (SEL)&selRef_integerValue + 3);
      sub_252D19468();
      uint64_t v94 = (void *)sub_252D19D18();
      swift_bridgeObjectRelease();
      unsigned int v95 = objc_msgSend(v93, sel_fileExistsAtPath_, v94);

      if (!v95)
      {
        type metadata accessor for ResponseGenerationOverridesLoader.OverrideLoadingError(0);
        sub_252B7DAC4(&qword_269C43850, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverridesLoader.OverrideLoadingError);
        swift_allocError();
        uint64_t v120 = v119;
        uint64_t v121 = v145;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v119, v140, v150);
        uint64_t v122 = sub_252AC3A24(&qword_269C43858);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v120, 0, 1, v122);
        swift_willThrow();
        uint64_t v123 = *(void (**)(void))(v121 + 8);
        sub_252B7E4FC();
        v123();
        sub_252B7E4FC();
        v123();
        sub_252B7E4FC();
        v123();
LABEL_30:
        uint64_t v75 = (uint64_t)v144;
        return sub_252B5A4CC(v75, &qword_26B230E38);
      }
      sub_252D198C8();
      uint64_t v96 = v145;
      uint64_t v97 = v128;
      sub_252B7E464();
      v98();
      uint64_t v99 = sub_252D19B08();
      os_log_type_t v100 = sub_252D1A088();
      if (os_log_type_enabled(v99, v100))
      {
        swift_slowAlloc();
        *(void *)&v146[0] = sub_252B7E51C();
        *uint64_t v97 = 136315138;
        sub_252B7DAC4(&qword_269C43860, MEMORY[0x263F06EA8]);
        uint64_t v101 = sub_252D1A5B8();
        uint64_t v103 = sub_252B58B30(v101, v102, (uint64_t *)v146);
        sub_252B7E43C(v103);
        sub_252D1A188();
        swift_bridgeObjectRelease();
        uint64_t v90 = *(void (**)(void))(v96 + 8);
        sub_252B7E3EC();
        v90();
        sub_252B7E550(&dword_252AC1000, v104, v105, "Loading overrides at: %s");
        swift_arrayDestroy();
        sub_252B5F6E0();
        sub_252B5F6E0();
      }
      else
      {
        uint64_t v90 = *(void (**)(void))(v96 + 8);
        sub_252B7E3EC();
        v90();

        sub_252B7E4D8();
      }
      sub_252B5F53C();
      v124();
      uint64_t v125 = v137;
      sub_252D19468();
      sub_252D19D68();
      sub_252D19D08();
      if (!v125)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
        swift_bridgeObjectRetain();
        sub_252D19668();
        sub_252B7DAC4(&qword_269C42518, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
        sub_252B7E408();
      }
      swift_bridgeObjectRelease();
      uint64_t v118 = v150;
      sub_252B7E50C();
      v90();
    }
    sub_252B7E50C();
    v90();
    ((void (*)(uint64_t, uint64_t))v90)(v141, v118);
    goto LABEL_30;
  }
  uint64_t v70 = sub_252B7E4CC();
  sub_252B5A4CC(v70, v71);
  type metadata accessor for ResponseGenerationOverridesLoader.OverrideLoadingError(0);
  sub_252B7DAC4(&qword_269C43850, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverridesLoader.OverrideLoadingError);
  swift_allocError();
  sub_252AC3A24(&qword_269C43858);
  uint64_t v72 = sub_252B7E5CC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v72, v73, 1, v74);
  swift_willThrow();
  uint64_t v75 = (uint64_t)v144;
  return sub_252B5A4CC(v75, &qword_26B230E38);
}

uint64_t type metadata accessor for ResponseOverrideMatcher(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C437C8);
}

uint64_t ResponseOverrideMatcher.__allocating_init(jsonString:)()
{
  uint64_t v0 = swift_allocObject();
  ResponseOverrideMatcher.init(jsonString:)();
  return v0;
}

uint64_t ResponseOverrideMatcher.init(jsonString:)()
{
  uint64_t v3 = sub_252D19678();
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252AF45F0();
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252AC423C();
  *(void *)(v0 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_regexCache) = MEMORY[0x263F8EE80];
  swift_bridgeObjectRetain();
  sub_252D19668();
  sub_252B7DAC4(&qword_269C42518, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
  sub_252D19768();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ResponseOverrideMatcher(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_252B7D9F0(v2, v0 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_overrides, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
  }
  return v0;
}

void sub_252B78AC4()
{
  sub_252AFC730();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v67 = v4;
  uint64_t v5 = sub_252AC3A24(&qword_269C42338);
  uint64_t v6 = sub_252AEA368(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v65 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_252AC3A24(&qword_269C437C0);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252AEDE70();
  uint64_t v11 = sub_252B7E454(v10);
  uint64_t v66 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(v11);
  sub_252AEDBD0();
  uint64_t v70 = v12;
  MEMORY[0x270FA5388](v13);
  sub_252AEDC14();
  uint64_t v69 = v14;
  sub_252B22C04();
  MEMORY[0x270FA5388](v15);
  sub_252AEDDB4();
  uint64_t v62 = (uint64_t *)v16;
  sub_252B22C04();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v59 - v18;
  uint64_t v20 = sub_252D19B18();
  sub_252AEDBD0();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  sub_252AEDC14();
  uint64_t v63 = v24;
  sub_252B22C04();
  MEMORY[0x270FA5388](v25);
  memcpy(v74, v3, 0x48uLL);
  sub_252D198C8();
  sub_252B7923C((uint64_t)v74);
  sub_252B7923C((uint64_t)v74);
  uint64_t v26 = sub_252D19B08();
  os_log_type_t v27 = sub_252D1A088();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v68 = v0;
  uint64_t v64 = v22;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v61 = v29 + 4;
    memcpy(v72, v74, 0x48uLL);
    sub_252B7923C((uint64_t)v74);
    uint64_t v30 = sub_252D19D88();
    *(void *)uint64_t v72 = sub_252B58B30(v30, v31, &v71);
    sub_252D1A188();
    uint64_t v1 = v68;
    swift_bridgeObjectRelease();
    sub_252B792A4((uint64_t)v74);
    sub_252B792A4((uint64_t)v74);
    _os_log_impl(&dword_252AC1000, v26, v27, "Searching override matches for %s", v29, 0xCu);
    swift_arrayDestroy();
    sub_252B5F6E0();
    sub_252B5F6E0();
  }
  else
  {
    sub_252B792A4((uint64_t)v74);
    sub_252B792A4((uint64_t)v74);
  }

  uint64_t v32 = *(void (**)(void))(v22 + 8);
  sub_252B7E3EC();
  v32();
  uint64_t v33 = *(void *)(v1 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_overrides);
  uint64_t v34 = MEMORY[0x263F8EE78];
  *(void *)uint64_t v72 = MEMORY[0x263F8EE78];
  uint64_t v35 = *(void *)(v33 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v35)
  {
    unsigned int v60 = v32;
    uint64_t v61 = (uint8_t *)v20;
    unint64_t v36 = 0;
    while (v36 < *(void *)(v33 + 16))
    {
      unint64_t v37 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      uint64_t v22 = *(void *)(v70 + 72);
      sub_252B7D99C(v33 + v37 + v22 * v36, (uint64_t)v19, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      sub_252B799E0();
      if (v38)
      {
        sub_252B7D9F0((uint64_t)v19, v69, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_252B7C240();
        }
        uint64_t v39 = *(void *)v72;
        unint64_t v40 = *(void *)(*(void *)v72 + 16);
        if (v40 >= *(void *)(*(void *)v72 + 24) >> 1)
        {
          sub_252B7C240();
          uint64_t v39 = *(void *)v72;
        }
        *(void *)(v39 + 16) = v40 + 1;
        sub_252B7D9F0(v69, v39 + v37 + v40 * v22, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
        uint64_t v1 = v68;
      }
      else
      {
        sub_252B7DA50((uint64_t)v19, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      }
      if (v35 == ++v36)
      {
        uint64_t v34 = *(void *)v72;
        uint64_t v41 = v67;
        sub_252B7E5D8();
        uint64_t v32 = v60;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v41 = v67;
    sub_252B7E5D8();
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    sub_252B7923C((uint64_t)v74);
    swift_retain();
    uint64_t v42 = sub_252B7930C(v34, v1, v74, (uint64_t (*)(void, void))sub_252B7A26C);
    sub_252B7923C((uint64_t)v74);
    swift_retain();
    uint64_t v43 = sub_252B7930C(v42, v1, v74, sub_252B7A560);
    sub_252B7923C((uint64_t)v74);
    swift_retain();
    uint64_t v44 = sub_252B7930C(v43, v1, v74, (uint64_t (*)(void, void))sub_252B7A6C4);
    sub_252B776B8(v44, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)v19);
    swift_bridgeObjectRelease();
    sub_252B22A90((uint64_t)v19, 1, v22);
    if (v45)
    {
      sub_252B5A4CC((uint64_t)v19, &qword_269C437C0);
      sub_252D198C8();
      uint64_t v46 = sub_252D19B08();
      os_log_type_t v47 = sub_252D1A098();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl(&dword_252AC1000, v46, v47, "No overrides to match", v48, 2u);
        sub_252B5F6E0();
      }

      sub_252B7E3EC();
      v32();
      *(unsigned char *)(v41 + 96) = 0;
      *(_OWORD *)(v41 + 64) = 0u;
      *(_OWORD *)(v41 + 80) = 0u;
      *(_OWORD *)(v41 + 32) = 0u;
      *(_OWORD *)(v41 + 48) = 0u;
      *(_OWORD *)uint64_t v41 = 0u;
      *(_OWORD *)(v41 + 16) = 0u;
    }
    else
    {
      uint64_t v49 = (uint64_t)v19;
      uint64_t v50 = v62;
      sub_252B7D9F0(v49, (uint64_t)v62, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      uint64_t v52 = *v50;
      uint64_t v51 = v50[1];
      sub_252B22858((uint64_t)v50 + *(int *)(v22 + 36), v65, &qword_269C42338);
      swift_bridgeObjectRetain();
      sub_252B79560();
      sub_252B7DA50((uint64_t)v50, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      char v53 = v73;
      long long v54 = *(_OWORD *)v72;
      long long v55 = *(_OWORD *)&v72[16];
      long long v56 = *(_OWORD *)&v72[32];
      long long v57 = *(_OWORD *)&v72[48];
      long long v58 = *(_OWORD *)&v72[64];
      *(void *)uint64_t v41 = v52;
      *(void *)(v41 + 8) = v51;
      *(_OWORD *)(v41 + 16) = v54;
      *(_OWORD *)(v41 + 32) = v55;
      *(_OWORD *)(v41 + 48) = v56;
      *(_OWORD *)(v41 + 64) = v57;
      *(_OWORD *)(v41 + 80) = v58;
      *(unsigned char *)(v41 + 96) = v53;
    }
    sub_252AFC718();
  }
}

uint64_t sub_252B7923C(uint64_t a1)
{
  return a1;
}

uint64_t sub_252B792A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_252B7930C(uint64_t a1, uint64_t a2, const void *a3, uint64_t (*a4)(void, void))
{
  uint64_t v9 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  uint64_t v10 = sub_252AEDBEC(v9);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v10);
  sub_252AEDC14();
  uint64_t v28 = v12;
  sub_252B22C04();
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27)
  {
    uint64_t v23 = v4;
    uint64_t v24 = a4;
    unint64_t v18 = 0;
    uint64_t v25 = a2;
    uint64_t v26 = a1;
    while (v18 < *(void *)(a1 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v20 = *(void *)(v29 + 72);
      sub_252B7D99C(a1 + v19 + v20 * v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      memcpy(__dst, a3, sizeof(__dst));
      if (a4(v16, __dst))
      {
        sub_252B7D9F0((uint64_t)v16, v28, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_252B7C240();
        }
        uint64_t v21 = v31;
        unint64_t v22 = *(void *)(v31 + 16);
        if (v22 >= *(void *)(v31 + 24) >> 1)
        {
          sub_252B7C240();
          uint64_t v21 = v31;
        }
        *(void *)(v21 + 16) = v22 + 1;
        uint64_t result = sub_252B7D9F0(v28, v21 + v19 + v22 * v20, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
        a1 = v26;
        a4 = v24;
      }
      else
      {
        uint64_t result = sub_252B7DA50((uint64_t)v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      }
      if (v27 == ++v18)
      {
        uint64_t v17 = v31;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    sub_252B792A4((uint64_t)a3);
    return v17;
  }
  return result;
}

void sub_252B79560()
{
  sub_252AFC730();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252B23278();
  uint64_t v10 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0);
  uint64_t v11 = sub_252AEA368(v10);
  MEMORY[0x270FA5388](v11);
  sub_252B5F630();
  uint64_t v12 = sub_252AC3A24(&qword_269C424E0);
  uint64_t v13 = sub_252AEA368(v12);
  MEMORY[0x270FA5388](v13);
  sub_252B7E3F8();
  uint64_t v16 = v14 - v15;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = sub_252AC3A24(&qword_269C42338);
  uint64_t v21 = sub_252AEA368(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_252B5FA38();
  uint64_t v23 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(v22);
  sub_252AEA304();
  MEMORY[0x270FA5388](v24);
  sub_252AF45F0();
  sub_252B22858(v5, v3, &qword_269C42338);
  sub_252B22A90(v3, 1, v23);
  if (v30)
  {
    sub_252B5A4CC(v5, &qword_269C42338);
    uint64_t v25 = v3;
    uint64_t v26 = &qword_269C42338;
LABEL_7:
    sub_252B5A4CC(v25, v26);
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)uint64_t v7 = 0u;
    char v31 = -1;
    goto LABEL_8;
  }
  sub_252B7D9F0(v3, v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
  sub_252B22858(v2, (uint64_t)v19, &qword_269C424E0);
  uint64_t v27 = type metadata accessor for ResponseGenerationOverrides_OverrideDialogEnum(0);
  uint64_t v28 = sub_252B7E5CC();
  sub_252B22A90(v28, v29, v27);
  if (v30)
  {
    sub_252B5A4CC(v5, &qword_269C42338);
    sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
    uint64_t v26 = &qword_269C424E0;
    uint64_t v25 = (uint64_t)v19;
    goto LABEL_7;
  }
  sub_252B22858((uint64_t)v19, v16, &qword_269C424E0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_252B7D9F0(v16, (uint64_t)v0, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
      uint64_t v34 = *v0;
      uint64_t v33 = v0[1];
      uint64_t v35 = v0[2];
      uint64_t v36 = v0[3];
      uint64_t v37 = v0[5];
      uint64_t v43 = v0[4];
      uint64_t v44 = v35;
      uint64_t v38 = v0[7];
      uint64_t v42 = v0[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252B5A4CC(v5, &qword_269C42338);
      sub_252B7DA50((uint64_t)v0, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
      sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
      sub_252B5A4CC((uint64_t)v19, &qword_269C424E0);
      *(void *)uint64_t v7 = v34;
      *(void *)(v7 + 8) = v33;
      *(void *)(v7 + 16) = v44;
      *(void *)(v7 + 24) = v36;
      *(void *)(v7 + 32) = v43;
      *(void *)(v7 + 40) = v37;
      *(void *)(v7 + 48) = v42;
      *(void *)(v7 + 56) = v38;
      *(void *)(v7 + 64) = 0;
      *(void *)(v7 + 72) = 0;
      *(unsigned char *)(v7 + 80) = 0;
      goto LABEL_9;
    }
    sub_252B5A4CC(v5, &qword_269C42338);
    sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
    sub_252B7D9F0(v16, (uint64_t)v1, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
    uint64_t v40 = *v1;
    uint64_t v39 = v1[1];
    swift_bridgeObjectRetain();
    sub_252B7DA50((uint64_t)v1, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
    sub_252B5A4CC((uint64_t)v19, &qword_269C424E0);
    *(void *)uint64_t v7 = v40;
    *(void *)(v7 + 8) = v39;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    char v31 = 1;
  }
  else
  {
    sub_252B5A4CC(v5, &qword_269C42338);
    sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
    sub_252B7DA50(v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_OverrideDialogEnum);
    sub_252B5A4CC((uint64_t)v19, &qword_269C424E0);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    char v31 = 2;
  }
LABEL_8:
  *(unsigned char *)(v7 + 80) = v31;
LABEL_9:
  sub_252AFC718();
}

__n128 ResponseOverride.init(identifier:dialog:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *(unsigned char *)(a3 + 80);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 32) = v5;
  long long v6 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a4 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a4 + 64) = v6;
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a4 + 80) = result;
  *(unsigned char *)(a4 + 96) = v4;
  return result;
}

void sub_252B799E0()
{
  sub_252AFC730();
  uint64_t v2 = v1;
  uint64_t v3 = sub_252AC3A24(&qword_269C42318);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252AEDE70();
  uint64_t v62 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C42328);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252AEDC14();
  uint64_t v63 = v8;
  sub_252B22C04();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v13);
  sub_252B7E3F8();
  uint64_t v16 = v14 - v15;
  MEMORY[0x270FA5388](v17);
  sub_252AEDDB4();
  uint64_t v66 = v18;
  sub_252B22C04();
  MEMORY[0x270FA5388](v19);
  sub_252AEDDB4();
  uint64_t v65 = v20;
  sub_252B22C04();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v61 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v61 - v25;
  uint64_t v27 = sub_252AC3A24(&qword_269C42348);
  uint64_t v28 = sub_252AEA368(v27);
  MEMORY[0x270FA5388](v28);
  sub_252B7E478();
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v61 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v61 - v33;
  sub_252B22858(v2 + *(int *)(v12 + 32), (uint64_t)&v61 - v33, &qword_269C42348);
  uint64_t v35 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  sub_252B22A90((uint64_t)v34, 1, v35);
  uint64_t v64 = v0;
  uint64_t v36 = v2;
  uint64_t v37 = (int *)v12;
  if (v38)
  {
    sub_252B5A4CC((uint64_t)v34, &qword_269C42348);
  }
  else
  {
    uint64_t v39 = *(void *)&v34[*(int *)(v35 + 20) + 8];
    swift_bridgeObjectRetain();
    sub_252B7DA50((uint64_t)v34, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    if (v39)
    {
      swift_bridgeObjectRelease();
      sub_252B7D99C(v36, (uint64_t)v26, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      sub_252B7DA50((uint64_t)v26, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      sub_252B7D99C(v36, (uint64_t)v24, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
LABEL_13:
      sub_252B7DA50((uint64_t)v24, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
LABEL_14:
      uint64_t v47 = v65;
      uint64_t v48 = v66;
      sub_252B7D99C(v36, v65, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      sub_252B7DA50(v47, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      sub_252B7D99C(v36, v48, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
LABEL_15:
      sub_252B7DA50(v48, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      sub_252B7D99C(v36, v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
LABEL_16:
      sub_252B7DA50(v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      goto LABEL_17;
    }
  }
  sub_252B7D99C(v36, (uint64_t)v26, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  sub_252B22858((uint64_t)&v26[v37[8]], (uint64_t)v32, &qword_269C42348);
  uint64_t v40 = sub_252B7E5CC();
  sub_252B22A90(v40, v41, v35);
  if (v38)
  {
    sub_252B5A4CC((uint64_t)v32, &qword_269C42348);
    uint64_t v42 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v11, 1, 1, v42);
  }
  else
  {
    sub_252B22858((uint64_t)v32, (uint64_t)v11, &qword_269C42328);
    sub_252B7DA50((uint64_t)v32, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  }
  char v43 = sub_252B7A0CC((uint64_t)v11);
  sub_252B5A4CC((uint64_t)v11, &qword_269C42328);
  sub_252B7DA50((uint64_t)v26, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  sub_252B7D99C(v36, (uint64_t)v24, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  if ((v43 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v44 = v64;
  sub_252B22858((uint64_t)&v24[v37[8]], v64, &qword_269C42348);
  sub_252B7DA50((uint64_t)v24, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  uint64_t v45 = sub_252B7E5EC();
  sub_252B22A90(v45, v46, v35);
  if (v38)
  {
    sub_252B5A4CC(v44, &qword_269C42348);
  }
  else
  {
    uint64_t v49 = *(void *)(v44 + *(int *)(v35 + 24) + 8);
    swift_bridgeObjectRetain();
    sub_252B7DA50(v44, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    if (v49)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  uint64_t v50 = v65;
  sub_252B7D99C(v36, v65, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  uint64_t v51 = *(void *)(*(void *)(v50 + 24) + 16);
  sub_252B7DA50(v50, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  uint64_t v48 = v66;
  sub_252B7D99C(v36, v66, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  if (v51) {
    goto LABEL_15;
  }
  char v52 = sub_252B7A0CC(v48 + v37[12]);
  sub_252B7DA50(v48, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  sub_252B7D99C(v36, v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  if ((v52 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v53 = v62;
  sub_252B22858(v16 + v37[13], v62, &qword_269C42318);
  type metadata accessor for ResponseGenerationOverrides_CustomEntityDescriptionPredicate(0);
  uint64_t v54 = sub_252B7E5CC();
  sub_252B22A90(v54, v55, v56);
  uint64_t v57 = v63;
  if (v38)
  {
    sub_252B5A4CC(v53, &qword_269C42318);
    type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    uint64_t v58 = sub_252B7E5EC();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v58, v59, 1, v60);
  }
  else
  {
    sub_252B22858(v53, v63, &qword_269C42328);
    sub_252B7DA50(v53, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_CustomEntityDescriptionPredicate);
  }
  sub_252B7A0CC(v57);
  sub_252B5A4CC(v57, &qword_269C42328);
  sub_252B7DA50(v16, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
LABEL_17:
  sub_252AFC718();
}

uint64_t sub_252B7A0CC(uint64_t a1)
{
  uint64_t v3 = sub_252AC3A24(&qword_269C42328);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252B5F6A0();
  uint64_t v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252B22858(a1, v1, &qword_269C42328);
  sub_252B22A90(v1, 1, v5);
  if (v9)
  {
    sub_252B5A4CC(v1, &qword_269C42328);
    return 1;
  }
  else
  {
    sub_252B7D9F0(v1, (uint64_t)v8, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    BOOL v10 = *v8 == 0;
    sub_252B7DA50((uint64_t)v8, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
  return v10;
}

uint64_t sub_252B7A204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((sub_252B7A0CC(a1) & 1) == 0) {
    return sub_252B22858(a1, a2, &qword_269C42328);
  }
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  uint64_t v4 = sub_252B7E590();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, v5, v6, v7);
}

void sub_252B7A26C()
{
  sub_252AFC730();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_252AC3A24(&qword_269C42328);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252AC423C();
  uint64_t v10 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v11);
  sub_252AF45F0();
  uint64_t v12 = sub_252AC3A24(&qword_269C42348);
  uint64_t v13 = sub_252AEA368(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252B5FA38();
  uint64_t v15 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252B5F6A0();
  uint64_t v30 = v5[5];
  uint64_t v31 = v5[4];
  uint64_t v17 = v5[6];
  uint64_t v18 = v5[7];
  uint64_t v29 = v17;
  uint64_t v19 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_252B22858(v7 + *(int *)(v19 + 32), v3, &qword_269C42348);
  sub_252B22A90(v3, 1, v15);
  if (!v20)
  {
    sub_252B7D9F0(v3, v0, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    sub_252B7A204(v0, v1);
    sub_252B22A90(v1, 1, v10);
    if (v20)
    {
      sub_252B5A4CC(v1, &qword_269C42328);
    }
    else
    {
      sub_252B7D9F0(v1, v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      sub_252B7A938();
      char v22 = v21;
      sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      if ((v22 & 1) == 0) {
        goto LABEL_20;
      }
    }
    uint64_t v23 = (void *)(v0 + *(int *)(v15 + 24));
    uint64_t v24 = v23[1];
    if (!v24 || (*v23 == v31 ? (BOOL v25 = v24 == v30) : (BOOL v25 = 0), v25 || (sub_252D1A5D8() & 1) != 0))
    {
      uint64_t v26 = (void *)(v0 + *(int *)(v15 + 20));
      uint64_t v27 = v26[1];
      if (v27)
      {
        if (*v26 != v29 || v27 != v18)
        {
          sub_252D1A5D8();
          sub_252B7DA50(v0, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
          goto LABEL_21;
        }
      }
    }
LABEL_20:
    sub_252B7DA50(v0, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    goto LABEL_21;
  }
  sub_252B5A4CC(v3, &qword_269C42348);
LABEL_21:
  sub_252AFC718();
}

uint64_t sub_252B7A560(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_252AC3A24(&qword_269C42328);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252B7E494();
  uint64_t v9 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B5F6A0();
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_252B7A204(a1 + *(int *)(v12 + 48), v3);
  uint64_t v13 = sub_252B7E5EC();
  sub_252B22A90(v13, v14, v9);
  if (v15)
  {
    sub_252B5A4CC(v3, &qword_269C42328);
    char v16 = 1;
  }
  else
  {
    sub_252B7D9F0(v3, v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    if (v11)
    {
      sub_252B7A938();
      char v16 = v17;
      sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    }
    else
    {
      sub_252B7DA50(v2, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      char v16 = 0;
    }
  }
  return v16 & 1;
}

void sub_252B7A6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_252AFC730();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = sub_252AC3A24(&qword_269C42318);
  uint64_t v29 = sub_252AEA368(v28);
  MEMORY[0x270FA5388](v29);
  sub_252AC423C();
  uint64_t v30 = sub_252AC3A24(&qword_269C42328);
  uint64_t v31 = sub_252AEA368(v30);
  MEMORY[0x270FA5388](v31);
  sub_252B7E3F8();
  uint64_t v34 = v32 - v33;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&a9 - v36;
  uint64_t v38 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v39);
  sub_252B5F6A0();
  uint64_t v40 = *(void *)(v25 + 64);
  uint64_t v41 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_252B22858(v27 + *(int *)(v41 + 52), v21, &qword_269C42318);
  uint64_t v42 = type metadata accessor for ResponseGenerationOverrides_CustomEntityDescriptionPredicate(0);
  sub_252B22A90(v21, 1, v42);
  if (v43)
  {
    sub_252B5A4CC(v21, &qword_269C42318);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v34, 1, 1, v38);
  }
  else
  {
    sub_252B22858(v21, v34, &qword_269C42328);
    sub_252B7DA50(v21, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_CustomEntityDescriptionPredicate);
  }
  sub_252B7A204(v34, (uint64_t)v37);
  sub_252B5A4CC(v34, &qword_269C42328);
  sub_252B22A90((uint64_t)v37, 1, v38);
  if (v43)
  {
    sub_252B5A4CC((uint64_t)v37, &qword_269C42328);
  }
  else
  {
    uint64_t v44 = sub_252B7E4CC();
    sub_252B7D9F0(v44, v45, v46);
    uint64_t v47 = *(void *)(v40 + 16);
    if (v47)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = v47 - 1;
      uint64_t v49 = v40 + 40;
      do
      {
        uint64_t v50 = v48;
        swift_bridgeObjectRetain();
        sub_252B7A938();
        char v52 = v51;
        swift_bridgeObjectRelease();
        if (v52) {
          break;
        }
        uint64_t v48 = v50 - 1;
        v49 += 16;
      }
      while (v50);
      swift_bridgeObjectRelease();
    }
    sub_252B7DA50(v20, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
  sub_252AFC718();
}

void sub_252B7A938()
{
  sub_252AFC730();
  uint64_t v49 = v3;
  uint64_t v50 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_252D19B18();
  sub_252AEDBD0();
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v8);
  sub_252B7E3F8();
  MEMORY[0x270FA5388](v9);
  sub_252AEDD54();
  uint64_t v47 = v10;
  uint64_t v11 = sub_252AC3A24(&qword_269C437D8);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  sub_252B7E478();
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_252AC3A24(&qword_269C437E0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  sub_252B7E3F8();
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v43 - v20;
  if (!*(unsigned char *)v5) {
    goto LABEL_20;
  }
  if (*(unsigned char *)v5 != 1)
  {
    uint64_t v45 = v6;
    uint64_t v46 = v19;
    uint64_t v24 = *(void *)(v5 + 8);
    unint64_t v25 = *(void *)(v5 + 16);
    uint64_t v26 = (uint64_t *)(v0 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_regexCache);
    swift_beginAccess();
    uint64_t v27 = *v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_252CE9C58(v24, v25, v27, (uint64_t)v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_252B7E5EC();
    sub_252B22A90(v28, v29, v16);
    if (v22)
    {
      sub_252B5A4CC((uint64_t)v15, &qword_269C437D8);
      swift_bridgeObjectRetain();
      sub_252D19628();
      uint64_t v31 = v46;
      sub_252B7E53C();
      v32();
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v1, v21, v16);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 0, 1, v16);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v44 = v24;
      sub_252CEE4F8(v1, v24, v25);
      swift_endAccess();
    }
    else
    {
      uint64_t v44 = v24;
      sub_252B7E53C();
      v30();
    }
    unint64_t v33 = v49;
    v51[0] = v50;
    v51[1] = v49;
    sub_252D19618();
    sub_252B7CF70();
    sub_252B7CFBC();
    unint64_t v34 = *(void *)(sub_252D19CE8() + 16);
    swift_bridgeObjectRelease();
    if (v34 < 2)
    {
      swift_bridgeObjectRelease();
      sub_252B7E5A4();
      sub_252B5F53C();
      v38();
    }
    else
    {
      sub_252D198C8();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_252D19B08();
      os_log_type_t v36 = sub_252D1A0A8();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        v51[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_252B58B30(v44, v25, v51);
        sub_252D1A188();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v37 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_252B58B30(v50, v33, v51);
        sub_252D1A188();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_252AC1000, v35, v36, "Regex matched the input more than once for regex: \"%s\" and value: \"%s\"", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        sub_252B5F6E0();
        sub_252B5F6E0();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        sub_252B7E4D8();
      }
      sub_252B5F53C();
      v39();
      uint64_t v40 = sub_252B7E5A4();
      v42(v40, v41);
    }
    goto LABEL_20;
  }
  BOOL v22 = *(void *)(v5 + 8) == v50 && *(void *)(v5 + 16) == v49;
  if (v22)
  {
LABEL_20:
    sub_252AFC718();
    return;
  }
  sub_252AFC718();
  sub_252D1A5D8();
}

uint64_t ResponseOverrideMatcher.deinit()
{
  sub_252B7DA50(v0 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_overrides, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ResponseOverrideMatcher.__deallocating_deinit()
{
  sub_252B7DA50(v0 + OBJC_IVAR____TtC16IntelligenceFlow23ResponseOverrideMatcher_overrides, (void (*)(void))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
  swift_bridgeObjectRelease();
  sub_252B7E3D8();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return MEMORY[0x270FA0228](v0, v2, v3);
}

void __swiftcall ResponseOverrideInput.init(utterance:response:interfaceIdiom:deviceType:)(IntelligenceFlow::ResponseOverrideInput *__return_ptr retstr, Swift::String_optional utterance, Swift::String_optional response, Swift::String_optional interfaceIdiom, Swift::String_optional deviceType)
{
  if (utterance.value._object) {
    uint64_t countAndFlagsBits = utterance.value._countAndFlagsBits;
  }
  else {
    uint64_t countAndFlagsBits = 0;
  }
  uint64_t v6 = (void *)0xE000000000000000;
  if (utterance.value._object) {
    object = utterance.value._object;
  }
  else {
    object = (void *)0xE000000000000000;
  }
  if (interfaceIdiom.value._object) {
    uint64_t v8 = interfaceIdiom.value._countAndFlagsBits;
  }
  else {
    uint64_t v8 = 0;
  }
  if (interfaceIdiom.value._object) {
    uint64_t v9 = interfaceIdiom.value._object;
  }
  else {
    uint64_t v9 = (void *)0xE000000000000000;
  }
  if (deviceType.value._object) {
    uint64_t v10 = deviceType.value._countAndFlagsBits;
  }
  else {
    uint64_t v10 = 0;
  }
  if (deviceType.value._object) {
    uint64_t v6 = deviceType.value._object;
  }
  retstr->utterance._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->utterance._object = object;
  retstr->response = response;
  retstr->interfaceIdiom._uint64_t countAndFlagsBits = v8;
  retstr->interfaceIdiom._object = v9;
  retstr->deviceType._uint64_t countAndFlagsBits = v10;
  retstr->deviceType._object = v6;
  sub_252B7E548((uint64_t)retstr);
}

void __swiftcall ResponseOverrideInput.init(utterance:response:interfaceIdiom:deviceType:customEntityDescriptions:)(IntelligenceFlow::ResponseOverrideInput *__return_ptr retstr, Swift::String_optional utterance, Swift::String_optional response, Swift::String_optional interfaceIdiom, Swift::String_optional deviceType, Swift::OpaquePointer customEntityDescriptions)
{
  if (utterance.value._object) {
    uint64_t countAndFlagsBits = utterance.value._countAndFlagsBits;
  }
  else {
    uint64_t countAndFlagsBits = 0;
  }
  if (utterance.value._object) {
    object = utterance.value._object;
  }
  else {
    object = (void *)0xE000000000000000;
  }
  retstr->utterance._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->utterance._object = object;
  if (interfaceIdiom.value._object) {
    uint64_t v8 = interfaceIdiom.value._countAndFlagsBits;
  }
  else {
    uint64_t v8 = 0;
  }
  if (interfaceIdiom.value._object) {
    uint64_t v9 = interfaceIdiom.value._object;
  }
  else {
    uint64_t v9 = (void *)0xE000000000000000;
  }
  retstr->response = response;
  if (deviceType.value._object) {
    uint64_t v10 = deviceType.value._countAndFlagsBits;
  }
  else {
    uint64_t v10 = 0;
  }
  retstr->interfaceIdiom._uint64_t countAndFlagsBits = v8;
  retstr->interfaceIdiom._object = v9;
  if (deviceType.value._object) {
    uint64_t v11 = deviceType.value._object;
  }
  else {
    uint64_t v11 = (void *)0xE000000000000000;
  }
  retstr->deviceType._uint64_t countAndFlagsBits = v10;
  retstr->deviceType._object = v11;
  sub_252B7E548((uint64_t)retstr);
}

void __swiftcall ResponseOverrideInput.init(utterance:response:interfaceIdiom:deviceType:customEntityDescriptions:)(IntelligenceFlow::ResponseOverrideInput *__return_ptr retstr, Swift::String utterance, Swift::String_optional response, Swift::String interfaceIdiom, Swift::String deviceType, Swift::OpaquePointer customEntityDescriptions)
{
  retstr->utterance = utterance;
  retstr->response = response;
  retstr->interfaceIdiom = interfaceIdiom;
  retstr->deviceType = deviceType;
  sub_252B7E548((uint64_t)retstr);
}

uint64_t ResponseOverride.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseOverride.dialog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v11 = *(void *)(v1 + 88);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 96);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_252B7C294(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_252B7B168()
{
  sub_252AFC730();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_26B230E38);
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  sub_252B7E494();
  uint64_t v6 = sub_252D195B8();
  sub_252AEDBD0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_252AF45F0();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v1, *MEMORY[0x263F07570], v6);
  sub_252D19598();
  uint64_t v10 = sub_252D195A8();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  sub_252AC3A24(&qword_269C43868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_252D2A140;
  *(void *)(inited + 32) = 0x75676E616C2E6772;
  *(void *)(inited + 40) = 0xEB00000000656761;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_252D19CA8();
  id v15 = objc_msgSend(self, sel_sharedManager);
  sub_252B7E570();
  uint64_t v16 = (void *)sub_252D19D18();
  id v17 = sub_252B7DB0C((uint64_t)v16, v14, v15);

  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_252D19498();
    uint64_t v24 = sub_252B7E590();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v24, v25, v26, v27);
    goto LABEL_10;
  }
  id v18 = v17;
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_252D19D18();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_assetNamed_, v19, 0xD000000000000033, 0x8000000252D1D1B0);

  if (!v20)
  {

    goto LABEL_7;
  }
  id v21 = objc_msgSend(v20, sel_location);
  if (v21)
  {
    BOOL v22 = v21;
    sub_252D19448();

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }

  uint64_t v28 = sub_252D19498();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v23, 1, v28);
  sub_252B7DB90(v0, v3);
LABEL_10:
  sub_252AFC718();
}

char *sub_252B7B46C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_252D1A3C8();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

void sub_252B7B500(uint64_t a1, uint64_t a2)
{
}

void sub_252B7B518(uint64_t a1, uint64_t a2)
{
}

char *sub_252B7B530(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_252D1A3C8();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_252B7B5C8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_252B7E38C();
    __n128 result = (char *)sub_252B7E3A0();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_252B7E4B0(a3, result);
  }
  return result;
}

void sub_252B7B62C(uint64_t a1, uint64_t a2)
{
}

char *sub_252B7B638(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_252D1A3C8();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

char *sub_252B7B6D0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_252D1A3C8();
    __break(1u);
  }
  else if (__dst != __src || &__src[120 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 120 * a2);
  }
  return __src;
}

void sub_252B7B76C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_252B7E38C();
    sub_252B7E3A0();
    __break(1u);
  }
  else
  {
    sub_252B7E4E4();
    if (v6 && (v5(0), sub_252AEA304(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_252B7E3C4();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      v5(0);
      sub_252B7E3C4();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *sub_252B7B858(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_252B7E38C();
    __src = (char *)sub_252B7E3A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_252B7B8CC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_252B7E38C();
    __n128 result = (char *)sub_252B7E3A0();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_252B7E4B0(a3, result);
  }
  return result;
}

void sub_252B7B928(uint64_t a1, uint64_t a2)
{
}

void sub_252B7B934(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_252B7E38C();
    sub_252B7E3A0();
    __break(1u);
  }
  else
  {
    sub_252B7E4E4();
    if (v6 && (sub_252AC3A24(v5), sub_252AEA304(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_252B7E3C4();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      sub_252AC3A24(v5);
      sub_252B7E3C4();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *sub_252B7BA18(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_252D1A3C8();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void *sub_252B7BAAC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[8 * a2] > __src ? (BOOL v3 = &__src[8 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    __n128 result = (void *)sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 8 * a2);
  }
  return result;
}

uint64_t sub_252B7BB88(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 80 * a2 > a1 ? (BOOL v3 = a1 + 80 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_252B7BC6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    sub_252AC3A24(&qword_26B2314A8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_252B7BD6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 88 * a2 > a1 ? (BOOL v3 = a1 + 88 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_252B7BE54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 120 * a2 > a1 ? (BOOL v3 = a1 + 120 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    sub_252AC3A24(&qword_269C43828);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_252B7BF5C(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0 || ((a4(0), sub_252AEA304(), sub_252B7E5B8(), !v7 & v6) ? (BOOL v8 = v5 > a3) : (BOOL v8 = 0), v8))
  {
    sub_252B7E38C();
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    sub_252B7E57C();
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_252B7C040(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  if (a2 < 0 || ((sub_252AC3A24(a4), sub_252AEA304(), sub_252B7E5B8(), !v7 & v6) ? (BOOL v8 = v5 > a3) : (BOOL v8 = 0), v8))
  {
    sub_252B7E38C();
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    sub_252B7E57C();
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_252B7C120(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_252D1A3C8();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

char *sub_252B7C200(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_252B7D114(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_252B7C220(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_252B7D1F8(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

void sub_252B7C240()
{
  sub_252B7D5B4();
  void *v0 = v1;
}

uint64_t sub_252B7C294(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255) {
    return sub_252B7C2B4(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
  return result;
}

uint64_t sub_252B7C2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11 != 1)
  {
    if (a11) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_252B7C344()
{
  return type metadata accessor for ResponseOverrideMatcher(0);
}

uint64_t sub_252B7C34C()
{
  uint64_t result = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ResponseOverrideMatcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ResponseOverrideMatcher);
}

uint64_t dispatch thunk of ResponseOverrideMatcher.__allocating_init(locale:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ResponseOverrideMatcher.__allocating_init(jsonString:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ResponseOverrideMatcher.match(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t destroy for ResponseOverrideInput()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResponseOverrideInput(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResponseOverrideInput(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ResponseOverrideInput(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for ResponseOverrideInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOverrideInput(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseOverrideInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseOverrideInput()
{
}

uint64_t destroy for ResponseOverride(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 96) != 255) {
    return sub_252B7C788(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  }
  return result;
}

uint64_t sub_252B7C788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t result = a2;
  if (a11 != 1)
  {
    if (a11) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseOverride(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x51uLL);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    uint64_t v14 = *(void *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 88);
    uint64_t v17 = v6;
    uint64_t v18 = v14;
    sub_252B7C2B4(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v5);
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v15;
    *(unsigned char *)(a1 + 96) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for ResponseOverride(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v4 != 255)
    {
      uint64_t v26 = *(void *)(a2 + 16);
      uint64_t v27 = *(void *)(a2 + 24);
      uint64_t v28 = *(void *)(a2 + 32);
      uint64_t v29 = *(void *)(a2 + 40);
      uint64_t v30 = *(void *)(a2 + 48);
      uint64_t v31 = *(void *)(a2 + 56);
      uint64_t v32 = *(void *)(a2 + 64);
      uint64_t v33 = *(void *)(a2 + 72);
      uint64_t v34 = *(void *)(a2 + 80);
      uint64_t v35 = *(void *)(a2 + 88);
      uint64_t v38 = v28;
      uint64_t v40 = v34;
      sub_252B7C2B4(v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v4);
      *(void *)(a1 + 16) = v26;
      *(void *)(a1 + 24) = v27;
      *(void *)(a1 + 32) = v38;
      *(void *)(a1 + 40) = v29;
      *(void *)(a1 + 48) = v30;
      *(void *)(a1 + 56) = v31;
      *(void *)(a1 + 64) = v32;
      *(void *)(a1 + 72) = v33;
      *(void *)(a1 + 80) = v40;
      *(void *)(a1 + 88) = v35;
      *(unsigned char *)(a1 + 96) = v4;
      return a1;
    }
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x51uLL);
    return a1;
  }
  if (v4 == 255)
  {
    sub_252B7CA88(a1 + 16);
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v37 = v7;
  uint64_t v39 = v13;
  sub_252B7C2B4(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v4);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v22 = *(void *)(a1 + 72);
  uint64_t v23 = *(void *)(a1 + 80);
  uint64_t v24 = *(void *)(a1 + 88);
  char v25 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v37;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v39;
  *(void *)(a1 + 88) = v14;
  *(unsigned char *)(a1 + 96) = v4;
  sub_252B7C788(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t sub_252B7CA88(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for ResponseOverride(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for ResponseOverride(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 == 255) {
    goto LABEL_5;
  }
  int v6 = *(unsigned __int8 *)(a2 + 96);
  if (v6 == 255)
  {
    sub_252B7CA88(a1 + 16);
LABEL_5:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x51uLL);
    return a1;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  long long v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v17;
  long long v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v18;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = v6;
  sub_252B7C788(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOverride(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseOverride(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseOverride()
{
}

uint64_t destroy for ResponseOverrideDialog(uint64_t a1)
{
  return sub_252B7C788(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
}

uint64_t initializeWithCopy for ResponseOverrideDialog(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  char v14 = *(unsigned char *)(a2 + 80);
  sub_252B7C2B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v14;
  return a1;
}

uint64_t assignWithCopy for ResponseOverrideDialog(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  char v25 = *(unsigned char *)(a2 + 80);
  sub_252B7C2B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 80);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(unsigned char *)(a1 + 80) = v25;
  sub_252B7C788(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

void *initializeWithTake for ResponseOverrideDialog(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t assignWithTake for ResponseOverrideDialog(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = v3;
  sub_252B7C788(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseOverrideDialog(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 81))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseOverrideDialog(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_252B7CF1C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 80) <= 1u) {
    return *(unsigned __int8 *)(a1 + 80);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_252B7CF34(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)(result + 72) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 80) = a2;
  return result;
}

void type metadata accessor for ResponseOverrideDialog()
{
}

unint64_t sub_252B7CF70()
{
  unint64_t result = qword_269C437E8;
  if (!qword_269C437E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C437E8);
  }
  return result;
}

unint64_t sub_252B7CFBC()
{
  unint64_t result = qword_269C437F0;
  if (!qword_269C437F0)
  {
    sub_252AEA288(&qword_269C437E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C437F0);
  }
  return result;
}

char *sub_252B7D010(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_252B7D2E4(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_252B7D030(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_252B7D3DC(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_252B7D050(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_252B7D4C8(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

void sub_252B7D070()
{
  sub_252B7D5B4();
  void *v0 = v1;
}

size_t sub_252B7D0C4(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_252B7D73C(a1, a2, a3, *v3, &qword_269C43808, &qword_269C43810);
  uint64_t *v3 = result;
  return result;
}

char *sub_252B7D0F4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_252B7D8B8(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_252B7D114(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_269C437F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B7B46C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7BAAC(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_252B7D1F8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_269C43870);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B7B530(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7BB88((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_252B7D2E4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_26B231750);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B7B8CC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7BC6C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

size_t sub_252B7D3C8(size_t a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_252B7D73C(a1, a2, a3, a4, &qword_269C43840, &qword_269C43838);
}

char *sub_252B7D3DC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_269C43830);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B7B638(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7BD6C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_252B7D4C8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_269C43820);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B7B6D0(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7BE54((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_252B7D5B4()
{
  sub_252AFC730();
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  uint64_t v7 = v1;
  char v9 = v8;
  if (v10)
  {
    unint64_t v11 = *(void *)(v1 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < v0)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= v0) {
        uint64_t v12 = v0;
      }
    }
  }
  else
  {
    uint64_t v12 = v0;
  }
  uint64_t v13 = *(void *)(v1 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(v1 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v20 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_252AC3A24(v2);
  uint64_t v15 = v6(0);
  sub_252AEDBEC(v15);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  size_t v21 = j__malloc_size(v20);
  if (!v17)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v21 - v19 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_24;
  }
  v20[2] = v13;
  v20[3] = 2 * ((uint64_t)(v21 - v19) / v17);
LABEL_19:
  uint64_t v23 = *(void *)(v6(0) - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = v7 + v24;
  if (v9)
  {
    sub_252B7B76C(v25, v13);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    sub_252B7BF5C(v25, v13, (unint64_t)v20 + v24, v4);
  }
  swift_release();
  sub_252AFC718();
}

size_t sub_252B7D73C(size_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_252AC3A24(a5);
  uint64_t v13 = sub_252AC3A24(a6);
  sub_252AEDBEC(v13);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_24;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(sub_252AC3A24(a6) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = a4 + v21;
  if (v8)
  {
    sub_252B7B934(v22, v11);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7C040(v22, v11, (unint64_t)v18 + v21, a6);
  }
  swift_release();
  return (size_t)v18;
}

char *sub_252B7D8B8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_269C43800);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_252B7BA18(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_252B7C120((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_252B7D99C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  uint64_t v4 = sub_252B239AC();
  v5(v4);
  return a2;
}

uint64_t sub_252B7D9F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_252B7DA50(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

uint64_t type metadata accessor for ResponseGenerationOverridesLoader.OverrideLoadingError(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C43878);
}

uint64_t sub_252B7DAC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_252B7DB0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)sub_252D19C98();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(a3, sel_retrieveAssetSet_usages_, a1, v5);

  return v6;
}

uint64_t sub_252B7DB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_26B230E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_252B7DBF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_252AC3A24(&qword_269C43858);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_252D19498();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_252B7DD00(uint64_t a1)
{
  uint64_t v2 = sub_252AC3A24(&qword_269C43858);
  uint64_t result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_252D19498();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_252B7DD90(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_252AC3A24(&qword_269C43858);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_252D19498();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_252B7DE5C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_252AC3A24(&qword_269C43858);
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = sub_252D19498();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_252B5A4CC((uint64_t)a1, &qword_269C43858);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_252D19498();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_252B7DF9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_252AC3A24(&qword_269C43858);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_252D19498();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_252B7E068(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_252AC3A24(&qword_269C43858);
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = sub_252D19498();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_252B5A4CC((uint64_t)a1, &qword_269C43858);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_252D19498();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_252B7E1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B7E1BC);
}

uint64_t sub_252B7E1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C43858);
  unsigned int v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_252B7E208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B7E21C);
}

uint64_t sub_252B7E21C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_252AC3A24(&qword_269C43858);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, v5, a3, v6);
}

uint64_t sub_252B7E27C(uint64_t a1)
{
  uint64_t v2 = sub_252AC3A24(&qword_269C43858);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v2);
}

uint64_t sub_252B7E2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_269C43858);

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, 1, v4);
}

uint64_t sub_252B7E314()
{
  uint64_t result = sub_252D19498();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_252B7E3A0()
{
  return sub_252D1A3C8();
}

uint64_t sub_252B7E3C4()
{
  return v0;
}

uint64_t sub_252B7E408()
{
  return sub_252D19768();
}

uint64_t sub_252B7E43C(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_252B7E454@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_252B7E494()
{
  return 0;
}

void *sub_252B7E4B0@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_252B7E4CC()
{
  return v0;
}

uint64_t sub_252B7E4D8()
{
  return v0;
}

uint64_t sub_252B7E51C()
{
  return swift_slowAlloc();
}

void sub_252B7E548(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) = v1;
}

void sub_252B7E550(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_252B7E57C()
{
  return v0;
}

uint64_t sub_252B7E590()
{
  return v0;
}

uint64_t sub_252B7E5A4()
{
  return v0;
}

uint64_t sub_252B7E5CC()
{
  return v0;
}

uint64_t sub_252B7E5EC()
{
  return v0;
}

uint64_t static RGPluginModel.bundleName.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_269C43888;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static RGPluginModel.bundleName.setter(uint64_t a1, void *a2)
{
  qword_269C43888 = a1;
  off_269C43890 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RGPluginModel.bundleName.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_252B7E704(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1D210 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1D230 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1D250 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1D270 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v5 = a1 == 1685217635 && a2 == 0xE400000000000000;
    if (v5 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v6 = a1 == 0x6465766968637261 && a2 == 0xEC00000077656956;
      if (v6 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v7 = a1 == 0x5653445369726973 && a2 == 0xEB00000000776569;
        if (v7 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v8 = a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000;
          if (v8 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D290)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            char v9 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v9) {
              return 8;
            }
            else {
              return 9;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252B7EA94()
{
  return 9;
}

unint64_t sub_252B7EA9C(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 1685217635;
      break;
    case 5:
      unint64_t result = 0x6465766968637261;
      break;
    case 6:
      unint64_t result = 0x5653445369726973;
      break;
    case 7:
      unint64_t result = 0x6C6F72746E6F63;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252B7EBBC(uint64_t a1)
{
  unint64_t v2 = sub_252B801D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EBF8(uint64_t a1)
{
  unint64_t v2 = sub_252B801D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7EC34(uint64_t a1)
{
  unint64_t v2 = sub_252B7FF60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EC70(uint64_t a1)
{
  unint64_t v2 = sub_252B7FF60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7ECAC(uint64_t a1)
{
  unint64_t v2 = sub_252B7FFF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7ECE8(uint64_t a1)
{
  unint64_t v2 = sub_252B7FFF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_252B7ED24()
{
  return sub_252B7EA9C(*v0);
}

uint64_t sub_252B7ED2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B7E704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B7ED54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252B7EA94();
  *a1 = result;
  return result;
}

uint64_t sub_252B7ED7C(uint64_t a1)
{
  unint64_t v2 = sub_252B7FDE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EDB8(uint64_t a1)
{
  unint64_t v2 = sub_252B7FDE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7EDF4(uint64_t a1)
{
  unint64_t v2 = sub_252B7FE7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EE30(uint64_t a1)
{
  unint64_t v2 = sub_252B7FE7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7EE6C(uint64_t a1)
{
  unint64_t v2 = sub_252B80220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EEA8(uint64_t a1)
{
  unint64_t v2 = sub_252B80220();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7EEE4(uint64_t a1)
{
  unint64_t v2 = sub_252B80188();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EF20(uint64_t a1)
{
  unint64_t v2 = sub_252B80188();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7EF5C(uint64_t a1)
{
  unint64_t v2 = sub_252B7FE30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7EF98(uint64_t a1)
{
  unint64_t v2 = sub_252B7FE30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7EFD4(uint64_t a1)
{
  unint64_t v2 = sub_252B7FEC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7F010(uint64_t a1)
{
  unint64_t v2 = sub_252B7FEC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B7F04C(uint64_t a1)
{
  unint64_t v2 = sub_252B800A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B7F088(uint64_t a1)
{
  unint64_t v2 = sub_252B800A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGPluginModel.encode(to:)()
{
  sub_252AF4380();
  uint64_t v110 = v1;
  uint64_t v111 = v0;
  BOOL v6 = v5;
  sub_252AC3A24(&qword_269C43898);
  sub_252AEDBD0();
  unint64_t v106 = v8;
  uint64_t v107 = v7;
  MEMORY[0x270FA5388](v7);
  sub_252B5FA1C(v9, v83[0]);
  uint64_t v105 = sub_252AC3A24(&qword_269C438A0);
  sub_252AEDBD0();
  uint64_t v103 = v10;
  MEMORY[0x270FA5388](v11);
  sub_252B98874(v12, v83[0]);
  uint64_t v99 = type metadata accessor for RGControlModel(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v13);
  sub_252B9883C(v14, v83[0]);
  sub_252AC3A24(&qword_269C438A8);
  sub_252AEDBD0();
  uint64_t v100 = v16;
  uint64_t v101 = v15;
  MEMORY[0x270FA5388](v15);
  sub_252B9857C((uint64_t)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v98 = sub_252AC3A24(&qword_269C438B0);
  sub_252AEDBD0();
  uint64_t v97 = v18;
  MEMORY[0x270FA5388](v19);
  sub_252AEDE70();
  sub_252B9857C(v20);
  uint64_t v96 = sub_252AC3A24(&qword_269C438B8);
  sub_252AEDBD0();
  uint64_t v95 = v21;
  MEMORY[0x270FA5388](v22);
  sub_252AEDE70();
  sub_252B9857C(v23);
  uint64_t v94 = sub_252AC3A24(&qword_269C438C0);
  sub_252AEDBD0();
  uint64_t v93 = v24;
  MEMORY[0x270FA5388](v25);
  sub_252AEDE70();
  uint64_t v27 = sub_252B7E454(v26);
  uint64_t v91 = type metadata accessor for RGToolDisambiguationModel(v27);
  sub_252AEA304();
  MEMORY[0x270FA5388](v28);
  sub_252AEDE70();
  sub_252B9857C(v29);
  uint64_t v90 = sub_252AC3A24(&qword_269C438C8);
  sub_252AEDBD0();
  uint64_t v89 = v30;
  MEMORY[0x270FA5388](v31);
  sub_252AEDE70();
  uint64_t v33 = sub_252B7E454(v32);
  uint64_t v87 = type metadata accessor for RGParameterConfirmationModel(v33);
  sub_252AEA304();
  MEMORY[0x270FA5388](v34);
  sub_252AEDE70();
  sub_252B9857C(v35);
  uint64_t v86 = sub_252AC3A24(&qword_269C438D0);
  sub_252AEDBD0();
  uint64_t v85 = v36;
  MEMORY[0x270FA5388](v37);
  sub_252AEDE70();
  uint64_t v39 = sub_252B7E454(v38);
  v83[3] = type metadata accessor for RGActionConfirmationModel(v39);
  sub_252AEA304();
  MEMORY[0x270FA5388](v40);
  sub_252AEDE70();
  sub_252B9857C(v41);
  v83[2] = sub_252AC3A24(&qword_269C438D8);
  sub_252AEDBD0();
  v83[1] = v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = sub_252B4C76C();
  type metadata accessor for RGDisambiguationModel(v44);
  sub_252AEA304();
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = sub_252B9835C();
  type metadata accessor for RGPluginModel(v46);
  sub_252AEA304();
  MEMORY[0x270FA5388](v47);
  sub_252B5F688();
  uint64_t v120 = sub_252AC3A24(&qword_269C438E0);
  sub_252AEDBD0();
  uint64_t v109 = v48;
  MEMORY[0x270FA5388](v49);
  sub_252AC423C();
  uint64_t v50 = v6[3];
  sub_252AC3A68(v6, v50);
  sub_252B7FDE4();
  uint64_t v108 = v3;
  sub_252D1A738();
  sub_252B8A160(v111, (uint64_t)v4, (void (*)(void))type metadata accessor for RGPluginModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v55 = v84;
      sub_252B80044((uint64_t)v4, v84, (void (*)(void))type metadata accessor for RGActionConfirmationModel);
      LOBYTE(v112) = 1;
      sub_252B801D4();
      sub_252B981A8();
      sub_252B800EC(&qword_269C43958, (void (*)(uint64_t))type metadata accessor for RGActionConfirmationModel);
      sub_252B98D40();
      sub_252B98674();
      sub_252B5F53C();
      v56();
      uint64_t v57 = type metadata accessor for RGActionConfirmationModel;
      goto LABEL_11;
    case 2u:
      uint64_t v55 = v88;
      sub_252B80044((uint64_t)v4, v88, (void (*)(void))type metadata accessor for RGParameterConfirmationModel);
      LOBYTE(v112) = 2;
      sub_252B80188();
      sub_252B981A8();
      sub_252B800EC(&qword_269C43948, (void (*)(uint64_t))type metadata accessor for RGParameterConfirmationModel);
      sub_252B98D40();
      sub_252B98674();
      sub_252B5F53C();
      v58();
      uint64_t v57 = type metadata accessor for RGParameterConfirmationModel;
      goto LABEL_11;
    case 3u:
      uint64_t v55 = v92;
      sub_252B80044((uint64_t)v4, v92, (void (*)(void))type metadata accessor for RGToolDisambiguationModel);
      LOBYTE(v112) = 3;
      sub_252B800A0();
      sub_252B981A8();
      sub_252B800EC(&qword_269C43938, (void (*)(uint64_t))type metadata accessor for RGToolDisambiguationModel);
      sub_252B98D40();
      sub_252B98674();
      sub_252B5F53C();
      v59();
      uint64_t v57 = type metadata accessor for RGToolDisambiguationModel;
      goto LABEL_11;
    case 4u:
      uint64_t v60 = *v4;
      unint64_t v61 = v4[1];
      LOBYTE(v112) = 4;
      sub_252B7FFF8();
      sub_252B98934();
      uint64_t v112 = v60;
      unint64_t v113 = v61;
      sub_252B5935C();
      sub_252B98CF8();
      sub_252B5F53C();
      v62();
      sub_252B98CBC();
      sub_252B5F53C();
      v63();
      sub_252AC5C14(v60, v61);
      goto LABEL_14;
    case 5u:
      uint64_t v64 = *v4;
      unint64_t v65 = v4[1];
      uint64_t v67 = v4[2];
      uint64_t v66 = v4[3];
      uint64_t v69 = v4[4];
      uint64_t v68 = v4[5];
      LOBYTE(v112) = 5;
      sub_252B7FF60();
      sub_252D1A4D8();
      uint64_t v107 = v64;
      uint64_t v112 = v64;
      unint64_t v113 = v65;
      uint64_t v114 = v67;
      uint64_t v115 = v66;
      uint64_t v111 = v66;
      uint64_t v116 = v69;
      unint64_t v117 = v68;
      sub_252B7FFAC();
      sub_252B98CF8();
      sub_252B5F53C();
      v70();
      sub_252B5F53C();
      v71();
      sub_252AC5C14(v107, v65);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 6u:
      uint64_t v72 = *v4;
      unint64_t v73 = v4[1];
      uint64_t v74 = v4[2];
      uint64_t v75 = v4[4];
      uint64_t v111 = v4[3];
      unint64_t v76 = v4[5];
      uint64_t v104 = v4[6];
      uint64_t v105 = v74;
      uint64_t v77 = v4[7];
      LOBYTE(v112) = 6;
      sub_252B7FEC8();
      sub_252D1A4D8();
      unint64_t v106 = v73;
      uint64_t v107 = v72;
      uint64_t v112 = v72;
      unint64_t v113 = v73;
      uint64_t v114 = v105;
      uint64_t v115 = v111;
      uint64_t v116 = v75;
      unint64_t v117 = v76;
      uint64_t v118 = v104;
      uint64_t v119 = v77;
      sub_252B7FF14();
      sub_252D1A578();
      sub_252B5F53C();
      v78();
      sub_252B5F53C();
      v79();
      sub_252AC5C14(v107, v106);
      swift_bridgeObjectRelease();
      sub_252B592E8(v75, v76);
LABEL_9:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 7u:
      uint64_t v55 = v102;
      sub_252B80044((uint64_t)v4, v102, (void (*)(void))type metadata accessor for RGControlModel);
      LOBYTE(v112) = 7;
      sub_252B7FE7C();
      sub_252B981A8();
      sub_252B800EC(&qword_269C43900, (void (*)(uint64_t))type metadata accessor for RGControlModel);
      sub_252B98D40();
      sub_252B98674();
      sub_252B5F53C();
      v80();
      uint64_t v57 = type metadata accessor for RGControlModel;
LABEL_11:
      sub_252B80134(v55, (void (*)(void))v57);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
      uint64_t v54 = v2;
      goto LABEL_12;
    case 8u:
      LOBYTE(v112) = 8;
      sub_252B7FE30();
      sub_252B98934();
      sub_252D1A528();
      swift_bridgeObjectRelease();
      sub_252B5F53C();
      v82();
      uint64_t v54 = sub_252B98CBC();
      goto LABEL_13;
    default:
      sub_252B80044((uint64_t)v4, v2, (void (*)(void))type metadata accessor for RGDisambiguationModel);
      LOBYTE(v112) = 0;
      sub_252B80220();
      uint64_t v50 = v120;
      uint64_t v51 = v108;
      sub_252D1A4D8();
      sub_252B800EC(&qword_269C43968, (void (*)(uint64_t))type metadata accessor for RGDisambiguationModel);
      sub_252D1A578();
      sub_252B5F53C();
      v52();
      sub_252B80134(v2, (void (*)(void))type metadata accessor for RGDisambiguationModel);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
      uint64_t v54 = v51;
LABEL_12:
      uint64_t v81 = v50;
LABEL_13:
      v53(v54, v81);
LABEL_14:
      sub_252AF4368();
      return;
  }
}

uint64_t type metadata accessor for RGControlModel(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C43BC8);
}

uint64_t type metadata accessor for RGToolDisambiguationModel(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234780);
}

uint64_t type metadata accessor for RGParameterConfirmationModel(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234878);
}

uint64_t type metadata accessor for RGActionConfirmationModel(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234770);
}

uint64_t type metadata accessor for RGDisambiguationModel(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2346D0);
}

uint64_t type metadata accessor for RGPluginModel(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2341E0);
}

unint64_t sub_252B7FDE4()
{
  unint64_t result = qword_269C438E8;
  if (!qword_269C438E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C438E8);
  }
  return result;
}

unint64_t sub_252B7FE30()
{
  unint64_t result = qword_269C438F0;
  if (!qword_269C438F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C438F0);
  }
  return result;
}

unint64_t sub_252B7FE7C()
{
  unint64_t result = qword_269C438F8;
  if (!qword_269C438F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C438F8);
  }
  return result;
}

unint64_t sub_252B7FEC8()
{
  unint64_t result = qword_269C43908;
  if (!qword_269C43908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43908);
  }
  return result;
}

unint64_t sub_252B7FF14()
{
  unint64_t result = qword_269C43910;
  if (!qword_269C43910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43910);
  }
  return result;
}

unint64_t sub_252B7FF60()
{
  unint64_t result = qword_269C43918;
  if (!qword_269C43918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43918);
  }
  return result;
}

unint64_t sub_252B7FFAC()
{
  unint64_t result = qword_269C43920;
  if (!qword_269C43920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43920);
  }
  return result;
}

unint64_t sub_252B7FFF8()
{
  unint64_t result = qword_269C43928;
  if (!qword_269C43928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43928);
  }
  return result;
}

uint64_t sub_252B80044(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  sub_252B4C1CC();
  v4();
  return a2;
}

unint64_t sub_252B800A0()
{
  unint64_t result = qword_269C43930;
  if (!qword_269C43930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43930);
  }
  return result;
}

uint64_t sub_252B800EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252B80134(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

unint64_t sub_252B80188()
{
  unint64_t result = qword_269C43940;
  if (!qword_269C43940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43940);
  }
  return result;
}

unint64_t sub_252B801D4()
{
  unint64_t result = qword_269C43950;
  if (!qword_269C43950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43950);
  }
  return result;
}

unint64_t sub_252B80220()
{
  unint64_t result = qword_269C43960;
  if (!qword_269C43960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43960);
  }
  return result;
}

void RGPluginModel.init(from:)()
{
  sub_252AF4380();
  BOOL v6 = v5;
  uint64_t v131 = v7;
  uint64_t v127 = sub_252AC3A24(&qword_269C43970);
  sub_252AEDBD0();
  uint64_t v117 = v8;
  MEMORY[0x270FA5388](v9);
  sub_252B98874(v10, v99);
  uint64_t v126 = sub_252AC3A24(&qword_269C43978);
  sub_252AEDBD0();
  uint64_t v116 = v11;
  MEMORY[0x270FA5388](v12);
  sub_252B9883C(v13, v99);
  uint64_t v125 = sub_252AC3A24(&qword_269C43980);
  sub_252AEDBD0();
  uint64_t v115 = v14;
  MEMORY[0x270FA5388](v15);
  sub_252AEDE70();
  uint64_t v129 = v16;
  uint64_t v124 = sub_252AC3A24(&qword_269C43988);
  sub_252AEDBD0();
  uint64_t v114 = v17;
  MEMORY[0x270FA5388](v18);
  sub_252AEDE70();
  uint64_t v136 = v19;
  uint64_t v123 = sub_252AC3A24(&qword_269C43990);
  sub_252AEDBD0();
  uint64_t v113 = v20;
  MEMORY[0x270FA5388](v21);
  sub_252AEDE70();
  uint64_t v135 = v22;
  uint64_t v122 = sub_252AC3A24(&qword_269C43998);
  sub_252AEDBD0();
  uint64_t v112 = v23;
  MEMORY[0x270FA5388](v24);
  sub_252AEDE70();
  uint64_t v128 = v25;
  uint64_t v121 = sub_252AC3A24(&qword_269C439A0);
  sub_252AEDBD0();
  uint64_t v111 = v26;
  MEMORY[0x270FA5388](v27);
  sub_252AEDE70();
  sub_252B9857C(v28);
  uint64_t v120 = sub_252AC3A24(&qword_269C439A8);
  sub_252AEDBD0();
  uint64_t v110 = v29;
  MEMORY[0x270FA5388](v30);
  sub_252B9857C((uint64_t)&v99 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = sub_252AC3A24(&qword_269C439B0);
  sub_252AEDBD0();
  uint64_t v109 = v32;
  MEMORY[0x270FA5388](v33);
  sub_252AEDE70();
  sub_252B9857C(v34);
  uint64_t v134 = sub_252AC3A24(&qword_269C439B8);
  sub_252AEDBD0();
  uint64_t v132 = v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = sub_252B4C76C();
  uint64_t v137 = type metadata accessor for RGPluginModel(v37);
  sub_252AEA304();
  MEMORY[0x270FA5388](v38);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v39);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v40);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v41);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v42);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v43);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v44);
  sub_252B23848();
  MEMORY[0x270FA5388](v45);
  sub_252B98DB0();
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v99 - v48;
  MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)&v99 - v50;
  uint64_t v52 = v6[3];
  uint64_t v138 = v6;
  sub_252AC3A68(v6, v52);
  sub_252B7FDE4();
  uint64_t v133 = v1;
  sub_252D1A718();
  if (!v0)
  {
    uint64_t v102 = v49;
    uint64_t v103 = v3;
    uint64_t v104 = v2;
    uint64_t v101 = v4;
    uint64_t v53 = v137;
    uint64_t v54 = v133;
    uint64_t v55 = v134;
    uint64_t v56 = sub_252D1A4C8();
    if (*(void *)(v56 + 16)
      && (uint64_t v100 = 0,
          uint64_t v99 = *(unsigned __int8 *)(v56 + 32),
          sub_252B5F440(1),
          uint64_t v58 = v57,
          unint64_t v60 = v59,
          swift_bridgeObjectRelease(),
          v58 == v60 >> 1))
    {
      uint64_t v61 = v100;
      switch(v99)
      {
        case 1:
          LOBYTE(v139) = 1;
          sub_252B801D4();
          sub_252B980C8();
          uint64_t v62 = type metadata accessor for RGActionConfirmationModel(0);
          sub_252B800EC(&qword_269C439E8, (void (*)(uint64_t))type metadata accessor for RGActionConfirmationModel);
          sub_252B984BC();
          sub_252B5F53C();
          v69();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v70();
          sub_252B98AD4((uint64_t)&v131);
          goto LABEL_19;
        case 2:
          LOBYTE(v139) = 2;
          sub_252B80188();
          sub_252B980C8();
          uint64_t v62 = type metadata accessor for RGParameterConfirmationModel(0);
          sub_252B800EC(&qword_269C439E0, (void (*)(uint64_t))type metadata accessor for RGParameterConfirmationModel);
          sub_252B984BC();
          sub_252B5F53C();
          v85();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v86();
          sub_252B98AD4((uint64_t)&v132);
          goto LABEL_19;
        case 3:
          LOBYTE(v139) = 3;
          sub_252B800A0();
          sub_252B980C8();
          type metadata accessor for RGToolDisambiguationModel(0);
          sub_252B800EC(&qword_269C439D8, (void (*)(uint64_t))type metadata accessor for RGToolDisambiguationModel);
          uint64_t v71 = v101;
          sub_252B989FC();
          sub_252B5F53C();
          v72();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v73();
          goto LABEL_15;
        case 4:
          LOBYTE(v139) = 4;
          sub_252B7FFF8();
          sub_252B980C8();
          sub_252B593A8();
          sub_252B9840C();
          sub_252B5F53C();
          v74();
          swift_unknownObjectRelease();
          uint64_t v75 = sub_252B98218();
          v76(v75);
          uint64_t v62 = (uint64_t)v105;
          *uint64_t v105 = v139;
          sub_252B98E58();
          goto LABEL_19;
        case 5:
          LOBYTE(v139) = 5;
          sub_252B7FF60();
          sub_252D1A3E8();
          if (v61)
          {
            swift_unknownObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v54, v55);
          }
          else
          {
            sub_252B8A0A8();
            sub_252B9840C();
            sub_252B5F53C();
            v77();
            swift_unknownObjectRelease();
            uint64_t v78 = sub_252B98218();
            v79(v78);
            uint64_t v80 = v140;
            uint64_t v81 = v141;
            uint64_t v62 = (uint64_t)v106;
            *unint64_t v106 = v139;
            *(void *)(v62 + 16) = v80;
            *(void *)(v62 + 24) = v81;
            *(_OWORD *)(v62 + 32) = v142;
            sub_252B98E58();
LABEL_19:
            swift_storeEnumTagMultiPayload();
            uint64_t v84 = v62;
LABEL_20:
            sub_252B80044(v84, (uint64_t)v51, (void (*)(void))type metadata accessor for RGPluginModel);
            sub_252B80044((uint64_t)v51, v131, (void (*)(void))type metadata accessor for RGPluginModel);
          }
          break;
        case 6:
          LOBYTE(v139) = 6;
          sub_252B7FEC8();
          sub_252B980C8();
          sub_252B8A05C();
          sub_252B9840C();
          sub_252B5F53C();
          v87();
          swift_unknownObjectRelease();
          uint64_t v88 = sub_252B98218();
          v89(v88);
          uint64_t v90 = v140;
          uint64_t v91 = v141;
          uint64_t v62 = (uint64_t)v107;
          _OWORD *v107 = v139;
          *(void *)(v62 + 16) = v90;
          *(void *)(v62 + 24) = v91;
          long long v92 = v143;
          *(_OWORD *)(v62 + 32) = v142;
          *(_OWORD *)(v62 + 48) = v92;
          sub_252B98E58();
          goto LABEL_19;
        case 7:
          LOBYTE(v139) = 7;
          sub_252B7FE7C();
          sub_252B980C8();
          type metadata accessor for RGControlModel(0);
          sub_252B800EC(&qword_269C439C0, (void (*)(uint64_t))type metadata accessor for RGControlModel);
          uint64_t v71 = v118;
          sub_252B989FC();
          sub_252B5F53C();
          v82();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v83();
LABEL_15:
          swift_storeEnumTagMultiPayload();
          uint64_t v84 = v71;
          goto LABEL_20;
        case 8:
          LOBYTE(v139) = 8;
          sub_252B7FE30();
          sub_252B980C8();
          uint64_t v93 = sub_252D1A448();
          uint64_t v95 = v94;
          sub_252B5F53C();
          v96();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v97();
          uint64_t v98 = v108;
          *uint64_t v108 = v93;
          v98[1] = v95;
          swift_storeEnumTagMultiPayload();
          uint64_t v84 = (uint64_t)v98;
          goto LABEL_20;
        default:
          LOBYTE(v139) = 0;
          sub_252B80220();
          sub_252B980C8();
          uint64_t v62 = type metadata accessor for RGDisambiguationModel(0);
          sub_252B800EC(&qword_269C439F0, (void (*)(uint64_t))type metadata accessor for RGDisambiguationModel);
          sub_252B984BC();
          sub_252B5F53C();
          v63();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v64();
          sub_252B98AD4((uint64_t)&v130);
          goto LABEL_19;
      }
    }
    else
    {
      uint64_t v65 = v54;
      sub_252D1A308();
      swift_allocError();
      uint64_t v67 = v66;
      sub_252AC3A24(&qword_269C42E78);
      *uint64_t v67 = v53;
      sub_252D1A3F8();
      sub_252D1A2F8();
      sub_252B0014C();
      (*(void (**)(uint64_t *))(v68 + 104))(v67);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v65, v55);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v138);
  sub_252B98814();
  sub_252AF4368();
}

void sub_252B8111C()
{
}

void sub_252B81134()
{
}

uint64_t RGDisplayRepresentation.init(title:subtitle:image:bundleIdentifier:snippetPluginModelData:)@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_252D19408();
  sub_252AEA304();
  sub_252B4C1CC();
  v16();
  type metadata accessor for RGDisplayRepresentation(0);
  sub_252B98D6C();
  sub_252B8A668(a2, a8 + v17, &qword_269C41A90);
  uint64_t result = sub_252B8A668(a3, a8 + a1[6], &qword_269C41A98);
  uint64_t v19 = (void *)(a8 + a1[7]);
  *uint64_t v19 = a4;
  v19[1] = a5;
  uint64_t v20 = (void *)(a8 + a1[8]);
  *uint64_t v20 = a6;
  v20[1] = a7;
  return result;
}

uint64_t RGDisplayRepresentation.title.getter()
{
  return sub_252B89BCC();
}

uint64_t RGDisplayRepresentation.subtitle.getter()
{
  return sub_252B82464();
}

uint64_t RGDisplayRepresentation.image.getter()
{
  return sub_252B824BC();
}

uint64_t RGDisplayRepresentation.bundleIdentifier.getter()
{
  return sub_252B82514((void (*)(void))type metadata accessor for RGDisplayRepresentation);
}

uint64_t RGDisplayRepresentation.snippetPluginModelData.getter()
{
  return sub_252B82564(type metadata accessor for RGDisplayRepresentation);
}

uint64_t sub_252B81298(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D2B0 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D2D0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_252B81494(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 0x6567616D69;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252B81544()
{
  return sub_252B81494(*v0);
}

uint64_t sub_252B8154C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B81298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B81574(uint64_t a1)
{
  unint64_t v2 = sub_252B8A114();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B815B0(uint64_t a1)
{
  unint64_t v2 = sub_252B8A114();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGDisplayRepresentation.encode(to:)()
{
}

void RGDisplayRepresentation.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  uint64_t v21 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C41A98);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252B98858(v8, v21);
  uint64_t v9 = sub_252AC3A24(&qword_269C41A90);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252B98890();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v11);
  sub_252B98820(v12, v22);
  sub_252AC3A24(&qword_269C43A18);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252B5FA38();
  uint64_t v15 = (int *)type metadata accessor for RGDisplayRepresentation(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252AC3A68(v4, v4[3]);
  sub_252B8A114();
  sub_252B988B8();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_252B98E2C();
    sub_252B800EC(&qword_269C43A20, MEMORY[0x263F06D40]);
    sub_252B985B8();
    sub_252B7E53C();
    v17();
    sub_252B98430();
    sub_252B8A668(v1, v2 + v15[5], &qword_269C41A90);
    sub_252D19C68();
    sub_252B989E8();
    sub_252B800EC(&qword_269C43A28, MEMORY[0x263F80B90]);
    sub_252B98588();
    sub_252B8A668(v1, v2 + v15[6], &qword_269C41A98);
    uint64_t v18 = sub_252B989A0();
    sub_252B98B6C(v18, v19);
    sub_252B989C4();
    sub_252B5F53C();
    v20();
    *(_OWORD *)(v2 + v15[8]) = v24;
    sub_252B8A160(v2, v23, (void (*)(void))type metadata accessor for RGDisplayRepresentation);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(0);
    sub_252B80134(v2, (void (*)(void))type metadata accessor for RGDisplayRepresentation);
  }
  sub_252B5FBC4();
  sub_252AF4368();
}

void sub_252B81A54()
{
}

void sub_252B81A6C()
{
}

uint64_t RGDisambiguationModel.init(eventId:title:items:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = (int *)type metadata accessor for RGDisambiguationModel(0);
  sub_252D19588();
  sub_252B4C01C();
  uint64_t v35 = v21;
  uint64_t v22 = *(void (**)(void))(v21 + 16);
  sub_252B986D8();
  v22();
  sub_252B986D8();
  v22();
  sub_252B986D8();
  v22();
  sub_252B986D8();
  v22();
  uint64_t v23 = (void *)(v19 + v20[10]);
  *uint64_t v23 = v17;
  v23[1] = v15;
  uint64_t v24 = MEMORY[0x263F8EE78];
  *(void *)(v19 + v20[8]) = MEMORY[0x263F8EE78];
  *(void *)(v19 + v20[7]) = v24;
  uint64_t v25 = v19 + v20[6];
  *(_DWORD *)uint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(void *)(v25 + 16) = 0;
  sub_252AFC67C();
  return v28(v26, v27, v28, v29, v30, v31, v32, v33, a9, v35, a11, a12, a13, a14);
}

uint64_t RGDisambiguationModel.init(actionEventId:actionResponseEventId:title:itemDisplayRepresentations:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  sub_252B98648();
  sub_252AEDBD0();
  uint64_t v32 = v16;
  uint64_t v18 = *(void (**)(void))(v17 + 16);
  sub_252B986E8();
  v18();
  uint64_t v19 = type metadata accessor for RGDisambiguationModel(0);
  sub_252B986E8();
  v18();
  sub_252B98D4C();
  *(void *)(v14 + v20) = MEMORY[0x263F8EE78];
  *(void *)(v14 + *(int *)(v19 + 28)) = v15;
  uint64_t v21 = sub_252B983A4();
  v22(v21);
  sub_252B98508();
  sub_252AFC67C();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, a11, a12, a13, a14);
}

uint64_t RGDisambiguationModel.init(actionEventId:actionResponseEventId:title:items:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  sub_252B98648();
  sub_252AEDBD0();
  uint64_t v32 = v16;
  uint64_t v18 = *(void (**)(void))(v17 + 16);
  sub_252B986E8();
  v18();
  uint64_t v19 = type metadata accessor for RGDisambiguationModel(0);
  sub_252B986E8();
  v18();
  sub_252B98D4C();
  *(void *)(v14 + v20) = v15;
  *(void *)(v14 + *(int *)(v19 + 28)) = MEMORY[0x263F8EE78];
  uint64_t v21 = sub_252B983A4();
  v22(v21);
  sub_252B98508();
  sub_252AFC67C();
  return v27(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, a11, a12, a13, a14);
}

uint64_t RGDisambiguationModel.init(actionEventId:systemResponseEventId:statementID:itemDisplayRepresentations:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v35 = v14;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_252B98AB8();
  sub_252AEDBD0();
  uint64_t v37 = v20;
  uint64_t v22 = *(void (**)(void))(v21 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v18, v16, v19);
  uint64_t v23 = (int *)type metadata accessor for RGDisambiguationModel(0);
  sub_252B988F8();
  v22();
  sub_252B98A60(v18 + v23[6]);
  *(void *)(v18 + v24) = v35;
  *(void *)(v18 + v23[8]) = MEMORY[0x263F8EE78];
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
  uint64_t v38 = v37 + 32;
  v36(v18 + v23[9], v16, v19);
  uint64_t v25 = (void *)(v18 + v23[10]);
  *uint64_t v25 = 0;
  v25[1] = 0xE000000000000000;
  sub_252B988F8();
  sub_252AFC67C();
  return v30(v26, v27, v28, v29, v30, v31, v32, v33, v36, v38, a11, a12, a13, a14);
}

uint64_t RGDisambiguationModel.actionEventId.getter()
{
  return sub_252B89BCC();
}

uint64_t (*RGDisambiguationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.systemResponseEventId.getter()
{
  return sub_252B83E10();
}

uint64_t RGDisambiguationModel.systemResponseEventId.setter()
{
  return sub_252B83E90();
}

uint64_t (*RGDisambiguationModel.systemResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252B83F4C(a1);
}

uint64_t RGDisambiguationModel.statementID.setter(int *a1)
{
  return sub_252B83FB8(a1);
}

uint64_t (*RGDisambiguationModel.statementID.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.itemDisplayRepresentations.getter()
{
  return sub_252B885EC();
}

uint64_t RGDisambiguationModel.itemDisplayRepresentations.setter(uint64_t a1)
{
  return sub_252B8863C(a1);
}

uint64_t (*RGDisambiguationModel.itemDisplayRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.items.getter()
{
  return sub_252B886D4();
}

uint64_t RGDisambiguationModel.items.setter(uint64_t a1)
{
  return sub_252B88724(a1);
}

uint64_t (*RGDisambiguationModel.items.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.eventId.getter()
{
  return sub_252B84090();
}

uint64_t RGDisambiguationModel.eventId.setter(uint64_t a1)
{
  return sub_252B8410C(a1, (void (*)(void))type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.eventId.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.title.getter()
{
  return sub_252AEA3DC();
}

uint64_t RGDisambiguationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RGDisambiguationModel(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RGDisambiguationModel.title.modify())()
{
  return nullsub_1;
}

uint64_t RGDisambiguationModel.actionResponseEventId.getter()
{
  return sub_252B85310();
}

uint64_t RGDisambiguationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_252B8538C(a1, (void (*)(void))type metadata accessor for RGDisambiguationModel);
}

uint64_t (*RGDisambiguationModel.actionResponseEventId.modify())()
{
  return nullsub_1;
}

double RGDisambiguationModel.Item.init(title:subtitle:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for RGDisambiguationModel.Item(0);
  uint64_t v5 = a2 + v4[6];
  uint64_t v6 = sub_252D19C68();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v6);
  sub_252D19408();
  sub_252AEA304();
  sub_252B4C1CC();
  v7();
  sub_252B8A668(a1, a2 + v4[5], &qword_269C41A90);
  uint64_t v8 = (void *)(a2 + v4[7]);
  void *v8 = 0;
  v8[1] = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v4[8]) = xmmword_252D2DEF0;
  return result;
}

double RGDisambiguationModel.Item.init(title:subtitle:image:)()
{
  sub_252B9897C();
  sub_252AEA304();
  sub_252B4C1CC();
  v3();
  uint64_t v4 = (int *)type metadata accessor for RGDisambiguationModel.Item(0);
  sub_252B8A668(v1, v2 + v4[5], &qword_269C41A90);
  sub_252B8A668(v0, v2 + v4[6], &qword_269C41A98);
  uint64_t v5 = (void *)(v2 + v4[7]);
  void *v5 = 0;
  v5[1] = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + v4[8]) = xmmword_252D2DEF0;
  return result;
}

uint64_t RGDisambiguationModel.Item.init(title:snippetPluginBundleIdentifier:snippetPluginModelData:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  type metadata accessor for RGDisambiguationModel.Item(0);
  sub_252B98D6C();
  uint64_t v12 = a5 + v11;
  uint64_t v13 = sub_252D19408();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v12, 1, 1, v13);
  uint64_t v14 = a5 + v5[6];
  uint64_t v15 = sub_252D19C68();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14, 1, 1, v15);
  sub_252B0014C();
  sub_252B4C1CC();
  uint64_t result = v16();
  uint64_t v18 = (void *)(a5 + v5[7]);
  *uint64_t v18 = a1;
  v18[1] = a2;
  uint64_t v19 = (void *)(a5 + v5[8]);
  *uint64_t v19 = a3;
  v19[1] = a4;
  return result;
}

uint64_t RGDisambiguationModel.Item.title.getter()
{
  return sub_252B89BCC();
}

uint64_t RGDisambiguationModel.Item.subtitle.getter()
{
  return sub_252B82464();
}

uint64_t sub_252B82464()
{
  uint64_t v2 = sub_252B4C3DC();
  uint64_t v4 = v3(v2);
  return sub_252B22858(v1 + *(int *)(v4 + 20), v0, &qword_269C41A90);
}

uint64_t RGDisambiguationModel.Item.image.getter()
{
  return sub_252B824BC();
}

uint64_t sub_252B824BC()
{
  uint64_t v2 = sub_252B4C3DC();
  uint64_t v4 = v3(v2);
  return sub_252B22858(v1 + *(int *)(v4 + 24), v0, &qword_269C41A98);
}

uint64_t RGDisambiguationModel.Item.snippetPluginBundleIdentifier.getter()
{
  return sub_252B82514((void (*)(void))type metadata accessor for RGDisambiguationModel.Item);
}

uint64_t sub_252B82514(void (*a1)(void))
{
  return sub_252AEA3DC();
}

uint64_t RGDisambiguationModel.Item.snippetPluginModelData.getter()
{
  return sub_252B82564(type metadata accessor for RGDisambiguationModel.Item);
}

uint64_t sub_252B82564(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  sub_252B592FC(*(void *)(v1 + *(int *)(v2 + 32)), *(void *)(v1 + *(int *)(v2 + 32) + 8));
  return sub_252AEA3DC();
}

uint64_t sub_252B825AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000252D1D2F0 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D2D0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_252B827AC(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 0x6567616D69;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252B8285C()
{
  return sub_252B827AC(*v0);
}

uint64_t sub_252B82864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B825AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B8288C(uint64_t a1)
{
  unint64_t v2 = sub_252B8A1D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B828C8(uint64_t a1)
{
  unint64_t v2 = sub_252B8A1D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGDisambiguationModel.Item.encode(to:)()
{
}

void sub_252B82954()
{
  sub_252AF4380();
  uint64_t v9 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_252AC3A24(v6);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252AC3A68(v5, v5[3]);
  v3();
  sub_252D1A738();
  sub_252D19408();
  sub_252B800EC(&qword_269C43A08, MEMORY[0x263F06D40]);
  sub_252D1A578();
  if (!v0)
  {
    v9(0);
    sub_252B98D6C();
    sub_252B98690();
    sub_252B989E8();
    sub_252D19C68();
    sub_252B800EC(&qword_269C43A10, MEMORY[0x263F80B90]);
    sub_252B98690();
    sub_252D1A4E8();
    sub_252B98970();
    sub_252B5935C();
    sub_252B98690();
  }
  sub_252B983F0();
  v8();
  sub_252B98814();
  sub_252AF4368();
}

void RGDisambiguationModel.Item.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  uint64_t v21 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C41A98);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252B98858(v8, v21);
  uint64_t v9 = sub_252AC3A24(&qword_269C41A90);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252B98890();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v11);
  sub_252B98820(v12, v22);
  sub_252AC3A24(&qword_269C43A40);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252B5FA38();
  uint64_t v15 = (int *)type metadata accessor for RGDisambiguationModel.Item(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252AC3A68(v4, v4[3]);
  sub_252B8A1D4();
  sub_252B988B8();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_252B98E2C();
    sub_252B800EC(&qword_269C43A20, MEMORY[0x263F06D40]);
    sub_252B985B8();
    sub_252B7E53C();
    v17();
    sub_252B98430();
    sub_252B8A668(v1, v2 + v15[5], &qword_269C41A90);
    sub_252D19C68();
    sub_252B989E8();
    sub_252B800EC(&qword_269C43A28, MEMORY[0x263F80B90]);
    sub_252B98588();
    sub_252B8A668(v1, v2 + v15[6], &qword_269C41A98);
    uint64_t v18 = sub_252B989A0();
    sub_252B98B6C(v18, v19);
    sub_252B989C4();
    sub_252B5F53C();
    v20();
    *(_OWORD *)(v2 + v15[8]) = v24;
    sub_252B8A160(v2, v23, (void (*)(void))type metadata accessor for RGDisambiguationModel.Item);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(0);
    sub_252B80134(v2, (void (*)(void))type metadata accessor for RGDisambiguationModel.Item);
  }
  sub_252B5FBC4();
  sub_252AF4368();
}

uint64_t sub_252B82FC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D310 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1D330 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D350)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v10 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v10) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_252B83310(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0x736D657469;
      break;
    case 5:
      unint64_t result = 0x6449746E657665;
      break;
    case 6:
      unint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

void sub_252B83420()
{
}

void sub_252B83438()
{
}

unint64_t sub_252B83450()
{
  return sub_252B83310(*v0);
}

uint64_t sub_252B83458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B82FC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B83480(uint64_t a1)
{
  unint64_t v2 = sub_252B8A220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B834BC(uint64_t a1)
{
  unint64_t v2 = sub_252B8A220();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGDisambiguationModel.encode(to:)()
{
  sub_252AF4380();
  sub_252AC3A24(&qword_269C43A48);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B98154();
  sub_252B8A220();
  sub_252AF4784();
  sub_252B98E40();
  sub_252B800EC(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252B982A8();
  if (!v1)
  {
    uint64_t v3 = type metadata accessor for RGDisambiguationModel(0);
    sub_252B98128(1);
    sub_252B981D0(v0 + *(int *)(v3 + 24));
    sub_252B982A8();
    sub_252AC3A24(&qword_269C43A58);
    sub_252B8A26C();
    sub_252B982A8();
    sub_252B98970();
    sub_252AC3A24(&qword_269C43A70);
    sub_252B8A310();
    sub_252B982A8();
    sub_252B98128(5);
    sub_252D1A528();
    sub_252B98128(7);
  }
  uint64_t v4 = sub_252B98190();
  v5(v4);
  sub_252B5FBC4();
  sub_252AF4368();
}

void RGDisambiguationModel.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  uint64_t v31 = v5;
  uint64_t v6 = sub_252D19588();
  sub_252AEDBD0();
  uint64_t v38 = v7;
  MEMORY[0x270FA5388](v8);
  sub_252B234B4();
  MEMORY[0x270FA5388](v9);
  sub_252B23848();
  MEMORY[0x270FA5388](v10);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v11);
  uint64_t v33 = (char *)v30 - v12;
  uint64_t v34 = sub_252AC3A24(&qword_269C43A88);
  sub_252AEDBD0();
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v14);
  sub_252B5F6A0();
  uint64_t v37 = type metadata accessor for RGDisambiguationModel(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v15);
  sub_252B774C8(v16, v30[0]);
  uint64_t v17 = v4[3];
  uint64_t v35 = v4;
  sub_252AC3A68(v4, v17);
  sub_252B8A220();
  sub_252D1A718();
  uint64_t v39 = v6;
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v35);
    LODWORD(v36) = 0;
  }
  else
  {
    uint64_t v36 = v1;
    LOBYTE(v41) = 0;
    sub_252B800EC(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A498();
    uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
    v18(v40, v33, v6);
    sub_252B98A20();
    sub_252D1A498();
    uint64_t v19 = v2;
    uint64_t v20 = (int *)v37;
    uint64_t v21 = v40;
    v18(v40 + *(int *)(v37 + 20), v19, v6);
    sub_252B98C90();
    sub_252B98B0C();
    sub_252D1A498();
    sub_252B98AE4(v41);
    sub_252AC3A24(&qword_269C43A58);
    sub_252B8A3B4();
    sub_252B98B0C();
    sub_252D1A498();
    v30[1] = (uint64_t)v18;
    *(void *)(v21 + v20[7]) = v41;
    sub_252AC3A24(&qword_269C43A70);
    sub_252B98970();
    sub_252B8A458();
    sub_252B98B0C();
    sub_252D1A498();
    LODWORD(v33) = 1;
    *(void *)(v21 + v20[8]) = v41;
    sub_252B988E0(5);
    sub_252B98BF0();
    sub_252B98AF4();
    v22();
    LOBYTE(v41) = 6;
    uint64_t v23 = sub_252D1A448();
    long long v24 = (uint64_t *)(v40 + v20[10]);
    *long long v24 = v23;
    v24[1] = v25;
    sub_252B988E0(7);
    sub_252B98BF0();
    uint64_t v26 = sub_252B98110();
    v27(v26);
    uint64_t v28 = v40;
    sub_252B98AF4();
    v29();
    sub_252B8A160(v28, v31, (void (*)(void))type metadata accessor for RGDisambiguationModel);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v35);
    sub_252B80134(v28, (void (*)(void))type metadata accessor for RGDisambiguationModel);
  }
  sub_252B5FBC4();
  sub_252AF4368();
}

void sub_252B83D78()
{
}

void sub_252B83D90()
{
}

uint64_t RGActionConfirmationModel.actionEventId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252B22858(v1, a1, &qword_26B2320E8);
}

uint64_t RGActionConfirmationModel.actionEventId.setter(uint64_t a1)
{
  return sub_252AECE74(a1, v1);
}

uint64_t (*RGActionConfirmationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.systemResponseEventId.getter()
{
  return sub_252B83E10();
}

uint64_t sub_252B83E10()
{
  uint64_t v0 = sub_252B98D98();
  v1(v0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v2 = sub_252AEA3DC();

  return v3(v2);
}

uint64_t RGActionConfirmationModel.systemResponseEventId.setter()
{
  return sub_252B83E90();
}

uint64_t sub_252B83E90()
{
  uint64_t v0 = sub_252B98D98();
  v1(v0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v2 = sub_252B4C32C();

  return v3(v2);
}

uint64_t (*RGActionConfirmationModel.systemResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252B83F4C(a1);
}

uint64_t sub_252B83F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_252B98D98();
  uint64_t v5 = v1 + *(int *)(v4(v3) + 24);
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v6 = *(void *)(v5 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v5;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v6;

  return swift_bridgeObjectRetain();
}

uint64_t RGActionConfirmationModel.statementID.setter(int *a1)
{
  return sub_252B83FB8(a1);
}

uint64_t sub_252B83FB8(int *a1)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = sub_252B98D98();
  uint64_t v7 = v1 + *(int *)(v6(v5) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(_DWORD *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = v3;
  *(void *)(v7 + 16) = v4;
  return result;
}

uint64_t (*RGActionConfirmationModel.statementID.modify())()
{
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.affirmative.getter()
{
  return sub_252B85190();
}

uint64_t RGActionConfirmationModel.negative.getter()
{
  return sub_252B85210();
}

uint64_t RGActionConfirmationModel.actionResponseEventId.getter()
{
  return sub_252B84090();
}

uint64_t sub_252B84090()
{
  uint64_t v0 = sub_252B4C3DC();
  v1(v0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v2 = sub_252AEA3DC();

  return v3(v2);
}

uint64_t RGActionConfirmationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_252B8410C(a1, (void (*)(void))type metadata accessor for RGActionConfirmationModel);
}

uint64_t sub_252B8410C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v2 = sub_252B4C32C();

  return v3(v2);
}

uint64_t (*RGActionConfirmationModel.actionResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGActionConfirmationModel.init(actionEventId:actionResponseEventId:affirmative:negative:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = sub_252D19588();
  sub_252B98248(v20);
  uint64_t v21 = (int *)type metadata accessor for RGActionConfirmationModel(0);
  sub_252B4C01C();
  uint64_t v39 = v22;
  sub_252B98480();
  v23();
  uint64_t v24 = v19 + v21[7];
  uint64_t v25 = sub_252D19408();
  sub_252B4C01C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v15, v25);
  sub_252B7E53C();
  v27();
  sub_252B5F658();
  v28();
  sub_252B5A4CC(v17, &qword_26B2320E8);
  uint64_t v29 = v19 + v21[6];
  *(_DWORD *)uint64_t v29 = 0;
  *(void *)(v29 + 8) = 0;
  *(void *)(v29 + 16) = 0;
  sub_252B98D84(v21[5]);
  sub_252AFC67C();
  return v33(v30, v31, v32, v33, v34, v35, v36, v37, a9, v39, a11, a12, a13, a14);
}

uint64_t RGActionConfirmationModel.init(actionEventId:systemResponseEventId:statementID:affirmative:negative:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v18 = sub_252B98AB8();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v17, 1, 1, v18);
  sub_252AECE74(v15, v17);
  uint64_t v19 = type metadata accessor for RGActionConfirmationModel(0);
  sub_252B4C01C();
  uint64_t v32 = v20;
  (*(void (**)(void))(v20 + 16))();
  sub_252B98A60(v17 + *(int *)(v19 + 24));
  sub_252D19408();
  sub_252AEA304();
  uint64_t v22 = *(void (**)(void))(v21 + 32);
  sub_252B98D60();
  v22();
  sub_252B98D60();
  v22();
  sub_252B98D84(*(int *)(v19 + 36));
  sub_252AFC67C();
  return v26(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, a11, a12, a13, a14);
}

uint64_t sub_252B8440C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D310 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x74616D7269666661 && a2 == 0xEB00000000657669;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x657669746167656ELL && a2 == 0xE800000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D350)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v9 = sub_252D1A5D8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_252B846CC(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 3:
      unint64_t result = 0x74616D7269666661;
      break;
    case 4:
      unint64_t result = 0x657669746167656ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252B847AC()
{
  return sub_252B846CC(*v0);
}

uint64_t sub_252B847B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B8440C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B847DC(uint64_t a1)
{
  unint64_t v2 = sub_252B8A564();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B84818(uint64_t a1)
{
  unint64_t v2 = sub_252B8A564();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGActionConfirmationModel.encode(to:)()
{
  sub_252AF4380();
  sub_252B98750();
  sub_252AC3A24(&qword_269C43AB0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B98154();
  sub_252B8A564();
  sub_252AF4784();
  sub_252B98E40();
  sub_252B800EC(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252B98690();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for RGActionConfirmationModel(0);
    sub_252B980EC();
    sub_252B981D0(v1 + *(int *)(v3 + 24));
    sub_252B98230();
    sub_252B98E0C(v1 + *(int *)(v3 + 28));
    sub_252B800EC(&qword_269C43A08, MEMORY[0x263F06D40]);
    sub_252B98230();
    sub_252B98230();
    sub_252B980EC();
  }
  uint64_t v4 = sub_252B98190();
  v5(v4);
  sub_252B98814();
  sub_252AF4368();
}

void RGActionConfirmationModel.init(from:)()
{
  sub_252AF4380();
  uint64_t v63 = v0;
  uint64_t v3 = v2;
  uint64_t v53 = v4;
  sub_252D19408();
  sub_252AEDBD0();
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v5);
  sub_252AEDC14();
  uint64_t v54 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v17 = sub_252B98B18(v9, v10, v11, v12, v13, v14, v15, v16, v52[0]);
  sub_252AEDBD0();
  uint64_t v59 = v18;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v52 - v23;
  uint64_t v25 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v26 = sub_252AEA368(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252AC3A24(&qword_269C43AC0);
  sub_252AEDBD0();
  uint64_t v56 = v30;
  uint64_t v57 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = sub_252B5FA38();
  uint64_t v62 = type metadata accessor for RGActionConfirmationModel(v31);
  sub_252AEA304();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = sub_252B98B54(v33, v52[0]);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v34, 1, 1, v17);
  uint64_t v35 = v3[3];
  uint64_t v61 = v3;
  unsigned int v36 = sub_252AC3A68(v3, v35);
  sub_252B8A564();
  uint64_t v60 = v1;
  uint64_t v37 = v63;
  sub_252D1A718();
  uint64_t v58 = v17;
  if (v37)
  {
    sub_252B98E00();
    uint64_t v39 = v64;
    uint64_t v40 = v62;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v61);
    sub_252B5A4CC((uint64_t)v34, &qword_26B2320E8);
    if (v36)
    {
      sub_252B98C34();
      v41();
      if (!v22) {
        goto LABEL_8;
      }
    }
    else if (!v22)
    {
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(&v34[*(int *)(v40 + 32)], v39);
    goto LABEL_8;
  }
  uint64_t v63 = v22;
  LOBYTE(v66) = 0;
  uint64_t v38 = sub_252B800EC(&qword_26B231070, MEMORY[0x263F07508]);
  sub_252D1A438();
  sub_252AECE74((uint64_t)v28, (uint64_t)v34);
  sub_252B98A20();
  sub_252B98958();
  uint64_t v42 = v17;
  v52[3] = v38;
  uint64_t v43 = v62;
  uint64_t v44 = v24;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  v45(&v34[*(int *)(v62 + 20)], v44, v42);
  sub_252B98C90();
  sub_252B98B0C();
  sub_252B98958();
  sub_252B98AE4(v66);
  LOBYTE(v66) = 3;
  sub_252B800EC(&qword_269C43A20, MEMORY[0x263F06D40]);
  sub_252B98A38();
  v52[2] = v46;
  sub_252B98958();
  uint64_t v47 = *(void *)(v65 + 32);
  uint64_t v55 = v65 + 32;
  v52[1] = v47;
  sub_252B7E53C();
  v48();
  sub_252B988E0(4);
  sub_252B98A38();
  sub_252B98958();
  sub_252B7E53C();
  v49();
  sub_252B988E0(5);
  uint64_t v50 = v58;
  sub_252B98A38();
  sub_252B98958();
  sub_252B5F67C();
  v51();
  v45(&v34[*(int *)(v43 + 36)], v63, v50);
  sub_252B8A160((uint64_t)v34, v53, (void (*)(void))type metadata accessor for RGActionConfirmationModel);
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v61);
  sub_252B80134((uint64_t)v34, (void (*)(void))type metadata accessor for RGActionConfirmationModel);
LABEL_8:
  sub_252AF4368();
}

void sub_252B85040()
{
}

void sub_252B85058()
{
}

uint64_t (*RGParameterConfirmationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.systemResponseEventId.getter()
{
  return sub_252B83E10();
}

uint64_t RGParameterConfirmationModel.systemResponseEventId.setter()
{
  return sub_252B83E90();
}

uint64_t (*RGParameterConfirmationModel.systemResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252B83F4C(a1);
}

uint64_t RGParameterConfirmationModel.statementID.setter(int *a1)
{
  return sub_252B83FB8(a1);
}

uint64_t (*RGParameterConfirmationModel.statementID.modify())()
{
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.affirmative.getter()
{
  return sub_252B85190();
}

uint64_t sub_252B85190()
{
  uint64_t v0 = sub_252B98DD8();
  v1(v0);
  sub_252D19408();
  sub_252AEA304();
  uint64_t v2 = sub_252AEA3DC();

  return v3(v2);
}

uint64_t RGParameterConfirmationModel.negative.getter()
{
  return sub_252B85210();
}

uint64_t sub_252B85210()
{
  uint64_t v0 = sub_252B98DD8();
  v1(v0);
  sub_252D19408();
  sub_252AEA304();
  uint64_t v2 = sub_252AEA3DC();

  return v3(v2);
}

uint64_t RGParameterConfirmationModel.parameterDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RGParameterConfirmationModel(0);
  return sub_252B22858(v1 + *(int *)(v3 + 36), a1, &qword_269C41AA0);
}

uint64_t RGParameterConfirmationModel.parameterRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RGParameterConfirmationModel(0);
  return sub_252B22858(v1 + *(int *)(v3 + 40), a1, &qword_269C41AA8);
}

uint64_t RGParameterConfirmationModel.actionResponseEventId.getter()
{
  return sub_252B85310();
}

uint64_t sub_252B85310()
{
  uint64_t v0 = sub_252B4C3DC();
  v1(v0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v2 = sub_252AEA3DC();

  return v3(v2);
}

uint64_t RGParameterConfirmationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_252B8538C(a1, (void (*)(void))type metadata accessor for RGParameterConfirmationModel);
}

uint64_t sub_252B8538C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252B987E0();
  sub_252AEA304();
  uint64_t v2 = sub_252B4C32C();

  return v3(v2);
}

uint64_t (*RGParameterConfirmationModel.actionResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGParameterConfirmationModel.init(actionEventId:actionResponseEventId:affirmative:negative:parameterRepresentation:)()
{
  uint64_t v1 = sub_252B98618();
  sub_252B98248(v1);
  uint64_t v2 = type metadata accessor for RGParameterConfirmationModel(0);
  sub_252B4C01C();
  sub_252B98480();
  v3();
  sub_252D19408();
  sub_252B4C01C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void (**)(void))(v4 + 16);
  sub_252B986A8();
  v6();
  sub_252B986A8();
  v6();
  sub_252B22858(v12, v0 + *(int *)(v2 + 40), &qword_269C41AA8);
  uint64_t v7 = type metadata accessor for RGDisplayRepresentation(0);
  sub_252B98A70(v7);
  uint64_t v8 = *(void (**)(void))(v5 + 8);
  sub_252B98798();
  v8();
  sub_252B98798();
  v8();
  sub_252B5A4CC(v13, &qword_26B2320E8);
  uint64_t v9 = sub_252B984E0();

  return v10(v9);
}

uint64_t RGParameterConfirmationModel.init(actionEventId:actionResponseEventId:affirmative:negative:parameterDisplayRepresentation:)()
{
  uint64_t v1 = sub_252B98618();
  sub_252B98248(v1);
  uint64_t v2 = type metadata accessor for RGParameterConfirmationModel(0);
  sub_252B4C01C();
  sub_252B98480();
  v3();
  sub_252D19408();
  sub_252B4C01C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void (**)(void))(v4 + 16);
  sub_252B986A8();
  v6();
  sub_252B986A8();
  v6();
  sub_252B22858(v12, v0 + *(int *)(v2 + 36), &qword_269C41AA0);
  uint64_t v7 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  sub_252B98A70(v7);
  uint64_t v8 = *(void (**)(void))(v5 + 8);
  sub_252B98798();
  v8();
  sub_252B98798();
  v8();
  sub_252B5A4CC(v13, &qword_26B2320E8);
  uint64_t v9 = sub_252B984E0();

  return v10(v9);
}

uint64_t RGParameterConfirmationModel.init(actionEventId:systemResponseEventId:statementID:affirmative:negative:parameterDisplayRepresentation:)()
{
  sub_252AFC698();
  uint64_t v21 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  int v6 = *v5;
  uint64_t v8 = *((void *)v5 + 1);
  uint64_t v7 = *((void *)v5 + 2);
  uint64_t v9 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, 1, 1, v9);
  sub_252AECE74(v2, v4);
  type metadata accessor for RGParameterConfirmationModel(0);
  sub_252B98D6C();
  sub_252B4C01C();
  (*(void (**)(void))(v10 + 16))();
  uint64_t v11 = v4 + *(int *)(v2 + 24);
  *(_DWORD *)uint64_t v11 = v6;
  *(void *)(v11 + 8) = v8;
  *(void *)(v11 + 16) = v7;
  sub_252D19408();
  sub_252AEA304();
  uint64_t v13 = *(void (**)(void))(v12 + 32);
  sub_252B988EC();
  v13();
  sub_252B988EC();
  v13();
  sub_252B8A668(v21, v4 + *(int *)(v2 + 36), &qword_269C41AA0);
  sub_252B98D60();
  v14();
  type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  sub_252AFC67C();
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v15, v16, v17, v18);
}

uint64_t RGParameterConfirmationModel.ParameterRepresentation.init(title:subtitle:image:)()
{
  sub_252B9897C();
  sub_252AEA304();
  sub_252B4C1CC();
  v3();
  uint64_t v4 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  sub_252B8A668(v1, v2 + *(int *)(v4 + 20), &qword_269C41A90);
  return sub_252B8A668(v0, v2 + *(int *)(v4 + 24), &qword_269C41A98);
}

uint64_t RGParameterConfirmationModel.ParameterRepresentation.title.getter()
{
  return sub_252B89BCC();
}

uint64_t RGParameterConfirmationModel.ParameterRepresentation.subtitle.getter()
{
  return sub_252B82464();
}

uint64_t RGParameterConfirmationModel.ParameterRepresentation.image.getter()
{
  return sub_252B824BC();
}

uint64_t sub_252B85900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252B85A40(char a1)
{
  if (!a1) {
    return 0x656C746974;
  }
  if (a1 == 1) {
    return 0x656C746974627573;
  }
  return 0x6567616D69;
}

uint64_t sub_252B85A90()
{
  return sub_252B85A40(*v0);
}

uint64_t sub_252B85A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B85900(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B85AC0(uint64_t a1)
{
  unint64_t v2 = sub_252B8A5D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B85AFC(uint64_t a1)
{
  unint64_t v2 = sub_252B8A5D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGParameterConfirmationModel.ParameterRepresentation.encode(to:)()
{
  sub_252AF4380();
  sub_252B98750();
  sub_252AC3A24(&qword_269C43AC8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252B8A5D0();
  sub_252AF4784();
  sub_252D19408();
  sub_252B800EC(&qword_269C43A08, MEMORY[0x263F06D40]);
  sub_252B980EC();
  if (!v0)
  {
    type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    sub_252B982F8();
    sub_252B98C84();
    sub_252D19C68();
    sub_252B800EC(&qword_269C43A10, MEMORY[0x263F80B90]);
    sub_252B98690();
  }
  uint64_t v2 = sub_252B98190();
  v3(v2);
  sub_252B98814();
  sub_252AF4368();
}

void RGParameterConfirmationModel.ParameterRepresentation.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  uint64_t v19 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C41A98);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252AEDE70();
  uint64_t v21 = v8;
  uint64_t v9 = sub_252AC3A24(&qword_269C41A90);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252B5F688();
  sub_252D19408();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v11);
  sub_252B774C8(v12, v19);
  sub_252AC3A24(&qword_269C43AD8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252B9835C();
  uint64_t v15 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252B5F6A0();
  sub_252AC3A68(v4, v4[3]);
  sub_252B8A5D0();
  sub_252B5FBEC();
  sub_252D1A718();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_252B800EC(&qword_269C43A20, MEMORY[0x263F06D40]);
    sub_252B98CE4();
    sub_252D1A498();
    sub_252B7E53C();
    v17();
    sub_252B98CE4();
    sub_252D1A438();
    sub_252B8A668(v2, v0 + *(int *)(v15 + 20), &qword_269C41A90);
    sub_252D19C68();
    sub_252B98C84();
    sub_252B800EC(&qword_269C43A28, MEMORY[0x263F80B90]);
    sub_252D1A438();
    sub_252B5F53C();
    v18();
    sub_252B8A668(v21, v0 + *(int *)(v15 + 24), &qword_269C41A98);
    sub_252B8A160(v0, v20, (void (*)(void))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_252B80134(v0, (void (*)(void))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
  }
  sub_252AF4368();
}

uint64_t sub_252B860B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D310 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x74616D7269666661 && a2 == 0xEB00000000657669;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x657669746167656ELL && a2 == 0xE800000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000252D1D370 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1D390 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D350)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          char v9 = sub_252D1A5D8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 7;
          }
          else {
            return 8;
          }
        }
      }
    }
  }
}

unint64_t sub_252B86420(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 3:
      unint64_t result = 0x74616D7269666661;
      break;
    case 4:
      unint64_t result = 0x657669746167656ELL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

void sub_252B86540()
{
}

void sub_252B86558()
{
}

unint64_t sub_252B86570()
{
  return sub_252B86420(*v0);
}

uint64_t sub_252B86578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B860B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B865A0(uint64_t a1)
{
  unint64_t v2 = sub_252B8A61C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B865DC(uint64_t a1)
{
  unint64_t v2 = sub_252B8A61C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGParameterConfirmationModel.encode(to:)()
{
  sub_252AF4380();
  sub_252AC3A24(&qword_269C43AE0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B98154();
  sub_252B8A61C();
  sub_252AF4784();
  sub_252B98E40();
  sub_252B800EC(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252D1A518();
  if (!v1)
  {
    uint64_t v3 = type metadata accessor for RGParameterConfirmationModel(0);
    sub_252B98128(1);
    sub_252B981D0(v0 + *(int *)(v3 + 24));
    sub_252B982A8();
    sub_252B98E0C(v0 + *(int *)(v3 + 28));
    sub_252B800EC(&qword_269C43A08, MEMORY[0x263F06D40]);
    sub_252B982A8();
    sub_252B982A8();
    type metadata accessor for RGDisplayRepresentation(0);
    sub_252B800EC(&qword_269C43A68, (void (*)(uint64_t))type metadata accessor for RGDisplayRepresentation);
    sub_252B986F8();
    type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    sub_252B800EC(&qword_269C43AF0, (void (*)(uint64_t))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
    sub_252B986F8();
    sub_252B98128(7);
  }
  uint64_t v4 = sub_252B98190();
  v5(v4);
  sub_252B5FBC4();
  sub_252AF4368();
}

void RGParameterConfirmationModel.init(from:)()
{
  sub_252AF4380();
  uint64_t v70 = v0;
  uint64_t v4 = v3;
  uint64_t v60 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C41AA8);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252AEDE70();
  uint64_t v61 = v8;
  uint64_t v9 = sub_252AC3A24(&qword_269C41AA0);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252B5FA1C(v11, v59[0]);
  sub_252D19408();
  sub_252AEDBD0();
  uint64_t v72 = v13;
  uint64_t v73 = v12;
  MEMORY[0x270FA5388](v12);
  sub_252AEDC14();
  uint64_t v63 = v14;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v24 = (int *)sub_252B98B18(v16, v17, v18, v19, v20, v21, v22, v23, v59[0]);
  sub_252AEDBD0();
  uint64_t v68 = v25;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v59 - v30;
  uint64_t v32 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v33 = sub_252AEA368(v32);
  MEMORY[0x270FA5388](v33);
  sub_252B5F688();
  uint64_t v66 = sub_252AC3A24(&qword_269C43AF8);
  sub_252AEDBD0();
  uint64_t v64 = v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = sub_252AF4420();
  uint64_t v69 = type metadata accessor for RGParameterConfirmationModel(v36);
  sub_252AEA304();
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = sub_252B98B54(v38, v59[0]);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v39, 1, 1, (uint64_t)v24);
  uint64_t v40 = v4[3];
  uint64_t v41 = v4[4];
  uint64_t v71 = v4;
  unsigned int v42 = sub_252AC3A68(v4, v40);
  sub_252B8A61C();
  uint64_t v65 = v1;
  uint64_t v43 = v70;
  sub_252D1A718();
  uint64_t v67 = v24;
  if (!v43)
  {
    uint64_t v70 = v29;
    LOBYTE(v74) = 0;
    uint64_t v44 = sub_252B800EC(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A438();
    uint64_t v47 = v2;
    uint64_t v48 = v44;
    uint64_t v49 = (uint64_t)v39;
    sub_252AECE74(v47, (uint64_t)v39);
    LOBYTE(v74) = 1;
    sub_252D1A498();
    v59[2] = v48;
    uint64_t v50 = (int *)v69;
    uint64_t v52 = v68 + 32;
    uint64_t v51 = *(void (**)(void))(v68 + 32);
    sub_252B98D60();
    v51();
    sub_252B98C90();
    sub_252D1A498();
    v59[0] = (uint64_t)v51;
    v59[1] = v52;
    uint64_t v53 = v49 + v50[6];
    *(_DWORD *)uint64_t v53 = v74;
    *(_OWORD *)(v53 + 8) = v75;
    LOBYTE(v74) = 3;
    sub_252B800EC(&qword_269C43A20, MEMORY[0x263F06D40]);
    sub_252D1A498();
    uint64_t v54 = *(void (**)(void))(v72 + 32);
    sub_252B988EC();
    v54();
    LOBYTE(v74) = 4;
    sub_252D1A498();
    sub_252B988EC();
    v54();
    type metadata accessor for RGDisplayRepresentation(0);
    LOBYTE(v74) = 5;
    sub_252B800EC(&qword_269C43A98, (void (*)(uint64_t))type metadata accessor for RGDisplayRepresentation);
    uint64_t v55 = v62;
    sub_252D1A438();
    sub_252B8A668(v55, v49 + v50[9], &qword_269C41AA0);
    type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    LOBYTE(v74) = 6;
    sub_252B800EC(&qword_269C43B00, (void (*)(uint64_t))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
    uint64_t v56 = v61;
    sub_252D1A438();
    sub_252B8A668(v56, v49 + v50[10], &qword_269C41AA8);
    LOBYTE(v74) = 7;
    sub_252D1A498();
    sub_252B983F0();
    v57();
    sub_252B7E53C();
    v58();
    sub_252B8A160(v49, v60, (void (*)(void))type metadata accessor for RGParameterConfirmationModel);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v71);
    sub_252B80134(v49, (void (*)(void))type metadata accessor for RGParameterConfirmationModel);
    goto LABEL_14;
  }
  uint64_t v70 = v43;
  sub_252B98760();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v71);
  sub_252B5A4CC((uint64_t)v39, &qword_26B2320E8);
  if (v1) {
    (*(void (**)(char *, int *))(v68 + 8))(&v39[v24[5]], v67);
  }
  if (v2) {
    swift_bridgeObjectRelease();
  }
  if (v41)
  {
    sub_252B98C34();
    v45();
    if (!v31)
    {
LABEL_10:
      if (!v42) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if (!v31)
  {
    goto LABEL_10;
  }
  sub_252B5F53C();
  v46();
  if (v42) {
LABEL_11:
  }
    sub_252B5A4CC((uint64_t)&v39[v24[9]], &qword_269C41AA0);
LABEL_12:
  if (v43) {
    sub_252B5A4CC((uint64_t)&v39[v24[10]], &qword_269C41AA8);
  }
LABEL_14:
  sub_252AF4368();
}

void sub_252B8716C()
{
}

void sub_252B87184()
{
}

uint64_t ArchivedViewModel.viewData.getter()
{
  sub_252AC5A54(*(void *)v0, *(void *)(v0 + 8));
  return sub_252AEA3DC();
}

uint64_t ArchivedViewModel.appBundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t ArchivedViewModel.appDisplayName.getter()
{
  return sub_252AEA3DC();
}

uint64_t ArchivedViewModel.init(viewData:appBundleId:appDisplayName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_252B87234(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174614477656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C70736944707061 && a2 == 0xEE00656D614E7961)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252B873C0(char a1)
{
  if (!a1) {
    return 0x6174614477656976;
  }
  if (a1 == 1) {
    return 0x6C646E7542707061;
  }
  return 0x6C70736944707061;
}

uint64_t sub_252B8742C()
{
  return sub_252B873C0(*v0);
}

uint64_t sub_252B87434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B87234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B8745C(uint64_t a1)
{
  unint64_t v2 = sub_252B8A6C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B87498(uint64_t a1)
{
  unint64_t v2 = sub_252B8A6C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ArchivedViewModel.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C43B08);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B987F8();
  sub_252AC3A68(v2, v2[3]);
  sub_252B8A6C0();
  sub_252B5FBEC();
  sub_252D1A738();
  sub_252B5935C();
  sub_252D1A578();
  if (!v0)
  {
    sub_252B5FB14();
    sub_252D1A528();
    sub_252B989E8();
    sub_252D1A4E8();
  }
  uint64_t v4 = sub_252B98A48();
  v5(v4);
  sub_252AF4368();
}

void ArchivedViewModel.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C43B18);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AF45F0();
  sub_252AC3A68(v2, v2[3]);
  sub_252B8A6C0();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_252B593A8();
    sub_252D1A498();
    sub_252AC5A54(v16, v17);
    uint64_t v6 = sub_252D1A448();
    uint64_t v8 = v7;
    uint64_t v14 = v6;
    sub_252B989E8();
    swift_bridgeObjectRetain();
    uint64_t v9 = v8;
    uint64_t v10 = sub_252D1A408();
    uint64_t v12 = v11;
    uint64_t v15 = v10;
    sub_252B5F658();
    v13();
    sub_252AC5A54(v16, v17);
    swift_bridgeObjectRetain();
    sub_252AC5C14(v16, v17);
    *uint64_t v4 = v16;
    v4[1] = v17;
    v4[2] = v14;
    v4[3] = v9;
    v4[4] = v15;
    v4[5] = v12;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    sub_252AC5C14(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

void sub_252B8789C()
{
}

void sub_252B878B4()
{
}

uint64_t SiriSDSViewModel.sdsData.getter()
{
  sub_252AC5A54(*(void *)v0, *(void *)(v0 + 8));
  return sub_252AEA3DC();
}

uint64_t SiriSDSViewModel.sdsBundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SiriSDSViewModel.snippetData.getter()
{
  sub_252B592FC(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return sub_252AEA3DC();
}

uint64_t SiriSDSViewModel.snippetBundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SiriSDSViewModel.init(sdsData:sdsBundleId:snippetData:snippetBundleId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_252B87998(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61746144736473 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C646E7542736473 && a2 == 0xEB00000000644965;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x4474657070696E73 && a2 == 0xEB00000000617461;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x4274657070696E73 && a2 == 0xEF6449656C646E75)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_252B87B9C(char a1)
{
  uint64_t result = 0x61746144736473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C646E7542736473;
      break;
    case 2:
      uint64_t result = 0x4474657070696E73;
      break;
    case 3:
      uint64_t result = 0x4274657070696E73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252B87C4C()
{
  return sub_252B87B9C(*v0);
}

uint64_t sub_252B87C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B87998(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B87C7C(uint64_t a1)
{
  unint64_t v2 = sub_252B8A70C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B87CB8(uint64_t a1)
{
  unint64_t v2 = sub_252B8A70C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SiriSDSViewModel.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C43B20);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B987F8();
  sub_252AC3A68(v2, v2[3]);
  sub_252B8A70C();
  sub_252B5FBEC();
  sub_252D1A738();
  sub_252B5935C();
  sub_252B98B90();
  sub_252D1A578();
  if (!v0)
  {
    sub_252B5FB14();
    sub_252D1A528();
    sub_252B98B90();
    sub_252D1A518();
    sub_252D1A4E8();
  }
  uint64_t v4 = sub_252B98A48();
  v5(v4);
  sub_252B5FBC4();
  sub_252AF4368();
}

void SiriSDSViewModel.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C43B30);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F688();
  BOOL v6 = (void *)sub_252B98E58();
  sub_252AC3A68(v6, v7);
  sub_252B8A70C();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
  }
  else
  {
    sub_252B593A8();
    sub_252B987C4();
    sub_252D1A498();
    unint64_t v17 = v4;
    uint64_t v8 = v18;
    LOBYTE(v18) = 1;
    sub_252AC5A54(v8, v19);
    sub_252B98DEC();
    uint64_t v15 = sub_252D1A448();
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    sub_252B987C4();
    sub_252D1A438();
    sub_252B592FC(v18, v19);
    sub_252B98DEC();
    uint64_t v11 = sub_252D1A408();
    uint64_t v13 = v12;
    uint64_t v16 = v11;
    sub_252B5F67C();
    v14();
    sub_252AC5A54(v8, v19);
    swift_bridgeObjectRetain();
    sub_252B592FC(v18, v19);
    swift_bridgeObjectRetain();
    sub_252B592E8(v18, v19);
    swift_bridgeObjectRelease();
    sub_252AC5C14(v8, v19);
    uint64_t *v17 = v8;
    v17[1] = v19;
    v17[2] = v15;
    v17[3] = v10;
    v17[4] = v18;
    v17[5] = v19;
    v17[6] = v16;
    v17[7] = v13;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v2);
    sub_252AC5C14(v8, v19);
    swift_bridgeObjectRelease();
    sub_252B592E8(v18, v19);
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

void sub_252B881A0()
{
}

void sub_252B881B8()
{
}

uint64_t RGToolDisambiguationModel.init(actionEventId:actionResponseEventId:items:)()
{
  sub_252B98BA8();
  sub_252AEDBD0();
  uint64_t v3 = *(void (**)(void))(v2 + 16);
  sub_252B983FC();
  v3();
  uint64_t v4 = type metadata accessor for RGToolDisambiguationModel(0);
  sub_252B983FC();
  v3();
  *(void *)(v1 + *(int *)(v4 + 32)) = v0;
  *(void *)(v1 + *(int *)(v4 + 28)) = MEMORY[0x263F8EE78];
  uint64_t v5 = sub_252B982C0();
  v6(v5);
  uint64_t v7 = sub_252B98378();

  return v8(v7);
}

uint64_t RGToolDisambiguationModel.init(actionEventId:actionResponseEventId:itemDisplayRepresentations:)()
{
  sub_252B98BA8();
  sub_252AEDBD0();
  uint64_t v3 = *(void (**)(void))(v2 + 16);
  sub_252B983FC();
  v3();
  uint64_t v4 = type metadata accessor for RGToolDisambiguationModel(0);
  sub_252B983FC();
  v3();
  *(void *)(v1 + *(int *)(v4 + 32)) = MEMORY[0x263F8EE78];
  *(void *)(v1 + *(int *)(v4 + 28)) = v0;
  uint64_t v5 = sub_252B982C0();
  v6(v5);
  uint64_t v7 = sub_252B98378();

  return v8(v7);
}

uint64_t RGToolDisambiguationModel.init(actionEventId:systemResponseEventId:statementID:itemDisplayRepresentations:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v36 = v14;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_252B98AB8();
  sub_252AEDBD0();
  uint64_t v37 = v20;
  uint64_t v22 = *(void (**)(void))(v21 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v18, v16, v19);
  uint64_t v23 = type metadata accessor for RGToolDisambiguationModel(0);
  sub_252B988F8();
  v22();
  sub_252B98A60(v18 + *(int *)(v23 + 24));
  *(void *)(v18 + v24) = v36;
  uint64_t v25 = sub_252B982C0();
  v26(v25);
  *(void *)(v18 + *(int *)(v23 + 32)) = MEMORY[0x263F8EE78];
  sub_252B988F8();
  sub_252AFC67C();
  return v30(v27, v28, v29, v30, v31, v32, v33, v34, v36, v37, a11, a12, a13, a14);
}

uint64_t RGToolDisambiguationModel.actionEventId.getter()
{
  return sub_252B89BCC();
}

uint64_t _s16IntelligenceFlow21RGDisambiguationModelV13actionEventId10Foundation4UUIDVvs_0()
{
  sub_252D19588();
  sub_252AEA304();
  uint64_t v0 = sub_252B4C32C();

  return v1(v0);
}

uint64_t (*RGToolDisambiguationModel.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.systemResponseEventId.getter()
{
  return sub_252B83E10();
}

uint64_t RGToolDisambiguationModel.systemResponseEventId.setter()
{
  return sub_252B83E90();
}

uint64_t (*RGToolDisambiguationModel.systemResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.statementID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252B83F4C(a1);
}

uint64_t RGToolDisambiguationModel.statementID.setter(int *a1)
{
  return sub_252B83FB8(a1);
}

uint64_t (*RGToolDisambiguationModel.statementID.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.itemDisplayRepresentations.getter()
{
  return sub_252B885EC();
}

uint64_t sub_252B885EC()
{
  uint64_t v0 = sub_252B98DA4();
  v1(v0);

  return swift_bridgeObjectRetain();
}

uint64_t RGToolDisambiguationModel.itemDisplayRepresentations.setter(uint64_t a1)
{
  return sub_252B8863C(a1);
}

uint64_t sub_252B8863C(uint64_t a1)
{
  uint64_t v3 = sub_252B98DA4();
  uint64_t v5 = *(int *)(v4(v3) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v5) = a1;
  return result;
}

uint64_t (*RGToolDisambiguationModel.itemDisplayRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.items.getter()
{
  return sub_252B886D4();
}

uint64_t sub_252B886D4()
{
  uint64_t v0 = sub_252B98DA4();
  v1(v0);

  return swift_bridgeObjectRetain();
}

uint64_t RGToolDisambiguationModel.items.setter(uint64_t a1)
{
  return sub_252B88724(a1);
}

uint64_t sub_252B88724(uint64_t a1)
{
  uint64_t v3 = sub_252B98DA4();
  uint64_t v5 = *(int *)(v4(v3) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v5) = a1;
  return result;
}

uint64_t (*RGToolDisambiguationModel.items.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.actionResponseEventId.getter()
{
  return sub_252B84090();
}

uint64_t RGToolDisambiguationModel.actionResponseEventId.setter(uint64_t a1)
{
  return sub_252B8410C(a1, (void (*)(void))type metadata accessor for RGToolDisambiguationModel);
}

uint64_t (*RGToolDisambiguationModel.actionResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t RGToolDisambiguationModel.Item.init(title:subtitle:appBundleId:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_252D19408();
  sub_252AEA304();
  sub_252B4C1CC();
  v8();
  uint64_t v9 = type metadata accessor for RGToolDisambiguationModel.Item(0);
  uint64_t result = sub_252B8A668(a1, a4 + *(int *)(v9 + 20), &qword_269C41A90);
  uint64_t v11 = (void *)(a4 + *(int *)(v9 + 24));
  *uint64_t v11 = a2;
  v11[1] = a3;
  return result;
}

uint64_t RGToolDisambiguationModel.Item.title.getter()
{
  return sub_252B89BCC();
}

uint64_t RGToolDisambiguationModel.Item.subtitle.getter()
{
  return sub_252B82464();
}

uint64_t RGToolDisambiguationModel.Item.appBundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t sub_252B88914(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252B88A74(char a1)
{
  if (!a1) {
    return 0x656C746974;
  }
  if (a1 == 1) {
    return 0x656C746974627573;
  }
  return 0x6C646E7542707061;
}

uint64_t sub_252B88AD0()
{
  return sub_252B88A74(*v0);
}

uint64_t sub_252B88AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B88914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B88B00(uint64_t a1)
{
  unint64_t v2 = sub_252B8A778();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B88B3C(uint64_t a1)
{
  unint64_t v2 = sub_252B8A778();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGToolDisambiguationModel.Item.encode(to:)()
{
  sub_252AF4380();
  sub_252B98750();
  sub_252AC3A24(&qword_269C43B38);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252B8A778();
  sub_252AF4784();
  sub_252D19408();
  sub_252B800EC(&qword_269C43A08, MEMORY[0x263F06D40]);
  sub_252B980EC();
  if (!v0)
  {
    type metadata accessor for RGToolDisambiguationModel.Item(0);
    sub_252B982F8();
    sub_252B98C84();
    sub_252D1A4E8();
  }
  uint64_t v2 = sub_252B98190();
  v3(v2);
  sub_252B98814();
  sub_252AF4368();
}

void RGToolDisambiguationModel.Item.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v28 = v3;
  uint64_t v4 = sub_252AC3A24(&qword_269C41A90);
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  sub_252AEDE70();
  uint64_t v31 = v6;
  sub_252D19408();
  sub_252AEDBD0();
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v8);
  sub_252AEDE70();
  uint64_t v32 = v9;
  uint64_t v33 = sub_252AC3A24(&qword_269C43B48);
  sub_252AEDBD0();
  uint64_t v30 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_252B9835C();
  uint64_t v13 = type metadata accessor for RGToolDisambiguationModel.Item(v12);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252AC3A68(v2, v2[3]);
  sub_252B8A778();
  sub_252B5FBEC();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v17 = v31;
    uint64_t v26 = v16;
    uint64_t v27 = v2;
    sub_252B800EC(&qword_269C43A20, MEMORY[0x263F06D40]);
    sub_252B987A8();
    sub_252D1A498();
    sub_252B7E53C();
    v18();
    sub_252B987A8();
    sub_252D1A438();
    uint64_t v19 = v13;
    sub_252B8A668(v17, (uint64_t)&v26[*(int *)(v13 + 20)], &qword_269C41A90);
    sub_252B98C84();
    uint64_t v20 = sub_252D1A408();
    uint64_t v22 = v21;
    sub_252B775A0();
    v23();
    uint64_t v24 = (uint64_t)v26;
    uint64_t v25 = (uint64_t *)&v26[*(int *)(v19 + 24)];
    *uint64_t v25 = v20;
    v25[1] = v22;
    sub_252B8A160(v24, v28, (void (*)(void))type metadata accessor for RGToolDisambiguationModel.Item);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v27);
    sub_252B80134(v24, (void (*)(void))type metadata accessor for RGToolDisambiguationModel.Item);
  }
  sub_252AF4368();
}

uint64_t sub_252B8903C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D310 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000444974;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1D330 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D350)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        char v8 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 5;
        }
        else {
          return 6;
        }
      }
    }
  }
}

unint64_t sub_252B892D4(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0x736D657469;
      break;
    default:
      return result;
  }
  return result;
}

void sub_252B893B0()
{
}

void sub_252B893C8()
{
}

unint64_t sub_252B893E0()
{
  return sub_252B892D4(*v0);
}

uint64_t sub_252B893E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B8903C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B89410(uint64_t a1)
{
  unint64_t v2 = sub_252B8A7C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B8944C(uint64_t a1)
{
  unint64_t v2 = sub_252B8A7C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void RGToolDisambiguationModel.encode(to:)()
{
  sub_252AF4380();
  sub_252B98750();
  sub_252AC3A24(&qword_269C43B50);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B98154();
  sub_252B8A7C4();
  sub_252AF4784();
  sub_252B98E40();
  sub_252B800EC(&qword_26B231C10, MEMORY[0x263F07508]);
  sub_252B980EC();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for RGToolDisambiguationModel(0);
    sub_252B980EC();
    sub_252B981D0(v1 + *(int *)(v3 + 24));
    sub_252B98230();
    sub_252AC3A24(&qword_269C43A58);
    sub_252B8A26C();
    sub_252B98230();
    sub_252B98970();
    sub_252AC3A24(&qword_269C43B60);
    sub_252B8A810();
    sub_252B98230();
    sub_252B980EC();
  }
  uint64_t v4 = sub_252B98190();
  v5(v4);
  sub_252B98814();
  sub_252AF4368();
}

void RGToolDisambiguationModel.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v16 = v3;
  sub_252D19588();
  sub_252AEDBD0();
  uint64_t v18 = v4;
  MEMORY[0x270FA5388](v5);
  sub_252B234B4();
  MEMORY[0x270FA5388](v6);
  sub_252B98DB0();
  MEMORY[0x270FA5388](v7);
  sub_252AC3A24(&qword_269C43B78);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252AF45F0();
  uint64_t v17 = type metadata accessor for RGToolDisambiguationModel(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252AEDE70();
  uint64_t v11 = v10;
  sub_252AC3A68(v2, v2[3]);
  sub_252B8A7C4();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    LOBYTE(v19) = 0;
    sub_252B800EC(&qword_26B231070, MEMORY[0x263F07508]);
    sub_252D1A498();
    uint64_t v12 = *(void (**)(void))(v18 + 32);
    sub_252B988EC();
    v12();
    sub_252B988E0(1);
    sub_252D1A498();
    sub_252B988EC();
    v12();
    sub_252B98C90();
    sub_252B98B0C();
    sub_252D1A498();
    sub_252B98AE4(v19);
    sub_252AC3A24(&qword_269C43A58);
    sub_252B8A3B4();
    sub_252B98724();
    *(void *)(v11 + *(int *)(v17 + 28)) = v19;
    sub_252AC3A24(&qword_269C43B60);
    sub_252B98970();
    sub_252B8A8B4();
    sub_252B98724();
    *(void *)(v11 + *(int *)(v17 + 32)) = v19;
    sub_252B988E0(5);
    sub_252D1A498();
    uint64_t v13 = sub_252B98178();
    v14(v13);
    sub_252B7E53C();
    v15();
    sub_252B8A160(v11, v16, (void (*)(void))type metadata accessor for RGToolDisambiguationModel);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
    sub_252B80134(v11, (void (*)(void))type metadata accessor for RGToolDisambiguationModel);
  }
  sub_252AF4368();
}

void sub_252B89B84()
{
}

void sub_252B89B9C()
{
}

uint64_t RGControlModel.controlMetadata.getter()
{
  return sub_252B89BCC();
}

uint64_t sub_252B89BCC()
{
  uint64_t v0 = sub_252B4C3DC();
  v1(v0);
  sub_252AEA304();
  uint64_t v2 = sub_252AEA3DC();

  return v3(v2);
}

uint64_t RGControlModel.init(controlMetadata:)()
{
  sub_252D19C58();
  sub_252AEA304();
  uint64_t v0 = sub_252B4C32C();

  return v1(v0);
}

uint64_t sub_252B89C84(uint64_t a1)
{
  unint64_t v2 = sub_252B8A958();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B89CC0(uint64_t a1)
{
  unint64_t v2 = sub_252B8A958();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RGControlModel.encode(to:)()
{
  sub_252AC3A24(&qword_269C43B90);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252AC423C();
  sub_252B98154();
  sub_252B8A958();
  sub_252D1A738();
  sub_252D19C58();
  sub_252B800EC(&qword_269C42DA8, MEMORY[0x263F807B0]);
  sub_252D1A578();
  sub_252B775A0();
  return v1();
}

void RGControlModel.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v16 = v3;
  sub_252D19C58();
  sub_252AEDBD0();
  v15[1] = v4;
  MEMORY[0x270FA5388](v5);
  sub_252AEDE70();
  sub_252AC3A24(&qword_269C43BA0);
  sub_252AEDBD0();
  uint64_t v17 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252AF4420();
  uint64_t v9 = type metadata accessor for RGControlModel(v8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252AC3A68(v2, v2[3]);
  sub_252B8A958();
  sub_252D1A718();
  if (!v0)
  {
    sub_252B800EC(&qword_269C42DD0, MEMORY[0x263F807B0]);
    sub_252D1A498();
    sub_252B5F53C();
    v13();
    sub_252B4C1CC();
    v14();
    sub_252B80044((uint64_t)v12, v16, (void (*)(void))type metadata accessor for RGControlModel);
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  sub_252AF4368();
}

void sub_252B8A02C()
{
}

uint64_t sub_252B8A044()
{
  return RGControlModel.encode(to:)();
}

unint64_t sub_252B8A05C()
{
  unint64_t result = qword_269C439C8;
  if (!qword_269C439C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C439C8);
  }
  return result;
}

unint64_t sub_252B8A0A8()
{
  unint64_t result = qword_269C439D0;
  if (!qword_269C439D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C439D0);
  }
  return result;
}

uint64_t type metadata accessor for RGDisplayRepresentation(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234720);
}

unint64_t sub_252B8A114()
{
  unint64_t result = qword_269C43A00;
  if (!qword_269C43A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43A00);
  }
  return result;
}

uint64_t sub_252B8A160(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  uint64_t v4 = sub_252B239AC();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for RGDisambiguationModel.Item(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C43BA8);
}

unint64_t sub_252B8A1D4()
{
  unint64_t result = qword_269C43A38;
  if (!qword_269C43A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43A38);
  }
  return result;
}

unint64_t sub_252B8A220()
{
  unint64_t result = qword_269C43A50;
  if (!qword_269C43A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43A50);
  }
  return result;
}

unint64_t sub_252B8A26C()
{
  unint64_t result = qword_269C43A60;
  if (!qword_269C43A60)
  {
    sub_252AEA288(&qword_269C43A58);
    sub_252B800EC(&qword_269C43A68, (void (*)(uint64_t))type metadata accessor for RGDisplayRepresentation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43A60);
  }
  return result;
}

unint64_t sub_252B8A310()
{
  unint64_t result = qword_269C43A78;
  if (!qword_269C43A78)
  {
    sub_252AEA288(&qword_269C43A70);
    sub_252B800EC(&qword_269C43A80, (void (*)(uint64_t))type metadata accessor for RGDisambiguationModel.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43A78);
  }
  return result;
}

unint64_t sub_252B8A3B4()
{
  unint64_t result = qword_269C43A90;
  if (!qword_269C43A90)
  {
    sub_252AEA288(&qword_269C43A58);
    sub_252B800EC(&qword_269C43A98, (void (*)(uint64_t))type metadata accessor for RGDisplayRepresentation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43A90);
  }
  return result;
}

unint64_t sub_252B8A458()
{
  unint64_t result = qword_269C43AA0;
  if (!qword_269C43AA0)
  {
    sub_252AEA288(&qword_269C43A70);
    sub_252B800EC(&qword_269C43AA8, (void (*)(uint64_t))type metadata accessor for RGDisambiguationModel.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43AA0);
  }
  return result;
}

uint64_t sub_252B8A4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_26B2320E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_252B8A564()
{
  unint64_t result = qword_269C43AB8;
  if (!qword_269C43AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43AB8);
  }
  return result;
}

uint64_t type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234860);
}

unint64_t sub_252B8A5D0()
{
  unint64_t result = qword_269C43AD0;
  if (!qword_269C43AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43AD0);
  }
  return result;
}

unint64_t sub_252B8A61C()
{
  unint64_t result = qword_269C43AE8;
  if (!qword_269C43AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43AE8);
  }
  return result;
}

uint64_t sub_252B8A668(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_252AC3A24(a3);
  sub_252AEA304();
  sub_252B4C1CC();
  v4();
  return a2;
}

unint64_t sub_252B8A6C0()
{
  unint64_t result = qword_269C43B10;
  if (!qword_269C43B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B10);
  }
  return result;
}

unint64_t sub_252B8A70C()
{
  unint64_t result = qword_269C43B28;
  if (!qword_269C43B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B28);
  }
  return result;
}

uint64_t type metadata accessor for RGToolDisambiguationModel.Item(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_269C43BB8);
}

unint64_t sub_252B8A778()
{
  unint64_t result = qword_269C43B40;
  if (!qword_269C43B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B40);
  }
  return result;
}

unint64_t sub_252B8A7C4()
{
  unint64_t result = qword_269C43B58;
  if (!qword_269C43B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B58);
  }
  return result;
}

unint64_t sub_252B8A810()
{
  unint64_t result = qword_269C43B68;
  if (!qword_269C43B68)
  {
    sub_252AEA288(&qword_269C43B60);
    sub_252B800EC(&qword_269C43B70, (void (*)(uint64_t))type metadata accessor for RGToolDisambiguationModel.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B68);
  }
  return result;
}

unint64_t sub_252B8A8B4()
{
  unint64_t result = qword_269C43B80;
  if (!qword_269C43B80)
  {
    sub_252AEA288(&qword_269C43B60);
    sub_252B800EC(&qword_269C43B88, (void (*)(uint64_t))type metadata accessor for RGToolDisambiguationModel.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B80);
  }
  return result;
}

unint64_t sub_252B8A958()
{
  unint64_t result = qword_269C43B98;
  if (!qword_269C43B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43B98);
  }
  return result;
}

uint64_t sub_252B8A9A4()
{
  return sub_252B800EC(&qword_269C43308, (void (*)(uint64_t))type metadata accessor for RGPluginModel);
}

uint64_t sub_252B8A9EC()
{
  return sub_252B800EC(&qword_269C432F8, (void (*)(uint64_t))type metadata accessor for RGPluginModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for RGPluginModel(uint64_t *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v25 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v55 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        v118((char *)a1 + v55[5], (char *)a2 + v55[5], v25);
        uint64_t v56 = v55[6];
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
        uint64_t v59 = *((void *)v58 + 2);
        *((void *)v57 + 1) = *((void *)v58 + 1);
        *((void *)v57 + 2) = v59;
        uint64_t v60 = v55[7];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = sub_252D19408();
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v61, v62, v63);
        v64((char *)a1 + v55[8], (char *)a2 + v55[8], v63);
        v118((char *)a1 + v55[9], (char *)a2 + v55[9], v25);
        break;
      case 2u:
        uint64_t v27 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v27))
        {
          uint64_t v28 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v27);
        }
        uint64_t v65 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        v119((char *)a1 + v65[5], (char *)a2 + v65[5], v27);
        uint64_t v66 = v65[6];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
        uint64_t v69 = *((void *)v68 + 2);
        *((void *)v67 + 1) = *((void *)v68 + 1);
        *((void *)v67 + 2) = v69;
        uint64_t v70 = v65[7];
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = sub_252D19408();
        int v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v71, v72, v73);
        v74((char *)a1 + v65[8], (char *)a2 + v65[8], v73);
        uint64_t v121 = v65;
        uint64_t v75 = v65[9];
        unint64_t v76 = (char *)a1 + v75;
        uint64_t v77 = (char *)a2 + v75;
        uint64_t v78 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v77, 1, (uint64_t)v78))
        {
          uint64_t v79 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
          uint64_t v80 = v121;
        }
        else
        {
          uint64_t v116 = v27;
          v74(v76, v77, v73);
          uint64_t v81 = v78[5];
          __dst = &v76[v81];
          uint64_t v82 = &v77[v81];
          uint64_t v114 = v74;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v77[v81], 1, v73))
          {
            uint64_t v83 = sub_252AC3A24(&qword_269C41A90);
            memcpy(__dst, v82, *(void *)(*(void *)(v83 - 8) + 64));
          }
          else
          {
            v74(__dst, v82, v73);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v73);
          }
          uint64_t v84 = v78[6];
          __dsta = &v76[v84];
          uint64_t v85 = &v77[v84];
          uint64_t v86 = sub_252D19C68();
          uint64_t v80 = v121;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
          {
            uint64_t v87 = sub_252AC3A24(&qword_269C41A98);
            memcpy(__dsta, v85, *(void *)(*(void *)(v87 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(__dsta, v85, v86);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v86);
          }
          uint64_t v88 = v78[7];
          uint64_t v89 = &v76[v88];
          uint64_t v90 = &v77[v88];
          uint64_t v91 = *((void *)v90 + 1);
          *(void *)uint64_t v89 = *(void *)v90;
          *((void *)v89 + 1) = v91;
          uint64_t v92 = v78[8];
          uint64_t v93 = &v76[v92];
          uint64_t v94 = &v77[v92];
          unint64_t v95 = *((void *)v94 + 1);
          swift_bridgeObjectRetain();
          if (v95 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
          }
          else
          {
            uint64_t v96 = *(void *)v94;
            sub_252AC5A54(v96, v95);
            *(void *)uint64_t v93 = v96;
            *((void *)v93 + 1) = v95;
          }
          uint64_t v27 = v116;
          int v74 = v114;
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v76, 0, 1, (uint64_t)v78);
        }
        uint64_t v97 = v80[10];
        uint64_t v98 = (char *)a1 + v97;
        uint64_t v99 = (char *)a2 + v97;
        uint64_t v100 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v99, 1, v100))
        {
          uint64_t v101 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          uint64_t v117 = v27;
          v74(v98, v99, v73);
          uint64_t v102 = *(int *)(v100 + 20);
          uint64_t v115 = v74;
          uint64_t v103 = &v98[v102];
          uint64_t v104 = &v99[v102];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v99[v102], 1, v73))
          {
            uint64_t v105 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            v115(v103, v104, v73);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v103, 0, 1, v73);
          }
          uint64_t v106 = *(int *)(v100 + 24);
          uint64_t v107 = &v98[v106];
          uint64_t v108 = &v99[v106];
          uint64_t v109 = sub_252D19C68();
          uint64_t v27 = v117;
          uint64_t v80 = v121;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v108, 1, v109))
          {
            uint64_t v110 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v107, 0, 1, v109);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v98, 0, 1, v100);
        }
        v119((char *)a1 + v80[11], (char *)a2 + v80[11], v27);
        break;
      case 3u:
        uint64_t v29 = sub_252D19588();
        uint64_t v30 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        v30(a1, (char *)a2, v29);
        uint64_t v31 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v30((uint64_t *)((char *)a1 + v31[5]), (char *)a2 + v31[5], v29);
        uint64_t v32 = v31[6];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
        uint64_t v35 = *((void *)v34 + 2);
        *((void *)v33 + 1) = *((void *)v34 + 1);
        *((void *)v33 + 2) = v35;
        *(uint64_t *)((char *)a1 + v31[7]) = *(void *)((char *)a2 + v31[7]);
        *(uint64_t *)((char *)a1 + v31[8]) = *(void *)((char *)a2 + v31[8]);
        uint64_t v36 = v31[9];
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30((uint64_t *)v37, v38, v29);
        break;
      case 4u:
        uint64_t v40 = *a2;
        unint64_t v39 = a2[1];
        sub_252AC5A54(v40, v39);
        *a1 = v40;
        a1[1] = v39;
        break;
      case 5u:
        uint64_t v41 = *a2;
        unint64_t v42 = a2[1];
        sub_252AC5A54(*a2, v42);
        *a1 = v41;
        a1[1] = v42;
        uint64_t v43 = a2[3];
        a1[2] = a2[2];
        a1[3] = v43;
        uint64_t v44 = a2[4];
        uint64_t v45 = a2[5];
        a1[4] = v44;
        a1[5] = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v46 = *a2;
        unint64_t v47 = a2[1];
        sub_252AC5A54(*a2, v47);
        *a1 = v46;
        a1[1] = v47;
        uint64_t v48 = a2[3];
        a1[2] = a2[2];
        a1[3] = v48;
        uint64_t v49 = a2 + 4;
        unint64_t v50 = a2[5];
        swift_bridgeObjectRetain();
        if (v50 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *v49;
        }
        else
        {
          uint64_t v53 = *(void *)v49;
          sub_252AC5A54(v53, v50);
          a1[4] = v53;
          a1[5] = v50;
        }
        uint64_t v54 = a2[7];
        a1[6] = a2[6];
        a1[7] = v54;
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v51 = sub_252D19C58();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        break;
      case 8u:
        uint64_t v52 = a2[1];
        *a1 = *a2;
        a1[1] = v52;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = sub_252D19588();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7((char *)a1, (char *)a2, v6);
        uint64_t v8 = v7;
        uint64_t v120 = v7;
        uint64_t v9 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v8((char *)a1 + v9[5], (char *)a2 + v9[5], v6);
        uint64_t v10 = v9[6];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
        uint64_t v13 = *((void *)v12 + 2);
        *((void *)v11 + 1) = *((void *)v12 + 1);
        *((void *)v11 + 2) = v13;
        *(uint64_t *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
        *(uint64_t *)((char *)a1 + v9[8]) = *(void *)((char *)a2 + v9[8]);
        uint64_t v14 = v9[9];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v120(v15, v16, v6);
        uint64_t v17 = v9[10];
        uint64_t v18 = (uint64_t *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        uint64_t v20 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v20;
        uint64_t v21 = v9[11];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        swift_bridgeObjectRetain();
        v120(v22, v23, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RGPluginModel(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_252D19588();
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t *, uint64_t))v32)((void *)(v3 - 8), a1, v3);
      uint64_t v4 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v32((char *)a1 + v4[5], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32((char *)a1 + v4[9], v3);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 1:
      uint64_t v3 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3)) {
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      }
      int v5 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      v32((char *)a1 + v5[5], v3);
      swift_bridgeObjectRelease();
      uint64_t v6 = (char *)a1 + v5[7];
      uint64_t v7 = sub_252D19408();
      uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v6, v7);
      v8((char *)a1 + v5[8], v7);
      goto LABEL_22;
    case 2:
      uint64_t v3 = sub_252D19588();
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v3)) {
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      }
      uint64_t v4 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      v32((char *)a1 + v4[5], v3);
      swift_bridgeObjectRelease();
      uint64_t v9 = (char *)a1 + v4[7];
      uint64_t v10 = sub_252D19408();
      uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(v9, v10);
      v11((char *)a1 + v4[8], v10);
      uint64_t v12 = (uint64_t)a1 + v4[9];
      uint64_t v13 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, (uint64_t)v13))
      {
        v11((char *)v12, v10);
        uint64_t v14 = v12 + v13[5];
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v14, 1, v10)) {
          v11((char *)v14, v10);
        }
        uint64_t v15 = v12 + v13[6];
        uint64_t v16 = sub_252D19C68();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v15, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
        }
        swift_bridgeObjectRelease();
        uint64_t v17 = (uint64_t *)(v12 + v13[8]);
        unint64_t v18 = v17[1];
        if (v18 >> 60 != 15) {
          sub_252AC5C14(*v17, v18);
        }
      }
      uint64_t v19 = (uint64_t)a1 + v4[10];
      uint64_t v20 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v20))
      {
        v11((char *)v19, v10);
        uint64_t v21 = v19 + *(int *)(v20 + 20);
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v21, 1, v10)) {
          v11((char *)v21, v10);
        }
        uint64_t v22 = v19 + *(int *)(v20 + 24);
        uint64_t v23 = sub_252D19C68();
        if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v22, 1, v23)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        }
      }
LABEL_20:
      uint64_t v24 = v4[11];
      goto LABEL_23;
    case 3:
      uint64_t v3 = sub_252D19588();
      uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t *, uint64_t))v32)((void *)(v3 - 8), a1, v3);
      int v5 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v32((char *)a1 + v5[5], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_22:
      uint64_t v24 = v5[9];
LABEL_23:
      uint64_t v25 = (uint64_t *)((char *)a1 + v24);
      uint64_t v26 = v3;
      uint64_t v27 = (uint64_t (*)(uint64_t *, uint64_t))v32;
      goto LABEL_24;
    case 4:
      uint64_t v28 = *a1;
      unint64_t v29 = a1[1];
      return sub_252AC5C14(v28, v29);
    case 5:
      sub_252AC5C14(*a1, a1[1]);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 6:
      sub_252AC5C14(*a1, a1[1]);
      swift_bridgeObjectRelease();
      unint64_t v30 = a1[5];
      if (v30 >> 60 != 15) {
        sub_252AC5C14(a1[4], v30);
      }
      goto LABEL_35;
    case 7:
      uint64_t v31 = sub_252D19C58();
      uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v31 - 8) + 8);
      uint64_t v26 = v31;
      uint64_t v25 = a1;
LABEL_24:
      uint64_t result = v27(v25, v26);
      break;
    case 8:
LABEL_35:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for RGPluginModel(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v21))
      {
        uint64_t v22 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v21);
      }
      uint64_t v51 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      uint64_t v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v114((char *)a1 + v51[5], (char *)a2 + v51[5], v21);
      uint64_t v52 = v51[6];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      uint64_t v55 = *((void *)v54 + 2);
      *((void *)v53 + 1) = *((void *)v54 + 1);
      *((void *)v53 + 2) = v55;
      uint64_t v56 = v51[7];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_252D19408();
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v60(v57, v58, v59);
      v60((char *)a1 + v51[8], (char *)a2 + v51[8], v59);
      v114((char *)a1 + v51[9], (char *)a2 + v51[9], v21);
      break;
    case 2u:
      uint64_t v23 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v23))
      {
        uint64_t v24 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v23);
      }
      uint64_t v61 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      v115((char *)a1 + v61[5], (char *)a2 + v61[5], v23);
      uint64_t v62 = v61[6];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
      uint64_t v65 = *((void *)v64 + 2);
      *((void *)v63 + 1) = *((void *)v64 + 1);
      *((void *)v63 + 2) = v65;
      uint64_t v66 = v61[7];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      uint64_t v69 = sub_252D19408();
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
      swift_bridgeObjectRetain();
      v70(v67, v68, v69);
      v70((char *)a1 + v61[8], (char *)a2 + v61[8], v69);
      uint64_t v116 = v61;
      uint64_t v71 = v61[9];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      int v74 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v73, 1, (uint64_t)v74))
      {
        uint64_t v75 = sub_252AC3A24(&qword_269C41AA0);
        memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        unint64_t v76 = v116;
      }
      else
      {
        uint64_t v112 = v23;
        v70(v72, v73, v69);
        uint64_t v77 = v74[5];
        uint64_t v78 = &v72[v77];
        uint64_t v79 = &v73[v77];
        uint64_t v111 = v70;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v73[v77], 1, v69))
        {
          uint64_t v80 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          v70(v78, v79, v69);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v69);
        }
        uint64_t v81 = v74[6];
        uint64_t v82 = &v72[v81];
        uint64_t v83 = &v73[v81];
        uint64_t v84 = sub_252D19C68();
        unint64_t v76 = v116;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v83, 1, v84))
        {
          uint64_t v85 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v82, 0, 1, v84);
        }
        uint64_t v86 = v74[7];
        uint64_t v87 = &v72[v86];
        uint64_t v88 = &v73[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)uint64_t v87 = *(void *)v88;
        *((void *)v87 + 1) = v89;
        uint64_t v90 = v74[8];
        uint64_t v91 = &v72[v90];
        uint64_t v92 = &v73[v90];
        unint64_t v93 = *((void *)v92 + 1);
        swift_bridgeObjectRetain();
        if (v93 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
        }
        else
        {
          uint64_t v94 = *(void *)v92;
          sub_252AC5A54(v94, v93);
          *(void *)uint64_t v91 = v94;
          *((void *)v91 + 1) = v93;
        }
        uint64_t v23 = v112;
        uint64_t v70 = v111;
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v72, 0, 1, (uint64_t)v74);
      }
      uint64_t v95 = v76[10];
      uint64_t v96 = (char *)a1 + v95;
      uint64_t v97 = (char *)a2 + v95;
      uint64_t v98 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v97, 1, v98))
      {
        uint64_t v99 = sub_252AC3A24(&qword_269C41AA8);
        memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        uint64_t v113 = v23;
        v70(v96, v97, v69);
        uint64_t v100 = *(int *)(v98 + 20);
        uint64_t v101 = v70;
        uint64_t v102 = &v96[v100];
        uint64_t v103 = &v97[v100];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v97[v100], 1, v69))
        {
          uint64_t v104 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          v101(v102, v103, v69);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v102, 0, 1, v69);
        }
        uint64_t v105 = *(int *)(v98 + 24);
        uint64_t v106 = &v96[v105];
        uint64_t v107 = &v97[v105];
        uint64_t v108 = sub_252D19C68();
        unint64_t v76 = v116;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v106, 0, 1, v108);
        }
        uint64_t v23 = v113;
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v96, 0, 1, v98);
      }
      v115((char *)a1 + v76[11], (char *)a2 + v76[11], v23);
      break;
    case 3u:
      uint64_t v25 = sub_252D19588();
      uint64_t v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16);
      v26(a1, a2, v25);
      uint64_t v27 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v26((uint64_t *)((char *)a1 + v27[5]), (uint64_t *)((char *)a2 + v27[5]), v25);
      uint64_t v28 = v27[6];
      unint64_t v29 = (char *)a1 + v28;
      unint64_t v30 = (char *)a2 + v28;
      *(_DWORD *)unint64_t v29 = *(_DWORD *)v30;
      uint64_t v31 = *((void *)v30 + 2);
      *((void *)v29 + 1) = *((void *)v30 + 1);
      *((void *)v29 + 2) = v31;
      *(uint64_t *)((char *)a1 + v27[7]) = *(uint64_t *)((char *)a2 + v27[7]);
      *(uint64_t *)((char *)a1 + v27[8]) = *(uint64_t *)((char *)a2 + v27[8]);
      uint64_t v32 = v27[9];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26((uint64_t *)v33, (uint64_t *)v34, v25);
      break;
    case 4u:
      uint64_t v36 = *a2;
      unint64_t v35 = a2[1];
      sub_252AC5A54(v36, v35);
      *a1 = v36;
      a1[1] = v35;
      break;
    case 5u:
      uint64_t v37 = *a2;
      unint64_t v38 = a2[1];
      sub_252AC5A54(*a2, v38);
      *a1 = v37;
      a1[1] = v38;
      uint64_t v39 = a2[3];
      a1[2] = a2[2];
      a1[3] = v39;
      uint64_t v40 = a2[4];
      uint64_t v41 = a2[5];
      a1[4] = v40;
      a1[5] = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 6u:
      uint64_t v42 = *a2;
      unint64_t v43 = a2[1];
      sub_252AC5A54(*a2, v43);
      *a1 = v42;
      a1[1] = v43;
      uint64_t v44 = a2[3];
      a1[2] = a2[2];
      a1[3] = v44;
      uint64_t v45 = a2 + 4;
      unint64_t v46 = a2[5];
      swift_bridgeObjectRetain();
      if (v46 >> 60 == 15)
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v45;
      }
      else
      {
        uint64_t v49 = *v45;
        sub_252AC5A54(*v45, v46);
        a1[4] = v49;
        a1[5] = v46;
      }
      uint64_t v50 = a2[7];
      a1[6] = a2[6];
      a1[7] = v50;
      swift_bridgeObjectRetain();
      break;
    case 7u:
      uint64_t v47 = sub_252D19C58();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
      break;
    case 8u:
      uint64_t v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_252D19588();
      int v5 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v6 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v5((uint64_t *)((char *)a1 + v6[5]), (uint64_t *)((char *)a2 + v6[5]), v4);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      uint64_t v10 = *((void *)v9 + 2);
      *((void *)v8 + 1) = *((void *)v9 + 1);
      *((void *)v8 + 2) = v10;
      *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
      *(uint64_t *)((char *)a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
      uint64_t v11 = v6[9];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5((uint64_t *)v12, (uint64_t *)v13, v4);
      uint64_t v14 = v6[10];
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = v6[11];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      swift_bridgeObjectRetain();
      v5((uint64_t *)v19, (uint64_t *)v20, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for RGPluginModel(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_252B80134((uint64_t)a1, (void (*)(void))type metadata accessor for RGPluginModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v19))
        {
          uint64_t v20 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v19);
        }
        uint64_t v42 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        v102((char *)a1 + v42[5], (char *)a2 + v42[5], v19);
        uint64_t v43 = v42[6];
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        *((void *)v44 + 2) = *((void *)v45 + 2);
        uint64_t v46 = v42[7];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        uint64_t v49 = sub_252D19408();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v47, v48, v49);
        v50((char *)a1 + v42[8], (char *)a2 + v42[8], v49);
        v102((char *)a1 + v42[9], (char *)a2 + v42[9], v19);
        break;
      case 2u:
        uint64_t v21 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v21))
        {
          uint64_t v22 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v21);
        }
        uint64_t v51 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        v103((char *)a1 + v51[5], (char *)a2 + v51[5], v21);
        uint64_t v52 = v51[6];
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        *((void *)v53 + 1) = *((void *)v54 + 1);
        *((void *)v53 + 2) = *((void *)v54 + 2);
        uint64_t v55 = v51[7];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = sub_252D19408();
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v56, v57, v58);
        v59((char *)a1 + v51[8], (char *)a2 + v51[8], v58);
        uint64_t v104 = v51;
        uint64_t v60 = v51[9];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v62, 1, (uint64_t)v63))
        {
          uint64_t v64 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          uint64_t v65 = v104;
        }
        else
        {
          uint64_t v100 = v21;
          v59(v61, v62, v58);
          uint64_t v66 = v63[5];
          uint64_t v67 = &v61[v66];
          uint64_t v68 = &v62[v66];
          uint64_t v99 = v59;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v62[v66], 1, v58))
          {
            uint64_t v69 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            v59(v67, v68, v58);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v67, 0, 1, v58);
          }
          uint64_t v65 = v104;
          uint64_t v70 = v63[6];
          uint64_t v71 = &v61[v70];
          uint64_t v72 = &v62[v70];
          uint64_t v73 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v72, 1, v73))
          {
            uint64_t v74 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v71, 0, 1, v73);
          }
          uint64_t v75 = v63[7];
          unint64_t v76 = &v61[v75];
          uint64_t v77 = &v62[v75];
          *(void *)unint64_t v76 = *(void *)v77;
          *((void *)v76 + 1) = *((void *)v77 + 1);
          uint64_t v78 = v63[8];
          uint64_t v79 = &v61[v78];
          uint64_t v80 = &v62[v78];
          unint64_t v81 = *((void *)v80 + 1);
          swift_bridgeObjectRetain();
          if (v81 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
          }
          else
          {
            uint64_t v82 = *(void *)v80;
            sub_252AC5A54(v82, v81);
            *(void *)uint64_t v79 = v82;
            *((void *)v79 + 1) = v81;
          }
          uint64_t v21 = v100;
          uint64_t v59 = v99;
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
        }
        uint64_t v83 = v65[10];
        uint64_t v84 = (char *)a1 + v83;
        uint64_t v85 = (char *)a2 + v83;
        uint64_t v86 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
          v103((char *)a1 + v65[11], (char *)a2 + v65[11], v21);
        }
        else
        {
          uint64_t v101 = v21;
          v59(v84, v85, v58);
          uint64_t v88 = *(int *)(v86 + 20);
          uint64_t v89 = v59;
          uint64_t v90 = &v84[v88];
          uint64_t v91 = &v85[v88];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v85[v88], 1, v58))
          {
            uint64_t v92 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            v89(v90, v91, v58);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v90, 0, 1, v58);
          }
          uint64_t v93 = *(int *)(v86 + 24);
          uint64_t v94 = &v84[v93];
          uint64_t v95 = &v85[v93];
          uint64_t v96 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v95, 1, v96))
          {
            uint64_t v97 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v94, 0, 1, v96);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v84, 0, 1, v86);
          v103((char *)a1 + v104[11], (char *)a2 + v104[11], v101);
        }
        break;
      case 3u:
        uint64_t v23 = sub_252D19588();
        uint64_t v24 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        uint64_t v25 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v24((uint64_t *)((char *)a1 + v25[5]), (uint64_t *)((char *)a2 + v25[5]), v23);
        uint64_t v26 = v25[6];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
        *((void *)v27 + 1) = *((void *)v28 + 1);
        *((void *)v27 + 2) = *((void *)v28 + 2);
        *(uint64_t *)((char *)a1 + v25[7]) = *(uint64_t *)((char *)a2 + v25[7]);
        *(uint64_t *)((char *)a1 + v25[8]) = *(uint64_t *)((char *)a2 + v25[8]);
        uint64_t v29 = v25[9];
        unint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24((uint64_t *)v30, (uint64_t *)v31, v23);
        break;
      case 4u:
        uint64_t v33 = *a2;
        unint64_t v32 = a2[1];
        sub_252AC5A54(v33, v32);
        *a1 = v33;
        a1[1] = v32;
        break;
      case 5u:
        uint64_t v34 = *a2;
        unint64_t v35 = a2[1];
        sub_252AC5A54(*a2, v35);
        *a1 = v34;
        a1[1] = v35;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v36 = *a2;
        unint64_t v37 = a2[1];
        sub_252AC5A54(*a2, v37);
        *a1 = v36;
        a1[1] = v37;
        a1[2] = a2[2];
        a1[3] = a2[3];
        unint64_t v38 = a2 + 4;
        unint64_t v39 = a2[5];
        swift_bridgeObjectRetain();
        if (v39 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v38;
        }
        else
        {
          uint64_t v41 = *v38;
          sub_252AC5A54(*v38, v39);
          a1[4] = v41;
          a1[5] = v39;
        }
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v40 = sub_252D19C58();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        break;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_252D19588();
        int v5 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16);
        v5(a1, a2, v4);
        uint64_t v6 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v5((uint64_t *)((char *)a1 + v6[5]), (uint64_t *)((char *)a2 + v6[5]), v4);
        uint64_t v7 = v6[6];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
        *((void *)v8 + 1) = *((void *)v9 + 1);
        *((void *)v8 + 2) = *((void *)v9 + 2);
        *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
        *(uint64_t *)((char *)a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
        uint64_t v10 = v6[9];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v5((uint64_t *)v11, (uint64_t *)v12, v4);
        uint64_t v13 = v6[10];
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        uint64_t v16 = v6[11];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        swift_bridgeObjectRetain();
        v5((uint64_t *)v17, (uint64_t *)v18, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for RGPluginModel(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_252D19588();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for RGDisambiguationModel(0);
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      uint64_t v9 = v8[6];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
      *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
      v7(&a1[v8[9]], &a2[v8[9]], v6);
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      v7(&a1[v8[11]], &a2[v8[11]], v6);
      goto LABEL_32;
    case 1u:
      uint64_t v12 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v12))
      {
        uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v12);
      }
      uint64_t v23 = (int *)type metadata accessor for RGActionConfirmationModel(0);
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v79(&a1[v23[5]], &a2[v23[5]], v12);
      uint64_t v24 = v23[6];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((void *)v25 + 2) = *((void *)v26 + 2);
      uint64_t v27 = v23[7];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = sub_252D19408();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
      v31(v28, v29, v30);
      v31(&a1[v23[8]], &a2[v23[8]], v30);
      v79(&a1[v23[9]], &a2[v23[9]], v12);
      goto LABEL_32;
    case 2u:
      uint64_t v14 = sub_252D19588();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v14))
      {
        uint64_t v15 = sub_252AC3A24(&qword_26B2320E8);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v14);
      }
      unint64_t v32 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v78(&a1[v32[5]], &a2[v32[5]], v14);
      uint64_t v33 = v32[6];
      uint64_t v34 = &a1[v33];
      unint64_t v35 = &a2[v33];
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *((void *)v34 + 2) = *((void *)v35 + 2);
      uint64_t v36 = v32[7];
      unint64_t v37 = &a1[v36];
      unint64_t v38 = &a2[v36];
      uint64_t v39 = sub_252D19408();
      uint64_t v40 = (void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32);
      uint64_t v41 = v37;
      uint64_t v42 = *v40;
      (*v40)(v41, v38, v39);
      v42(&a1[v32[8]], &a2[v32[8]], v39);
      uint64_t v80 = v32;
      uint64_t v43 = v32[9];
      uint64_t v44 = &a1[v43];
      uint64_t v45 = &a2[v43];
      uint64_t v46 = (int *)type metadata accessor for RGDisplayRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v45, 1, (uint64_t)v46))
      {
        uint64_t v47 = sub_252AC3A24(&qword_269C41AA0);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v76 = v14;
        v42(v44, v45, v39);
        uint64_t v48 = v46[5];
        uint64_t v49 = &v44[v48];
        uint64_t v50 = v42;
        uint64_t v51 = &v45[v48];
        uint64_t v75 = v50;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v45[v48], 1, v39))
        {
          uint64_t v52 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v49, v51, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          v50(v49, v51, v39);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v49, 0, 1, v39);
        }
        uint64_t v53 = v46[6];
        uint64_t v54 = &v44[v53];
        uint64_t v55 = &v45[v53];
        uint64_t v56 = sub_252D19C68();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
        {
          uint64_t v57 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
        }
        *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
        *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
        uint64_t v14 = v76;
        uint64_t v42 = v75;
      }
      uint64_t v58 = v80;
      uint64_t v59 = v80[10];
      uint64_t v60 = &a1[v59];
      uint64_t v61 = &a2[v59];
      uint64_t v62 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_252AC3A24(&qword_269C41AA8);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        uint64_t v77 = v14;
        v42(v60, v61, v39);
        uint64_t v64 = *(int *)(v62 + 20);
        uint64_t v65 = &v60[v64];
        uint64_t v66 = v42;
        uint64_t v67 = &v61[v64];
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v61[v64], 1, v39))
        {
          uint64_t v68 = sub_252AC3A24(&qword_269C41A90);
          memcpy(v65, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v66(v65, v67, v39);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v65, 0, 1, v39);
        }
        uint64_t v69 = *(int *)(v62 + 24);
        uint64_t v70 = &v60[v69];
        uint64_t v71 = &v61[v69];
        uint64_t v72 = sub_252D19C68();
        uint64_t v58 = v80;
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v71, 1, v72))
        {
          uint64_t v73 = sub_252AC3A24(&qword_269C41A98);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v70, 0, 1, v72);
        }
        uint64_t v14 = v77;
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v60, 0, 1, v62);
      }
      v78(&a1[v58[11]], &a2[v58[11]], v14);
      goto LABEL_32;
    case 3u:
      uint64_t v16 = sub_252D19588();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v17(a1, a2, v16);
      uint64_t v18 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
      v17(&a1[v18[5]], &a2[v18[5]], v16);
      uint64_t v19 = v18[6];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((void *)v20 + 2) = *((void *)v21 + 2);
      *(void *)&a1[v18[7]] = *(void *)&a2[v18[7]];
      *(void *)&a1[v18[8]] = *(void *)&a2[v18[8]];
      v17(&a1[v18[9]], &a2[v18[9]], v16);
      goto LABEL_32;
    case 7u:
      uint64_t v22 = sub_252D19C58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
LABEL_32:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for RGPluginModel(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_252B80134((uint64_t)a1, (void (*)(void))type metadata accessor for RGPluginModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_252D19588();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for RGDisambiguationModel(0);
        v7(&a1[v8[5]], &a2[v8[5]], v6);
        uint64_t v9 = v8[6];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((void *)v10 + 2) = *((void *)v11 + 2);
        *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
        *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
        v7(&a1[v8[9]], &a2[v8[9]], v6);
        *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
        v7(&a1[v8[11]], &a2[v8[11]], v6);
        goto LABEL_32;
      case 1u:
        uint64_t v12 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v12))
        {
          uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v12);
        }
        uint64_t v23 = (int *)type metadata accessor for RGActionConfirmationModel(0);
        uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
        v79(&a1[v23[5]], &a2[v23[5]], v12);
        uint64_t v24 = v23[6];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
        *((void *)v25 + 2) = *((void *)v26 + 2);
        uint64_t v27 = v23[7];
        uint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        uint64_t v30 = sub_252D19408();
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
        v31(v28, v29, v30);
        v31(&a1[v23[8]], &a2[v23[8]], v30);
        v79(&a1[v23[9]], &a2[v23[9]], v12);
        goto LABEL_32;
      case 2u:
        uint64_t v14 = sub_252D19588();
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v14))
        {
          uint64_t v15 = sub_252AC3A24(&qword_26B2320E8);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v14);
        }
        unint64_t v32 = (int *)type metadata accessor for RGParameterConfirmationModel(0);
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
        v78(&a1[v32[5]], &a2[v32[5]], v14);
        uint64_t v33 = v32[6];
        uint64_t v34 = &a1[v33];
        unint64_t v35 = &a2[v33];
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        *((void *)v34 + 2) = *((void *)v35 + 2);
        uint64_t v36 = v32[7];
        unint64_t v37 = &a1[v36];
        unint64_t v38 = &a2[v36];
        uint64_t v39 = sub_252D19408();
        uint64_t v40 = (void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32);
        uint64_t v41 = v37;
        uint64_t v42 = *v40;
        (*v40)(v41, v38, v39);
        v42(&a1[v32[8]], &a2[v32[8]], v39);
        uint64_t v80 = v32;
        uint64_t v43 = v32[9];
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        uint64_t v46 = (int *)type metadata accessor for RGDisplayRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v45, 1, (uint64_t)v46))
        {
          uint64_t v47 = sub_252AC3A24(&qword_269C41AA0);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
          uint64_t v48 = v80;
        }
        else
        {
          uint64_t v76 = v14;
          v42(v44, v45, v39);
          uint64_t v49 = v46[5];
          uint64_t v50 = &v44[v49];
          uint64_t v51 = v42;
          uint64_t v52 = &v45[v49];
          uint64_t v75 = v51;
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v45[v49], 1, v39))
          {
            uint64_t v53 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v50, v52, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            v51(v50, v52, v39);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v50, 0, 1, v39);
          }
          uint64_t v54 = v46[6];
          uint64_t v55 = &v44[v54];
          uint64_t v56 = &v45[v54];
          uint64_t v57 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v56, 1, v57))
          {
            uint64_t v58 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v55, 0, 1, v57);
          }
          uint64_t v48 = v80;
          uint64_t v14 = v76;
          uint64_t v42 = v75;
          *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
          *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
        }
        uint64_t v59 = v48[10];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        uint64_t v62 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
        if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_252AC3A24(&qword_269C41AA8);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
          v78(&a1[v48[11]], &a2[v48[11]], v14);
        }
        else
        {
          uint64_t v77 = v14;
          v42(v60, v61, v39);
          uint64_t v64 = *(int *)(v62 + 20);
          uint64_t v65 = &v60[v64];
          uint64_t v66 = v42;
          uint64_t v67 = &v61[v64];
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v61[v64], 1, v39))
          {
            uint64_t v68 = sub_252AC3A24(&qword_269C41A90);
            memcpy(v65, v67, *(void *)(*(void *)(v68 - 8) + 64));
          }
          else
          {
            v66(v65, v67, v39);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v65, 0, 1, v39);
          }
          uint64_t v69 = *(int *)(v62 + 24);
          uint64_t v70 = &v60[v69];
          uint64_t v71 = &v61[v69];
          uint64_t v72 = sub_252D19C68();
          if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v71, 1, v72))
          {
            uint64_t v73 = sub_252AC3A24(&qword_269C41A98);
            memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
            _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v70, 0, 1, v72);
          }
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v60, 0, 1, v62);
          v78(&a1[v80[11]], &a2[v80[11]], v77);
        }
        goto LABEL_32;
      case 3u:
        uint64_t v16 = sub_252D19588();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
        v17(a1, a2, v16);
        uint64_t v18 = (int *)type metadata accessor for RGToolDisambiguationModel(0);
        v17(&a1[v18[5]], &a2[v18[5]], v16);
        uint64_t v19 = v18[6];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        *((void *)v20 + 2) = *((void *)v21 + 2);
        *(void *)&a1[v18[7]] = *(void *)&a2[v18[7]];
        *(void *)&a1[v18[8]] = *(void *)&a2[v18[8]];
        v17(&a1[v18[9]], &a2[v18[9]], v16);
        goto LABEL_32;
      case 7u:
        uint64_t v22 = sub_252D19C58();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_252B8E6AC()
{
  uint64_t result = type metadata accessor for RGDisambiguationModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for RGActionConfirmationModel(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for RGParameterConfirmationModel(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for RGToolDisambiguationModel(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = sub_252D19C58();
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RGDisplayRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B8E874);
}

uint64_t storeEnumTagSinglePayload for RGDisplayRepresentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B8E88C);
}

void sub_252B8E894(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_252D1A178();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for RGDisambiguationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[a3[5]], (char *)a2 + a3[5], v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    uint64_t v13 = *((void *)v12 + 2);
    *((void *)v11 + 1) = *((void *)v12 + 1);
    *((void *)v11 + 2) = v13;
    *(void *)&a1[v10] = *(uint64_t *)((char *)a2 + v10);
    uint64_t v14 = a3[9];
    *(void *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = &a1[v17];
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *(void *)uint64_t v19 = *v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = &a1[v18];
    uint64_t v23 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    v8(v22, v23, v7);
  }
  return a1;
}

uint64_t destroy for RGDisambiguationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7(a1 + a2[9], v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[11];

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t initializeWithCopy for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  uint64_t v12 = *(void *)(v11 + 16);
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  *(void *)(v10 + 16) = v12;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  uint64_t v16 = a3[10];
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a1 + v17;
  uint64_t v22 = a2 + v17;
  swift_bridgeObjectRetain();
  v7(v21, v22, v6);
  return a1;
}

uint64_t assignWithCopy for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  return a1;
}

uint64_t initializeWithTake for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  v7(a1 + v12, a2 + v12, v6);
  uint64_t v13 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t assignWithTake for RGDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = v12;
  *(void *)(v9 + 16) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B8F090);
}

uint64_t storeEnumTagSinglePayload for RGDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B8F0A8);
}

uint64_t sub_252B8F0AC()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s16IntelligenceFlow23RGDisplayRepresentationVwCP_0(uint64_t *a1, uint64_t *a2)
{
  sub_252B4C01C();
  int v8 = *(_DWORD *)(v7 + 80);
  if ((v8 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v8 + 16) & ~(unint64_t)v8));
    swift_retain();
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v10 = sub_252D19408();
    sub_252AEA304();
    uint64_t v12 = *(void (**)(void))(v11 + 16);
    sub_252B98498();
    v12();
    if (sub_252B98334())
    {
      uint64_t v13 = sub_252AC3A24(&qword_269C41A90);
      sub_252AEA368(v13);
      memcpy(v2, v3, *(void *)(v14 + 64));
    }
    else
    {
      sub_252B98498();
      v12();
      sub_252B986B8();
    }
    sub_252B981F8();
    if (sub_252B98464())
    {
      uint64_t v16 = sub_252AC3A24(&qword_269C41A98);
      uint64_t v17 = sub_252AEA368(v16);
      sub_252B4C900(v17, v19, *(void *)(v18 + 64));
    }
    else
    {
      sub_252B0014C();
      uint64_t v20 = sub_252B984A4();
      v21(v20);
      sub_252B98288();
    }
    sub_252B985E8();
    sub_252B98D78();
    if (!v23 & v22)
    {
      *(_OWORD *)uint64_t v10 = *v9;
    }
    else
    {
      uint64_t v24 = *(void *)v9;
      sub_252AC5A54(v24, (unint64_t)a2);
      *(void *)uint64_t v10 = v24;
      *(void *)(v10 + 8) = a2;
    }
  }
  return a1;
}

uint64_t _s16IntelligenceFlow23RGDisplayRepresentationVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19408();
  sub_252AEA304();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + a2[5];
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_252D19C68();
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v8, 1, v9))
  {
    sub_252B0014C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(a1 + a2[8]);
  unint64_t v13 = v12[1];
  if (v13 >> 60 != 15)
  {
    uint64_t v14 = *v12;
    return sub_252AC5C14(v14, v13);
  }
  return result;
}

uint64_t _s16IntelligenceFlow23RGDisplayRepresentationVwcp_0()
{
  uint64_t v5 = sub_252B983D0();
  sub_252AEA304();
  uint64_t v7 = *(void (**)(void))(v6 + 16);
  sub_252B98498();
  v7();
  if (sub_252B98334())
  {
    uint64_t v8 = sub_252AC3A24(&qword_269C41A90);
    sub_252AEA368(v8);
    memcpy(v3, v4, *(void *)(v9 + 64));
  }
  else
  {
    sub_252B98498();
    v7();
    sub_252B986B8();
  }
  sub_252B981F8();
  if (sub_252B98464())
  {
    uint64_t v10 = sub_252AC3A24(&qword_269C41A98);
    uint64_t v11 = sub_252AEA368(v10);
    sub_252B4C900(v11, v13, *(void *)(v12 + 64));
  }
  else
  {
    sub_252B0014C();
    uint64_t v14 = sub_252B984A4();
    v15(v14);
    sub_252B98288();
  }
  sub_252B985E8();
  sub_252B98D78();
  if (!v17 & v16)
  {
    *(_OWORD *)uint64_t v5 = *v2;
  }
  else
  {
    uint64_t v18 = *(void *)v2;
    sub_252AC5A54(v18, v1);
    *(void *)uint64_t v5 = v18;
    *(void *)(v5 + 8) = v1;
  }
  return v0;
}

uint64_t _s16IntelligenceFlow23RGDisplayRepresentationVwca_0()
{
  sub_252B983D0();
  sub_252AEDBD0();
  uint64_t v7 = *(void (**)(uint64_t))(v6 + 24);
  uint64_t v8 = sub_252B98E64();
  v7(v8);
  int v9 = sub_252B98530();
  if (v5)
  {
    if (!v9)
    {
      sub_252B983FC();
      v10();
      sub_252B4C200();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    uint64_t v11 = sub_252B98CD0();
    v12(v11);
LABEL_6:
    uint64_t v13 = sub_252AC3A24(&qword_269C41A90);
    sub_252AEA368(v13);
    memcpy(v3, v4, *(void *)(v14 + 64));
    goto LABEL_7;
  }
  uint64_t v41 = sub_252B98D2C();
  v7(v41);
LABEL_7:
  uint64_t v15 = sub_252B981F8();
  int v16 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v3, 1, v15);
  int v17 = sub_252B98464();
  if (v16)
  {
    if (!v17)
    {
      sub_252B0014C();
      uint64_t v18 = sub_252B984A4();
      v19(v18);
      sub_252B98288();
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  sub_252B4C01C();
  if (v20)
  {
    uint64_t v21 = sub_252B98C48();
    v22(v21);
LABEL_12:
    uint64_t v23 = sub_252AC3A24(&qword_269C41A98);
    uint64_t v24 = sub_252AEA368(v23);
    sub_252B4C900(v24, v26, *(void *)(v25 + 64));
    goto LABEL_13;
  }
  uint64_t v42 = sub_252B98D18();
  v43(v42);
LABEL_13:
  uint64_t v27 = *(int *)(v2 + 28);
  uint64_t v28 = (void *)(v0 + v27);
  uint64_t v29 = (void *)(v1 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(int *)(v2 + 32);
  uint64_t v31 = (uint64_t *)(v0 + v30);
  unint64_t v32 = (uint64_t *)(v1 + v30);
  unint64_t v33 = *(void *)(v1 + v30 + 8);
  if (*(void *)(v0 + v30 + 8) >> 60 != 15)
  {
    sub_252B98D78();
    if (!(!v35 & v34))
    {
      uint64_t v37 = *v32;
      sub_252AC5A54(v37, v33);
      uint64_t v38 = *v31;
      unint64_t v39 = v31[1];
      *uint64_t v31 = v37;
      v31[1] = v33;
      sub_252AC5C14(v38, v39);
      return v0;
    }
    sub_252B5AA44((uint64_t)v31);
LABEL_19:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    return v0;
  }
  sub_252B98D78();
  if (!v35 & v34) {
    goto LABEL_19;
  }
  uint64_t v36 = *v32;
  sub_252AC5A54(v36, v33);
  *uint64_t v31 = v36;
  v31[1] = v33;
  return v0;
}

char *_s16IntelligenceFlow23RGDisplayRepresentationVwtk_0()
{
  uint64_t v5 = sub_252B983D0();
  sub_252AEA304();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v7(v0, v1, v5);
  if (sub_252B98334())
  {
    uint64_t v8 = sub_252AC3A24(&qword_269C41A90);
    sub_252AEA368(v8);
    memcpy(v3, v4, *(void *)(v9 + 64));
  }
  else
  {
    v7(v3, v4, v5);
    sub_252B986B8();
  }
  sub_252B981F8();
  if (sub_252B98464())
  {
    uint64_t v10 = sub_252AC3A24(&qword_269C41A98);
    uint64_t v11 = sub_252AEA368(v10);
    sub_252B4C900(v11, v13, *(void *)(v12 + 64));
  }
  else
  {
    sub_252B0014C();
    sub_252B4C1CC();
    v14();
    sub_252B98288();
  }
  uint64_t v15 = *(int *)(v2 + 32);
  *(_OWORD *)&v0[*(int *)(v2 + 28)] = *(_OWORD *)&v1[*(int *)(v2 + 28)];
  *(_OWORD *)&v0[v15] = *(_OWORD *)&v1[v15];
  return v0;
}

uint64_t _s16IntelligenceFlow23RGDisplayRepresentationVwta_0()
{
  uint64_t v6 = sub_252B983D0();
  sub_252AEDBD0();
  uint64_t v8 = v7;
  uint64_t v10 = *(void (**)(uint64_t))(v9 + 40);
  uint64_t v11 = sub_252B98E64();
  v10(v11);
  int v12 = sub_252B98530();
  if (v5)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v3, v4, v6);
      sub_252B4C200();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    uint64_t v13 = sub_252B98CD0();
    v14(v13);
LABEL_6:
    uint64_t v15 = sub_252AC3A24(&qword_269C41A90);
    sub_252AEA368(v15);
    memcpy(v3, v4, *(void *)(v16 + 64));
    goto LABEL_7;
  }
  uint64_t v40 = sub_252B98D2C();
  v10(v40);
LABEL_7:
  uint64_t v17 = sub_252B981F8();
  int v18 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v3, 1, v17);
  int v19 = sub_252B98464();
  if (v18)
  {
    if (!v19)
    {
      sub_252B0014C();
      sub_252B4C1CC();
      v20();
      sub_252B98288();
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  sub_252B4C01C();
  if (v21)
  {
    uint64_t v22 = sub_252B98C48();
    v23(v22);
LABEL_12:
    uint64_t v24 = sub_252AC3A24(&qword_269C41A98);
    uint64_t v25 = sub_252AEA368(v24);
    sub_252B4C900(v25, v27, *(void *)(v26 + 64));
    goto LABEL_13;
  }
  uint64_t v41 = sub_252B98D18();
  v42(v41);
LABEL_13:
  uint64_t v28 = *(int *)(v2 + 28);
  uint64_t v29 = (void *)(v0 + v28);
  uint64_t v30 = (uint64_t *)(v1 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(v2 + 32);
  char v34 = (uint64_t *)(v0 + v33);
  char v35 = (uint64_t *)(v1 + v33);
  unint64_t v36 = *(void *)(v0 + v33 + 8);
  if (v36 >> 60 != 15)
  {
    unint64_t v37 = v35[1];
    if (v37 >> 60 != 15)
    {
      uint64_t v38 = *v34;
      *char v34 = *v35;
      v34[1] = v37;
      sub_252AC5C14(v38, v36);
      return v0;
    }
    sub_252B5AA44((uint64_t)v34);
  }
  *(_OWORD *)char v34 = *(_OWORD *)v35;
  return v0;
}

uint64_t getEnumTagSinglePayload for RGDisambiguationModel.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B8FAC0);
}

uint64_t sub_252B8FAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252B982DC();
  sub_252B4C01C();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A90);
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      sub_252B98BCC();
    }
    else
    {
      sub_252AC3A24(&qword_269C41A98);
      sub_252B4C01C();
      if (*(_DWORD *)(v12 + 84) != v3) {
        return sub_252B4C388(*(void *)(v4 + *(int *)(a3 + 28) + 8));
      }
      uint64_t v8 = v11;
      uint64_t v10 = *(int *)(a3 + 24);
    }
    uint64_t v7 = v4 + v10;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for RGDisambiguationModel.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B8FBA8);
}

void sub_252B8FBAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252B982DC();
  sub_252B4C01C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A90);
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      sub_252B98AAC();
    }
    else
    {
      sub_252AC3A24(&qword_269C41A98);
      sub_252B4C01C();
      if (*(_DWORD *)(v10 + 84) != a3)
      {
        *(void *)(v5 + *(int *)(a4 + 28) + 8) = v4;
        return;
      }
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v11, v12, v13, v14);
}

void sub_252B8FC80()
{
  sub_252D19408();
  if (v0 <= 0x3F)
  {
    sub_252B8E894(319, &qword_26B234108, MEMORY[0x263F06D40]);
    if (v1 <= 0x3F)
    {
      sub_252B8E894(319, &qword_26B234890, MEMORY[0x263F80B90]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RGActionConfirmationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      uint64_t v9 = *(void *)(v7 - 8);
    }
    else
    {
      uint64_t v9 = *(void *)(v7 - 8);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    int v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v21((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    uint64_t v15 = *((void *)v14 + 2);
    *((void *)v13 + 1) = *((void *)v14 + 1);
    *((void *)v13 + 2) = v15;
    uint64_t v16 = (char *)a1 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = sub_252D19408();
    int v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    v19((char *)a1 + a3[8], (char *)a2 + a3[8], v18);
    v21((char *)a1 + a3[9], (char *)a2 + a3[9], v7);
  }
  return a1;
}

uint64_t destroy for RGActionConfirmationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19588();
  int v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4);
  uint64_t v6 = *(void *)(v4 - 8);
  if (!v5) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  }
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v12(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_252D19408();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[8], v8);
  uint64_t v10 = a1 + a2[9];

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v4);
}

char *initializeWithCopy for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    uint64_t v8 = *(void *)(v6 - 8);
  }
  else
  {
    uint64_t v8 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  int v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v19(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  uint64_t v13 = *((void *)v12 + 2);
  *((void *)v11 + 1) = *((void *)v12 + 1);
  *((void *)v11 + 2) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = sub_252D19408();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  v17(&a1[a3[8]], &a2[a3[8]], v16);
  v19(&a1[a3[9]], &a2[a3[9]], v6);
  return a1;
}

char *assignWithCopy for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void *)(v6 - 8);
    }
    else
    {
      uint64_t v10 = *(void *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v22(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  *((void *)v13 + 2) = *((void *)v14 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_252D19408();
  int v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24);
  int v20 = a3;
  v19(v16, v17, v18);
  v19(&a1[v20[8]], &a2[v20[8]], v18);
  v22(&a1[v20[9]], &a2[v20[9]], v6);
  return a1;
}

char *initializeWithTake for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    uint64_t v8 = *(void *)(v6 - 8);
  }
  else
  {
    uint64_t v8 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((void *)v11 + 2) = *((void *)v12 + 2);
  uint64_t v13 = &a1[v10];
  uint64_t v14 = &a2[v10];
  uint64_t v15 = sub_252D19408();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[a3[8]], &a2[a3[8]], v15);
  v18(&a1[a3[9]], &a2[a3[9]], v6);
  return a1;
}

char *assignWithTake for RGActionConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void *)(v6 - 8);
    }
    else
    {
      uint64_t v10 = *(void *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v24(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v15 = *((void *)v14 + 2);
  *((void *)v13 + 1) = v16;
  *((void *)v13 + 2) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  int v19 = &a2[v17];
  uint64_t v20 = sub_252D19408();
  int v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40);
  uint64_t v22 = a3;
  v21(v18, v19, v20);
  v21(&a1[v22[8]], &a2[v22[8]], v20);
  v24(&a1[v22[9]], &a2[v22[9]], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGActionConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B90A58);
}

uint64_t sub_252B90A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252AC3A24(&qword_26B2320E8);
  sub_252B4C01C();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252D19588();
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      sub_252B98BCC();
    }
    else
    {
      if (a2 == 2147483646) {
        return sub_252B4C388(*(void *)(a1 + *(int *)(a3 + 24) + 16));
      }
      uint64_t v8 = sub_252D19408();
      uint64_t v10 = *(int *)(a3 + 28);
    }
    uint64_t v7 = a1 + v10;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RGActionConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B90B3C);
}

void sub_252B90B3C()
{
  sub_252B98CA8();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252B4C01C();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252D19588();
    sub_252B4C01C();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_252B98AAC();
    }
    else
    {
      if (v0 == 2147483646)
      {
        sub_252B98C70();
        return;
      }
      sub_252D19408();
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, v4, v5, v6);
}

void sub_252B90BF8()
{
  sub_252B8E894(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    sub_252D19588();
    if (v1 <= 0x3F)
    {
      sub_252D19408();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RGParameterConfirmationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      uint64_t v9 = *(void *)(v7 - 8);
    }
    else
    {
      uint64_t v9 = *(void *)(v7 - 8);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v64 = v7;
    v11((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = sub_252D19408();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    v20((char *)a1 + a3[8], (char *)a2 + a3[8], v19);
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = (int *)type metadata accessor for RGDisplayRepresentation(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, (uint64_t)v24))
    {
      uint64_t v25 = sub_252AC3A24(&qword_269C41AA0);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v62 = v11;
      v20(v22, v23, v19);
      uint64_t v26 = v24[5];
      __dst = &v22[v26];
      uint64_t v27 = v20;
      uint64_t v28 = &v23[v26];
      uint64_t v60 = v27;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v23[v26], 1, v19))
      {
        uint64_t v29 = sub_252AC3A24(&qword_269C41A90);
        memcpy(__dst, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v27(__dst, v28, v19);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v19);
      }
      uint64_t v30 = v24[6];
      uint64_t v31 = &v22[v30];
      uint64_t v32 = &v23[v30];
      uint64_t v33 = sub_252D19C68();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v32, 1, v33))
      {
        uint64_t v34 = sub_252AC3A24(&qword_269C41A98);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v31, 0, 1, v33);
      }
      uint64_t v35 = v24[7];
      unint64_t v36 = &v22[v35];
      unint64_t v37 = &v23[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)unint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      uint64_t v39 = v24[8];
      uint64_t v40 = &v22[v39];
      uint64_t v41 = &v23[v39];
      unint64_t v42 = *((void *)v41 + 1);
      swift_bridgeObjectRetain();
      if (v42 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      }
      else
      {
        uint64_t v43 = *(void *)v41;
        sub_252AC5A54(v43, v42);
        *(void *)uint64_t v40 = v43;
        *((void *)v40 + 1) = v42;
      }
      uint64_t v11 = v62;
      uint64_t v20 = v60;
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
    }
    uint64_t v44 = a3[10];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_252AC3A24(&qword_269C41AA8);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v63 = v11;
      v20(v45, v46, v19);
      uint64_t v49 = *(int *)(v47 + 20);
      uint64_t v50 = &v45[v49];
      uint64_t v61 = v20;
      uint64_t v51 = &v46[v49];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v46[v49], 1, v19))
      {
        uint64_t v52 = sub_252AC3A24(&qword_269C41A90);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        v61(v50, v51, v19);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v50, 0, 1, v19);
      }
      uint64_t v53 = *(int *)(v47 + 24);
      uint64_t v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      uint64_t v56 = sub_252D19C68();
      uint64_t v11 = v63;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_252AC3A24(&qword_269C41A98);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v54, 0, 1, v56);
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v45, 0, 1, v47);
    }
    v11((char *)a1 + a3[11], (char *)a2 + a3[11], v64);
  }
  return a1;
}

uint64_t destroy for RGParameterConfirmationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_252D19588();
  int v5 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v4);
  uint64_t v6 = *(void *)(v4 - 8);
  if (!v5) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  }
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v24(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_252D19408();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[8], v8);
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, 1, (uint64_t)v11))
  {
    v9(v10, v8);
    uint64_t v12 = v10 + v11[5];
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v12, 1, v8)) {
      v9(v12, v8);
    }
    uint64_t v13 = v10 + v11[6];
    uint64_t v14 = sub_252D19C68();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = (uint64_t *)(v10 + v11[8]);
    unint64_t v16 = v15[1];
    if (v16 >> 60 != 15) {
      sub_252AC5C14(*v15, v16);
    }
  }
  uint64_t v17 = a1 + a2[10];
  uint64_t v18 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v17, 1, v18))
  {
    v9(v17, v8);
    uint64_t v19 = v17 + *(int *)(v18 + 20);
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v19, 1, v8)) {
      v9(v19, v8);
    }
    uint64_t v20 = v17 + *(int *)(v18 + 24);
    uint64_t v21 = sub_252D19C68();
    if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    }
  }
  uint64_t v22 = a1 + a2[11];

  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v22, v4);
}

char *initializeWithCopy for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    uint64_t v8 = *(void *)(v6 - 8);
  }
  else
  {
    uint64_t v8 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v9(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = *((void *)v13 + 2);
  *((void *)v12 + 1) = *((void *)v13 + 1);
  *((void *)v12 + 2) = v14;
  uint64_t v15 = &a1[v11];
  unint64_t v16 = &a2[v11];
  uint64_t v17 = sub_252D19408();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  v18(&a1[a3[8]], &a2[a3[8]], v17);
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v21, 1, (uint64_t)v22))
  {
    uint64_t v23 = sub_252AC3A24(&qword_269C41AA0);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v61 = v9;
    v18(v20, v21, v17);
    uint64_t v24 = v22[5];
    __dst = &v20[v24];
    uint64_t v25 = v18;
    uint64_t v26 = &v21[v24];
    uint64_t v58 = v6;
    uint64_t v59 = v25;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v21[v24], 1, v17))
    {
      uint64_t v27 = sub_252AC3A24(&qword_269C41A90);
      memcpy(__dst, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v25(__dst, v26, v17);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v17);
    }
    uint64_t v28 = v22[6];
    uint64_t v29 = &v20[v28];
    uint64_t v30 = &v21[v28];
    uint64_t v31 = sub_252D19C68();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_252AC3A24(&qword_269C41A98);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v33 = v22[7];
    uint64_t v34 = &v20[v33];
    uint64_t v35 = &v21[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v22[8];
    uint64_t v38 = &v20[v37];
    uint64_t v39 = &v21[v37];
    unint64_t v40 = *((void *)v39 + 1);
    swift_bridgeObjectRetain();
    uint64_t v6 = v58;
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    }
    else
    {
      uint64_t v41 = *(void *)v39;
      sub_252AC5A54(v41, v40);
      *(void *)uint64_t v38 = v41;
      *((void *)v38 + 1) = v40;
    }
    uint64_t v9 = v61;
    uint64_t v18 = v59;
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
  }
  uint64_t v42 = a3[10];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_252AC3A24(&qword_269C41AA8);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v62 = v9;
    v18(v43, v44, v17);
    uint64_t v47 = *(int *)(v45 + 20);
    uint64_t v48 = &v43[v47];
    uint64_t v60 = v18;
    uint64_t v49 = &v44[v47];
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v44[v47], 1, v17))
    {
      uint64_t v50 = sub_252AC3A24(&qword_269C41A90);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      v60(v48, v49, v17);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v48, 0, 1, v17);
    }
    uint64_t v51 = *(int *)(v45 + 24);
    uint64_t v52 = &v43[v51];
    uint64_t v53 = &v44[v51];
    uint64_t v54 = sub_252D19C68();
    uint64_t v9 = v62;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54))
    {
      uint64_t v55 = sub_252AC3A24(&qword_269C41A98);
      memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v52, 0, 1, v54);
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v43, 0, 1, v45);
  }
  v9(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

char *assignWithCopy for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void *)(v6 - 8);
    }
    else
    {
      uint64_t v10 = *(void *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(a1, a2, v6);
    }
  }
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v12(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  *((void *)v14 + 2) = *((void *)v15 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_252D19408();
  uint64_t v116 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v116 + 24);
  v20(v17, v18, v19);
  uint64_t v108 = v20;
  v20(&a1[a3[8]], &a2[a3[8]], v19);
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  LODWORD(v17) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v22, 1, (uint64_t)v24);
  int v25 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, (uint64_t)v24);
  if (v17)
  {
    if (!v25)
    {
      uint64_t v109 = v12;
      uint64_t v112 = v6;
      uint64_t v105 = a3;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
      v26(v22, v23, v19);
      uint64_t v27 = v24[5];
      uint64_t v28 = &v22[v27];
      uint64_t v29 = &v23[v27];
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v23[v27], 1, v19))
      {
        uint64_t v30 = sub_252AC3A24(&qword_269C41A90);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        v26(v28, v29, v19);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v28, 0, 1, v19);
      }
      uint64_t v37 = v24[6];
      uint64_t v38 = &v22[v37];
      uint64_t v39 = &v23[v37];
      uint64_t v40 = sub_252D19C68();
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_252AC3A24(&qword_269C41A98);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v42 = v24[7];
      uint64_t v43 = &v22[v42];
      uint64_t v44 = &v23[v42];
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = *((void *)v44 + 1);
      uint64_t v45 = v24[8];
      uint64_t v46 = &v22[v45];
      uint64_t v47 = &v23[v45];
      unint64_t v48 = *((void *)v47 + 1);
      swift_bridgeObjectRetain();
      a3 = v105;
      uint64_t v6 = v112;
      if (v48 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      }
      else
      {
        uint64_t v49 = *(void *)v47;
        sub_252AC5A54(v49, v48);
        *(void *)uint64_t v46 = v49;
        *((void *)v46 + 1) = v48;
      }
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
      goto LABEL_45;
    }
LABEL_14:
    uint64_t v31 = sub_252AC3A24(&qword_269C41AA0);
    memcpy(v22, v23, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_46;
  }
  if (v25)
  {
    sub_252B80134((uint64_t)v22, (void (*)(void))type metadata accessor for RGDisplayRepresentation);
    goto LABEL_14;
  }
  uint64_t v113 = v6;
  uint64_t v106 = a3;
  v108(v22, v23, v19);
  uint64_t v32 = v24[5];
  uint64_t v33 = &v22[v32];
  uint64_t v34 = &v23[v32];
  int v35 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v22[v32], 1, v19);
  int v36 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v34, 1, v19);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v33, v34, v19);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v33, 0, 1, v19);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v33, v19);
LABEL_28:
    uint64_t v50 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v33, v34, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_29;
  }
  v108(v33, v34, v19);
LABEL_29:
  uint64_t v51 = v24[6];
  uint64_t v52 = (uint64_t)&v22[v51];
  uint64_t v53 = &v23[v51];
  uint64_t v54 = sub_252D19C68();
  uint64_t v104 = v52;
  LODWORD(v52) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v52, 1, v54);
  int v55 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v53, 1, v54);
  uint64_t v109 = v12;
  if (v52)
  {
    if (v55)
    {
      size_t v56 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A98) - 8) + 64);
      uint64_t v57 = (void *)v104;
LABEL_34:
      memcpy(v57, v53, v56);
      goto LABEL_38;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v104, v53, v54);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v104, 0, 1, v54);
  }
  else
  {
    uint64_t v58 = *(void *)(v54 - 8);
    if (v55)
    {
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v104, v54);
      size_t v56 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A98) - 8) + 64);
      uint64_t v57 = (void *)v104;
      goto LABEL_34;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 24))(v104, v53, v54);
  }
LABEL_38:
  uint64_t v59 = v24[7];
  uint64_t v60 = &v22[v59];
  uint64_t v61 = &v23[v59];
  *(void *)uint64_t v60 = *(void *)v61;
  *((void *)v60 + 1) = *((void *)v61 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = v24[8];
  uint64_t v63 = (uint64_t *)&v22[v62];
  uint64_t v64 = (uint64_t *)&v23[v62];
  unint64_t v65 = *(void *)&v23[v62 + 8];
  a3 = v106;
  uint64_t v6 = v113;
  if ((unint64_t)v63[1] >> 60 != 15)
  {
    if (v65 >> 60 != 15)
    {
      uint64_t v67 = *v64;
      sub_252AC5A54(*v64, v65);
      uint64_t v68 = *v63;
      unint64_t v69 = v63[1];
      uint64_t *v63 = v67;
      v63[1] = v65;
      sub_252AC5C14(v68, v69);
      goto LABEL_45;
    }
    sub_252B5AA44((uint64_t)v63);
    goto LABEL_43;
  }
  if (v65 >> 60 == 15)
  {
LABEL_43:
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    goto LABEL_45;
  }
  uint64_t v66 = *v64;
  sub_252AC5A54(*v64, v65);
  uint64_t *v63 = v66;
  v63[1] = v65;
LABEL_45:
  uint64_t v12 = v109;
LABEL_46:
  uint64_t v70 = a3[10];
  uint64_t v71 = (uint64_t)&a1[v70];
  uint64_t v72 = (uint64_t)&a2[v70];
  uint64_t v73 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  int v74 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v71, 1, v73);
  int v75 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v72, 1, v73);
  if (v74)
  {
    if (!v75)
    {
      uint64_t v110 = v12;
      uint64_t v114 = v6;
      uint64_t v107 = a3;
      uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16);
      v76(v71, v72, v19);
      uint64_t v77 = *(int *)(v73 + 20);
      uint64_t v78 = (void *)(v71 + v77);
      uint64_t v79 = (const void *)(v72 + v77);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v72 + v77, 1, v19))
      {
        uint64_t v80 = sub_252AC3A24(&qword_269C41A90);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        v76((uint64_t)v78, (uint64_t)v79, v19);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v78, 0, 1, v19);
      }
      uint64_t v90 = *(int *)(v73 + 24);
      uint64_t v91 = (void *)(v71 + v90);
      uint64_t v92 = (const void *)(v72 + v90);
      uint64_t v93 = sub_252D19C68();
      a3 = v107;
      uint64_t v12 = v110;
      uint64_t v6 = v114;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v92, 1, v93))
      {
        uint64_t v94 = sub_252AC3A24(&qword_269C41A98);
        memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v91, 0, 1, v93);
      }
      uint64_t v95 = v71;
      goto LABEL_62;
    }
    goto LABEL_52;
  }
  if (v75)
  {
    sub_252B80134(v71, (void (*)(void))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
LABEL_52:
    size_t v81 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41AA8) - 8) + 64);
    uint64_t v82 = (void *)v71;
    uint64_t v83 = (const void *)v72;
    goto LABEL_53;
  }
  uint64_t v111 = v12;
  uint64_t v115 = v6;
  uint64_t v84 = a3;
  v108((char *)v71, (char *)v72, v19);
  uint64_t v85 = *(int *)(v73 + 20);
  uint64_t v86 = (char *)(v71 + v85);
  uint64_t v87 = (char *)(v72 + v85);
  int v88 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v71 + v85, 1, v19);
  int v89 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v87, 1, v19);
  if (!v88)
  {
    if (!v89)
    {
      v108(v86, v87, v19);
      goto LABEL_67;
    }
    (*(void (**)(char *, uint64_t))(v116 + 8))(v86, v19);
    goto LABEL_66;
  }
  if (v89)
  {
LABEL_66:
    uint64_t v97 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v86, v87, *(void *)(*(void *)(v97 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v86, v87, v19);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v86, 0, 1, v19);
LABEL_67:
  uint64_t v98 = *(int *)(v73 + 24);
  uint64_t v99 = v71 + v98;
  uint64_t v100 = v72 + v98;
  uint64_t v73 = sub_252D19C68();
  int v101 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v99, 1, v73);
  int v102 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v100, 1, v73);
  a3 = v84;
  uint64_t v6 = v115;
  if (v101)
  {
    uint64_t v12 = v111;
    if (!v102)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v99, v100, v73);
      uint64_t v95 = v99;
LABEL_62:
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v95, 0, 1, v73);
      goto LABEL_63;
    }
  }
  else
  {
    uint64_t v103 = *(void *)(v73 - 8);
    uint64_t v12 = v111;
    if (!v102)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 24))(v99, v100, v73);
      goto LABEL_63;
    }
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v99, v73);
  }
  size_t v81 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A98) - 8) + 64);
  uint64_t v82 = (void *)v99;
  uint64_t v83 = (const void *)v100;
LABEL_53:
  memcpy(v82, v83, v81);
LABEL_63:
  v12(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

char *initializeWithTake for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    uint64_t v8 = *(void *)(v6 - 8);
  }
  else
  {
    uint64_t v8 = *(void *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v53(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((void *)v11 + 2) = *((void *)v12 + 2);
  uint64_t v13 = &a1[v10];
  uint64_t v14 = &a2[v10];
  uint64_t v15 = sub_252D19408();
  uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  uint64_t v17 = v13;
  uint64_t v18 = *v16;
  (*v16)(v17, v14, v15);
  v18(&a1[a3[8]], &a2[a3[8]], v15);
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v21, 1, (uint64_t)v22))
  {
    uint64_t v23 = sub_252AC3A24(&qword_269C41AA0);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v51 = v6;
    v18(v20, v21, v15);
    uint64_t v24 = v22[5];
    __dst = &v20[v24];
    int v25 = v18;
    uint64_t v26 = &v21[v24];
    uint64_t v49 = v25;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v21[v24], 1, v15))
    {
      uint64_t v27 = sub_252AC3A24(&qword_269C41A90);
      memcpy(__dst, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v25(__dst, v26, v15);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dst, 0, 1, v15);
    }
    uint64_t v28 = v22[6];
    __dsta = &v20[v28];
    uint64_t v29 = &v21[v28];
    uint64_t v30 = sub_252D19C68();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_252AC3A24(&qword_269C41A98);
      memcpy(__dsta, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(__dsta, v29, v30);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)__dsta, 0, 1, v30);
    }
    *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
    *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
    uint64_t v18 = v49;
    uint64_t v6 = v51;
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v34, 1, v35))
  {
    uint64_t v36 = sub_252AC3A24(&qword_269C41AA8);
    memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v52 = v6;
    v18(v33, v34, v15);
    uint64_t v37 = *(int *)(v35 + 20);
    uint64_t v38 = &v33[v37];
    uint64_t v50 = v18;
    uint64_t v39 = &v34[v37];
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v34[v37], 1, v15))
    {
      uint64_t v40 = sub_252AC3A24(&qword_269C41A90);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      v50(v38, v39, v15);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v38, 0, 1, v15);
    }
    uint64_t v41 = *(int *)(v35 + 24);
    uint64_t v42 = &v33[v41];
    uint64_t v43 = &v34[v41];
    uint64_t v44 = sub_252D19C68();
    uint64_t v6 = v52;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_252AC3A24(&qword_269C41A98);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v42, 0, 1, v44);
    }
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v33, 0, 1, v35);
  }
  v53(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

char *assignWithTake for RGParameterConfirmationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void *)(v6 - 8);
    }
    else
    {
      uint64_t v10 = *(void *)(v6 - 8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v6 - 8);
    if (v8)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(a1, v6);
      uint64_t v11 = sub_252AC3A24(&qword_26B2320E8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(a1, a2, v6);
    }
  }
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v110(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v15 = *((void *)v14 + 2);
  *((void *)v13 + 1) = v16;
  *((void *)v13 + 2) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_252D19408();
  uint64_t v109 = *(void *)(v20 - 8);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v109 + 40);
  v21(v18, v19, v20);
  uint64_t v100 = v21;
  v21(&a1[a3[8]], &a2[a3[8]], v20);
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  int v25 = (int *)type metadata accessor for RGDisplayRepresentation(0);
  LODWORD(v18) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, (uint64_t)v25);
  int v26 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v24, 1, (uint64_t)v25);
  if (!v18)
  {
    if (v26)
    {
      sub_252B80134((uint64_t)v23, (void (*)(void))type metadata accessor for RGDisplayRepresentation);
      goto LABEL_14;
    }
    uint64_t v102 = v6;
    uint64_t v106 = a3;
    v100(v23, v24, v20);
    uint64_t v33 = v25[5];
    uint64_t v34 = &v23[v33];
    uint64_t v35 = &v24[v33];
    int v36 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v23[v33], 1, v20);
    int v37 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v35, 1, v20);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v34, v35, v20);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v34, 0, 1, v20);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v37)
      {
        v100(v34, v35, v20);
LABEL_26:
        uint64_t v44 = v25[6];
        uint64_t v45 = (uint64_t)&v23[v44];
        uint64_t v46 = &v24[v44];
        uint64_t v47 = sub_252D19C68();
        uint64_t v97 = v45;
        LODWORD(v45) = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v45, 1, v47);
        int v48 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v46, 1, v47);
        uint64_t v99 = a2;
        if (v45)
        {
          if (v48)
          {
            size_t v49 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A98) - 8) + 64);
            uint64_t v50 = (void *)v97;
LABEL_31:
            memcpy(v50, v46, v49);
            goto LABEL_35;
          }
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v97, v46, v47);
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v97, 0, 1, v47);
        }
        else
        {
          uint64_t v51 = *(void *)(v47 - 8);
          if (v48)
          {
            (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v97, v47);
            size_t v49 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A98) - 8) + 64);
            uint64_t v50 = (void *)v97;
            goto LABEL_31;
          }
          (*(void (**)(uint64_t, char *, uint64_t))(v51 + 40))(v97, v46, v47);
        }
LABEL_35:
        uint64_t v52 = v25[7];
        uint64_t v53 = &v23[v52];
        uint64_t v54 = &v24[v52];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        *(void *)uint64_t v53 = v56;
        *((void *)v53 + 1) = v55;
        swift_bridgeObjectRelease();
        uint64_t v57 = v25[8];
        uint64_t v58 = (uint64_t *)&v23[v57];
        uint64_t v59 = (uint64_t *)&v24[v57];
        unint64_t v60 = *(void *)&v23[v57 + 8];
        uint64_t v6 = v102;
        a3 = v106;
        if (v60 >> 60 != 15)
        {
          unint64_t v61 = v59[1];
          if (v61 >> 60 != 15)
          {
            uint64_t v62 = *v58;
            *uint64_t v58 = *v59;
            v58[1] = v61;
            sub_252AC5C14(v62, v60);
            goto LABEL_40;
          }
          sub_252B5AA44((uint64_t)v58);
        }
        *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
LABEL_40:
        a2 = v99;
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v34, v20);
    }
    uint64_t v43 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v34, v35, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_26;
  }
  if (v26)
  {
LABEL_14:
    uint64_t v32 = sub_252AC3A24(&qword_269C41AA0);
    memcpy(v23, v24, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_41;
  }
  uint64_t v101 = v6;
  uint64_t v105 = a3;
  uint64_t v98 = a2;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
  v27(v23, v24, v20);
  uint64_t v28 = v25[5];
  uint64_t v29 = &v23[v28];
  uint64_t v30 = &v24[v28];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&v24[v28], 1, v20))
  {
    uint64_t v31 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v27(v29, v30, v20);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v29, 0, 1, v20);
  }
  uint64_t v38 = v25[6];
  uint64_t v39 = &v23[v38];
  uint64_t v40 = &v24[v38];
  uint64_t v41 = sub_252D19C68();
  a2 = v98;
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v40, 1, v41))
  {
    uint64_t v42 = sub_252AC3A24(&qword_269C41A98);
    memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v39, 0, 1, v41);
  }
  *(_OWORD *)&v23[v25[7]] = *(_OWORD *)&v24[v25[7]];
  *(_OWORD *)&v23[v25[8]] = *(_OWORD *)&v24[v25[8]];
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
  uint64_t v6 = v101;
  a3 = v105;
LABEL_41:
  uint64_t v63 = a3[10];
  uint64_t v64 = (uint64_t)&a1[v63];
  uint64_t v65 = (uint64_t)&a2[v63];
  uint64_t v66 = type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation(0);
  int v67 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v64, 1, v66);
  int v68 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v65, 1, v66);
  if (v67)
  {
    if (!v68)
    {
      uint64_t v103 = v6;
      uint64_t v107 = a3;
      unint64_t v69 = a2;
      uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32);
      v70(v64, v65, v20);
      uint64_t v71 = *(int *)(v66 + 20);
      uint64_t v72 = (void *)(v64 + v71);
      uint64_t v73 = (const void *)(v65 + v71);
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v65 + v71, 1, v20))
      {
        uint64_t v74 = sub_252AC3A24(&qword_269C41A90);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        v70((uint64_t)v72, (uint64_t)v73, v20);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v72, 0, 1, v20);
      }
      uint64_t v83 = *(int *)(v66 + 24);
      uint64_t v84 = (void *)(v64 + v83);
      uint64_t v85 = (const void *)(v65 + v83);
      uint64_t v86 = sub_252D19C68();
      a2 = v69;
      uint64_t v6 = v103;
      a3 = v107;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v85, 1, v86))
      {
        uint64_t v87 = sub_252AC3A24(&qword_269C41A98);
        memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
        _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v84, 0, 1, v86);
      }
      uint64_t v88 = v64;
      goto LABEL_57;
    }
    goto LABEL_47;
  }
  if (v68)
  {
    sub_252B80134(v64, (void (*)(void))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
LABEL_47:
    size_t v75 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41AA8) - 8) + 64);
    uint64_t v76 = (void *)v64;
    uint64_t v77 = (const void *)v65;
    goto LABEL_48;
  }
  uint64_t v104 = v6;
  uint64_t v108 = a3;
  v100((char *)v64, (char *)v65, v20);
  uint64_t v78 = *(int *)(v66 + 20);
  uint64_t v79 = (char *)(v64 + v78);
  uint64_t v80 = (char *)(v65 + v78);
  int v81 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v64 + v78, 1, v20);
  int v82 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v80, 1, v20);
  if (!v81)
  {
    if (!v82)
    {
      v100(v79, v80, v20);
      goto LABEL_62;
    }
    (*(void (**)(char *, uint64_t))(v109 + 8))(v79, v20);
    goto LABEL_61;
  }
  if (v82)
  {
LABEL_61:
    uint64_t v90 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v79, v80, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_62;
  }
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v79, v80, v20);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v79, 0, 1, v20);
LABEL_62:
  uint64_t v91 = *(int *)(v66 + 24);
  uint64_t v92 = v64 + v91;
  uint64_t v93 = v65 + v91;
  uint64_t v66 = sub_252D19C68();
  int v94 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v92, 1, v66);
  int v95 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v93, 1, v66);
  uint64_t v6 = v104;
  a3 = v108;
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 32))(v92, v93, v66);
      uint64_t v88 = v92;
LABEL_57:
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v88, 0, 1, v66);
      goto LABEL_58;
    }
  }
  else
  {
    uint64_t v96 = *(void *)(v66 - 8);
    if (!v95)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 40))(v92, v93, v66);
      goto LABEL_58;
    }
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v92, v66);
  }
  size_t v75 = *(void *)(*(void *)(sub_252AC3A24(&qword_269C41A98) - 8) + 64);
  uint64_t v76 = (void *)v92;
  uint64_t v77 = (const void *)v93;
LABEL_48:
  memcpy(v76, v77, v75);
LABEL_58:
  v110(&a1[a3[11]], &a2[a3[11]], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGParameterConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B9395C);
}

uint64_t sub_252B9395C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_252AC3A24(&qword_26B2320E8);
  sub_252B4C01C();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252D19588();
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      sub_252B98BCC();
    }
    else
    {
      if (a2 == 2147483646) {
        return sub_252B4C388(*(void *)(a1 + a3[6] + 16));
      }
      sub_252D19408();
      sub_252B4C01C();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v8 = v12;
        uint64_t v10 = a3[7];
      }
      else
      {
        sub_252AC3A24(&qword_269C41AA0);
        sub_252B4C01C();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v8 = v14;
          uint64_t v10 = a3[9];
        }
        else
        {
          uint64_t v8 = sub_252AC3A24(&qword_269C41AA8);
          uint64_t v10 = a3[10];
        }
      }
    }
    uint64_t v7 = a1 + v10;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RGParameterConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B93A98);
}

void sub_252B93A98()
{
  sub_252B98CA8();
  sub_252AC3A24(&qword_26B2320E8);
  sub_252B4C01C();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252D19588();
    sub_252B4C01C();
    if (*(_DWORD *)(v2 + 84) == v0)
    {
      sub_252B98AAC();
    }
    else
    {
      if (v0 == 2147483646)
      {
        sub_252B98C70();
        return;
      }
      sub_252D19408();
      sub_252B4C01C();
      if (*(_DWORD *)(v3 + 84) != v0)
      {
        sub_252AC3A24(&qword_269C41AA0);
        sub_252B4C01C();
        if (*(_DWORD *)(v4 + 84) != v0) {
          sub_252AC3A24(&qword_269C41AA8);
        }
      }
    }
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, v6, v7, v8);
}

void sub_252B93BAC()
{
  sub_252B8E894(319, (unint64_t *)&qword_26B2320F0, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    sub_252D19588();
    if (v1 <= 0x3F)
    {
      sub_252D19408();
      if (v2 <= 0x3F)
      {
        sub_252B8E894(319, &qword_26B234730, (void (*)(uint64_t))type metadata accessor for RGDisplayRepresentation);
        if (v3 <= 0x3F)
        {
          sub_252B8E894(319, &qword_26B234870, (void (*)(uint64_t))type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RGParameterConfirmationModel.ParameterRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19408();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v9, 1, v7))
    {
      uint64_t v12 = sub_252AC3A24(&qword_269C41A90);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_252D19C68();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_252AC3A24(&qword_269C41A98);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for RGParameterConfirmationModel.ParameterRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19408();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_252D19C68();
  uint64_t result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v10(v7, v8);
  }
  return result;
}

char *initializeWithCopy for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_252D19C68();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_252AC3A24(&qword_269C41A98);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

char *assignWithCopy for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_252D19C68();
  int v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = sub_252AC3A24(&qword_269C41A98);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

char *initializeWithTake for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_252D19C68();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_252AC3A24(&qword_269C41A98);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

char *assignWithTake for RGParameterConfirmationModel.ParameterRepresentation(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_252D19C68();
  int v19 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = sub_252AC3A24(&qword_269C41A98);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGParameterConfirmationModel.ParameterRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B94944);
}

uint64_t sub_252B94944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252B982DC();
  sub_252B4C01C();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A90);
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      sub_252B98BCC();
    }
    else
    {
      uint64_t v8 = sub_252AC3A24(&qword_269C41A98);
      uint64_t v10 = *(int *)(a3 + 24);
    }
    uint64_t v7 = v4 + v10;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for RGParameterConfirmationModel.ParameterRepresentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B949F4);
}

uint64_t sub_252B949F4(uint64_t a1, uint64_t a2, int a3)
{
  sub_252B982DC();
  sub_252B4C01C();
  if (*(_DWORD *)(v4 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A90);
    sub_252B4C01C();
    if (*(_DWORD *)(v5 + 84) == a3) {
      sub_252B98AAC();
    }
    else {
      sub_252AC3A24(&qword_269C41A98);
    }
  }
  sub_252B4C2D0();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, v7, v8, v9);
}

void sub_252B94A94()
{
  sub_252D19408();
  if (v0 <= 0x3F)
  {
    sub_252B8E894(319, &qword_26B234108, MEMORY[0x263F06D40]);
    if (v1 <= 0x3F)
    {
      sub_252B8E894(319, &qword_26B234890, MEMORY[0x263F80B90]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for ArchivedViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArchivedViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchivedViewModel()
{
  return &type metadata for ArchivedViewModel;
}

uint64_t destroy for SiriSDSViewModel(uint64_t *a1)
{
  sub_252AC5C14(*a1, a1[1]);
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[5];
  if (v2 >> 60 != 15) {
    sub_252AC5C14(a1[4], v2);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SiriSDSViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a2 + 4;
  unint64_t v8 = a2[5];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_252AC5A54(v9, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v8;
  }
  uint64_t v10 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for SiriSDSViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_252AC5A54(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_252AC5C14(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v8 = a2 + 4;
  unint64_t v9 = a2[5];
  if ((unint64_t)a1[5] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_252AC5A54(*v8, a2[5]);
      uint64_t v12 = a1[4];
      unint64_t v13 = a1[5];
      a1[4] = v11;
      a1[5] = v9;
      sub_252AC5C14(v12, v13);
      goto LABEL_8;
    }
    sub_252B5AA44((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v10 = *v8;
  sub_252AC5A54(*v8, a2[5]);
  a1[4] = v10;
  a1[5] = v9;
LABEL_8:
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ParameterDisambiguation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for SiriSDSViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_252AC5C14(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  unint64_t v7 = (uint64_t *)(a2 + 32);
  unint64_t v8 = a1[5];
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = *(void *)(a2 + 40);
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = a1[4];
      a1[4] = *v7;
      a1[5] = v9;
      sub_252AC5C14(v10, v8);
      goto LABEL_6;
    }
    sub_252B5AA44((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *(_OWORD *)v7;
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriSDSViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriSDSViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSDSViewModel()
{
  return &type metadata for SiriSDSViewModel;
}

char *initializeBufferWithCopyOfBuffer for RGToolDisambiguationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19588();
    unint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[a3[5]], (char *)a2 + a3[5], v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    uint64_t v13 = *((void *)v12 + 2);
    *((void *)v11 + 1) = *((void *)v12 + 1);
    *((void *)v11 + 2) = v13;
    *(void *)&a1[v10] = *(uint64_t *)((char *)a2 + v10);
    uint64_t v14 = a3[9];
    *(void *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
  }
  return a1;
}

uint64_t destroy for RGToolDisambiguationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t initializeWithCopy for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  uint64_t v12 = *(void *)(v11 + 16);
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  *(void *)(v10 + 16) = v12;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  return a1;
}

uint64_t assignWithCopy for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t initializeWithTake for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = (long long *)(a2 + v8);
  long long v12 = *v11;
  *(void *)(v10 + 16) = *((void *)v11 + 2);
  *(_OWORD *)uint64_t v10 = v12;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t assignWithTake for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_252D19588();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = v12;
  *(void *)(v9 + 16) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B9562C);
}

uint64_t sub_252B95630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252D19588();
  sub_252B4C01C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RGToolDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B956D4);
}

void sub_252B956D8(uint64_t a1, int a2, int a3, uint64_t a4)
{
  sub_252D19588();
  sub_252B4C01C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_252B4C2D0();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t sub_252B95760()
{
  uint64_t result = sub_252D19588();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for RGToolDisambiguationModel.Item(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D19408();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2 + v9, 1, v7))
    {
      uint64_t v12 = sub_252AC3A24(&qword_269C41A90);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *(void *)uint64_t v15 = *v16;
    *((void *)v15 + 1) = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RGToolDisambiguationModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D19408();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for RGToolDisambiguationModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_252D19408();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_269C41A90);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RGToolDisambiguationModel.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B95FBC);
}

uint64_t sub_252B95FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_252B982DC();
  sub_252B4C01C();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_252B4C998();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A90);
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) != v3) {
      return sub_252B4C388(*(void *)(v4 + *(int *)(a3 + 24) + 8));
    }
    sub_252B98BCC();
    uint64_t v7 = v4 + v10;
  }

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for RGToolDisambiguationModel.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B96074);
}

void sub_252B96074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_252B982DC();
  sub_252B4C01C();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_252B4C788();
  }
  else
  {
    sub_252AC3A24(&qword_269C41A90);
    sub_252B4C01C();
    if (*(_DWORD *)(v9 + 84) != a3)
    {
      *(void *)(v5 + *(int *)(a4 + 24) + 8) = v4;
      return;
    }
    sub_252B98AAC();
  }
  sub_252B4C2D0();

  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v10, v11, v12, v13);
}

void sub_252B9611C()
{
  sub_252D19408();
  if (v0 <= 0x3F)
  {
    sub_252B8E894(319, &qword_26B234108, MEMORY[0x263F06D40]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for RGControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252B9621C);
}

uint64_t sub_252B9621C(uint64_t a1, uint64_t a2)
{
  sub_252D19C58();
  uint64_t v3 = sub_252B4C998();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v3, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RGControlModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252B96274);
}

uint64_t sub_252B96274()
{
  sub_252D19C58();
  sub_252B4C2D0();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, v1, v2, v3);
}

ValueMetadata *type metadata accessor for RGControlModel.CodingKeys()
{
  return &type metadata for RGControlModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGToolDisambiguationModel.CodingKeys()
{
  return &type metadata for RGToolDisambiguationModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGToolDisambiguationModel.Item.CodingKeys()
{
  return &type metadata for RGToolDisambiguationModel.Item.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SiriSDSViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B963CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSDSViewModel.CodingKeys()
{
  return &type metadata for SiriSDSViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ArchivedViewModel.CodingKeys()
{
  return &type metadata for ArchivedViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGParameterConfirmationModel.CodingKeys()
{
  return &type metadata for RGParameterConfirmationModel.CodingKeys;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO22PlannerReturnedRawPlanV6SourceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow25RGToolDisambiguationModelV4ItemV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B9656CLL);
      case 4:
        uint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_252B98C24(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys()
{
  return &type metadata for RGParameterConfirmationModel.ParameterRepresentation.CodingKeys;
}

uint64_t _s16IntelligenceFlow25RGToolDisambiguationModelV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 6);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 6);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 6);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow25RGToolDisambiguationModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B966E4);
      case 4:
        uint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_252B98C24(result, a2 + 5);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGActionConfirmationModel.CodingKeys()
{
  return &type metadata for RGActionConfirmationModel.CodingKeys;
}

uint64_t _s16IntelligenceFlow21PermissionRequirementOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 8);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 8);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 8);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow28RGParameterConfirmationModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B9685CLL);
      case 4:
        uint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_252B98C24(result, a2 + 7);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGDisambiguationModel.CodingKeys()
{
  return &type metadata for RGDisambiguationModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGDisambiguationModel.Item.CodingKeys()
{
  return &type metadata for RGDisambiguationModel.Item.CodingKeys;
}

uint64_t _s16IntelligenceFlow21RGDisambiguationModelV4ItemV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_252B989F4(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_252B989F4((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_252B989F4((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_252B989F4(v8);
}

unsigned char *_s16IntelligenceFlow21RGDisambiguationModelV4ItemV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_252B98C2C((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_252B98C14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B969ECLL);
      case 4:
        uint64_t result = (unsigned char *)sub_252B98C1C((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_252B98C24(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGDisplayRepresentation.CodingKeys()
{
  return &type metadata for RGDisplayRepresentation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RGPluginModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RGPluginModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B96B78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RGPluginModel.CodingKeys()
{
  return &type metadata for RGPluginModel.CodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.DisambiguationModelCodingKeys()
{
  return &type metadata for RGPluginModel.DisambiguationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ActionConfirmationModelCodingKeys()
{
  return &type metadata for RGPluginModel.ActionConfirmationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ParameterConfirmationModelCodingKeys()
{
  return &type metadata for RGPluginModel.ParameterConfirmationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ToolDisambiguationModelCodingKeys()
{
  return &type metadata for RGPluginModel.ToolDisambiguationModelCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.CardCodingKeys()
{
  return &type metadata for RGPluginModel.CardCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ArchivedViewCodingKeys()
{
  return &type metadata for RGPluginModel.ArchivedViewCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.SiriSDSViewCodingKeys()
{
  return &type metadata for RGPluginModel.SiriSDSViewCodingKeys;
}

ValueMetadata *type metadata accessor for RGPluginModel.ControlCodingKeys()
{
  return &type metadata for RGPluginModel.ControlCodingKeys;
}

unsigned char *_s16IntelligenceFlow14RGControlModelV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252B96CCCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RGPluginModel.SimulateInAppResponseCodingKeys()
{
  return &type metadata for RGPluginModel.SimulateInAppResponseCodingKeys;
}

unint64_t sub_252B96D08()
{
  unint64_t result = qword_269C43BD8;
  if (!qword_269C43BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43BD8);
  }
  return result;
}

unint64_t sub_252B96D58()
{
  unint64_t result = qword_269C43BE0;
  if (!qword_269C43BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43BE0);
  }
  return result;
}

unint64_t sub_252B96DA8()
{
  unint64_t result = qword_269C43BE8;
  if (!qword_269C43BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43BE8);
  }
  return result;
}

unint64_t sub_252B96DF8()
{
  unint64_t result = qword_269C43BF0;
  if (!qword_269C43BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43BF0);
  }
  return result;
}

unint64_t sub_252B96E48()
{
  unint64_t result = qword_269C43BF8;
  if (!qword_269C43BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43BF8);
  }
  return result;
}

unint64_t sub_252B96E98()
{
  unint64_t result = qword_269C43C00;
  if (!qword_269C43C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C00);
  }
  return result;
}

unint64_t sub_252B96EE8()
{
  unint64_t result = qword_269C43C08;
  if (!qword_269C43C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C08);
  }
  return result;
}

unint64_t sub_252B96F38()
{
  unint64_t result = qword_269C43C10;
  if (!qword_269C43C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C10);
  }
  return result;
}

unint64_t sub_252B96F88()
{
  unint64_t result = qword_269C43C18;
  if (!qword_269C43C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C18);
  }
  return result;
}

unint64_t sub_252B96FD8()
{
  unint64_t result = qword_269C43C20;
  if (!qword_269C43C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C20);
  }
  return result;
}

unint64_t sub_252B97028()
{
  unint64_t result = qword_269C43C28;
  if (!qword_269C43C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C28);
  }
  return result;
}

unint64_t sub_252B97078()
{
  unint64_t result = qword_269C43C30;
  if (!qword_269C43C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C30);
  }
  return result;
}

unint64_t sub_252B970C8()
{
  unint64_t result = qword_269C43C38;
  if (!qword_269C43C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C38);
  }
  return result;
}

unint64_t sub_252B97118()
{
  unint64_t result = qword_269C43C40;
  if (!qword_269C43C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C40);
  }
  return result;
}

unint64_t sub_252B97168()
{
  unint64_t result = qword_269C43C48;
  if (!qword_269C43C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C48);
  }
  return result;
}

unint64_t sub_252B971B8()
{
  unint64_t result = qword_269C43C50;
  if (!qword_269C43C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C50);
  }
  return result;
}

unint64_t sub_252B97208()
{
  unint64_t result = qword_269C43C58;
  if (!qword_269C43C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C58);
  }
  return result;
}

unint64_t sub_252B97258()
{
  unint64_t result = qword_269C43C60;
  if (!qword_269C43C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C60);
  }
  return result;
}

unint64_t sub_252B972A8()
{
  unint64_t result = qword_269C43C68;
  if (!qword_269C43C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C68);
  }
  return result;
}

unint64_t sub_252B972F8()
{
  unint64_t result = qword_269C43C70;
  if (!qword_269C43C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C70);
  }
  return result;
}

unint64_t sub_252B97348()
{
  unint64_t result = qword_269C43C78;
  if (!qword_269C43C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C78);
  }
  return result;
}

unint64_t sub_252B97398()
{
  unint64_t result = qword_269C43C80;
  if (!qword_269C43C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C80);
  }
  return result;
}

unint64_t sub_252B973E8()
{
  unint64_t result = qword_269C43C88;
  if (!qword_269C43C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C88);
  }
  return result;
}

unint64_t sub_252B97438()
{
  unint64_t result = qword_269C43C90;
  if (!qword_269C43C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C90);
  }
  return result;
}

unint64_t sub_252B97488()
{
  unint64_t result = qword_269C43C98;
  if (!qword_269C43C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43C98);
  }
  return result;
}

unint64_t sub_252B974D8()
{
  unint64_t result = qword_269C43CA0;
  if (!qword_269C43CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CA0);
  }
  return result;
}

unint64_t sub_252B97528()
{
  unint64_t result = qword_269C43CA8;
  if (!qword_269C43CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CA8);
  }
  return result;
}

unint64_t sub_252B97578()
{
  unint64_t result = qword_269C43CB0;
  if (!qword_269C43CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CB0);
  }
  return result;
}

unint64_t sub_252B975C8()
{
  unint64_t result = qword_269C43CB8;
  if (!qword_269C43CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CB8);
  }
  return result;
}

unint64_t sub_252B97618()
{
  unint64_t result = qword_269C43CC0;
  if (!qword_269C43CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CC0);
  }
  return result;
}

unint64_t sub_252B97668()
{
  unint64_t result = qword_269C43CC8;
  if (!qword_269C43CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CC8);
  }
  return result;
}

unint64_t sub_252B976B8()
{
  unint64_t result = qword_269C43CD0;
  if (!qword_269C43CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CD0);
  }
  return result;
}

unint64_t sub_252B97708()
{
  unint64_t result = qword_269C43CD8;
  if (!qword_269C43CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CD8);
  }
  return result;
}

unint64_t sub_252B97758()
{
  unint64_t result = qword_269C43CE0;
  if (!qword_269C43CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CE0);
  }
  return result;
}

unint64_t sub_252B977A8()
{
  unint64_t result = qword_269C43CE8;
  if (!qword_269C43CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CE8);
  }
  return result;
}

unint64_t sub_252B977F8()
{
  unint64_t result = qword_269C43CF0;
  if (!qword_269C43CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CF0);
  }
  return result;
}

unint64_t sub_252B97848()
{
  unint64_t result = qword_269C43CF8;
  if (!qword_269C43CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43CF8);
  }
  return result;
}

unint64_t sub_252B97898()
{
  unint64_t result = qword_269C43D00;
  if (!qword_269C43D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D00);
  }
  return result;
}

unint64_t sub_252B978E8()
{
  unint64_t result = qword_269C43D08;
  if (!qword_269C43D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D08);
  }
  return result;
}

unint64_t sub_252B97938()
{
  unint64_t result = qword_269C43D10;
  if (!qword_269C43D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D10);
  }
  return result;
}

unint64_t sub_252B97988()
{
  unint64_t result = qword_269C43D18;
  if (!qword_269C43D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D18);
  }
  return result;
}

unint64_t sub_252B979D8()
{
  unint64_t result = qword_269C43D20;
  if (!qword_269C43D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D20);
  }
  return result;
}

unint64_t sub_252B97A28()
{
  unint64_t result = qword_269C43D28;
  if (!qword_269C43D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D28);
  }
  return result;
}

unint64_t sub_252B97A78()
{
  unint64_t result = qword_269C43D30;
  if (!qword_269C43D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D30);
  }
  return result;
}

unint64_t sub_252B97AC8()
{
  unint64_t result = qword_269C43D38;
  if (!qword_269C43D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D38);
  }
  return result;
}

unint64_t sub_252B97B18()
{
  unint64_t result = qword_269C43D40;
  if (!qword_269C43D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D40);
  }
  return result;
}

unint64_t sub_252B97B68()
{
  unint64_t result = qword_269C43D48;
  if (!qword_269C43D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D48);
  }
  return result;
}

unint64_t sub_252B97BB8()
{
  unint64_t result = qword_269C43D50;
  if (!qword_269C43D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D50);
  }
  return result;
}

unint64_t sub_252B97C08()
{
  unint64_t result = qword_269C43D58;
  if (!qword_269C43D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D58);
  }
  return result;
}

unint64_t sub_252B97C58()
{
  unint64_t result = qword_269C43D60;
  if (!qword_269C43D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D60);
  }
  return result;
}

unint64_t sub_252B97CA8()
{
  unint64_t result = qword_269C43D68;
  if (!qword_269C43D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D68);
  }
  return result;
}

unint64_t sub_252B97CF8()
{
  unint64_t result = qword_269C43D70;
  if (!qword_269C43D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D70);
  }
  return result;
}

unint64_t sub_252B97D48()
{
  unint64_t result = qword_269C43D78;
  if (!qword_269C43D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D78);
  }
  return result;
}

unint64_t sub_252B97D98()
{
  unint64_t result = qword_269C43D80;
  if (!qword_269C43D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D80);
  }
  return result;
}

unint64_t sub_252B97DE8()
{
  unint64_t result = qword_269C43D88;
  if (!qword_269C43D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D88);
  }
  return result;
}

unint64_t sub_252B97E38()
{
  unint64_t result = qword_269C43D90;
  if (!qword_269C43D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D90);
  }
  return result;
}

unint64_t sub_252B97E88()
{
  unint64_t result = qword_269C43D98;
  if (!qword_269C43D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43D98);
  }
  return result;
}

unint64_t sub_252B97ED8()
{
  unint64_t result = qword_269C43DA0;
  if (!qword_269C43DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DA0);
  }
  return result;
}

unint64_t sub_252B97F28()
{
  unint64_t result = qword_269C43DA8;
  if (!qword_269C43DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DA8);
  }
  return result;
}

unint64_t sub_252B97F78()
{
  unint64_t result = qword_269C43DB0;
  if (!qword_269C43DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DB0);
  }
  return result;
}

unint64_t sub_252B97FC8()
{
  unint64_t result = qword_269C43DB8;
  if (!qword_269C43DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DB8);
  }
  return result;
}

unint64_t sub_252B98018()
{
  unint64_t result = qword_269C43DC0;
  if (!qword_269C43DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DC0);
  }
  return result;
}

unint64_t sub_252B98068()
{
  unint64_t result = qword_269C43DC8;
  if (!qword_269C43DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DC8);
  }
  return result;
}

uint64_t sub_252B980C8()
{
  return sub_252D1A3E8();
}

uint64_t sub_252B980EC()
{
  return sub_252D1A578();
}

uint64_t sub_252B98110()
{
  return v0;
}

uint64_t sub_252B98128@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return sub_252D1A578();
}

void *sub_252B98154()
{
  return sub_252AC3A68(v0, v0[3]);
}

uint64_t sub_252B98178()
{
  return v0;
}

uint64_t sub_252B98190()
{
  return v0;
}

uint64_t sub_252B981A8()
{
  return sub_252D1A4D8();
}

unint64_t sub_252B981D0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 - 104) = *(_DWORD *)a1;
  *(_OWORD *)(v1 - 96) = *(_OWORD *)(a1 + 8);
  *(unsigned char *)(v1 - 65) = 2;
  return sub_252B67274();
}

uint64_t sub_252B981F8()
{
  return sub_252D19C68();
}

uint64_t sub_252B98218()
{
  return v0;
}

uint64_t sub_252B98230()
{
  return sub_252D1A578();
}

uint64_t sub_252B98248(uint64_t a1)
{
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
  return sub_252B8A4FC(v2, v1);
}

uint64_t sub_252B98288()
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 0, 1, v1);
}

uint64_t sub_252B982A8()
{
  return sub_252D1A578();
}

uint64_t sub_252B982C0()
{
  return v0;
}

uint64_t sub_252B982DC()
{
  return sub_252D19408();
}

uint64_t sub_252B982F8()
{
  *(unsigned char *)(v0 - 66) = 1;
  return sub_252D1A518();
}

uint64_t sub_252B98334()
{
  uint64_t v4 = *(int *)(v1 + 20);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0 + v4, 1, v2);
}

uint64_t sub_252B9835C()
{
  return 0;
}

uint64_t sub_252B98378()
{
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  *(_DWORD *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_252B983A4()
{
  return v0 + *(int *)(v1 + 36);
}

uint64_t sub_252B983D0()
{
  return sub_252D19408();
}

uint64_t sub_252B9840C()
{
  return sub_252D1A498();
}

uint64_t sub_252B98430()
{
  *(unsigned char *)(v0 - 96) = 1;
  return sub_252D1A438();
}

uint64_t sub_252B98464()
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0, 1, v1);
}

uint64_t sub_252B984A4()
{
  return v0;
}

uint64_t sub_252B984BC()
{
  return sub_252D1A498();
}

uint64_t sub_252B984E0()
{
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  *(_DWORD *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_252B98508()
{
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  *(_DWORD *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_252B98530()
{
  uint64_t v4 = *(int *)(v2 + 20);
  uint64_t v5 = v1 + v4;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v0 + v4, 1, v3);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v5, 1, v3);
}

void sub_252B9857C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_252B98588()
{
  return sub_252D1A438();
}

uint64_t sub_252B985B8()
{
  return sub_252D1A498();
}

uint64_t sub_252B985E8()
{
  uint64_t v4 = *(int *)(v2 + 28);
  uint64_t v5 = (void *)(v0 + v4);
  unsigned int v6 = (void *)(v1 + v4);
  uint64_t v7 = v6[1];
  void *v5 = *v6;
  v5[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_252B98618()
{
  return sub_252D19588();
}

uint64_t sub_252B98648()
{
  return sub_252D19588();
}

uint64_t sub_252B98674()
{
  return sub_252D1A578();
}

uint64_t sub_252B98690()
{
  return sub_252D1A518();
}

uint64_t sub_252B986B8()
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 0, 1, v0);
}

uint64_t sub_252B986F8()
{
  return sub_252D1A518();
}

uint64_t sub_252B98724()
{
  return sub_252D1A498();
}

uint64_t sub_252B98780()
{
  return type metadata accessor for RGDisambiguationModel(0);
}

uint64_t sub_252B987A8()
{
  return v0;
}

uint64_t sub_252B987E0()
{
  return sub_252D19588();
}

void sub_252B987F8()
{
  uint64_t v2 = v0[2];
  *(void *)(v1 - 120) = v0[3];
  *(void *)(v1 - 112) = v2;
  uint64_t v3 = v0[4];
  *(void *)(v1 - 136) = v0[5];
  *(void *)(v1 - 128) = v3;
}

void sub_252B98820(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252B9883C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252B98858(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_252B98874(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_252B98890()
{
  return sub_252D19408();
}

uint64_t sub_252B988B8()
{
  *(void *)(v1 - 120) = v0;
  return sub_252D1A718();
}

void sub_252B988E0(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
}

uint64_t sub_252B98934()
{
  return sub_252D1A4D8();
}

uint64_t sub_252B98958()
{
  return sub_252D1A498();
}

void sub_252B98970()
{
  *(unsigned char *)(v0 - 65) = 4;
}

uint64_t sub_252B9897C()
{
  return sub_252D19408();
}

uint64_t sub_252B989A0()
{
  *(unsigned char *)(v0 - 96) = 3;
  return sub_252D1A408();
}

uint64_t sub_252B989C4()
{
  return sub_252D1A438();
}

void sub_252B989E8()
{
  *(unsigned char *)(v0 - 96) = 2;
}

uint64_t sub_252B989F4@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_252B989FC()
{
  return sub_252D1A498();
}

uint64_t sub_252B98A20()
{
  *(unsigned char *)(v1 - 104) = 1;
  return v0;
}

uint64_t sub_252B98A38()
{
  return v0;
}

uint64_t sub_252B98A48()
{
  return v0;
}

void sub_252B98A60(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
}

uint64_t sub_252B98A70(uint64_t a1)
{
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, a1);
  return sub_252B5A4CC(v2, v3);
}

uint64_t sub_252B98AB8()
{
  return sub_252D19588();
}

uint64_t sub_252B98AD4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

__n128 sub_252B98AE4@<Q0>(int a1@<W8>)
{
  *(_DWORD *)uint64_t v1 = a1;
  __n128 result = *(__n128 *)(v2 - 96);
  *(__n128 *)(v1 + 8) = result;
  return result;
}

uint64_t sub_252B98B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
  return sub_252D19588();
}

uint64_t sub_252B98B3C()
{
  return v0;
}

char *sub_252B98B54@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

unint64_t sub_252B98B6C(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = (void *)(v3 + *(int *)(v2 + 28));
  *unsigned int v6 = a1;
  v6[1] = a2;
  *(unsigned char *)(v4 - 65) = 4;
  return sub_252B593A8();
}

uint64_t sub_252B98B90()
{
  return v0 - 96;
}

uint64_t sub_252B98BA8()
{
  return sub_252D19588();
}

uint64_t sub_252B98BD8()
{
  return type metadata accessor for RGToolDisambiguationModel(0);
}

uint64_t sub_252B98BF0()
{
  return sub_252D1A498();
}

uint64_t sub_252B98C14@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_252B98C1C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

unsigned char *sub_252B98C24@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *__n128 result = a2;
  return result;
}

uint64_t sub_252B98C2C@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t sub_252B98C48()
{
  return v0;
}

void sub_252B98C70()
{
  *(void *)(v1 + *(int *)(v2 + 24) + 16) = v0;
}

void sub_252B98C84()
{
  *(unsigned char *)(v0 - 67) = 2;
}

unint64_t sub_252B98C90()
{
  *(unsigned char *)(v0 - 65) = 2;
  return sub_252B674A8();
}

uint64_t sub_252B98CBC()
{
  return v0;
}

uint64_t sub_252B98CD0()
{
  return v0;
}

uint64_t sub_252B98CF8()
{
  return sub_252D1A578();
}

uint64_t sub_252B98D18()
{
  return v0;
}

uint64_t sub_252B98D2C()
{
  return v0;
}

uint64_t sub_252B98D40()
{
  return v0;
}

void sub_252B98D4C()
{
  uint64_t v4 = (void *)(v0 + *(int *)(v3 + 40));
  *uint64_t v4 = v2;
  v4[1] = v1;
}

uint64_t sub_252B98D84@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_252B98D98()
{
  return 0;
}

uint64_t sub_252B98DA4()
{
  return 0;
}

uint64_t sub_252B98DD8()
{
  return 0;
}

uint64_t sub_252B98DEC()
{
  return v0 - 96;
}

uint64_t sub_252B98E0C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  *(unsigned char *)(v1 - 104) = 3;
  return sub_252D19408();
}

void sub_252B98E2C()
{
  *(void *)(v1 - 104) = v0;
  *(unsigned char *)(v1 - 96) = 0;
}

uint64_t sub_252B98E40()
{
  *(unsigned char *)(v0 - 104) = 0;
  return sub_252D19588();
}

uint64_t sub_252B98E58()
{
  return v0;
}

uint64_t sub_252B98E64()
{
  return v0;
}

uint64_t SessionClientConfiguration.clientActions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionClientConfiguration.clientActions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*SessionClientConfiguration.clientActions.modify())()
{
  return nullsub_1;
}

uint64_t SessionClientConfiguration.isSideChannelDebugger.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t SessionClientConfiguration.isSideChannelDebugger.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*SessionClientConfiguration.isSideChannelDebugger.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SessionClientConfiguration __swiftcall SessionClientConfiguration.init()()
{
  *(void *)uint64_t v0 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v0 + 8) = 0;
  return result;
}

IntelligenceFlow::SessionClientConfiguration __swiftcall SessionClientConfiguration.init(clientActions:)(Swift::OpaquePointer clientActions)
{
  *(Swift::OpaquePointer *)uint64_t v1 = clientActions;
  *(unsigned char *)(v1 + 8) = 0;
  result.clientActions = clientActions;
  return result;
}

uint64_t static SessionClientConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  sub_252B1D21C();
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t sub_252B98F60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6341746E65696C63 && a2 == 0xED0000736E6F6974;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D3B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252B99074(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x6341746E65696C63;
  }
}

uint64_t sub_252B990BC()
{
  return sub_252B99074(*v0);
}

uint64_t sub_252B990C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B98F60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B990EC(uint64_t a1)
{
  unint64_t v2 = sub_252B99304();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B99128(uint64_t a1)
{
  unint64_t v2 = sub_252B99304();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionClientConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_252AC3A24(&qword_26B231740);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  v12[2] = *((unsigned __int8 *)v1 + 8);
  sub_252AC3A68(a1, a1[3]);
  sub_252B99304();
  sub_252D1A738();
  uint64_t v15 = v10;
  char v14 = 0;
  sub_252AC3A24(&qword_26B2348A0);
  sub_252B99538(&qword_26B231570, &qword_26B231458);
  sub_252D1A578();
  if (!v2)
  {
    char v13 = 1;
    sub_252D1A538();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_252B99304()
{
  unint64_t result = qword_26B234790;
  if (!qword_26B234790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234790);
  }
  return result;
}

uint64_t SessionClientConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_252AC3A24(&qword_26B231E58);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AC3A68(a1, a1[3]);
  sub_252B99304();
  sub_252D1A718();
  if (v2) {
    return _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  }
  sub_252AC3A24(&qword_26B2348A0);
  sub_252B99538(&qword_26B231DF8, &qword_26B231C60);
  sub_252D1A498();
  swift_bridgeObjectRetain();
  char v6 = sub_252D1A458();
  uint64_t v7 = sub_252B5FE04();
  v8(v7);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = v6 & 1;
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_252B99538(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_252AEA288(&qword_26B2348A0);
    sub_252B995B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252B995B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ClientAction.Definition(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_252B995FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionClientConfiguration.init(from:)(a1, a2);
}

uint64_t sub_252B99614(void *a1)
{
  return SessionClientConfiguration.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for SessionClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SessionClientConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SessionClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for SessionClientConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionClientConfiguration(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionClientConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientConfiguration()
{
  return &type metadata for SessionClientConfiguration;
}

unsigned char *storeEnumTagSinglePayload for SessionClientConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252B99870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionClientConfiguration.CodingKeys()
{
  return &type metadata for SessionClientConfiguration.CodingKeys;
}

unint64_t sub_252B998AC()
{
  unint64_t result = qword_269C43DD0;
  if (!qword_269C43DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43DD0);
  }
  return result;
}

unint64_t sub_252B998FC()
{
  unint64_t result = qword_26B232170;
  if (!qword_26B232170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B232170);
  }
  return result;
}

unint64_t sub_252B9994C()
{
  unint64_t result = qword_26B234798;
  if (!qword_26B234798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234798);
  }
  return result;
}

uint64_t sub_252B9999C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_252B7D010(0, v1, 0);
    uint64_t v2 = v10;
    unsigned int v4 = (uint64_t *)(a1 + 72);
    do
    {
      uint64_t v6 = *v4;
      v4 += 6;
      uint64_t v5 = v6;
      unint64_t v8 = *(void *)(v10 + 16);
      unint64_t v7 = *(void *)(v10 + 24);
      swift_retain();
      if (v8 >= v7 >> 1) {
        sub_252B7D010((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v10 + 16) = v8 + 1;
      *(void *)(v10 + 8 * v8 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t (*SessionConfiguration.plannerType.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.clientEffects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionConfiguration.clientEffects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SessionConfiguration.clientEffects.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.clientActions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionConfiguration.clientActions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SessionConfiguration.clientActions.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.prewarmContext.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t SessionConfiguration.prewarmContext.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*SessionConfiguration.prewarmContext.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.initialLocaleSettings.getter()
{
  uint64_t v2 = v1 + *(int *)(sub_252BA5980() + 32);

  return sub_252B99BC4(v2, v0);
}

uint64_t type metadata accessor for SessionConfiguration(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B234688);
}

uint64_t sub_252B99BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_26B232128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SessionConfiguration.initialLocaleSettings.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SessionConfiguration(0) + 32);

  return sub_252B99C70(a1, v3);
}

uint64_t sub_252B99C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252AC3A24(&qword_26B232128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SessionConfiguration.initialLocaleSettings.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.participantSettings.getter()
{
  uint64_t result = sub_252BA5980();
  unsigned char *v0 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t SessionConfiguration.participantSettings.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for SessionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*SessionConfiguration.participantSettings.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.debuggerSettings.getter()
{
  uint64_t result = sub_252BA5980();
  uint64_t v3 = (__int16 *)(v1 + *(int *)(result + 40));
  __int16 v4 = *v3;
  *(unsigned char *)(v0 + 2) = *((unsigned char *)v3 + 2);
  *(_WORD *)uint64_t v0 = v4;
  return result;
}

uint64_t SessionConfiguration.debuggerSettings.setter(__int16 *a1)
{
  __int16 v2 = *a1;
  char v3 = *((unsigned char *)a1 + 2);
  uint64_t result = type metadata accessor for SessionConfiguration(0);
  uint64_t v5 = v1 + *(int *)(result + 40);
  *(unsigned char *)(v5 + 2) = v3;
  *(_WORD *)uint64_t v5 = v2;
  return result;
}

uint64_t (*SessionConfiguration.debuggerSettings.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.identityChain.getter()
{
  void *v0 = *(void *)(v1 + *(int *)(sub_252BA5980() + 44));

  return swift_bridgeObjectRetain();
}

uint64_t SessionConfiguration.identityChain.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for SessionConfiguration(0) + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = v2;
  return result;
}

uint64_t (*SessionConfiguration.identityChain.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.originatingDevice.getter()
{
  uint64_t v1 = sub_252BA5980();
  sub_252BA5A90((uint64_t *)(v0 + *(int *)(v1 + 48)));

  return swift_bridgeObjectRetain();
}

uint64_t SessionConfiguration.originatingDevice.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for SessionConfiguration(0) + 48);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(_DWORD *)(v5 + 16) = v4;
  return result;
}

uint64_t (*SessionConfiguration.originatingDevice.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.crossAPIAssociationKey.getter()
{
  uint64_t v2 = (void *)(v1 + *(int *)(sub_252BA5980() + 52));
  uint64_t v3 = v2[1];
  void *v0 = *v2;
  v0[1] = v3;

  return swift_bridgeObjectRetain();
}

uint64_t SessionConfiguration.crossAPIAssociationKey.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = (void *)(v1 + *(int *)(type metadata accessor for SessionConfiguration(0) + 52));
  uint64_t result = swift_bridgeObjectRelease();
  *int v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SessionConfiguration.crossAPIAssociationKey.modify())()
{
  return nullsub_1;
}

void SessionConfiguration.init()(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 4;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 2;
  uint64_t v2 = (int *)type metadata accessor for SessionConfiguration(0);
  uint64_t v3 = type metadata accessor for LocaleSettings(0);
  sub_252B4C220(v3);
  *(unsigned char *)(a1 + v2[9]) = 2;
  sub_252BA59D8(a1 + v2[10]);
  *(void *)(a1 + v2[11]) = 0;
  uint64_t v4 = a1 + v2[12];
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(_DWORD *)(v4 + 16) = 0;
  uint64_t v5 = (void *)(a1 + v2[13]);
  void *v5 = 0;
  v5[1] = 0;
}

uint64_t type metadata accessor for LocaleSettings(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B232118);
}

uint64_t sub_252B9A17C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5472656E6E616C70 && a2 == 0xEB00000000657079;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6645746E65696C63 && a2 == 0xED00007374636566;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6341746E65696C63 && a2 == 0xED0000736E6F6974;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x436D726177657270 && a2 == 0xEE00747865746E6FLL;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D3D0 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1D3F0 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D410 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x797469746E656469 && a2 == 0xED00006E69616843;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1D430 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D450)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            char v10 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v10) {
              return 9;
            }
            else {
              return 10;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252B9A5F8()
{
  return 10;
}

unint64_t sub_252B9A600(char a1)
{
  unint64_t result = 0x5472656E6E616C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6645746E65696C63;
      break;
    case 2:
      unint64_t result = 0x6341746E65696C63;
      break;
    case 3:
      unint64_t result = 0x436D726177657270;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x797469746E656469;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252B9A788()
{
  return sub_252B9A600(*v0);
}

uint64_t sub_252B9A790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9A17C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B9A7B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252B9A5F8();
  *a1 = result;
  return result;
}

uint64_t sub_252B9A7E0(uint64_t a1)
{
  unint64_t v2 = sub_252B9ABF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9A81C(uint64_t a1)
{
  unint64_t v2 = sub_252B9ABF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionConfiguration.encode(to:)(void *a1)
{
  sub_252AC3A24(&qword_26B231730);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5FEB4(a1);
  sub_252B9ABF0();
  sub_252B5F8D4();
  sub_252B9AC3C();
  sub_252BA5744();
  if (!v1)
  {
    sub_252B5FC80();
    sub_252AC3A24(&qword_26B2348B0);
    sub_252BA1C74((uint64_t)&unk_26B231580);
    sub_252BA5AE8();
    sub_252D1A518();
    sub_252AC3A24(&qword_26B2348A0);
    sub_252B9B4BC((uint64_t)&qword_26B231570);
    sub_252BA5AE8();
    sub_252D1A518();
    sub_252D1A4F8();
    type metadata accessor for SessionConfiguration(0);
    type metadata accessor for LocaleSettings(0);
    sub_252B9ACD4((uint64_t)&unk_26B231480);
    sub_252D1A518();
    sub_252B9AD18();
    sub_252BA5744();
    sub_252B9AD64();
    sub_252BA5744();
    sub_252B9ADB0();
    sub_252BA5744();
    sub_252B9ADFC();
    sub_252BA5744();
    sub_252B9AE48();
    sub_252BA5744();
  }
  sub_252BA591C();
  return v4();
}

unint64_t sub_252B9ABF0()
{
  unint64_t result = qword_26B234670;
  if (!qword_26B234670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234670);
  }
  return result;
}

unint64_t sub_252B9AC3C()
{
  unint64_t result = qword_26B2314C0;
  if (!qword_26B2314C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2314C0);
  }
  return result;
}

unint64_t sub_252B9AC88()
{
  unint64_t result = qword_26B231498;
  if (!qword_26B231498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231498);
  }
  return result;
}

unint64_t sub_252B9ACD4(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252B9AD18()
{
  unint64_t result = qword_26B2314C8;
  if (!qword_26B2314C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2314C8);
  }
  return result;
}

unint64_t sub_252B9AD64()
{
  unint64_t result = qword_26B2314A0;
  if (!qword_26B2314A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2314A0);
  }
  return result;
}

unint64_t sub_252B9ADB0()
{
  unint64_t result = qword_26B2314B8;
  if (!qword_26B2314B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2314B8);
  }
  return result;
}

unint64_t sub_252B9ADFC()
{
  unint64_t result = qword_26B231460;
  if (!qword_26B231460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231460);
  }
  return result;
}

unint64_t sub_252B9AE48()
{
  unint64_t result = qword_26B2314E0;
  if (!qword_26B2314E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2314E0);
  }
  return result;
}

void SessionConfiguration.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  uint64_t v19 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_26B232128);
  MEMORY[0x270FA5388](v6 - 8);
  sub_252AEDE70();
  uint64_t v24 = v7;
  sub_252AC3A24(&qword_26B231E48);
  sub_252AEDBD0();
  uint64_t v25 = v9;
  uint64_t v26 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = sub_252BA59A0();
  uint64_t v11 = type metadata accessor for SessionConfiguration(v10);
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  sub_252AC423C();
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)uint64_t v1 = 4;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 2;
  uint64_t v22 = v1 + v12[10];
  uint64_t v23 = type metadata accessor for LocaleSettings(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, 1, 1, v23);
  uint64_t v21 = v12[11];
  *(unsigned char *)(v1 + v21) = 2;
  uint64_t v20 = v12[12];
  sub_252BA59D8(v1 + v20);
  uint64_t v13 = v12[13];
  *(void *)(v1 + v13) = 0;
  uint64_t v14 = v1 + v12[14];
  *(void *)uint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  *(_DWORD *)(v14 + 16) = 0;
  uint64_t v15 = (void *)(v1 + v12[15]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  sub_252AC3A68(v4, v4[3]);
  sub_252B9ABF0();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    uint64_t v18 = type metadata accessor for SessionConfiguration;
    uint64_t v17 = v1;
  }
  else
  {
    sub_252B9B424();
    sub_252D1A438();
    *(unsigned char *)uint64_t v1 = v27;
    sub_252AC3A24(&qword_26B2348B0);
    sub_252B5FC80();
    sub_252BA1C74((uint64_t)&unk_26B231E08);
    sub_252D1A438();
    *(void *)(v1 + 8) = v27;
    sub_252AC3A24(&qword_26B2348A0);
    sub_252B9B4BC((uint64_t)&qword_26B231DF8);
    sub_252D1A438();
    *(void *)(v1 + 16) = v27;
    *(unsigned char *)(v1 + 24) = sub_252D1A418();
    LOBYTE(v27) = 4;
    sub_252B9ACD4((uint64_t)&unk_26B231C80);
    sub_252D1A438();
    sub_252B99C70(v24, v22);
    sub_252B9B54C();
    sub_252BA57FC();
    *(unsigned char *)(v1 + v21) = 4;
    sub_252B9B598();
    sub_252BA57FC();
    uint64_t v16 = v1 + v20;
    *(unsigned char *)(v16 + 2) = BYTE2(v27);
    *(_WORD *)uint64_t v16 = v27;
    sub_252B9B5E4();
    sub_252BA57FC();
    swift_bridgeObjectRelease();
    *(void *)(v1 + v13) = v27;
    sub_252B9B630();
    sub_252BA57FC();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = v27;
    *(void *)(v14 + 8) = v28;
    *(_DWORD *)(v14 + 16) = v29;
    sub_252B9B67C();
    sub_252D1A438();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v2, v26);
    swift_bridgeObjectRelease();
    *uint64_t v15 = v27;
    v15[1] = v28;
    sub_252BA1750(v1, v19, (void (*)(void))type metadata accessor for SessionConfiguration);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    uint64_t v17 = sub_252AEA3DC();
  }
  sub_252BA17AC(v17, (void (*)(void))v18);
  sub_252AF4368();
}

unint64_t sub_252B9B424()
{
  unint64_t result = qword_26B231CF0;
  if (!qword_26B231CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231CF0);
  }
  return result;
}

unint64_t sub_252B9B470()
{
  unint64_t result = qword_26B231CB0;
  if (!qword_26B231CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231CB0);
  }
  return result;
}

unint64_t sub_252B9B4BC(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_252AEA288(&qword_26B2348A0);
    sub_252B9ACD4(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252B9B54C()
{
  unint64_t result = qword_26B231CF8;
  if (!qword_26B231CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231CF8);
  }
  return result;
}

unint64_t sub_252B9B598()
{
  unint64_t result = qword_26B231CD0;
  if (!qword_26B231CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231CD0);
  }
  return result;
}

unint64_t sub_252B9B5E4()
{
  unint64_t result = qword_26B231CD8;
  if (!qword_26B231CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231CD8);
  }
  return result;
}

unint64_t sub_252B9B630()
{
  unint64_t result = qword_26B231C68;
  if (!qword_26B231C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C68);
  }
  return result;
}

unint64_t sub_252B9B67C()
{
  unint64_t result = qword_26B231D10;
  if (!qword_26B231D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231D10);
  }
  return result;
}

void sub_252B9B6C8()
{
}

uint64_t sub_252B9B6E0(void *a1)
{
  return SessionConfiguration.encode(to:)(a1);
}

void SessionConfiguration.init(plannerType:initialLocaleSettings:participantSettings:identityChain:)()
{
  sub_252AFC730();
  uint64_t v3 = v2;
  char v5 = *v4;
  uint64_t v7 = *v6;
  sub_252BA5684(v2);
  *(unsigned char *)(v3 + v1) = v5;
  swift_bridgeObjectRelease();
  *(void *)(v3 + v0) = v7;
  sub_252AFC718();
}

void SessionConfiguration.init(plannerType:useCuratedToolbox:clientEffects:)(char *a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRelease();
  char v4 = *a1;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 2;
  char v5 = (int *)type metadata accessor for SessionConfiguration(0);
  uint64_t v6 = type metadata accessor for LocaleSettings(0);
  sub_252B4C220(v6);
  *(unsigned char *)(a2 + v5[9]) = 2;
  sub_252BA59D8(a2 + v5[10]);
  *(void *)(a2 + v5[11]) = 0;
  uint64_t v7 = a2 + v5[12];
  *(void *)uint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  *(_DWORD *)(v7 + 16) = 0;
  uint64_t v8 = (void *)(a2 + v5[13]);
  void *v8 = 0;
  v8[1] = 0;
  *(unsigned char *)a2 = v4;
}

void SessionConfiguration.init(plannerType:clientActions:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 24) = 2;
  uint64_t v4 = type metadata accessor for SessionConfiguration(0);
  sub_252BA592C(v4);
  *(unsigned char *)(a2 + v5) = 2;
  sub_252BA57BC();
  *(void *)(a2 + 16) = a1;
}

uint64_t SessionConfiguration.init(plannerType:clientActions:prewarmContext:)()
{
  sub_252BA58E8();
  *(void *)(v5 + 8) = 0;
  uint64_t result = sub_252BA5844();
  *(unsigned char *)(v2 + v7) = 2;
  uint64_t v8 = v2 + v3[10];
  *(unsigned char *)(v8 + 2) = 0;
  *(_WORD *)uint64_t v8 = 512;
  *(void *)(v2 + v3[11]) = 0;
  uint64_t v9 = v2 + v3[12];
  *(void *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  *(_DWORD *)(v9 + 16) = 0;
  uint64_t v10 = (void *)(v2 + v3[13]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(unsigned char *)uint64_t v2 = v4;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = v0;
  return result;
}

void SessionConfiguration.init(plannerType:prewarmContext:)(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration(0);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  sub_252BA592C(v4);
  *(unsigned char *)(a2 + v5) = 2;
  sub_252BA57BC();
  *(unsigned char *)(a2 + 24) = a1;
}

uint64_t SessionConfiguration.init(plannerType:initialLocaleSettings:prewarmContext:)()
{
  sub_252BA58E8();
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 2;
  sub_252BA5844();
  *(unsigned char *)(v1 + v3) = 2;
  uint64_t result = sub_252BA5768();
  *(unsigned char *)(v1 + 24) = v0;
  return result;
}

void SessionConfiguration.init(plannerType:initialLocaleSettings:prewarmContext:participantSettings:)()
{
  sub_252AFC730();
  sub_252BA58E8();
  char v3 = *v2;
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = 2;
  uint64_t v5 = type metadata accessor for SessionConfiguration(0);
  uint64_t v6 = v1 + *(int *)(v5 + 32);
  uint64_t v7 = type metadata accessor for LocaleSettings(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, 1, 1, v7);
  uint64_t v8 = *(int *)(v5 + 36);
  *(unsigned char *)(v1 + v8) = 2;
  sub_252BA5768();
  *(unsigned char *)(v1 + 24) = v0;
  *(unsigned char *)(v1 + v8) = v3;
  sub_252AFC718();
}

void SessionConfiguration.init(plannerType:initialLocaleSettings:prewarmContext:participantSettings:identityChain:)()
{
  sub_252AFC730();
  uint64_t v3 = v2;
  char v5 = *v4;
  uint64_t v7 = *v6;
  sub_252BA5684(v2);
  *(unsigned char *)(v3 + v1) = v5;
  swift_bridgeObjectRelease();
  *(void *)(v3 + v0) = v7;
  sub_252AFC718();
}

void sub_252B9BA64()
{
  qword_269C43DD8 = (uint64_t)&unk_2702FF690;
}

uint64_t static SessionConfiguration.PlannerType.allCases.getter()
{
  if (qword_269C41860 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

IntelligenceFlow::SessionConfiguration::PlannerType_optional __swiftcall SessionConfiguration.PlannerType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_252D1A3D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SessionConfiguration.PlannerType.rawValue.getter()
{
  uint64_t result = 0x647261646E617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x796D6D7564;
      break;
    case 2:
      uint64_t result = 0x676E6974736574;
      break;
    case 3:
      uint64_t result = 7169123;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252B9BBB4(unsigned __int8 *a1, char *a2)
{
  return sub_252B00E2C(*a1, *a2);
}

uint64_t sub_252B9BBC0()
{
  return sub_252CFBE98(*v0);
}

uint64_t sub_252B9BBC8()
{
  return sub_252B4CD88();
}

uint64_t sub_252B9BBD0(uint64_t a1)
{
  return sub_252B4D298(a1, *v1);
}

IntelligenceFlow::SessionConfiguration::PlannerType_optional sub_252B9BBD8(Swift::String *a1)
{
  return SessionConfiguration.PlannerType.init(rawValue:)(*a1);
}

uint64_t sub_252B9BBE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SessionConfiguration.PlannerType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_252B9BC0C()
{
  return sub_252D19E98();
}

uint64_t sub_252B9BC6C()
{
  return sub_252D19E68();
}

uint64_t sub_252B9BCBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static SessionConfiguration.PlannerType.allCases.getter();
  *a1 = result;
  return result;
}

uint64_t SessionConfiguration.ParticipantSettings.SemanticPreference.hash(into:)()
{
  return sub_252D1A6B8();
}

uint64_t sub_252B9BD14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4F72656E6E616C70 && a2 == 0xEB00000000796C6ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252B9BE1C(char a1)
{
  if (a1) {
    return 0x4F72656E6E616C70;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_252B9BE5C()
{
  return sub_252B9BE1C(*v0);
}

uint64_t sub_252B9BE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9BD14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B9BE8C(uint64_t a1)
{
  unint64_t v2 = sub_252B9C1E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9BEC8(uint64_t a1)
{
  unint64_t v2 = sub_252B9C1E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B9BF04(uint64_t a1)
{
  unint64_t v2 = sub_252B9C234();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9BF40(uint64_t a1)
{
  unint64_t v2 = sub_252B9C234();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B9BF7C(uint64_t a1)
{
  unint64_t v2 = sub_252B9C280();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9BFB8(uint64_t a1)
{
  unint64_t v2 = sub_252B9C280();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionConfiguration.ParticipantSettings.SemanticPreference.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C43DF8);
  sub_252AEDBD0();
  v19[3] = v4;
  v19[4] = v3;
  MEMORY[0x270FA5388](v3);
  sub_252B774C8(v5, v19[0]);
  sub_252AC3A24(&qword_269C43E00);
  sub_252AEDBD0();
  v19[0] = v7;
  v19[1] = v6;
  MEMORY[0x270FA5388](v6);
  sub_252B7732C();
  uint64_t v8 = sub_252AC3A24(&qword_269C43E08);
  sub_252AEDBD0();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *v0;
  sub_252AC3A68(v2, v2[3]);
  sub_252B9C1E8();
  sub_252D1A738();
  uint64_t v15 = (void (**)(char *, uint64_t))(v10 + 8);
  if (v14) {
    sub_252B9C234();
  }
  else {
    sub_252B9C280();
  }
  sub_252D1A4D8();
  sub_252B5F53C();
  v18(v16, v17);
  (*v15)(v13, v8);
  sub_252AF4368();
}

unint64_t sub_252B9C1E8()
{
  unint64_t result = qword_269C43E10;
  if (!qword_269C43E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E10);
  }
  return result;
}

unint64_t sub_252B9C234()
{
  unint64_t result = qword_269C43E18;
  if (!qword_269C43E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E18);
  }
  return result;
}

unint64_t sub_252B9C280()
{
  unint64_t result = qword_269C43E20;
  if (!qword_269C43E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E20);
  }
  return result;
}

uint64_t SessionConfiguration.ParticipantSettings.SemanticPreference.hashValue.getter()
{
  return sub_252D1A6E8();
}

void SessionConfiguration.ParticipantSettings.SemanticPreference.init(from:)()
{
  sub_252AF4380();
  uint64_t v41 = (void *)v0;
  uint64_t v3 = v2;
  uint64_t v38 = v4;
  uint64_t v40 = sub_252AC3A24(&qword_269C43E28);
  sub_252AEDBD0();
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v6);
  sub_252B5F630();
  uint64_t v7 = sub_252AC3A24(&qword_269C43E30);
  sub_252AEDBD0();
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_252AC3A24(&qword_269C43E38);
  sub_252AEDBD0();
  uint64_t v39 = v13;
  MEMORY[0x270FA5388](v14);
  sub_252B23278();
  sub_252AC3A68(v3, v3[3]);
  sub_252B9C1E8();
  uint64_t v15 = (uint64_t)v41;
  sub_252B5F908();
  if (v15) {
    goto LABEL_10;
  }
  uint64_t v34 = v7;
  uint64_t v35 = v11;
  uint64_t v41 = v3;
  uint64_t v16 = sub_252D1A4C8();
  if (*(void *)(v16 + 16))
  {
    uint64_t v33 = 0;
    int v17 = *(unsigned __int8 *)(v16 + 32);
    sub_252B5F440(1);
    uint64_t v19 = v18;
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (v19 == v21 >> 1)
    {
      if (v17)
      {
        LODWORD(v36) = v17;
        sub_252B9C234();
        uint64_t v22 = v33;
        sub_252D1A3E8();
        uint64_t v24 = v38;
        uint64_t v23 = v39;
        if (v22) {
          goto LABEL_9;
        }
        sub_252B5F53C();
        v30();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v12);
        LOBYTE(v17) = v36;
      }
      else
      {
        sub_252B9C280();
        uint64_t v29 = v33;
        sub_252D1A3E8();
        uint64_t v24 = v38;
        uint64_t v23 = v39;
        if (v29)
        {
LABEL_9:
          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v12);
          uint64_t v3 = v41;
          goto LABEL_10;
        }
        sub_252B5F53C();
        v31();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v12);
      }
      *uint64_t v24 = v17;
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v41);
      goto LABEL_11;
    }
  }
  uint64_t v25 = sub_252D1A308();
  swift_allocError();
  uint64_t v27 = v26;
  sub_252AC3A24(&qword_269C42E78);
  *uint64_t v27 = &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference;
  sub_252D1A3F8();
  sub_252D1A2F8();
  (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
  swift_willThrow();
  swift_unknownObjectRelease();
  sub_252B5F53C();
  v28();
  uint64_t v3 = v41;
LABEL_10:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
LABEL_11:
  sub_252AF4368();
}

void sub_252B9C720()
{
}

void sub_252B9C738()
{
}

void static SessionConfiguration.ParticipantSettings.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static SessionConfiguration.ParticipantSettings.plannerOnly.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t (*SessionConfiguration.ParticipantSettings.preference.modify())()
{
  return nullsub_1;
}

uint64_t sub_252B9C794(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E65726566657270 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252B9C828()
{
  return 0x6E65726566657270;
}

uint64_t sub_252B9C848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9C794(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252B9C874(uint64_t a1)
{
  unint64_t v2 = sub_252BA1620();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9C8B0(uint64_t a1)
{
  unint64_t v2 = sub_252BA1620();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionConfiguration.ParticipantSettings.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C43E40);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252B5FEB4(v1);
  sub_252BA1620();
  sub_252B5F8D4();
  sub_252BA166C();
  sub_252D1A578();
  sub_252BA591C();
  v3();
  sub_252AF4368();
}

void SessionConfiguration.ParticipantSettings.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_252AF4380();
  uint64_t v15 = v14;
  int v17 = v16;
  sub_252AC3A24(&qword_269C43E58);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v18);
  sub_252B5F60C();
  sub_252BA1620();
  sub_252B5F908();
  if (!v13)
  {
    sub_252BA16B8();
    sub_252D1A498();
    uint64_t v19 = sub_252BA5964();
    v20(v19);
    unsigned char *v17 = a13;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v15);
  sub_252AF4368();
}

void sub_252B9CAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SessionConfiguration.ParticipantSettings.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_252B9CAEC()
{
}

uint64_t static LocaleSettings.default.getter()
{
  return sub_252D195D8();
}

uint64_t LocaleSettings.init(deviceLocale:userLocale:responseLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_252D195E8();
  sub_252AEA304();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v13(a4, a1, v8);
  uint64_t v10 = type metadata accessor for LocaleSettings(0);
  v13(a4 + *(int *)(v10 + 20), a2, v8);
  uint64_t v11 = a4 + *(int *)(v10 + 24);

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v11, a3, v8);
}

uint64_t LocaleSettings.deviceLocale.getter()
{
  sub_252D195E8();
  sub_252AEA304();
  uint64_t v0 = sub_252AEA3DC();

  return v1(v0);
}

uint64_t LocaleSettings.deviceLocale.setter()
{
  sub_252D195E8();
  sub_252AEA304();
  uint64_t v0 = sub_252AF4478();

  return v1(v0);
}

uint64_t (*LocaleSettings.deviceLocale.modify())()
{
  return nullsub_1;
}

uint64_t LocaleSettings.userLocale.getter()
{
  type metadata accessor for LocaleSettings(0);
  sub_252BA5A60();
  sub_252AEA304();
  uint64_t v0 = sub_252AEA3DC();

  return v1(v0);
}

uint64_t LocaleSettings.userLocale.setter()
{
  type metadata accessor for LocaleSettings(0);
  sub_252BA5A60();
  sub_252AEA304();
  uint64_t v0 = sub_252AF4478();

  return v1(v0);
}

uint64_t (*LocaleSettings.userLocale.modify())()
{
  return nullsub_1;
}

uint64_t LocaleSettings.responseLocale.getter()
{
  type metadata accessor for LocaleSettings(0);
  sub_252BA5A60();
  sub_252AEA304();
  uint64_t v0 = sub_252AEA3DC();

  return v1(v0);
}

uint64_t LocaleSettings.responseLocale.setter()
{
  type metadata accessor for LocaleSettings(0);
  sub_252BA5A60();
  sub_252AEA304();
  uint64_t v0 = sub_252AF4478();

  return v1(v0);
}

uint64_t (*LocaleSettings.responseLocale.modify())()
{
  return nullsub_1;
}

uint64_t LocaleSettings.hash(into:)()
{
  return sub_252BA59E8();
}

uint64_t static LocaleSettings.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x2533C8690]())
  {
    uint64_t v4 = type metadata accessor for LocaleSettings(0);
    if (MEMORY[0x2533C8690](a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)))
    {
      JUMPOUT(0x2533C8690);
    }
  }
  return 0;
}

uint64_t sub_252B9D048(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4C656369766564 && a2 == 0xEC000000656C6163;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x61636F4C72657375 && a2 == 0xEA0000000000656CLL;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00656C61636F4CLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252B9D1E0(char a1)
{
  if (!a1) {
    return 0x6F4C656369766564;
  }
  if (a1 == 1) {
    return 0x61636F4C72657375;
  }
  return 0x65736E6F70736572;
}

uint64_t sub_252B9D250()
{
  return sub_252B9D1E0(*v0);
}

uint64_t sub_252B9D258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9D048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B9D280(uint64_t a1)
{
  unint64_t v2 = sub_252BA1704();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9D2BC(uint64_t a1)
{
  unint64_t v2 = sub_252BA1704();

  return MEMORY[0x270FA00B8](a1, v2);
}

void LocaleSettings.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_252AF4380();
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  uint64_t v29 = sub_252AC3A24(&qword_26B232208);
  sub_252AEDBD0();
  uint64_t v31 = v30;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252B5FEB4(v28);
  sub_252BA1704();
  sub_252B5F8D4();
  a14 = 0;
  sub_252D195E8();
  sub_252B9ACD4((uint64_t)&unk_26B234110);
  sub_252B980EC();
  if (!v24)
  {
    type metadata accessor for LocaleSettings(0);
    a13 = 1;
    sub_252B980EC();
    a12 = 2;
    sub_252B980EC();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v29);
  sub_252B98814();
  sub_252AF4368();
}

uint64_t LocaleSettings.hashValue.getter()
{
  return sub_252D1A6E8();
}

void LocaleSettings.init(from:)()
{
  sub_252AF4380();
  uint64_t v38 = v0;
  uint64_t v4 = v3;
  uint64_t v31 = v5;
  uint64_t v35 = sub_252D195E8();
  sub_252AEDBD0();
  uint64_t v32 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v27 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)&v27 - v14;
  uint64_t v36 = sub_252AC3A24(&qword_26B231E38);
  sub_252AEDBD0();
  uint64_t v33 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_252BA59A0();
  uint64_t v18 = type metadata accessor for LocaleSettings(v17);
  sub_252AEA304();
  MEMORY[0x270FA5388](v19);
  sub_252B23278();
  sub_252AC3A68(v4, v4[3]);
  sub_252BA1704();
  uint64_t v37 = v2;
  unint64_t v20 = v38;
  sub_252D1A718();
  if (v20)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    uint64_t v28 = v10;
    uint64_t v29 = v18;
    uint64_t v38 = v4;
    uint64_t v30 = v1;
    sub_252B9ACD4((uint64_t)&unk_26B231C20);
    unint64_t v21 = v34;
    uint64_t v22 = v35;
    sub_252D1A498();
    uint64_t v34 = *(char **)(v32 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v34)(v30, v21, v22);
    sub_252D1A498();
    uint64_t v23 = (void (*)(uint64_t, char *, uint64_t))v34;
    ((void (*)(uint64_t, char *, uint64_t))v34)(v30 + *(int *)(v29 + 20), v13, v22);
    sub_252D1A498();
    uint64_t v24 = (uint64_t)v38;
    sub_252B5F67C();
    v25();
    uint64_t v26 = v30;
    v23(v30 + *(int *)(v29 + 24), v28, v22);
    sub_252BA1750(v26, v31, (void (*)(void))type metadata accessor for LocaleSettings);
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v24);
    sub_252BA17AC(v26, (void (*)(void))type metadata accessor for LocaleSettings);
  }
  sub_252AF4368();
}

void sub_252B9D8E0()
{
}

#error "252B9D904: call analysis failed (funcsize=6)"

uint64_t sub_252B9D918()
{
  return sub_252D1A6E8();
}

uint64_t DebuggerSettings.DebuggerMode.hash(into:)()
{
  return sub_252D1A6B8();
}

BOOL static DebuggerSettings.DebuggerMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_252B9DA2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D470 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000252D1D490)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252B9DB68(char a1)
{
  if (!a1) {
    return 1701736302;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0xD000000000000019;
}

uint64_t sub_252B9DBC0()
{
  return sub_252B9DB68(*v0);
}

uint64_t sub_252B9DBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9DA2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B9DBF0(uint64_t a1)
{
  unint64_t v2 = sub_252BA1800();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9DC2C(uint64_t a1)
{
  unint64_t v2 = sub_252BA1800();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B9DC68(uint64_t a1)
{
  unint64_t v2 = sub_252BA1898();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9DCA4(uint64_t a1)
{
  unint64_t v2 = sub_252BA1898();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B9DCE0(uint64_t a1)
{
  unint64_t v2 = sub_252BA18E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9DD1C(uint64_t a1)
{
  unint64_t v2 = sub_252BA18E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252B9DD58(uint64_t a1)
{
  unint64_t v2 = sub_252BA184C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9DD94(uint64_t a1)
{
  unint64_t v2 = sub_252BA184C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void DebuggerSettings.DebuggerMode.encode(to:)()
{
  sub_252AF4380();
  sub_252AC3A24(&qword_269C43E70);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B774C8(v2, v13);
  sub_252AC3A24(&qword_269C43E78);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C43E80);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C43E88);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252AC423C();
  int v6 = *v0;
  uint64_t v7 = (void *)sub_252AF4478();
  sub_252AC3A68(v7, v8);
  sub_252BA1800();
  sub_252D1A738();
  if (v6)
  {
    if (v6 == 1) {
      sub_252BA1898();
    }
    else {
      sub_252BA184C();
    }
    sub_252B775C8();
  }
  else
  {
    sub_252BA18E4();
    sub_252B775C8();
  }
  sub_252B5F53C();
  v10(v9);
  sub_252B5F67C();
  v12(v11);
  sub_252AF4368();
}

uint64_t DebuggerSettings.DebuggerMode.hashValue.getter()
{
  return sub_252D1A6E8();
}

void DebuggerSettings.DebuggerMode.init(from:)()
{
  sub_252AF4380();
  size_t v49 = v0;
  uint64_t v4 = v3;
  uint64_t v46 = v5;
  sub_252AC3A24(&qword_269C43EB0);
  sub_252AEDBD0();
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v6);
  sub_252AEDE70();
  uint64_t v48 = v8;
  sub_252AC3A24(&qword_269C43EB8);
  sub_252AEDBD0();
  v42[6] = v9;
  uint64_t v43 = v10;
  MEMORY[0x270FA5388](v9);
  sub_252B23278();
  uint64_t v11 = sub_252AC3A24(&qword_269C43EC0);
  sub_252AEDBD0();
  v42[5] = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_252AC3A24(&qword_269C43EC8);
  sub_252AEDBD0();
  uint64_t v47 = v17;
  MEMORY[0x270FA5388](v18);
  sub_252B7732C();
  sub_252AC3A68(v4, v4[3]);
  sub_252BA1800();
  uint64_t v19 = v49;
  sub_252D1A718();
  if (v19) {
    goto LABEL_10;
  }
  v42[2] = v11;
  v42[3] = v15;
  v42[4] = v1;
  size_t v49 = v4;
  uint64_t v20 = v2;
  uint64_t v21 = sub_252D1A4C8();
  if (!*(void *)(v21 + 16))
  {
LABEL_9:
    uint64_t v33 = sub_252D1A308();
    swift_allocError();
    uint64_t v35 = v34;
    sub_252AC3A24(&qword_269C42E78);
    *uint64_t v35 = &type metadata for DebuggerSettings.DebuggerMode;
    sub_252D1A3F8();
    sub_252D1A2F8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v20, v16);
    uint64_t v4 = v49;
LABEL_10:
    uint64_t v36 = (uint64_t)v4;
    goto LABEL_11;
  }
  v42[1] = 0;
  uint64_t v22 = v2;
  int v23 = *(unsigned __int8 *)(v21 + 32);
  sub_252B5F440(1);
  uint64_t v25 = v24;
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v25 != v27 >> 1)
  {
    uint64_t v20 = v22;
    goto LABEL_9;
  }
  char v28 = v23;
  if (v23)
  {
    if (v23 == 1)
    {
      sub_252BA1898();
      sub_252B775AC();
      uint64_t v29 = v46;
      sub_252B5F53C();
      v30();
      swift_unknownObjectRelease();
      uint64_t v31 = sub_252BA58AC();
      v32(v31);
    }
    else
    {
      LODWORD(v43) = v23;
      sub_252BA184C();
      sub_252B775AC();
      uint64_t v29 = v46;
      sub_252B5F53C();
      v39();
      swift_unknownObjectRelease();
      uint64_t v40 = sub_252BA58AC();
      v41(v40);
      char v28 = v43;
    }
  }
  else
  {
    sub_252BA18E4();
    sub_252B775AC();
    sub_252B5F53C();
    v37();
    swift_unknownObjectRelease();
    sub_252B5F53C();
    v38();
    uint64_t v29 = v46;
  }
  *uint64_t v29 = v28;
  uint64_t v36 = (uint64_t)v49;
LABEL_11:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v36);
  sub_252AF4368();
}

void sub_252B9E4C8()
{
}

void sub_252B9E4E0()
{
}

uint64_t (*DebuggerSettings.mode.modify())()
{
  return nullsub_1;
}

uint64_t DebuggerSettings.startInDeferredTransactionMode.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DebuggerSettings.startInDeferredTransactionMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*DebuggerSettings.startInDeferredTransactionMode.modify())()
{
  return nullsub_1;
}

uint64_t DebuggerSettings.startInInjectionMode.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t DebuggerSettings.startInInjectionMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*DebuggerSettings.startInInjectionMode.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::DebuggerSettings __swiftcall DebuggerSettings.init()()
{
  *(_WORD *)uint64_t v0 = 0;
  *(unsigned char *)(v0 + 2) = 0;
  return result;
}

BOOL static DebuggerSettings.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 != *a2) | ((a1[1] ^ a2[1]) | (a2[2] ^ a1[2])) & 1) == 0;
}

uint64_t sub_252B9E5CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000252D1D4B0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1D4D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252B9E70C(char a1)
{
  if (!a1) {
    return 1701080941;
  }
  if (a1 == 1) {
    return 0xD00000000000001ELL;
  }
  return 0xD000000000000014;
}

uint64_t sub_252B9E76C()
{
  return sub_252D1A6E8();
}

uint64_t sub_252B9E7A8()
{
  return sub_252B9E70C(*v0);
}

uint64_t sub_252B9E7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9E5CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B9E7D8(uint64_t a1)
{
  unint64_t v2 = sub_252BA1930();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9E814(uint64_t a1)
{
  unint64_t v2 = sub_252BA1930();

  return MEMORY[0x270FA00B8](a1, v2);
}

void DebuggerSettings.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C43ED0);
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  sub_252AC3A68(v3, v3[3]);
  sub_252BA1930();
  sub_252BA5AFC();
  sub_252BA197C();
  sub_252D1A578();
  if (!v0)
  {
    sub_252D1A538();
    sub_252D1A538();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_252B98814();
  sub_252AF4368();
}

void DebuggerSettings.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_252AF4380();
  sub_252BA5A04();
  sub_252AC3A24(&qword_269C43EE8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v16);
  sub_252B5F60C();
  sub_252BA1930();
  sub_252BA5888();
  if (!v14)
  {
    sub_252BA19C8();
    sub_252BA5ABC();
    char v17 = sub_252D1A458();
    char v18 = sub_252D1A458();
    uint64_t v19 = sub_252BA572C();
    v20(v19);
    *uint64_t v15 = a13;
    v15[1] = v17 & 1;
    void v15[2] = v18 & 1;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v13);
  sub_252B98814();
  sub_252AF4368();
}

void sub_252B9EB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  DebuggerSettings.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_252B9EB1C()
{
}

void static DeviceDetails.DeviceType.unknown.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.mac.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.iphone.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.ipad.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.ipod.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.tv.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.watch.getter(_DWORD *a1@<X8>)
{
}

void static DeviceDetails.DeviceType.audioAccessory.getter(_DWORD *a1@<X8>)
{
}

uint64_t DeviceDetails.DeviceType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_252B9EB84@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = DeviceDetails.DeviceType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t DeviceDetails.DeviceType.rawValue.setter(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

void (*DeviceDetails.DeviceType.rawValue.modify(uint64_t a1))(_DWORD **a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *v1;
  return sub_252B9EBF4;
}

void sub_252B9EBF4(_DWORD **a1)
{
}

void DeviceDetails.DeviceType.init(rawValue:)(_DWORD *a1@<X8>)
{
}

void sub_252B9EC0C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 4) = 0;
}

uint64_t sub_252B9EC38@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = DeviceDetails.DeviceType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_252B9EC60()
{
  return sub_252D19EB8();
}

uint64_t sub_252B9ECC0()
{
  return sub_252D19E88();
}

uint64_t sub_252B9ED10()
{
  return sub_252CFBEB0();
}

uint64_t sub_252B9ED18()
{
  return sub_252B4D084();
}

uint64_t sub_252B9ED20()
{
  return sub_252B4D180();
}

BOOL sub_252B9ED28(int *a1, int *a2)
{
  return sub_252B01418(*a1, *a2);
}

void sub_252B9ED34()
{
}

void sub_252B9ED40(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_252D19B18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = IDSCopyLocalDeviceUniqueID();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = sub_252D19D48();
    unint64_t v10 = v9;
  }
  else
  {
    sub_252D198D8();
    uint64_t v11 = sub_252D19B08();
    os_log_type_t v12 = sub_252D1A0B8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_252AC1000, v11, v12, "Unexpectedly obtained nil value from IDSCopyLocalDeviceUniqueID()", v13, 2u);
      MEMORY[0x2533CA020](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v8 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  id v14 = (id)MobileGestalt_get_current_device();
  if (v14)
  {
    uint64_t v15 = v14;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if (deviceClassNumber) {
      int v17 = deviceClassNumber;
    }
    else {
      int v17 = -1;
    }
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v10;
    *(_DWORD *)(a1 + 16) = v17;
  }
  else
  {
    __break(1u);
  }
}

uint64_t DeviceDetails.init(deviceIdsId:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *a3;
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = v4;
  return result;
}

uint64_t static DeviceDetails.current.getter()
{
  if (qword_269C41868 != -1) {
    swift_once();
  }
  sub_252BA5A90(&qword_269C43DE0);

  return swift_bridgeObjectRetain();
}

uint64_t DeviceDetails.deviceIdsId.getter()
{
  return sub_252AEA3DC();
}

uint64_t DeviceDetails.deviceIdsId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceDetails.deviceIdsId.modify())()
{
  return nullsub_1;
}

void DeviceDetails.type.getter(_DWORD *a1@<X8>)
{
}

_DWORD *DeviceDetails.type.setter(_DWORD *result)
{
  *(_DWORD *)(v1 + 16) = *result;
  return result;
}

uint64_t (*DeviceDetails.type.modify())()
{
  return nullsub_1;
}

BOOL DeviceDetails.isCurrentDevice.getter()
{
  if (qword_269C41868 != -1) {
    swift_once();
  }
  int v1 = dword_269C43DF0;
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  int v4 = *((_DWORD *)v0 + 4);
  if (v2 == qword_269C43DE0 && v3 == *(void *)algn_269C43DE8) {
    return v4 == v1;
  }
  char v6 = sub_252D1A5D8();
  BOOL result = 0;
  if (v6) {
    return v4 == v1;
  }
  return result;
}

BOOL static DeviceDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  int v3 = *(_DWORD *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_252D1A5D8();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_252B9F0FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449656369766564 && a2 == 0xEB00000000644973;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252B9F1F4(char a1)
{
  if (a1) {
    return 1701869940;
  }
  else {
    return 0x6449656369766564;
  }
}

uint64_t sub_252B9F22C()
{
  return sub_252B9F1F4(*v0);
}

uint64_t sub_252B9F234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9F0FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252B9F25C(uint64_t a1)
{
  unint64_t v2 = sub_252BA1A14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9F298(uint64_t a1)
{
  unint64_t v2 = sub_252BA1A14();

  return MEMORY[0x270FA00B8](a1, v2);
}

void DeviceDetails.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C43EF8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252AC3A68(v2, v2[3]);
  sub_252BA1A14();
  sub_252BA5AFC();
  sub_252D1A528();
  if (!v0)
  {
    sub_252BA1A60();
    sub_252D1A578();
  }
  sub_252B5F53C();
  v4();
  sub_252AF4368();
}

void DeviceDetails.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  sub_252AF4380();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_252AC3A24(&qword_269C43F10);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  sub_252B5F60C();
  sub_252BA1A14();
  sub_252B5F908();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v12);
  }
  else
  {
    uint64_t v16 = sub_252D1A448();
    uint64_t v18 = v17;
    sub_252BA1AAC();
    swift_bridgeObjectRetain();
    sub_252D1A498();
    uint64_t v19 = sub_252BA572C();
    v20(v19);
    *(void *)uint64_t v14 = v16;
    *(void *)(v14 + 8) = v18;
    *(_DWORD *)(v14 + 16) = a10;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v12);
    swift_bridgeObjectRelease();
  }
  sub_252AF4368();
}

void sub_252B9F588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  DeviceDetails.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252B9F5A0()
{
}

uint64_t AuditToken.inner.getter()
{
  return *(void *)v0;
}

uint64_t static AuditToken.currentProcess.getter()
{
  uint64_t v0 = sub_252D198E8();
  return sub_252BA58C4(v0, v1, v2, v3);
}

uint64_t _s16IntelligenceFlow10AuditTokenVyACSo13audit_token_tacfC_0()
{
  uint64_t v0 = MEMORY[0x2533C89E0]();
  return sub_252BA58C4(v0, v1, v2, v3);
}

uint64_t AuditToken.hash(into:)()
{
  return sub_252D19908();
}

uint64_t static AuditToken.== infix(_:_:)(void *a1, void *a2)
{
  return MEMORY[0x270F57608](*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_252B9F648(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x72656E6E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252B9F6C8()
{
  return 0x72656E6E69;
}

uint64_t sub_252B9F6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9F648(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252B9F70C(uint64_t a1)
{
  unint64_t v2 = sub_252BA1AF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9F748(uint64_t a1)
{
  unint64_t v2 = sub_252BA1AF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuditToken.encode(to:)(void *a1)
{
  sub_252AC3A24(&qword_26B231708);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252B5FEB4(a1);
  sub_252BA1AF8();
  sub_252B5F8D4();
  sub_252BA1B44();
  sub_252D1A578();
  sub_252BA591C();
  return v7(v3, v4, v5, v6);
}

uint64_t AuditToken.hashValue.getter()
{
  return sub_252D1A6E8();
}

void AuditToken.init(from:)()
{
  sub_252AF4380();
  sub_252BA5A04();
  sub_252AC3A24(&qword_26B231E18);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252BA1AF8();
  sub_252BA5888();
  if (!v1)
  {
    sub_252BA1B90();
    sub_252BA5ABC();
    uint64_t v4 = sub_252BA572C();
    v5(v4);
    *uint64_t v2 = v6;
    v2[1] = v7;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252B98814();
  sub_252AF4368();
}

uint64_t sub_252B9F9CC()
{
  return sub_252D1A6E8();
}

void sub_252B9FA2C()
{
}

uint64_t sub_252B9FA44(void *a1)
{
  return AuditToken.encode(to:)(a1);
}

double sub_252B9FA5C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  AuditToken.init(rawValue:)(v5, *a1, a1[1], a1[2], a1[3]);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_252B9FAA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = AuditToken.inner.getter();
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 20) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 28) = v8;
  return result;
}

uint64_t ClientIdentityChain.identities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClientIdentityChain.identities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ClientIdentityChain.identities.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::ClientIdentityChain __swiftcall ClientIdentityChain.init(identities:appendingCurrentProcess:)(Swift::OpaquePointer identities, Swift::Bool appendingCurrentProcess)
{
  sub_252AFC730();
  int v3 = v2;
  int v5 = v4;
  if (v6)
  {
    uint64_t v7 = sub_252D198E8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_252D19988();
    uint64_t v14 = sub_252D19948();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v3 = sub_252BA0C48(0, *((void *)v3 + 2) + 1, 1, (uint64_t)v3);
    }
    unint64_t v16 = *((void *)v3 + 2);
    unint64_t v15 = *((void *)v3 + 3);
    if (v16 >= v15 >> 1) {
      int v3 = sub_252BA0C48((char *)(v15 > 1), v16 + 1, 1, (uint64_t)v3);
    }
    *((void *)v3 + 2) = v16 + 1;
    uint64_t v17 = &v3[48 * v16];
    *((void *)v17 + 4) = v7;
    *((void *)v17 + 5) = v9;
    *((void *)v17 + 6) = v11;
    *((void *)v17 + 7) = v13;
    v17[64] = 0;
    *((void *)v17 + 9) = v14;
  }
  char *v5 = v3;
  sub_252AFC718();
  return result;
}

uint64_t static ClientIdentity.getIdentityForCurrentProcess()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_252D198E8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_252D19988();
  uint64_t result = sub_252D19948();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t sub_252B9FC7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x697469746E656469 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252B9FD10()
{
  return 0x697469746E656469;
}

uint64_t sub_252B9FD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252B9FC7C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252B9FD5C(uint64_t a1)
{
  unint64_t v2 = sub_252BA1BDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252B9FD98(uint64_t a1)
{
  unint64_t v2 = sub_252BA1BDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ClientIdentityChain.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_26B231728);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5F630();
  sub_252B5FEB4(v1);
  sub_252BA1BDC();
  sub_252B5F8D4();
  sub_252AC3A24(&qword_26B2348A8);
  sub_252BA1C74((uint64_t)&unk_26B231578);
  sub_252D1A578();
  sub_252BA591C();
  v3();
  sub_252AF4368();
}

void ClientIdentityChain.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_252AC3A24(&qword_26B231E40);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  sub_252B5F60C();
  sub_252BA1BDC();
  sub_252B5F908();
  if (!v10)
  {
    sub_252AC3A24(&qword_26B2348A8);
    sub_252BA1C74((uint64_t)&unk_26B231E00);
    sub_252D1A498();
    uint64_t v16 = sub_252BA5964();
    v17(v16);
    *uint64_t v14 = a10;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v12);
  sub_252AF4368();
}

void sub_252BA0044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ClientIdentityChain.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252BA005C()
{
}

uint64_t static MachIdentityToken.newTokenForCurrentProcess()@<X0>(uint64_t *a1@<X8>)
{
  sub_252D19988();
  uint64_t result = sub_252D19948();
  *a1 = result;
  return result;
}

__n128 ClientIdentity.init(untrustedAuditToken:identityToken:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *a2;
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(unsigned char *)(a3 + 32) = v3;
  *(void *)(a3 + 40) = v4;
  return result;
}

__n128 ClientIdentity.untrustedAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  __n128 result = *(__n128 *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t ClientIdentity.identityToken.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t sub_252BA00E4@<X0>(void *a1@<X8>)
{
  return ClientIdentity.identityToken.getter(a1);
}

uint64_t sub_252BA0128(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  return ClientIdentity.identityToken.setter(&v2);
}

uint64_t ClientIdentity.identityToken.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *(void *)(v1 + 40) = v2;
  return result;
}

uint64_t ClientIdentity.identityToken.modify(void *a1)
{
  *a1 = *(void *)(v1 + 40);
  a1[1] = v1;
  swift_retain();
  return sub_252AF4478();
}

uint64_t sub_252BA01D8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    swift_retain();
    swift_release();
    *(void *)(v3 + 40) = v2;
    return swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *(void *)(v3 + 40) = v2;
  }
  return result;
}

uint64_t sub_252BA024C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1D4F0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E6564695FLL && a2 == 0xEE006E656B6F5479)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BA035C(char a1)
{
  if (a1) {
    return 0x7469746E6564695FLL;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_252BA03A4()
{
  return sub_252BA035C(*v0);
}

uint64_t sub_252BA03AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA024C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA03D4(uint64_t a1)
{
  unint64_t v2 = sub_252BA1D28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA0410(uint64_t a1)
{
  unint64_t v2 = sub_252BA1D28();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ClientIdentity.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_26B231720);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B5FEB4(v2);
  sub_252BA1D28();
  sub_252B5F8D4();
  sub_252BA1D74();
  sub_252D1A518();
  if (!v0)
  {
    sub_252B5FC80();
    sub_252AC3A24(&qword_26B234218);
    sub_252BA1E98((uint64_t)&unk_26B231478);
    sub_252D1A578();
  }
  sub_252B5F53C();
  v4();
  sub_252AF4368();
}

void ClientIdentity.init(from:)()
{
  sub_252AF4380();
  sub_252BA5A04();
  sub_252AC3A24(&qword_26B231E30);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252BA1D28();
  sub_252BA5888();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  }
  else
  {
    sub_252BA1DC0();
    sub_252D1A438();
    sub_252AC3A24(&qword_26B234218);
    sub_252B5FC80();
    sub_252BA1E98((uint64_t)&unk_26B231C78);
    sub_252D1A498();
    uint64_t v4 = sub_252BA572C();
    v5(v4);
    swift_retain();
    *(void *)uint64_t v2 = v6;
    *(void *)(v2 + 8) = v7;
    *(void *)(v2 + 16) = v8;
    *(void *)(v2 + 24) = v9;
    *(unsigned char *)(v2 + 32) = v10;
    *(void *)(v2 + 40) = v6;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    swift_release();
  }
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BA0794()
{
}

void sub_252BA07AC()
{
}

uint64_t MachIdentityToken.inner.getter()
{
  return swift_retain();
}

uint64_t MachIdentityToken.init(copyingToken:)@<X0>(uint64_t *a1@<X8>)
{
  sub_252D19988();
  swift_allocObject();
  uint64_t result = sub_252D19958();
  *a1 = result;
  return result;
}

uint64_t MachIdentityToken.init(xpcObject:)@<X0>(uint64_t *a1@<X8>)
{
  sub_252D19988();
  swift_allocObject();
  uint64_t result = sub_252D19968();
  *a1 = result;
  return result;
}

uint64_t sub_252BA086C(void *a1)
{
  uint64_t result = type metadata accessor for SessionConfiguration(0);
  uint64_t v4 = *(void *)(v1 + *(int *)(result + 44));
  if (v4)
  {
    swift_bridgeObjectRetain();
    xpc_object_t empty = xpc_array_create_empty();
    uint64_t v6 = sub_252B9999C(v4);
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = (void *)(v6 + 32);
      do
      {
        if (*v8++)
        {
          swift_retain();
          char v10 = (void *)sub_252D19978();
        }
        else
        {
          char v10 = xpc_null_create();
        }
        xpc_array_append_value(empty, v10);
        swift_release();
        swift_unknownObjectRelease();
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(a1, "identity_token", empty);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_252BA0960(uint64_t a1)
{
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(a1);
  sub_252BA5A2C();
  sub_252D1A178();
  sub_252AEA304();
  sub_252B5F53C();
  v1();
  return sub_252BA5A2C();
}

uint64_t sub_252BA09D0(uint64_t a1)
{
  return sub_252BA0960(a1);
}

uint64_t sub_252BA09EC(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_252BA5998(a1, a2, a3, a4, &qword_269C44060, (void (*)(void))type metadata accessor for SessionServerDebuggerEvent.InjectionRequest, a7, (void (*)(unint64_t, uint64_t, unint64_t))sub_252B7B500);
}

uint64_t sub_252BA0A20(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_252BA5998(a1, a2, a3, a4, &qword_269C44058, (void (*)(void))type metadata accessor for SessionServerDebuggerEvent.DeferredTransactionReady, a7, (void (*)(unint64_t, uint64_t, unint64_t))sub_252B7B518);
}

uint64_t sub_252BA0A54(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(unint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    sub_252BA590C();
    if (v14 != v15)
    {
      sub_252BA5ADC();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_252BA58FC();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    int v23 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_252AC3A24(a5);
  uint64_t v18 = a6(0);
  sub_252AEDBEC(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  int v23 = (void *)swift_allocObject();
  size_t v24 = j__malloc_size(v23);
  if (!v20 || (v24 - v22 == 0x8000000000000000 ? (BOOL v25 = v20 == -1) : (BOOL v25 = 0), v25))
  {
LABEL_23:
    sub_252B7E38C();
    uint64_t result = sub_252D1A368();
    __break(1u);
    return result;
  }
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v28 = (unint64_t)v23 + v27;
  if (a1)
  {
    a8(a4 + v27, v16, v28);
    sub_252BA5AA4();
  }
  else
  {
    sub_252BA1114(0, v16, v28, a4, a7);
  }
  return (uint64_t)v23;
}

char *sub_252BA0C48(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_252AC3A24(&qword_26B2310A0);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_252B7B5C8((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252BA1228(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_252BA0D40(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_252BA0F2C(a1, a2, a3, a4, &qword_269C43840, &qword_269C43838, (void (*)(unint64_t, uint64_t, unint64_t))sub_252B7B62C);
}

void sub_252BA0D68(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_252BA590C();
    if (v7 != v8)
    {
      sub_252BA5ADC();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_252BA58FC();
    }
  }
  else
  {
    int64_t v6 = a2;
  }
  int64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    int64_t v10 = *(void *)(a4 + 16);
  }
  else {
    int64_t v10 = v6;
  }
  if (v10)
  {
    sub_252AC3A24(&qword_26B230FB8);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  if (a1)
  {
    sub_252B7B858((char *)(a4 + 32), v9, v13);
    sub_252BA5AA4();
  }
  else
  {
    sub_252BA1328(0, v9, v13, a4);
  }
}

void sub_252BA0E30(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_252BA590C();
    if (v7 != v8)
    {
      sub_252BA5ADC();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_252BA58FC();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_252AC3A24(&qword_269C44050);
    size_t v11 = (void *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    size_t v11 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v11 + 4);
  if (a1)
  {
    sub_252B7B8C8(a4 + 32, v9, v13);
    sub_252BA5AA4();
  }
  else
  {
    sub_252BA1418(0, v9, v13, a4);
  }
}

uint64_t sub_252BA0F04(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_252BA0F2C(a1, a2, a3, a4, &qword_26B231748, &qword_26B231438, (void (*)(unint64_t, uint64_t, unint64_t))sub_252B7B928);
}

uint64_t sub_252BA0F2C(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t *a6, void (*a7)(unint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    sub_252BA590C();
    if (v12 != v13)
    {
      sub_252BA5ADC();
      if (v12)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_252BA58FC();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v21 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_252AC3A24(a5);
  uint64_t v16 = sub_252AC3A24(a6);
  sub_252AEDBEC(v16);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)swift_allocObject();
  size_t v22 = j__malloc_size(v21);
  if (!v18 || (v22 - v20 == 0x8000000000000000 ? (BOOL v23 = v18 == -1) : (BOOL v23 = 0), v23))
  {
LABEL_23:
    sub_252B7E38C();
    uint64_t result = sub_252D1A368();
    __break(1u);
    return result;
  }
  v21[2] = v14;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v18);
LABEL_18:
  uint64_t v24 = *(void *)(sub_252AC3A24(a6) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (unint64_t)v21 + v25;
  if (a1)
  {
    a7(a4 + v25, v14, v26);
    sub_252BA5AA4();
  }
  else
  {
    sub_252BA1510(0, v14, v26, a4, a6);
  }
  return (uint64_t)v21;
}

uint64_t sub_252BA1114(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if (((a2 - a1) & 0x8000000000000000) == 0)
  {
    a5(0);
    sub_252BA5828();
    sub_252BA5A14();
    if (v8 || v7 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return a1;
    }
  }
  sub_252B7E38C();
  uint64_t result = sub_252D1A3C8();
  __break(1u);
  return result;
}

uint64_t sub_252BA1228(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_252D1A3C8();
  __break(1u);
  return result;
}

char *sub_252BA1328(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_252D1A3C8();
  __break(1u);
  return result;
}

uint64_t sub_252BA1418(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_252D1A3C8();
  __break(1u);
  return result;
}

uint64_t sub_252BA1510(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if (((a2 - a1) & 0x8000000000000000) == 0)
  {
    sub_252AC3A24(a5);
    sub_252BA5828();
    sub_252BA5A14();
    if (v8 || v7 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return a1;
    }
  }
  sub_252B7E38C();
  uint64_t result = sub_252D1A3C8();
  __break(1u);
  return result;
}

unint64_t sub_252BA1620()
{
  unint64_t result = qword_269C43E48;
  if (!qword_269C43E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E48);
  }
  return result;
}

unint64_t sub_252BA166C()
{
  unint64_t result = qword_269C43E50;
  if (!qword_269C43E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E50);
  }
  return result;
}

unint64_t sub_252BA16B8()
{
  unint64_t result = qword_269C43E60;
  if (!qword_269C43E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E60);
  }
  return result;
}

unint64_t sub_252BA1704()
{
  unint64_t result = qword_26B234220;
  if (!qword_26B234220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234220);
  }
  return result;
}

uint64_t sub_252BA1750(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_252AEA304();
  uint64_t v4 = sub_252AEA3DC();
  v5(v4);
  return a2;
}

uint64_t sub_252BA17AC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return a1;
}

unint64_t sub_252BA1800()
{
  unint64_t result = qword_269C43E90;
  if (!qword_269C43E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E90);
  }
  return result;
}

unint64_t sub_252BA184C()
{
  unint64_t result = qword_269C43E98;
  if (!qword_269C43E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43E98);
  }
  return result;
}

unint64_t sub_252BA1898()
{
  unint64_t result = qword_269C43EA0;
  if (!qword_269C43EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43EA0);
  }
  return result;
}

unint64_t sub_252BA18E4()
{
  unint64_t result = qword_269C43EA8;
  if (!qword_269C43EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43EA8);
  }
  return result;
}

unint64_t sub_252BA1930()
{
  unint64_t result = qword_269C43ED8;
  if (!qword_269C43ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43ED8);
  }
  return result;
}

unint64_t sub_252BA197C()
{
  unint64_t result = qword_269C43EE0;
  if (!qword_269C43EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43EE0);
  }
  return result;
}

unint64_t sub_252BA19C8()
{
  unint64_t result = qword_269C43EF0;
  if (!qword_269C43EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43EF0);
  }
  return result;
}

unint64_t sub_252BA1A14()
{
  unint64_t result = qword_269C43F00;
  if (!qword_269C43F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F00);
  }
  return result;
}

unint64_t sub_252BA1A60()
{
  unint64_t result = qword_269C43F08;
  if (!qword_269C43F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F08);
  }
  return result;
}

unint64_t sub_252BA1AAC()
{
  unint64_t result = qword_269C43F18;
  if (!qword_269C43F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F18);
  }
  return result;
}

unint64_t sub_252BA1AF8()
{
  unint64_t result = qword_26B234118;
  if (!qword_26B234118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234118);
  }
  return result;
}

unint64_t sub_252BA1B44()
{
  unint64_t result = qword_26B231540;
  if (!qword_26B231540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231540);
  }
  return result;
}

unint64_t sub_252BA1B90()
{
  unint64_t result = qword_26B231DC8;
  if (!qword_26B231DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231DC8);
  }
  return result;
}

unint64_t sub_252BA1BDC()
{
  unint64_t result = qword_26B234640;
  if (!qword_26B234640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234640);
  }
  return result;
}

unint64_t sub_252BA1C28()
{
  unint64_t result = qword_26B231470;
  if (!qword_26B231470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231470);
  }
  return result;
}

unint64_t sub_252BA1C74(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    unint64_t v5 = v4;
    sub_252AEA288(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252BA1CDC()
{
  unint64_t result = qword_26B231C70;
  if (!qword_26B231C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C70);
  }
  return result;
}

unint64_t sub_252BA1D28()
{
  unint64_t result = qword_26B234200;
  if (!qword_26B234200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234200);
  }
  return result;
}

unint64_t sub_252BA1D74()
{
  unint64_t result = qword_26B231440;
  if (!qword_26B231440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231440);
  }
  return result;
}

unint64_t sub_252BA1DC0()
{
  unint64_t result = qword_26B231C38;
  if (!qword_26B231C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C38);
  }
  return result;
}

unint64_t sub_252BA1E10()
{
  unint64_t result = qword_26B230E40;
  if (!qword_26B230E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B230E40);
  }
  return result;
}

unint64_t sub_252BA1E5C()
{
  return sub_252BA1E98((uint64_t)&unk_269C43F20);
}

unint64_t sub_252BA1E98(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    sub_252AEA288(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_252BA1EDC()
{
  unint64_t result = qword_269C43F30;
  if (!qword_269C43F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F30);
  }
  return result;
}

unint64_t sub_252BA1F28()
{
  return sub_252B9ACD4((uint64_t)&unk_269C43F38);
}

unint64_t sub_252BA1F74()
{
  unint64_t result = qword_269C43F40;
  if (!qword_269C43F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F40);
  }
  return result;
}

unint64_t sub_252BA1FC4()
{
  unint64_t result = qword_269C43F48;
  if (!qword_269C43F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F48);
  }
  return result;
}

unint64_t sub_252BA2014()
{
  unint64_t result = qword_269C43F50;
  if (!qword_269C43F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F50);
  }
  return result;
}

uint64_t sub_252BA2064(unsigned int *a1)
{
  return DeviceDetails.DeviceType.rawValue.setter(*a1);
}

void *initializeBufferWithCopyOfBuffer for SessionConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[8];
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for LocaleSettings(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_252AC3A24(&qword_26B232128);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_252D195E8();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v9, v10, v14);
      v15(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v14);
      v15(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v14);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v16 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(_WORD *)uint64_t v17 = *(_WORD *)v18;
    uint64_t v19 = a3[11];
    uint64_t v20 = a3[12];
    uint64_t v21 = *(uint64_t *)((char *)a2 + v19);
    v17[2] = *(unsigned char *)(v18 + 2);
    *(void *)((char *)v4 + v19) = v21;
    size_t v22 = (char *)v4 + v20;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 8);
    *(void *)size_t v22 = *(uint64_t *)((char *)a2 + v20);
    *((void *)v22 + 1) = v23;
    *((_DWORD *)v22 + 4) = *(_DWORD *)((char *)a2 + v20 + 16);
    uint64_t v24 = a3[13];
    unint64_t v25 = (void *)((char *)v4 + v24);
    unint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for LocaleSettings(0);
  if (!_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v4, 1, v5))
  {
    uint64_t v6 = sub_252D195E8();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 20), v6);
    v7(v4 + *(int *)(v5 + 24), v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for LocaleSettings(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_252AC3A24(&qword_26B232128);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_252D195E8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v8, v9, v12);
    v13(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v12);
    v13(&v8[*(int *)(v10 + 24)], &v9[*(int *)(v10 + 24)], v12);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_WORD *)uint64_t v15 = *(_WORD *)v16;
  uint64_t v17 = a3[11];
  uint64_t v18 = a3[12];
  uint64_t v19 = *(void *)(a2 + v17);
  *(unsigned char *)(v15 + 2) = *(unsigned char *)(v16 + 2);
  *(void *)(a1 + v17) = v19;
  uint64_t v20 = a1 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *(void *)uint64_t v20 = *(void *)(a2 + v18);
  *(void *)(v20 + 8) = v21;
  *(_DWORD *)(v20 + 16) = *(_DWORD *)(a2 + v18 + 16);
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for LocaleSettings(0);
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v26 = sub_252D195E8();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24);
      v27(v7, v8, v26);
      v27(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v26);
      v27(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v26);
      goto LABEL_7;
    }
    sub_252BA17AC((uint64_t)v7, (void (*)(void))type metadata accessor for LocaleSettings);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_26B232128);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v12 = sub_252D195E8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v7, v8, v12);
  v13(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v12);
  v13(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v12);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (__int16 *)(a2 + v15);
  __int16 v18 = *v17;
  *(unsigned char *)(v16 + 2) = *((unsigned char *)v17 + 2);
  *(_WORD *)uint64_t v16 = v18;
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(void *)(v20 + 8) = *(void *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v20 + 16) = *(_DWORD *)(v21 + 16);
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for LocaleSettings(0);
  if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_252AC3A24(&qword_26B232128);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_252D195E8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
    v12(v7, v8, v11);
    v12(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v11);
    v12(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v11);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_WORD *)uint64_t v14 = *(_WORD *)v15;
  *(unsigned char *)(v14 + 2) = *(unsigned char *)(v15 + 2);
  uint64_t v16 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_DWORD *)(v17 + 16) = *(_DWORD *)(v18 + 16);
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for LocaleSettings(0);
  int v10 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v28 = sub_252D195E8();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40);
      v29(v7, v8, v28);
      v29(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v28);
      v29(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v28);
      goto LABEL_7;
    }
    sub_252BA17AC((uint64_t)v7, (void (*)(void))type metadata accessor for LocaleSettings);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v14 = sub_252AC3A24(&qword_26B232128);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v12 = sub_252D195E8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v7, v8, v12);
  v13(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v12);
  v13(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v12);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_WORD *)uint64_t v16 = *(_WORD *)v17;
  *(unsigned char *)(v16 + 2) = *(unsigned char *)(v17 + 2);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252BA2CA4);
}

uint64_t sub_252BA2CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_252AC3A24(&qword_26B232128);
    uint64_t v10 = a1 + *(int *)(a3 + 32);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252BA2D50);
}

uint64_t sub_252BA2D50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_252AC3A24(&qword_26B232128);
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_252BA2DD4()
{
  sub_252BA2EA8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_252BA2EA8()
{
  if (!qword_26B234238)
  {
    type metadata accessor for LocaleSettings(255);
    unint64_t v0 = sub_252D1A178();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B234238);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SessionConfiguration.PlannerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252BA2FCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SessionConfiguration.PlannerType()
{
}

void type metadata accessor for SessionConfiguration.ParticipantSettings()
{
}

void type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for LocaleSettings(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_252D195E8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
  }
  return a1;
}

uint64_t destroy for LocaleSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D195E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + *(int *)(a2 + 20), v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t initializeWithCopy for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D195E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t assignWithCopy for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D195E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t initializeWithTake for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D195E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t assignWithTake for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_252D195E8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_252BA34C0);
}

uint64_t sub_252BA34C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D195E8();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocaleSettings(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_252BA351C);
}

uint64_t sub_252BA351C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_252D195E8();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(a1, a2, a2, v4);
}

uint64_t sub_252BA3568()
{
  uint64_t result = sub_252D195E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DebuggerSettings(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DebuggerSettings(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        goto LABEL_5;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        int v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 2;
  int v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DebuggerSettings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

void type metadata accessor for DebuggerSettings()
{
}

void type metadata accessor for DebuggerSettings.DebuggerMode()
{
}

uint64_t sub_252BA3730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for DeviceDetails(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDetails(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DeviceDetails()
{
}

void type metadata accessor for DeviceDetails.DeviceType()
{
}

void type metadata accessor for AuditToken()
{
}

void type metadata accessor for ClientIdentityChain()
{
}

uint64_t destroy for ClientIdentity()
{
  return swift_release();
}

uint64_t initializeWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClientIdentity(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientIdentity(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 40);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

void type metadata accessor for ClientIdentity()
{
}

void type metadata accessor for MachIdentityToken()
{
}

uint64_t sub_252BA3A68()
{
  uint64_t result = sub_252D1A178();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_252BA3AF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_252BA3C14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_252BA3C90(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (v6)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_252BA3D54(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v5);
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

void *sub_252BA3E7C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (v6)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_252BA3F40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, 1, v5);
  int v7 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, 0, 1, v5);
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

uint64_t sub_252BA4068(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 > 3) {
            LODWORD(v7) = 4;
          }
          switch((int)v7)
          {
            case 2:
              LODWORD(v7) = *a1;
              break;
            case 3:
              LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v7) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v7) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v7 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v14 = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)a1, v5, v4);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_252BA41EC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v9) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v10;
  unsigned int v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        int v6 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v15 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v18 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x252BA440CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        if (v9 >= 2)
        {
          uint64_t v19 = a2 + 1;
          _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)a1, v19, v9, v7);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CodableIgnored()
{
  return sub_252AC6680();
}

ValueMetadata *type metadata accessor for ClientIdentity.CodingKeys()
{
  return &type metadata for ClientIdentity.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientIdentityChain.CodingKeys()
{
  return &type metadata for ClientIdentityChain.CodingKeys;
}

ValueMetadata *type metadata accessor for AuditToken.CodingKeys()
{
  return &type metadata for AuditToken.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceDetails.CodingKeys()
{
  return &type metadata for DeviceDetails.CodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.CodingKeys()
{
  return &type metadata for DebuggerSettings.CodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.CodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.NoneCodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.DebuggingAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys()
{
  return &type metadata for DebuggerSettings.DebuggerMode.UncheckedDebuggingAllowedCodingKeys;
}

unsigned char *_s16IntelligenceFlow16DebuggerSettingsV12DebuggerModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252BA45ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocaleSettings.CodingKeys()
{
  return &type metadata for LocaleSettings.CodingKeys;
}

unsigned char *_s16IntelligenceFlow19ClientIdentityChainV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x252BA4680);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.CodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.CodingKeys;
}

unsigned char *_s16IntelligenceFlow20SessionConfigurationV19ParticipantSettingsV18SemanticPreferenceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252BA4784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys()
{
  return &type metadata for SessionConfiguration.ParticipantSettings.SemanticPreference.PlannerOnlyCodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x252BA4930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.CodingKeys()
{
  return &type metadata for SessionConfiguration.CodingKeys;
}

unint64_t sub_252BA496C()
{
  unint64_t result = qword_269C43F58;
  if (!qword_269C43F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F58);
  }
  return result;
}

unint64_t sub_252BA49BC()
{
  unint64_t result = qword_269C43F60;
  if (!qword_269C43F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F60);
  }
  return result;
}

unint64_t sub_252BA4A0C()
{
  unint64_t result = qword_269C43F68;
  if (!qword_269C43F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F68);
  }
  return result;
}

unint64_t sub_252BA4A5C()
{
  unint64_t result = qword_269C43F70;
  if (!qword_269C43F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F70);
  }
  return result;
}

unint64_t sub_252BA4AAC()
{
  unint64_t result = qword_269C43F78;
  if (!qword_269C43F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F78);
  }
  return result;
}

unint64_t sub_252BA4AFC()
{
  unint64_t result = qword_269C43F80;
  if (!qword_269C43F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F80);
  }
  return result;
}

unint64_t sub_252BA4B4C()
{
  unint64_t result = qword_269C43F88;
  if (!qword_269C43F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F88);
  }
  return result;
}

unint64_t sub_252BA4B9C()
{
  unint64_t result = qword_269C43F90;
  if (!qword_269C43F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F90);
  }
  return result;
}

unint64_t sub_252BA4BEC()
{
  unint64_t result = qword_269C43F98;
  if (!qword_269C43F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43F98);
  }
  return result;
}

unint64_t sub_252BA4C3C()
{
  unint64_t result = qword_269C43FA0;
  if (!qword_269C43FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FA0);
  }
  return result;
}

unint64_t sub_252BA4C8C()
{
  unint64_t result = qword_26B234210;
  if (!qword_26B234210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234210);
  }
  return result;
}

unint64_t sub_252BA4CDC()
{
  unint64_t result = qword_26B234208;
  if (!qword_26B234208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234208);
  }
  return result;
}

unint64_t sub_252BA4D2C()
{
  unint64_t result = qword_26B232150;
  if (!qword_26B232150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B232150);
  }
  return result;
}

unint64_t sub_252BA4D7C()
{
  unint64_t result = qword_26B234648;
  if (!qword_26B234648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234648);
  }
  return result;
}

unint64_t sub_252BA4DCC()
{
  unint64_t result = qword_26B234128;
  if (!qword_26B234128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234128);
  }
  return result;
}

unint64_t sub_252BA4E1C()
{
  unint64_t result = qword_26B234120;
  if (!qword_26B234120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234120);
  }
  return result;
}

unint64_t sub_252BA4E6C()
{
  unint64_t result = qword_269C43FA8;
  if (!qword_269C43FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FA8);
  }
  return result;
}

unint64_t sub_252BA4EBC()
{
  unint64_t result = qword_269C43FB0;
  if (!qword_269C43FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FB0);
  }
  return result;
}

unint64_t sub_252BA4F0C()
{
  unint64_t result = qword_269C43FB8;
  if (!qword_269C43FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FB8);
  }
  return result;
}

unint64_t sub_252BA4F5C()
{
  unint64_t result = qword_269C43FC0;
  if (!qword_269C43FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FC0);
  }
  return result;
}

unint64_t sub_252BA4FAC()
{
  unint64_t result = qword_269C43FC8;
  if (!qword_269C43FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FC8);
  }
  return result;
}

unint64_t sub_252BA4FFC()
{
  unint64_t result = qword_269C43FD0;
  if (!qword_269C43FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FD0);
  }
  return result;
}

unint64_t sub_252BA504C()
{
  unint64_t result = qword_269C43FD8;
  if (!qword_269C43FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FD8);
  }
  return result;
}

unint64_t sub_252BA509C()
{
  unint64_t result = qword_269C43FE0;
  if (!qword_269C43FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FE0);
  }
  return result;
}

unint64_t sub_252BA50EC()
{
  unint64_t result = qword_269C43FE8;
  if (!qword_269C43FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FE8);
  }
  return result;
}

unint64_t sub_252BA513C()
{
  unint64_t result = qword_269C43FF0;
  if (!qword_269C43FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FF0);
  }
  return result;
}

unint64_t sub_252BA518C()
{
  unint64_t result = qword_269C43FF8;
  if (!qword_269C43FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C43FF8);
  }
  return result;
}

unint64_t sub_252BA51DC()
{
  unint64_t result = qword_269C44000;
  if (!qword_269C44000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44000);
  }
  return result;
}

unint64_t sub_252BA522C()
{
  unint64_t result = qword_26B234230;
  if (!qword_26B234230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234230);
  }
  return result;
}

unint64_t sub_252BA527C()
{
  unint64_t result = qword_26B234228;
  if (!qword_26B234228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234228);
  }
  return result;
}

unint64_t sub_252BA52CC()
{
  unint64_t result = qword_269C44008;
  if (!qword_269C44008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44008);
  }
  return result;
}

unint64_t sub_252BA531C()
{
  unint64_t result = qword_269C44010;
  if (!qword_269C44010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44010);
  }
  return result;
}

unint64_t sub_252BA536C()
{
  unint64_t result = qword_269C44018;
  if (!qword_269C44018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44018);
  }
  return result;
}

unint64_t sub_252BA53BC()
{
  unint64_t result = qword_269C44020;
  if (!qword_269C44020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44020);
  }
  return result;
}

unint64_t sub_252BA540C()
{
  unint64_t result = qword_269C44028;
  if (!qword_269C44028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44028);
  }
  return result;
}

unint64_t sub_252BA545C()
{
  unint64_t result = qword_269C44030;
  if (!qword_269C44030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44030);
  }
  return result;
}

unint64_t sub_252BA54AC()
{
  unint64_t result = qword_269C44038;
  if (!qword_269C44038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44038);
  }
  return result;
}

unint64_t sub_252BA54FC()
{
  unint64_t result = qword_269C44040;
  if (!qword_269C44040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44040);
  }
  return result;
}

unint64_t sub_252BA554C()
{
  unint64_t result = qword_26B232158;
  if (!qword_26B232158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B232158);
  }
  return result;
}

unint64_t sub_252BA559C()
{
  unint64_t result = qword_26B234678;
  if (!qword_26B234678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234678);
  }
  return result;
}

unint64_t sub_252BA55E8()
{
  unint64_t result = qword_269C44048;
  if (!qword_269C44048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C44048);
  }
  return result;
}

unint64_t sub_252BA5634()
{
  unint64_t result = qword_26B234680;
  if (!qword_26B234680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234680);
  }
  return result;
}

uint64_t sub_252BA5684@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 2;
  unsigned int v4 = (int *)type metadata accessor for SessionConfiguration(0);
  uint64_t v5 = (uint64_t)&v1[v4[8]];
  uint64_t v6 = type metadata accessor for LocaleSettings(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v5, 1, 1, v6);
  v1[v4[9]] = 2;
  BOOL v7 = &v1[v4[10]];
  v7[2] = 0;
  *(_WORD *)BOOL v7 = 512;
  *(void *)&v1[v4[11]] = 0;
  uint64_t v8 = &v1[v4[12]];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *((_DWORD *)v8 + 4) = 0;
  uint64_t v9 = &v1[v4[13]];
  void *v9 = 0;
  v9[1] = 0;
  unsigned char *v1 = v3;
  return sub_252B99C70(v2, v5);
}

uint64_t sub_252BA572C()
{
  return v0;
}

uint64_t sub_252BA5744()
{
  return sub_252D1A518();
}

uint64_t sub_252BA5768()
{
  uint64_t v6 = &v1[v2[10]];
  v6[2] = 0;
  *(_WORD *)uint64_t v6 = 512;
  *(void *)&v1[v2[11]] = 0;
  BOOL v7 = &v1[v2[12]];
  *(void *)BOOL v7 = 0;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 0;
  uint64_t v8 = &v1[v2[13]];
  void *v8 = 0;
  v8[1] = 0;
  unsigned char *v1 = v4;
  return sub_252B99C70(v0, v3);
}

void sub_252BA57BC()
{
  uint64_t v3 = &v0[v1[10]];
  v3[2] = 0;
  *(_WORD *)uint64_t v3 = 512;
  *(void *)&v0[v1[11]] = 0;
  char v4 = &v0[v1[12]];
  *(void *)char v4 = 0;
  *((void *)v4 + 1) = 0;
  *((_DWORD *)v4 + 4) = 0;
  uint64_t v5 = &v0[v1[13]];
  void *v5 = 0;
  v5[1] = 0;
  unsigned char *v0 = v2;
}

uint64_t sub_252BA57FC()
{
  return sub_252D1A438();
}

void sub_252BA5820(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_252BA5844()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SessionConfiguration(0) + 32);
  uint64_t v2 = type metadata accessor for LocaleSettings(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, v2);
}

uint64_t sub_252BA5888()
{
  return sub_252D1A718();
}

uint64_t sub_252BA58AC()
{
  return v0;
}

uint64_t sub_252BA58C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *char v4 = result;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return result;
}

uint64_t sub_252BA592C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 32);
  uint64_t v3 = type metadata accessor for LocaleSettings(0);
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, 1, 1, v3);
}

uint64_t sub_252BA5964()
{
  return v0;
}

uint64_t sub_252BA5980()
{
  return type metadata accessor for SessionConfiguration(0);
}

uint64_t sub_252BA5998(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void), uint64_t a7, void (*a8)(unint64_t, uint64_t, unint64_t))
{
  return sub_252BA0A54(a1, a2, a3, a4, a5, (uint64_t (*)(void))a6, a6, a8);
}

uint64_t sub_252BA59A0()
{
  return 0;
}

uint64_t sub_252BA59BC()
{
  return sub_252D19CD8();
}

void sub_252BA59D8(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 2) = 0;
  *(_WORD *)a1 = 512;
}

uint64_t sub_252BA59E8()
{
  return sub_252D19CD8();
}

uint64_t sub_252BA5A2C()
{
  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, v0);
}

uint64_t sub_252BA5A4C()
{
  return v0;
}

uint64_t sub_252BA5A60()
{
  return sub_252D195E8();
}

uint64_t sub_252BA5A78()
{
  return sub_252D1A6B8();
}

uint64_t sub_252BA5A90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = result;
  *(_DWORD *)(v1 + 16) = v4;
  return result;
}

uint64_t sub_252BA5AA4()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_252BA5ABC()
{
  return sub_252D1A498();
}

uint64_t sub_252BA5AE8()
{
  return v0 - 96;
}

uint64_t sub_252BA5AFC()
{
  return sub_252D1A738();
}

uint64_t sub_252BA5B1C()
{
  return type metadata accessor for SessionConfiguration(0);
}

void SessionClientMessage.init(sessionId:clientRequestId:payload:)()
{
  sub_252B23290();
  sub_252CB982C();
  sub_252D19588();
  sub_252AEDBD0();
  sub_252B233D8();
  sub_252B4C1F4();
  v3();
  uint64_t v4 = type metadata accessor for SessionClientMessage(0);
  sub_252BA661C();
  if (!v0)
  {
    uint64_t v1 = 0;
    unint64_t v0 = 0xE000000000000000;
  }
  sub_252BA6670();
  sub_252CB8ACC();
  v5();
  uint64_t v6 = (void *)(v2 + *(int *)(v4 + 20));
  *uint64_t v6 = v1;
  v6[1] = v0;
  sub_252B232A4();
}

uint64_t type metadata accessor for SessionClientMessage(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2311B0);
}

uint64_t type metadata accessor for MessagePayload(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B232130);
}

uint64_t StatementID.init(index:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t AnySessionMessage.inner.getter()
{
  uint64_t v0 = sub_252B4C614();
  return sub_252C0B318(v0, v1);
}

uint64_t AnySessionMessage.sessionId.getter()
{
  sub_252AC3A68(v0, v0[3]);
  sub_252CB94A4();
  return v1();
}

uint64_t AnySessionMessage.clientRequestId.getter()
{
  sub_252AC3A68(v0, v0[3]);
  uint64_t v1 = sub_252AFC650();
  return v2(v1);
}

uint64_t AnySessionMessage.payload.getter()
{
  sub_252AC3A68(v0, v0[3]);
  sub_252CB94A4();
  return v1();
}

uint64_t AnySessionMessage.init<A>(_:)()
{
  sub_252CB9724();
  v2[3] = v0;
  v2[4] = v1;
  sub_252BA5DE4(v2);
  sub_252B0014C();
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 32);

  return v4();
}

uint64_t *sub_252BA5DE4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t SessionClientMessage.sessionId.getter()
{
  return sub_252C049C8();
}

uint64_t SessionClientMessage.clientRequestId.getter()
{
  return sub_252BB5CD8();
}

uint64_t SessionClientMessage.payload.getter()
{
  return sub_252C04B58();
}

uint64_t sub_252BA5EB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BA6030(char a1)
{
  if (!a1) {
    return 0x496E6F6973736573;
  }
  if (a1 == 1) {
    return 0x6552746E65696C63;
  }
  return 0x64616F6C796170;
}

uint64_t sub_252BA6098()
{
  return sub_252BA6030(*v0);
}

uint64_t sub_252BA60A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA5EB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA60C8(uint64_t a1)
{
  unint64_t v2 = sub_252BA62A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA6104(uint64_t a1)
{
  unint64_t v2 = sub_252BA62A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionClientMessage.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44098);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252BA62A4();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for SessionClientMessage(0);
    sub_252CB8770();
    uint64_t v2 = sub_252CB92BC();
    type metadata accessor for MessagePayload(v2);
    sub_252BA62F0((uint64_t)&unk_26B231CA8);
    sub_252B98230();
  }
  uint64_t v3 = sub_252AF4620();
  v4(v3);
  sub_252CB8A6C();
  sub_252B232F8();
}

unint64_t sub_252BA62A4()
{
  unint64_t result = qword_269C440A0;
  if (!qword_269C440A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C440A0);
  }
  return result;
}

unint64_t sub_252BA62F0(uint64_t a1)
{
  unint64_t result = sub_252B5FD60(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void SessionClientMessage.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = sub_252CBA9E8(v2);
  type metadata accessor for MessagePayload(v3);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  sub_252AEDD2C();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B230DC(v6, v14);
  sub_252AC3A24(&qword_269C440A8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252B9835C();
  type metadata accessor for SessionClientMessage(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252B5FD8C(v1);
  sub_252BA62A4();
  sub_252CB9A64();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v1);
  }
  else
  {
    sub_252CBA77C();
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB8CF8();
    sub_252B7E53C();
    v10();
    uint64_t v11 = sub_252CB967C();
    sub_252CB95D8(v11, v12);
    sub_252BA62F0((uint64_t)&unk_26B231490);
    sub_252CB9000();
    sub_252B5F53C();
    v13();
    sub_252CBB82C();
    sub_252C06474();
    sub_252CBC9C8();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v1);
    sub_252BA6670();
  }
  sub_252B98814();
  sub_252AF4368();
}

uint64_t sub_252BA661C()
{
  uint64_t v1 = sub_252B23194();
  v2(v1);
  sub_252AEA304();
  sub_252B4C1F4();
  v3();
  return v0;
}

uint64_t sub_252BA6670()
{
  uint64_t v1 = sub_252B4C0D0();
  v2(v1);
  sub_252AEA304();
  sub_252B5F53C();
  v3();
  return v0;
}

void sub_252BA66C0()
{
}

void sub_252BA66D8()
{
}

uint64_t SessionServerMessage.sessionId.getter()
{
  return sub_252C049C8();
}

uint64_t SessionServerMessage.eventId.getter()
{
  return sub_252BA7F84();
}

uint64_t type metadata accessor for SessionServerMessage(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2346B0);
}

uint64_t SessionServerMessage.queryEventId.getter()
{
  return sub_252BA6780();
}

uint64_t sub_252BA6780()
{
  uint64_t v0 = sub_252CB899C();
  uint64_t v2 = v1(v0);
  return sub_252CBB7F8(*(int *)(v2 + 24));
}

uint64_t SessionServerMessage.clientRequestId.getter()
{
  return sub_252BB2FCC();
}

uint64_t SessionServerMessage.payload.getter()
{
  return sub_252BDD908();
}

uint64_t SessionServerMessage.clientSessionId.getter()
{
  return sub_252AEA3DC();
}

uint64_t SessionServerMessage.timestamp.getter()
{
  uint64_t v0 = sub_252B4C488();
  type metadata accessor for SessionServerMessage(v0);
  sub_252CBB79C();
  sub_252D194F8();
  sub_252AEA304();
  uint64_t v1 = sub_252AEA3DC();

  return v2(v1);
}

uint64_t SessionServerMessage.init(sessionId:eventId:queryEventId:clientRequestId:clientSessionId:timestamp:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_252AFC8E4();
  uint64_t v40 = v20;
  uint64_t v41 = v21;
  uint64_t v39 = v22;
  uint64_t v24 = v23;
  sub_252CBB760();
  sub_252D19588();
  sub_252AEA304();
  uint64_t v26 = *(void (**)(void))(v25 + 32);
  sub_252CBC444();
  v26();
  uint64_t v27 = type metadata accessor for SessionServerMessage(0);
  sub_252CBC470(v27);
  sub_252CBC444();
  v26();
  sub_252CB7E4C(v18, v16 + v19[6], &qword_26B2320E8);
  sub_252C06474();
  uint64_t v28 = (void *)(v16 + v19[7]);
  void *v28 = v17;
  v28[1] = v24;
  uint64_t v29 = (void *)(v16 + v19[9]);
  *uint64_t v29 = v39;
  v29[1] = v40;
  sub_252CBC438();
  sub_252D194F8();
  sub_252AEA304();
  sub_252AFC918();
  return v33(v30, v31, v32, v33, v34, v35, v36, v37, a9, v39, v40, v41, a13, a14, a15, a16);
}

uint64_t SessionServerMessage.init(sessionId:eventId:clientRequestId:clientSessionId:timestamp:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_252AFC698();
  uint64_t v38 = v18;
  uint64_t v39 = v19;
  uint64_t v21 = v20;
  sub_252CBB760();
  uint64_t v22 = sub_252D19588();
  sub_252AEA304();
  uint64_t v24 = *(void (**)(uint64_t, int *, uint64_t))(v23 + 32);
  v24(v14, v17, v22);
  uint64_t v25 = type metadata accessor for SessionServerMessage(0);
  uint64_t v26 = sub_252CBC470(v25);
  ((void (*)(uint64_t))v24)(v26);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14 + v17[6], 1, 1, v22);
  sub_252C06474();
  uint64_t v27 = (void *)(v14 + v17[7]);
  *uint64_t v27 = v16;
  v27[1] = v15;
  uint64_t v28 = (void *)(v14 + v17[9]);
  void *v28 = v21;
  v28[1] = v38;
  sub_252D194F8();
  sub_252AEA304();
  sub_252B4C998();
  sub_252AFC67C();
  return v32(v29, v30, v31, v32, v33, v34, v35, v36, v38, v39, a11, a12, a13, a14);
}

void SessionServerMessage.init(sessionId:clientRequestId:clientSessionId:timestamp:payload:)()
{
  sub_252AFC730();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_252D19588();
  sub_252AEDBD0();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_252B5F688();
  sub_252CBC8CC();
  sub_252AEDE38();
  v15();
  _s16IntelligenceFlow15SessionClientIDVACycfC_0();
  uint64_t v16 = sub_252CBA168();
  v17(v16);
  uint64_t v18 = (int *)type metadata accessor for SessionServerMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v10 + v18[5], v0, v11);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v10 + v18[6], 1, 1, v11);
  sub_252C06474();
  uint64_t v19 = (void *)(v10 + v18[7]);
  *uint64_t v19 = v8;
  v19[1] = v6;
  uint64_t v20 = (void *)(v10 + v18[9]);
  *uint64_t v20 = v4;
  v20[1] = v2;
  sub_252D194F8();
  sub_252AEA304();
  sub_252B4C1CC();
  v21();
  sub_252AFC718();
}

uint64_t sub_252BA6C6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6576457972657571 && a2 == 0xEC0000006449746ELL;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_252D1A5D8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252BA6FAC(char a1)
{
  uint64_t result = 0x496E6F6973736573;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x49746E657665;
      goto LABEL_6;
    case 2:
      uint64_t result = 0x6576457972657571;
      break;
    case 3:
      uint64_t result = 0x6552746E65696C63;
      break;
    case 4:
      uint64_t v3 = 0x616F6C796170;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
      break;
    case 5:
      uint64_t result = 0x6553746E65696C63;
      break;
    case 6:
      uint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BA70B4()
{
  return sub_252BA6FAC(*v0);
}

uint64_t sub_252BA70BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA6C6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA70E4(uint64_t a1)
{
  unint64_t v2 = sub_252BA73D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA7120(uint64_t a1)
{
  unint64_t v2 = sub_252BA73D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SessionServerMessage.encode(to:)()
{
  sub_252AF4380();
  sub_252CB8F90();
  sub_252AC3A24(&qword_26B2311F8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252BA73D8();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252B982A8();
  if (!v0)
  {
    type metadata accessor for SessionServerMessage(0);
    sub_252B982A8();
    sub_252CB90AC();
    sub_252CB8868();
    uint64_t v2 = sub_252CBB664();
    type metadata accessor for MessagePayload(v2);
    sub_252BA62F0((uint64_t)&unk_26B231CA8);
    sub_252B982A8();
    sub_252CBC2A0();
    sub_252CB8868();
    sub_252CBC27C();
    sub_252D194F8();
    sub_252BA62F0((uint64_t)&unk_26B231C08);
    sub_252B982A8();
  }
  sub_252B5F658();
  v3();
  sub_252B5FBC4();
  sub_252AF4368();
}

unint64_t sub_252BA73D8()
{
  unint64_t result = qword_26B234698;
  if (!qword_26B234698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B234698);
  }
  return result;
}

void SessionServerMessage.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  sub_252D194F8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = sub_252CBA94C(v6, v30);
  type metadata accessor for MessagePayload(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252CB82C0(v9, v31);
  uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v11 = sub_252AEA368(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_252CB96E0();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  sub_252CB8858();
  MEMORY[0x270FA5388](v14);
  sub_252CBA598();
  sub_252AC3A24(&qword_26B231098);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_252B4C76C();
  uint64_t v33 = (int *)type metadata accessor for SessionServerMessage(v16);
  sub_252AEA304();
  MEMORY[0x270FA5388](v17);
  sub_252AEDE70();
  uint64_t v19 = v18;
  sub_252AC3A68(v4, v4[3]);
  sub_252BA73D8();
  sub_252CBC6E8();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CBBC34();
    sub_252CBC188();
    uint64_t v20 = sub_252CBA79C();
    uint64_t v32 = v21;
    ((void (*)(uint64_t))v21)(v20);
    sub_252CBC188();
    v32(v19 + v33[5], v2, v12);
    sub_252CBA808();
    sub_252CBBC34();
    sub_252D1A438();
    sub_252CB7E4C(v1, v19 + v33[6], &qword_26B2320E8);
    uint64_t v22 = sub_252D1A448();
    uint64_t v23 = (uint64_t *)(v19 + v33[7]);
    *uint64_t v23 = v22;
    v23[1] = v24;
    sub_252BA62F0((uint64_t)&unk_26B231490);
    sub_252D1A498();
    sub_252C06474();
    uint64_t v25 = sub_252D1A448();
    uint64_t v26 = (uint64_t *)(v19 + v33[9]);
    uint64_t *v26 = v25;
    v26[1] = v27;
    sub_252CBC27C();
    sub_252BA62F0((uint64_t)&unk_26B231430);
    sub_252D1A498();
    sub_252B5F67C();
    v28();
    sub_252B4C1CC();
    v29();
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_252BA6670();
  }
  sub_252B5FBC4();
  sub_252AF4368();
}

void sub_252BA7B24()
{
}

void sub_252BA7B3C()
{
}

uint64_t sub_252BA7B64(uint64_t a1)
{
  unint64_t v2 = sub_252BA7C18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA7BA0(uint64_t a1)
{
  unint64_t v2 = sub_252BA7C18();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.Terminate.encode(to:)()
{
}

unint64_t sub_252BA7C18()
{
  unint64_t result = qword_26B231C88;
  if (!qword_26B231C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B231C88);
  }
  return result;
}

uint64_t MessagePayload.Terminate.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

uint64_t sub_252BA7C84(uint64_t a1)
{
  return MessagePayload.RequestContent.StopContent.init(from:)(a1);
}

void sub_252BA7C9C()
{
}

uint64_t sub_252BA7CBC(uint64_t a1)
{
  unint64_t v2 = sub_252BA7D70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA7CF8(uint64_t a1)
{
  unint64_t v2 = sub_252BA7D70();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.EndOfPlan.encode(to:)()
{
}

unint64_t sub_252BA7D70()
{
  unint64_t result = qword_269C440B8;
  if (!qword_269C440B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C440B8);
  }
  return result;
}

uint64_t MessagePayload.EndOfPlan.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BA7DDC()
{
}

uint64_t sub_252BA7DFC(uint64_t a1)
{
  unint64_t v2 = sub_252BA7EB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA7E38(uint64_t a1)
{
  unint64_t v2 = sub_252BA7EB0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.SessionSuspended.encode(to:)()
{
}

unint64_t sub_252BA7EB0()
{
  unint64_t result = qword_269C440C8;
  if (!qword_269C440C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C440C8);
  }
  return result;
}

uint64_t MessagePayload.SessionSuspended.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BA7F1C()
{
}

uint64_t MessagePayload.StepExecutedWithReturnedValue.outputVariableName.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.StepExecutedWithReturnedValue.value.getter()
{
  return sub_252BA7F84();
}

uint64_t sub_252BA7F84()
{
  uint64_t v1 = sub_252CB899C();
  v2(v1);
  uint64_t v3 = sub_252CBB79C();
  v0(v3);
  sub_252AEA304();
  uint64_t v4 = sub_252CB9A98();

  return v5(v4);
}

uint64_t type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(uint64_t a1)
{
  return sub_252AC76C8(a1, (uint64_t *)&unk_26B2344A0);
}

uint64_t MessagePayload.StepExecutedWithReturnedValue.init(outputVariableName:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_252BF887C(a1, a2, (void (*)(void))type metadata accessor for MessagePayload.StepExecutedWithReturnedValue, a3);
}

uint64_t static MessagePayload.StepExecutedWithReturnedValue.== infix(_:_:)()
{
  sub_252CB9724();
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = v0[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *v1 == *v0 && v3 == v4;
      if (v5 || (sub_252D1A5D8() & 1) != 0) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  if (v4) {
    return 0;
  }
LABEL_8:
  uint64_t v6 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
  sub_252CB9E80(v6);

  return _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
}

uint64_t sub_252BA80B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1D700 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BA8194(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_252BA81CC()
{
  return sub_252BA8194(*v0);
}

uint64_t sub_252BA81D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA80B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA81FC(uint64_t a1)
{
  unint64_t v2 = sub_252BA83B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA8238(uint64_t a1)
{
  unint64_t v2 = sub_252BA83B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.StepExecutedWithReturnedValue.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C440D0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252BA83B0();
  sub_252AF4784();
  sub_252CBAFCC();
  if (!v0)
  {
    type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
    sub_252D19BE8();
    sub_252BA62F0((uint64_t)&unk_269C440E0);
    sub_252B98230();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

unint64_t sub_252BA83B0()
{
  unint64_t result = qword_269C440D8;
  if (!qword_269C440D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269C440D8);
  }
  return result;
}

void MessagePayload.StepExecutedWithReturnedValue.init(from:)()
{
  sub_252AF4380();
  v16[4] = sub_252CBA4DC(v2);
  sub_252AEDBD0();
  v16[1] = v3;
  MEMORY[0x270FA5388](v4);
  sub_252AF45D8();
  v16[5] = sub_252AC3A24(&qword_269C440E8);
  sub_252AEDBD0();
  v16[3] = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_252BA59A0();
  uint64_t v8 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_252CB8AD8(v0);
  sub_252BA83B0();
  sub_252CB9CF8();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    v16[0] = v8;
    *uint64_t v11 = sub_252D1A408();
    v11[1] = v12;
    sub_252CB8A60();
    sub_252BA62F0((uint64_t)&unk_269C440F0);
    sub_252CB8FD0();
    sub_252CB8D98();
    v13();
    uint64_t v14 = sub_252CB8F14();
    v15(v14);
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BA8618()
{
}

void sub_252BA8630()
{
}

id MessagePayload.SessionError.error.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v3;
  return sub_252ACE7B0(v2);
}

uint64_t MessagePayload.SessionError.init(error:hierarchy:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(result + 8);
  *(void *)a3 = *(void *)result;
  *(unsigned char *)(a3 + 8) = v3;
  *(void *)(a3 + 16) = a2;
  return result;
}

id MessagePayload.SessionError.init(error:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(void **)a1;
  char v4 = *(unsigned char *)(a1 + 8);
  sub_252AC3A24(&qword_269C440F8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_252D2A140;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v4;
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;

  return sub_252ACE7B0(v3);
}

void static MessagePayload.SessionError.== infix(_:_:)()
{
  sub_252AFC730();
  id v2 = *(id *)v0;
  id v3 = *(id *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  if (*(unsigned char *)(v0 + 8))
  {
    sub_252ACE7B0(*(id *)v0);
    sub_252ACE7B0(v3);
    sub_252ACE7B0(v2);
    uint64_t v5 = v2;
  }
  else
  {
    sub_252ACE7B0(*(id *)v1);
    sub_252ACE7B0(v2);
    uint64_t v5 = (void *)sub_252D193E8();
  }
  sub_252ACE7B0(v3);
  if (v4)
  {
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v6 = (void *)sub_252D193E8();
    sub_252AD16D8(v3);
  }
  sub_252C0CBD4(0, (unint64_t *)&qword_269C49530);
  sub_252CBA168();
  char v7 = sub_252D1A158();

  sub_252AD16D8(v3);
  sub_252AD16D8(v2);
  if (v7)
  {
    sub_252AFC650();
    sub_252AFC718();
    sub_252B1E638();
  }
  else
  {
    sub_252AFC718();
  }
}

uint64_t sub_252BA8840(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6863726172656968 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BA8934(char a1)
{
  if (a1) {
    return 0x6863726172656968;
  }
  else {
    return 0x726F727265;
  }
}

uint64_t sub_252BA896C()
{
  return sub_252BA8934(*v0);
}

uint64_t sub_252BA8974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA8840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA899C(uint64_t a1)
{
  unint64_t v2 = sub_252C053D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA89D8(uint64_t a1)
{
  unint64_t v2 = sub_252C053D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.SessionError.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C44100);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B5FEB4(v2);
  sub_252C053D8();
  sub_252AF4784();
  sub_252C05424();
  sub_252CBBA4C();
  sub_252D1A578();
  if (!v0)
  {
    sub_252B5FC80();
    sub_252AC3A24(&qword_269C44118);
    sub_252C0F218((uint64_t)&unk_269C44120);
    sub_252BA5AE8();
    sub_252B982A8();
  }
  uint64_t v4 = sub_252AF4620();
  v5(v4);
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.SessionError.init(from:)()
{
  sub_252AF4380();
  sub_252CBB2FC();
  sub_252AC3A24(&qword_269C44128);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C053D8();
  sub_252B5F76C();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  }
  else
  {
    sub_252C05470();
    sub_252CB8EE4();
    sub_252AC3A24(&qword_269C44118);
    sub_252B5FC80();
    sub_252ACE7B0(v5);
    sub_252C0F218((uint64_t)&unk_269C44138);
    sub_252CB8EE4();
    sub_252B983F0();
    v4();
    sub_252ACE7B0(v5);
    swift_bridgeObjectRetain();
    sub_252CBC390();
    *(void *)uint64_t v2 = v5;
    *(unsigned char *)(v2 + 8) = v6;
    *(void *)(v2 + 16) = v5;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    sub_252CBC390();
    swift_bridgeObjectRelease();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BA8D5C()
{
}

void sub_252BA8D74()
{
}

uint64_t MessagePayload.PlannerReturnedRawPlan.plan.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.PlannerReturnedRawPlan.plan.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.PlannerReturnedRawPlan.plan.modify())()
{
  return nullsub_1;
}

void MessagePayload.PlannerReturnedRawPlan.source.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*MessagePayload.PlannerReturnedRawPlan.source.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.PlannerReturnedRawPlan.appIntentInvocationPreviews.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessagePayload.PlannerReturnedRawPlan.appIntentInvocationPreviews.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MessagePayload.PlannerReturnedRawPlan.appIntentInvocationPreviews.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan __swiftcall MessagePayload.PlannerReturnedRawPlan.init(plan:source:)(IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan plan, IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan::Source source)
{
  char v3 = *(unsigned char *)source;
  *(Swift::String *)uint64_t v2 = plan.plan;
  *(unsigned char *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = MEMORY[0x263F8EE78];
  plan.source = source;
  return plan;
}

IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan __swiftcall MessagePayload.PlannerReturnedRawPlan.init(plan:appIntentInvocationPreviews:source:)(IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan plan, Swift::OpaquePointer appIntentInvocationPreviews, IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan::Source source)
{
  char v4 = *(unsigned char *)source;
  *(Swift::String *)uint64_t v3 = plan.plan;
  *(unsigned char *)(v3 + 16) = v4;
  *(Swift::OpaquePointer *)(v3 + 24) = appIntentInvocationPreviews;
  plan.source = (IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan::Source)appIntentInvocationPreviews._rawValue;
  LOBYTE(plan.appIntentInvocationPreviews._rawValue) = source;
  return plan;
}

IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan __swiftcall MessagePayload.PlannerReturnedRawPlan.init(plan:)(IntelligenceFlow::MessagePayload::PlannerReturnedRawPlan plan)
{
  *(Swift::String *)uint64_t v1 = plan.plan;
  *(unsigned char *)(v1 + 16) = 2;
  *(void *)(v1 + 24) = MEMORY[0x263F8EE78];
  return plan;
}

uint64_t sub_252BA8ECC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1D720 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x7265764F6E616C70 && a2 == 0xEC00000065646972;
    if (v5 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E616C506C6C7566 && a2 == 0xEB0000000072656ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BA9048(char a1)
{
  if (!a1) {
    return 0xD000000000000017;
  }
  if (a1 == 1) {
    return 0x7265764F6E616C70;
  }
  return 0x6E616C506C6C7566;
}

uint64_t sub_252BA90B4()
{
  return sub_252BA9048(*v0);
}

uint64_t sub_252BA90BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA8ECC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA90E4(uint64_t a1)
{
  unint64_t v2 = sub_252C054BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA9120(uint64_t a1)
{
  unint64_t v2 = sub_252C054BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BA915C(uint64_t a1)
{
  unint64_t v2 = sub_252C05508();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA9198(uint64_t a1)
{
  unint64_t v2 = sub_252C05508();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BA91D4(uint64_t a1)
{
  unint64_t v2 = sub_252C05554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA9210(uint64_t a1)
{
  unint64_t v2 = sub_252C05554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BA924C(uint64_t a1)
{
  unint64_t v2 = sub_252C055A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA9288(uint64_t a1)
{
  unint64_t v2 = sub_252C055A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.PlannerReturnedRawPlan.Source.encode(to:)()
{
  sub_252AF4380();
  sub_252CBB2CC();
  sub_252AC3A24(&qword_269C44140);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B774C8(v3, v18);
  sub_252AC3A24(&qword_269C44148);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C44150);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C44158);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  int v7 = *v0;
  sub_252CB8E48(v1);
  sub_252C054BC();
  sub_252CBA880();
  if (v7)
  {
    if (v7 == 1)
    {
      sub_252C05554();
      sub_252CB8714();
      sub_252CB99EC();
    }
    else
    {
      sub_252C05508();
      sub_252CB8714();
      sub_252B7E4D8();
    }
  }
  else
  {
    sub_252C055A0();
    sub_252CB8714();
    sub_252CB927C();
  }
  sub_252B5F53C();
  v12(v8, v9, v10, v11);
  sub_252B5F67C();
  v17(v13, v14, v15, v16);
  sub_252CBAC94();
  sub_252AF4368();
}

void MessagePayload.PlannerReturnedRawPlan.Source.init(from:)()
{
  sub_252AF4380();
  uint64_t v37 = v0;
  uint64_t v2 = v1;
  uint64_t v35 = v3;
  sub_252AC3A24(&qword_269C44180);
  sub_252AEDBD0();
  uint64_t v33 = v4;
  uint64_t v34 = v5;
  MEMORY[0x270FA5388](v4);
  sub_252CB8E2C(v6, v31[0]);
  sub_252AC3A24(&qword_269C44188);
  sub_252AEDBD0();
  v31[6] = v7;
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  uint64_t v9 = (unsigned char *)sub_252AC3A24(&qword_269C44190);
  sub_252AEDBD0();
  v31[5] = v10;
  MEMORY[0x270FA5388](v11);
  sub_252AF45F0();
  sub_252AC3A24(&qword_269C44198);
  sub_252AEDBD0();
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v2[4];
  sub_252CB88F4(v2);
  sub_252C054BC();
  sub_252CBB8F0();
  if (v0) {
    goto LABEL_8;
  }
  if (!*(void *)(sub_252CBAC6C() + 16) || (uint64_t v17 = sub_252CB9BD8(), sub_252B5F440(v17), sub_252CBC7F0(), v16))
  {
    sub_252D1A308();
    sub_252CB86D8();
    uint64_t v22 = v21;
    sub_252AC3A24(&qword_269C42E78);
    void *v22 = &type metadata for MessagePayload.PlannerReturnedRawPlan.Source;
    sub_252D1A3F8();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v23();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v24 = sub_252AF4538();
    v25(v24);
    uint64_t v2 = v37;
LABEL_8:
    uint64_t v26 = (uint64_t)v2;
    goto LABEL_9;
  }
  char v18 = (char)v15;
  if (v15)
  {
    if (v15 == 1)
    {
      sub_252C05554();
      sub_252B775AC();
      sub_252CBA32C();
      sub_252B5F53C();
      v19();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v20();
    }
    else
    {
      LODWORD(v32) = v15;
      sub_252C05508();
      sub_252B775AC();
      sub_252CBA32C();
      sub_252B5F53C();
      v29();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v30();
      char v18 = v32;
    }
  }
  else
  {
    sub_252C055A0();
    sub_252B775AC();
    sub_252B5F53C();
    v27();
    swift_unknownObjectRelease();
    sub_252B5F53C();
    v28();
    uint64_t v9 = v35;
  }
  unsigned char *v9 = v18;
  uint64_t v26 = (uint64_t)v37;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v26);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252BA98FC()
{
}

void sub_252BA9914()
{
}

void static MessagePayload.PlannerReturnedRawPlan.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (sub_252D1A5D8()) && v2 == v3)
  {
    sub_252AEA3DC();
    sub_252B1E228();
  }
}

uint64_t sub_252BA99C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1851878512 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1D740)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BA9AF8(char a1)
{
  if (!a1) {
    return 1851878512;
  }
  if (a1 == 1) {
    return 0x656372756F73;
  }
  return 0xD00000000000001BLL;
}

uint64_t sub_252BA9B48()
{
  return sub_252BA9AF8(*v0);
}

uint64_t sub_252BA9B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BA99C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BA9B78(uint64_t a1)
{
  unint64_t v2 = sub_252C06290();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BA9BB4(uint64_t a1)
{
  unint64_t v2 = sub_252C06290();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.PlannerReturnedRawPlan.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C441A0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B5FD8C(v2);
  sub_252C06290();
  sub_252BA5AFC();
  sub_252CBC984();
  sub_252D1A528();
  if (!v0)
  {
    sub_252CBAFC0();
    sub_252C062DC();
    sub_252B982A8();
    sub_252CBAF9C();
    sub_252AC3A24(&qword_269C441B8);
    sub_252C0F218((uint64_t)&unk_269C441C0);
    sub_252B982A8();
  }
  sub_252B5F67C();
  v4();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.PlannerReturnedRawPlan.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_252AF4380();
  sub_252CB9C30();
  sub_252AC3A24(&qword_269C441D0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  sub_252B5F60C();
  sub_252C06290();
  sub_252B5F76C();
  if (v13)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v12);
  }
  else
  {
    uint64_t v16 = sub_252CB872C();
    uint64_t v18 = v17;
    sub_252CBAFC0();
    sub_252C06374();
    sub_252CB9C18();
    sub_252CB8C20();
    sub_252AC3A24(&qword_269C441B8);
    sub_252CBAF9C();
    sub_252C0F218((uint64_t)&unk_269C441E0);
    sub_252CB8EE4();
    sub_252B5F658();
    v19();
    *(void *)uint64_t v14 = v16;
    *(void *)(v14 + 8) = v18;
    *(unsigned char *)(v14 + 16) = a12;
    *(void *)(v14 + 24) = v20;
    swift_bridgeObjectRetain();
    sub_252CB8928();
    swift_bridgeObjectRelease();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BA9F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MessagePayload.PlannerReturnedRawPlan.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_252BA9F7C()
{
}

uint64_t (*MessagePayload.Request.content.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Request.variables.getter()
{
  type metadata accessor for MessagePayload.Request(0);

  return swift_bridgeObjectRetain();
}

uint64_t MessagePayload.Request.variables.setter()
{
  uint64_t v2 = *(int *)(sub_252CBB194() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*MessagePayload.Request.variables.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Request.safetyMode.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessagePayload.Request(0) + 24));
}

uint64_t MessagePayload.Request.safetyMode.setter(char a1)
{
  return sub_252BE8BF0(a1, type metadata accessor for MessagePayload.Request);
}

uint64_t (*MessagePayload.Request.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Request.prescribedPlan.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessagePayload.Request(0) + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  unsigned __int8 v8 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(a1 + 32) = v8;

  return sub_252C0644C(v4, v5, v6, v7, v8);
}

__n128 MessagePayload.Request.prescribedPlan.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  uint64_t v5 = v1 + *(int *)(type metadata accessor for MessagePayload.Request(0) + 28);
  sub_252C06460(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  __n128 result = v7;
  *(__n128 *)uint64_t v5 = v7;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 32) = v4;
  return result;
}

uint64_t (*MessagePayload.Request.prescribedPlan.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Request.rewriteMetadataEventID.getter()
{
  return sub_252BAA1F8();
}

uint64_t sub_252BAA1F8()
{
  uint64_t v0 = sub_252CB899C();
  uint64_t v2 = v1(v0);
  return sub_252CBB7F8(*(int *)(v2 + 32));
}

uint64_t MessagePayload.Request.rewriteMetadataEventID.setter(uint64_t a1)
{
  return sub_252BE0124(a1, (uint64_t)type metadata accessor for MessagePayload.Request, &qword_26B2320E8);
}

uint64_t (*MessagePayload.Request.rewriteMetadataEventID.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Request.rewriteMetadataInlined.getter()
{
  uint64_t v0 = type metadata accessor for MessagePayload.Request(0);
  return sub_252CBB7B8(*(int *)(v0 + 36));
}

double MessagePayload.Request.rewriteMetadataInlined.setter()
{
  uint64_t v1 = sub_252CBA260();
  uint64_t v2 = type metadata accessor for MessagePayload.Request(v1);
  uint64_t v3 = sub_252C08D48(*(void *)(v0 + *(int *)(v2 + 36)), *(void *)(v0 + *(int *)(v2 + 36) + 8));
  *(void *)&double result = sub_252CBB218(v3, v4, v5, v6, v7, v8, v9, v10, v11).n128_u64[0];
  return result;
}

uint64_t (*MessagePayload.Request.rewriteMetadataInlined.modify())()
{
  return nullsub_1;
}

__n128 MessagePayload.Request.init(content:variables:safetyMode:prescribedPlan:rewriteMetadataEventID:rewriteMetadataInlined:)@<Q0>(uint64_t a1@<X1>, char a2@<W2>, long long *a3@<X3>, uint64_t a4@<X4>, __n128 *a5@<X5>, uint64_t a6@<X8>)
{
  long long v18 = *a3;
  uint64_t v8 = *((void *)a3 + 2);
  uint64_t v9 = *((void *)a3 + 3);
  char v17 = *((unsigned char *)a3 + 32);
  __n128 v22 = *a5;
  uint64_t v21 = a5[1].n128_i64[0];
  uint64_t v10 = (int *)type metadata accessor for MessagePayload.Request(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = a6 + v10[7];
  uint64_t v13 = a6 + v10[8];
  uint64_t v14 = sub_252D19588();
  sub_252CBA73C(v14);
  uint64_t v15 = (uint64_t *)(a6 + v10[9]);
  *uint64_t v15 = 0;
  v15[1] = 0;
  void v15[2] = 0;
  sub_252CBA1D4();
  sub_252C06474();
  *(void *)(a6 + v11) = a1;
  *(unsigned char *)(a6 + v10[6]) = a2;
  *(_OWORD *)uint64_t v12 = v18;
  *(void *)(v12 + 16) = v8;
  *(void *)(v12 + 24) = v9;
  *(unsigned char *)(v12 + 32) = v17;
  sub_252C0CB04(a4, v13, &qword_26B2320E8);
  sub_252C08D48(*v15, v15[1]);
  __n128 result = v22;
  *(__n128 *)uint64_t v15 = v22;
  void v15[2] = v21;
  return result;
}

void static MessagePayload.Request.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v6 = sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_252B5F630();
  uint64_t v10 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v11);
  sub_252B23260();
  uint64_t v12 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v13 = sub_252AEA368(v12);
  MEMORY[0x270FA5388](v13);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v14);
  sub_252CB8858();
  MEMORY[0x270FA5388](v15);
  sub_252CBB618();
  if ((v16 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v79 = v8;
  uint64_t v80 = v1;
  char v17 = (int *)type metadata accessor for MessagePayload.Request(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = *(void *)(v0 + v18);
  if (*(void *)(v2 + v18))
  {
    if (!v19) {
      goto LABEL_37;
    }
    uint64_t v78 = v6;
    uint64_t v20 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_252BB3204();
    char v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v17 = v20;
    if ((v22 & 1) == 0) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v78 = v6;
    if (v19) {
      goto LABEL_37;
    }
  }
  if (*(unsigned __int8 *)(v2 + v17[6]) != *(unsigned __int8 *)(v0 + v17[6])) {
    goto LABEL_37;
  }
  uint64_t v23 = v17[7];
  uint64_t v25 = *(void *)(v2 + v23);
  uint64_t v24 = *(void *)(v2 + v23 + 8);
  uint64_t v26 = *(void *)(v2 + v23 + 16);
  uint64_t v27 = *(void *)(v2 + v23 + 24);
  unsigned int v28 = *(unsigned __int8 *)(v2 + v23 + 32);
  uint64_t v29 = v0 + v23;
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *(void *)(v29 + 8);
  uint64_t v33 = *(void *)(v29 + 16);
  uint64_t v32 = *(void *)(v29 + 24);
  unsigned int v34 = *(unsigned __int8 *)(v29 + 32);
  uint64_t v75 = v25;
  uint64_t v77 = v24;
  if (v28 > 0xFD)
  {
    if (v34 > 0xFD) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v43 = v33;
    uint64_t v44 = v32;
    unsigned __int8 v45 = v34;
    sub_252C0644C(v31, v30, v33, v32, v34);
    sub_252C06460(v75, v77, v26, v27, v28);
    uint64_t v46 = sub_252CBA174();
    sub_252C06460(v46, v47, v43, v44, v45);
    goto LABEL_37;
  }
  if (v34 > 0xFD)
  {
    uint64_t v81 = *(void *)(v29 + 8);
    uint64_t v35 = *(void *)(v29 + 16);
    uint64_t v36 = *(void *)(v29 + 24);
    char v37 = *(unsigned char *)(v29 + 32);
    uint64_t v38 = *(void *)v29;
    sub_252C0644C(v25, v24, v26, v27, v28);
    uint64_t v39 = sub_252CBA1D4();
    sub_252ACE78C(v39, v40, v26, v27, v28);
    uint64_t v41 = sub_252CBA1D4();
    sub_252AD16B4(v41, v42, v26, v27, v28);
    uint64_t v31 = v38;
    uint64_t v30 = v81;
    uint64_t v33 = v35;
    uint64_t v32 = v36;
    LOBYTE(v34) = v37;
    goto LABEL_13;
  }
  uint64_t v74 = v17;
  uint64_t v72 = v26;
  uint64_t v48 = v26;
  uint64_t v49 = v25;
  sub_252C0644C(v25, v24, v48, v27, v28);
  sub_252ACE78C(v49, v77, v72, v27, v28);
  static MessagePayload.RequestPrescribedPlan.== infix(_:_:)();
  char v73 = v50;
  sub_252AD16B4(v75, v77, v72, v27, v28);
  sub_252C06460(v75, v77, v72, v27, v28);
  char v17 = v74;
  if ((v73 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_15:
  uint64_t v51 = (uint64_t)v17;
  sub_252CB7E00(v2 + v17[8], v4, &qword_26B2320E8);
  sub_252CB7E00(v0 + *(int *)(v51 + 32), v5, &qword_26B2320E8);
  uint64_t v52 = v80 + *(int *)(v10 + 48);
  uint64_t v53 = sub_252CB9954();
  sub_252CB7E00(v53, v54, &qword_26B2320E8);
  uint64_t v55 = sub_252B5FC8C();
  sub_252CB7E00(v55, v56, &qword_26B2320E8);
  uint64_t v57 = (uint64_t *)v78;
  sub_252B22A90(v80, 1, v78);
  if (v66)
  {
    uint64_t v58 = &qword_26B2320E8;
    uint64_t v59 = sub_252CBB3A4();
    sub_252B5A4CC(v59, v60);
    uint64_t v61 = sub_252CBC3A8();
    sub_252B5A4CC(v61, v62);
    sub_252CB8170(v52);
    if (v66)
    {
      sub_252B5A4CC(v80, &qword_26B2320E8);
      goto LABEL_25;
    }
LABEL_23:
    sub_252B5A4CC(v80, &qword_269C441F0);
    goto LABEL_37;
  }
  uint64_t v63 = sub_252CB9DD4();
  sub_252CB7E00(v63, v64, v65);
  sub_252CB8170(v52);
  if (v66)
  {
    sub_252CBB3BC();
    sub_252CB9960();
    uint64_t v67 = sub_252CB99D8();
    v68(v67);
    goto LABEL_23;
  }
  sub_252B7E53C();
  v69();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  char v76 = sub_252CB9288();
  uint64_t v58 = (uint64_t *)(v79 + 8);
  uint64_t v70 = *(void (**)(void))(v79 + 8);
  sub_252CBC9E0();
  sub_252CB8D6C();
  v70();
  uint64_t v51 = v78;
  uint64_t v57 = &qword_26B2320E8;
  sub_252B5A4CC(v5, &qword_26B2320E8);
  sub_252B5A4CC(v4, &qword_26B2320E8);
  sub_252CB9240();
  sub_252CB8D6C();
  v70();
  sub_252B5A4CC(v80, &qword_26B2320E8);
  if ((v76 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_25:
  sub_252CB9FAC();
  if (!v57)
  {
    if (!v3) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (!v3)
  {
    sub_252CB8D50();
LABEL_36:
    sub_252CBAB5C();
    sub_252CBAAA0();
    sub_252CBAB40();
    goto LABEL_37;
  }
  BOOL v71 = v58 == (uint64_t *)v51 && v57 == v3;
  if (v71 || (sub_252CB91D4() & 1) != 0)
  {
    sub_252CBC7D8();
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_37:
  sub_252AFC718();
}

void static MessagePayload.RequestContent.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v3 = type metadata accessor for SystemPromptResolution(0);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252CB9708();
  type metadata accessor for MessagePayload.RequestContent(v5);
  sub_252AEA304();
  MEMORY[0x270FA5388](v6);
  sub_252CB8954();
  MEMORY[0x270FA5388](v7);
  sub_252CB8750();
  MEMORY[0x270FA5388](v8);
  sub_252CBB608();
  uint64_t v9 = sub_252AC3A24(&qword_269C441F8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252CBA96C();
  sub_252BA661C();
  sub_252CB9240();
  sub_252BA661C();
  sub_252AFC650();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CBC8F0();
      uint64_t v14 = *v2;
      uint64_t v13 = v2[1];
      if (sub_252CBC9EC() != 1) {
        goto LABEL_14;
      }
      if (v14 == *v1 && v13 == v1[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_252CB9360();
        sub_252CB9FD0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_18;
    case 2u:
      sub_252CBBD18();
      if (sub_252CBC9EC() == 2)
      {
        uint64_t v11 = sub_252B23988();
        sub_252B1D7E0(v11, v12);
        sub_252CBC89C();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 3u:
      sub_252CBC92C();
      if (sub_252CBC9EC() == 3)
      {
        sub_252CBC9E0();
        sub_252C06474();
        static SystemPromptResolution.== infix(_:_:)();
        sub_252BA6670();
        sub_252CBA1D4();
        sub_252BA6670();
LABEL_18:
        sub_252BA6670();
      }
      else
      {
        sub_252BA6670();
LABEL_16:
        sub_252B5A4CC(v0, &qword_269C441F8);
      }
      sub_252AFC718();
      return;
    default:
      if (!sub_252CBC9EC()) {
        goto LABEL_18;
      }
      goto LABEL_16;
  }
}

uint64_t sub_252BAAD58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C626169726176 && a2 == 0xE900000000000073;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6269726373657270 && a2 == 0xEE006E616C506465;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D760 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D780)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v9 = sub_252D1A5D8();
          swift_bridgeObjectRelease();
          if (v9) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_252BAB000(char a1)
{
  unint64_t result = 0x746E65746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C626169726176;
      break;
    case 2:
      unint64_t result = 0x6F4D797465666173;
      break;
    case 3:
      unint64_t result = 0x6269726373657270;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BAB0D8()
{
  return sub_252BAB000(*v0);
}

uint64_t sub_252BAB0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAAD58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BAB108(uint64_t a1)
{
  unint64_t v2 = sub_252C064E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAB144(uint64_t a1)
{
  unint64_t v2 = sub_252C064E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.Request.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C44200);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C064E8();
  sub_252AF4784();
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_252BA62F0((uint64_t)&unk_269C44210);
  sub_252B982A8();
  if (!v0)
  {
    type metadata accessor for MessagePayload.Request(0);
    sub_252B98D6C();
    sub_252B5FC80();
    sub_252AC3A24(&qword_269C44218);
    sub_252C06534();
    sub_252CB90AC();
    sub_252CBC610();
    sub_252D1A538();
    sub_252CBA5C8();
    sub_252C065E0();
    sub_252CB90AC();
    sub_252D19588();
    sub_252BA62F0((uint64_t)&qword_26B231C10);
    sub_252CB90AC();
    sub_252CBC288();
    sub_252C0662C();
    sub_252CB90AC();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CBAD48();
  sub_252B232F8();
}

void MessagePayload.Request.init(from:)()
{
  sub_252AF4380();
  *(void *)&long long v37 = v1;
  uint64_t v4 = v3;
  v33[0] = v5;
  uint64_t v6 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = sub_252CBA92C(v8, v33[0]);
  v33[3] = type metadata accessor for MessagePayload.RequestContent(v9);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252CB83B4(v11, v33[0]);
  v33[6] = sub_252AC3A24(&qword_269C44238);
  sub_252AEDBD0();
  v33[1] = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MessagePayload.Request(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v17);
  sub_252B23278();
  uint64_t v36 = *(int *)(v18 + 20);
  *(void *)(v2 + v36) = 0;
  uint64_t v19 = v2 + *(int *)(v18 + 28);
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(unsigned char *)(v19 + 32) = -2;
  sub_252CBC438();
  uint64_t v20 = sub_252D19588();
  uint64_t v34 = v0;
  uint64_t v21 = sub_252CB978C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v21, v22, v23, v20);
  uint64_t v24 = (uint64_t *)(v2 + *(int *)(v16 + 36));
  *uint64_t v24 = 0;
  v24[1] = 0;
  v24[2] = 0;
  uint64_t v25 = v4[3];
  uint64_t v35 = v4;
  sub_252AC3A68(v4, v25);
  sub_252C064E8();
  v33[5] = (uint64_t)v15;
  sub_252CBB5C8();
  uint64_t v26 = v37;
  sub_252D1A718();
  if (v26)
  {
    uint64_t v28 = v34;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v35);
    swift_bridgeObjectRelease();
    sub_252C06460(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(void *)(v19 + 24), *(unsigned char *)(v19 + 32));
    sub_252B5A4CC(v28, &qword_26B2320E8);
    sub_252C08D48(*v24, v24[1]);
  }
  else
  {
    *(void *)&long long v37 = v20;
    uint64_t v27 = v33[2];
    LOBYTE(v38) = 0;
    sub_252BA62F0((uint64_t)&unk_269C44240);
    sub_252D1A498();
    sub_252C06474();
    sub_252AC3A24(&qword_269C44218);
    sub_252B5FC80();
    sub_252C06678();
    sub_252D1A438();
    *(void *)(v2 + v36) = v38;
    LOBYTE(v38) = 2;
    *(unsigned char *)(v2 + *(int *)(v16 + 24)) = sub_252D1A458() & 1;
    sub_252CBA5C8();
    sub_252C06724();
    sub_252CBB948();
    char v29 = v40;
    long long v30 = v39;
    *(_OWORD *)uint64_t v19 = v38;
    *(_OWORD *)(v19 + 16) = v30;
    *(unsigned char *)(v19 + 32) = v29;
    LOBYTE(v38) = 4;
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CBB948();
    sub_252C0CB04(v27, v34, &qword_26B2320E8);
    sub_252CBC288();
    sub_252C06770();
    sub_252CBB948();
    sub_252CBBC40();
    sub_252B0012C();
    v31();
    long long v37 = v38;
    uint64_t v32 = v39;
    sub_252C08D48(*v24, v24[1]);
    *(_OWORD *)uint64_t v24 = v37;
    v24[2] = v32;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v35);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BAB8E4()
{
}

void sub_252BAB8FC()
{
}

uint64_t sub_252BAB920(uint64_t a1)
{
  unint64_t v2 = sub_252C067BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAB95C(uint64_t a1)
{
  unint64_t v2 = sub_252C067BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestContent.StopContent.encode(to:)()
{
}

uint64_t MessagePayload.RequestContent.StopContent.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BAB9F4()
{
}

uint64_t MessagePayload.RequestContent.TextContent.text.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.RequestContent.TextContent.text.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BABA5C(uint64_t a1, uint64_t a2)
{
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BABAD4()
{
  return 1954047348;
}

uint64_t sub_252BABAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BABA5C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BABB14(uint64_t a1)
{
  unint64_t v2 = sub_252C06808();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BABB50(uint64_t a1)
{
  unint64_t v2 = sub_252C06808();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestContent.TextContent.encode(to:)()
{
}

void MessagePayload.RequestContent.TextContent.init(from:)()
{
}

void sub_252BABC18()
{
}

void sub_252BABC30()
{
}

uint64_t sub_252BABC54(uint64_t a1)
{
  unint64_t v2 = sub_252C06854();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BABC90(uint64_t a1)
{
  unint64_t v2 = sub_252C06854();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestContent.SpeechContent.Candidate.encode(to:)()
{
}

void MessagePayload.RequestContent.SpeechContent.Candidate.init(from:)()
{
}

void sub_252BABD58()
{
}

void sub_252BABD70()
{
}

uint64_t MessagePayload.RequestContent.SpeechContent.candidates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*MessagePayload.RequestContent.SpeechContent.candidates.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::RequestContent::SpeechContent __swiftcall MessagePayload.RequestContent.SpeechContent.init(candidates:)(IntelligenceFlow::MessagePayload::RequestContent::SpeechContent candidates)
{
  v1->candidates._rawValue = candidates.candidates._rawValue;
  return candidates;
}

uint64_t static MessagePayload.RequestContent.SpeechContent.== infix(_:_:)(void *a1, void *a2)
{
  return sub_252B1D7E0(*a1, *a2);
}

uint64_t sub_252BABDEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BABE80()
{
  return 0x74616469646E6163;
}

uint64_t sub_252BABEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BABDEC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BABECC(uint64_t a1)
{
  unint64_t v2 = sub_252C068A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BABF08(uint64_t a1)
{
  unint64_t v2 = sub_252C068A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestContent.SpeechContent.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C442A0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5FEB4(v1);
  sub_252C068A0();
  sub_252B5F8D4();
  sub_252AC3A24(&qword_269C442B0);
  sub_252C0F218((uint64_t)&unk_269C442B8);
  sub_252CBB000();
  sub_252BA591C();
  v3();
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.RequestContent.SpeechContent.init(from:)()
{
  sub_252AF4380();
  sub_252CB8F54();
  sub_252AC3A24(&qword_269C442C8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5F60C();
  sub_252C068A0();
  sub_252CB86F0();
  if (!v1)
  {
    sub_252AC3A24(&qword_269C442B0);
    sub_252C0F218((uint64_t)&unk_269C442D0);
    sub_252CB8374();
    sub_252B5F658();
    v3();
    sub_252CBC5D8();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BAC194()
{
}

void sub_252BAC1AC()
{
}

void static SystemPromptResolution.== infix(_:_:)()
{
  sub_252AFC730();
  sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C441F0);
  sub_252CBB750();
  MEMORY[0x270FA5388](v8);
  sub_252B23278();
  uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v11);
  sub_252CB8750();
  MEMORY[0x270FA5388](v12);
  sub_252CB8F64();
  sub_252CB7E00(v1, v3, &qword_26B2320E8);
  sub_252CB7E00(v0, v4, &qword_26B2320E8);
  sub_252CBB9C4();
  sub_252CB7E00(v4, v5, &qword_26B2320E8);
  uint64_t v13 = sub_252CB8170(v2);
  if (!v15)
  {
    sub_252CBBCD8(v13, v14, &qword_26B2320E8);
    sub_252CB8170(v5);
    if (!v15)
    {
      sub_252B7E53C();
      v18();
      sub_252BA62F0((uint64_t)&qword_269C41B28);
      char v19 = sub_252CB9288();
      uint64_t v20 = *(void (**)(void))(v34 + 8);
      sub_252B0012C();
      v20();
      sub_252CB9CE0();
      sub_252CBAF14();
      sub_252B0012C();
      v20();
      sub_252CBC8B4();
      if ((v19 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_11;
    }
    sub_252CB9960();
    sub_252CBA6E8();
    uint64_t v16 = sub_252CBB698();
    v17(v16);
LABEL_9:
    sub_252B5A4CC(v2, &qword_269C441F0);
    goto LABEL_24;
  }
  sub_252CB9CE0();
  sub_252CBAF14();
  sub_252CB8170(v5);
  if (!v15) {
    goto LABEL_9;
  }
  sub_252B5A4CC(v2, &qword_26B2320E8);
LABEL_11:
  uint64_t v21 = type metadata accessor for SystemPromptResolution(0);
  if ((_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0() & 1) == 0) {
    goto LABEL_24;
  }
  static SystemPromptResolution.UserAction.== infix(_:_:)();
  if ((v22 & 1) == 0) {
    goto LABEL_24;
  }
  sub_252CB92A8();
  if (!v15) {
    goto LABEL_24;
  }
  sub_252CBB9A0();
  if (!v25)
  {
    if (v23) {
      goto LABEL_24;
    }
LABEL_25:
    uint64_t v30 = *(int *)(v21 + 32);
    char v31 = *(unsigned char *)(v1 + v30 + 16);
    long long v37 = *(_OWORD *)(v1 + v30);
    char v38 = v31;
    uint64_t v32 = (long long *)(v0 + v30);
    char v33 = *((unsigned char *)v32 + 16);
    long long v35 = *v32;
    char v36 = v33;
    static SystemPromptResolution.ResolutionInput.== infix(_:_:)((uint64_t)&v37, (uint64_t)&v35);
    goto LABEL_24;
  }
  if (v23)
  {
    sub_252CB9D9C(v24);
    if (v15 && v26 == v27) {
      goto LABEL_25;
    }
    sub_252D1A5D8();
    sub_252B5F6F8();
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_24:
  sub_252AFC718();
}

uint64_t sub_252BAC4E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1886352499 && a2 == 0xE400000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x686365657073 && a2 == 0xE600000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D7A0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_252BAC678(char a1)
{
  unint64_t result = 1886352499;
  switch(a1)
  {
    case 1:
      unint64_t result = 1954047348;
      break;
    case 2:
      unint64_t result = 0x686365657073;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BAC6F8()
{
  return sub_252BAC678(*v0);
}

uint64_t sub_252BAC700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAC4E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BAC728(uint64_t a1)
{
  unint64_t v2 = sub_252C06984();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAC764(uint64_t a1)
{
  unint64_t v2 = sub_252C06984();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAC7A0(uint64_t a1)
{
  unint64_t v2 = sub_252C069D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAC7DC(uint64_t a1)
{
  unint64_t v2 = sub_252C069D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAC818(uint64_t a1)
{
  unint64_t v2 = sub_252C06A1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAC854(uint64_t a1)
{
  unint64_t v2 = sub_252C06A1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAC890(uint64_t a1)
{
  unint64_t v2 = sub_252C06B4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAC8CC(uint64_t a1)
{
  unint64_t v2 = sub_252C06B4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAC908(uint64_t a1)
{
  unint64_t v2 = sub_252C06AB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAC944(uint64_t a1)
{
  unint64_t v2 = sub_252C06AB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestContent.encode(to:)()
{
  sub_252AF4380();
  uint64_t v31 = v0;
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C442E0);
  sub_252AEDBD0();
  v30[9] = v5;
  v30[10] = v4;
  MEMORY[0x270FA5388](v4);
  v30[8] = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[6] = type metadata accessor for SystemPromptResolution(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  sub_252B98858(v8, v30[0]);
  sub_252AC3A24(&qword_269C442E8);
  sub_252AEDBD0();
  v30[4] = v10;
  v30[5] = v9;
  MEMORY[0x270FA5388](v9);
  sub_252B2347C(v11, v30[0]);
  sub_252AC3A24(&qword_269C442F0);
  sub_252AEDBD0();
  v30[1] = v13;
  v30[2] = v12;
  MEMORY[0x270FA5388](v12);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C442F8);
  sub_252AEDBD0();
  v30[0] = v14;
  MEMORY[0x270FA5388](v15);
  sub_252CBB06C();
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252B5F688();
  sub_252AC3A24(&qword_269C44300);
  sub_252AEDBD0();
  v30[11] = v18;
  v30[12] = v17;
  MEMORY[0x270FA5388](v17);
  sub_252B5F630();
  sub_252B5FD8C(v3);
  sub_252C06984();
  sub_252CBB5C8();
  sub_252D1A738();
  sub_252BA661C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = *v1;
      uint64_t v26 = v1[1];
      LOBYTE(v32) = 1;
      sub_252C06AB4();
      sub_252CBC510();
      sub_252B5FCCC();
      uint64_t v32 = v27;
      uint64_t v33 = v26;
      sub_252C06B00();
      sub_252D1A578();
      sub_252B5F53C();
      v28();
      sub_252B5F53C();
      v29();
      goto LABEL_6;
    case 2u:
      uint64_t v21 = *v1;
      LOBYTE(v32) = 2;
      sub_252C06A1C();
      sub_252CB8424();
      uint64_t v32 = v21;
      sub_252C06A68();
      sub_252CBBD54();
      sub_252D1A578();
      sub_252CBB9E8();
      sub_252B5F53C();
      v22();
      sub_252B5F53C();
      v23();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      sub_252C06474();
      LOBYTE(v32) = 3;
      sub_252C069D0();
      sub_252B5FCCC();
      sub_252BA62F0((uint64_t)&unk_269C44318);
      sub_252CBA828();
      sub_252B5F53C();
      v24();
      sub_252BA6670();
      sub_252B5F53C();
      v25();
      break;
    default:
      LOBYTE(v32) = 0;
      sub_252C06B4C();
      sub_252B5FCCC();
      sub_252C06B98();
      sub_252D1A578();
      sub_252B5F53C();
      v19();
      sub_252B5F53C();
      v20();
      break;
  }
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.RequestContent.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  sub_252CBAEE0();
  sub_252AC3A24(&qword_269C44350);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v14);
  sub_252CB8320(v15, v49);
  sub_252AC3A24(&qword_269C44358);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v16);
  sub_252B98820(v17, v50);
  sub_252AC3A24(&qword_269C44360);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v18);
  sub_252CB821C(v19, v51);
  sub_252AC3A24(&qword_269C44368);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v20);
  sub_252CB8A94(v21, v52);
  sub_252AC3A24(&qword_269C44370);
  sub_252AEDBD0();
  uint64_t v54 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v53 = sub_252CBB06C();
  sub_252AEA304();
  MEMORY[0x270FA5388](v23);
  sub_252CB8954();
  MEMORY[0x270FA5388](v24);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v25);
  sub_252CB8858();
  MEMORY[0x270FA5388](v26);
  sub_252CB9D8C();
  MEMORY[0x270FA5388](v27);
  sub_252CBA5A8();
  uint64_t v28 = (void *)sub_252CBC4D0();
  sub_252CB8E48(v28);
  sub_252C06984();
  sub_252D1A718();
  if (!a10)
  {
    sub_252D1A4C8();
    sub_252CBBD48();
    if (v29
      && (uint64_t v30 = *(unsigned __int8 *)(v11 + 32),
          uint64_t v31 = sub_252CB9BC8(),
          sub_252B5F440(v31),
          uint64_t v33 = v32,
          unint64_t v35 = v34,
          swift_bridgeObjectRelease(),
          v33 == v35 >> 1))
    {
      switch(v30)
      {
        case 1:
          sub_252CB9E74();
          sub_252C06AB4();
          sub_252CB9978();
          sub_252C06C30();
          sub_252CBB740();
          sub_252D1A498();
          sub_252B5F53C();
          v43();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v44();
          *uint64_t v13 = v56;
          v13[1] = v57;
          sub_252CBBD0C();
          goto LABEL_11;
        case 2:
          sub_252CBAFA8();
          sub_252C06A1C();
          sub_252CB9978();
          sub_252C06BE4();
          sub_252CBB42C();
          sub_252D1A498();
          sub_252B5F53C();
          v45();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v46();
          *uint64_t v10 = v56;
          goto LABEL_11;
        case 3:
          sub_252CBB67C();
          sub_252C069D0();
          sub_252CB9978();
          type metadata accessor for SystemPromptResolution(0);
          sub_252BA62F0((uint64_t)&unk_269C44378);
          sub_252CBBEE0();
          sub_252B5F53C();
          v47();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v48();
          swift_storeEnumTagMultiPayload();
          goto LABEL_12;
        default:
          sub_252C06B4C();
          sub_252CB9978();
          sub_252C06C7C();
          sub_252D1A498();
          sub_252B5F53C();
          v41();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v42();
LABEL_11:
          swift_storeEnumTagMultiPayload();
LABEL_12:
          sub_252C06474();
          sub_252C06474();
          break;
      }
    }
    else
    {
      sub_252D1A308();
      sub_252CB86D8();
      long long v37 = v36;
      sub_252AC3A24(&qword_269C42E78);
      sub_252CB9528();
      uint64_t *v37 = v53;
      sub_252D1A3F8();
      sub_252B77578();
      sub_252B0014C();
      uint64_t v38 = sub_252CB8498();
      v39(v38);
      swift_willThrow();
      swift_unknownObjectRelease();
      sub_252CBAEA0();
      v40(v12, v54);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v55);
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BAD5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MessagePayload.RequestContent.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252BAD608()
{
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.query.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.query.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.SearchTool.query.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.SearchTool.isLowConfidenceKnowledge.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.shouldOpenResultIfApplicable.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MessagePayload.RequestPrescribedPlan.SearchTool.shouldOpenResultIfApplicable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.SearchTool.shouldOpenResultIfApplicable.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::RequestPrescribedPlan::SearchTool __swiftcall MessagePayload.RequestPrescribedPlan.SearchTool.init(query:isLowConfidenceKnowledge:shouldOpenResultIfApplicable:)(Swift::String query, Swift::Bool isLowConfidenceKnowledge, Swift::Bool shouldOpenResultIfApplicable)
{
  *(Swift::String *)uint64_t v3 = query;
  *(unsigned char *)(v3 + 16) = isLowConfidenceKnowledge;
  *(unsigned char *)(v3 + 17) = shouldOpenResultIfApplicable;
  result.query = query;
  result.isLowConfidenceKnowledge = isLowConfidenceKnowledge;
  return result;
}

IntelligenceFlow::MessagePayload::RequestPrescribedPlan::SearchTool __swiftcall MessagePayload.RequestPrescribedPlan.SearchTool.init(query:isLowConfidenceKnowledge:)(Swift::String query, Swift::Bool isLowConfidenceKnowledge)
{
  *(Swift::String *)uint64_t v2 = query;
  *(unsigned char *)(v2 + 16) = isLowConfidenceKnowledge;
  *(unsigned char *)(v2 + 17) = 0;
  result.query = query;
  result.isLowConfidenceKnowledge = isLowConfidenceKnowledge;
  return result;
}

uint64_t static MessagePayload.RequestPrescribedPlan.SearchTool.== infix(_:_:)(uint64_t a1)
{
  sub_252CB9848(a1);
  BOOL v7 = v7 && v5 == v6;
  if (v7)
  {
    if (v3 != v4) {
      return 0;
    }
    return v1 ^ v2 ^ 1u;
  }
  sub_252D1A5D8();
  uint64_t result = sub_252B5F6F8();
  if ((v9 & 1) != 0 && ((v3 ^ v4) & 1) == 0) {
    return v1 ^ v2 ^ 1u;
  }
  return result;
}

uint64_t sub_252BAD778(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000252D1D7C0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000252D1D7E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252BAD8BC(char a1)
{
  if (!a1) {
    return 0x7972657571;
  }
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  return 0xD00000000000001CLL;
}

uint64_t sub_252BAD914()
{
  return sub_252BAD8BC(*v0);
}

uint64_t sub_252BAD91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAD778(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BAD944(uint64_t a1)
{
  unint64_t v2 = sub_252C06CC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAD980(uint64_t a1)
{
  unint64_t v2 = sub_252C06CC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.SearchTool.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C44398);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252CBBE54();
  sub_252CB8E64(v2);
  sub_252C06CC8();
  sub_252CBBA9C();
  sub_252CBA458();
  sub_252D1A528();
  if (!v0)
  {
    sub_252CBC648();
    sub_252CBAB24();
    sub_252CBA808();
    sub_252CBAB24();
  }
  sub_252B0012C();
  v4();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.RequestPrescribedPlan.SearchTool.init(from:)()
{
  sub_252AF4380();
  sub_252CB9C30();
  sub_252AC3A24(&qword_269C443A8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F60C();
  sub_252C06CC8();
  sub_252B5F76C();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  }
  else
  {
    sub_252CB872C();
    sub_252CB9D50();
    char v9 = sub_252CBA4B0();
    sub_252CB965C();
    char v6 = sub_252CBA4B0();
    uint64_t v7 = sub_252CBC3CC();
    v8(v7);
    *(void *)uint64_t v2 = v4;
    *(void *)(v2 + 8) = v3;
    *(unsigned char *)(v2 + 16) = v9 & 1;
    *(unsigned char *)(v2 + 17) = v6 & 1;
    sub_252CB9760();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BADC1C()
{
}

void sub_252BADC34()
{
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenTool.resultStatementId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CB9400(*(void *)(v1 + 16), a1);
}

void MessagePayload.RequestPrescribedPlan.OpenTool.resultStatementId.setter()
{
}

uint64_t (*MessagePayload.RequestPrescribedPlan.OpenTool.resultStatementId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenTool.elementAtIndex.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenTool.elementAtIndex.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.OpenTool.elementAtIndex.modify())()
{
  return nullsub_1;
}

__n128 MessagePayload.RequestPrescribedPlan.OpenTool.init(resultStatementId:elementAtIndex:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = *(_DWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a4 + 8) = result;
  *(void *)(a4 + 24) = a2;
  *(unsigned char *)(a4 + 32) = a3 & 1;
  return result;
}

uint64_t static MessagePayload.RequestPrescribedPlan.OpenTool.== infix(_:_:)()
{
  sub_252CBB6E0();
  if (!v9) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  if (!*(void *)(v0 + 16))
  {
    if (!v4) {
      goto LABEL_12;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  sub_252CBB6B4(v0);
  BOOL v9 = v9 && v7 == v8;
  if (v9 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v11 & 1) != 0))
  {
LABEL_12:
    if (v3)
    {
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v2 == v5) {
        char v12 = v6;
      }
      else {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

BOOL static StatementID.== infix(_:_:)()
{
  sub_252CBB6E0();
  if (!v5) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(void *)(v0 + 16))
  {
    if (!v2) {
      return 0;
    }
    sub_252CBB6B4(v0);
    BOOL v5 = v5 && v3 == v4;
    return v5 || (sub_252D1A5D8() & 1) != 0;
  }
  return !v2;
}

uint64_t sub_252BADDF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1D800 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x41746E656D656C65 && a2 == 0xEE007865646E4974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BADF04(char a1)
{
  if (a1) {
    return 0x41746E656D656C65;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_252BADF4C()
{
  return sub_252BADF04(*v0);
}

uint64_t sub_252BADF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BADDF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BADF7C(uint64_t a1)
{
  unint64_t v2 = sub_252C06D14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BADFB8(uint64_t a1)
{
  unint64_t v2 = sub_252C06D14();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.OpenTool.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C443B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B5FD8C(v2);
  sub_252C06D14();
  sub_252BA5AFC();
  sub_252B67274();
  sub_252CBBA4C();
  sub_252D1A578();
  if (!v0)
  {
    sub_252CBAE94(1);
    sub_252CBBA14();
  }
  sub_252B5F53C();
  v4();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.RequestPrescribedPlan.OpenTool.init(from:)()
{
  sub_252AF4380();
  sub_252CB9554();
  sub_252AC3A24(&qword_269C443C0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C06D14();
  sub_252B5F76C();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  }
  else
  {
    sub_252B674A8();
    sub_252CBC450();
    sub_252CB8EE4();
    sub_252CB9E74();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_252D1A428();
    char v6 = v5;
    sub_252B5F658();
    v7();
    *(_DWORD *)uint64_t v2 = v8;
    *(void *)(v2 + 8) = v9;
    *(void *)(v2 + 16) = v10;
    *(void *)(v2 + 24) = v4;
    *(unsigned char *)(v2 + 32) = v6 & 1;
    sub_252CB9760();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BAE28C()
{
}

void sub_252BAE2A4()
{
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.elementAtIndex.getter()
{
  return *(void *)v0;
}

uint64_t MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.elementAtIndex.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.elementAtIndex.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::RequestPrescribedPlan::OpenSuccessValueFromLatestRequestTool __swiftcall MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(elementAtIndex:)(IntelligenceFlow::MessagePayload::RequestPrescribedPlan::OpenSuccessValueFromLatestRequestTool elementAtIndex)
{
  *(void *)uint64_t v1 = elementAtIndex.elementAtIndex.value;
  *(unsigned char *)(v1 + 8) = elementAtIndex.elementAtIndex.is_nil;
  return elementAtIndex;
}

uint64_t static MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return sub_252AC40B4();
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return sub_252AC40B4();
    }
  }
  return _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
}

uint64_t sub_252BAE338(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x41746E656D656C65 && a2 == 0xEE007865646E4974)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BAE3E4()
{
  return 0x41746E656D656C65;
}

uint64_t sub_252BAE40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAE338(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BAE438(uint64_t a1)
{
  unint64_t v2 = sub_252C06D60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAE474(uint64_t a1)
{
  unint64_t v2 = sub_252C06D60();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C443C8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252B5FD8C(v1);
  sub_252C06D60();
  sub_252B77644();
  sub_252D1A738();
  sub_252D1A508();
  sub_252CB9240();
  sub_252B5F67C();
  v3();
  sub_252B5FD80();
  sub_252AF4368();
}

void MessagePayload.RequestPrescribedPlan.OpenSuccessValueFromLatestRequestTool.init(from:)()
{
  sub_252AF4380();
  sub_252CB8F54();
  sub_252AC3A24(&qword_269C443D8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C06D60();
  sub_252CB86F0();
  if (!v1)
  {
    sub_252CBA4CC();
    uint64_t v4 = sub_252D1A428();
    char v6 = v5;
    sub_252B5F658();
    v7();
    *(void *)uint64_t v2 = v4;
    *(unsigned char *)(v2 + 8) = v6 & 1;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BAE68C()
{
}

void sub_252BAE6A4()
{
}

uint64_t (*MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BAE6E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BAE764()
{
  return 0x7972657571;
}

uint64_t sub_252BAE77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAE6E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BAE7A8(uint64_t a1)
{
  unint64_t v2 = sub_252C06DAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAE7E4(uint64_t a1)
{
  unint64_t v2 = sub_252C06DAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.encode(to:)()
{
}

void MessagePayload.RequestPrescribedPlan.LowConfidenceKnowledgeTool.init(from:)()
{
}

void sub_252BAE8AC()
{
}

void sub_252BAE8C4()
{
}

uint64_t (*MessagePayload.RequestPrescribedPlan.TextTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.TextTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BAE920(uint64_t a1)
{
  unint64_t v2 = sub_252C06DF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAE95C(uint64_t a1)
{
  unint64_t v2 = sub_252C06DF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.TextTool.encode(to:)()
{
}

void MessagePayload.RequestPrescribedPlan.TextTool.init(from:)()
{
}

void sub_252BAEA10()
{
}

void sub_252BAEA28()
{
}

uint64_t MessagePayload.RequestPrescribedPlan.ConvertTool.query.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.RequestPrescribedPlan.ConvertTool.query.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.ConvertTool.query.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.RequestPrescribedPlan.ConvertTool.isExplicit.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MessagePayload.RequestPrescribedPlan.ConvertTool.isExplicit.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.ConvertTool.isExplicit.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::RequestPrescribedPlan::ConvertTool __swiftcall MessagePayload.RequestPrescribedPlan.ConvertTool.init(query:isExplicit:)(Swift::String query, Swift::Bool isExplicit)
{
  *(Swift::String *)uint64_t v2 = query;
  *(unsigned char *)(v2 + 16) = isExplicit;
  result.query = query;
  result.isExplicit = isExplicit;
  return result;
}

uint64_t sub_252BAEAF4(char a1)
{
  if (a1) {
    return 0x63696C7078457369;
  }
  else {
    return 0x7972657571;
  }
}

uint64_t sub_252BAEB2C()
{
  return sub_252BAEAF4(*v0);
}

uint64_t sub_252BAEB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAEE74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BAEB5C(uint64_t a1)
{
  unint64_t v2 = sub_252C06E44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAEB98(uint64_t a1)
{
  unint64_t v2 = sub_252C06E44();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.ConvertTool.encode(to:)()
{
}

void MessagePayload.RequestPrescribedPlan.ConvertTool.init(from:)()
{
}

void sub_252BAEC4C()
{
}

void sub_252BAEC64()
{
}

uint64_t (*MessagePayload.RequestPrescribedPlan.DisplayTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.DisplayTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BAECC0(uint64_t a1)
{
  unint64_t v2 = sub_252C06E90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAECFC(uint64_t a1)
{
  unint64_t v2 = sub_252C06E90();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.DisplayTool.encode(to:)()
{
}

void MessagePayload.RequestPrescribedPlan.DisplayTool.init(from:)()
{
}

void sub_252BAEDB0()
{
}

void sub_252BAEDC8()
{
}

uint64_t (*MessagePayload.RequestPrescribedPlan.KnowledgeTool.query.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.RequestPrescribedPlan.KnowledgeTool.isExplicit.modify())()
{
  return nullsub_1;
}

uint64_t _s16IntelligenceFlow14MessagePayloadO21RequestPrescribedPlanO8TextToolV2eeoiySbAG_AGtFZ_0(uint64_t a1)
{
  uint64_t v1 = sub_252CB9514(a1);
  int v5 = *(unsigned __int8 *)(v4 + 16);
  int v6 = *(unsigned __int8 *)(v3 + 16);
  if (v1 == *(void *)v3 && v2 == *(void *)(v3 + 8)) {
    return v5 ^ v6 ^ 1u;
  }
  sub_252D1A5D8();
  uint64_t result = sub_252B5F6F8();
  if (v9) {
    return v5 ^ v6 ^ 1u;
  }
  return result;
}

uint64_t sub_252BAEE74(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v4 || (sub_252CB9724(), (sub_252CB845C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0x63696C7078457369 && v2 == 0xEA00000000007469)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_252CB845C();
    sub_252CB8EFC();
    if (v3) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BAEF44(uint64_t a1)
{
  unint64_t v2 = sub_252C06EDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAEF80(uint64_t a1)
{
  unint64_t v2 = sub_252C06EDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.KnowledgeTool.encode(to:)()
{
}

void sub_252BAEFF8()
{
  sub_252AF4380();
  int v8 = v1;
  uint64_t v3 = v2;
  sub_252AC3A24(v4);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B23278();
  int v6 = sub_252CB8AD8(v3);
  v8(v6);
  sub_252D1A738();
  sub_252D1A528();
  if (!v0)
  {
    sub_252CBC648();
    sub_252D1A538();
  }
  sub_252B5F658();
  v7();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.RequestPrescribedPlan.KnowledgeTool.init(from:)()
{
}

void sub_252BAF14C()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  BOOL v4 = v3;
  uint64_t v12 = v5;
  sub_252AC3A24(v6);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = v4[3];
  char v9 = sub_252B5FD8C(v4);
  v2(v9);
  sub_252CB92D4();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_252CB872C();
    sub_252CB9D50();
    char v10 = sub_252CBA4B0();
    sub_252B5F658();
    v11();
    *(void *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = 0;
    *(unsigned char *)(v12 + 16) = v10 & 1;
    sub_252CB9760();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BAF288()
{
}

void sub_252BAF2A0()
{
}

void static MessagePayload.RequestPrescribedPlan.== infix(_:_:)()
{
  sub_252AFC8E4();
  uint64_t v3 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  unsigned int v6 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v7 = *(void *)v1;
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  unsigned int v11 = *(unsigned __int8 *)(v1 + 32);
  switch(v6 >> 5)
  {
    case 1u:
      sub_252CBB590();
      if (v18 != 32) {
        goto LABEL_38;
      }
      if (v3 != v7 || v2 != v8) {
        sub_252CBA60C();
      }
      uint64_t v48 = sub_252CBB3D4();
      sub_252ACE78C(v48, v49, v50, v9, v11);
      uint64_t v51 = sub_252CBB6C4();
      sub_252ACE78C(v51, v52, v53, v5, v6);
      sub_252AD16B4(v3, v2, v4, v5, v6);
      uint64_t v54 = sub_252CBB3E4();
      sub_252AD16B4(v54, v55, v56, v57, v58);
      goto LABEL_43;
    case 2u:
      sub_252CBB590();
      if (v20 == 64) {
        goto LABEL_21;
      }
      goto LABEL_38;
    case 3u:
      sub_252CBB590();
      if (v21 != 96) {
        goto LABEL_38;
      }
      goto LABEL_21;
    case 4u:
      sub_252CBB590();
      if (v22 != 128) {
        goto LABEL_38;
      }
      goto LABEL_21;
    case 5u:
      sub_252CBB590();
      if (v23 != 160) {
        goto LABEL_38;
      }
LABEL_21:
      if (v3 == v7 && v2 == v8)
      {
        sub_252CB94B0(v3, v2, v10, v9);
        sub_252AD16B4(v3, v2, v10, v9, v11);
      }
      else
      {
        sub_252CBA60C();
        uint64_t v25 = sub_252CBB3D4();
        uint64_t v27 = v26;
        sub_252CB94B0(v25, v28, v29, v26);
        uint64_t v30 = sub_252CBB3D4();
        sub_252AD16B4(v30, v31, v32, v27, v11);
      }
      goto LABEL_43;
    case 6u:
      if ((v11 & 0xE0) != 0xC0) {
        goto LABEL_38;
      }
      if (v3 != v7) {
        goto LABEL_45;
      }
      if (v4)
      {
        if (v10)
        {
          if (v2 != v8 || v4 != v10)
          {
            uint64_t v65 = *(void *)(v1 + 24);
            uint64_t v34 = *(void *)(v0 + 24);
            sub_252CB9FD0();
            uint64_t v35 = sub_252CBB3E4();
            sub_252ACE78C(v35, v36, v37, v38, v39);
            sub_252ACE78C(v3, v2, v4, v34, v6);
            uint64_t v40 = sub_252CBB6C4();
            sub_252AD16B4(v40, v41, v42, v34, v6);
            sub_252AD16B4(v7, v8, v10, v65, v11);
            goto LABEL_43;
          }
          sub_252ACE78C(*(void *)v1, v2, v4, v9, v11);
          sub_252ACE78C(v3, v2, v4, v5, v6);
          uint64_t v59 = sub_252CBB6C4();
          sub_252AD16B4(v59, v60, v61, v5, v6);
          uint64_t v62 = v7;
          uint64_t v63 = v2;
          uint64_t v64 = v4;
          goto LABEL_48;
        }
LABEL_45:
        uint64_t v43 = sub_252CBA0B4();
        goto LABEL_40;
      }
      if (v10) {
        goto LABEL_45;
      }
      sub_252ACE78C(*(void *)v1, *(void *)(v1 + 8), 0, v9, v11);
      sub_252ACE78C(v3, v2, 0, v5, v6);
      sub_252AD16B4(v3, v2, 0, v5, v6);
      uint64_t v62 = v7;
      uint64_t v63 = v8;
      uint64_t v64 = 0;
LABEL_48:
      sub_252AD16B4(v62, v63, v64, v9, v11);
LABEL_43:
      sub_252AFC918();
      return;
    case 7u:
      if (v11 <= 0xDF) {
        goto LABEL_39;
      }
      sub_252CB8B5C();
      goto LABEL_43;
    default:
      if (v11 >= 0x20)
      {
LABEL_38:
        swift_bridgeObjectRetain();
LABEL_39:
        uint64_t v43 = v7;
        uint64_t v44 = v8;
        uint64_t v45 = v10;
        uint64_t v46 = v9;
        unsigned __int8 v47 = v11;
LABEL_40:
        sub_252ACE78C(v43, v44, v45, v46, v47);
        sub_252CB8B5C();
      }
      else if (v3 == v7 && v2 == v8)
      {
        sub_252ACE78C(v3, v2, v10, v9, v11);
        sub_252ACE78C(v3, v2, v4, v5, v6);
        sub_252AD16B4(v3, v2, v4, v5, v6);
        sub_252AD16B4(v3, v2, v10, v9, v11);
      }
      else
      {
        sub_252CBA60C();
        uint64_t v13 = sub_252CBA0B4();
        sub_252ACE78C(v13, v14, v15, v16, v17);
        sub_252CB8B5C();
      }
      goto LABEL_43;
  }
}

uint64_t sub_252BAF73C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F54686372616573 && a2 == 0xEA00000000006C6FLL;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000252D1D820 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6C6F6F5474786574 && a2 == 0xE800000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x54747265766E6F63 && a2 == 0xEB000000006C6F6FLL;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x5479616C70736964 && a2 == 0xEB000000006C6F6FLL;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6764656C776F6E6BLL && a2 == 0xED00006C6F6F5465;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x6C6F6F546E65706FLL && a2 == 0xE800000000000000;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000025 && a2 == 0x8000000252D1D840)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              char v11 = sub_252D1A5D8();
              swift_bridgeObjectRelease();
              if (v11) {
                return 7;
              }
              else {
                return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252BAFABC(char a1)
{
  uint64_t result = 0x6F54686372616573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unsigned int v3 = 1954047348;
      goto LABEL_9;
    case 3:
      uint64_t result = 0x54747265766E6F63;
      break;
    case 4:
      uint64_t result = 0x5479616C70736964;
      break;
    case 5:
      uint64_t result = 0x6764656C776F6E6BLL;
      break;
    case 6:
      unsigned int v3 = 1852141679;
LABEL_9:
      uint64_t result = v3 | 0x6C6F6F5400000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000025;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BAFBD8()
{
  return sub_252BAFABC(*v0);
}

uint64_t sub_252BAFBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BAF73C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BAFC08(uint64_t a1)
{
  unint64_t v2 = sub_252C06F28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFC44(uint64_t a1)
{
  unint64_t v2 = sub_252C06F28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFC80(uint64_t a1)
{
  unint64_t v2 = sub_252C071D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFCBC(uint64_t a1)
{
  unint64_t v2 = sub_252C071D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFCF8(uint64_t a1)
{
  unint64_t v2 = sub_252C0713C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFD34(uint64_t a1)
{
  unint64_t v2 = sub_252C0713C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFD70(uint64_t a1)
{
  unint64_t v2 = sub_252C070A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFDAC(uint64_t a1)
{
  unint64_t v2 = sub_252C070A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFDE8(uint64_t a1)
{
  unint64_t v2 = sub_252C07304();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFE24(uint64_t a1)
{
  unint64_t v2 = sub_252C07304();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFE60(uint64_t a1)
{
  unint64_t v2 = sub_252C06F74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFE9C(uint64_t a1)
{
  unint64_t v2 = sub_252C06F74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFED8(uint64_t a1)
{
  unint64_t v2 = sub_252C0700C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFF14(uint64_t a1)
{
  unint64_t v2 = sub_252C0700C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFF50(uint64_t a1)
{
  unint64_t v2 = sub_252C0739C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BAFF8C(uint64_t a1)
{
  unint64_t v2 = sub_252C0739C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BAFFC8(uint64_t a1)
{
  unint64_t v2 = sub_252C0726C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB0004(uint64_t a1)
{
  unint64_t v2 = sub_252C0726C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.RequestPrescribedPlan.encode(to:)()
{
  sub_252AF4380();
  uint64_t v58 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C44458);
  sub_252AEDBD0();
  uint64_t v53 = v6;
  uint64_t v54 = v5;
  MEMORY[0x270FA5388](v5);
  sub_252CB83B4(v7, v38);
  sub_252AC3A24(&qword_269C44460);
  sub_252AEDBD0();
  uint64_t v51 = v9;
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  sub_252B5FA1C(v10, v38);
  sub_252AC3A24(&qword_269C44468);
  sub_252AEDBD0();
  uint64_t v49 = v12;
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  sub_252B9883C(v13, v38);
  sub_252AC3A24(&qword_269C44470);
  sub_252AEDBD0();
  uint64_t v47 = v15;
  uint64_t v48 = v14;
  MEMORY[0x270FA5388](v14);
  sub_252B9857C((uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_252AC3A24(&qword_269C44478);
  sub_252AEDBD0();
  uint64_t v45 = v17;
  MEMORY[0x270FA5388](v18);
  sub_252B9857C((uint64_t)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_252AC3A24(&qword_269C44480);
  sub_252AEDBD0();
  uint64_t v43 = v20;
  MEMORY[0x270FA5388](v21);
  sub_252B9857C((uint64_t)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_252AC3A24(&qword_269C44488);
  sub_252AEDBD0();
  uint64_t v41 = v23;
  MEMORY[0x270FA5388](v24);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C44490);
  sub_252AEDBD0();
  uint64_t v40 = v25;
  MEMORY[0x270FA5388](v26);
  sub_252AF45D8();
  uint64_t v59 = sub_252AC3A24(&qword_269C44498);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v27);
  sub_252AC423C();
  uint64_t v28 = v0[1];
  uint64_t v56 = *v0;
  uint64_t v57 = v28;
  uint64_t v55 = v0[2];
  uint64_t v39 = v0[3];
  unsigned int v29 = *((unsigned __int8 *)v0 + 32);
  sub_252AC3A68(v4, v4[3]);
  sub_252C06F28();
  sub_252B77644();
  sub_252D1A738();
  switch(v29 >> 5)
  {
    case 1u:
      LOBYTE(v60) = 1;
      sub_252C07304();
      uint64_t v33 = v59;
      sub_252D1A4D8();
      uint64_t v60 = v56;
      uint64_t v61 = v57;
      sub_252C07350();
      sub_252D1A578();
      sub_252B5F53C();
      v34();
      uint64_t v31 = sub_252CB85C4();
      goto LABEL_10;
    case 2u:
      LOBYTE(v60) = 2;
      sub_252C0726C();
      sub_252CB8A14();
      sub_252CB8DC4();
      sub_252C072B8();
      sub_252CB9F04();
      goto LABEL_12;
    case 3u:
      LOBYTE(v60) = 3;
      sub_252C071D4();
      sub_252CB8A14();
      sub_252CB8DC4();
      sub_252C07220();
      sub_252CB9F04();
      goto LABEL_12;
    case 4u:
      LOBYTE(v60) = 4;
      sub_252C0713C();
      sub_252CB8A14();
      sub_252CB8DC4();
      sub_252C07188();
      sub_252CB9F04();
      goto LABEL_12;
    case 5u:
      LOBYTE(v60) = 5;
      sub_252C070A4();
      sub_252CB8A14();
      sub_252CB8DC4();
      sub_252C070F0();
      sub_252CB9F04();
      goto LABEL_12;
    case 6u:
      LOBYTE(v60) = 6;
      sub_252C0700C();
      uint64_t v33 = v59;
      sub_252D1A4D8();
      LODWORD(v60) = v56;
      uint64_t v61 = v57;
      uint64_t v62 = v55;
      uint64_t v63 = v39;
      char v64 = v29 & 1;
      sub_252C07058();
      sub_252D1A578();
      sub_252B5F53C();
      v35();
      uint64_t v31 = sub_252CB927C();
LABEL_10:
      uint64_t v36 = v33;
      goto LABEL_14;
    case 7u:
      LOBYTE(v60) = 7;
      sub_252C06F74();
      sub_252CB8A14();
      uint64_t v60 = v56;
      LOBYTE(v61) = v57 & 1;
      sub_252C06FC0();
      sub_252CB9F04();
LABEL_12:
      sub_252B5F53C();
      v37();
      uint64_t v31 = sub_252CB85C4();
      break;
    default:
      LOBYTE(v60) = 0;
      sub_252C0739C();
      uint64_t v2 = v59;
      sub_252D1A4D8();
      uint64_t v60 = v56;
      uint64_t v61 = v57;
      LOWORD(v62) = v55 & 0x101;
      sub_252C073E8();
      sub_252CBC504();
      sub_252D1A578();
      sub_252B5F53C();
      v30();
      uint64_t v31 = sub_252B7E4D8();
      break;
  }
  uint64_t v36 = v2;
LABEL_14:
  v32(v31, v36);
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.RequestPrescribedPlan.init(from:)()
{
  sub_252AF4380();
  uint64_t v2 = v1;
  uint64_t v62 = v3;
  sub_252AC3A24(&qword_269C44528);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252CB82C0(v5, v56);
  sub_252AC3A24(&qword_269C44530);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B98858(v7, v57);
  sub_252AC3A24(&qword_269C44538);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252CB84E4(v9, v58);
  sub_252AC3A24(&qword_269C44540);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v10);
  sub_252B2347C(v11, v59);
  sub_252AC3A24(&qword_269C44548);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v12);
  sub_252CB821C(v13, v60);
  sub_252AC3A24(&qword_269C44550);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v14);
  sub_252CB83B4(v15, v61);
  sub_252AC3A24(&qword_269C44558);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v16);
  sub_252B23278();
  sub_252AC3A24(&qword_269C44560);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C44568);
  sub_252AEDBD0();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  sub_252AF45D8();
  uint64_t v63 = (uint64_t)v2;
  sub_252AC3A68(v2, v2[3]);
  sub_252C06F28();
  sub_252D1A718();
  if (!v0)
  {
    sub_252D1A4C8();
    sub_252CBBAD0();
    if (v21
      && (uint64_t v22 = *(unsigned __int8 *)(v19 + 32),
          uint64_t v23 = sub_252CB9BB8(),
          sub_252B5F440(v23),
          uint64_t v25 = v24,
          unint64_t v27 = v26,
          swift_bridgeObjectRelease(),
          v25 == v27 >> 1))
    {
      uint64_t v28 = v62;
      switch(v22)
      {
        case 1:
          LOBYTE(v64) = 1;
          sub_252C07304();
          sub_252CB833C();
          sub_252C075FC();
          sub_252CB9C00();
          sub_252B5F53C();
          v48();
          swift_unknownObjectRelease();
          sub_252CBB4FC();
          sub_252B5F53C();
          v49();
          uint64_t v32 = v64;
          uint64_t v33 = v65;
          unsigned long long v35 = 0uLL;
          char v31 = 32;
          break;
        case 2:
          sub_252C0726C();
          sub_252CB833C();
          sub_252C075B0();
          sub_252CB8D78();
          sub_252CBA33C();
          sub_252B5F53C();
          v42();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v43();
          unsigned long long v35 = (unsigned __int128)sub_252CB9894();
          char v31 = 64;
          break;
        case 3:
          sub_252C071D4();
          sub_252CB833C();
          sub_252C07564();
          sub_252CBB42C();
          sub_252D1A498();
          sub_252CBA33C();
          sub_252B5F53C();
          v50();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v51();
          unsigned long long v35 = (unsigned __int128)sub_252CB9894();
          char v31 = 96;
          break;
        case 4:
          sub_252C0713C();
          sub_252CB833C();
          sub_252C07518();
          sub_252CB8D78();
          sub_252CBA33C();
          sub_252B5F53C();
          v44();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v45();
          unsigned long long v35 = (unsigned __int128)sub_252CB9894();
          char v31 = 0x80;
          break;
        case 5:
          sub_252C070A4();
          sub_252CB833C();
          sub_252C074CC();
          sub_252CB8D78();
          sub_252CBA33C();
          sub_252B5F53C();
          v46();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v47();
          unsigned long long v35 = (unsigned __int128)sub_252CB9894();
          char v31 = -96;
          break;
        case 6:
          LOBYTE(v64) = 6;
          sub_252C0700C();
          sub_252CB833C();
          sub_252C07480();
          sub_252CB8D78();
          sub_252CBA33C();
          sub_252B5F53C();
          v52();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v53();
          uint64_t v32 = v64;
          uint64_t v33 = v65;
          unsigned long long v35 = v66;
          char v31 = v67 | 0xC0;
          break;
        case 7:
          LOBYTE(v64) = 7;
          sub_252C06F74();
          sub_252CB833C();
          sub_252C07434();
          sub_252CB8D78();
          sub_252CBA33C();
          sub_252B5F53C();
          v54();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v55();
          uint64_t v32 = v64;
          uint64_t v33 = v65;
          unsigned long long v35 = 0uLL;
          char v31 = -32;
          uint64_t v28 = v62;
          break;
        default:
          LOBYTE(v64) = 0;
          sub_252C0739C();
          sub_252CB833C();
          sub_252C07648();
          sub_252CB8D78();
          sub_252CBA33C();
          sub_252B5F53C();
          v29();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v30();
          char v31 = 0;
          uint64_t v32 = v64;
          uint64_t v33 = v65;
          uint64_t v34 = 256;
          if (!BYTE1(v66)) {
            uint64_t v34 = 0;
          }
          unsigned long long v35 = (unint64_t)v34 | (unsigned __int128)v66;
          break;
      }
      *(void *)uint64_t v28 = v32;
      *(void *)(v28 + 8) = v33;
      *(_OWORD *)(v28 + 16) = v35;
      *(unsigned char *)(v28 + 32) = v31;
    }
    else
    {
      sub_252D1A308();
      sub_252CB86D8();
      uint64_t v37 = v36;
      sub_252AC3A24(&qword_269C42E78);
      sub_252CB9528();
      void *v37 = &type metadata for MessagePayload.RequestPrescribedPlan;
      sub_252D1A3F8();
      sub_252B77578();
      sub_252B0014C();
      uint64_t v38 = sub_252CB8498();
      v39(v38);
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v40 = sub_252CBA174();
      v41(v40);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v63);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252BB12E4()
{
}

void sub_252BB12FC()
{
}

uint64_t MessagePayload.Query.query.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.Query.query.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.Query.query.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Query.variables.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MessagePayload.Query.variables.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Query.safetyMode.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MessagePayload.Query.safetyMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*MessagePayload.Query.safetyMode.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Query.clientQueryId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.Query.clientQueryId.setter()
{
  sub_252B4C958();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*MessagePayload.Query.clientQueryId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.Query.init(query:safetyMode:clientQueryId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = 0;
  *(unsigned char *)(a6 + 24) = a3;
  *(void *)(a6 + 32) = a4;
  *(void *)(a6 + 40) = a5;
  return result;
}

uint64_t MessagePayload.Query.init(query:variables:safetyMode:clientQueryId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(unsigned char *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

void MessagePayload.Query.init(query:safetyMode:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>, char a4@<W2>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = a4;
  sub_252CBB2EC(a1);
}

void MessagePayload.Query.init(query:variables:safetyMode:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, char a5@<W3>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(unsigned char *)(a1 + 24) = a5;
  sub_252CBB2EC(a1);
}

uint64_t MessagePayload.Query.init(query:variables:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  return result;
}

void MessagePayload.Query.init(query:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_252CBB2EC(a1);
}

void MessagePayload.Query.init(query:variables:)(uint64_t a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(unsigned char *)(a1 + 24) = 0;
  sub_252CBB2EC(a1);
}

void static MessagePayload.Query.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v1 = sub_252CBA2B4(v0);
  uint64_t v4 = *(void *)(v3 + 16);
  int v5 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v8 = *(void *)(v2 + 16);
  int v9 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  BOOL v12 = v1 == *(void *)v2 && *(void *)(v3 + 8) == *(void *)(v2 + 8);
  if (v12 || (sub_252D1A5D8(), sub_252B5F6F8(), (v13 & 1) != 0))
  {
    if (v4)
    {
      if (!v8) {
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_252BB3204();
      char v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_19;
      }
    }
    else if (v8)
    {
      goto LABEL_19;
    }
    if (((v5 ^ v9) & 1) == 0 && v7 && v10 && (v6 != v11 || v7 != v10))
    {
      sub_252AEA3DC();
      sub_252CB9FD0();
    }
  }
LABEL_19:
  sub_252AFC718();
}

uint64_t sub_252BB1624(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C626169726176 && a2 == 0xE900000000000073;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_252BB1808(char a1)
{
  uint64_t result = 0x7972657571;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C626169726176;
      break;
    case 2:
      uint64_t result = 0x6F4D797465666173;
      break;
    case 3:
      uint64_t result = 0x7551746E65696C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BB18AC()
{
  return sub_252BB1808(*v0);
}

uint64_t sub_252BB18B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB1624(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB18DC(uint64_t a1)
{
  unint64_t v2 = sub_252C07694();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB1918(uint64_t a1)
{
  unint64_t v2 = sub_252C07694();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.Query.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C445B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252CBA8EC();
  sub_252B5FEB4(v2);
  sub_252C07694();
  sub_252AF4784();
  sub_252CBB028();
  sub_252D1A528();
  if (!v0)
  {
    sub_252CB8A60();
    sub_252AC3A24(&qword_269C44218);
    sub_252C06534();
    sub_252CB90AC();
    sub_252CBA808();
    sub_252CBAB24();
    sub_252D1A4E8();
  }
  sub_252B0012C();
  v4();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.Query.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C445C0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252CB8AD8(v2);
  sub_252C07694();
  sub_252CBB97C();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_252D1A448();
    uint64_t v8 = v7;
    sub_252AC3A24(&qword_269C44218);
    sub_252C06678();
    swift_bridgeObjectRetain();
    sub_252D1A438();
    sub_252B98C84();
    swift_bridgeObjectRetain();
    char v15 = sub_252D1A458();
    sub_252CBC2C0();
    uint64_t v9 = sub_252D1A408();
    uint64_t v11 = v10;
    uint64_t v13 = v9;
    sub_252B5F658();
    v12();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v14;
    *(unsigned char *)(v4 + 24) = v15 & 1;
    *(void *)(v4 + 32) = v13;
    *(void *)(v4 + 40) = v11;
    sub_252CB8928();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BB1D34()
{
}

void sub_252BB1D4C()
{
}

uint64_t MessagePayload.SpeechQuery.Candidate.recognition.getter()
{
  return sub_252AEA3DC();
}

uint64_t sub_252BB1D94(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74696E676F636572 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_252CBA9FC();
    sub_252CB8520();
    sub_252CB8EFC();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BB1E20()
{
  return 0x74696E676F636572;
}

uint64_t sub_252BB1E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB1D94(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BB1E6C(uint64_t a1)
{
  unint64_t v2 = sub_252C076E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB1EA8(uint64_t a1)
{
  unint64_t v2 = sub_252C076E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.SpeechQuery.Candidate.encode(to:)()
{
}

void MessagePayload.SpeechQuery.Candidate.init(from:)()
{
}

void sub_252BB1F70()
{
}

void sub_252BB1F88()
{
}

uint64_t MessagePayload.SpeechQuery.safetyMode.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t MessagePayload.SpeechQuery.clientQueryId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.SpeechQuery.clientQueryId.setter()
{
  uint64_t result = sub_252CBBB74();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*MessagePayload.SpeechQuery.clientQueryId.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::SpeechQuery __swiftcall MessagePayload.SpeechQuery.init(candidates:safetyMode:clientQueryId:)(Swift::OpaquePointer candidates, Swift::Bool safetyMode, Swift::String_optional clientQueryId)
{
  *(Swift::OpaquePointer *)uint64_t v3 = candidates;
  *(unsigned char *)(v3 + 8) = safetyMode;
  *(Swift::String_optional *)(v3 + 16) = clientQueryId;
  result.clientQueryId = clientQueryId;
  result.candidates = candidates;
  result.safetyMode = safetyMode;
  return result;
}

IntelligenceFlow::MessagePayload::SpeechQuery __swiftcall MessagePayload.SpeechQuery.init(candidates:safetyMode:)(IntelligenceFlow::MessagePayload::SpeechQuery candidates, Swift::Bool safetyMode)
{
  *(void *)uint64_t v2 = candidates.candidates._rawValue;
  *(unsigned char *)(v2 + 8) = safetyMode;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  candidates.safetyMode = safetyMode;
  return candidates;
}

IntelligenceFlow::MessagePayload::SpeechQuery __swiftcall MessagePayload.SpeechQuery.init(candidates:)(IntelligenceFlow::MessagePayload::SpeechQuery candidates)
{
  *(void *)uint64_t v1 = candidates.candidates._rawValue;
  *(unsigned char *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  return candidates;
}

uint64_t static MessagePayload.SpeechQuery.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_252B1D7E0(*(void *)a1, *(void *)a2);
  uint64_t result = sub_252B5F6F8();
  if ((v9 & 1) != 0 && ((v2 ^ v5) & 1) == 0)
  {
    if (v3)
    {
      if (v6)
      {
        BOOL v10 = v4 == v7 && v3 == v6;
        if (v10 || (sub_252CB9F3C() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_252BB20D8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365;
  if (v3 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F4D797465666173 && a2 == 0xEA00000000006564;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BB225C(char a1)
{
  if (!a1) {
    return 0x74616469646E6163;
  }
  if (a1 == 1) {
    return 0x6F4D797465666173;
  }
  return 0x7551746E65696C63;
}

uint64_t sub_252BB22C4()
{
  return sub_252BB225C(*v0);
}

uint64_t sub_252BB22CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB20D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB22F4(uint64_t a1)
{
  unint64_t v2 = sub_252C0772C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB2330(uint64_t a1)
{
  unint64_t v2 = sub_252C0772C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.SpeechQuery.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C445E0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252CB88F4(v2);
  sub_252C0772C();
  sub_252CBBA80();
  sub_252AC3A24(&qword_269C445F0);
  sub_252C0F218((uint64_t)&unk_269C445F8);
  sub_252CBC794();
  if (!v0)
  {
    sub_252D1A538();
    sub_252CBC984();
    sub_252D1A4E8();
  }
  sub_252CB8D98();
  v4();
  sub_252CB8538();
  sub_252AF4368();
}

void MessagePayload.SpeechQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  sub_252CB9554();
  sub_252AC3A24(&qword_269C44608);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  sub_252B5F60C();
  sub_252C0772C();
  sub_252B5F76C();
  if (v11)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v10);
  }
  else
  {
    sub_252AC3A24(&qword_269C445F0);
    sub_252C0F218((uint64_t)&unk_269C44610);
    sub_252CB8EE4();
    swift_bridgeObjectRetain();
    char v14 = sub_252D1A458();
    uint64_t v15 = sub_252D1A408();
    uint64_t v17 = v16;
    char v20 = v14 & 1;
    uint64_t v18 = v15;
    sub_252B5F658();
    v19();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v12 = a10;
    *(unsigned char *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v18;
    *(void *)(v12 + 24) = v17;
    sub_252CB8928();
  }
  swift_bridgeObjectRelease();
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BB26F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MessagePayload.SpeechQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252BB2710()
{
}

uint64_t sub_252BB2730(uint64_t a1, uint64_t a2)
{
  if (a1 == 1851878512 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BB27A8()
{
  return 1851878512;
}

uint64_t sub_252BB27BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB2730(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BB27E8(uint64_t a1)
{
  unint64_t v2 = sub_252C07810();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB2824(uint64_t a1)
{
  unint64_t v2 = sub_252C07810();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.PrescribedPlan.encode(to:)()
{
}

void MessagePayload.PrescribedPlan.init(from:)()
{
}

void sub_252BB28EC()
{
}

void sub_252BB2904()
{
}

uint64_t sub_252BB2920(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BB29B4()
{
  return 0x697263736E617274;
}

uint64_t sub_252BB29D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB2920(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BB2A00(uint64_t a1)
{
  unint64_t v2 = sub_252C0785C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB2A3C(uint64_t a1)
{
  unint64_t v2 = sub_252C0785C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.MockTranscript.encode(to:)()
{
}

void MessagePayload.MockTranscript.init(from:)()
{
}

void sub_252BB2B04()
{
}

void sub_252BB2B1C()
{
}

uint64_t sub_252BB2B34(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BB2BB4()
{
  return 0x736C6562616CLL;
}

uint64_t sub_252BB2BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB2B34(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BB2BF8(uint64_t a1)
{
  unint64_t v2 = sub_252C078A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB2C34(uint64_t a1)
{
  unint64_t v2 = sub_252C078A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.DisambiguationNeeded.encode(to:)()
{
}

void sub_252BB2CAC()
{
  sub_252AF4380();
  char v8 = v0;
  unint64_t v2 = v1;
  sub_252AC3A24(v3);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B5F630();
  int v5 = sub_252B5FD8C(v2);
  v8(v5);
  sub_252D1A738();
  sub_252AC3A24(qword_269C41E38);
  sub_252C078F4((uint64_t)&unk_269C493B0);
  sub_252CBC6B0();
  sub_252D1A578();
  uint64_t v6 = sub_252CB8C3C();
  v7(v6);
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.DisambiguationNeeded.init(from:)()
{
}

void sub_252BB2DF8()
{
  sub_252AF4380();
  sub_252CBBE2C();
  sub_252AC3A24(v3);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  int v5 = sub_252B5FD8C(v0);
  v2(v5);
  sub_252CBA8B0();
  if (!v1)
  {
    sub_252AC3A24(qword_269C41E38);
    sub_252C078F4((uint64_t)&unk_269C493C0);
    sub_252CB8374();
    sub_252B5F53C();
    v6();
    sub_252CBC5D8();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BB2F24()
{
}

void sub_252BB2F3C()
{
}

uint64_t MessagePayload.ClientEffectInvocation.stepId.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ClientEffectInvocation.sessionId.getter()
{
  return sub_252BA7F84();
}

uint64_t MessagePayload.ClientEffectInvocation.clientRequestId.getter()
{
  return sub_252BDD798();
}

uint64_t MessagePayload.ClientEffectInvocation.clientSessionId.getter()
{
  return sub_252BB2FCC();
}

uint64_t sub_252BB2FCC()
{
  uint64_t v0 = sub_252CBAF78();
  v1(v0);
  sub_252B4C69C();
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ClientEffectInvocation.toolId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ClientEffectInvocation.parameters.getter()
{
  type metadata accessor for MessagePayload.ClientEffectInvocation(0);

  return swift_bridgeObjectRetain();
}

void MessagePayload.ClientEffectInvocation.init(stepId:sessionId:clientRequestId:clientSessionId:toolName:parameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_252AFC8E4();
  uint64_t v43 = v25;
  uint64_t v44 = v26;
  uint64_t v42 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_252D19588();
  sub_252AEA304();
  uint64_t v37 = *(void (**)(void))(v36 + 32);
  sub_252B236A0();
  sub_252CBC444();
  v37();
  uint64_t v38 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
  sub_252CBC444();
  v37();
  uint64_t v39 = (void *)(v35 + v38[6]);
  *uint64_t v39 = v33;
  v39[1] = v31;
  uint64_t v40 = (void *)(v35 + v38[7]);
  void *v40 = v29;
  v40[1] = v42;
  uint64_t v41 = (void *)(v35 + v38[8]);
  void *v41 = v43;
  v41[1] = v44;
  *(void *)(v35 + v38[9]) = a25;
  sub_252AFC918();
}

void static MessagePayload.ClientEffectInvocation.== infix(_:_:)()
{
  if (sub_252CBAA44())
  {
    uint64_t v0 = (int *)type metadata accessor for MessagePayload.ClientEffectInvocation(0);
    sub_252CB9E80((uint64_t)v0);
    if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
    {
      sub_252CB87FC(v0[6]);
      BOOL v3 = v3 && v1 == v2;
      if (v3 || (sub_252D1A5D8() & 1) != 0)
      {
        sub_252CB87FC(v0[7]);
        BOOL v6 = v3 && v4 == v5;
        if (v6 || (sub_252D1A5D8() & 1) != 0)
        {
          sub_252CB87FC(v0[8]);
          BOOL v9 = v3 && v7 == v8;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            sub_252CBBE20(v0[9]);
            sub_252BB3204();
          }
        }
      }
    }
  }
}

void sub_252BB3204()
{
  sub_252AFC730();
  sub_252B23194();
  sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v4);
  sub_252AEDC14();
  uint64_t v56 = v5;
  sub_252B22C04();
  MEMORY[0x270FA5388](v6);
  sub_252CB8F64();
  uint64_t v7 = sub_252AC3A24(&qword_269C47D48);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252CB87A8();
  MEMORY[0x270FA5388](v9);
  if (v1 == v0 || *(void *)(v1 + 16) != *(void *)(v0 + 16))
  {
LABEL_31:
    sub_252AFC718();
    return;
  }
  uint64_t v55 = (char *)&v48 - v10;
  uint64_t v51 = v1;
  sub_252CBA24C();
  unint64_t v13 = v12 & v11;
  int64_t v57 = 0;
  uint64_t v58 = v59 + 16;
  uint64_t v52 = v59 + 32;
  uint64_t v53 = v59 + 8;
  uint64_t v49 = v1 + 64;
  int64_t v50 = (unint64_t)(v14 + 63) >> 6;
  int64_t v48 = v50 - 1;
  uint64_t v54 = v0;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v57 << 6);
      uint64_t v17 = (uint64_t)v55;
LABEL_6:
      uint64_t v18 = (uint64_t *)(*(void *)(v51 + 48) + 16 * v16);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      sub_252AC3A24(&qword_269C43838);
      sub_252B4C1F4();
      v21();
      *uint64_t v2 = v19;
      v2[1] = v20;
      sub_252CBB324();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v22, v23, v24, v25);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
    int64_t v26 = v57 + 1;
    uint64_t v17 = (uint64_t)v55;
    if (__OFADD__(v57, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v26 < v50)
    {
      unint64_t v27 = *(void *)(v49 + 8 * v26);
      if (v27) {
        goto LABEL_10;
      }
      int64_t v28 = v57 + 2;
      ++v57;
      if (v26 + 1 < v50)
      {
        unint64_t v27 = *(void *)(v49 + 8 * v28);
        if (v27) {
          goto LABEL_13;
        }
        int64_t v57 = v26 + 1;
        if (v26 + 2 < v50)
        {
          unint64_t v27 = *(void *)(v49 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_10;
          }
          int64_t v28 = v26 + 3;
          int64_t v57 = v26 + 2;
          if (v26 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v29 = sub_252AC3A24(&qword_269C43838);
    sub_252B4C33C((uint64_t)v2, v30, v31, v29);
    unint64_t v13 = 0;
LABEL_25:
    uint64_t v32 = sub_252CBA168();
    sub_252CB7E4C(v32, v33, &qword_269C47D48);
    sub_252AC3A24(&qword_269C43838);
    sub_252CB8170(v17);
    if (v34) {
      goto LABEL_31;
    }
    sub_252B4C1CC();
    v35();
    uint64_t v36 = sub_252AFCA44();
    sub_252AC7C94(v36, v37);
    char v39 = v38;
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      sub_252CB94A4();
      v47();
      goto LABEL_31;
    }
    uint64_t v40 = v2;
    uint64_t v41 = v59;
    sub_252B4C1F4();
    v42();
    sub_252BA62F0((uint64_t)&unk_269C42950);
    sub_252CBBC18();
    char v43 = sub_252D19CF8();
    uint64_t v44 = *(void (**)(uint64_t))(v41 + 8);
    uint64_t v2 = v40;
    uint64_t v45 = sub_252CBA1C8();
    v44(v45);
    uint64_t v46 = sub_252B233D8();
    v44(v46);
    if ((v43 & 1) == 0) {
      goto LABEL_31;
    }
  }
  unint64_t v27 = *(void *)(v49 + 8 * v28);
  if (v27)
  {
LABEL_13:
    int64_t v26 = v28;
LABEL_10:
    unint64_t v13 = (v27 - 1) & v27;
    unint64_t v16 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v57 = v26;
    goto LABEL_6;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v50)
    {
      int64_t v57 = v48;
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v49 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_10;
    }
  }
LABEL_33:
  __break(1u);
}

void sub_252BB3648()
{
  sub_252AFC730();
  if (v0 == v1 || (uint64_t v2 = v1, v3 = v0, *(void *)(v0 + 16) != *(void *)(v1 + 16)))
  {
LABEL_22:
    sub_252AFC718();
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = v0 + 64;
  sub_252CBA24C();
  unint64_t v8 = v7 & v6;
  int64_t v10 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v13 >= v10) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v10) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v10) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_20:
    uint64_t v16 = *(void *)(*(void *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_252CBA1C8();
    unint64_t v19 = sub_252AC7C94(v17, v18);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(void *)(*(void *)(v2 + 56) + 8 * v19) != v16) {
      goto LABEL_22;
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    goto LABEL_22;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v10) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_252BB37C0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v46 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v8)
      {
        uint64_t v47 = (v8 - 1) & v8;
        int64_t v48 = v4;
        unint64_t v9 = __clz(__rbit64(v8)) | (v4 << 6);
      }
      else
      {
        int64_t v10 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_75;
        }
        if (v10 >= v46) {
          return 1;
        }
        unint64_t v11 = *(void *)(v5 + 8 * v10);
        int64_t v12 = v4 + 1;
        if (!v11)
        {
          int64_t v12 = v4 + 2;
          if (v4 + 2 >= v46) {
            return 1;
          }
          unint64_t v11 = *(void *)(v5 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 3;
            if (v4 + 3 >= v46) {
              return 1;
            }
            unint64_t v11 = *(void *)(v5 + 8 * v12);
            if (!v11)
            {
              uint64_t v13 = v4 + 4;
              if (v4 + 4 >= v46) {
                return 1;
              }
              unint64_t v11 = *(void *)(v5 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_76;
                  }
                  if (v12 >= v46) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v5 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v12 = v4 + 4;
            }
          }
        }
LABEL_21:
        uint64_t v47 = (v11 - 1) & v11;
        int64_t v48 = v12;
        unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
      }
      unint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      uint64_t v17 = *(void *)(v3 + 56) + 24 * v9;
      unint64_t v19 = *(void **)v17;
      uint64_t v18 = *(void *)(v17 + 8);
      int v20 = *(unsigned __int8 *)(v17 + 16);
      swift_bridgeObjectRetain();
      sub_252C092CC((uint64_t)v19, v18, v20);
      unint64_t v21 = sub_252AC7C94(v15, v16);
      char v23 = v22;
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        goto LABEL_72;
      }
      uint64_t v24 = *(void *)(a2 + 56) + 24 * v21;
      int64_t v26 = *(void **)v24;
      uint64_t v25 = *(void *)(v24 + 8);
      int v27 = *(unsigned __int8 *)(v24 + 16);
      if (!*(unsigned char *)(v24 + 16))
      {
        if (v20) {
          goto LABEL_67;
        }
        if (v26 != v19 || v25 != v18)
        {
          char v29 = sub_252D1A5D8();
          swift_bridgeObjectRetain();
          sub_252C092F4((uint64_t)v26, v25, 0);
          uint64_t v30 = (uint64_t)v19;
          uint64_t v31 = v18;
          char v32 = 0;
          goto LABEL_37;
        }
        swift_bridgeObjectRetain();
        uint64_t v36 = (uint64_t)v19;
        uint64_t v37 = v18;
        char v38 = 0;
        goto LABEL_49;
      }
      if (v27 == 1) {
        break;
      }
      if (v20 != 2) {
        goto LABEL_67;
      }
      if (v26 == v19 && v25 == v18)
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = (uint64_t)v19;
        uint64_t v37 = v18;
        char v38 = 2;
        goto LABEL_49;
      }
      char v29 = sub_252D1A5D8();
      swift_bridgeObjectRetain();
      sub_252C092F4((uint64_t)v26, v25, 2);
      uint64_t v30 = (uint64_t)v19;
      uint64_t v31 = v18;
      char v32 = 2;
LABEL_37:
      uint64_t result = sub_252C092F4(v30, v31, v32);
      unint64_t v8 = v47;
      int64_t v4 = v48;
      if ((v29 & 1) == 0) {
        return 0;
      }
    }
    if (v20 != 1)
    {
LABEL_67:
      sub_252C092CC(*(void *)v24, *(void *)(v24 + 8), *(unsigned char *)(v24 + 16));
LABEL_71:
      sub_252C092F4((uint64_t)v26, v25, v27);
LABEL_72:
      sub_252C092F4((uint64_t)v19, v18, v20);
      return 0;
    }
    unint64_t v34 = v26[2];
    if (v34 != v19[2]) {
      goto LABEL_69;
    }
    if (v34) {
      BOOL v35 = v26 == v19;
    }
    else {
      BOOL v35 = 1;
    }
    if (v35)
    {
      uint64_t v36 = swift_bridgeObjectRetain();
      uint64_t v37 = v25;
      char v38 = 1;
LABEL_49:
      sub_252C092F4(v36, v37, v38);
      goto LABEL_50;
    }
    uint64_t result = v26[4];
    if (result != v19[4] || v26[5] != v19[5])
    {
      uint64_t result = sub_252D1A5D8();
      if ((result & 1) == 0)
      {
LABEL_69:
        swift_bridgeObjectRetain();
        LOBYTE(v27) = 1;
LABEL_70:
        LOBYTE(v20) = 1;
        goto LABEL_71;
      }
    }
    uint64_t v44 = v5;
    uint64_t v45 = v3;
    if (v34 != 1) {
      break;
    }
LABEL_65:
    sub_252C092CC((uint64_t)v26, v25, 1);
    sub_252C092F4((uint64_t)v26, v25, 1);
    uint64_t v5 = v44;
    uint64_t v3 = v45;
LABEL_50:
    unint64_t v8 = v47;
    int64_t v4 = v48;
    uint64_t result = sub_252C092F4((uint64_t)v19, v18, v27);
  }
  uint64_t v40 = v19 + 7;
  uint64_t v41 = v26 + 7;
  unint64_t v42 = 1;
  while (v42 < v34)
  {
    uint64_t result = *(v41 - 1);
    if (result != *(v40 - 1) || *v41 != *v40)
    {
      uint64_t result = sub_252D1A5D8();
      if ((result & 1) == 0)
      {
        LOBYTE(v27) = 1;
        sub_252C092CC((uint64_t)v26, v25, 1);
        goto LABEL_70;
      }
    }
    ++v42;
    v40 += 2;
    v41 += 2;
    if (v34 == v42) {
      goto LABEL_65;
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

uint64_t sub_252BB3BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(0);
  MEMORY[0x270FA5388](v4 - 8);
  char v67 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v68 = (char *)&v61 - v10;
  uint64_t v72 = sub_252AC3A24(&qword_269C44780);
  MEMORY[0x270FA5388](v72);
  int64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
  uint64_t v73 = *(void *)(v70 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v70);
  uint64_t v74 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v61 - v15;
  uint64_t v17 = sub_252AC3A24(&qword_269C47D50);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  int v20 = (uint64_t *)((char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v18);
  char v23 = (uint64_t *)((char *)&v61 - v22);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v71 = 0;
  uint64_t v65 = v9;
  uint64_t v66 = a1;
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v63 = a1 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v64 = (unint64_t)(v25 + 63) >> 6;
  int64_t v62 = v64 - 1;
  uint64_t v69 = v6;
  if ((v26 & v24) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v28 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  unint64_t v29 = v28 | (v71 << 6);
LABEL_7:
  uint64_t v30 = (uint64_t *)(*(void *)(v66 + 48) + 16 * v29);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  uint64_t v33 = sub_252AC3A24(&qword_269C47D58);
  sub_252BA661C();
  *int v20 = v32;
  v20[1] = v31;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v20, 0, 1, v33);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_252CB7E4C((uint64_t)v20, (uint64_t)v23, &qword_269C47D50);
    uint64_t v38 = sub_252AC3A24(&qword_269C47D58);
    uint64_t v39 = 1;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v23, 1, v38) == 1) {
      return v39;
    }
    uint64_t v40 = *v23;
    uint64_t v41 = v23[1];
    sub_252C06474();
    sub_252AC7C94(v40, v41);
    char v43 = v42;
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0) {
      goto LABEL_62;
    }
    sub_252BA661C();
    uint64_t v44 = &v12[*(int *)(v72 + 48)];
    sub_252BA661C();
    sub_252BA661C();
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_252BA661C();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_252BA6670();
LABEL_60:
      sub_252B5A4CC((uint64_t)v12, &qword_269C44780);
      goto LABEL_61;
    }
    sub_252C06474();
    char v45 = _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
    sub_252BA6670();
    sub_252BA6670();
    if ((v45 & 1) == 0) {
      goto LABEL_57;
    }
LABEL_40:
    sub_252BA6670();
    uint64_t v53 = *(int *)(v70 + 20);
    uint64_t v54 = &v74[v53];
    int v55 = v74[v53 + 8];
    uint64_t v56 = &v16[v53];
    int v57 = v16[v53 + 8];
    if (v55 == 255)
    {
      if (v57 != 255) {
        goto LABEL_61;
      }
    }
    else
    {
      if (v57 == 255) {
        goto LABEL_61;
      }
      if (v55)
      {
        if (v55 == 1)
        {
          uint64_t v58 = *(void *)v54;
          uint64_t v59 = *(void *)v56;
          if (v57 != 1 || v58 != v59) {
            goto LABEL_61;
          }
        }
        else if (v57 != 2)
        {
          goto LABEL_61;
        }
      }
      else if (v57)
      {
        goto LABEL_61;
      }
    }
    sub_252BA6670();
    uint64_t result = sub_252BA6670();
    if (v27) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v34 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v34 < v64)
    {
      unint64_t v35 = *(void *)(v63 + 8 * v34);
      if (v35) {
        goto LABEL_11;
      }
      int64_t v36 = v71 + 2;
      ++v71;
      if (v34 + 1 < v64)
      {
        unint64_t v35 = *(void *)(v63 + 8 * v36);
        if (v35) {
          goto LABEL_14;
        }
        int64_t v71 = v34 + 1;
        if (v34 + 2 < v64)
        {
          unint64_t v35 = *(void *)(v63 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_11;
          }
          int64_t v36 = v34 + 3;
          int64_t v71 = v34 + 2;
          if (v34 + 3 < v64)
          {
            unint64_t v35 = *(void *)(v63 + 8 * v36);
            if (!v35)
            {
              while (1)
              {
                int64_t v34 = v36 + 1;
                if (__OFADD__(v36, 1)) {
                  break;
                }
                if (v34 >= v64)
                {
                  int64_t v71 = v62;
                  goto LABEL_25;
                }
                unint64_t v35 = *(void *)(v63 + 8 * v34);
                ++v36;
                if (v35) {
                  goto LABEL_11;
                }
              }
LABEL_66:
              __break(1u);
              return result;
            }
LABEL_14:
            int64_t v34 = v36;
LABEL_11:
            unint64_t v27 = (v35 - 1) & v35;
            unint64_t v29 = __clz(__rbit64(v35)) + (v34 << 6);
            int64_t v71 = v34;
            goto LABEL_7;
          }
        }
      }
    }
LABEL_25:
    uint64_t v37 = sub_252AC3A24(&qword_269C47D58);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v20, 1, 1, v37);
    unint64_t v27 = 0;
  }
  int64_t v46 = (uint64_t *)v68;
  sub_252BA661C();
  uint64_t v47 = *v46;
  uint64_t v48 = v46[1];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  uint64_t v49 = *(void *)v44;
  uint64_t v50 = *((void *)v44 + 1);
  if (v47 == v49 && v48 == v50)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_40;
  }
  char v52 = sub_252D1A5D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v52) {
    goto LABEL_40;
  }
LABEL_57:
  sub_252BA6670();
LABEL_61:
  sub_252BA6670();
LABEL_62:
  sub_252BA6670();
  return 0;
}

uint64_t sub_252BB43E0(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
  MEMORY[0x270FA5388](v65);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_252D19BE8();
  uint64_t v6 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v66 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_252AC3A24(&qword_269C44680);
  MEMORY[0x270FA5388](v72);
  unint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(0);
  uint64_t v74 = *(void *)(v71 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v71);
  int64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v75 = (char *)&v56 - v17;
  MEMORY[0x270FA5388](v16);
  char v76 = (char *)&v56 - v18;
  uint64_t v19 = sub_252AC3A24(&qword_269C47D60);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (uint64_t *)((char *)&v56 - v24);
  if (a1 == a2) {
    return 1;
  }
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v64 = a2;
  if (v26 != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v70 = 0;
  uint64_t v68 = a1;
  uint64_t v29 = *(void *)(a1 + 64);
  uint64_t v28 = a1 + 64;
  uint64_t v27 = v29;
  uint64_t v30 = 1 << *(unsigned char *)(v28 - 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & v27;
  uint64_t v58 = v28;
  uint64_t v59 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v61 = (void (**)(char *, uint64_t))(v6 + 8);
  int64_t v62 = v15;
  int64_t v60 = (unint64_t)(v30 + 63) >> 6;
  int64_t v57 = v60 - 1;
  uint64_t v69 = v5;
  uint64_t v63 = v12;
  if (!v32) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v73 = (v32 - 1) & v32;
  unint64_t v33 = __clz(__rbit64(v32)) | (v70 << 6);
LABEL_7:
  int64_t v34 = (uint64_t *)(*(void *)(v68 + 48) + 16 * v33);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  uint64_t v37 = sub_252AC3A24(&qword_269C47D68);
  sub_252BA661C();
  void *v22 = v36;
  v22[1] = v35;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 0, 1, v37);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_252CB7E4C((uint64_t)v22, (uint64_t)v25, &qword_269C47D60);
    uint64_t v42 = sub_252AC3A24(&qword_269C47D68);
    uint64_t v43 = 1;
    if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v25, 1, v42) == 1) {
      return v43;
    }
    uint64_t v44 = *v25;
    uint64_t v45 = v25[1];
    sub_252C06474();
    sub_252AC7C94(v44, v45);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0) {
      goto LABEL_44;
    }
    sub_252BA661C();
    uint64_t v48 = &v9[*(int *)(v72 + 48)];
    sub_252BA661C();
    sub_252BA661C();
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    uint64_t v50 = v9;
    uint64_t v51 = v62;
    sub_252BA661C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*v61)(v51, v67);
      unint64_t v9 = v50;
      goto LABEL_42;
    }
    uint64_t v53 = v66;
    uint64_t v52 = v67;
    (*v59)(v66, v48, v67);
    char v54 = _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
    int v55 = *v61;
    (*v61)(v51, v52);
    v55(v53, v52);
    unint64_t v9 = v50;
    if ((v54 & 1) == 0) {
      goto LABEL_39;
    }
LABEL_35:
    sub_252BA6670();
    sub_252BA6670();
    uint64_t result = sub_252BA6670();
    unint64_t v32 = v73;
    if (v73) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v38 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v38 < v60)
    {
      unint64_t v39 = *(void *)(v58 + 8 * v38);
      if (v39) {
        goto LABEL_11;
      }
      int64_t v40 = v70 + 2;
      ++v70;
      if (v38 + 1 < v60)
      {
        unint64_t v39 = *(void *)(v58 + 8 * v40);
        if (v39) {
          goto LABEL_14;
        }
        int64_t v70 = v38 + 1;
        if (v38 + 2 < v60)
        {
          unint64_t v39 = *(void *)(v58 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_11;
          }
          int64_t v40 = v38 + 3;
          int64_t v70 = v38 + 2;
          if (v38 + 3 < v60)
          {
            unint64_t v39 = *(void *)(v58 + 8 * v40);
            if (!v39)
            {
              while (1)
              {
                int64_t v38 = v40 + 1;
                if (__OFADD__(v40, 1)) {
                  break;
                }
                if (v38 >= v60)
                {
                  int64_t v70 = v57;
                  goto LABEL_25;
                }
                unint64_t v39 = *(void *)(v58 + 8 * v38);
                ++v40;
                if (v39) {
                  goto LABEL_11;
                }
              }
LABEL_48:
              __break(1u);
              return result;
            }
LABEL_14:
            int64_t v38 = v40;
LABEL_11:
            uint64_t v73 = (v39 - 1) & v39;
            unint64_t v33 = __clz(__rbit64(v39)) + (v38 << 6);
            int64_t v70 = v38;
            goto LABEL_7;
          }
        }
      }
    }
LABEL_25:
    uint64_t v41 = sub_252AC3A24(&qword_269C47D68);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v22, 1, 1, v41);
    uint64_t v73 = 0;
  }
  sub_252BA661C();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_252BA6670();
LABEL_42:
    sub_252B5A4CC((uint64_t)v9, &qword_269C44680);
    goto LABEL_43;
  }
  sub_252C06474();
  if (_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0())
  {
    sub_252B1D7E4();
    if (v49)
    {
      sub_252BA6670();
      sub_252BA6670();
      goto LABEL_35;
    }
  }
  sub_252BA6670();
  sub_252BA6670();
LABEL_39:
  sub_252BA6670();
LABEL_43:
  sub_252BA6670();
LABEL_44:
  sub_252BA6670();
  return 0;
}

uint64_t sub_252BB4C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for ParameterValue(0);
  uint64_t v4 = *(void *)(v48 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v48);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = sub_252AC3A24(&qword_269C47D38);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (int64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (int64_t *)((char *)&v44 - v15);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v49 = 0;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v45 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v46 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v47 = v4;
  int64_t v44 = v46 - 1;
  if ((v19 & v17) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v21 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v22 = v21 | (v49 << 6);
  while (2)
  {
    char v23 = (void *)(*(void *)(a1 + 48) + 16 * v22);
    uint64_t v24 = v23[1];
    *uint64_t v13 = *v23;
    v13[1] = v24;
    uint64_t v25 = sub_252AC3A24(&qword_269C47D40);
    sub_252BA661C();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 0, 1, v25);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_252CB7E4C((uint64_t)v13, (uint64_t)v16, &qword_269C47D38);
      uint64_t v30 = sub_252AC3A24(&qword_269C47D40);
      uint64_t v31 = 1;
      if (_s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwet_0((uint64_t)v16, 1, v30) == 1) {
        return v31;
      }
      uint64_t v32 = *v16;
      uint64_t v33 = v16[1];
      sub_252C06474();
      sub_252AC7C94(v32, v33);
      LOBYTE(v32) = v34;
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0) {
        goto LABEL_50;
      }
      sub_252BA661C();
      if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) == 0)
      {
LABEL_49:
        sub_252BA6670();
LABEL_50:
        sub_252BA6670();
        return 0;
      }
      uint64_t v35 = *(int *)(v48 + 20);
      uint64_t v36 = &v7[v35];
      char v37 = v7[v35 + 9];
      int64_t v38 = &v9[v35];
      char v39 = v9[v35 + 9];
      if (v37)
      {
        if ((v39 & 1) == 0) {
          goto LABEL_49;
        }
      }
      else
      {
        if (v39) {
          goto LABEL_49;
        }
        uint64_t v40 = *(void *)v36;
        char v41 = v36[8];
        uint64_t v42 = *(void *)v38;
        char v43 = v38[8];
        if (v41)
        {
          if (v40)
          {
            if ((v43 & 1) == 0 || !v42) {
              goto LABEL_49;
            }
          }
          else if ((v43 & 1) == 0 || v42)
          {
            goto LABEL_49;
          }
        }
        else if ((v43 & 1) != 0 || v40 != v42)
        {
          goto LABEL_49;
        }
      }
      sub_252BA6670();
      uint64_t result = sub_252BA6670();
      if (v20) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v26 = v49 + 1;
      if (__OFADD__(v49, 1))
      {
        __break(1u);
        goto LABEL_54;
      }
      if (v26 < v46)
      {
        unint64_t v27 = *(void *)(v45 + 8 * v26);
        if (v27) {
          goto LABEL_11;
        }
        int64_t v28 = v49 + 2;
        ++v49;
        if (v26 + 1 < v46)
        {
          unint64_t v27 = *(void *)(v45 + 8 * v28);
          if (v27) {
            goto LABEL_14;
          }
          int64_t v49 = v26 + 1;
          if (v26 + 2 < v46)
          {
            unint64_t v27 = *(void *)(v45 + 8 * (v26 + 2));
            if (v27)
            {
              v26 += 2;
              goto LABEL_11;
            }
            int64_t v49 = v26 + 2;
            if (v26 + 3 < v46)
            {
              unint64_t v27 = *(void *)(v45 + 8 * (v26 + 3));
              if (v27)
              {
                v26 += 3;
                goto LABEL_11;
              }
              int64_t v28 = v26 + 4;
              int64_t v49 = v26 + 3;
              if (v26 + 4 < v46) {
                break;
              }
            }
          }
        }
      }
LABEL_28:
      uint64_t v29 = sub_252AC3A24(&qword_269C47D40);
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v13, 1, 1, v29);
      unint64_t v20 = 0;
    }
    unint64_t v27 = *(void *)(v45 + 8 * v28);
    if (v27)
    {
LABEL_14:
      int64_t v26 = v28;
LABEL_11:
      unint64_t v20 = (v27 - 1) & v27;
      unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
      int64_t v49 = v26;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v46)
    {
      int64_t v49 = v44;
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v45 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_11;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_252BB5140(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6552746E65696C63 && a2 == 0xEF64497473657571;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6553746E65696C63 && a2 == 0xEF64496E6F697373;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_252D1A5D8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252BB5400(char a1)
{
  uint64_t result = 0x644970657473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x496E6F6973736573;
      break;
    case 2:
      uint64_t result = 0x6552746E65696C63;
      break;
    case 3:
      uint64_t result = 0x6553746E65696C63;
      break;
    case 4:
      uint64_t result = 0x64496C6F6F74;
      break;
    case 5:
      uint64_t result = 0x6574656D61726170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BB54E0()
{
  return sub_252BB5400(*v0);
}

uint64_t sub_252BB54E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB5140(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB5510(uint64_t a1)
{
  unint64_t v2 = sub_252C07974();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB554C(uint64_t a1)
{
  unint64_t v2 = sub_252C07974();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientEffectInvocation.encode(to:)()
{
  sub_252AF4380();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C44668);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C07974();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252B982A8();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientEffectInvocation(0);
    sub_252B982A8();
    sub_252CB8868();
    sub_252CB8868();
    sub_252CB8868();
    sub_252CBC294();
    sub_252AC3A24(&qword_269C44218);
    sub_252C06534();
    sub_252B982A8();
  }
  sub_252B5F658();
  v2();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.ClientEffectInvocation.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v5 = sub_252CBC228(v4);
  sub_252AEDBD0();
  uint64_t v40 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  sub_252CBB5D4();
  sub_252AC3A24(&qword_269C44678);
  sub_252AEDBD0();
  uint64_t v35 = v12;
  uint64_t v36 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_252CB83D0();
  uint64_t v38 = type metadata accessor for MessagePayload.ClientEffectInvocation(v13);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  sub_252AEDE70();
  uint64_t v16 = v15;
  char v39 = v3;
  sub_252CB85D0(v3);
  sub_252C07974();
  uint64_t v37 = v1;
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v39);
  }
  else
  {
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CBC964();
    uint64_t v34 = v16;
    uint64_t v17 = sub_252CBC3B4();
    uint64_t v19 = v18;
    ((void (*)(uint64_t))v18)(v17);
    unint64_t v20 = v10;
    sub_252CBC964();
    uint64_t v21 = v34;
    v19(v34 + *(int *)(v38 + 20), v20, v5);
    sub_252CB965C();
    uint64_t v22 = sub_252D1A448();
    char v23 = (int *)v38;
    uint64_t v24 = (uint64_t *)(v21 + *(int *)(v38 + 24));
    *uint64_t v24 = v22;
    v24[1] = v25;
    sub_252CBC2C0();
    uint64_t v26 = sub_252D1A448();
    unint64_t v27 = (uint64_t *)(v21 + v23[7]);
    *unint64_t v27 = v26;
    v27[1] = v28;
    sub_252CBB654();
    uint64_t v29 = sub_252D1A448();
    uint64_t v30 = (uint64_t *)(v21 + v23[8]);
    *uint64_t v30 = v29;
    v30[1] = v31;
    sub_252AC3A24(&qword_269C44218);
    sub_252CBC294();
    sub_252C06678();
    sub_252D1A498();
    sub_252B5F53C();
    v32();
    *(void *)(v21 + v23[9]) = v41;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v39);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BB5C40()
{
}

void sub_252BB5C58()
{
}

uint64_t MessagePayload.ClientAction.eventId.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ClientAction.eventId.setter()
{
  return sub_252C04A40();
}

uint64_t (*MessagePayload.ClientAction.eventId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.toolId.getter()
{
  return sub_252BB5CD8();
}

uint64_t sub_252BB5CD8()
{
  uint64_t v0 = sub_252CBAF78();
  v1(v0);
  sub_252B4C69C();
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ClientAction.toolId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BD4B98(a1, a2);
}

uint64_t (*MessagePayload.ClientAction.toolId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.parameters.getter()
{
  type metadata accessor for MessagePayload.ClientAction(0);

  return swift_bridgeObjectRetain();
}

uint64_t MessagePayload.ClientAction.parameters.setter()
{
  uint64_t v2 = *(int *)(sub_252CBB17C() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*MessagePayload.ClientAction.parameters.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.shimParameterResolution.getter()
{
  type metadata accessor for MessagePayload.ClientAction(0);

  return swift_bridgeObjectRetain();
}

uint64_t MessagePayload.ClientAction.shimParameterResolution.setter()
{
  uint64_t v2 = *(int *)(sub_252CBB17C() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*MessagePayload.ClientAction.shimParameterResolution.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.clientQueryId.getter()
{
  return sub_252BE18FC();
}

uint64_t MessagePayload.ClientAction.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BE1948(a1, a2);
}

uint64_t (*MessagePayload.ClientAction.clientQueryId.modify())()
{
  return nullsub_1;
}

void MessagePayload.ClientAction.init(eventId:toolId:parameters:shimParameterResolution:clientQueryId:)()
{
  sub_252AFC730();
  sub_252CBA1F8();
  uint64_t v7 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
  uint64_t v8 = (void *)(v6 + v7[8]);
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v9();
  uint64_t v10 = (void *)(v6 + v7[5]);
  *uint64_t v10 = v5;
  v10[1] = v4;
  *(void *)(v6 + v7[6]) = v3;
  void *v8 = v1;
  v8[1] = v0;
  *(void *)(v6 + v7[7]) = v2;
  sub_252AFC718();
}

void MessagePayload.ClientAction.init(eventId:toolId:parameters:clientQueryId:)()
{
  sub_252AFC698();
  uint64_t v14 = v6;
  uint64_t v8 = v7;
  sub_252CB9B6C();
  sub_252AEA314();
  sub_252AEDE38();
  v9();
  uint64_t v10 = (void *)(v3 + v4[5]);
  *uint64_t v10 = v2;
  v10[1] = v0;
  *(void *)(v3 + v4[6]) = v1;
  void *v5 = v8;
  v5[1] = v14;
  swift_bridgeObjectRetain();
  sub_252C05F30();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  sub_252CB8E20();
  v13();
  *(void *)(v3 + v4[7]) = v12;
  sub_252AFC67C();
}

void MessagePayload.ClientAction.init(eventId:toolId:shimParameterResolution:clientQueryId:)()
{
  sub_252AFC698();
  uint64_t v13 = v6;
  uint64_t v8 = v7;
  sub_252CB9B6C();
  void *v5 = 0;
  v5[1] = 0;
  sub_252AEA314();
  sub_252AEDE38();
  v9();
  uint64_t v10 = (void *)(v3 + v4[5]);
  *uint64_t v10 = v2;
  v10[1] = v0;
  uint64_t v11 = sub_252BB6114(v1);
  sub_252CBAD54();
  sub_252B0012C();
  v12();
  *(void *)(v3 + v4[6]) = v11;
  *(void *)(v3 + v4[7]) = v1;
  swift_bridgeObjectRelease();
  void *v5 = v8;
  v5[1] = v13;
  sub_252AFC67C();
}

uint64_t sub_252BB6114(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v67 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_252D19BE8();
  uint64_t v5 = *(void *)(v65 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v65);
  uint64_t v64 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int64_t v60 = (char *)v52 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)v52 - v10;
  uint64_t v11 = sub_252AC3A24(&qword_269C47D68);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v58 = (void *)((char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (void *)((char *)v52 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = (char *)v52 - v17;
  uint64_t v75 = MEMORY[0x263F8EE80];
  sub_252C06258(a1, v71);
  uint64_t v68 = v71[0];
  uint64_t v61 = v71[1];
  uint64_t v18 = v73;
  unint64_t v19 = v74;
  v52[1] = v72;
  int64_t v62 = (unint64_t)(v72 + 64) >> 6;
  uint64_t v54 = v5;
  uint64_t v63 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v56 = v2;
  uint64_t v55 = v3;
  uint64_t v57 = v11;
  uint64_t v53 = v16;
  while (1)
  {
    while (1)
    {
      if (v19)
      {
        uint64_t v69 = (v19 - 1) & v19;
        int64_t v70 = v18;
        unint64_t v21 = __clz(__rbit64(v19)) | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_37;
        }
        if (v22 >= v62) {
          goto LABEL_35;
        }
        unint64_t v23 = *(void *)(v61 + 8 * v22);
        int64_t v24 = v18 + 1;
        if (!v23)
        {
          int64_t v24 = v18 + 2;
          if (v18 + 2 >= v62) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v61 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v18 + 3;
            if (v18 + 3 >= v62) {
              goto LABEL_35;
            }
            unint64_t v23 = *(void *)(v61 + 8 * v24);
            if (!v23)
            {
              int64_t v24 = v18 + 4;
              if (v18 + 4 >= v62) {
                goto LABEL_35;
              }
              unint64_t v23 = *(void *)(v61 + 8 * v24);
              if (!v23)
              {
                int64_t v24 = v18 + 5;
                if (v18 + 5 >= v62) {
                  goto LABEL_35;
                }
                unint64_t v23 = *(void *)(v61 + 8 * v24);
                if (!v23)
                {
                  int64_t v25 = v18 + 6;
                  while (v25 < v62)
                  {
                    unint64_t v23 = *(void *)(v61 + 8 * v25++);
                    if (v23)
                    {
                      int64_t v24 = v25 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_35:
                  sub_252CB7DF8();
                  return v75;
                }
              }
            }
          }
        }
LABEL_19:
        uint64_t v69 = (v23 - 1) & v23;
        int64_t v70 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      uint64_t v26 = (uint64_t *)(*(void *)(v68 + 48) + 16 * v21);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      uint64_t v29 = v3;
      uint64_t v30 = v66;
      sub_252BA661C();
      *uint64_t v30 = v28;
      v30[1] = v27;
      sub_252CB7E4C((uint64_t)v30, (uint64_t)v16, &qword_269C47D68);
      uint64_t v31 = v67;
      sub_252BA661C();
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      swift_bridgeObjectRetain();
      sub_252BA6670();
      uint64_t result = sub_252B5A4CC((uint64_t)v16, &qword_269C47D68);
      uint64_t v3 = v29;
      unint64_t v19 = v69;
      uint64_t v18 = v70;
    }
    uint64_t v32 = *v63;
    uint64_t v33 = v60;
    uint64_t v34 = v65;
    (*v63)(v60, v31, v65);
    uint64_t v35 = v59;
    v32(v59, v33, v34);
    uint64_t v36 = v58;
    uint64_t v37 = *v16;
    uint64_t v38 = v16[1];
    *uint64_t v58 = *v16;
    v36[1] = v38;
    sub_252C06474();
    v32(v64, v35, v34);
    uint64_t v39 = v75;
    unint64_t v40 = *(void *)(v75 + 16);
    if (*(void *)(v75 + 24) <= v40)
    {
      uint64_t v41 = v40 + 1;
      swift_bridgeObjectRetain();
      sub_252CF39D8(v41, 1);
      uint64_t v39 = v75;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_252D1A6A8();
    sub_252D19DB8();
    uint64_t result = sub_252D1A6E8();
    uint64_t v42 = v39 + 64;
    uint64_t v43 = -1 << *(unsigned char *)(v39 + 32);
    unint64_t v44 = result & ~v43;
    unint64_t v45 = v44 >> 6;
    uint64_t v18 = v70;
    if (((-1 << v44) & ~*(void *)(v39 + 64 + 8 * (v44 >> 6))) == 0) {
      break;
    }
    unint64_t v46 = __clz(__rbit64((-1 << v44) & ~*(void *)(v39 + 64 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v42 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
    uint64_t v51 = (void *)(*(void *)(v39 + 48) + 16 * v46);
    *uint64_t v51 = v37;
    v51[1] = v38;
    v32((char *)(*(void *)(v39 + 56) + *(void *)(v54 + 72) * v46), v64, v65);
    ++*(void *)(v39 + 16);
    uint64_t result = sub_252BA6670();
    uint64_t v3 = v55;
    uint64_t v16 = v53;
    unint64_t v19 = v69;
  }
  char v47 = 0;
  unint64_t v48 = (unint64_t)(63 - v43) >> 6;
  while (++v45 != v48 || (v47 & 1) == 0)
  {
    BOOL v49 = v45 == v48;
    if (v45 == v48) {
      unint64_t v45 = 0;
    }
    v47 |= v49;
    uint64_t v50 = *(void *)(v42 + 8 * v45);
    if (v50 != -1)
    {
      unint64_t v46 = __clz(__rbit64(~v50)) + (v45 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t MessagePayload.ClientAction.init(eventId:toolId:parameters:)()
{
  uint64_t v4 = sub_252CB982C();
  uint64_t v5 = (int *)type metadata accessor for MessagePayload.ClientAction(v4);
  uint64_t v6 = (void *)(v3 + v5[8]);
  sub_252D19588();
  *uint64_t v6 = 0;
  v6[1] = 0;
  sub_252AEA314();
  sub_252B233D8();
  sub_252AEDE38();
  v7();
  uint64_t v8 = (void *)(v3 + v5[5]);
  void *v8 = v2;
  v8[1] = v1;
  *(void *)(v3 + v5[6]) = v0;
  swift_bridgeObjectRetain();
  sub_252C05F30();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_252CBAA94();
  sub_252CB8ACC();
  uint64_t result = v11();
  *(void *)(v3 + v5[7]) = v10;
  return result;
}

void static MessagePayload.ClientAction.ShimParameterResolution.== infix(_:_:)()
{
  sub_252AFC730();
  type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v1);
  sub_252CBB0B0();
  sub_252AEDBD0();
  uint64_t v12 = v2;
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_252CB83D0();
  type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(v4);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v6);
  sub_252CBA5B8();
  uint64_t v7 = sub_252AC3A24(&qword_269C44680);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252CBA98C();
  sub_252BA661C();
  sub_252BA661C();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_252CBBD18();
    if (sub_252CBB1AC() != 1)
    {
      sub_252CBC378();
      sub_252B7E53C();
      v10();
      sub_252CBA174();
      _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      uint64_t v11 = *(void (**)(void))(v12 + 8);
      sub_252CBA5F4();
      sub_252CB8D6C();
      v11();
      sub_252CB8D6C();
      v11();
      sub_252BA6670();
      goto LABEL_11;
    }
    sub_252CB8D6C();
    v9();
    goto LABEL_8;
  }
  sub_252BA661C();
  if (sub_252CBB1AC() != 1)
  {
    sub_252BA6670();
LABEL_8:
    sub_252B5A4CC(v0, &qword_269C44680);
    goto LABEL_11;
  }
  sub_252C06474();
  if (_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0()) {
    sub_252B1D7E4();
  }
  sub_252BA6670();
  sub_252BA6670();
  sub_252BA6670();
LABEL_11:
  sub_252CBBC64();
  sub_252AFC718();
}

uint64_t static MessagePayload.ClientAction.UnresolvedParameterValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252BC406C(a1, a2, MEMORY[0x263F804B8], type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue, (uint64_t (*)(uint64_t))sub_252B1D7E4);
}

uint64_t sub_252BB6C80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BB6D7C(char a1)
{
  if (a1) {
    return 0x766C6F7365726E75;
  }
  else {
    return 0x6465766C6F736572;
  }
}

uint64_t sub_252BB6DB8()
{
  return sub_252BB6D7C(*v0);
}

uint64_t sub_252BB6DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB6C80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB6DE8(uint64_t a1)
{
  unint64_t v2 = sub_252C07A20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB6E24(uint64_t a1)
{
  unint64_t v2 = sub_252C07A20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BB6E60(uint64_t a1)
{
  unint64_t v2 = sub_252C07AB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB6E9C(uint64_t a1)
{
  unint64_t v2 = sub_252C07AB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BB6ED8(uint64_t a1)
{
  unint64_t v2 = sub_252C07A6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB6F14(uint64_t a1)
{
  unint64_t v2 = sub_252C07A6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientAction.ShimParameterResolution.encode(to:)()
{
  sub_252AF4380();
  uint64_t v23 = v0;
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C44688);
  sub_252AEDBD0();
  v22[6] = v4;
  v22[7] = v3;
  MEMORY[0x270FA5388](v3);
  v22[5] = (uint64_t)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_252AEDD78();
  v22[1] = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(v6);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  sub_252CB82C0(v8, v22[0]);
  sub_252AC3A24(&qword_269C44690);
  sub_252AEDBD0();
  v22[2] = v10;
  v22[3] = v9;
  MEMORY[0x270FA5388](v9);
  sub_252CB87E0();
  v22[0] = sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v24 = v11;
  MEMORY[0x270FA5388](v12);
  type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v13);
  sub_252B7732C();
  uint64_t v25 = sub_252AC3A24(&qword_269C44698);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v14);
  sub_252AC423C();
  sub_252CB85D0(v2);
  sub_252C07A20();
  sub_252B77644();
  sub_252D1A738();
  sub_252BA661C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_252C06474();
    sub_252C07A6C();
    sub_252CB8714();
    sub_252BA62F0((uint64_t)&unk_269C446B0);
    sub_252B98D40();
    sub_252D1A578();
    sub_252B5F53C();
    v15();
    sub_252BA6670();
    sub_252CB9CB0();
    sub_252B5F658();
    v16();
  }
  else
  {
    sub_252B7E53C();
    v17();
    sub_252C07AB8();
    sub_252CB8714();
    sub_252BA62F0((uint64_t)&unk_269C440E0);
    sub_252D1A578();
    sub_252B7E4D8();
    sub_252B5F53C();
    v18();
    sub_252CB927C();
    sub_252B5F53C();
    v19();
    uint64_t v20 = sub_252CB9234();
    v21(v20);
  }
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.ClientAction.ShimParameterResolution.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C446C0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B774C8(v4, v25);
  sub_252AC3A24(&qword_269C446C8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252CB8320(v6, v26);
  sub_252AC3A24(&qword_269C446D0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = type metadata accessor for MessagePayload.ClientAction.ShimParameterResolution(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v10);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v11);
  sub_252CBA598();
  sub_252CB8200(v2);
  sub_252C07A20();
  sub_252CBB5C8();
  sub_252B5F908();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v27 = v8;
  sub_252D1A4C8();
  sub_252CBBAD0();
  if (!v12
    || (uint64_t v13 = sub_252CB9BB8(), sub_252B5F440(v13), v15 = v14, v17 = v16, swift_bridgeObjectRelease(), v15 != v17 >> 1))
  {
    sub_252D1A308();
    sub_252CB86D8();
    unint64_t v19 = v18;
    sub_252AC3A24(&qword_269C42E78);
    *unint64_t v19 = v27;
    sub_252D1A3F8();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v20();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252B0012C();
    v21();
LABEL_6:
    uint64_t v24 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_252C07A6C();
  sub_252CBC40C();
  type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
  sub_252BA62F0((uint64_t)&unk_269C446D8);
  sub_252CBBF10();
  sub_252B5F53C();
  v22();
  swift_unknownObjectRelease();
  sub_252B0012C();
  v23();
  swift_storeEnumTagMultiPayload();
  sub_252C06474();
  sub_252C06474();
  uint64_t v24 = (uint64_t)v2;
LABEL_7:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v24);
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BB7880()
{
}

void sub_252BB7898()
{
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.raw.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.raw.setter()
{
  return sub_252C04A40();
}

uint64_t (*MessagePayload.ClientAction.UnresolvedParameterValue.raw.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.candidates.getter()
{
  return sub_252BC3B20();
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.candidates.setter()
{
  return sub_252BC3B70();
}

uint64_t (*MessagePayload.ClientAction.UnresolvedParameterValue.candidates.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t MessagePayload.ClientAction.UnresolvedParameterValue.init(raw:candidates:)()
{
  sub_252B4C6B8();
  sub_252D19BE8();
  sub_252AEA304();
  sub_252B4C1CC();
  v2();
  uint64_t result = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
  *(void *)(v1 + *(int *)(result + 20)) = v0;
  return result;
}

uint64_t sub_252BB79D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7823730 && a2 == 0xE300000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BB7AC0(char a1)
{
  if (a1) {
    return 0x74616469646E6163;
  }
  else {
    return 7823730;
  }
}

uint64_t sub_252BB7AF4()
{
  return sub_252BB7AC0(*v0);
}

uint64_t sub_252BB7AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB79D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB7B24(uint64_t a1)
{
  unint64_t v2 = sub_252C07B04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB7B60(uint64_t a1)
{
  unint64_t v2 = sub_252C07B04();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientAction.UnresolvedParameterValue.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C446E0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C07B04();
  sub_252AF4784();
  sub_252CBC6C4();
  sub_252BA62F0((uint64_t)&unk_269C440E0);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(0);
    sub_252CBAFB4();
    sub_252AC3A24(&qword_269C446F0);
    sub_252C07B50();
    sub_252CB82A0();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ClientAction.UnresolvedParameterValue.init(from:)()
{
  sub_252AF4380();
  sub_252CBC0D8(v2);
  uint64_t v19 = sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v16 = v3;
  MEMORY[0x270FA5388](v4);
  sub_252B23278();
  sub_252AC3A24(&qword_269C44700);
  sub_252AEDBD0();
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = sub_252AF4420();
  uint64_t v8 = type metadata accessor for MessagePayload.ClientAction.UnresolvedParameterValue(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252CB88F4(v0);
  sub_252C07B04();
  sub_252CBB8A8();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    uint64_t v15 = v8;
    sub_252BA62F0((uint64_t)&unk_269C440F0);
    sub_252CBA018();
    uint64_t v14 = v11;
    sub_252B7E53C();
    v12();
    sub_252AC3A24(&qword_269C446F0);
    sub_252CB8A60();
    sub_252C07BF4();
    sub_252CBC69C();
    sub_252CBA018();
    sub_252CB8ACC();
    v13();
    *(void *)&v14[*(int *)(v15 + 20)] = v20;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BB7F70()
{
}

void sub_252BB7F88()
{
}

uint64_t static MessagePayload.ClientAction.== infix(_:_:)()
{
  if ((sub_252CBAA44() & 1) == 0) {
    return 0;
  }
  uint64_t v0 = (int *)type metadata accessor for MessagePayload.ClientAction(0);
  sub_252CB87FC(v0[5]);
  BOOL v3 = v3 && v1 == v2;
  if (v3 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v5 & 1) != 0))
  {
    sub_252CBBE20(v0[6]);
    sub_252BB3204();
    if (v6)
    {
      uint64_t v7 = sub_252CBBE20(v0[7]);
      if (sub_252BB43E0(v7, v8))
      {
        sub_252CBA8DC();
        if (v11)
        {
          if (v9)
          {
            sub_252B233A0(v10);
            BOOL v14 = v3 && v12 == v13;
            if (v14 || (sub_252D1A5D8() & 1) != 0) {
              return 1;
            }
          }
        }
        else if (!v9)
        {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_252BB8054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1D870 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_252BB8288(char a1)
{
  unint64_t result = 0x6449746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64496C6F6F74;
      break;
    case 2:
      unint64_t result = 0x6574656D61726170;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x7551746E65696C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BB8348()
{
  return sub_252BB8288(*v0);
}

uint64_t sub_252BB8350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB8054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB8378(uint64_t a1)
{
  unint64_t v2 = sub_252C07C98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB83B4(uint64_t a1)
{
  unint64_t v2 = sub_252C07C98();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientAction.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44710);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C07C98();
  sub_252AF4784();
  sub_252D19588();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB827C();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientAction(0);
    sub_252CB8CA8();
    sub_252AC3A24(&qword_269C44218);
    sub_252C06534();
    sub_252CB82A0();
    sub_252AC3A24(&qword_269C44720);
    sub_252C07CE4();
    sub_252CB82A0();
    sub_252CBAFCC();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ClientAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  BOOL v14 = v13;
  sub_252CBC228(v15);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v16);
  sub_252CB8320(v17, v29);
  sub_252AC3A24(&qword_269C44738);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_252B5FA38();
  uint64_t v20 = (int *)type metadata accessor for MessagePayload.ClientAction(v19);
  sub_252AEA304();
  MEMORY[0x270FA5388](v21);
  sub_252AC423C();
  sub_252CBA15C(*(int *)(v22 + 32));
  uint64_t v30 = v23;
  sub_252CB8AD8(v14);
  sub_252C07C98();
  sub_252D1A718();
  if (v10)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252D1A498();
    sub_252B7E53C();
    v24();
    LOBYTE(a10) = 1;
    uint64_t v25 = sub_252D1A448();
    uint64_t v26 = (uint64_t *)(v11 + v20[5]);
    uint64_t *v26 = v25;
    v26[1] = v27;
    sub_252AC3A24(&qword_269C44218);
    sub_252C06678();
    sub_252CBAFE4();
    sub_252D1A498();
    *(void *)(v11 + v20[6]) = a10;
    sub_252AC3A24(&qword_269C44720);
    sub_252C07D90();
    sub_252CBAFE4();
    sub_252D1A498();
    *(void *)(v11 + v20[7]) = a10;
    sub_252D1A408();
    sub_252CBC844();
    sub_252B983F0();
    v28();
    swift_bridgeObjectRelease();
    *uint64_t v30 = v12;
    v30[1] = v20;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v14);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BB89F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MessagePayload.ClientAction.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252BB8A08()
{
}

uint64_t sub_252BB8A28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656C626169726176 && a2 == 0xEC000000656D614ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BB8AC8()
{
  return 0x656C626169726176;
}

uint64_t sub_252BB8AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB8A28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BB8B18(uint64_t a1)
{
  unint64_t v2 = sub_252C07E3C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB8B54(uint64_t a1)
{
  unint64_t v2 = sub_252C07E3C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Reference.encode(to:)()
{
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Reference.init(from:)()
{
}

void sub_252BB8C1C()
{
}

void sub_252BB8C34()
{
}

uint64_t MessagePayload.ActionWillExecute.ToolParameterValue.Value.init(value:)(uint64_t a1)
{
  return sub_252C00460(a1, MEMORY[0x263F80508]);
}

uint64_t sub_252BB8C68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252BFC518();
  *a1 = result & 1;
  return result;
}

uint64_t sub_252BB8C94(uint64_t a1)
{
  unint64_t v2 = sub_252C07E88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB8CD0(uint64_t a1)
{
  unint64_t v2 = sub_252C07E88();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Value.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8764();
  sub_252AC3A24(&qword_269C44768);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  sub_252B98154();
  sub_252C07E88();
  sub_252B5F8D4();
  sub_252D19BE8();
  sub_252BA62F0((uint64_t)&unk_269C440E0);
  sub_252CB87B8();
  sub_252BA591C();
  v1();
  sub_252CBAF90();
  sub_252B232F8();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.Value.init(from:)()
{
  sub_252AF4380();
  sub_252CB9874(v2);
  sub_252D19BE8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252AF4404(v4, v11);
  sub_252AC3A24(&qword_269C44778);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252AF4420();
  uint64_t v7 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(v6);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252CB85D0(v0);
  sub_252C07E88();
  sub_252AF44B0();
  if (!v1)
  {
    sub_252BA62F0((uint64_t)&unk_269C440F0);
    sub_252AF43D8();
    sub_252B5F53C();
    v9();
    sub_252B4C1CC();
    v10();
    sub_252CBAD6C();
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  sub_252CB93B4();
  sub_252AF4368();
}

void sub_252BB8FBC()
{
}

void sub_252BB8FD4()
{
}

void static MessagePayload.ActionWillExecute.ToolParameterValue.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v2 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(0);
  uint64_t v3 = sub_252AEA368(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_252CB9708();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v4);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252CB9604();
  MEMORY[0x270FA5388](v6);
  sub_252CBA5B8();
  uint64_t v7 = sub_252AC3A24(&qword_269C44780);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252B4C3FC();
  uint64_t v10 = (void *)(v0 + v9);
  sub_252BA661C();
  sub_252CB9AF0();
  sub_252BA661C();
  sub_252CBBD30();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_252BA661C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_252CBA600();
      sub_252C06474();
      sub_252CB9A98();
      _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      sub_252BA6670();
      sub_252CBBC18();
      sub_252BA6670();
      sub_252BA6670();
      goto LABEL_15;
    }
    sub_252BA6670();
LABEL_7:
    sub_252B5A4CC(v0, &qword_269C44780);
    goto LABEL_15;
  }
  sub_252CBBD18();
  uint64_t v12 = *v1;
  uint64_t v11 = v1[1];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v12 == *v10 && v11 == v10[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_252CB9A98();
    sub_252CBA46C();
    sub_252CBC89C();
    swift_bridgeObjectRelease();
  }
  sub_252BA6670();
LABEL_15:
  sub_252AFC718();
}

uint64_t sub_252BB92AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E657265666572 && a2 == 0xE900000000000065;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BB93A0(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 0x636E657265666572;
  }
}

uint64_t sub_252BB93D8()
{
  return sub_252BB93A0(*v0);
}

uint64_t sub_252BB93E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BB92AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BB9408(uint64_t a1)
{
  unint64_t v2 = sub_252C07F14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB9444(uint64_t a1)
{
  unint64_t v2 = sub_252C07F14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BB9480(uint64_t a1)
{
  unint64_t v2 = sub_252C07FAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB94BC(uint64_t a1)
{
  unint64_t v2 = sub_252C07FAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BB94F8(uint64_t a1)
{
  unint64_t v2 = sub_252C07F60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB9534(uint64_t a1)
{
  unint64_t v2 = sub_252C07F60();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.ToolParameterValue.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C44788);
  sub_252AEDBD0();
  v20[5] = v4;
  v20[6] = v3;
  MEMORY[0x270FA5388](v3);
  v20[4] = (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_252AEDD78();
  v20[2] = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(v6);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  sub_252CB8440(v8, v20[0]);
  sub_252AC3A24(&qword_269C44790);
  sub_252AEDBD0();
  v20[0] = v10;
  v20[1] = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = sub_252CB87E0();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v11);
  sub_252AEA304();
  MEMORY[0x270FA5388](v12);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C44798);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  sub_252AF45D8();
  sub_252CB8E64(v2);
  sub_252C07F14();
  sub_252D1A738();
  sub_252BA661C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_252C06474();
    LOBYTE(v21) = 1;
    sub_252C07F60();
    sub_252CB8F38();
    sub_252BA62F0((uint64_t)&unk_269C447B0);
    sub_252D1A578();
    sub_252B5F53C();
    v14();
    sub_252BA6670();
    sub_252B5F67C();
    v15();
  }
  else
  {
    uint64_t v17 = *v0;
    uint64_t v16 = v0[1];
    LOBYTE(v21) = 0;
    sub_252C07FAC();
    sub_252CBC510();
    sub_252CB8F38();
    uint64_t v21 = v17;
    uint64_t v22 = v16;
    sub_252C07FF8();
    sub_252D1A578();
    sub_252B5F53C();
    v18();
    sub_252B5F67C();
    v19();
    swift_bridgeObjectRelease();
  }
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.ActionWillExecute.ToolParameterValue.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  uint64_t v39 = v5;
  sub_252AC3A24(&qword_269C447C8);
  sub_252AEDBD0();
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v6);
  sub_252B98820(v8, v34);
  sub_252AC3A24(&qword_269C447D0);
  sub_252AEDBD0();
  uint64_t v40 = v10;
  uint64_t v41 = v9;
  MEMORY[0x270FA5388](v9);
  sub_252B774C8(v11, v34);
  uint64_t v45 = sub_252AC3A24(&qword_269C447D8);
  sub_252AEDBD0();
  uint64_t v44 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252CB83D0();
  uint64_t v15 = type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252CB9D8C();
  MEMORY[0x270FA5388](v17);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - v19;
  sub_252B5FD8C(v4);
  sub_252C07F14();
  sub_252D1A718();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v35 = v1;
  uint64_t v36 = v20;
  uint64_t v37 = v2;
  uint64_t v38 = v15;
  unint64_t v21 = v45;
  sub_252D1A4C8();
  sub_252CBAF84();
  if (!v22 || (char v23 = *(unsigned char *)(v15 + 32), v24 = sub_252CB9534(), sub_252B5F440(v24), sub_252CBC810(), v21 >> 1))
  {
    sub_252D1A308();
    sub_252CB86D8();
    sub_252AC3A24(&qword_269C42E78);
    sub_252CBB254();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v25();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252CBAD54();
    sub_252B0012C();
    v26();
LABEL_8:
    uint64_t v27 = (uint64_t)v4;
    goto LABEL_9;
  }
  if (v23)
  {
    LOBYTE(v46) = 1;
    sub_252C07F60();
    sub_252CB90DC();
    type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue.Value(0);
    sub_252BA62F0((uint64_t)&unk_269C447E0);
    sub_252CBC098();
    sub_252B5F53C();
    v28();
    swift_unknownObjectRelease();
    sub_252B0012C();
    v29();
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_252C07FAC();
    sub_252CB90DC();
    sub_252C08044();
    sub_252CBBF94();
    sub_252D1A498();
    sub_252B5F53C();
    v30();
    swift_unknownObjectRelease();
    sub_252B0012C();
    v31();
    uint64_t v32 = v47;
    uint64_t v33 = v35;
    *uint64_t v35 = v46;
    v33[1] = v32;
  }
  swift_storeEnumTagMultiPayload();
  sub_252C06474();
  sub_252CBC908();
  sub_252C06474();
  uint64_t v27 = (uint64_t)v4;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v27);
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BB9DB4()
{
}

void sub_252BB9DCC()
{
}

uint64_t sub_252BB9DF0(uint64_t a1)
{
  unint64_t v2 = sub_252C08090();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB9E2C(uint64_t a1)
{
  unint64_t v2 = sub_252C08090();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.PromptSelection.Confirmed.encode(to:)()
{
}

uint64_t MessagePayload.ActionWillExecute.PromptSelection.Confirmed.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BB9EC4()
{
}

IntelligenceFlow::MessagePayload::ActionWillExecute::PromptSelection::SelectedInDisambiguation __swiftcall MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.init(index:)(IntelligenceFlow::MessagePayload::ActionWillExecute::PromptSelection::SelectedInDisambiguation index)
{
  v1->index = index.index;
  return index;
}

BOOL static MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_252BB9EF8()
{
  return 0x7865646E69;
}

uint64_t sub_252BB9F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BF7DEC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BB9F3C(uint64_t a1)
{
  unint64_t v2 = sub_252C080DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BB9F78(uint64_t a1)
{
  unint64_t v2 = sub_252C080DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C44800);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252AC3A68(v1, v1[3]);
  sub_252C080DC();
  sub_252CBA564();
  sub_252D1A558();
  sub_252B5F658();
  v3();
  sub_252B5FD80();
  sub_252AF4368();
}

void MessagePayload.ActionWillExecute.PromptSelection.SelectedInDisambiguation.init(from:)()
{
  sub_252AF4380();
  sub_252CB8F54();
  sub_252AC3A24(&qword_269C44810);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C080DC();
  sub_252CB86F0();
  if (!v1)
  {
    sub_252CBA4CC();
    uint64_t v4 = sub_252D1A478();
    sub_252B5F658();
    v5();
    *uint64_t v2 = v4;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BBA164()
{
}

void sub_252BBA17C()
{
}

uint64_t sub_252BBA1A0(uint64_t a1)
{
  unint64_t v2 = sub_252C08128();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBA1DC(uint64_t a1)
{
  unint64_t v2 = sub_252C08128();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.PromptSelection.Denied.encode(to:)()
{
}

uint64_t MessagePayload.ActionWillExecute.PromptSelection.Denied.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BBA274()
{
}

uint64_t static MessagePayload.ActionWillExecute.PromptSelection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
    }
    return sub_252AC40B4();
  }
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if (v2 == 1) {
      return *(void *)a1 == *(void *)a2;
    }
    return sub_252AC40B4();
  }
  if (v2 != 2) {
    return sub_252AC40B4();
  }
  return _s16IntelligenceFlow14MessagePayloadO9TerminateV2eeoiySbAE_AEtFZ_0();
}

uint64_t sub_252BBA2D0(char a1)
{
  if (!a1) {
    return 0x656D7269666E6F63;
  }
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  return 0x6465696E6564;
}

uint64_t sub_252BBA32C()
{
  return sub_252BBA2D0(*v0);
}

uint64_t sub_252BBA334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BF7CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BBA35C(uint64_t a1)
{
  unint64_t v2 = sub_252C08174();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBA398(uint64_t a1)
{
  unint64_t v2 = sub_252C08174();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BBA3D4(uint64_t a1)
{
  unint64_t v2 = sub_252C082F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBA410(uint64_t a1)
{
  unint64_t v2 = sub_252C082F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BBA44C(uint64_t a1)
{
  unint64_t v2 = sub_252C081C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBA488(uint64_t a1)
{
  unint64_t v2 = sub_252C081C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BBA4C4(uint64_t a1)
{
  unint64_t v2 = sub_252C08258();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBA500(uint64_t a1)
{
  unint64_t v2 = sub_252C08258();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.PromptSelection.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C44828);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252AF45F0();
  sub_252AC3A24(&qword_269C44830);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C44838);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C44840);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  int v8 = *(unsigned __int8 *)(v1 + 8);
  sub_252CB8E64(v3);
  sub_252C08174();
  sub_252CBB5C8();
  sub_252D1A738();
  if (v8)
  {
    if (v8 == 1)
    {
      sub_252C08258();
      sub_252B5FCCC();
      sub_252C082A4();
      sub_252D1A578();
      sub_252CB99EC();
    }
    else
    {
      sub_252C081C0();
      sub_252B5FCCC();
      sub_252C0820C();
      sub_252D1A578();
      sub_252CBA730();
    }
    sub_252B5F53C();
    v10();
    sub_252CBB1D0();
  }
  else
  {
    sub_252C082F0();
    sub_252CB8424();
    sub_252C0833C();
    sub_252D1A578();
    sub_252B5F53C();
    v9();
    sub_252B233D8();
  }
  sub_252B5F53C();
  v11();
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.ActionWillExecute.PromptSelection.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v31 = v3;
  sub_252AC3A24(&qword_269C44880);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B774C8(v5, v30);
  sub_252AC3A24(&qword_269C44888);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C44890);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C44898);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v8);
  sub_252AC423C();
  sub_252B5FD8C(v2);
  sub_252C08174();
  sub_252CBC6F4();
  if (v0)
  {
    uint64_t v9 = (uint64_t)v2;
  }
  else
  {
    sub_252D1A4C8();
    sub_252CBC5CC();
    if (v10
      && (sub_252CBB2AC(),
          int v12 = *(unsigned __int8 *)(v11 + 32),
          uint64_t v13 = sub_252CBA2D8(),
          sub_252B5F440(v13),
          uint64_t v15 = v14,
          unint64_t v17 = v16,
          swift_bridgeObjectRelease(),
          v15 == v17 >> 1))
    {
      if (v12)
      {
        if (v12 == 1)
        {
          sub_252C08258();
          sub_252CBBD60();
          sub_252C083D4();
          sub_252CB9C58();
          sub_252B5F53C();
          v23();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v24();
          uint64_t v25 = v32;
          uint64_t v9 = (uint64_t)v2;
        }
        else
        {
          sub_252C081C0();
          sub_252CBBD60();
          uint64_t v9 = (uint64_t)v2;
          sub_252C08388();
          sub_252D1A498();
          sub_252B5F53C();
          v28();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v29();
          uint64_t v25 = 0;
        }
      }
      else
      {
        sub_252C082F0();
        sub_252D1A3E8();
        sub_252C08420();
        sub_252CBC1C8();
        uint64_t v9 = (uint64_t)v2;
        sub_252B5F53C();
        v26();
        swift_unknownObjectRelease();
        sub_252CB8E20();
        v27();
        uint64_t v25 = 0;
      }
      *(void *)uint64_t v31 = v25;
      *(unsigned char *)(v31 + 8) = v12;
    }
    else
    {
      uint64_t v9 = (uint64_t)v2;
      sub_252D1A308();
      sub_252CB86D8();
      uint64_t v19 = v18;
      sub_252AC3A24(&qword_269C42E78);
      *uint64_t v19 = &type metadata for MessagePayload.ActionWillExecute.PromptSelection;
      sub_252D1A3F8();
      sub_252B5FC40();
      sub_252B0014C();
      sub_252CB86CC();
      v20();
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v21 = sub_252CBC87C();
      v22(v21);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v9);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BBADEC()
{
}

void sub_252BBAE04()
{
}

uint64_t MessagePayload.ActionWillExecute.ParameterValue.value.getter()
{
  return sub_252BA661C();
}

uint64_t MessagePayload.ActionWillExecute.ParameterValue.value.setter()
{
  return sub_252C0846C();
}

uint64_t (*MessagePayload.ActionWillExecute.ParameterValue.value.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.ParameterValue.promptSelection.getter()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t result = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(v2);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 20));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)uint64_t v0 = v5;
  *(unsigned char *)(v0 + 8) = (_BYTE)v4;
  return result;
}

uint64_t MessagePayload.ActionWillExecute.ParameterValue.promptSelection.setter()
{
  uint64_t v0 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
  return sub_252CBC670(v0);
}

uint64_t (*MessagePayload.ActionWillExecute.ParameterValue.promptSelection.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.ParameterValue.init(value:promptSelection:)()
{
  sub_252CBC754();
  uint64_t v3 = v0 + *(int *)(type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0) + 20);
  sub_252AEA3DC();
  uint64_t result = sub_252C06474();
  *(void *)uint64_t v3 = v1;
  *(unsigned char *)(v3 + 8) = v2;
  return result;
}

uint64_t static MessagePayload.ActionWillExecute.ParameterValue.== infix(_:_:)()
{
  sub_252CB9724();
  static MessagePayload.ActionWillExecute.ToolParameterValue.== infix(_:_:)();
  if (v2)
  {
    uint64_t v3 = *(int *)(type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0) + 20);
    uint64_t v4 = (uint64_t *)(v1 + v3);
    int v5 = *(unsigned __int8 *)(v1 + v3 + 8);
    uint64_t v6 = (uint64_t *)(v0 + v3);
    int v7 = *(unsigned __int8 *)(v0 + v3 + 8);
    if (v5 == 255)
    {
      if (v7 == 255) {
        return 1;
      }
    }
    else if (v7 != 255)
    {
      if (v5)
      {
        if (v5 == 1)
        {
          uint64_t v9 = *v4;
          uint64_t v10 = *v6;
          if (v7 == 1 && v9 == v10) {
            return 1;
          }
        }
        else if (v7 == 2)
        {
          return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_252BBB058(char a1)
{
  if (a1) {
    return 0x655374706D6F7270;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_252BBB098()
{
  return sub_252BBB058(*v0);
}

uint64_t sub_252BBB0A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252BF7734();
  *a1 = result;
  return result;
}

uint64_t sub_252BBB0C8(uint64_t a1)
{
  unint64_t v2 = sub_252C084D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBB104(uint64_t a1)
{
  unint64_t v2 = sub_252C084D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.ParameterValue.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C448B8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C084D8();
  sub_252AF4784();
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(0);
  sub_252BA62F0((uint64_t)&unk_269C448C8);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(0);
    sub_252CBBA30();
    sub_252CBAFB4();
    sub_252C08524();
    sub_252B98690();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ActionWillExecute.ParameterValue.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = sub_252CBC0D8(v3);
  type metadata accessor for MessagePayload.ActionWillExecute.ToolParameterValue(v4);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252B230DC(v6, v14);
  sub_252AC3A24(&qword_269C448D8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252B5FA38();
  uint64_t v9 = type metadata accessor for MessagePayload.ActionWillExecute.ParameterValue(v8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252AC423C();
  uint64_t v12 = v1 + *(int *)(v11 + 28);
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = -1;
  sub_252CB85D0(v0);
  sub_252C084D8();
  sub_252CBB414();
  if (v2)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252BA62F0((uint64_t)&unk_269C448E0);
    sub_252CB9E90();
    sub_252D1A498();
    sub_252C06474();
    sub_252CB8A60();
    sub_252C08570();
    sub_252D1A438();
    sub_252CB8D6C();
    v13();
    *(void *)uint64_t v12 = v15;
    *(unsigned char *)(v12 + 8) = v16;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BBB4FC()
{
}

void sub_252BBB514()
{
}

uint64_t MessagePayload.ActionWillExecute.statementId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CB9400(*(void *)(v1 + 16), a1);
}

void MessagePayload.ActionWillExecute.statementId.setter()
{
}

uint64_t (*MessagePayload.ActionWillExecute.statementId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.toolId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ActionWillExecute.toolId.setter()
{
  sub_252B4C958();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.toolId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.bundleId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ActionWillExecute.bundleId.setter()
{
  sub_252B4C958();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.bundleId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.deviceId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ActionWillExecute.deviceId.setter()
{
  sub_252B4C958();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.deviceId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.isConfirmed.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MessagePayload.ActionWillExecute.isConfirmed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.isConfirmed.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.parameterValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessagePayload.ActionWillExecute.parameterValues.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.parameterValues.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionWillExecute.planEventId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ActionWillExecute.planEventId.setter()
{
  sub_252B4C958();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v0;
  return result;
}

uint64_t (*MessagePayload.ActionWillExecute.planEventId.modify())()
{
  return nullsub_1;
}

__n128 MessagePayload.ActionWillExecute.init(statementId:toolId:bundleId:deviceId:isConfirmed:parameterValues:planEventId:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10, uint64_t a11)
{
  __n128 result = a10;
  *(_DWORD *)a9 = *(_DWORD *)a1;
  *(_OWORD *)(a9 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(unsigned char *)(a9 + 72) = a8;
  *(__n128 *)(a9 + 80) = a10;
  *(void *)(a9 + 96) = a11;
  return result;
}

uint64_t static MessagePayload.ActionWillExecute.== infix(_:_:)()
{
  sub_252CBB6E0();
  if (!v15) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 48);
  uint64_t v12 = *(void *)(v1 + 64);
  if (!*(void *)(v0 + 16))
  {
    uint64_t v31 = *(void *)(v1 + 56);
    uint64_t v32 = *(void *)(v0 + 56);
    int v33 = *(unsigned __int8 *)(v1 + 72);
    int v34 = *(unsigned __int8 *)(v0 + 72);
    uint64_t v29 = *(void *)(v1 + 80);
    uint64_t v30 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v1 + 88);
    uint64_t v26 = *(void *)(v1 + 96);
    uint64_t v27 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 88);
    if (v7) {
      return 0;
    }
    goto LABEL_12;
  }
  if (!v7) {
    return 0;
  }
  uint64_t v31 = *(void *)(v1 + 56);
  uint64_t v32 = *(void *)(v0 + 56);
  int v33 = *(unsigned __int8 *)(v1 + 72);
  int v34 = *(unsigned __int8 *)(v0 + 72);
  uint64_t v29 = *(void *)(v1 + 80);
  uint64_t v30 = *(void *)(v0 + 80);
  uint64_t v25 = *(void *)(v1 + 88);
  uint64_t v26 = *(void *)(v1 + 96);
  uint64_t v27 = *(void *)(v0 + 96);
  uint64_t v28 = *(void *)(v0 + 88);
  sub_252CBB6B4(v0);
  BOOL v15 = v15 && v13 == v14;
  if (v15 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v17 & 1) != 0))
  {
LABEL_12:
    if (v2 != v8 || v4 != v10)
    {
      sub_252D1A5D8();
      uint64_t result = sub_252B5F6F8();
      if ((v19 & 1) == 0) {
        return result;
      }
    }
    if (v5)
    {
      if (!v11) {
        return 0;
      }
      if (v3 != v9 || v5 != v11)
      {
        sub_252CB9F88();
        uint64_t result = sub_252B5F6F8();
        if ((v21 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v6)
    {
      if (!v12) {
        return 0;
      }
      if (v32 == v31 && v6 == v12)
      {
        if (v34 != v33) {
          return 0;
        }
      }
      else
      {
        sub_252D1A5D8();
        uint64_t result = sub_252B5F6F8();
        if (v23 & 1) == 0 || ((v34 ^ v33)) {
          return result;
        }
      }
    }
    else
    {
      uint64_t result = 0;
      if (v12 || ((v34 ^ v33) & 1) != 0) {
        return result;
      }
    }
    if (sub_252BB3BE4(v30, v29))
    {
      if (v27)
      {
        if (!v26) {
          return 0;
        }
        BOOL v24 = v28 == v25 && v27 == v26;
        return v24 || (sub_252D1A5D8() & 1) != 0;
      }
      if (!v26) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_252BBBA28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6449656369766564 && a2 == 0xE800000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x7269666E6F437369 && a2 == 0xEB0000000064656DLL;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6574656D61726170 && a2 == 0xEF7365756C615672;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6E6576456E616C70 && a2 == 0xEB00000000644974)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_252D1A5D8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252BBBD58(char a1)
{
  uint64_t result = 0x6E656D6574617473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x64496C6F6F74;
      break;
    case 2:
      uint64_t v3 = 0x656C646E7562;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x656369766564;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6449000000000000;
      break;
    case 4:
      uint64_t result = 0x7269666E6F437369;
      break;
    case 5:
      uint64_t result = 0x6574656D61726170;
      break;
    case 6:
      uint64_t result = 0x6E6576456E616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BBBE50()
{
  return sub_252BBBD58(*v0);
}

uint64_t sub_252BBBE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BBBA28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BBBE80(uint64_t a1)
{
  unint64_t v2 = sub_252C085BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBBEBC(uint64_t a1)
{
  unint64_t v2 = sub_252C085BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionWillExecute.encode(to:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C448F0);
  sub_252AEDBD0();
  uint64_t v8 = v5;
  MEMORY[0x270FA5388](v6);
  sub_252B23278();
  sub_252CB8E64(v3);
  sub_252C085BC();
  sub_252CBA89C();
  sub_252D1A738();
  sub_252B67274();
  sub_252CBBA4C();
  sub_252D1A578();
  if (v0)
  {
    sub_252CB85C4();
    sub_252B5F53C();
    v7();
  }
  else
  {
    sub_252CBAE94(1);
    sub_252D1A528();
    sub_252CBAE94(2);
    sub_252CBAFCC();
    sub_252CBAE94(3);
    sub_252B5FC8C();
    sub_252CBAFCC();
    sub_252CBC2B4();
    sub_252D1A538();
    sub_252CBC288();
    sub_252AC3A24(&qword_269C44900);
    sub_252C08608();
    sub_252B98230();
    sub_252CBAE94(6);
    sub_252CBAFCC();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v4);
  }
  sub_252B98814();
  sub_252AF4368();
}

void MessagePayload.ActionWillExecute.init(from:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_252AC3A24(&qword_269C44918);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B23278();
  sub_252CB8AD8(v2);
  sub_252C085BC();
  sub_252B5FBEC();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_252B674A8();
    sub_252B98B0C();
    sub_252D1A498();
    sub_252CB9E74();
    swift_bridgeObjectRetain();
    sub_252CBC2F4();
    uint64_t v22 = sub_252D1A448();
    sub_252CBAFA8();
    uint64_t v7 = v6;
    swift_bridgeObjectRetain();
    uint64_t v23 = v7;
    uint64_t v8 = sub_252CBA5D4();
    uint64_t v10 = v9;
    uint64_t v20 = v8;
    uint64_t v21 = v4;
    sub_252CBB67C();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_252CBA5D4();
    uint64_t v13 = v12;
    sub_252CBC2B4();
    swift_bridgeObjectRetain();
    sub_252CBC2F4();
    char v19 = sub_252D1A458();
    sub_252AC3A24(&qword_269C44900);
    sub_252CBC288();
    sub_252C086B4();
    sub_252D1A498();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_252CBA5D4();
    uint64_t v16 = v15;
    uint64_t v18 = v14;
    sub_252B5F658();
    v17();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)uint64_t v21 = v24;
    *(void *)(v21 + 8) = v25;
    *(void *)(v21 + 16) = v26;
    *(void *)(v21 + 24) = v22;
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v20;
    *(void *)(v21 + 48) = v10;
    *(void *)(v21 + 56) = v11;
    *(void *)(v21 + 64) = v13;
    *(unsigned char *)(v21 + 72) = v19 & 1;
    *(void *)(v21 + 80) = v24;
    *(void *)(v21 + 88) = v18;
    *(void *)(v21 + 96) = v16;
    sub_252CBC348();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_252B5FD80();
  sub_252AF4368();
}

void sub_252BBC58C()
{
}

void sub_252BBC5A4()
{
}

void static MessagePayload.ClientEffectResolved.Result.== infix(_:_:)()
{
  sub_252AFC730();
  sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v20 = v2;
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_252B7E494();
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(v4);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252CB8858();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_252AC3A24(&qword_269C44930);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252B4C3FC();
  uint64_t v10 = v0 + v9;
  sub_252BA661C();
  sub_252CBA5F4();
  sub_252BA661C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_252CBC8F0();
    uint64_t v11 = *(void **)v1;
    char v12 = *(unsigned char *)(v1 + 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = *(void **)v10;
      char v14 = *(unsigned char *)(v10 + 8);
      sub_252ACE7B0(v11);
      if (v12)
      {
        uint64_t v15 = v11;
      }
      else
      {
        uint64_t v15 = (void *)sub_252D193E8();
        sub_252AD16D8(v11);
      }
      sub_252ACE7B0(v13);
      if (v14)
      {
        char v19 = v13;
      }
      else
      {
        char v19 = (void *)sub_252D193E8();
        sub_252AD16D8(v13);
      }
      sub_252C0CBD4(0, (unint64_t *)&qword_269C49530);
      sub_252D1A158();

      sub_252AD16D8(v13);
      sub_252AD16D8(v11);
      goto LABEL_15;
    }
    sub_252AD16D8(v11);
  }
  else
  {
    sub_252CBC92C();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_252B7E53C();
      v17();
      sub_252CB9F60();
      _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      uint64_t v18 = *(void (**)(void))(v20 + 8);
      sub_252CB9A98();
      sub_252CB8D98();
      v18();
      sub_252CB8D98();
      v18();
LABEL_15:
      sub_252BA6670();
      goto LABEL_16;
    }
    sub_252CB8D98();
    v16();
  }
  sub_252B5A4CC(v0, &qword_269C44930);
LABEL_16:
  sub_252AFC718();
}

uint64_t sub_252BBC8E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BBC9C8(char a1)
{
  if (a1) {
    return 0x726F727265;
  }
  else {
    return 0x6574656C706D6F63;
  }
}

uint64_t sub_252BBC9FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74757074756FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BBCA7C()
{
  return 0x74757074756FLL;
}

uint64_t sub_252BBCA90()
{
  return sub_252BBC9C8(*v0);
}

uint64_t sub_252BBCA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BBC8E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BBCAC0(uint64_t a1)
{
  unint64_t v2 = sub_252C08780();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBCAFC(uint64_t a1)
{
  unint64_t v2 = sub_252C08780();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BBCB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BBC9FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BBCB68(uint64_t a1)
{
  unint64_t v2 = sub_252C08818();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBCBA4(uint64_t a1)
{
  unint64_t v2 = sub_252C08818();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BBCBE0(uint64_t a1)
{
  unint64_t v2 = sub_252C087CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBCC1C(uint64_t a1)
{
  unint64_t v2 = sub_252C087CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientEffectResolved.Result.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C44938);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252CB84E4(v4, v18);
  sub_252AC3A24(&qword_269C44940);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252BA59A0();
  sub_252D19BE8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_252CB87E0();
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252AC423C();
  sub_252AC3A24(&qword_269C44948);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  sub_252B5F630();
  sub_252CB8200(v2);
  sub_252C08780();
  sub_252CBC208();
  sub_252BA661C();
  sub_252CBA5F4();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v0;
    sub_252C087CC();
    sub_252B5FCCC();
    sub_252C05424();
    sub_252CBC504();
    sub_252D1A578();
    sub_252CBB244();
    sub_252B5F53C();
    v11();
    sub_252CB9AF0();
    sub_252B775A0();
    v12();
    sub_252AD16D8(v10);
  }
  else
  {
    sub_252B7E53C();
    v13();
    sub_252C08818();
    sub_252CB8424();
    sub_252BA62F0((uint64_t)&unk_269C440E0);
    sub_252D1A578();
    sub_252B5F53C();
    v14();
    sub_252CBB1C4();
    sub_252CB8ACC();
    v15();
    uint64_t v16 = sub_252B233D8();
    v17(v16);
  }
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.ClientEffectResolved.Result.init(from:)()
{
  sub_252AF4380();
  uint64_t v37 = v0;
  uint64_t v4 = v3;
  v35[4] = v5;
  v35[5] = sub_252AC3A24(&qword_269C44968);
  sub_252AEDBD0();
  v35[8] = v6;
  MEMORY[0x270FA5388](v7);
  sub_252CB8440(v8, v35[0]);
  sub_252AC3A24(&qword_269C44970);
  sub_252AEDBD0();
  v35[6] = v10;
  v35[7] = v9;
  MEMORY[0x270FA5388](v9);
  sub_252CB8320(v11, v35[0]);
  uint64_t v36 = sub_252AC3A24(&qword_269C44978);
  sub_252AEDBD0();
  v35[10] = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252CB83D0();
  uint64_t v15 = type metadata accessor for MessagePayload.ClientEffectResolved.Result(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v17);
  sub_252CB9D8C();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v35 - v19;
  sub_252B5FD8C(v4);
  sub_252C08780();
  sub_252B77644();
  uint64_t v21 = v37;
  sub_252D1A718();
  if (v21) {
    goto LABEL_8;
  }
  v35[0] = v1;
  v35[1] = (uint64_t)v20;
  v35[2] = v2;
  v35[3] = v15;
  unint64_t v22 = v36;
  uint64_t v37 = v4;
  sub_252D1A4C8();
  sub_252CBAF84();
  if (!v23 || (char v24 = *(unsigned char *)(v15 + 32), v25 = sub_252CB9534(), sub_252B5F440(v25), sub_252CBC810(), v22 >> 1))
  {
    sub_252D1A308();
    sub_252CB86D8();
    sub_252AC3A24(&qword_269C42E78);
    sub_252CBB254();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v26();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252CBAD54();
    sub_252B0012C();
    v27();
    uint64_t v4 = v37;
LABEL_8:
    uint64_t v28 = (uint64_t)v4;
    goto LABEL_9;
  }
  if (v24)
  {
    sub_252C087CC();
    sub_252CB90DC();
    sub_252C05470();
    sub_252CBBE88();
    sub_252D1A498();
    sub_252CBAEA0();
    sub_252B5F53C();
    v29();
    swift_unknownObjectRelease();
    sub_252B0012C();
    v30();
    char v31 = v39;
    uint64_t v32 = v35[0];
    *(void *)v35[0] = v38;
    *(unsigned char *)(v32 + 8) = v31;
  }
  else
  {
    sub_252C08818();
    sub_252CB90DC();
    sub_252D19BE8();
    sub_252BA62F0((uint64_t)&unk_269C440F0);
    sub_252CBC098();
    sub_252B5F53C();
    v33();
    swift_unknownObjectRelease();
    sub_252B0012C();
    v34();
  }
  swift_storeEnumTagMultiPayload();
  sub_252C06474();
  sub_252C06474();
  uint64_t v28 = (uint64_t)v37;
LABEL_9:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v28);
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BBD48C()
{
}

void sub_252BBD4A4()
{
}

uint64_t MessagePayload.ClientEffectResolved.stepId.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ClientEffectResolved.result.getter()
{
  return sub_252BBDCBC();
}

uint64_t MessagePayload.ClientEffectResolved.init(stepId:result:)()
{
  sub_252B4C6B8();
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v0();
  type metadata accessor for MessagePayload.ClientEffectResolved(0);
  return sub_252C06474();
}

void static MessagePayload.ClientEffectResolved.== infix(_:_:)()
{
  if (sub_252CBAA44())
  {
    uint64_t v0 = type metadata accessor for MessagePayload.ClientEffectResolved(0);
    sub_252CB9E80(v0);
    static MessagePayload.ClientEffectResolved.Result.== infix(_:_:)();
  }
}

uint64_t sub_252BBD5D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BBD6BC(char a1)
{
  if (a1) {
    return 0x746C75736572;
  }
  else {
    return 0x644970657473;
  }
}

uint64_t sub_252BBD6E4()
{
  return sub_252BBD6BC(*v0);
}

uint64_t sub_252BBD6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BBD5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BBD714(uint64_t a1)
{
  unint64_t v2 = sub_252C08884();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBD750(uint64_t a1)
{
  unint64_t v2 = sub_252C08884();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientEffectResolved.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44980);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C08884();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientEffectResolved(0);
    type metadata accessor for MessagePayload.ClientEffectResolved.Result(0);
    sub_252BA62F0((uint64_t)&unk_269C44990);
    sub_252B98230();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ClientEffectResolved.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = sub_252CBC4F0(v2);
  type metadata accessor for MessagePayload.ClientEffectResolved.Result(v3);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  sub_252CBB0F4();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B774C8(v6, v12);
  sub_252AC3A24(&qword_269C44998);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252B9835C();
  type metadata accessor for MessagePayload.ClientEffectResolved(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252AF45F0();
  sub_252CB88F4(v0);
  sub_252C08884();
  sub_252B5FBEC();
  sub_252D1A718();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9E90();
    sub_252D1A498();
    sub_252B7E53C();
    v10();
    sub_252CB8A60();
    sub_252BA62F0((uint64_t)&unk_269C449A0);
    sub_252CBBA5C();
    sub_252D1A498();
    sub_252B5F53C();
    v11();
    sub_252C06474();
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252BA6670();
  }
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BBDC0C()
{
}

void sub_252BBDC24()
{
}

uint64_t MessagePayload.ClientActionResult.eventId.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ClientActionResult.eventId.setter()
{
  return sub_252C04A40();
}

uint64_t (*MessagePayload.ClientActionResult.eventId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientActionResult.statementOutcome.getter()
{
  return sub_252BBDCBC();
}

uint64_t sub_252BBDCBC()
{
  uint64_t v0 = sub_252CB899C();
  v1(v0);
  return sub_252CBB7DC();
}

uint64_t MessagePayload.ClientActionResult.statementOutcome.setter()
{
  return sub_252C0846C();
}

uint64_t (*MessagePayload.ClientActionResult.statementOutcome.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientActionResult.outcome.getter()
{
  uint64_t v1 = sub_252B4C488();
  type metadata accessor for MessagePayload.ClientActionResult(v1);
  sub_252CBBA40();
  return StatementOutcome.asActionOutcome.getter(v0);
}

uint64_t MessagePayload.ClientActionResult.outcome.setter()
{
  uint64_t v0 = type metadata accessor for StatementOutcome(0);
  uint64_t v1 = sub_252AEA368(v0);
  MEMORY[0x270FA5388](v1);
  sub_252CBB11C(v2, v4);
  sub_252BA6670();
  type metadata accessor for MessagePayload.ClientActionResult(0);
  return sub_252C0846C();
}

void (*MessagePayload.ClientActionResult.outcome.modify())(uint64_t a1, char a2)
{
  uint64_t v1 = malloc(0x28uLL);
  uint64_t v2 = sub_252CBBF60(v1);
  uint64_t v3 = type metadata accessor for StatementOutcome(v2);
  sub_252AEA368(v3);
  *(void *)(v0 + 8) = malloc(*(void *)(v4 + 64));
  uint64_t v5 = type metadata accessor for ActionOutcome(0);
  sub_252AEA368(v5);
  size_t v7 = *(void *)(v6 + 64);
  *(void *)(v0 + 16) = malloc(v7);
  uint64_t v8 = malloc(v7);
  *(void *)(v0 + 24) = v8;
  *(_DWORD *)(v0 + 32) = *(_DWORD *)(type metadata accessor for MessagePayload.ClientActionResult(0) + 20);
  StatementOutcome.asActionOutcome.getter((uint64_t)v8);
  return sub_252BBDF14;
}

void sub_252BBDF14(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 16);
  uint64_t v4 = *(void **)(*(void *)a1 + 24);
  uint64_t v5 = *(void **)(*(void *)a1 + 8);
  if (a2)
  {
    sub_252B233D8();
    sub_252BA661C();
    ActionOutcome.asStatementOutcome.getter((uint64_t)v5);
    sub_252BA6670();
    sub_252C0846C();
    sub_252BA6670();
  }
  else
  {
    ActionOutcome.asStatementOutcome.getter(*(void *)(*(void *)a1 + 8));
    sub_252BA6670();
    sub_252C0846C();
  }
  free(v4);
  free(v3);
  free(v5);

  free(v2);
}

uint64_t MessagePayload.ClientActionResult.response.getter()
{
  return sub_252BA6780();
}

uint64_t MessagePayload.ClientActionResult.response.setter()
{
  return sub_252BD77F0();
}

uint64_t (*MessagePayload.ClientActionResult.response.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientActionResult.init(eventId:statementOutcome:response:)()
{
  uint64_t v2 = sub_252CBB560();
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessagePayload.ClientActionResult(v2) + 24);
  uint64_t v4 = type metadata accessor for ResponseManifest(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, 1, 1, v4);
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v5();
  sub_252C06474();
  return sub_252C0CB04(v0, v3, &qword_269C41A88);
}

void MessagePayload.ClientActionResult.init(eventId:outcome:response:)()
{
  sub_252B23290();
  uint64_t v1 = type metadata accessor for StatementOutcome(0);
  uint64_t v2 = sub_252AEA368(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_252B4C76C();
  type metadata accessor for MessagePayload.ClientActionResult(v3);
  uint64_t v4 = type metadata accessor for ResponseManifest(0);
  sub_252CBA73C(v4);
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v5();
  ActionOutcome.asStatementOutcome.getter(v0);
  sub_252BA6670();
  sub_252C06474();
  uint64_t v6 = sub_252CBB1C4();
  sub_252C0CB04(v6, v7, v8);
  sub_252B232A4();
}

void static MessagePayload.ClientActionResult.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for ResponseManifest(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252AC3A24(&qword_269C449A8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252B5F6A0();
  uint64_t v10 = sub_252AC3A24(&qword_269C41A88);
  uint64_t v11 = sub_252AEA368(v10);
  MEMORY[0x270FA5388](v11);
  sub_252CB8954();
  MEMORY[0x270FA5388](v12);
  sub_252CB8500();
  MEMORY[0x270FA5388](v13);
  sub_252CBB5D4();
  sub_252CB9954();
  if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
  {
    uint64_t v14 = type metadata accessor for MessagePayload.ClientActionResult(0);
    static StatementOutcome.== infix(_:_:)();
    if (v15)
    {
      sub_252CB7E00(v6 + *(int *)(v14 + 24), v1, &qword_269C41A88);
      sub_252CB7E00(v4 + *(int *)(v14 + 24), v2, &qword_269C41A88);
      uint64_t v16 = v0 + *(int *)(v8 + 48);
      uint64_t v17 = sub_252CBB1D0();
      sub_252CB7E00(v17, v18, &qword_269C41A88);
      sub_252CB7E00(v2, v16, &qword_269C41A88);
      sub_252CB8170(v0);
      if (!v22)
      {
        uint64_t v19 = sub_252CBBD30();
        sub_252CB7E00(v19, v20, v21);
        sub_252CB8170(v16);
        if (!v22)
        {
          sub_252C06474();
          sub_252CB9F60();
          static ResponseManifest.== infix(_:_:)();
          sub_252BA6670();
          sub_252B5A4CC(v2, &qword_269C41A88);
          sub_252B5A4CC(v1, &qword_269C41A88);
          sub_252CBAA94();
          sub_252BA6670();
          sub_252B5A4CC(v0, &qword_269C41A88);
          goto LABEL_12;
        }
        uint64_t v23 = sub_252CBA600();
        sub_252B5A4CC(v23, v24);
        uint64_t v25 = sub_252CBC9E0();
        sub_252B5A4CC(v25, v26);
        sub_252BA6670();
LABEL_11:
        sub_252B5A4CC(v0, &qword_269C449A8);
        goto LABEL_12;
      }
      sub_252B5A4CC(v2, &qword_269C41A88);
      sub_252B5A4CC(v1, &qword_269C41A88);
      sub_252CB8170(v16);
      if (!v22) {
        goto LABEL_11;
      }
      sub_252B5A4CC(v0, &qword_269C41A88);
    }
  }
LABEL_12:
  sub_252AFC718();
}

void static StatementOutcome.== infix(_:_:)()
{
  sub_252AFC730();
  v46[13] = v5;
  v46[14] = v6;
  v46[2] = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  v46[7] = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[5] = type metadata accessor for ParameterNotAllowed(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  v46[6] = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ParameterConfirmation(0);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  v46[3] = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[1] = type metadata accessor for ParameterNeedsValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  v46[4] = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ActionSuccess(0);
  uint64_t v17 = sub_252AEA368(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = sub_252B7E454((uint64_t)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = (void *)type metadata accessor for StatementOutcome(v19);
  sub_252AEA304();
  MEMORY[0x270FA5388](v21);
  sub_252CB8858();
  MEMORY[0x270FA5388](v22);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v23);
  sub_252CB8954();
  MEMORY[0x270FA5388](v24);
  v46[12] = (char *)v46 - v25;
  sub_252B22C04();
  MEMORY[0x270FA5388](v26);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v27);
  sub_252CB8500();
  MEMORY[0x270FA5388](v28);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v29);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v30);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v31);
  sub_252CB9604();
  MEMORY[0x270FA5388](v32);
  sub_252CB8F64();
  uint64_t v33 = sub_252AC3A24(&qword_269C449B0);
  uint64_t v34 = sub_252AEA368(v33);
  MEMORY[0x270FA5388](v34);
  sub_252CBA90C();
  sub_252BA661C();
  sub_252CBB53C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252BA661C();
      if (sub_252CBA50C() != 1) {
        goto LABEL_52;
      }
      sub_252CB89B0();
      sub_252CBC024();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_66;
    case 2u:
      sub_252BA661C();
      if (sub_252CBB46C() != 2) {
        goto LABEL_53;
      }
      uint64_t v35 = v20[1];
      if (v2)
      {
        if (!v35) {
          goto LABEL_64;
        }
        BOOL v36 = v4 == *v20 && v2 == v35;
        if (!v36 && (sub_252CB8520() & 1) == 0) {
          goto LABEL_64;
        }
      }
      else if (v35)
      {
LABEL_64:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      }
      sub_252B1E820();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_66:
      sub_252BA6670();
LABEL_67:
      sub_252CBBC64();
      sub_252AFC718();
      return;
    case 3u:
      sub_252CB8C60();
      if (sub_252CB8B40() != 3) {
        goto LABEL_55;
      }
      sub_252CBA498();
      sub_252CB95B8();
      BOOL v39 = v36 && v37 == v38;
      if (v39 || (sub_252D1A5D8() & 1) != 0) {
        goto LABEL_40;
      }
      goto LABEL_41;
    case 4u:
      sub_252CBC85C();
      if (sub_252CB8B40() != 4) {
        goto LABEL_55;
      }
      sub_252CBB454();
      static ParameterConfirmation.== infix(_:_:)(v3);
      sub_252CBC5E4();
      sub_252BA6670();
      goto LABEL_61;
    case 5u:
      sub_252BA661C();
      if (sub_252CBACAC() == 5)
      {
        sub_252CB8884();
        sub_252CBC024();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      }
LABEL_52:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_53:
      swift_bridgeObjectRelease();
LABEL_54:
      swift_bridgeObjectRelease();
      goto LABEL_56;
    case 6u:
      sub_252CB8C60();
      if (sub_252CB8B40() != 6) {
        goto LABEL_55;
      }
      sub_252CBA498();
      sub_252CB95B8();
      BOOL v42 = v36 && v40 == v41;
      if (v42 || (sub_252D1A5D8())
        && (_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) != 0)
      {
        sub_252CBC05C();
      }
      goto LABEL_41;
    case 7u:
      sub_252BA661C();
      if (sub_252CB8B40() != 7) {
        goto LABEL_55;
      }
      sub_252CBA498();
      sub_252CB95B8();
      BOOL v45 = v36 && v43 == v44;
      if (v45 || (sub_252D1A5D8() & 1) != 0) {
LABEL_40:
      }
        sub_252CB98C8();
LABEL_41:
      sub_252BA6670();
      sub_252CBC8D8();
      goto LABEL_66;
    case 8u:
      sub_252BA661C();
      if (sub_252CBB334() == 8)
      {
        sub_252CBA054();
        sub_252CBA2E8();
        goto LABEL_66;
      }
      sub_252AD16E4(v3, v2, v0);
      goto LABEL_56;
    case 9u:
      sub_252CB99C0();
      if (sub_252CBBFF8() != 9) {
        goto LABEL_54;
      }
      sub_252B1D7E4();
      sub_252CB8EFC();
      swift_bridgeObjectRelease();
      goto LABEL_66;
    case 0xAu:
      sub_252BA661C();
      if (sub_252CBA50C() == 10)
      {
        sub_252CB9148();
        sub_252CBA374();
        sub_252CB9258();
        goto LABEL_66;
      }
      sub_252CB9258();
      goto LABEL_56;
    default:
      sub_252BA661C();
      if (!sub_252CB8B40())
      {
        sub_252CBB454();
        static ActionSuccess.== infix(_:_:)();
        sub_252CBC5E4();
        sub_252BA6670();
LABEL_61:
        sub_252BA6670();
        goto LABEL_66;
      }
LABEL_55:
      sub_252BA6670();
LABEL_56:
      sub_252B5A4CC(v1, &qword_269C449B0);
      goto LABEL_67;
  }
}

uint64_t sub_252BBF110(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D8B0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252BBF25C(char a1)
{
  if (!a1) {
    return 0x6449746E657665;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x65736E6F70736572;
}

uint64_t sub_252BBF2B8()
{
  return sub_252BBF25C(*v0);
}

uint64_t sub_252BBF2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BBF110(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BBF2E8(uint64_t a1)
{
  unint64_t v2 = sub_252C08A18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBF324(uint64_t a1)
{
  unint64_t v2 = sub_252C08A18();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientActionResult.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C449B8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C08A18();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientActionResult(0);
    uint64_t v2 = sub_252CB9810();
    type metadata accessor for StatementOutcome(v2);
    sub_252BA62F0((uint64_t)&unk_269C449C8);
    sub_252B98230();
    uint64_t v3 = sub_252CB92BC();
    type metadata accessor for ResponseManifest(v3);
    sub_252BA62F0((uint64_t)&unk_269C449D0);
    sub_252B98690();
  }
  uint64_t v4 = sub_252AF4620();
  v5(v4);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ClientActionResult.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  v27[3] = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C41A88);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252CB821C(v8, v27[0]);
  v27[5] = type metadata accessor for StatementOutcome(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  v27[8] = (uint64_t)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252D19588();
  sub_252AEDBD0();
  v27[6] = v11;
  MEMORY[0x270FA5388](v12);
  sub_252CB8320(v13, v27[0]);
  uint64_t v29 = sub_252AC3A24(&qword_269C449D8);
  sub_252AEDBD0();
  v27[7] = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_252B5FA38();
  type metadata accessor for MessagePayload.ClientActionResult(v16);
  sub_252AEA304();
  MEMORY[0x270FA5388](v17);
  sub_252AC423C();
  uint64_t v19 = v1 + *(int *)(v18 + 24);
  uint64_t v20 = type metadata accessor for ResponseManifest(0);
  uint64_t v30 = v19;
  uint64_t v21 = sub_252CBAA78();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v21, v22, v23, v20);
  sub_252B5FD8C(v4);
  sub_252C08A18();
  uint64_t v28 = v2;
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
    sub_252B5A4CC(v30, &qword_269C41A88);
  }
  else
  {
    v27[2] = v20;
    uint64_t v31 = v4;
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9E90();
    sub_252D1A498();
    v27[1] = v1;
    sub_252B7E53C();
    v24();
    sub_252CB8A60();
    sub_252BA62F0((uint64_t)&unk_269C449E0);
    sub_252CBBA5C();
    sub_252D1A498();
    sub_252C06474();
    sub_252B98C84();
    sub_252BA62F0((uint64_t)&unk_269C430B0);
    uint64_t v25 = v27[4];
    sub_252CBB948();
    sub_252B5F53C();
    v26();
    sub_252C0CB04(v25, v30, &qword_269C41A88);
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v31);
    sub_252BA6670();
  }
  sub_252B5FBC4();
  sub_252AF4368();
}

void sub_252BBF97C()
{
}

void sub_252BBF994()
{
}

uint64_t MessagePayload.ClientCustom.tag.getter()
{
  sub_252AC5A54(*(void *)v0, *(void *)(v0 + 8));
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ClientCustom.value.getter()
{
  sub_252AC5A54(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ClientCustom.debugDescription.getter()
{
  return sub_252AEA3DC();
}

void static MessagePayload.ClientCustom.== infix(_:_:)()
{
  sub_252B23290();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v5[2];
  uint64_t v7 = v5[3];
  uint64_t v8 = v5[4];
  uint64_t v9 = v5[5];
  if ((MEMORY[0x2533C8590](*v0, v0[1], *v5, v5[1]) & 1) != 0
    && (MEMORY[0x2533C8590](v1, v2, v6, v7) & 1) != 0
    && (v3 == v8 ? (BOOL v10 = v4 == v9) : (BOOL v10 = 0), !v10))
  {
    sub_252B5F7B4();
    sub_252B232A4();
    sub_252D1A5D8();
  }
  else
  {
    sub_252B232A4();
  }
}

uint64_t sub_252BBFAE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D8D0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BBFC20(char a1)
{
  if (!a1) {
    return 6775156;
  }
  if (a1 == 1) {
    return 0x65756C6176;
  }
  return 0xD000000000000010;
}

uint64_t sub_252BBFC70()
{
  return sub_252BBFC20(*v0);
}

uint64_t sub_252BBFC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BBFAE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BBFCA0(uint64_t a1)
{
  unint64_t v2 = sub_252C08A64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BBFCDC(uint64_t a1)
{
  unint64_t v2 = sub_252C08A64();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientCustom.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C449E8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252B5FD8C(v2);
  sub_252C08A64();
  sub_252BA5AFC();
  sub_252B5935C();
  sub_252CBB30C();
  sub_252D1A578();
  if (!v0)
  {
    sub_252B5FC80();
    sub_252CBB30C();
    sub_252D1A578();
    sub_252CBAD54();
    sub_252D1A528();
  }
  sub_252B7E4CC();
  sub_252B983F0();
  v4();
  sub_252CB8538();
  sub_252AF4368();
}

void MessagePayload.ClientCustom.init(from:)()
{
  sub_252AF4380();
  sub_252CBB2FC();
  sub_252AC3A24(&qword_269C449F8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B7732C();
  sub_252B5FEB4(v0);
  sub_252C08A64();
  sub_252D1A718();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    uint64_t v11 = v2;
    sub_252B593A8();
    sub_252CBA348();
    sub_252B5FC80();
    sub_252AC5A54(v12, v13);
    sub_252CBA348();
    sub_252AC5A54(v12, v13);
    uint64_t v4 = sub_252D1A448();
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_252B983F0();
    v8();
    sub_252AC5A54(v12, v13);
    uint64_t v9 = sub_252CB9AF0();
    sub_252AC5A54(v9, v10);
    swift_bridgeObjectRetain();
    sub_252AC5C14(v12, v13);
    sub_252CBB880();
    *uint64_t v11 = v12;
    v11[1] = v13;
    v11[2] = v12;
    v11[3] = v13;
    v11[4] = v7;
    v11[5] = v6;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252CBB880();
    sub_252AC5C14(v12, v13);
    swift_bridgeObjectRelease();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BC00A0()
{
}

void sub_252BC00B8()
{
}

uint64_t sub_252BC00D8()
{
  return 0x696669746E656469;
}

uint64_t sub_252BC00F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252C00574(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BC0124(uint64_t a1)
{
  unint64_t v2 = sub_252C08AB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC0160(uint64_t a1)
{
  unint64_t v2 = sub_252C08AB0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientIdentifier.encode(to:)()
{
}

void MessagePayload.ClientIdentifier.init(from:)()
{
}

void sub_252BC0228()
{
}

void sub_252BC0240()
{
}

uint64_t MessagePayload.ClientInitiatedClientAction.toolId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.ClientInitiatedClientAction.toolId.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.ClientInitiatedClientAction.toolId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientInitiatedClientAction.parameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MessagePayload.ClientInitiatedClientAction.parameters.modify())()
{
  return nullsub_1;
}

uint64_t static MessagePayload.ClientInitiatedClientAction.== infix(_:_:)(uint64_t a1)
{
  return sub_252BCB3CC(a1);
}

uint64_t sub_252BC0334(char a1)
{
  if (a1) {
    return 0x6574656D61726170;
  }
  else {
    return 0x64496C6F6F74;
  }
}

uint64_t sub_252BC036C()
{
  return sub_252BC0334(*v0);
}

uint64_t sub_252BC0374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252C04570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC039C(uint64_t a1)
{
  unint64_t v2 = sub_252C08AFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC03D8(uint64_t a1)
{
  unint64_t v2 = sub_252C08AFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientInitiatedClientAction.encode(to:)()
{
}

void MessagePayload.ClientInitiatedClientAction.init(from:)()
{
}

void sub_252BC048C()
{
}

void sub_252BC04A4()
{
}

uint64_t (*MessagePayload.ContextPrewarmRequest.prewarmRequestId.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BC04E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D8F0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_252BC056C()
{
  return 0xD000000000000010;
}

uint64_t sub_252BC058C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC04E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BC05B8(uint64_t a1)
{
  unint64_t v2 = sub_252C08B48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC05F4(uint64_t a1)
{
  unint64_t v2 = sub_252C08B48();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ContextPrewarmRequest.encode(to:)()
{
}

void MessagePayload.ContextPrewarmRequest.init(from:)()
{
}

void sub_252BC06BC()
{
}

void sub_252BC06D4()
{
}

uint64_t (*MessagePayload.ContextPrewarmCompleted.originatingPrewarmRequestId.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BC0710(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1D910)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_252BC0798()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_252BC07B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC0710(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BC07E4(uint64_t a1)
{
  unint64_t v2 = sub_252C08B94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC0820(uint64_t a1)
{
  unint64_t v2 = sub_252C08B94();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ContextPrewarmCompleted.encode(to:)()
{
}

void MessagePayload.ContextPrewarmCompleted.init(from:)()
{
}

void sub_252BC08E8()
{
}

void sub_252BC0900()
{
}

uint64_t sub_252BC0920(uint64_t a1)
{
  unint64_t v2 = sub_252C08BE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC095C(uint64_t a1)
{
  unint64_t v2 = sub_252C08BE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.SafetyModeRelease.encode(to:)()
{
}

uint64_t MessagePayload.SafetyModeRelease.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BC09F4()
{
}

uint64_t MessagePayload.SafetyModeException.clientQueryId.getter()
{
  return sub_252AEA3DC();
}

uint64_t MessagePayload.SafetyModeException.clientQueryId.setter()
{
  uint64_t result = sub_252AF46E4();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MessagePayload.SafetyModeException.clientQueryId.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::MessagePayload::SafetyModeException __swiftcall MessagePayload.SafetyModeException.init()()
{
  void *v0 = 0;
  v0[1] = 0;
  return result;
}

uint64_t static MessagePayload.SafetyModeException.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_252D1A5D8() & 1) != 0) {
        return 1;
      }
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_252BC0AE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BC0B8C()
{
  return 0x7551746E65696C63;
}

uint64_t sub_252BC0BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC0AE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BC0BE0(uint64_t a1)
{
  unint64_t v2 = sub_252C08C2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC0C1C(uint64_t a1)
{
  unint64_t v2 = sub_252C08C2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.SafetyModeException.encode(to:)()
{
}

void MessagePayload.SafetyModeException.init(from:)()
{
  sub_252AF4380();
  sub_252CB8F54();
  sub_252AC3A24(&qword_269C44A80);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F60C();
  sub_252C08C2C();
  sub_252CB86F0();
  if (!v2)
  {
    sub_252CBA4CC();
    sub_252D1A408();
    sub_252CBC844();
    sub_252B5F658();
    v6();
    void *v3 = v1;
    v3[1] = v4;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BC0D9C()
{
}

void sub_252BC0DB4()
{
}

uint64_t MessagePayload.ExternalAgentRequest.content.getter()
{
  return sub_252BA661C();
}

uint64_t MessagePayload.ExternalAgentRequest.content.setter()
{
  return sub_252C0846C();
}

uint64_t (*MessagePayload.ExternalAgentRequest.content.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentRequest.rewriteMetadataEventID.getter()
{
  return sub_252BC0E70();
}

uint64_t sub_252BC0E70()
{
  uint64_t v0 = sub_252CB899C();
  uint64_t v2 = v1(v0);
  return sub_252CBB7F8(*(int *)(v2 + 20));
}

uint64_t MessagePayload.ExternalAgentRequest.rewriteMetadataEventID.setter(uint64_t a1)
{
  return sub_252BC0EC8(a1, (uint64_t)type metadata accessor for MessagePayload.ExternalAgentRequest, &qword_26B2320E8);
}

uint64_t sub_252BC0EC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_252CB9888();
  v6(v5);
  sub_252B4C0DC();
  return sub_252C0CB04(v3, v7, a3);
}

uint64_t (*MessagePayload.ExternalAgentRequest.rewriteMetadataEventID.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentRequest.rewriteMetadataInlined.getter()
{
  return sub_252BC1BD0();
}

double MessagePayload.ExternalAgentRequest.rewriteMetadataInlined.setter()
{
  return sub_252BC1C1C();
}

uint64_t (*MessagePayload.ExternalAgentRequest.rewriteMetadataInlined.modify())()
{
  return nullsub_1;
}

__n128 MessagePayload.ExternalAgentRequest.init(content:rewriteMetadataEventID:rewriteMetadataInlined:)()
{
  uint64_t v4 = sub_252CBAA24();
  type metadata accessor for MessagePayload.ExternalAgentRequest(v4);
  uint64_t v5 = sub_252CBABD0();
  sub_252CBAF44(v5);
  sub_252AFCA44();
  sub_252C06474();
  sub_252C0CB04(v0, v2, &qword_26B2320E8);
  sub_252C08D48(*v1, v1[1]);
  __n128 result = v7;
  *(__n128 *)uint64_t v1 = v7;
  v1[2] = v3;
  return result;
}

void static MessagePayload.ExternalAgentRequest.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v4 = sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  uint64_t v8 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252B23278();
  uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v11 = sub_252AEA368(v10);
  MEMORY[0x270FA5388](v11);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v12);
  sub_252CB8858();
  MEMORY[0x270FA5388](v13);
  sub_252CBB618();
  if ((v14 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v15 = type metadata accessor for MessagePayload.ExternalAgentRequest(0);
  uint64_t v16 = sub_252CBAC50(v15);
  sub_252CB7E00(v16, v2, &qword_26B2320E8);
  sub_252CBAEEC();
  sub_252CBBD94();
  sub_252CB7E00(v3, v8, &qword_26B2320E8);
  uint64_t v17 = sub_252CB8170((uint64_t)v0);
  if (v19)
  {
    sub_252CBB3FC();
    sub_252CB9CE0();
    sub_252CB8170(v8);
    if (v19)
    {
      sub_252B5A4CC((uint64_t)v0, &qword_26B2320E8);
      goto LABEL_12;
    }
LABEL_10:
    sub_252B5A4CC((uint64_t)v0, &qword_269C441F0);
    goto LABEL_24;
  }
  sub_252CBBCD8(v17, v18, &qword_26B2320E8);
  sub_252CB8170(v8);
  if (v19)
  {
    sub_252CBB3BC();
    sub_252CB9960();
    uint64_t v20 = sub_252CB99D8();
    v21(v20);
    goto LABEL_10;
  }
  sub_252B7E53C();
  v22();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  char v23 = sub_252CB9288();
  uint64_t v24 = *(void (**)(void))(v6 + 8);
  sub_252B5F67C();
  v24();
  sub_252CBB3FC();
  sub_252CB9CE0();
  sub_252B5F67C();
  v24();
  sub_252CBC8B4();
  if ((v23 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_12:
  sub_252CB9FAC();
  if (!v4)
  {
    if (!v1) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (!v1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    sub_252CBAB5C();
    sub_252CBAAA0();
    sub_252CBAB40();
    goto LABEL_24;
  }
  BOOL v25 = v0 == &qword_26B2320E8 && v4 == v1;
  if (v25 || (sub_252CB91D4() & 1) != 0)
  {
    sub_252CBC7D8();
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  sub_252AFC718();
}

uint64_t sub_252BC1354(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D760 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D780)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252BC14A0(char a1)
{
  if (a1) {
    return 0xD000000000000016;
  }
  else {
    return 0x746E65746E6F63;
  }
}

uint64_t sub_252BC1500()
{
  return sub_252BC14A0(*v0);
}

uint64_t sub_252BC1508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC1354(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC1530(uint64_t a1)
{
  unint64_t v2 = sub_252C08C98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC156C(uint64_t a1)
{
  unint64_t v2 = sub_252C08C98();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentRequest.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44A88);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C08C98();
  sub_252AF4784();
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_252BA62F0((uint64_t)&unk_269C44210);
  sub_252CB827C();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ExternalAgentRequest(0);
    sub_252CB97E8();
    sub_252BA62F0((uint64_t)&qword_26B231C10);
    sub_252CB8D2C();
    sub_252CBA180();
    sub_252C0662C();
    sub_252B98690();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ExternalAgentRequest.init(from:)()
{
  sub_252AF4380();
  uint64_t v5 = v4;
  uint64_t v6 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252B98858(v8, v19);
  type metadata accessor for MessagePayload.RequestContent(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252CB82C0(v10, v20);
  sub_252AC3A24(&qword_269C44A98);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_252BA59A0();
  type metadata accessor for MessagePayload.ExternalAgentRequest(v12);
  sub_252CBBC24();
  MEMORY[0x270FA5388](v13);
  sub_252CBB144();
  uint64_t v15 = v2 + v14;
  uint64_t v16 = sub_252D19588();
  *(void *)&long long v22 = v15;
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v15, 1, 1, v16);
  uint64_t v17 = (uint64_t *)(v2 + *(int *)(v0 + 32));
  uint64_t *v17 = 0;
  v17[1] = 0;
  v17[2] = 0;
  sub_252CB8200(v5);
  sub_252C08C98();
  sub_252CBAD84();
  sub_252D1A718();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_252B5A4CC(v22, &qword_26B2320E8);
    sub_252C08D48(*v17, v17[1]);
  }
  else
  {
    sub_252BA62F0((uint64_t)&unk_269C44240);
    sub_252CB9A38();
    sub_252CB9C58();
    sub_252C06474();
    sub_252CB9E74();
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9A38();
    sub_252D1A438();
    sub_252C0CB04(v21, v22, &qword_26B2320E8);
    sub_252CBA7FC();
    sub_252C06770();
    sub_252B98B0C();
    sub_252D1A438();
    sub_252CB8ACC();
    v18();
    sub_252CBB29C();
    sub_252C08D48(*v17, v17[1]);
    *(_OWORD *)uint64_t v17 = v22;
    v17[2] = v3;
    sub_252CBC908();
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BC1AE0()
{
}

void sub_252BC1AF8()
{
}

uint64_t (*MessagePayload.ExternalAgentTextQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataEventId.getter()
{
  return sub_252BC0E70();
}

uint64_t MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataEventId.setter(uint64_t a1)
{
  return sub_252BC0EC8(a1, (uint64_t)type metadata accessor for MessagePayload.ExternalAgentTextQuery, &qword_26B2320E8);
}

uint64_t (*MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataEventId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataInlined.getter()
{
  return sub_252BC1BD0();
}

uint64_t sub_252BC1BD0()
{
  uint64_t v0 = sub_252B4C488();
  uint64_t v2 = v1(v0);
  return sub_252CBB7B8(*(int *)(v2 + 24));
}

double MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataInlined.setter()
{
  return sub_252BC1C1C();
}

double sub_252BC1C1C()
{
  uint64_t v1 = sub_252CBA260();
  uint64_t v3 = v2(v1);
  uint64_t v4 = sub_252C08D48(*(void *)(v0 + *(int *)(v3 + 24)), *(void *)(v0 + *(int *)(v3 + 24) + 8));
  *(void *)&double result = sub_252CBB218(v4, v5, v6, v7, v8, v9, v10, v11, v12).n128_u64[0];
  return result;
}

uint64_t (*MessagePayload.ExternalAgentTextQuery.queryRewriteMetadataInlined.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentTextQuery.init(query:)()
{
  uint64_t v5 = sub_252B4C6B8();
  type metadata accessor for MessagePayload.ExternalAgentTextQuery(v5);
  uint64_t v6 = sub_252CBABD0();
  uint64_t result = _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v4, 1, 1, v6);
  uint64_t v8 = (void *)((char *)v2 + *(int *)(v3 + 24));
  void *v8 = 0;
  v8[1] = 0;
  v8[2] = 0;
  *uint64_t v2 = v1;
  v2[1] = v0;
  return result;
}

__n128 MessagePayload.ExternalAgentTextQuery.init(query:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)()
{
  sub_252CBA584();
  __n128 v13 = *v4;
  uint64_t v5 = v4[1].n128_i64[0];
  uint64_t v6 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
  uint64_t v7 = (uint64_t)v3 + *(int *)(v6 + 20);
  uint64_t v8 = sub_252D19588();
  sub_252B4C33C(v7, v9, v10, v8);
  uint64_t v11 = (void *)((char *)v3 + *(int *)(v6 + 24));
  *uint64_t v11 = 0;
  v11[1] = 0;
  v11[2] = 0;
  void *v3 = v2;
  v3[1] = v1;
  sub_252C0CB04(v0, v7, &qword_26B2320E8);
  sub_252C08D48(*v11, v11[1]);
  __n128 result = v13;
  *(__n128 *)uint64_t v11 = v13;
  v11[2] = v5;
  return result;
}

void static MessagePayload.ExternalAgentTextQuery.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_252D19588();
  sub_252AEDBD0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_252AEDE70();
  uint64_t v11 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v12);
  sub_252B23278();
  uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v14 = sub_252AEA368(v13);
  MEMORY[0x270FA5388](v14);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v15);
  sub_252CB8750();
  MEMORY[0x270FA5388](v16);
  sub_252CB8F64();
  BOOL v36 = v4;
  BOOL v17 = *v6 == *v4 && v6[1] == v4[1];
  if (!v17 && (sub_252D1A5D8() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v18 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
  sub_252CB7E00((uint64_t)v6 + *(int *)(v18 + 20), v1, &qword_26B2320E8);
  sub_252CB7E00((uint64_t)v36 + *(int *)(v18 + 20), v2, &qword_26B2320E8);
  uint64_t v19 = v0 + *(int *)(v11 + 48);
  sub_252CB7E00(v1, v0, &qword_26B2320E8);
  sub_252CB7E00(v2, v19, &qword_26B2320E8);
  uint64_t v20 = sub_252CB8170(v0);
  if (v17)
  {
    sub_252CB9CE0();
    sub_252CBAF14();
    sub_252CB8170(v19);
    if (v17)
    {
      sub_252B5A4CC(v0, &qword_26B2320E8);
      goto LABEL_16;
    }
LABEL_14:
    sub_252B5A4CC(v0, &qword_269C441F0);
    goto LABEL_28;
  }
  sub_252CBBCD8(v20, v21, &qword_26B2320E8);
  sub_252CB8170(v19);
  if (v22)
  {
    sub_252CB9960();
    sub_252CBA6E8();
    uint64_t v23 = sub_252CB9504();
    v24(v23, v7);
    goto LABEL_14;
  }
  sub_252B7E53C();
  v25();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  sub_252CB9CB0();
  char v35 = sub_252D19CF8();
  uint64_t v26 = *(void (**)(void))(v9 + 8);
  sub_252AEA3DC();
  sub_252B983F0();
  v26();
  sub_252CB9960();
  sub_252CBA6E8();
  sub_252CBA600();
  sub_252B983F0();
  v26();
  uint64_t v27 = sub_252B7E4CC();
  sub_252B5A4CC(v27, v28);
  if ((v35 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_16:
  uint64_t v29 = *(int *)(v18 + 24);
  uint64_t v31 = *(void *)((char *)v6 + v29);
  uint64_t v30 = *(void *)((char *)v6 + v29 + 8);
  uint64_t v32 = (void *)((char *)v36 + v29);
  uint64_t v33 = v32[1];
  if (!v30)
  {
    if (!v33) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (!v33)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_27:
    sub_252CBAB5C();
    sub_252CBAAA0();
    sub_252CBAB40();
    goto LABEL_28;
  }
  BOOL v34 = v31 == *v32 && v30 == v33;
  if (v34 || (sub_252CB91D4() & 1) != 0)
  {
    sub_252CBC7D8();
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_28:
  sub_252AFC718();
}

uint64_t sub_252BC213C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1D930 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1D950)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252BC2280(char a1)
{
  if (a1) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0x7972657571;
  }
}

uint64_t sub_252BC22DC()
{
  return sub_252BC2280(*v0);
}

uint64_t sub_252BC22E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC213C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC230C(uint64_t a1)
{
  unint64_t v2 = sub_252C08D8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC2348(uint64_t a1)
{
  unint64_t v2 = sub_252C08D8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentTextQuery.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44AA0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C08D8C();
  sub_252AF4784();
  sub_252CB8CA8();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
    sub_252CB97E8();
    sub_252BA62F0((uint64_t)&qword_26B231C10);
    sub_252CB8D2C();
    sub_252CBA180();
    sub_252C08DD8();
    sub_252B98690();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ExternalAgentTextQuery.init(from:)()
{
  sub_252AF4380();
  uint64_t v5 = v4;
  uint64_t v6 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252CB82C0(v8, v21);
  sub_252AC3A24(&qword_269C44AB8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_252B4C750();
  type metadata accessor for MessagePayload.ExternalAgentTextQuery(v10);
  sub_252CBBC24();
  MEMORY[0x270FA5388](v11);
  sub_252CBB144();
  uint64_t v13 = (char *)v3 + v12;
  uint64_t v14 = sub_252D19588();
  *(void *)&long long v23 = v13;
  uint64_t v15 = sub_252CBB688();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v15, v16, v17, v14);
  uint64_t v18 = (uint64_t *)((char *)v3 + *(int *)(v0 + 32));
  *uint64_t v18 = 0;
  v18[1] = 0;
  v18[2] = 0;
  sub_252CB88F4(v5);
  sub_252C08D8C();
  sub_252D1A718();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_252B5A4CC(v23, &qword_26B2320E8);
    sub_252C08D48(*v18, v18[1]);
  }
  else
  {
    uint64_t *v3 = sub_252D1A448();
    v3[1] = v19;
    sub_252CB9E74();
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252D1A438();
    sub_252C0CB04(v22, v23, &qword_26B2320E8);
    sub_252C08E24();
    sub_252CBB948();
    sub_252B775A0();
    v20();
    sub_252CBB29C();
    sub_252C08D48(*v18, v18[1]);
    *(_OWORD *)uint64_t v18 = v23;
    v18[2] = v2;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v5);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BC27E8()
{
}

void sub_252BC2800()
{
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.Candidate.statementId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252CB9400(*(void *)(v1 + 32), a1);
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.Candidate.init(recognition:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(_DWORD *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

__n128 MessagePayload.ExternalAgentSpeechQuery.Candidate.init(recognition:statementId:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *a3;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = v4;
  __n128 result = *(__n128 *)(a3 + 2);
  *(__n128 *)(a4 + 24) = result;
  return result;
}

uint64_t static MessagePayload.ExternalAgentSpeechQuery.Candidate.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1 = sub_252CB9514(a1);
  int v5 = *(_DWORD *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  int v8 = *(_DWORD *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  BOOL v11 = v1 == *(void *)v3 && v2 == *(void *)(v3 + 8);
  if (v11 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v13 & 1) != 0))
  {
    if (v5 == v8)
    {
      if (v6)
      {
        if (v9)
        {
          BOOL v14 = v7 == v10 && v6 == v9;
          if (v14 || (sub_252CB9F3C() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v9)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_252BC28E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74696E676F636572 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC2A04(char a1)
{
  if (a1) {
    return 0x6E656D6574617473;
  }
  else {
    return 0x74696E676F636572;
  }
}

uint64_t sub_252BC2A4C()
{
  return sub_252BC2A04(*v0);
}

uint64_t sub_252BC2A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC28E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC2A7C(uint64_t a1)
{
  unint64_t v2 = sub_252C08E70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC2AB8(uint64_t a1)
{
  unint64_t v2 = sub_252C08E70();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentSpeechQuery.Candidate.encode(to:)()
{
  sub_252AF4380();
  sub_252CBB6A8();
  sub_252AC3A24(&qword_269C44AC8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252CBB094();
  sub_252B5FD8C(v1);
  sub_252C08E70();
  sub_252BA5AFC();
  sub_252CB8868();
  if (!v0)
  {
    sub_252CBB938();
    sub_252B5FC80();
    sub_252B67274();
    sub_252B982A8();
  }
  sub_252B5F53C();
  v5(v3, v4);
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.ExternalAgentSpeechQuery.Candidate.init(from:)()
{
  sub_252AF4380();
  sub_252CB9554();
  sub_252AC3A24(&qword_269C44AD8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C08E70();
  sub_252B5F76C();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  }
  else
  {
    uint64_t v4 = sub_252CBB778();
    uint64_t v6 = v5;
    sub_252B674A8();
    sub_252CB9C18();
    sub_252CB8C20();
    sub_252B5F658();
    v7();
    *(void *)uint64_t v2 = v4;
    *(void *)(v2 + 8) = v6;
    *(_DWORD *)(v2 + 16) = v8;
    *(void *)(v2 + 24) = v9;
    *(void *)(v2 + 32) = v10;
    swift_bridgeObjectRetain();
    sub_252CB8928();
    swift_bridgeObjectRelease();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BC2D7C()
{
}

void sub_252BC2D94()
{
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.candidates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*MessagePayload.ExternalAgentSpeechQuery.candidates.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataEventId.getter()
{
  return sub_252BC0E70();
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataEventId.setter(uint64_t a1)
{
  return sub_252BC0EC8(a1, (uint64_t)type metadata accessor for MessagePayload.ExternalAgentSpeechQuery, &qword_26B2320E8);
}

uint64_t (*MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataEventId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataInlined.getter()
{
  return sub_252BC1BD0();
}

double MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataInlined.setter()
{
  return sub_252BC1C1C();
}

uint64_t (*MessagePayload.ExternalAgentSpeechQuery.queryRewriteMetadataInlined.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentSpeechQuery.init(candidates:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
  uint64_t v5 = (uint64_t)a2 + *(int *)(v4 + 20);
  uint64_t v6 = sub_252D19588();
  uint64_t result = sub_252B4C33C(v5, v7, v8, v6);
  uint64_t v10 = (void *)((char *)a2 + *(int *)(v4 + 24));
  *uint64_t v10 = 0;
  v10[1] = 0;
  v10[2] = 0;
  *a2 = a1;
  return result;
}

__n128 MessagePayload.ExternalAgentSpeechQuery.init(candidates:queryRewriteMetadataEventId:queryRewriteMetadataInlined:)()
{
  uint64_t v6 = sub_252CBAA24();
  type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v6);
  uint64_t v7 = sub_252CBABD0();
  sub_252CBAF44(v7);
  *uint64_t v2 = v1;
  sub_252C0CB04(v0, v4, &qword_26B2320E8);
  sub_252C08D48(*v3, v3[1]);
  __n128 result = v9;
  *(__n128 *)uint64_t v3 = v9;
  v3[2] = v5;
  return result;
}

void static MessagePayload.ExternalAgentSpeechQuery.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v4 = sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  uint64_t v8 = sub_252AC3A24(&qword_269C441F0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252B23278();
  uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v11 = sub_252AEA368(v10);
  MEMORY[0x270FA5388](v11);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v12);
  sub_252CB8858();
  MEMORY[0x270FA5388](v13);
  sub_252CBA5B8();
  sub_252B1E370();
  if ((v14 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v15 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
  uint64_t v16 = sub_252CBAC50(v15);
  sub_252CB7E00(v16, v2, &qword_26B2320E8);
  sub_252CBAEEC();
  sub_252CBBD94();
  sub_252CB7E00(v3, v8, &qword_26B2320E8);
  uint64_t v17 = sub_252CB8170((uint64_t)v0);
  if (v19)
  {
    sub_252CBB3FC();
    sub_252CB9CE0();
    sub_252CB8170(v8);
    if (v19)
    {
      sub_252B5A4CC((uint64_t)v0, &qword_26B2320E8);
      goto LABEL_12;
    }
LABEL_10:
    sub_252B5A4CC((uint64_t)v0, &qword_269C441F0);
    goto LABEL_24;
  }
  sub_252CBBCD8(v17, v18, &qword_26B2320E8);
  sub_252CB8170(v8);
  if (v19)
  {
    sub_252CBB3BC();
    sub_252CB9960();
    uint64_t v20 = sub_252CB99D8();
    v21(v20);
    goto LABEL_10;
  }
  sub_252B7E53C();
  v22();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  char v23 = sub_252CB9288();
  uint64_t v24 = *(void (**)(void))(v6 + 8);
  sub_252B5F67C();
  v24();
  sub_252CBB3FC();
  sub_252CB9CE0();
  sub_252B5F67C();
  v24();
  sub_252CBC8B4();
  if ((v23 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_12:
  sub_252CB9FAC();
  if (!v4)
  {
    if (!v1) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (!v1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_23:
    sub_252CBAB5C();
    sub_252CBAAA0();
    sub_252CBAB40();
    goto LABEL_24;
  }
  BOOL v25 = v0 == &qword_26B2320E8 && v4 == v1;
  if (v25 || (sub_252CB91D4() & 1) != 0)
  {
    sub_252CBC7D8();
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252CB8D50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  sub_252AFC718();
}

uint64_t sub_252BC32E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616469646E6163 && a2 == 0xEA00000000007365;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1D930 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1D950)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_252BC343C(char a1)
{
  if (a1) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0x74616469646E6163;
  }
}

uint64_t sub_252BC34A0()
{
  return sub_252BC343C(*v0);
}

uint64_t sub_252BC34A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC32E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC34D0(uint64_t a1)
{
  unint64_t v2 = sub_252C08EDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC350C(uint64_t a1)
{
  unint64_t v2 = sub_252C08EDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentSpeechQuery.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44AE0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C08EDC();
  sub_252AF4784();
  sub_252AC3A24(&qword_269C44AF0);
  sub_252C0F218((uint64_t)&unk_269C44AF8);
  sub_252BA5AE8();
  sub_252B98230();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
    sub_252CB97E8();
    sub_252BA62F0((uint64_t)&qword_26B231C10);
    sub_252CB8D2C();
    sub_252CBA7FC();
    sub_252C08DD8();
    sub_252B98690();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ExternalAgentSpeechQuery.init(from:)()
{
  sub_252AF4380();
  *(void *)&long long v19 = v2;
  char v6 = v5;
  uint64_t v7 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C44B08);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_252AF4420();
  type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v10);
  sub_252CBBC24();
  MEMORY[0x270FA5388](v11);
  sub_252B5F630();
  uint64_t v12 = (uint64_t)v3 + *(int *)(v1 + 28);
  sub_252D19588();
  uint64_t v13 = sub_252CBC364();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v13, v14, v15, v16);
  uint64_t v17 = (void *)((char *)v3 + *(int *)(v1 + 32));
  uint64_t *v17 = 0;
  v17[1] = 0;
  v17[2] = 0;
  sub_252CB88F4(v6);
  sub_252C08EDC();
  sub_252B7765C();
  sub_252D1A718();
  if (v2)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v6);
    sub_252B5A4CC(v12, &qword_26B2320E8);
    sub_252C08D48(*v17, v17[1]);
  }
  else
  {
    sub_252AC3A24(&qword_269C44AF0);
    sub_252C0F218((uint64_t)&unk_269C44B10);
    sub_252B98B0C();
    sub_252CBA018();
    void *v3 = v20;
    sub_252CB9E74();
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9A38();
    sub_252D1A438();
    sub_252C0CB04(v0, v12, &qword_26B2320E8);
    sub_252C08E24();
    sub_252B98B0C();
    sub_252D1A438();
    sub_252CBB398();
    sub_252B5F658();
    v18();
    sub_252CBB29C();
    sub_252C08D48(*v17, v17[1]);
    *(_OWORD *)uint64_t v17 = v19;
    v17[2] = v4;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v6);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BC3A54()
{
}

void sub_252BC3A6C()
{
}

uint64_t MessagePayload.ExternalAgentOutcome.statementOutcome.getter()
{
  return sub_252BA661C();
}

uint64_t MessagePayload.ExternalAgentOutcome.statementOutcome.setter()
{
  return sub_252C0846C();
}

uint64_t (*MessagePayload.ExternalAgentOutcome.statementOutcome.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ExternalAgentOutcome.responseText.getter()
{
  return sub_252BC3B20();
}

uint64_t sub_252BC3B20()
{
  uint64_t v0 = sub_252CBAF78();
  v1(v0);

  return swift_bridgeObjectRetain();
}

uint64_t MessagePayload.ExternalAgentOutcome.responseText.setter()
{
  return sub_252BC3B70();
}

uint64_t sub_252BC3B70()
{
  uint64_t v2 = sub_252B4C0D0();
  uint64_t v4 = *(int *)(v3(v2) + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v4) = v0;
  return result;
}

uint64_t (*MessagePayload.ExternalAgentOutcome.responseText.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for MessagePayload.ExternalAgentOutcome(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

uint64_t sub_252BC3BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = sub_252CB9888();
  uint64_t v8 = type metadata accessor for ActionOutcome(v7);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252B23278();
  sub_252CBA1C8();
  sub_252BA661C();
  return a5(v5);
}

uint64_t MessagePayload.ExternalAgentOutcome.outcome.setter()
{
  uint64_t v0 = type metadata accessor for StatementOutcome(0);
  uint64_t v1 = sub_252AEA368(v0);
  MEMORY[0x270FA5388](v1);
  sub_252CBB11C(v2, v4);
  sub_252BA6670();
  return sub_252C0846C();
}

void (*MessagePayload.ExternalAgentOutcome.outcome.modify(void *a1))(uint64_t *a1, char a2)
{
  *a1 = v1;
  uint64_t v3 = type metadata accessor for StatementOutcome(0);
  sub_252AEA368(v3);
  a1[1] = malloc(*(void *)(v4 + 64));
  uint64_t v5 = type metadata accessor for ActionOutcome(0);
  sub_252AEA368(v5);
  size_t v7 = *(void *)(v6 + 64);
  a1[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  a1[3] = v8;
  StatementOutcome.asActionOutcome.getter((uint64_t)v8);
  return sub_252BC3DBC;
}

void sub_252BC3DBC(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v4 = (void *)a1[1];
  if (a2)
  {
    sub_252CB9F60();
    sub_252BA661C();
    ActionOutcome.asStatementOutcome.getter((uint64_t)v4);
    sub_252BA6670();
    sub_252C0846C();
    sub_252BA6670();
  }
  else
  {
    ActionOutcome.asStatementOutcome.getter(a1[1]);
    sub_252BA6670();
    sub_252C0846C();
  }
  free(v3);
  free(v2);

  free(v4);
}

uint64_t MessagePayload.ExternalAgentOutcome.init(statementOutcome:responseText:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_252C06474();
  uint64_t result = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
  *(void *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t MessagePayload.ExternalAgentOutcome.init(outcome:)@<X0>(uint64_t a1@<X8>)
{
  ActionOutcome.asStatementOutcome.getter(a1);
  sub_252BA6670();
  uint64_t result = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
  *(void *)(a1 + *(int *)(result + 20)) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t MessagePayload.ExternalAgentOutcome.init(outcome:responseText:)()
{
  uint64_t v3 = sub_252B4C6B8();
  uint64_t v4 = type metadata accessor for StatementOutcome(v3);
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  sub_252B23278();
  ActionOutcome.asStatementOutcome.getter(v2);
  sub_252BA6670();
  sub_252CB9F60();
  sub_252C06474();
  uint64_t result = type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
  *(void *)(v1 + *(int *)(result + 20)) = v0;
  return result;
}

uint64_t static MessagePayload.ExternalAgentOutcome.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252BC406C(a1, a2, (uint64_t)static StatementOutcome.== infix(_:_:), type metadata accessor for MessagePayload.ExternalAgentOutcome, (uint64_t (*)(uint64_t))sub_252B1D710);
}

uint64_t sub_252BC406C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  sub_252CB9724();
  if ((v6() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a4(0);
  uint64_t v8 = sub_252CBBE20(*(int *)(v7 + 20));

  return a5(v8);
}

uint64_t sub_252BC40F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D8B0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC41F8(char a1)
{
  if (a1) {
    return 0x65736E6F70736572;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_252BC423C()
{
  return sub_252BC41F8(*v0);
}

uint64_t sub_252BC4244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC40F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC426C(uint64_t a1)
{
  unint64_t v2 = sub_252C08FE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC42A8(uint64_t a1)
{
  unint64_t v2 = sub_252C08FE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentOutcome.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44B20);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C08FE0();
  sub_252AF4784();
  type metadata accessor for StatementOutcome(0);
  sub_252BA62F0((uint64_t)&unk_269C449C8);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
    sub_252CBAFB4();
    sub_252AC3A24(qword_269C41E38);
    sub_252C078F4((uint64_t)&unk_269C493B0);
    sub_252CB82A0();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ExternalAgentOutcome.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = sub_252CBBADC(v3);
  type metadata accessor for StatementOutcome(v4);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252CB8E2C(v6, v12);
  sub_252AC3A24(&qword_269C44B30);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252B5FA38();
  uint64_t v9 = type metadata accessor for MessagePayload.ExternalAgentOutcome(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B5F630();
  sub_252B5FD8C(v0);
  sub_252C08FE0();
  sub_252CB9A64();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252BA62F0((uint64_t)&unk_269C449E0);
    sub_252CB9E90();
    sub_252CBBEE0();
    sub_252C06474();
    sub_252AC3A24(qword_269C41E38);
    sub_252CB8A60();
    sub_252C078F4((uint64_t)&unk_269C493C0);
    sub_252CBC69C();
    sub_252CBBEE0();
    sub_252B775A0();
    v11();
    *(void *)(v2 + *(int *)(v9 + 20)) = v13;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
    sub_252BA6670();
  }
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BC46C4()
{
}

void sub_252BC46DC()
{
}

uint64_t (*MessagePayload.ExternalAgentQueryRewriteMetadata.originalQuery.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.ExternalAgentQueryRewriteMetadata.rewrites.modify())()
{
  return nullsub_1;
}

uint64_t static MessagePayload.ExternalAgentQueryRewriteMetadata.== infix(_:_:)(uint64_t a1)
{
  return sub_252BCB3CC(a1);
}

uint64_t sub_252BC4750(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E696769726FLL && a2 == 0xED00007972657551;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365746972776572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC4864(char a1)
{
  if (a1) {
    return 0x7365746972776572;
  }
  else {
    return 0x6C616E696769726FLL;
  }
}

uint64_t sub_252BC48A8()
{
  return sub_252BC4864(*v0);
}

uint64_t sub_252BC48B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC4750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC48D8(uint64_t a1)
{
  unint64_t v2 = sub_252C0902C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC4914(uint64_t a1)
{
  unint64_t v2 = sub_252C0902C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentQueryRewriteMetadata.encode(to:)()
{
}

void sub_252BC498C()
{
  sub_252AF4380();
  sub_252CBC4B0(v1, v2, v3);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_252CBADDC();
  v6(v5);
  sub_252CBB044();
  sub_252CBA854();
  if (!v0)
  {
    sub_252CB8A60();
    sub_252AC3A24(qword_269C41E38);
    sub_252C078F4((uint64_t)&unk_269C493B0);
    sub_252B982A8();
  }
  sub_252B5F53C();
  v7();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.ExternalAgentQueryRewriteMetadata.init(from:)()
{
}

void sub_252BC4ADC()
{
  sub_252AF4380();
  sub_252CBAEAC(v3, v4);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_252B5FD8C(v0);
  v2(v6);
  sub_252CB92D4();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v0);
  }
  else
  {
    sub_252CB872C();
    sub_252CBC464();
    sub_252AC3A24(qword_269C41E38);
    sub_252CB8A60();
    sub_252C078F4((uint64_t)&unk_269C493C0);
    sub_252CB9C18();
    sub_252CB8C20();
    sub_252B5F658();
    v7();
    sub_252CBA274();
    sub_252CB8928();
    swift_bridgeObjectRelease();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BC4C58()
{
}

void sub_252BC4C70()
{
}

uint64_t (*MessagePayload.ExternalAgentRequestRewriteMetadata.originalRequest.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.ExternalAgentRequestRewriteMetadata.rewrites.modify())()
{
  return nullsub_1;
}

uint64_t static MessagePayload.ExternalAgentRequestRewriteMetadata.== infix(_:_:)(uint64_t a1)
{
  return sub_252BCB3CC(a1);
}

uint64_t sub_252BC4CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E696769726FLL && a2 == 0xEF74736575716552;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365746972776572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC4DF8(char a1)
{
  if (a1) {
    return 0x7365746972776572;
  }
  else {
    return 0x6C616E696769726FLL;
  }
}

uint64_t sub_252BC4E3C()
{
  return sub_252BC4DF8(*v0);
}

uint64_t sub_252BC4E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC4CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC4E6C(uint64_t a1)
{
  unint64_t v2 = sub_252C09078();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC4EA8(uint64_t a1)
{
  unint64_t v2 = sub_252C09078();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ExternalAgentRequestRewriteMetadata.encode(to:)()
{
}

void MessagePayload.ExternalAgentRequestRewriteMetadata.init(from:)()
{
}

void sub_252BC4F5C()
{
}

void sub_252BC4F74()
{
}

uint64_t MessagePayload.ClientUndoRedoRequest.token.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ClientUndoRedoRequest.token.setter()
{
  return sub_252C04A40();
}

uint64_t (*MessagePayload.ClientUndoRedoRequest.token.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientUndoRedoRequest.operation.getter()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t result = type metadata accessor for MessagePayload.ClientUndoRedoRequest(v2);
  unsigned char *v0 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t MessagePayload.ClientUndoRedoRequest.operation.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*MessagePayload.ClientUndoRedoRequest.operation.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientUndoRedoRequest.statementId.getter()
{
  return sub_252BE1714();
}

void MessagePayload.ClientUndoRedoRequest.statementId.setter()
{
}

uint64_t (*MessagePayload.ClientUndoRedoRequest.statementId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ClientUndoRedoRequest.init(token:operation:statementId:)@<X0>(char *a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  char v4 = *a1;
  int v5 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a2 + 2);
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v8();
  uint64_t result = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v4;
  uint64_t v10 = a3 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = v6;
  *(void *)(v10 + 16) = v7;
  return result;
}

uint64_t MessagePayload.ClientUndoRedoRequest.UndoOperation.hash(into:)()
{
  return sub_252D1A6B8();
}

uint64_t sub_252BC51B4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1868852853 && a2 == 0xE400000000000000;
  if (v3 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1868850546 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC5280(char a1)
{
  if (a1) {
    return 1868850546;
  }
  else {
    return 1868852853;
  }
}

uint64_t sub_252BC529C()
{
  return sub_252BC5280(*v0);
}

uint64_t sub_252BC52A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC51B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC52CC(uint64_t a1)
{
  unint64_t v2 = sub_252C090E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC5308(uint64_t a1)
{
  unint64_t v2 = sub_252C090E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BC5344(uint64_t a1)
{
  unint64_t v2 = sub_252C09130();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC5380(uint64_t a1)
{
  unint64_t v2 = sub_252C09130();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BC53BC(uint64_t a1)
{
  unint64_t v2 = sub_252C0917C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC53F8(uint64_t a1)
{
  unint64_t v2 = sub_252C0917C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientUndoRedoRequest.UndoOperation.encode(to:)()
{
  sub_252AF4380();
  sub_252CBBF48();
  sub_252AC3A24(&qword_269C44B68);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B774C8(v3, v13);
  sub_252AC3A24(&qword_269C44B70);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C44B78);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  char v6 = *v0;
  sub_252CB85D0(v1);
  sub_252C090E4();
  sub_252CBA75C();
  if (v6)
  {
    sub_252C09130();
    sub_252CB8F38();
    sub_252CB85C4();
  }
  else
  {
    sub_252C0917C();
    sub_252CB8F38();
    sub_252CB99EC();
  }
  sub_252B5F53C();
  v9(v7, v8);
  sub_252B0012C();
  v12(v10, v11);
  sub_252CBAC94();
  sub_252AF4368();
}

void MessagePayload.ClientUndoRedoRequest.UndoOperation.init(from:)()
{
  sub_252AF4380();
  sub_252CBB2DC(v1);
  sub_252AC3A24(&qword_269C44B98);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C44BA0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C44BA8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = *(void *)(v0 + 32);
  sub_252CB8200((void *)v0);
  sub_252C090E4();
  sub_252B5F908();
  if (v17) {
    goto LABEL_8;
  }
  sub_252CB9B3C();
  sub_252CBAE60();
  if (!v6 || (uint64_t v7 = sub_252CB8EC0(), sub_252B5F440(v7), sub_252CBAB04(), v5))
  {
    sub_252D1A308();
    sub_252CB86D8();
    uint64_t v9 = v8;
    sub_252AC3A24(&qword_269C42E78);
    sub_252CBBEBC();
    void *v9 = &type metadata for MessagePayload.ClientUndoRedoRequest.UndoOperation;
    sub_252D1A3F8();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v10();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252B5F53C();
    v11();
    uint64_t v0 = v17;
LABEL_8:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    goto LABEL_9;
  }
  if (v0)
  {
    sub_252CBB1DC();
    sub_252C09130();
    sub_252CB8FA0();
    sub_252CBAC44();
    sub_252B5F53C();
    v12();
    swift_unknownObjectRelease();
    sub_252CB8E20();
    v13();
  }
  else
  {
    sub_252C0917C();
    sub_252CB9208();
    sub_252CBAC44();
    sub_252B5F53C();
    v14();
    swift_unknownObjectRelease();
    uint64_t v15 = sub_252CBABBC();
    v16(v15);
  }
  sub_252CBBDCC();
LABEL_9:
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BC5920()
{
}

void sub_252BC5938()
{
}

BOOL static MessagePayload.ClientUndoRedoRequest.== infix(_:_:)()
{
  if ((sub_252CBAA44() & 1) == 0) {
    return 0;
  }
  uint64_t v2 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
  if (*(unsigned __int8 *)(v1 + *(int *)(v2 + 20)) != *(unsigned __int8 *)(v0 + *(int *)(v2 + 20))) {
    return 0;
  }
  sub_252CB92A8();
  if (!v8) {
    return 0;
  }
  sub_252CBB9A0();
  if (v5)
  {
    if (!v3) {
      return 0;
    }
    sub_252CB9D9C(v4);
    BOOL v8 = v8 && v6 == v7;
    return v8 || (sub_252D1A5D8() & 1) != 0;
  }
  return !v3;
}

uint64_t sub_252BC59D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BC5B44(char a1)
{
  if (!a1) {
    return 0x6E656B6F74;
  }
  if (a1 == 1) {
    return 0x6F6974617265706FLL;
  }
  return 0x6E656D6574617473;
}

uint64_t sub_252BC5BA4()
{
  return sub_252BC5B44(*v0);
}

uint64_t sub_252BC5BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC59D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC5BD4(uint64_t a1)
{
  unint64_t v2 = sub_252C091C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC5C10(uint64_t a1)
{
  unint64_t v2 = sub_252C091C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ClientUndoRedoRequest.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44BB0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C091C8();
  sub_252AF4784();
  sub_252D19588();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB827C();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
    sub_252B98D6C();
    sub_252B5FC80();
    sub_252C09214();
    sub_252B98230();
    sub_252CBA7FC();
    sub_252B67274();
    sub_252B98230();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ClientUndoRedoRequest.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  sub_252CBC228(v4);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B774C8(v6, v14);
  sub_252AC3A24(&qword_269C44BC8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252AF4420();
  uint64_t v9 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B23278();
  sub_252AC3A68(v3, v3[3]);
  sub_252C091C8();
  sub_252B7765C();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
  }
  else
  {
    LOBYTE(v15) = 0;
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9A38();
    sub_252D1A498();
    sub_252CBBFB4();
    sub_252B7E53C();
    v11();
    sub_252B5FC80();
    sub_252C09260();
    sub_252CBAE38();
    *(unsigned char *)(v1 + *(int *)(v9 + 20)) = 0;
    sub_252CBA7FC();
    sub_252B674A8();
    sub_252CBAE38();
    sub_252B5F53C();
    v12();
    uint64_t v13 = v1 + *(int *)(v9 + 24);
    *(_DWORD *)uint64_t v13 = v15;
    *(_OWORD *)(v13 + 8) = v16;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_252BA6670();
  }
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BC609C()
{
}

void sub_252BC60B4()
{
}

uint64_t MessagePayload.ActionSummaryUpdate.originActionRequestId.getter()
{
  return sub_252C049C8();
}

uint64_t MessagePayload.ActionSummaryUpdate.originActionRequestId.setter()
{
  return sub_252C04A40();
}

uint64_t (*MessagePayload.ActionSummaryUpdate.originActionRequestId.modify())()
{
  return nullsub_1;
}

uint64_t MessagePayload.ActionSummaryUpdate.summary.getter()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(v2) + 20));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  void *v0 = *v3;
  v0[1] = v4;
  v0[2] = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 MessagePayload.ActionSummaryUpdate.summary.setter(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = v1 + *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v4 = v3;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v4 + 8) = result;
  return result;
}

uint64_t (*MessagePayload.ActionSummaryUpdate.summary.modify())()
{
  uint64_t v0 = sub_252B4C0D0();
  type metadata accessor for MessagePayload.ActionSummaryUpdate(v0);
  sub_252B4C0DC();
  return nullsub_1;
}

__n128 MessagePayload.ActionSummaryUpdate.init(originActionRequestId:summary:)@<Q0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  sub_252D19588();
  sub_252AEA304();
  __n128 v8 = *(__n128 *)(a1 + 1);
  sub_252B4C1CC();
  v5();
  uint64_t v6 = a2 + *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
  *(void *)uint64_t v6 = v4;
  __n128 result = v8;
  *(__n128 *)(v6 + 8) = v8;
  return result;
}

void static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.== infix(_:_:)()
{
  sub_252B23290();
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = v0[1];
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  int v6 = *((unsigned __int8 *)v1 + 16);
  if (*((unsigned char *)v0 + 16))
  {
    if (*((unsigned char *)v0 + 16) == 1)
    {
      if (v6 == 1) {
        sub_252B1D710((void *)*v0, (void *)*v1);
      }
    }
    else if (v6 == 2)
    {
      if (v2 != (void *)v4 || v3 != v5) {
        sub_252CBA46C();
      }
      LOBYTE(v6) = 2;
    }
  }
  else if (!*((unsigned char *)v1 + 16))
  {
    if (v2 != (void *)v4 || v3 != v5) {
      sub_252CBA46C();
    }
    LOBYTE(v6) = 0;
  }
  sub_252C092CC(v4, v5, v6);
  sub_252CBC850();
  sub_252C092CC(v9, v10, v11);
  sub_252CBC850();
  sub_252C092F4(v12, v13, v14);
  sub_252C092F4(v4, v5, v6);
  sub_252B232A4();
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.== infix(_:_:)(void **a1, void **a2)
{
  return sub_252B1D710(*a1, *a2);
}

uint64_t sub_252BC63D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7365756C6176 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BC652C(char a1)
{
  if (!a1) {
    return 0x65756C6176;
  }
  if (a1 == 1) {
    return 0x7365756C6176;
  }
  return 0x6C6F686563616C70;
}

uint64_t sub_252BC6584()
{
  return sub_252BC652C(*v0);
}

uint64_t sub_252BC658C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC63D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC65B4(uint64_t a1)
{
  unint64_t v2 = sub_252C0931C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC65F0(uint64_t a1)
{
  unint64_t v2 = sub_252C0931C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BC662C(uint64_t a1)
{
  unint64_t v2 = sub_252C09368();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC6668(uint64_t a1)
{
  unint64_t v2 = sub_252C09368();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BC66A4(uint64_t a1)
{
  unint64_t v2 = sub_252C09498();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC66E0(uint64_t a1)
{
  unint64_t v2 = sub_252C09498();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BC671C(uint64_t a1)
{
  unint64_t v2 = sub_252C09400();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC6758(uint64_t a1)
{
  unint64_t v2 = sub_252C09400();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C44BD8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B98858(v4, v15);
  sub_252AC3A24(&qword_269C44BE0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C44BE8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C44BF0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  int v8 = *(unsigned __int8 *)(v0 + 16);
  sub_252CB8200(v2);
  sub_252C0931C();
  sub_252CBC208();
  if (v8)
  {
    if (v8 == 1)
    {
      sub_252C09400();
      sub_252B5FCCC();
      sub_252C0944C();
      sub_252D1A578();
      sub_252CB99EC();
    }
    else
    {
      sub_252C09368();
      sub_252B5FCCC();
      sub_252CBB938();
      sub_252C093B4();
      sub_252D1A578();
      sub_252CBAEA0();
    }
    sub_252B5F53C();
    v12(v11);
    sub_252CBB1D0();
  }
  else
  {
    sub_252C09498();
    sub_252CBC510();
    sub_252CB8424();
    sub_252CBB938();
    sub_252C094E4();
    sub_252D1A578();
    sub_252CBB9E8();
    sub_252B5F53C();
    v10(v9);
    sub_252B233D8();
  }
  sub_252B5F53C();
  v14(v13);
  sub_252CB8A3C();
  sub_252AF4368();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary.init(from:)()
{
  sub_252AF4380();
  sub_252CBAEE0();
  uint64_t v30 = v2;
  sub_252AC3A24(&qword_269C44C30);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B774C8(v4, v29);
  sub_252AC3A24(&qword_269C44C38);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C44C40);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C44C48);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252AF45D8();
  sub_252B5FD8C(v0);
  sub_252C0931C();
  sub_252CB9A44();
  if (v1)
  {
    uint64_t v8 = (uint64_t)v0;
    goto LABEL_11;
  }
  sub_252D1A4C8();
  sub_252CBC5CC();
  if (!v9)
  {
    uint64_t v8 = (uint64_t)v0;
LABEL_10:
    sub_252D1A308();
    sub_252CB86D8();
    uint64_t v18 = v17;
    sub_252AC3A24(&qword_269C42E78);
    *uint64_t v18 = &type metadata for MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummary;
    sub_252D1A3F8();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v19();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252B775A0();
    v20();
    goto LABEL_11;
  }
  sub_252CBB2AC();
  int v11 = *(unsigned __int8 *)(v10 + 32);
  uint64_t v12 = sub_252CBA2D8();
  sub_252B5F440(v12);
  uint64_t v14 = v13;
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v14 != v16 >> 1)
  {
    uint64_t v8 = (uint64_t)v0;
    goto LABEL_10;
  }
  if (v11)
  {
    if (v11 == 1)
    {
      LOBYTE(v31) = 1;
      sub_252C09400();
      sub_252CBBE88();
      sub_252D1A3E8();
      sub_252C0957C();
      sub_252D1A498();
      sub_252B5F53C();
      v21();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v22();
      uint64_t v23 = 0;
      uint64_t v8 = (uint64_t)v0;
      uint64_t v24 = v31;
    }
    else
    {
      LOBYTE(v31) = 2;
      sub_252C09368();
      sub_252CBC510();
      sub_252CBC574();
      uint64_t v8 = (uint64_t)v0;
      sub_252C09530();
      sub_252D1A498();
      sub_252B5F53C();
      v27();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v28();
      uint64_t v24 = v31;
      uint64_t v23 = v32;
    }
  }
  else
  {
    LOBYTE(v31) = 0;
    sub_252C09498();
    sub_252CBC574();
    sub_252C095C8();
    sub_252CBC1C8();
    uint64_t v8 = (uint64_t)v0;
    sub_252B5F53C();
    v25();
    swift_unknownObjectRelease();
    sub_252CB8E20();
    v26();
    uint64_t v24 = v31;
    uint64_t v23 = v32;
  }
  *(void *)uint64_t v30 = v24;
  *(void *)(v30 + 8) = v23;
  *(unsigned char *)(v30 + 16) = v11;
LABEL_11:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v8);
  sub_252CB9FC4();
  sub_252AF4368();
}

void sub_252BC707C()
{
}

void sub_252BC7094()
{
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.summary.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BC70D0(uint64_t a1)
{
  unint64_t v2 = sub_252C09614();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC710C(uint64_t a1)
{
  unint64_t v2 = sub_252C09614();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.encode(to:)()
{
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValue.init(from:)()
{
}

void sub_252BC71D4()
{
}

void sub_252BC71EC()
{
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.summaries.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BC7224(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656972616D6D7573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BC72B8()
{
  return 0x656972616D6D7573;
}

uint64_t sub_252BC72D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC7224(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BC7304(uint64_t a1)
{
  unint64_t v2 = sub_252C09660();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC7340(uint64_t a1)
{
  unint64_t v2 = sub_252C09660();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.encode(to:)()
{
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryValues.init(from:)()
{
}

void sub_252BC73F4()
{
}

void sub_252BC740C()
{
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.summary.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BC7444(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_252CBA9FC();
    sub_252CB8520();
    sub_252CB8EFC();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_252BC74B8()
{
  return 0x7972616D6D7573;
}

uint64_t sub_252BC74D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC7444(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BC74FC(uint64_t a1)
{
  unint64_t v2 = sub_252C096AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC7538(uint64_t a1)
{
  unint64_t v2 = sub_252C096AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.encode(to:)()
{
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.ParameterSummaryPlaceholder.init(from:)()
{
}

void sub_252BC7600()
{
}

void sub_252BC7618()
{
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.formatString.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.parameterSummaries.modify())()
{
  return nullsub_1;
}

uint64_t sub_252BC7670(uint64_t a1)
{
  return sub_252BC76EC(a1, &qword_269C44CB0, qword_269C44068, MEMORY[0x263F80200]);
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.formatStringVariableCaptureReference.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252BC776C(&qword_269C41870, &qword_269C44CB0, (uint64_t)qword_269C44068, a1);
}

uint64_t sub_252BC76C4(uint64_t a1)
{
  return sub_252BC76EC(a1, &qword_269C44CB8, qword_269C44080, MEMORY[0x263F80208]);
}

uint64_t sub_252BC76EC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = sub_252AC3A24(a2);
  sub_252B2279C(v6, a3);
  uint64_t v7 = sub_252CB9A98();
  sub_252B01480(v7, v8);
  return a4();
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.formatStringVariableRegex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_252BC776C(&qword_269C41878, &qword_269C44CB8, (uint64_t)qword_269C44080, a1);
}

uint64_t sub_252BC776C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_252AC3A24(a2);
  sub_252B01480(v7, a3);
  sub_252B0014C();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v8 + 16);

  return v9(a4);
}

uint64_t static MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.== infix(_:_:)(uint64_t a1)
{
  return sub_252BCB3CC(a1);
}

uint64_t sub_252BC781C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x745374616D726F66 && a2 == 0xEC000000676E6972;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1D970)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC7924(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x745374616D726F66;
  }
}

uint64_t sub_252BC7968()
{
  return sub_252BC7924(*v0);
}

uint64_t sub_252BC7970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC781C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC7998(uint64_t a1)
{
  unint64_t v2 = sub_252C096F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC79D4(uint64_t a1)
{
  unint64_t v2 = sub_252C096F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.encode(to:)()
{
  sub_252AF4380();
  sub_252CBB6A8();
  sub_252AC3A24(&qword_269C44CC0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5FD8C(v1);
  sub_252C096F8();
  sub_252BA5AFC();
  sub_252CB8868();
  if (!v0)
  {
    sub_252CB8A60();
    sub_252AC3A24(&qword_269C44CD0);
    sub_252C09790((uint64_t)&unk_269C44CD8);
    sub_252B982A8();
  }
  sub_252B5F53C();
  v3();
  sub_252B5FBC4();
  sub_252AF4368();
}

void MessagePayload.ActionSummaryUpdate.ToolInvocationSummary.init(from:)()
{
  sub_252AF4380();
  sub_252CB9C30();
  sub_252AC3A24(&qword_269C44CE8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5F60C();
  sub_252C096F8();
  sub_252B5F76C();
  if (v1)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  }
  else
  {
    sub_252CB872C();
    sub_252CBC464();
    sub_252AC3A24(&qword_269C44CD0);
    sub_252CB8A60();
    sub_252C09790((uint64_t)&unk_269C44CF0);
    sub_252CB9C18();
    sub_252CB8C20();
    sub_252B5F658();
    v3();
    sub_252CBA274();
    sub_252CB8928();
    swift_bridgeObjectRelease();
  }
  sub_252B5FB60();
  sub_252AF4368();
}

void sub_252BC7D08()
{
}

void sub_252BC7D20()
{
}

BOOL static MessagePayload.ActionSummaryUpdate.== infix(_:_:)()
{
  if ((sub_252CBAA44() & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(int *)(type metadata accessor for MessagePayload.ActionSummaryUpdate(0) + 20);
  uint64_t v3 = *(void *)(v1 + v2);
  uint64_t v4 = *(void *)(v1 + v2 + 8);
  uint64_t v5 = (void *)(v0 + v2);
  BOOL v6 = v3 == *v5 && v4 == v5[1];
  if (!v6 && (sub_252CB8520() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_252CB9F60();
  char v9 = sub_252BB37C0(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v9 & 1) != 0;
}

uint64_t sub_252BC7E04(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D990 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BC7EF0(char a1)
{
  if (a1) {
    return 0x7972616D6D7573;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_252BC7F2C()
{
  return sub_252BC7EF0(*v0);
}

uint64_t sub_252BC7F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BC7E04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BC7F5C(uint64_t a1)
{
  unint64_t v2 = sub_252C09850();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BC7F98(uint64_t a1)
{
  unint64_t v2 = sub_252C09850();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.ActionSummaryUpdate.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C44D00);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C09850();
  sub_252AF4784();
  sub_252D19588();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB827C();
  if (!v0)
  {
    type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
    sub_252CBBA30();
    sub_252C0989C();
    sub_252B98230();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CB8A6C();
  sub_252B232F8();
}

void MessagePayload.ActionSummaryUpdate.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  sub_252CBC228(v4);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B23278();
  sub_252AC3A24(&qword_269C44D18);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_252AF4420();
  uint64_t v8 = type metadata accessor for MessagePayload.ActionSummaryUpdate(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252AC423C();
  sub_252CB8200(v3);
  sub_252C09850();
  sub_252D1A718();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
  }
  else
  {
    LOBYTE(v13) = 0;
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9A38();
    sub_252CBA018();
    sub_252B7E53C();
    v10();
    sub_252B5FC80();
    sub_252C098E8();
    sub_252CBC450();
    sub_252CBA018();
    sub_252CB8ACC();
    v11();
    uint64_t v12 = v1 + *(int *)(v8 + 20);
    *(void *)uint64_t v12 = v13;
    *(_OWORD *)(v12 + 8) = v14;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_252BA6670();
  }
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BC83C0()
{
}

void sub_252BC83D8()
{
}

void static MessagePayload.== infix(_:_:)()
{
  sub_252AFC730();
  *(void *)&long long v249 = v9;
  uint64_t v248 = v10;
  uint64_t v232 = type metadata accessor for ActionExecutionOutcome(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_252B7E454((uint64_t)&v226 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for SessionServerDebuggerEvent(v13);
  uint64_t v15 = sub_252AEA368(v14);
  MEMORY[0x270FA5388](v15);
  sub_252AEDE70();
  uint64_t v17 = sub_252B7E454(v16);
  uint64_t v18 = type metadata accessor for SessionClientDebuggerEvent(v17);
  uint64_t v19 = sub_252AEA368(v18);
  MEMORY[0x270FA5388](v19);
  sub_252AEDE70();
  uint64_t v21 = sub_252B7E454(v20);
  uint64_t v229 = type metadata accessor for MessagePayload.ActionSummaryUpdate(v21);
  sub_252AEA304();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = sub_252B7E454((uint64_t)&v226 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = type metadata accessor for MessagePayload.ClientUndoRedoRequest(v24);
  uint64_t v26 = sub_252AEA368(v25);
  MEMORY[0x270FA5388](v26);
  sub_252AEDE70();
  uint64_t v28 = sub_252B7E454(v27);
  uint64_t v228 = type metadata accessor for MessagePayload.ExternalAgentOutcome(v28);
  sub_252AEA304();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = sub_252B7E454((uint64_t)&v226 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for MessagePayload.ExternalAgentRequest(v31);
  uint64_t v33 = sub_252AEA368(v32);
  MEMORY[0x270FA5388](v33);
  sub_252AEDE70();
  uint64_t v35 = sub_252B7E454(v34);
  uint64_t v36 = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v35);
  uint64_t v37 = sub_252AEA368(v36);
  MEMORY[0x270FA5388](v37);
  sub_252AEDE70();
  uint64_t v39 = sub_252B7E454(v38);
  uint64_t v40 = type metadata accessor for MessagePayload.ExternalAgentTextQuery(v39);
  uint64_t v41 = sub_252AEA368(v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = sub_252B7E454((uint64_t)&v226 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = type metadata accessor for SystemResponse(v43);
  uint64_t v45 = sub_252AEA368(v44);
  MEMORY[0x270FA5388](v45);
  sub_252AEDE70();
  uint64_t v47 = sub_252B7E454(v46);
  uint64_t v48 = type metadata accessor for ActionResponse(v47);
  uint64_t v49 = sub_252AEA368(v48);
  MEMORY[0x270FA5388](v49);
  sub_252AEDE70();
  uint64_t v51 = sub_252B7E454(v50);
  uint64_t v52 = type metadata accessor for SystemPromptResolution(v51);
  uint64_t v53 = sub_252AEA368(v52);
  MEMORY[0x270FA5388](v53);
  sub_252AEDE70();
  uint64_t v55 = sub_252B7E454(v54);
  uint64_t v231 = type metadata accessor for SystemPrompt(v55);
  sub_252AEA304();
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = sub_252B7E454((uint64_t)&v226 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = type metadata accessor for MessagePayload.ClientActionResult(v58);
  uint64_t v60 = sub_252AEA368(v59);
  MEMORY[0x270FA5388](v60);
  sub_252AEDE70();
  uint64_t v62 = sub_252B7E454(v61);
  uint64_t v63 = type metadata accessor for MessagePayload.ClientAction(v62);
  uint64_t v64 = sub_252AEA368(v63);
  MEMORY[0x270FA5388](v64);
  sub_252AEDE70();
  uint64_t v66 = sub_252B7E454(v65);
  uint64_t v227 = type metadata accessor for MessagePayload.ClientEffectResolved(v66);
  sub_252AEA304();
  MEMORY[0x270FA5388](v67);
  uint64_t v69 = sub_252B7E454((uint64_t)&v226 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = type metadata accessor for MessagePayload.ClientEffectInvocation(v69);
  uint64_t v71 = sub_252AEA368(v70);
  MEMORY[0x270FA5388](v71);
  sub_252AEDE70();
  uint64_t v73 = sub_252B7E454(v72);
  uint64_t v226 = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(v73);
  sub_252AEA304();
  MEMORY[0x270FA5388](v74);
  uint64_t v76 = sub_252B7E454((uint64_t)&v226 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = type metadata accessor for MessagePayload.Request(v76);
  uint64_t v78 = sub_252AEA368(v77);
  MEMORY[0x270FA5388](v78);
  sub_252AEDE70();
  uint64_t v80 = sub_252B7E454(v79);
  *(void *)&unsigned long long v247 = type metadata accessor for MessagePayload(v80);
  sub_252AEA304();
  MEMORY[0x270FA5388](v81);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v82);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v83);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v84);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v85);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v86);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v87);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v88);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v89);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v90);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v91);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v92);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v93);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v94);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v95);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v96);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v97);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v98);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v99);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v100);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v101);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v102);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v103);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v104);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v105);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v106);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v107);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v108);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v109);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v110);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v111);
  sub_252CBC740();
  MEMORY[0x270FA5388](v112);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v113);
  sub_252CB8750();
  MEMORY[0x270FA5388](v114);
  sub_252CB8858();
  MEMORY[0x270FA5388](v115);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v116);
  sub_252CB8954();
  MEMORY[0x270FA5388](v117);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v118);
  sub_252CBA598();
  uint64_t v119 = sub_252AC3A24(&qword_269C44D28);
  uint64_t v120 = sub_252AEA368(v119);
  MEMORY[0x270FA5388](v120);
  sub_252CBA9AC();
  sub_252BA661C();
  *(void *)&long long v249 = v5;
  sub_252BA661C();
  sub_252CBA5F4();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (sub_252CBA548() != 1) {
        goto LABEL_184;
      }
      goto LABEL_201;
    case 2u:
      if (sub_252CBA548() == 2) {
        goto LABEL_201;
      }
      goto LABEL_184;
    case 3u:
      if (sub_252CBA548() == 3) {
        goto LABEL_201;
      }
      goto LABEL_184;
    case 4u:
      sub_252CBACD4();
      if (sub_252CB82DC() != 4) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      uint64_t v121 = v1[1];
      if (loc_252BA5C40)
      {
        if (!v121) {
          goto LABEL_200;
        }
        BOOL v122 = *(void *)type metadata accessor for MessagePayload == *v1 && loc_252BA5C40 == v121;
        if (!v122 && (sub_252D1A5D8() & 1) == 0) {
          goto LABEL_200;
        }
      }
      else if (v121)
      {
        goto LABEL_200;
      }
      sub_252CBC084((uint64_t)&v238);
      if (_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0())
      {
LABEL_199:
        sub_252BA6670();
        goto LABEL_147;
      }
LABEL_200:
      sub_252BA6670();
      sub_252BA6670();
      goto LABEL_201;
    case 5u:
      sub_252CB9234();
      sub_252BA661C();
      uint64_t v123 = *(void **)v2;
      char v124 = *(unsigned char *)(v2 + 8);
      uint64_t v125 = *(void *)(v2 + 16);
      if (sub_252CB8B20() == 5)
      {
        v261 = v123;
        LOBYTE(v262) = v124;
        uint64_t v263 = v125;
        uint64_t v250 = *(void *)type metadata accessor for MessagePayload;
        LOBYTE(v251) = loc_252BA5C40;
        *(void *)&unsigned long long v252 = loc_252BA5C48;
        sub_252CBBA08();
        static MessagePayload.SessionError.== infix(_:_:)();
        sub_252AD16D8(type metadata accessor for MessagePayload);
        swift_bridgeObjectRelease();
        sub_252AD16D8(v123);
        goto LABEL_117;
      }
      sub_252AD16D8(v123);
      goto LABEL_166;
    case 6u:
      uint64_t v126 = v4;
      sub_252CB9240();
      sub_252BA661C();
      uint64_t v128 = *v3;
      uint64_t v127 = v3[1];
      int v129 = *((unsigned __int8 *)v3 + 16);
      uint64_t v130 = v249;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_170;
      }
      int v131 = *(unsigned __int8 *)(v130 + 16);
      if (v128 == *(void *)v130 && v127 == *(void *)(v130 + 8))
      {
        if (v129 != v131)
        {
LABEL_196:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_117;
        }
      }
      else
      {
        sub_252CB9CB0();
        if ((sub_252D1A5D8() & 1) == 0 || v129 != v131) {
          goto LABEL_196;
        }
      }
      sub_252CBA1C8();
      sub_252B1E228();
LABEL_195:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_201:
      sub_252BA6670();
LABEL_202:
      sub_252AFC718();
      return;
    case 7u:
      sub_252CBAD54();
      sub_252BA661C();
      uint64_t v134 = *(void *)(v7 + 8);
      uint64_t v133 = *(void *)(v7 + 16);
      uint64_t v135 = *(void *)(v7 + 40);
      if (sub_252CB8B20() != 7)
      {
        swift_bridgeObjectRelease();
LABEL_165:
        swift_bridgeObjectRelease();
        goto LABEL_166;
      }
      uint64_t v136 = *(void *)(v7 + 32);
      char v137 = *(unsigned char *)(v7 + 24);
      v261 = *(void **)v7;
      uint64_t v262 = v134;
      uint64_t v263 = v133;
      LOBYTE(v264) = v137;
      uint64_t v265 = v136;
      uint64_t v266 = v135;
      uint64_t v250 = *(void *)type metadata accessor for MessagePayload;
      uint64_t v251 = loc_252BA5C40;
      *(void *)&unsigned long long v252 = loc_252BA5C48;
      BYTE8(v252) = loc_252BA5C50;
      uint64_t v253 = *(void *)StatementID.init(index:name:);
      uint64_t v254 = locret_252BA5C60;
      sub_252CBBA08();
      static MessagePayload.Query.== infix(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_117:
      swift_bridgeObjectRelease();
      goto LABEL_201;
    case 8u:
      sub_252BA661C();
      uint64_t v177 = *(void **)v6;
      uint64_t v178 = *(void *)(v6 + 24);
      if (sub_252CB8B20() != 8) {
        goto LABEL_165;
      }
      uint64_t v179 = *(void *)(v6 + 16);
      char v180 = *(unsigned char *)(v6 + 8);
      v261 = v177;
      LOBYTE(v262) = v180;
      uint64_t v263 = v179;
      uint64_t v264 = v178;
      uint64_t v250 = *(void *)type metadata accessor for MessagePayload;
      LOBYTE(v251) = loc_252BA5C40;
      unsigned long long v252 = __PAIR128__(loc_252BA5C50, loc_252BA5C48);
      uint64_t v181 = sub_252CBBA08();
      static MessagePayload.SpeechQuery.== infix(_:_:)(v181, v182);
      sub_252CBC89C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_117;
    case 9u:
      sub_252CBAD60();
      sub_252BA661C();
      long long v139 = (void *)*v8;
      uint64_t v138 = v8[1];
      if (sub_252CB8DE0() != 9) {
        goto LABEL_165;
      }
      goto LABEL_94;
    case 0xAu:
      sub_252CBA600();
      sub_252BA661C();
      uint64_t v184 = (void *)*v1;
      uint64_t v183 = v1[1];
      if (sub_252CBA528() != 10) {
        goto LABEL_166;
      }
      v185 = (void *)*v1;
      uint64_t v186 = v1[1];
      if (v184 == v185 && v183 == v186) {
        goto LABEL_133;
      }
      sub_252B231A4();
      swift_bridgeObjectRelease();
      goto LABEL_117;
    case 0xBu:
      sub_252CB99C0();
      uint64_t v141 = *(void **)v0;
      uint64_t v140 = *((void *)v0 + 1);
      if (sub_252CB8B20() != 11) {
        goto LABEL_166;
      }
      goto LABEL_128;
    case 0xCu:
      sub_252CB99C0();
      long long v142 = *(void **)v0;
      if (sub_252CBA528() != 12) {
        goto LABEL_166;
      }
      sub_252B1D710(v142, (void *)*v1);
      swift_bridgeObjectRelease();
      goto LABEL_117;
    case 0xDu:
      sub_252CB8C60();
      if (sub_252CB82DC() != 13) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ClientEffectInvocation.== infix(_:_:)();
      goto LABEL_146;
    case 0xEu:
      sub_252CBACD4();
      if (sub_252CB82DC() != 14) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
      {
        sub_252CBC084((uint64_t)&v239);
        static MessagePayload.ClientEffectResolved.Result.== infix(_:_:)();
        if (v143) {
          goto LABEL_199;
        }
      }
      goto LABEL_200;
    case 0xFu:
      sub_252CBACD4();
      uint64_t v126 = v4;
      if (sub_252CB82DC() == 15)
      {
        int v144 = *v0;
        uint64_t v145 = *((void *)v0 + 1);
        uint64_t v146 = v0;
        uint64_t v246 = loc_252BA5C98;
        uint64_t v148 = *((void *)v0 + 4);
        uint64_t v147 = *((void *)v0 + 5);
        uint64_t v149 = *((void *)v0 + 8);
        char v150 = *((unsigned char *)v0 + 72);
        uint64_t v151 = *((void *)v0 + 10);
        uint64_t v248 = v4;
        uint64_t v152 = *((void *)v146 + 11);
        uint64_t v153 = *((void *)v146 + 12);
        LODWORD(v261) = *(_DWORD *)type metadata accessor for MessagePayload;
        uint64_t v262 = loc_252BA5C40;
        uint64_t v263 = loc_252BA5C48;
        uint64_t v264 = loc_252BA5C50;
        uint64_t v265 = *(void *)StatementID.init(index:name:);
        uint64_t v266 = locret_252BA5C60;
        uint64_t v267 = loc_252BA5C68;
        uint64_t v268 = loc_252BA5C70;
        uint64_t v269 = loc_252BA5C78;
        char v270 = *(unsigned char *)AnySessionMessage.sessionId.getter;
        uint64_t v271 = loc_252BA5C88;
        uint64_t v272 = loc_252BA5C90;
        uint64_t v273 = loc_252BA5C98;
        LODWORD(v250) = v144;
        uint64_t v251 = v145;
        unsigned long long v247 = *((_OWORD *)v146 + 1);
        unsigned long long v252 = v247;
        uint64_t v253 = v148;
        uint64_t v254 = v147;
        long long v249 = *((_OWORD *)v146 + 3);
        long long v255 = v249;
        uint64_t v256 = v149;
        char v257 = v150;
        uint64_t v258 = v151;
        uint64_t v259 = v152;
        uint64_t v260 = v153;
        sub_252CBBA08();
        static MessagePayload.ActionWillExecute.== infix(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_201;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_170:
      swift_bridgeObjectRelease();
      uint64_t v4 = v126;
      goto LABEL_184;
    case 0x10u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 16) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ClientAction.== infix(_:_:)();
      goto LABEL_146;
    case 0x11u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 17) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ClientActionResult.== infix(_:_:)();
      goto LABEL_146;
    case 0x12u:
      sub_252CB99C0();
      uint64_t v189 = *((void *)v0 + 4);
      uint64_t v188 = *((void *)v0 + 5);
      unint64_t v190 = (uint64_t *)v249;
      if (swift_getEnumCaseMultiPayload() == 18)
      {
        *(void *)&unsigned long long v247 = v188;
        uint64_t v248 = v4;
        uint64_t v191 = v190;
        uint64_t v193 = *v190;
        unint64_t v192 = v190[1];
        uint64_t v194 = v190[2];
        unint64_t v195 = v191[3];
        uint64_t v246 = v191[4];
        uint64_t v196 = v191[5];
        uint64_t v197 = sub_252B233D8();
        if (MEMORY[0x2533C8590](v197))
        {
          uint64_t v198 = sub_252CB9A98();
          if ((MEMORY[0x2533C8590](v198) & 1) != 0 && (v189 != v246 || (void)v247 != v196)) {
            LODWORD(v249) = sub_252CB8520();
          }
        }
        sub_252AC5C14(v193, v192);
        sub_252AC5C14(v194, v195);
        swift_bridgeObjectRelease();
        sub_252CBC9B0();
        sub_252CBC7C0();
        swift_bridgeObjectRelease();
        goto LABEL_201;
      }
      sub_252CBC9B0();
      sub_252CBC7C0();
LABEL_166:
      swift_bridgeObjectRelease();
      goto LABEL_184;
    case 0x13u:
      sub_252CB99C0();
      uint64_t v141 = *(void **)v0;
      uint64_t v140 = *((void *)v0 + 1);
      if (sub_252CB8B20() == 19) {
        goto LABEL_128;
      }
      goto LABEL_166;
    case 0x14u:
      sub_252CBACD4();
      if (sub_252CB82DC() != 20) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
      {
        sub_252CB93A8();
        BOOL v156 = v122 && v154 == v155;
        if (v156 || (sub_252D1A5D8() & 1) != 0)
        {
          sub_252CBC070((uint64_t)&v240);
          static SystemPrompt.Prompt.== infix(_:_:)();
          if (v157) {
            goto LABEL_199;
          }
        }
      }
      goto LABEL_200;
    case 0x15u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 21) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      static SystemPromptResolution.== infix(_:_:)();
      goto LABEL_146;
    case 0x16u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 22) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static ActionResponse.== infix(_:_:)();
      goto LABEL_146;
    case 0x17u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 23) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static SystemResponse.== infix(_:_:)();
      goto LABEL_146;
    case 0x18u:
      sub_252CB99C0();
      uint64_t v141 = *(void **)v0;
      uint64_t v140 = *((void *)v0 + 1);
      if (sub_252CB8B20() != 24) {
        goto LABEL_166;
      }
      goto LABEL_128;
    case 0x19u:
      sub_252CB99C0();
      uint64_t v141 = *(void **)v0;
      uint64_t v140 = *((void *)v0 + 1);
      if (sub_252CB8B20() != 25) {
        goto LABEL_166;
      }
LABEL_128:
      if (v141 == *(void **)type metadata accessor for MessagePayload && v140 == loc_252BA5C40)
      {
LABEL_133:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_252AF4478();
        sub_252CB9FD0();
        sub_252CB8EFC();
        swift_bridgeObjectRelease();
      }
      goto LABEL_201;
    case 0x1Au:
      if (sub_252CBA548() == 26) {
        goto LABEL_201;
      }
      goto LABEL_184;
    case 0x1Bu:
      sub_252CB99C0();
      uint64_t v159 = *(void **)v0;
      uint64_t v158 = *((void *)v0 + 1);
      if (sub_252CB8DE0() != 27) {
        goto LABEL_166;
      }
      uint64_t v160 = *(void *)(v2 + 8);
      if (v158 && v160 && (v159 == *(void **)v2 ? (BOOL v161 = v158 == v160) : (BOOL v161 = 0), !v161))
      {
        sub_252CB9A98();
        sub_252CB8520();
        sub_252CBC89C();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      goto LABEL_117;
    case 0x1Cu:
      sub_252CB8C60();
      if (sub_252CB82DC() != 28) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ExternalAgentTextQuery.== infix(_:_:)();
      goto LABEL_146;
    case 0x1Du:
      sub_252CB8C60();
      if (sub_252CB82DC() != 29) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ExternalAgentSpeechQuery.== infix(_:_:)();
      goto LABEL_146;
    case 0x1Eu:
      sub_252CB8C60();
      if (sub_252CB82DC() != 30) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ExternalAgentRequest.== infix(_:_:)();
      goto LABEL_146;
    case 0x1Fu:
      sub_252CBACD4();
      if (sub_252CB82DC() != 31) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9A98();
      static StatementOutcome.== infix(_:_:)();
      if ((v162 & 1) != 0
        && (sub_252B1D710(*(void **)((char *)type metadata accessor for MessagePayload + *(int *)(v228 + 20)), *(void **)((char *)v1 + *(int *)(v228 + 20))) & 1) != 0)
      {
        goto LABEL_199;
      }
      goto LABEL_200;
    case 0x20u:
      sub_252CBC684();
      uint64_t v164 = (void *)*v1;
      uint64_t v163 = v1[1];
      if (sub_252CB8DE0() == 32) {
        goto LABEL_149;
      }
      goto LABEL_165;
    case 0x21u:
      sub_252CBC684();
      uint64_t v164 = (void *)*v1;
      uint64_t v163 = v1[1];
      if (sub_252CB8DE0() != 33) {
        goto LABEL_165;
      }
LABEL_149:
      BOOL v201 = v164 == *(void **)v2 && v163 == *(void *)(v2 + 8);
      if (!v201 && (sub_252B231A4() & 1) == 0) {
        goto LABEL_196;
      }
      uint64_t v202 = (void *)sub_252CBA1C8();
      sub_252B1D710(v202, v203);
      goto LABEL_195;
    case 0x22u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 34) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static MessagePayload.ClientUndoRedoRequest.== infix(_:_:)();
      goto LABEL_146;
    case 0x23u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 35) {
        goto LABEL_183;
      }
      sub_252CBA498();
      sub_252CB9F60();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
      {
        uint64_t v165 = *(int *)(v229 + 20);
        uint64_t v166 = *(void *)(v2 + v165);
        uint64_t v167 = *(void *)(v2 + v165 + 8);
        uint64_t v168 = (void *)((char *)type metadata accessor for MessagePayload + v165);
        BOOL v169 = v166 == *v168 && v167 == v168[1];
        if (v169 || (sub_252D1A5D8() & 1) != 0)
        {
          uint64_t v170 = sub_252AEA3DC();
          if (sub_252BB37C0(v170, v171)) {
            goto LABEL_199;
          }
        }
      }
      goto LABEL_200;
    case 0x24u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 36) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static SessionClientDebuggerEvent.Payload.== infix(_:_:)();
      goto LABEL_146;
    case 0x25u:
      sub_252CB8C60();
      if (sub_252CB82DC() != 37) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      sub_252CB9360();
      static SessionServerDebuggerEvent.Payload.== infix(_:_:)();
LABEL_146:
      sub_252BA6670();
      sub_252B7E4CC();
      goto LABEL_147;
    case 0x26u:
      sub_252CB99C0();
      uint64_t v205 = *(void **)v0;
      uint64_t v204 = *((void *)v0 + 1);
      uint64_t v206 = v4;
      uint64_t v208 = *((void *)v0 + 2);
      uint64_t v207 = *((void *)v0 + 3);
      uint64_t v210 = *((void *)v0 + 4);
      uint64_t v209 = *((void *)v0 + 5);
      uint64_t v212 = *((void *)v0 + 6);
      uint64_t v211 = *((void *)v0 + 7);
      v213 = (uint64_t *)v249;
      if (swift_getEnumCaseMultiPayload() == 38)
      {
        uint64_t v248 = v206;
        uint64_t v214 = *v213;
        *(void *)&unsigned long long v247 = v213[1];
        uint64_t v246 = v213[2];
        uint64_t v245 = v213[3];
        uint64_t v244 = v213[4];
        uint64_t v243 = v213[5];
        uint64_t v242 = v213[6];
        *(void *)&long long v249 = v213[7];
        v261 = v205;
        uint64_t v262 = v204;
        uint64_t v263 = v208;
        uint64_t v264 = v207;
        uint64_t v265 = v210;
        uint64_t v266 = v209;
        uint64_t v267 = v212;
        uint64_t v268 = v211;
        uint64_t v250 = v214;
        uint64_t v251 = v247;
        *(void *)&unsigned long long v252 = v246;
        *((void *)&v252 + 1) = v245;
        uint64_t v253 = v244;
        uint64_t v254 = v243;
        *(void *)&long long v255 = v242;
        *((void *)&v255 + 1) = v249;
        v215 = (uint64_t *)sub_252CBBA08();
        static SessionStatusUpdate.Payload.== infix(_:_:)(v215, v216);
        sub_252AD1724(v214, v247, v246, v245, v244, v243, v242);
        sub_252CBA084();
        goto LABEL_201;
      }
      sub_252CBA084();
      uint64_t v4 = v206;
      goto LABEL_184;
    case 0x27u:
      sub_252CBC684();
      if (sub_252CB8DE0() != 39) {
        goto LABEL_165;
      }
      sub_252AEA3DC();
      sub_252B1D82C();
      if ((v217 & 1) == 0) {
        goto LABEL_196;
      }
      uint64_t v218 = sub_252CBA1C8();
      sub_252B1D9AC(v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236,
        v237);
      goto LABEL_195;
    case 0x28u:
      sub_252CBC684();
      long long v139 = (void *)*v1;
      uint64_t v138 = v1[1];
      if (sub_252CB8DE0() != 40) {
        goto LABEL_165;
      }
LABEL_94:
      BOOL v172 = v139 == *(void **)v2 && v138 == *(void *)(v2 + 8);
      if (!v172 && (sub_252B231A4() & 1) == 0) {
        goto LABEL_196;
      }
      sub_252CBA1C8();
      sub_252BB3204();
      goto LABEL_195;
    case 0x29u:
      sub_252CBACD4();
      if (sub_252CB82DC() != 41) {
        goto LABEL_183;
      }
      sub_252CB8CE0();
      if (_s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0())
      {
        sub_252CB93A8();
        BOOL v175 = v122 && v173 == v174;
        if (v175 || (sub_252D1A5D8() & 1) != 0)
        {
          sub_252CBC070((uint64_t)&v241);
          static StatementOutcome.== infix(_:_:)();
          if (v176) {
            goto LABEL_199;
          }
        }
      }
      goto LABEL_200;
    default:
      sub_252CB9CB0();
      sub_252BA661C();
      if (!sub_252CBA528())
      {
        sub_252CBB454();
        sub_252CBBD30();
        static MessagePayload.Request.== infix(_:_:)();
        sub_252BA6670();
        sub_252AEA3DC();
LABEL_147:
        sub_252BA6670();
        goto LABEL_201;
      }
LABEL_183:
      sub_252BA6670();
LABEL_184:
      sub_252B5A4CC(v4, &qword_269C44D28);
      goto LABEL_202;
  }
}

uint64_t static SystemPrompt.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252BCB478(a1, a2, type metadata accessor for SystemPrompt, (uint64_t (*)(uint64_t, uint64_t))static SystemPrompt.Prompt.== infix(_:_:));
}

void static ActionResponse.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v87 = type metadata accessor for ResponseOutput(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252CB821C(v10, v82);
  uint64_t v84 = sub_252AC3A24(&qword_269C44D30);
  sub_252AEA304();
  MEMORY[0x270FA5388](v11);
  sub_252B774C8(v12, v82);
  uint64_t v13 = sub_252AC3A24(&qword_269C41AB8);
  uint64_t v14 = sub_252AEA368(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v83 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252B22C04();
  MEMORY[0x270FA5388](v16);
  uint64_t v85 = (uint64_t)&v82 - v17;
  sub_252B22C04();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v27 = sub_252CBB5E4(v19, v20, v21, v22, v23, v24, v25, v26, v82);
  sub_252AEDBD0();
  uint64_t v91 = v28;
  MEMORY[0x270FA5388](v29);
  sub_252AC423C();
  sub_252AC3A24(&qword_269C441F0);
  sub_252CBB750();
  MEMORY[0x270FA5388](v30);
  sub_252B23278();
  uint64_t v31 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v32 = sub_252AEA368(v31);
  MEMORY[0x270FA5388](v32);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v33);
  sub_252CB8750();
  MEMORY[0x270FA5388](v34);
  sub_252CB8F64();
  uint64_t v89 = v8;
  sub_252CB7E00(v8, v2, &qword_26B2320E8);
  uint64_t v90 = v6;
  sub_252CB7E00(v6, v3, &qword_26B2320E8);
  uint64_t v35 = v0 + *(int *)(v4 + 56);
  sub_252CB7E00(v2, v0, &qword_26B2320E8);
  uint64_t v36 = sub_252CBA168();
  sub_252CB7E00(v36, v37, &qword_26B2320E8);
  sub_252CB8170(v0);
  if (v42)
  {
    sub_252CB9960();
    sub_252CBA6E8();
    sub_252CB8170(v35);
    if (v42)
    {
      sub_252B5A4CC(v0, &qword_26B2320E8);
      goto LABEL_13;
    }
LABEL_9:
    uint64_t v43 = &qword_269C441F0;
    uint64_t v44 = v0;
LABEL_10:
    sub_252B5A4CC(v44, v43);
    goto LABEL_11;
  }
  uint64_t v38 = v91;
  uint64_t v39 = sub_252CBA1D4();
  sub_252CB7E00(v39, v40, v41);
  sub_252CB8170(v35);
  if (v42)
  {
    sub_252CB9960();
    sub_252CBA6E8();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v1, v27);
    goto LABEL_9;
  }
  sub_252CBAD54();
  sub_252B7E53C();
  v45();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  sub_252CB9AF0();
  char v46 = sub_252D19CF8();
  uint64_t v47 = *(void (**)(uint64_t))(v38 + 8);
  uint64_t v48 = sub_252CBB698();
  v47(v48);
  uint64_t v49 = sub_252CBA174();
  sub_252B5A4CC(v49, v50);
  uint64_t v51 = sub_252CB9DD4();
  sub_252B5A4CC(v51, v52);
  ((void (*)(uint64_t, uint64_t))v47)(v1, v27);
  sub_252B5A4CC(v0, &qword_26B2320E8);
  if ((v46 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v53 = type metadata accessor for ActionResponse(0);
  uint64_t v55 = v89;
  uint64_t v54 = v90;
  sub_252CBC240();
  if (v58)
  {
    if (!v56) {
      goto LABEL_11;
    }
    sub_252B233A0(v57);
    if (!v42 || v59 != v60)
    {
      sub_252D1A5D8();
      sub_252B5F6F8();
      if ((v62 & 1) == 0) {
        goto LABEL_11;
      }
    }
  }
  else if (v56)
  {
    goto LABEL_11;
  }
  sub_252CB93A8();
  if (v42) {
    BOOL v65 = v63 == v64;
  }
  else {
    BOOL v65 = 0;
  }
  if (!v65)
  {
    sub_252D1A5D8();
    sub_252B5F6F8();
    if ((v66 & 1) == 0) {
      goto LABEL_11;
    }
  }
  static ActionOutcome.== infix(_:_:)();
  if ((v67 & 1) == 0) {
    goto LABEL_11;
  }
  static ResponseManifest.== infix(_:_:)();
  if ((v68 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v69 = v86;
  sub_252CB7E00(v55 + *(int *)(v53 + 36), v86, &qword_269C41AB8);
  uint64_t v70 = v85;
  sub_252CB7E00(v54 + *(int *)(v53 + 36), v85, &qword_269C41AB8);
  uint64_t v71 = v88;
  uint64_t v72 = v88 + *(int *)(v84 + 48);
  sub_252CB7E00(v69, v88, &qword_269C41AB8);
  sub_252CB7E00(v70, v72, &qword_269C41AB8);
  uint64_t v73 = v87;
  sub_252B22A90(v71, 1, v87);
  if (!v42)
  {
    sub_252CB7E00(v71, v83, &qword_269C41AB8);
    sub_252B22A90(v72, 1, v73);
    if (!v74)
    {
      sub_252C06474();
      sub_252CBC3B4();
      BOOL v75 = static ResponseOutput.== infix(_:_:)();
      sub_252BA6670();
      sub_252B5A4CC(v70, &qword_269C41AB8);
      sub_252CBB3FC();
      sub_252CBC3A8();
      sub_252BA6670();
      sub_252CBAF14();
      if (!v75) {
        goto LABEL_11;
      }
      goto LABEL_39;
    }
    sub_252CBC594();
    sub_252CBB3BC();
    sub_252BA6670();
    goto LABEL_37;
  }
  sub_252CBC594();
  sub_252CBB3BC();
  sub_252B22A90(v72, 1, v73);
  if (!v42)
  {
LABEL_37:
    uint64_t v43 = &qword_269C44D30;
    uint64_t v44 = v71;
    goto LABEL_10;
  }
  sub_252B5A4CC(v71, &qword_269C41AB8);
LABEL_39:
  sub_252CBC240();
  if (v78 && v76)
  {
    sub_252B233A0(v77);
    if (v42) {
      BOOL v81 = v79 == v80;
    }
    else {
      BOOL v81 = 0;
    }
    if (!v81) {
      sub_252D1A5D8();
    }
  }
LABEL_11:
  sub_252AFC718();
}

void static SystemResponse.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v98 = type metadata accessor for ResponseOutput(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252CB821C(v9, v93);
  uint64_t v95 = sub_252AC3A24(&qword_269C44D30);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252B774C8(v11, v93);
  uint64_t v12 = sub_252AC3A24(&qword_269C41AB8);
  uint64_t v13 = sub_252AEA368(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v94 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_252B22C04();
  MEMORY[0x270FA5388](v15);
  uint64_t v96 = (uint64_t)&v93 - v16;
  sub_252B22C04();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v26 = sub_252CBB5E4(v18, v19, v20, v21, v22, v23, v24, v25, v93);
  sub_252AEDBD0();
  uint64_t v102 = v27;
  MEMORY[0x270FA5388](v28);
  sub_252AC423C();
  uint64_t v29 = sub_252AC3A24(&qword_269C441F0);
  uint64_t v30 = v29 - 8;
  MEMORY[0x270FA5388](v29);
  sub_252B23278();
  uint64_t v31 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v32 = sub_252AEA368(v31);
  MEMORY[0x270FA5388](v32);
  sub_252CB9D8C();
  MEMORY[0x270FA5388](v33);
  sub_252CB9300();
  MEMORY[0x270FA5388](v34);
  sub_252CBB5D4();
  uint64_t v100 = v7;
  uint64_t v35 = sub_252CBACA0();
  sub_252CB7E00(v35, v36, &qword_26B2320E8);
  uint64_t v101 = v5;
  uint64_t v37 = sub_252CBA79C();
  sub_252CB7E00(v37, v38, &qword_26B2320E8);
  uint64_t v39 = v1 + *(int *)(v30 + 56);
  uint64_t v40 = sub_252B233D8();
  sub_252CB7E00(v40, v41, &qword_26B2320E8);
  uint64_t v42 = sub_252AFC650();
  sub_252CB7E00(v42, v43, &qword_26B2320E8);
  sub_252CB8170(v1);
  if (v48)
  {
    sub_252B5A4CC(v0, &qword_26B2320E8);
    sub_252B5A4CC(v2, &qword_26B2320E8);
    sub_252CB8170(v39);
    if (v48)
    {
      sub_252B5A4CC(v1, &qword_26B2320E8);
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v49 = &qword_269C441F0;
    uint64_t v50 = v1;
LABEL_10:
    sub_252B5A4CC(v50, v49);
    goto LABEL_55;
  }
  uint64_t v44 = v102;
  uint64_t v45 = sub_252CBAA94();
  sub_252CB7E00(v45, v46, v47);
  sub_252CB8170(v39);
  if (v48)
  {
    sub_252B5A4CC(v0, &qword_26B2320E8);
    sub_252B5A4CC(v2, &qword_26B2320E8);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v3, v26);
    goto LABEL_9;
  }
  sub_252CBC378();
  sub_252B7E53C();
  v51();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  sub_252CB9DD4();
  char v52 = sub_252D19CF8();
  uint64_t v53 = *(void (**)(void))(v44 + 8);
  sub_252CBA600();
  sub_252B775A0();
  v53();
  sub_252B5A4CC(v0, &qword_26B2320E8);
  sub_252B5A4CC(v2, &qword_26B2320E8);
  sub_252B775A0();
  v53();
  sub_252B5A4CC(v1, &qword_26B2320E8);
  if ((v52 & 1) == 0) {
    goto LABEL_55;
  }
LABEL_12:
  uint64_t v54 = (int *)type metadata accessor for SystemResponse(0);
  uint64_t v55 = v54[5];
  uint64_t v57 = v100;
  uint64_t v56 = v101;
  uint64_t v59 = *(void *)(v100 + v55);
  uint64_t v58 = *(void *)(v100 + v55 + 8);
  uint64_t v60 = *(void *)(v100 + v55 + 16);
  uint64_t v61 = (void *)(v101 + v55);
  uint64_t v62 = v61[2];
  if (v60 == 1)
  {
    if (v62 == 1) {
      goto LABEL_14;
    }
LABEL_27:
    uint64_t v75 = sub_252CBB898();
    sub_252C099B4(v75, v76, v77);
    sub_252C099C8(v59, v58, v60);
    uint64_t v78 = sub_252CBB898();
    sub_252C099C8(v78, v79, v80);
    goto LABEL_55;
  }
  if (v62 == 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_27;
  }
  if (v59 != *v61) {
    goto LABEL_55;
  }
  if (v60)
  {
    if (!v62)
    {
      sub_252CBAB78();
      goto LABEL_55;
    }
    if (v58 == v61[1] && v60 == v62)
    {
      sub_252CBAB78();
    }
    else
    {
      sub_252B7E4CC();
      char v82 = sub_252CB9FD0();
      sub_252CBAB78();
      if ((v82 & 1) == 0) {
        goto LABEL_55;
      }
    }
  }
  else if (v62)
  {
    goto LABEL_55;
  }
LABEL_14:
  sub_252CB93A8();
  if (v48) {
    BOOL v65 = v63 == v64;
  }
  else {
    BOOL v65 = 0;
  }
  if (!v65)
  {
    sub_252D1A5D8();
    sub_252B5F6F8();
    if ((v66 & 1) == 0) {
      goto LABEL_55;
    }
  }
  static StatementOutcome.== infix(_:_:)();
  if ((v67 & 1) == 0) {
    goto LABEL_55;
  }
  uint64_t v68 = v97;
  sub_252CB7E00(v57 + v54[8], v97, &qword_269C41AB8);
  uint64_t v69 = v96;
  sub_252CB7E00(v56 + v54[8], v96, &qword_269C41AB8);
  uint64_t v70 = v99;
  uint64_t v71 = v99 + *(int *)(v95 + 48);
  sub_252CB7E00(v68, v99, &qword_269C41AB8);
  uint64_t v72 = sub_252CBA79C();
  sub_252CB7E00(v72, v73, &qword_269C41AB8);
  uint64_t v74 = v98;
  sub_252B22A90(v70, 1, v98);
  if (!v48)
  {
    sub_252CB7E00(v70, v94, &qword_269C41AB8);
    sub_252B22A90(v71, 1, v74);
    if (!v83)
    {
      sub_252C06474();
      sub_252CB9234();
      BOOL v84 = static ResponseOutput.== infix(_:_:)();
      sub_252BA6670();
      sub_252B5A4CC(v69, &qword_269C41AB8);
      sub_252B5A4CC(v68, &qword_269C41AB8);
      sub_252CBC378();
      sub_252BA6670();
      uint64_t v85 = sub_252B233D8();
      sub_252B5A4CC(v85, v86);
      if (!v84) {
        goto LABEL_55;
      }
      goto LABEL_45;
    }
    sub_252CBC594();
    sub_252CBA6E8();
    sub_252BA6670();
    goto LABEL_40;
  }
  sub_252B5A4CC(v69, &qword_269C41AB8);
  sub_252B5A4CC(v68, &qword_269C41AB8);
  sub_252B22A90(v71, 1, v74);
  if (!v48)
  {
LABEL_40:
    uint64_t v49 = &qword_269C44D30;
    uint64_t v50 = v70;
    goto LABEL_10;
  }
  sub_252B5A4CC(v70, &qword_269C41AB8);
LABEL_45:
  uint64_t v87 = v54[9];
  uint64_t v88 = *(void *)(v56 + v87 + 8);
  if (*(void *)(v57 + v87 + 8))
  {
    if (v88)
    {
      sub_252B233A0(v57 + v87);
      if (v48 && v89 == v90) {
        goto LABEL_56;
      }
      sub_252D1A5D8();
      sub_252B5F6F8();
      if (v92) {
        goto LABEL_56;
      }
    }
  }
  else if (!v88)
  {
LABEL_56:
    sub_252B1E1D4();
  }
LABEL_55:
  sub_252AFC718();
}

void static PlannerPromptData.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_252B1D82C();
  if (v20)
  {
    uint64_t v21 = sub_252AEA3DC();
    sub_252B1D9AC(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
}

uint64_t static ActionResolutionUpdate.== infix(_:_:)(uint64_t a1)
{
  return sub_252BCB3CC(a1);
}

uint64_t sub_252BCB3CC(uint64_t a1)
{
  uint64_t v1 = sub_252CBA2C4(a1);
  BOOL v4 = v1 == *v3 && v2 == v3[1];
  if (!v4 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = sub_252AEA3DC();

  return v6(v5);
}

uint64_t static ActionExecutionOutcome.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252BCB478(a1, a2, type metadata accessor for ActionExecutionOutcome, (uint64_t (*)(uint64_t, uint64_t))static StatementOutcome.== infix(_:_:));
}

uint64_t sub_252BCB478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  if ((sub_252CBAA44() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a3(0);
  sub_252CB87FC(*(int *)(v7 + 20));
  BOOL v10 = v10 && v8 == v9;
  if (!v10 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(v7 + 24);

  return a4(v5 + v11, v4 + v11);
}

uint64_t sub_252BCB51C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74616E696D726574 && a2 == 0xE900000000000065;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1D9B0 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x616C50664F646E65 && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000252D1D9D0 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1D9F0 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            BOOL v10 = a1 == 0x7551686365657073 && a2 == 0xEB00000000797265;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1DA10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else
            {
              BOOL v11 = a1 == 0x6269726373657270 && a2 == 0xEE006E616C506465;
              if (v11 || (sub_252D1A5D8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                BOOL v12 = a1 == 0x6E6172546B636F6DLL && a2 == 0xEE00747069726373;
                if (v12 || (sub_252D1A5D8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1DA30 || (sub_252D1A5D8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1DA50 || (sub_252D1A5D8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1DA70 || (sub_252D1A5D8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1DA90 || (sub_252D1A5D8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else
                {
                  BOOL v13 = a1 == 0x6341746E65696C63 && a2 == 0xEC0000006E6F6974;
                  if (v13 || (sub_252D1A5D8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 16;
                  }
                  else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1DAB0 || (sub_252D1A5D8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 17;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x7543746E65696C63 && a2 == 0xEC0000006D6F7473;
                    if (v14 || (sub_252D1A5D8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 18;
                    }
                    else if (a1 == 0xD000000000000010 && a2 == 0x8000000252D1DAD0 || (sub_252D1A5D8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 19;
                    }
                    else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1DAF0 || (sub_252D1A5D8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 20;
                    }
                    else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1DB10 || (sub_252D1A5D8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 21;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x65526E6F69746361 && a2 == 0xEE0065736E6F7073;
                      if (v15 || (sub_252D1A5D8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 22;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x65526D6574737973 && a2 == 0xEE0065736E6F7073;
                        if (v16 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 23;
                        }
                        else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1DB30 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 24;
                        }
                        else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1DB50 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 25;
                        }
                        else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1DB70 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 26;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1DB90 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 27;
                        }
                        else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1DBB0 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 28;
                        }
                        else if (a1 == 0xD000000000000018 && a2 == 0x8000000252D1DBD0 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 29;
                        }
                        else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1DBF0 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 30;
                        }
                        else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1DC10 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 31;
                        }
                        else if (a1 == 0xD000000000000021 && a2 == 0x8000000252D1DC30 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 32;
                        }
                        else if (a1 == 0xD000000000000023 && a2 == 0x8000000252D1DC60 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 33;
                        }
                        else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1DC90 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 34;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1DCB0 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 35;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1DCD0 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 36;
                        }
                        else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1DCF0 || (sub_252D1A5D8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 37;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x7055737574617473 && a2 == 0xEC00000065746164;
                          if (v17 || (sub_252D1A5D8() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 38;
                          }
                          else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1DD10 {
                                 || (sub_252D1A5D8() & 1) != 0)
                          }
                          {
                            swift_bridgeObjectRelease();
                            return 39;
                          }
                          else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1DD30 {
                                 || (sub_252D1A5D8() & 1) != 0)
                          }
                          {
                            swift_bridgeObjectRelease();
                            return 40;
                          }
                          else if (a1 == 0x78456E6F69746361 && a2 == 0xEE00646574756365)
                          {
                            swift_bridgeObjectRelease();
                            return 41;
                          }
                          else
                          {
                            char v19 = sub_252D1A5D8();
                            swift_bridgeObjectRelease();
                            if (v19) {
                              return 41;
                            }
                            else {
                              return 42;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252BCC4D4()
{
  return 42;
}

uint64_t sub_252BCC4DC(char a1)
{
  uint64_t result = 0x74736575716572;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74616E696D726574;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0x616C50664F646E65;
      break;
    case 4:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      uint64_t result = 0x726F727265;
      break;
    case 6:
      uint64_t result = 0xD000000000000016;
      break;
    case 7:
      uint64_t result = 0x7972657571;
      break;
    case 8:
      uint64_t result = 0x7551686365657073;
      break;
    case 9:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 10:
      uint64_t result = 0x6269726373657270;
      break;
    case 11:
      uint64_t result = 0x6E6172546B636F6DLL;
      break;
    case 12:
    case 14:
    case 21:
    case 30:
    case 31:
      uint64_t result = 0xD000000000000014;
      break;
    case 13:
      uint64_t result = 0xD000000000000016;
      break;
    case 15:
      uint64_t result = 0xD000000000000011;
      break;
    case 16:
      uint64_t result = 0x6341746E65696C63;
      break;
    case 17:
      uint64_t result = 0xD000000000000012;
      break;
    case 18:
      uint64_t result = 0x7543746E65696C63;
      break;
    case 19:
      uint64_t result = 0xD000000000000010;
      break;
    case 20:
      uint64_t result = 0xD000000000000015;
      break;
    case 22:
      uint64_t v3 = 0x6E6F69746361;
      goto LABEL_22;
    case 23:
      uint64_t v3 = 0x6D6574737973;
LABEL_22:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6552000000000000;
      break;
    case 24:
      uint64_t result = 0xD000000000000015;
      break;
    case 25:
      uint64_t result = 0xD000000000000017;
      break;
    case 26:
      uint64_t result = 0xD000000000000011;
      break;
    case 27:
      uint64_t result = 0xD000000000000013;
      break;
    case 28:
      uint64_t result = 0xD000000000000016;
      break;
    case 29:
      uint64_t result = 0xD000000000000018;
      break;
    case 32:
      uint64_t result = 0xD000000000000021;
      break;
    case 33:
      uint64_t result = 0xD000000000000023;
      break;
    case 34:
      uint64_t result = 0xD000000000000015;
      break;
    case 35:
      uint64_t result = 0xD000000000000013;
      break;
    case 36:
      uint64_t result = 0xD000000000000013;
      break;
    case 37:
      uint64_t result = 0xD000000000000013;
      break;
    case 38:
      uint64_t result = 0x7055737574617473;
      break;
    case 39:
      uint64_t result = 0xD000000000000011;
      break;
    case 40:
      uint64_t result = 0xD000000000000016;
      break;
    case 41:
      uint64_t result = 0x78456E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BCC9C4(uint64_t a1)
{
  unint64_t v2 = sub_252C09A28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCA00(uint64_t a1)
{
  unint64_t v2 = sub_252C09A28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCA3C(uint64_t a1)
{
  unint64_t v2 = sub_252C09A74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCA78(uint64_t a1)
{
  unint64_t v2 = sub_252C09A74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCAB4(uint64_t a1)
{
  unint64_t v2 = sub_252C0A1E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCAF0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A1E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCB2C(uint64_t a1)
{
  unint64_t v2 = sub_252C09CD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCB68(uint64_t a1)
{
  unint64_t v2 = sub_252C09CD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCBA4(uint64_t a1)
{
  unint64_t v2 = sub_252C0A48C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCBE0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A48C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCC1C(uint64_t a1)
{
  unint64_t v2 = sub_252C0A440();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCC58(uint64_t a1)
{
  unint64_t v2 = sub_252C0A440();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCC94(uint64_t a1)
{
  unint64_t v2 = sub_252C0A3F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCCD0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A3F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCD0C(uint64_t a1)
{
  unint64_t v2 = sub_252C0A35C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCD48(uint64_t a1)
{
  unint64_t v2 = sub_252C0A35C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCD84(uint64_t a1)
{
  unint64_t v2 = sub_252C09C88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCDC0(uint64_t a1)
{
  unint64_t v2 = sub_252C09C88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCDFC(uint64_t a1)
{
  unint64_t v2 = sub_252C0A570();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCE38(uint64_t a1)
{
  unint64_t v2 = sub_252C0A570();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCE74(uint64_t a1)
{
  unint64_t v2 = sub_252C0A524();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCEB0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A524();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCEEC(uint64_t a1)
{
  unint64_t v2 = sub_252C0A2C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCF28(uint64_t a1)
{
  unint64_t v2 = sub_252C0A2C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCF64(uint64_t a1)
{
  unint64_t v2 = sub_252C0A784();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCCFA0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A784();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCCFDC(uint64_t a1)
{
  unint64_t v2 = sub_252C09D20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD018(uint64_t a1)
{
  unint64_t v2 = sub_252C09D20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD054()
{
  return sub_252BCC4DC(*v0);
}

uint64_t sub_252BCD05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BCB51C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BCD084@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252BCC4D4();
  *a1 = result;
  return result;
}

uint64_t sub_252BCD0AC(uint64_t a1)
{
  unint64_t v2 = sub_252C099DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD0E8(uint64_t a1)
{
  unint64_t v2 = sub_252C099DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD124(uint64_t a1)
{
  unint64_t v2 = sub_252C0A064();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD160(uint64_t a1)
{
  unint64_t v2 = sub_252C0A064();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD19C(uint64_t a1)
{
  unint64_t v2 = sub_252C0A0FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD1D8(uint64_t a1)
{
  unint64_t v2 = sub_252C0A0FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD214(uint64_t a1)
{
  unint64_t v2 = sub_252C0A5BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD250(uint64_t a1)
{
  unint64_t v2 = sub_252C0A5BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD28C(uint64_t a1)
{
  unint64_t v2 = sub_252C0AAC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD2C8(uint64_t a1)
{
  unint64_t v2 = sub_252C0AAC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD304(uint64_t a1)
{
  unint64_t v2 = sub_252C0A9E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD340(uint64_t a1)
{
  unint64_t v2 = sub_252C0A9E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD37C(uint64_t a1)
{
  unint64_t v2 = sub_252C09E04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD3B8(uint64_t a1)
{
  unint64_t v2 = sub_252C09E04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD3F4(uint64_t a1)
{
  unint64_t v2 = sub_252C09DB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD430(uint64_t a1)
{
  unint64_t v2 = sub_252C09DB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD46C(uint64_t a1)
{
  unint64_t v2 = sub_252C09E50();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD4A8(uint64_t a1)
{
  unint64_t v2 = sub_252C09E50();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD4E4(uint64_t a1)
{
  unint64_t v2 = sub_252C09D6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD520(uint64_t a1)
{
  unint64_t v2 = sub_252C09D6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD55C(uint64_t a1)
{
  unint64_t v2 = sub_252C09E9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD598(uint64_t a1)
{
  unint64_t v2 = sub_252C09E9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD5D4(uint64_t a1)
{
  unint64_t v2 = sub_252C09EE8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD610(uint64_t a1)
{
  unint64_t v2 = sub_252C09EE8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD64C(uint64_t a1)
{
  unint64_t v2 = sub_252C0A654();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD688(uint64_t a1)
{
  unint64_t v2 = sub_252C0A654();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD6C4(uint64_t a1)
{
  unint64_t v2 = sub_252C09B0C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD700(uint64_t a1)
{
  unint64_t v2 = sub_252C09B0C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD73C(uint64_t a1)
{
  unint64_t v2 = sub_252C0A94C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD778(uint64_t a1)
{
  unint64_t v2 = sub_252C0A94C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD7B4(uint64_t a1)
{
  unint64_t v2 = sub_252C0A6EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD7F0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A6EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD82C(uint64_t a1)
{
  unint64_t v2 = sub_252C0A8B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD868(uint64_t a1)
{
  unint64_t v2 = sub_252C0A8B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD8A4(uint64_t a1)
{
  unint64_t v2 = sub_252C0AC90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD8E0(uint64_t a1)
{
  unint64_t v2 = sub_252C0AC90();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD91C(uint64_t a1)
{
  unint64_t v2 = sub_252C09F34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD958(uint64_t a1)
{
  unint64_t v2 = sub_252C09F34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCD994(uint64_t a1)
{
  unint64_t v2 = sub_252C09FCC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCD9D0(uint64_t a1)
{
  unint64_t v2 = sub_252C09FCC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDA0C(uint64_t a1)
{
  unint64_t v2 = sub_252C09C3C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDA48(uint64_t a1)
{
  unint64_t v2 = sub_252C09C3C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDA84(uint64_t a1)
{
  unint64_t v2 = sub_252C0AB60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDAC0(uint64_t a1)
{
  unint64_t v2 = sub_252C0AB60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDAFC(uint64_t a1)
{
  unint64_t v2 = sub_252C0A81C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDB38(uint64_t a1)
{
  unint64_t v2 = sub_252C0A81C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDB74(uint64_t a1)
{
  unint64_t v2 = sub_252C09BA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDBB0(uint64_t a1)
{
  unint64_t v2 = sub_252C09BA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDBEC(uint64_t a1)
{
  unint64_t v2 = sub_252C0AA7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDC28(uint64_t a1)
{
  unint64_t v2 = sub_252C0AA7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDC64(uint64_t a1)
{
  unint64_t v2 = sub_252C0A278();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDCA0(uint64_t a1)
{
  unint64_t v2 = sub_252C0A278();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDCDC(uint64_t a1)
{
  unint64_t v2 = sub_252C0A22C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDD18(uint64_t a1)
{
  unint64_t v2 = sub_252C0A22C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDD54(uint64_t a1)
{
  unint64_t v2 = sub_252C0A194();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDD90(uint64_t a1)
{
  unint64_t v2 = sub_252C0A194();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BCDDCC(uint64_t a1)
{
  unint64_t v2 = sub_252C0ABF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BCDE08(uint64_t a1)
{
  unint64_t v2 = sub_252C0ABF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void MessagePayload.encode(to:)()
{
  sub_252AF4380();
  uint64_t v293 = v1;
  uint64_t v296 = v0;
  uint64_t v5 = v4;
  sub_252AC3A24(&qword_26B231EB8);
  sub_252AEDBD0();
  uint64_t v291 = v7;
  uint64_t v292 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v290 = (uint64_t)v286 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_252AEDD78();
  uint64_t v288 = type metadata accessor for ActionExecutionOutcome(v9);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252CB86B0(v11, v286[0]);
  uint64_t v287 = sub_252AC3A24(&qword_26B231F70);
  sub_252AEDBD0();
  v286[155] = v12;
  MEMORY[0x270FA5388](v13);
  sub_252B9857C((uint64_t)v286 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[153] = sub_252AC3A24(&qword_26B231EF8);
  sub_252AEDBD0();
  v286[152] = v15;
  MEMORY[0x270FA5388](v16);
  sub_252B9857C((uint64_t)v286 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[151] = sub_252AC3A24(&qword_26B231EB0);
  sub_252AEDBD0();
  v286[150] = v18;
  MEMORY[0x270FA5388](v19);
  sub_252B9857C((uint64_t)v286 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[147] = sub_252AC3A24(&qword_26B231F28);
  sub_252AEDBD0();
  v286[146] = v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = sub_252B7E454((uint64_t)v286 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[142] = type metadata accessor for SessionServerDebuggerEvent(v24);
  sub_252AEA304();
  MEMORY[0x270FA5388](v25);
  sub_252B9857C((uint64_t)v286 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[143] = sub_252AC3A24(&qword_26B231F18);
  sub_252AEDBD0();
  v286[141] = v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = sub_252B7E454((uint64_t)v286 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[137] = type metadata accessor for SessionClientDebuggerEvent(v30);
  sub_252AEA304();
  MEMORY[0x270FA5388](v31);
  sub_252B9857C((uint64_t)v286 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[138] = sub_252AC3A24(&qword_26B231F10);
  sub_252AEDBD0();
  v286[136] = v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = sub_252B7E454((uint64_t)v286 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[132] = type metadata accessor for MessagePayload.ActionSummaryUpdate(v36);
  sub_252AEA304();
  MEMORY[0x270FA5388](v37);
  sub_252B9857C((uint64_t)v286 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[133] = sub_252AC3A24(&qword_26B231F58);
  sub_252AEDBD0();
  v286[131] = v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = sub_252B7E454((uint64_t)v286 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[128] = type metadata accessor for MessagePayload.ClientUndoRedoRequest(v42);
  sub_252AEA304();
  MEMORY[0x270FA5388](v43);
  sub_252B9857C((uint64_t)v286 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[127] = sub_252AC3A24(&qword_26B231FB0);
  sub_252AEDBD0();
  v286[126] = v45;
  MEMORY[0x270FA5388](v46);
  sub_252B9857C((uint64_t)v286 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[124] = sub_252AC3A24(&qword_26B231FA8);
  sub_252AEDBD0();
  v286[123] = v48;
  MEMORY[0x270FA5388](v49);
  sub_252B9857C((uint64_t)v286 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[121] = sub_252AC3A24(&qword_26B231F40);
  sub_252AEDBD0();
  v286[120] = v51;
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = sub_252B7E454((uint64_t)v286 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[116] = type metadata accessor for MessagePayload.ExternalAgentOutcome(v54);
  sub_252AEA304();
  MEMORY[0x270FA5388](v55);
  sub_252B9857C((uint64_t)v286 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[117] = sub_252AC3A24(&qword_26B231F48);
  sub_252AEDBD0();
  v286[115] = v57;
  MEMORY[0x270FA5388](v58);
  uint64_t v60 = sub_252B7E454((uint64_t)v286 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[111] = type metadata accessor for MessagePayload.ExternalAgentRequest(v60);
  sub_252AEA304();
  MEMORY[0x270FA5388](v61);
  sub_252B9857C((uint64_t)v286 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[112] = sub_252AC3A24(&qword_26B231F98);
  sub_252AEDBD0();
  v286[110] = v63;
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = sub_252B7E454((uint64_t)v286 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[106] = type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(v66);
  sub_252AEA304();
  MEMORY[0x270FA5388](v67);
  sub_252B9857C((uint64_t)v286 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[107] = sub_252AC3A24(&qword_26B231F80);
  sub_252AEDBD0();
  v286[105] = v69;
  MEMORY[0x270FA5388](v70);
  uint64_t v72 = sub_252B7E454((uint64_t)v286 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[102] = type metadata accessor for MessagePayload.ExternalAgentTextQuery(v72);
  sub_252AEA304();
  MEMORY[0x270FA5388](v73);
  sub_252B9857C((uint64_t)v286 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[101] = sub_252AC3A24(&qword_26B231F20);
  sub_252AEDBD0();
  v286[100] = v75;
  MEMORY[0x270FA5388](v76);
  sub_252B9857C((uint64_t)v286 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  v286[98] = sub_252AC3A24(&qword_26B231F00);
  sub_252AEDBD0();
  v286[97] = v78;
  MEMORY[0x270FA5388](v79);
  sub_252AEDE70();
  sub_252B9857C(v80);
  v286[95] = sub_252AC3A24(&qword_26B231F90);
  sub_252AEDBD0();
  v286[94] = v81;
  MEMORY[0x270FA5388](v82);
  sub_252AEDE70();
  sub_252B9857C(v83);
  v286[92] = sub_252AC3A24(&qword_26B231F60);
  sub_252AEDBD0();
  v286[91] = v84;
  MEMORY[0x270FA5388](v85);
  sub_252AEDE70();
  sub_252B9857C(v86);
  v286[90] = sub_252AC3A24(&qword_26B231ED8);
  sub_252AEDBD0();
  v286[88] = v87;
  MEMORY[0x270FA5388](v88);
  sub_252AEDE70();
  uint64_t v90 = sub_252B7E454(v89);
  v286[84] = type metadata accessor for SystemResponse(v90);
  sub_252AEA304();
  MEMORY[0x270FA5388](v91);
  sub_252AEDE70();
  sub_252B9857C(v92);
  v286[85] = sub_252AC3A24(&qword_26B231EC0);
  sub_252AEDBD0();
  v286[83] = v93;
  MEMORY[0x270FA5388](v94);
  sub_252AEDE70();
  uint64_t v96 = sub_252B7E454(v95);
  v286[79] = type metadata accessor for ActionResponse(v96);
  sub_252AEA304();
  MEMORY[0x270FA5388](v97);
  sub_252AEDE70();
  sub_252B9857C(v98);
  v286[80] = sub_252AC3A24(&qword_26B231F50);
  sub_252AEDBD0();
  v286[78] = v99;
  MEMORY[0x270FA5388](v100);
  sub_252AEDE70();
  uint64_t v102 = sub_252B7E454(v101);
  v286[74] = type metadata accessor for SystemPromptResolution(v102);
  sub_252AEA304();
  MEMORY[0x270FA5388](v103);
  sub_252AEDE70();
  sub_252B9857C(v104);
  v286[75] = sub_252AC3A24(&qword_26B231F68);
  sub_252AEDBD0();
  v286[73] = v105;
  MEMORY[0x270FA5388](v106);
  sub_252AEDE70();
  uint64_t v108 = sub_252B7E454(v107);
  v286[70] = type metadata accessor for SystemPrompt(v108);
  sub_252AEA304();
  MEMORY[0x270FA5388](v109);
  sub_252AEDE70();
  sub_252B9857C(v110);
  v286[69] = sub_252AC3A24(&qword_26B231EE0);
  sub_252AEDBD0();
  v286[68] = v111;
  MEMORY[0x270FA5388](v112);
  sub_252AEDE70();
  sub_252B9857C(v113);
  v286[67] = sub_252AC3A24(&qword_26B231EA8);
  sub_252AEDBD0();
  v286[66] = v114;
  MEMORY[0x270FA5388](v115);
  sub_252AEDE70();
  sub_252B9857C(v116);
  v286[63] = sub_252AC3A24(&qword_26B231F08);
  sub_252AEDBD0();
  v286[62] = v117;
  MEMORY[0x270FA5388](v118);
  sub_252AEDE70();
  uint64_t v120 = sub_252B7E454(v119);
  v286[58] = type metadata accessor for MessagePayload.ClientActionResult(v120);
  sub_252AEA304();
  MEMORY[0x270FA5388](v121);
  sub_252AEDE70();
  sub_252B9857C(v122);
  v286[59] = sub_252AC3A24(&qword_26B231EA0);
  sub_252AEDBD0();
  v286[57] = v123;
  MEMORY[0x270FA5388](v124);
  sub_252AEDE70();
  uint64_t v126 = sub_252B7E454(v125);
  v286[51] = type metadata accessor for MessagePayload.ClientAction(v126);
  sub_252AEA304();
  MEMORY[0x270FA5388](v127);
  sub_252AEDE70();
  sub_252B9857C(v128);
  v286[54] = sub_252AC3A24(&qword_26B231EF0);
  sub_252AEDBD0();
  v286[53] = v129;
  MEMORY[0x270FA5388](v130);
  sub_252AEDE70();
  sub_252B9857C(v131);
  v286[50] = sub_252AC3A24(&qword_26B231F30);
  sub_252AEDBD0();
  v286[49] = v132;
  MEMORY[0x270FA5388](v133);
  sub_252AEDE70();
  uint64_t v135 = sub_252B7E454(v134);
  v286[45] = type metadata accessor for MessagePayload.ClientEffectResolved(v135);
  sub_252AEA304();
  MEMORY[0x270FA5388](v136);
  sub_252AEDE70();
  sub_252B9857C(v137);
  v286[46] = sub_252AC3A24(&qword_26B231F78);
  sub_252AEDBD0();
  v286[44] = v138;
  MEMORY[0x270FA5388](v139);
  sub_252AEDE70();
  uint64_t v141 = sub_252B7E454(v140);
  v286[41] = type metadata accessor for MessagePayload.ClientEffectInvocation(v141);
  sub_252AEA304();
  MEMORY[0x270FA5388](v142);
  sub_252AEDE70();
  sub_252B9857C(v143);
  v286[40] = sub_252AC3A24(&qword_26B231F38);
  sub_252AEDBD0();
  v286[39] = v144;
  MEMORY[0x270FA5388](v145);
  sub_252AEDE70();
  sub_252B9857C(v146);
  v286[37] = sub_252AC3A24(&qword_26B231EC8);
  sub_252AEDBD0();
  v286[36] = v147;
  MEMORY[0x270FA5388](v148);
  sub_252AEDE70();
  sub_252B9857C(v149);
  v286[34] = sub_252AC3A24(&qword_26B231ED0);
  sub_252AEDBD0();
  v286[33] = v150;
  MEMORY[0x270FA5388](v151);
  sub_252AEDE70();
  sub_252B9857C(v152);
  v286[31] = sub_252AC3A24(&qword_26B231E60);
  sub_252AEDBD0();
  v286[30] = v153;
  MEMORY[0x270FA5388](v154);
  sub_252AEDE70();
  sub_252B9857C(v155);
  v286[28] = sub_252AC3A24(&qword_26B231E98);
  sub_252AEDBD0();
  v286[27] = v156;
  MEMORY[0x270FA5388](v157);
  sub_252AEDE70();
  sub_252B9857C(v158);
  v286[25] = sub_252AC3A24(&qword_26B231E78);
  sub_252AEDBD0();
  v286[24] = v159;
  MEMORY[0x270FA5388](v160);
  sub_252AEDE70();
  sub_252B9857C(v161);
  v286[22] = sub_252AC3A24(&qword_26B231F88);
  sub_252AEDBD0();
  v286[21] = v162;
  MEMORY[0x270FA5388](v163);
  sub_252AEDE70();
  sub_252B9857C(v164);
  v286[19] = sub_252AC3A24(&qword_26B231E70);
  sub_252AEDBD0();
  v286[18] = v165;
  MEMORY[0x270FA5388](v166);
  sub_252AEDE70();
  sub_252B9857C(v167);
  v286[16] = sub_252AC3A24(&qword_26B231FA0);
  sub_252AEDBD0();
  v286[15] = v168;
  MEMORY[0x270FA5388](v169);
  sub_252AEDE70();
  uint64_t v171 = sub_252B7E454(v170);
  v286[12] = type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(v171);
  sub_252AEA304();
  MEMORY[0x270FA5388](v172);
  sub_252AEDE70();
  sub_252B9857C(v173);
  v286[11] = sub_252AC3A24(&qword_26B231E88);
  sub_252AEDBD0();
  v286[10] = v174;
  MEMORY[0x270FA5388](v175);
  sub_252AEDE70();
  sub_252B9857C(v176);
  v286[8] = sub_252AC3A24(&qword_26B231EE8);
  sub_252AEDBD0();
  v286[7] = v177;
  MEMORY[0x270FA5388](v178);
  sub_252AEDE70();
  sub_252B9857C(v179);
  v286[5] = sub_252AC3A24(&qword_26B231E90);
  sub_252AEDBD0();
  v286[4] = v180;
  MEMORY[0x270FA5388](v181);
  sub_252AEDE70();
  sub_252B9857C(v182);
  v286[3] = sub_252AC3A24(&qword_26B231E80);
  sub_252AEDBD0();
  v286[2] = v183;
  MEMORY[0x270FA5388](v184);
  type metadata accessor for MessagePayload.Request(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v185);
  uint64_t v186 = sub_252CB87E0();
  type metadata accessor for MessagePayload(v186);
  sub_252AEA304();
  MEMORY[0x270FA5388](v187);
  sub_252B7732C();
  sub_252AC3A24(&qword_26B231E68);
  sub_252AEDBD0();
  uint64_t v295 = v188;
  MEMORY[0x270FA5388](v189);
  sub_252AF45D8();
  sub_252CB8E64(v5);
  sub_252C099DC();
  uint64_t v294 = v2;
  sub_252D1A738();
  sub_252BA661C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      LOBYTE(v297) = 1;
      sub_252C0ABF8();
      sub_252CB8124();
      sub_252C0AC44();
      sub_252CB8964();
      goto LABEL_30;
    case 2u:
      LOBYTE(v297) = 2;
      sub_252C0AB60();
      sub_252CB8124();
      sub_252C0ABAC();
      sub_252CB8964();
      goto LABEL_30;
    case 3u:
      LOBYTE(v297) = 3;
      sub_252C0AAC8();
      sub_252CB8124();
      sub_252C0AB14();
      sub_252CB8964();
      goto LABEL_30;
    case 4u:
      sub_252CB8814();
      LOBYTE(v297) = 4;
      sub_252C0AA7C();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44F78);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v193();
      goto LABEL_51;
    case 5u:
      uint64_t v194 = *(void **)v3;
      char v195 = *(unsigned char *)(v3 + 8);
      uint64_t v196 = *(void *)(v3 + 16);
      LOBYTE(v297) = 5;
      sub_252C0A9E4();
      sub_252D1A4D8();
      uint64_t v297 = (uint64_t)v194;
      LOBYTE(v298) = v195;
      uint64_t v299 = v196;
      sub_252C0AA30();
      sub_252D1A578();
      sub_252CBA718();
      sub_252B5F53C();
      v197();
      sub_252B5F53C();
      v198();
      sub_252AD16D8(v194);
      goto LABEL_49;
    case 6u:
      v200 = *(void **)v3;
      uint64_t v199 = *(void *)(v3 + 8);
      char v201 = *(unsigned char *)(v3 + 16);
      uint64_t v202 = *(void *)(v3 + 24);
      LOBYTE(v297) = 6;
      sub_252C0A94C();
      sub_252CBA3A0();
      uint64_t v297 = (uint64_t)v200;
      uint64_t v298 = v199;
      LOBYTE(v299) = v201;
      uint64_t v300 = v202;
      sub_252C0A998();
      sub_252CBC03C();
      goto LABEL_11;
    case 7u:
      uint64_t v204 = *(void **)v3;
      uint64_t v203 = *(void *)(v3 + 8);
      uint64_t v205 = *(void *)(v3 + 16);
      char v206 = *(unsigned char *)(v3 + 24);
      uint64_t v208 = *(void *)(v3 + 32);
      uint64_t v207 = *(void *)(v3 + 40);
      LOBYTE(v297) = 7;
      sub_252C0A8B4();
      sub_252CBBFC0();
      uint64_t v297 = (uint64_t)v204;
      uint64_t v298 = v203;
      uint64_t v292 = v203;
      uint64_t v296 = v205;
      uint64_t v299 = v205;
      LOBYTE(v300) = v206;
      uint64_t v301 = v208;
      uint64_t v302 = v207;
      sub_252C0A900();
      sub_252D1A578();
      sub_252B5F53C();
      v209();
      sub_252B5F53C();
      v210();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_49;
    case 8u:
      uint64_t v211 = *(void **)v3;
      char v212 = *(unsigned char *)(v3 + 8);
      uint64_t v214 = *(void *)(v3 + 16);
      uint64_t v213 = *(void *)(v3 + 24);
      LOBYTE(v297) = 8;
      sub_252C0A81C();
      sub_252CBA3A0();
      uint64_t v297 = (uint64_t)v211;
      LOBYTE(v298) = v212;
      uint64_t v299 = v214;
      uint64_t v300 = v213;
      sub_252C0A868();
      sub_252CBC03C();
LABEL_11:
      sub_252CBA718();
      sub_252B5F53C();
      v215();
      uint64_t v216 = sub_252CB9954();
      goto LABEL_48;
    case 9u:
      sub_252CBC018();
      LOBYTE(v297) = 9;
      sub_252C0A784();
      sub_252CB8AF4();
      sub_252CBBFEC();
      sub_252C0A7D0();
      sub_252CB98A8();
      goto LABEL_47;
    case 0xAu:
      uint64_t v219 = *(void **)v3;
      uint64_t v218 = *(void *)(v3 + 8);
      LOBYTE(v297) = 10;
      sub_252C0A6EC();
      sub_252CB864C();
      uint64_t v297 = (uint64_t)v219;
      uint64_t v298 = v218;
      sub_252C0A738();
      sub_252CB8DA4();
      goto LABEL_32;
    case 0xBu:
      uint64_t v221 = *(void **)v3;
      uint64_t v220 = *(void *)(v3 + 8);
      LOBYTE(v297) = 11;
      sub_252C0A654();
      sub_252CB864C();
      uint64_t v297 = (uint64_t)v221;
      uint64_t v298 = v220;
      sub_252C0A6A0();
      sub_252CB8DA4();
      goto LABEL_32;
    case 0xCu:
      uint64_t v222 = *(void **)v3;
      LOBYTE(v297) = 12;
      sub_252C0A5BC();
      sub_252D1A4D8();
      uint64_t v297 = (uint64_t)v222;
      sub_252C0A608();
      sub_252CBBD54();
      sub_252D1A578();
      sub_252CBA4FC();
      sub_252B5F53C();
      v223();
      uint64_t v224 = sub_252B233D8();
      goto LABEL_33;
    case 0xDu:
      sub_252CB8814();
      LOBYTE(v297) = 13;
      sub_252C0A570();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44EE8);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v226();
      goto LABEL_51;
    case 0xEu:
      sub_252CB8814();
      LOBYTE(v297) = 14;
      sub_252C0A524();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44ED8);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v227();
      goto LABEL_51;
    case 0xFu:
      LODWORD(v296) = *(_DWORD *)v3;
      uint64_t v228 = *(void *)(v3 + 8);
      uint64_t v229 = *(void *)(v3 + 16);
      uint64_t v291 = *(void *)(v3 + 24);
      uint64_t v292 = v228;
      uint64_t v230 = *(void *)(v3 + 40);
      uint64_t v231 = *(void *)(v3 + 48);
      uint64_t v289 = *(void *)(v3 + 32);
      uint64_t v290 = v230;
      uint64_t v232 = *(void *)(v3 + 64);
      uint64_t v288 = *(void *)(v3 + 56);
      LODWORD(v287) = *(unsigned __int8 *)(v3 + 72);
      uint64_t v233 = *(void *)(v3 + 80);
      uint64_t v234 = *(void *)(v3 + 88);
      uint64_t v235 = *(void *)(v3 + 96);
      LOBYTE(v297) = 15;
      sub_252C0A48C();
      sub_252D1A4D8();
      LODWORD(v297) = v296;
      uint64_t v298 = v292;
      uint64_t v299 = v229;
      uint64_t v292 = v229;
      uint64_t v300 = v291;
      uint64_t v301 = v289;
      uint64_t v302 = v290;
      uint64_t v303 = v231;
      uint64_t v296 = v231;
      uint64_t v304 = v288;
      uint64_t v305 = v232;
      char v306 = v287;
      uint64_t v307 = v233;
      uint64_t v308 = v234;
      uint64_t v309 = v235;
      sub_252C0A4D8();
      sub_252D1A578();
      sub_252B5F53C();
      v236();
      sub_252B7E4D8();
      sub_252B5F53C();
      v237();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_49;
    case 0x10u:
      sub_252CB8814();
      LOBYTE(v297) = 16;
      sub_252C0A440();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44EB8);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v238();
      goto LABEL_51;
    case 0x11u:
      sub_252CB8814();
      LOBYTE(v297) = 17;
      sub_252C0A3F4();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44EA8);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v239();
      goto LABEL_51;
    case 0x12u:
      uint64_t v241 = *(void *)v3;
      unint64_t v240 = *(void *)(v3 + 8);
      uint64_t v242 = *(void *)(v3 + 16);
      unint64_t v243 = *(void *)(v3 + 24);
      uint64_t v244 = *(void *)(v3 + 32);
      uint64_t v245 = *(void *)(v3 + 40);
      LOBYTE(v297) = 18;
      sub_252C0A35C();
      sub_252CBBFC0();
      uint64_t v291 = v241;
      uint64_t v292 = v242;
      uint64_t v297 = v241;
      uint64_t v298 = v240;
      uint64_t v299 = v242;
      uint64_t v300 = v243;
      uint64_t v301 = v244;
      uint64_t v302 = v245;
      uint64_t v296 = v245;
      sub_252C0A3A8();
      sub_252D1A578();
      sub_252B7E4D8();
      sub_252B5F53C();
      v246();
      sub_252B5F53C();
      v247();
      sub_252AC5C14(v291, v240);
      sub_252AC5C14(v292, v243);
      goto LABEL_49;
    case 0x13u:
      uint64_t v249 = *(void *)v3;
      uint64_t v248 = *(void *)(v3 + 8);
      LOBYTE(v297) = 19;
      sub_252C0A2C4();
      sub_252CB864C();
      uint64_t v297 = v249;
      uint64_t v298 = v248;
      sub_252C0A310();
      sub_252CB8DA4();
      goto LABEL_32;
    case 0x14u:
      sub_252CB8814();
      LOBYTE(v297) = 20;
      sub_252C0A278();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44E78);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v250();
      goto LABEL_51;
    case 0x15u:
      sub_252CB8814();
      LOBYTE(v297) = 21;
      sub_252C0A22C();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44318);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v251();
      goto LABEL_51;
    case 0x16u:
      sub_252CB8814();
      LOBYTE(v297) = 22;
      sub_252C0A1E0();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44E60);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v252();
      goto LABEL_51;
    case 0x17u:
      sub_252CB8814();
      LOBYTE(v297) = 23;
      sub_252C0A194();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44E50);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v253();
      goto LABEL_51;
    case 0x18u:
      uint64_t v255 = *(void *)v3;
      uint64_t v254 = *(void *)(v3 + 8);
      LOBYTE(v297) = 24;
      sub_252C0A0FC();
      sub_252CB864C();
      uint64_t v297 = v255;
      uint64_t v298 = v254;
      sub_252C0A148();
      sub_252CB8DA4();
      goto LABEL_32;
    case 0x19u:
      uint64_t v257 = *(void *)v3;
      uint64_t v256 = *(void *)(v3 + 8);
      LOBYTE(v297) = 25;
      sub_252C0A064();
      sub_252CB864C();
      uint64_t v297 = v257;
      uint64_t v298 = v256;
      sub_252C0A0B0();
      sub_252CB8DA4();
      goto LABEL_32;
    case 0x1Au:
      LOBYTE(v297) = 26;
      sub_252C09FCC();
      sub_252CB8124();
      sub_252C0A018();
      sub_252CB8964();
LABEL_30:
      sub_252B5F53C();
      v258();
      goto LABEL_52;
    case 0x1Bu:
      uint64_t v260 = *(void *)v3;
      uint64_t v259 = *(void *)(v3 + 8);
      LOBYTE(v297) = 27;
      sub_252C09F34();
      sub_252CB864C();
      uint64_t v297 = v260;
      uint64_t v298 = v259;
      sub_252C09F80();
      sub_252CB8DA4();
LABEL_32:
      sub_252CBA4FC();
      sub_252B5F53C();
      v261();
      uint64_t v224 = sub_252CB9240();
LABEL_33:
      v225(v224);
      goto LABEL_49;
    case 0x1Cu:
      sub_252CB8814();
      LOBYTE(v297) = 28;
      sub_252C09EE8();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44E00);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v262();
      goto LABEL_51;
    case 0x1Du:
      sub_252CB8814();
      LOBYTE(v297) = 29;
      sub_252C09E9C();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44DF0);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v263();
      goto LABEL_51;
    case 0x1Eu:
      sub_252CB8814();
      LOBYTE(v297) = 30;
      sub_252C09E50();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44DE0);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v264();
      goto LABEL_51;
    case 0x1Fu:
      sub_252CB8814();
      LOBYTE(v297) = 31;
      sub_252C09E04();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44DD0);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v265();
      goto LABEL_51;
    case 0x20u:
      sub_252CBC018();
      LOBYTE(v297) = 32;
      sub_252C09DB8();
      sub_252CB8AF4();
      sub_252CBBFEC();
      sub_252C08DD8();
      sub_252CB98A8();
      goto LABEL_47;
    case 0x21u:
      sub_252CBC018();
      LOBYTE(v297) = 33;
      sub_252C09D6C();
      sub_252CB8AF4();
      sub_252CBBFEC();
      sub_252C0662C();
      sub_252CB98A8();
      goto LABEL_47;
    case 0x22u:
      sub_252CB8814();
      LOBYTE(v297) = 34;
      sub_252C09D20();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44DB0);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v266();
      goto LABEL_51;
    case 0x23u:
      sub_252CB8814();
      LOBYTE(v297) = 35;
      sub_252C09CD4();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44DA0);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v267();
      goto LABEL_51;
    case 0x24u:
      sub_252CB8814();
      LOBYTE(v297) = 36;
      sub_252C09C88();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44D90);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v268();
      goto LABEL_51;
    case 0x25u:
      sub_252CB8814();
      LOBYTE(v297) = 37;
      sub_252C09C3C();
      sub_252CB8124();
      sub_252BA62F0((uint64_t)&unk_269C44D80);
      sub_252B98D40();
      sub_252CB8C54();
      sub_252CB8558();
      sub_252B5F53C();
      v269();
      goto LABEL_51;
    case 0x26u:
      uint64_t v270 = *(void *)v3;
      uint64_t v271 = *(void *)(v3 + 8);
      uint64_t v289 = *(void *)(v3 + 16);
      uint64_t v272 = *(void *)(v3 + 32);
      uint64_t v288 = *(void *)(v3 + 24);
      uint64_t v273 = *(void *)(v3 + 40);
      uint64_t v274 = *(void *)(v3 + 48);
      uint64_t v275 = *(void *)(v3 + 56);
      LOBYTE(v297) = 38;
      sub_252C09BA4();
      sub_252D1A4D8();
      uint64_t v296 = v270;
      uint64_t v297 = v270;
      uint64_t v292 = v271;
      uint64_t v298 = v271;
      uint64_t v276 = v289;
      uint64_t v277 = v272;
      uint64_t v278 = v288;
      uint64_t v299 = v289;
      uint64_t v300 = v288;
      uint64_t v290 = v277;
      uint64_t v291 = v273;
      uint64_t v301 = v277;
      uint64_t v302 = v273;
      uint64_t v303 = v274;
      uint64_t v304 = v275;
      sub_252C09BF0();
      sub_252CB8964();
      sub_252B5F53C();
      v279();
      sub_252CB85C4();
      sub_252B5F53C();
      v280();
      sub_252AD1724(v296, v292, v276, v278, v290, v291, v274);
      goto LABEL_54;
    case 0x27u:
      uint64_t v281 = *(void *)v3;
      uint64_t v282 = *(void *)(v3 + 8);
      LOBYTE(v297) = 39;
      sub_252C09B0C();
      sub_252D1A4D8();
      uint64_t v297 = v281;
      uint64_t v298 = v282;
      sub_252C09B58();
      sub_252CBC504();
      sub_252D1A578();
      sub_252B5F53C();
      v283();
      uint64_t v216 = sub_252CB9240();
      goto LABEL_48;
    case 0x28u:
      sub_252CBC018();
      LOBYTE(v297) = 40;
      sub_252C09A74();
      sub_252CB8AF4();
      sub_252CBBFEC();
      sub_252C09AC0();
      sub_252CB98A8();
LABEL_47:
      sub_252B5F53C();
      v284();
      uint64_t v216 = sub_252CB9DD4();
LABEL_48:
      v217(v216);
      swift_bridgeObjectRelease();
LABEL_49:
      swift_bridgeObjectRelease();
      goto LABEL_54;
    case 0x29u:
      sub_252C06474();
      LOBYTE(v297) = 41;
      sub_252C09A28();
      sub_252D1A4D8();
      sub_252BA62F0((uint64_t)&unk_269C44D40);
      sub_252B98D40();
      sub_252D1A578();
      sub_252B5F53C();
      v285();
LABEL_51:
      sub_252BA6670();
LABEL_52:
      uint64_t v191 = sub_252B7E4CC();
      goto LABEL_53;
    default:
      sub_252CBB3B0();
      sub_252C06474();
      LOBYTE(v297) = 0;
      sub_252C0AC90();
      sub_252D1A4D8();
      sub_252BA62F0((uint64_t)&unk_269C44FA8);
      sub_252D1A578();
      sub_252B5F53C();
      v190();
      sub_252BA6670();
      uint64_t v191 = sub_252CB9234();
LABEL_53:
      v192(v191);
LABEL_54:
      sub_252CB9FC4();
      sub_252AF4368();
      return;
  }
}

void MessagePayload.init(from:)()
{
  sub_252AF4380();
  uint64_t v438 = v1;
  uint64_t v8 = v7;
  uint64_t v429 = v9;
  uint64_t v388 = sub_252AC3A24(&qword_26B231608);
  sub_252AEDBD0();
  uint64_t v431 = v10;
  MEMORY[0x270FA5388](v11);
  sub_252B9857C((uint64_t)&v322 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v387 = sub_252AC3A24(&qword_26B2316C0);
  sub_252AEDBD0();
  uint64_t v430 = v13;
  MEMORY[0x270FA5388](v14);
  sub_252B9857C((uint64_t)&v322 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v386 = sub_252AC3A24(&qword_26B231648);
  sub_252AEDBD0();
  uint64_t v428 = v16;
  MEMORY[0x270FA5388](v17);
  sub_252B9857C((uint64_t)&v322 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v385 = sub_252AC3A24(&qword_26B231600);
  sub_252AEDBD0();
  uint64_t v427 = v19;
  MEMORY[0x270FA5388](v20);
  sub_252B9857C((uint64_t)&v322 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v384 = sub_252AC3A24(&qword_26B231678);
  sub_252AEDBD0();
  uint64_t v426 = v22;
  MEMORY[0x270FA5388](v23);
  sub_252B9857C((uint64_t)&v322 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v383 = sub_252AC3A24(&qword_26B231668);
  sub_252AEDBD0();
  uint64_t v425 = v25;
  MEMORY[0x270FA5388](v26);
  sub_252B9857C((uint64_t)&v322 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v382 = sub_252AC3A24(&qword_26B231660);
  sub_252AEDBD0();
  uint64_t v424 = v28;
  MEMORY[0x270FA5388](v29);
  sub_252B9857C((uint64_t)&v322 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v381 = sub_252AC3A24(&qword_26B2316A8);
  sub_252AEDBD0();
  uint64_t v423 = v31;
  MEMORY[0x270FA5388](v32);
  sub_252B9857C((uint64_t)&v322 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v380 = sub_252AC3A24(&qword_26B231700);
  sub_252AEDBD0();
  uint64_t v422 = v34;
  MEMORY[0x270FA5388](v35);
  sub_252B9857C((uint64_t)&v322 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v379 = sub_252AC3A24(&qword_26B2316F8);
  sub_252AEDBD0();
  uint64_t v421 = v37;
  MEMORY[0x270FA5388](v38);
  sub_252B9857C((uint64_t)&v322 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v378 = sub_252AC3A24(&qword_26B231690);
  sub_252AEDBD0();
  uint64_t v420 = v40;
  MEMORY[0x270FA5388](v41);
  sub_252B9857C((uint64_t)&v322 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v377 = sub_252AC3A24(&qword_26B231698);
  sub_252AEDBD0();
  uint64_t v419 = v43;
  MEMORY[0x270FA5388](v44);
  sub_252AEDE70();
  sub_252B9857C(v45);
  uint64_t v376 = sub_252AC3A24(&qword_26B2316E8);
  sub_252AEDBD0();
  uint64_t v418 = v46;
  MEMORY[0x270FA5388](v47);
  sub_252B9857C((uint64_t)&v322 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v375 = sub_252AC3A24(&qword_26B2316D0);
  sub_252AEDBD0();
  uint64_t v417 = v49;
  MEMORY[0x270FA5388](v50);
  sub_252B9857C((uint64_t)&v322 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v374 = sub_252AC3A24(&qword_26B231670);
  sub_252AEDBD0();
  uint64_t v416 = v52;
  MEMORY[0x270FA5388](v53);
  sub_252B9857C((uint64_t)&v322 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v373 = sub_252AC3A24(&qword_26B231650);
  sub_252AEDBD0();
  uint64_t v415 = v55;
  MEMORY[0x270FA5388](v56);
  sub_252B9857C((uint64_t)&v322 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v372 = sub_252AC3A24(&qword_26B2316E0);
  sub_252AEDBD0();
  uint64_t v414 = v58;
  MEMORY[0x270FA5388](v59);
  sub_252B9857C((uint64_t)&v322 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v371 = sub_252AC3A24(&qword_26B2316B0);
  sub_252AEDBD0();
  uint64_t v413 = v61;
  MEMORY[0x270FA5388](v62);
  sub_252B9857C((uint64_t)&v322 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v370 = sub_252AC3A24(&qword_26B231628);
  sub_252AEDBD0();
  uint64_t v412 = v64;
  MEMORY[0x270FA5388](v65);
  sub_252B9857C((uint64_t)&v322 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v369 = sub_252AC3A24(&qword_26B231610);
  sub_252AEDBD0();
  uint64_t v411 = v67;
  MEMORY[0x270FA5388](v68);
  sub_252B9857C((uint64_t)&v322 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v368 = sub_252AC3A24(&qword_26B2316A0);
  sub_252AEDBD0();
  uint64_t v410 = v70;
  MEMORY[0x270FA5388](v71);
  sub_252B9857C((uint64_t)&v322 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v367 = sub_252AC3A24(&qword_26B2316B8);
  sub_252AEDBD0();
  uint64_t v409 = v73;
  MEMORY[0x270FA5388](v74);
  sub_252AEDE70();
  sub_252B9857C(v75);
  uint64_t v366 = sub_252AC3A24(&qword_26B231630);
  sub_252AEDBD0();
  uint64_t v408 = v76;
  MEMORY[0x270FA5388](v77);
  sub_252B9857C((uint64_t)&v322 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v365 = sub_252AC3A24(&qword_26B2315F8);
  sub_252AEDBD0();
  uint64_t v407 = v79;
  MEMORY[0x270FA5388](v80);
  sub_252AEDE70();
  sub_252B9857C(v81);
  uint64_t v364 = sub_252AC3A24(&qword_26B231658);
  sub_252AEDBD0();
  uint64_t v406 = v82;
  MEMORY[0x270FA5388](v83);
  sub_252B9857C((uint64_t)&v322 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v363 = sub_252AC3A24(&qword_26B2315F0);
  sub_252AEDBD0();
  uint64_t v405 = v85;
  MEMORY[0x270FA5388](v86);
  sub_252B9857C((uint64_t)&v322 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v362 = sub_252AC3A24(&qword_26B231640);
  sub_252AEDBD0();
  uint64_t v404 = v88;
  MEMORY[0x270FA5388](v89);
  sub_252AEDE70();
  sub_252B9857C(v90);
  uint64_t v361 = sub_252AC3A24(&qword_26B231680);
  sub_252AEDBD0();
  uint64_t v403 = v91;
  MEMORY[0x270FA5388](v92);
  sub_252AEDE70();
  sub_252B9857C(v93);
  uint64_t v360 = sub_252AC3A24(&qword_26B2316C8);
  sub_252AEDBD0();
  uint64_t v402 = v94;
  MEMORY[0x270FA5388](v95);
  sub_252B9857C((uint64_t)&v322 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v359 = sub_252AC3A24(&qword_26B231688);
  sub_252AEDBD0();
  uint64_t v401 = v97;
  MEMORY[0x270FA5388](v98);
  sub_252B9857C((uint64_t)&v322 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v358 = sub_252AC3A24(&qword_26B231618);
  sub_252AEDBD0();
  uint64_t v400 = v100;
  MEMORY[0x270FA5388](v101);
  sub_252AEDE70();
  sub_252B9857C(v102);
  uint64_t v357 = sub_252AC3A24(&qword_26B231620);
  sub_252AEDBD0();
  uint64_t v399 = v103;
  MEMORY[0x270FA5388](v104);
  sub_252AEDE70();
  sub_252B9857C(v105);
  uint64_t v356 = sub_252AC3A24(&qword_26B2315B0);
  sub_252AEDBD0();
  uint64_t v398 = v106;
  MEMORY[0x270FA5388](v107);
  sub_252B9857C((uint64_t)&v322 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v355 = sub_252AC3A24(&qword_26B2315E8);
  sub_252AEDBD0();
  uint64_t v397 = v109;
  MEMORY[0x270FA5388](v110);
  sub_252AEDE70();
  sub_252B9857C(v111);
  uint64_t v354 = sub_252AC3A24(&qword_26B2315C8);
  sub_252AEDBD0();
  uint64_t v396 = v112;
  MEMORY[0x270FA5388](v113);
  sub_252AEDE70();
  sub_252B9857C(v114);
  uint64_t v353 = sub_252AC3A24(&qword_26B2316D8);
  sub_252AEDBD0();
  uint64_t v395 = v115;
  MEMORY[0x270FA5388](v116);
  sub_252B9857C((uint64_t)&v322 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v352 = sub_252AC3A24(&qword_26B2315C0);
  sub_252AEDBD0();
  uint64_t v394 = v118;
  MEMORY[0x270FA5388](v119);
  sub_252B9857C((uint64_t)&v322 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v351 = sub_252AC3A24(&qword_26B2316F0);
  sub_252AEDBD0();
  uint64_t v393 = v121;
  MEMORY[0x270FA5388](v122);
  sub_252AEDE70();
  sub_252B9857C(v123);
  uint64_t v350 = sub_252AC3A24(&qword_26B2315D8);
  sub_252AEDBD0();
  uint64_t v392 = v124;
  MEMORY[0x270FA5388](v125);
  sub_252AEDE70();
  sub_252B9857C(v126);
  uint64_t v349 = sub_252AC3A24(&qword_26B231638);
  sub_252AEDBD0();
  uint64_t v391 = v127;
  MEMORY[0x270FA5388](v128);
  sub_252AEDE70();
  sub_252B9857C(v129);
  uint64_t v435 = sub_252AC3A24(&qword_26B2315E0);
  sub_252AEDBD0();
  uint64_t v390 = v130;
  MEMORY[0x270FA5388](v131);
  sub_252B9857C((uint64_t)&v322 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v348 = sub_252AC3A24(&qword_26B2315D0);
  sub_252AEDBD0();
  uint64_t v389 = v133;
  MEMORY[0x270FA5388](v134);
  sub_252B98874(v135, v322);
  uint64_t v436 = sub_252AC3A24(&qword_26B2315B8);
  sub_252AEDBD0();
  uint64_t v433 = v136;
  MEMORY[0x270FA5388](v137);
  sub_252AF4404(v138, v322);
  uint64_t v432 = type metadata accessor for MessagePayload(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v139);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v140);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v141);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v142);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v143);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v144);
  sub_252AEDDB4();
  uint64_t v434 = v145;
  sub_252B22C04();
  MEMORY[0x270FA5388](v146);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v147);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v148);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v149);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v150);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v151);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v152);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v153);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v154);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v155);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v156);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v157);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v158);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v159);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v160);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v161);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v162);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v163);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v164);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v165);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v166);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v167);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v168);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v169);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v170);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v171);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v172);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v173);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v174);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v175);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v176);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v177);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v178);
  sub_252CB9300();
  MEMORY[0x270FA5388](v179);
  sub_252CB8750();
  MEMORY[0x270FA5388](v180);
  sub_252CB8500();
  MEMORY[0x270FA5388](v181);
  sub_252CB8954();
  MEMORY[0x270FA5388](v182);
  sub_252CBB608();
  v437 = v8;
  sub_252B5FEB4(v8);
  sub_252C099DC();
  uint64_t v183 = v438;
  sub_252D1A718();
  if (!v183)
  {
    uint64_t v324 = v3;
    uint64_t v325 = v4;
    uint64_t v327 = v2;
    uint64_t v326 = v0;
    uint64_t v328 = v6;
    uint64_t v184 = (void *)v435;
    uint64_t v438 = v5;
    sub_252D1A4C8();
    sub_252CBAE60();
    if (!v185) {
      goto LABEL_6;
    }
    uint64_t v323 = 0;
    sub_252CBB2BC();
    uint64_t v187 = *(unsigned __int8 *)(v186 + 32);
    uint64_t v188 = sub_252CB9544();
    sub_252B5F440(v188);
    uint64_t v190 = v189;
    unint64_t v192 = v191;
    swift_bridgeObjectRelease();
    if (v190 == v192 >> 1)
    {
      uint64_t v193 = v323;
      switch(v187)
      {
        case 1:
          LOBYTE(v439[0]) = 1;
          sub_252C0ABF8();
          sub_252CB8150();
          sub_252C0B2CC();
          sub_252CB9C58();
          sub_252CB891C();
          sub_252B5F53C();
          v311();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v312();
          sub_252CB8910();
          goto LABEL_52;
        case 2:
          LOBYTE(v439[0]) = 2;
          sub_252C0AB60();
          sub_252CB80F4();
          sub_252C0B280();
          sub_252CB81B4();
          sub_252CB891C();
          sub_252B5F53C();
          v200();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v201();
          sub_252CB8910();
          goto LABEL_52;
        case 3:
          LOBYTE(v439[0]) = 3;
          sub_252C0AAC8();
          sub_252CB80F4();
          sub_252C0B234();
          sub_252CB81B4();
          sub_252CB891C();
          sub_252B5F53C();
          v202();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v203();
          sub_252CB8910();
          goto LABEL_52;
        case 4:
          LOBYTE(v439[0]) = 4;
          sub_252C0AA7C();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.StepExecutedWithReturnedValue(0);
          sub_252BA62F0((uint64_t)&unk_269C450C0);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v204();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v205();
          sub_252CB8C9C();
          goto LABEL_52;
        case 5:
          LOBYTE(v439[0]) = 5;
          sub_252C0A9E4();
          sub_252CB80F4();
          sub_252C0B1E8();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v206();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v207();
          char v208 = BYTE8(v439[0]);
          uint64_t v209 = *(void *)&v439[1];
          uint64_t v210 = v329;
          void *v329 = *(void *)&v439[0];
          *((unsigned char *)v210 + 8) = v208;
          v210[2] = v209;
          sub_252CB8910();
          goto LABEL_52;
        case 6:
          LOBYTE(v439[0]) = 6;
          sub_252C0A94C();
          sub_252CB80F4();
          sub_252C0B19C();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v211();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v212();
          uint64_t v213 = *((void *)&v439[0] + 1);
          char v214 = v439[1];
          uint64_t v215 = *((void *)&v439[1] + 1);
          uint64_t v216 = v330;
          void *v330 = *(void *)&v439[0];
          v216[1] = v213;
          *((unsigned char *)v216 + 16) = v214;
          v216[3] = v215;
          sub_252CB8910();
          goto LABEL_52;
        case 7:
          LOBYTE(v439[0]) = 7;
          sub_252C0A8B4();
          sub_252CB80F4();
          sub_252C0B150();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v217();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v218();
          uint64_t v219 = *(void *)&v439[1];
          char v220 = BYTE8(v439[1]);
          uint64_t v221 = v331;
          _OWORD *v331 = v439[0];
          *((void *)v221 + 2) = v219;
          *((unsigned char *)v221 + 24) = v220;
          v221[2] = *(_OWORD *)v440;
          sub_252CB8910();
          goto LABEL_52;
        case 8:
          LOBYTE(v439[0]) = 8;
          sub_252C0A81C();
          sub_252CB80F4();
          sub_252C0B104();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v222();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v223();
          char v224 = BYTE8(v439[0]);
          uint64_t v225 = v332;
          void *v332 = *(void *)&v439[0];
          *((unsigned char *)v225 + 8) = v224;
          *((_OWORD *)v225 + 1) = v439[1];
          sub_252CB8910();
          goto LABEL_52;
        case 9:
          LOBYTE(v439[0]) = 9;
          sub_252C0A784();
          sub_252CB80F4();
          sub_252C0B0B8();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v226();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v227();
          uint64_t v228 = v333;
          void *v333 = *(void *)&v439[0];
          *(_OWORD *)(v228 + 1) = *(_OWORD *)((char *)v439 + 8);
          sub_252CB8910();
          goto LABEL_52;
        case 10:
          LOBYTE(v439[0]) = 10;
          sub_252C0A6EC();
          sub_252CB80F4();
          sub_252C0B06C();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v229();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v230();
          uint64_t v231 = *((void *)&v439[0] + 1);
          uint64_t v232 = v334;
          void *v334 = *(void *)&v439[0];
          v232[1] = v231;
          sub_252CB8910();
          goto LABEL_52;
        case 11:
          LOBYTE(v439[0]) = 11;
          sub_252C0A654();
          sub_252CB80F4();
          sub_252C0B020();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v233();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v234();
          uint64_t v235 = *((void *)&v439[0] + 1);
          uint64_t v236 = v335;
          void *v335 = *(void *)&v439[0];
          v236[1] = v235;
          sub_252CB8910();
          goto LABEL_52;
        case 12:
          LOBYTE(v439[0]) = 12;
          sub_252C0A5BC();
          sub_252CB80F4();
          sub_252C0AFD4();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v237();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v238();
          void *v336 = *(void *)&v439[0];
          sub_252CB8910();
          goto LABEL_52;
        case 13:
          LOBYTE(v439[0]) = 13;
          sub_252C0A570();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ClientEffectInvocation(0);
          sub_252BA62F0((uint64_t)&unk_269C45078);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v239();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v240();
          sub_252CB8C9C();
          goto LABEL_52;
        case 14:
          LOBYTE(v439[0]) = 14;
          sub_252C0A524();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ClientEffectResolved(0);
          sub_252BA62F0((uint64_t)&unk_269C45070);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v241();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v242();
          sub_252CB8C9C();
          goto LABEL_52;
        case 15:
          LOBYTE(v439[0]) = 15;
          sub_252C0A48C();
          sub_252CB80F4();
          sub_252C0AF88();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v243();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v244();
          uint64_t v245 = *((void *)&v439[1] + 1);
          uint64_t v246 = *(void *)v440;
          char v247 = v441;
          uint64_t v248 = v442;
          uint64_t v249 = v337;
          _DWORD *v337 = v439[0];
          *(_OWORD *)(v249 + 2) = *(_OWORD *)((char *)v439 + 8);
          *((void *)v249 + 3) = v245;
          *((void *)v249 + 4) = v246;
          *(_OWORD *)(v249 + 10) = *(_OWORD *)&v440[8];
          *(_OWORD *)(v249 + 14) = *(_OWORD *)&v440[24];
          *((unsigned char *)v249 + 72) = v247;
          *((void *)v249 + 10) = v248;
          *(_OWORD *)(v249 + 22) = v443;
          sub_252CB8910();
          goto LABEL_52;
        case 16:
          LOBYTE(v439[0]) = 16;
          sub_252C0A440();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ClientAction(0);
          sub_252BA62F0((uint64_t)&unk_269C45060);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v250();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v251();
          sub_252CB8C9C();
          goto LABEL_52;
        case 17:
          LOBYTE(v439[0]) = 17;
          sub_252C0A3F4();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ClientActionResult(0);
          sub_252BA62F0((uint64_t)&unk_269C45058);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v252();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v253();
          sub_252CB8C9C();
          goto LABEL_52;
        case 18:
          LOBYTE(v439[0]) = 18;
          sub_252C0A35C();
          sub_252CB80F4();
          sub_252C0AF3C();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v254();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v255();
          uint64_t v256 = *(void *)v440;
          uint64_t v257 = *(void *)&v440[8];
          long long v258 = v439[1];
          uint64_t v259 = v338;
          _OWORD *v338 = v439[0];
          v259[1] = v258;
          *((void *)v259 + 4) = v256;
          *((void *)v259 + 5) = v257;
          sub_252CB8910();
          goto LABEL_52;
        case 19:
          LOBYTE(v439[0]) = 19;
          sub_252C0A2C4();
          sub_252CB80F4();
          sub_252C0AEF0();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v260();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v261();
          uint64_t v262 = *((void *)&v439[0] + 1);
          uint64_t v263 = v339;
          void *v339 = *(void *)&v439[0];
          v263[1] = v262;
          sub_252CB8910();
          goto LABEL_52;
        case 20:
          LOBYTE(v439[0]) = 20;
          sub_252C0A278();
          sub_252CB80F4();
          type metadata accessor for SystemPrompt(0);
          sub_252BA62F0((uint64_t)&unk_269C45040);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v264();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v265();
          sub_252CB8C9C();
          goto LABEL_52;
        case 21:
          LOBYTE(v439[0]) = 21;
          sub_252C0A22C();
          sub_252CB80F4();
          type metadata accessor for SystemPromptResolution(0);
          sub_252BA62F0((uint64_t)&unk_269C44378);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v266();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v267();
          sub_252CB8C9C();
          goto LABEL_52;
        case 22:
          LOBYTE(v439[0]) = 22;
          sub_252C0A1E0();
          sub_252CB80F4();
          type metadata accessor for ActionResponse(0);
          sub_252BA62F0((uint64_t)&unk_269C45038);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v268();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v269();
          sub_252CB8C9C();
          goto LABEL_52;
        case 23:
          LOBYTE(v439[0]) = 23;
          sub_252C0A194();
          sub_252CB80F4();
          type metadata accessor for SystemResponse(0);
          sub_252BA62F0((uint64_t)&unk_269C45030);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v270();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v271();
          sub_252CB8C9C();
          goto LABEL_52;
        case 24:
          LOBYTE(v439[0]) = 24;
          sub_252C0A0FC();
          sub_252CB80F4();
          sub_252C0AEA4();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v272();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v273();
          uint64_t v274 = *((void *)&v439[0] + 1);
          uint64_t v275 = v340;
          void *v340 = *(void *)&v439[0];
          v275[1] = v274;
          sub_252CB8910();
          goto LABEL_52;
        case 25:
          LOBYTE(v439[0]) = 25;
          sub_252C0A064();
          sub_252CB80F4();
          sub_252C0AE58();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v276();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v277();
          uint64_t v278 = *((void *)&v439[0] + 1);
          v279 = v341;
          void *v341 = *(void *)&v439[0];
          v279[1] = v278;
          sub_252CB8910();
          goto LABEL_52;
        case 26:
          LOBYTE(v439[0]) = 26;
          sub_252C09FCC();
          sub_252CB80F4();
          sub_252C0AE0C();
          sub_252CB81B4();
          sub_252CB891C();
          sub_252B5F53C();
          v280();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v281();
          sub_252CB8910();
          goto LABEL_52;
        case 27:
          LOBYTE(v439[0]) = 27;
          sub_252C09F34();
          sub_252CB80F4();
          sub_252C0ADC0();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v282();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v283();
          _OWORD *v342 = v439[0];
          sub_252CB8910();
          goto LABEL_52;
        case 28:
          LOBYTE(v439[0]) = 28;
          sub_252C09EE8();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ExternalAgentTextQuery(0);
          sub_252BA62F0((uint64_t)&unk_269C45008);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v284();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v285();
          sub_252CB8C9C();
          goto LABEL_52;
        case 29:
          LOBYTE(v439[0]) = 29;
          sub_252C09E9C();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ExternalAgentSpeechQuery(0);
          sub_252BA62F0((uint64_t)&unk_269C45000);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v286();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v287();
          sub_252CB8C9C();
          goto LABEL_52;
        case 30:
          LOBYTE(v439[0]) = 30;
          sub_252C09E50();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ExternalAgentRequest(0);
          sub_252BA62F0((uint64_t)&unk_269C44FF8);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v288();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v289();
          sub_252CB8C9C();
          goto LABEL_52;
        case 31:
          LOBYTE(v439[0]) = 31;
          sub_252C09E04();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ExternalAgentOutcome(0);
          sub_252BA62F0((uint64_t)&unk_269C44FF0);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v290();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v291();
          sub_252CB8C9C();
          goto LABEL_52;
        case 32:
          LOBYTE(v439[0]) = 32;
          sub_252C09DB8();
          sub_252CB80F4();
          sub_252C08E24();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v292();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v293();
          uint64_t v294 = v343;
          void *v343 = *(void *)&v439[0];
          *(_OWORD *)(v294 + 1) = *(_OWORD *)((char *)v439 + 8);
          sub_252CB8910();
          goto LABEL_52;
        case 33:
          LOBYTE(v439[0]) = 33;
          sub_252C09D6C();
          sub_252CB80F4();
          sub_252C06770();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v295();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v296();
          uint64_t v297 = v344;
          void *v344 = *(void *)&v439[0];
          *(_OWORD *)(v297 + 1) = *(_OWORD *)((char *)v439 + 8);
          sub_252CB8910();
          goto LABEL_52;
        case 34:
          LOBYTE(v439[0]) = 34;
          sub_252C09D20();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ClientUndoRedoRequest(0);
          sub_252BA62F0((uint64_t)&unk_269C44FE8);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v298();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v299();
          sub_252CB8C9C();
          goto LABEL_52;
        case 35:
          LOBYTE(v439[0]) = 35;
          sub_252C09CD4();
          sub_252CB80F4();
          type metadata accessor for MessagePayload.ActionSummaryUpdate(0);
          sub_252BA62F0((uint64_t)&unk_269C44FE0);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v300();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v301();
          sub_252CB8C9C();
          goto LABEL_52;
        case 36:
          LOBYTE(v439[0]) = 36;
          sub_252C09C88();
          sub_252CB80F4();
          type metadata accessor for SessionClientDebuggerEvent(0);
          sub_252BA62F0((uint64_t)&unk_269C44FD8);
          sub_252CB8374();
          sub_252B5F53C();
          v302();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v303();
          sub_252CB8910();
          goto LABEL_52;
        case 37:
          LOBYTE(v439[0]) = 37;
          sub_252C09C3C();
          sub_252CB80F4();
          type metadata accessor for SessionServerDebuggerEvent(0);
          sub_252BA62F0((uint64_t)&unk_269C44FD0);
          sub_252CB863C();
          sub_252CB8238();
          sub_252B5F53C();
          v313();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v314();
          sub_252CB8C9C();
          goto LABEL_52;
        case 38:
          LOBYTE(v439[0]) = 38;
          sub_252C09BA4();
          sub_252CB80F4();
          sub_252C0AD74();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v304();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v305();
          long long v306 = v439[1];
          uint64_t v307 = v345;
          _OWORD *v345 = v439[0];
          v307[1] = v306;
          long long v308 = *(_OWORD *)&v440[16];
          v307[2] = *(_OWORD *)v440;
          v307[3] = v308;
          sub_252CB8910();
          goto LABEL_52;
        case 39:
          LOBYTE(v439[0]) = 39;
          sub_252C09B0C();
          sub_252CB80F4();
          sub_252C0AD28();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F53C();
          v315();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v316();
          _OWORD *v346 = v439[0];
          sub_252CB8910();
          goto LABEL_52;
        case 40:
          LOBYTE(v439[0]) = 40;
          sub_252C09A74();
          sub_252CB80F4();
          sub_252C0ACDC();
          sub_252CB8190();
          sub_252CB891C();
          sub_252B5F658();
          v317();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v318();
          v319 = v347;
          void *v347 = *(void *)&v439[0];
          *(_OWORD *)(v319 + 1) = *(_OWORD *)((char *)v439 + 8);
          sub_252CB8910();
          goto LABEL_52;
        case 41:
          LOBYTE(v439[0]) = 41;
          sub_252C09A28();
          sub_252CBB740();
          sub_252D1A3E8();
          if (v193)
          {
            swift_unknownObjectRelease();
            uint64_t v197 = sub_252CBA724();
            uint64_t v198 = v184;
            goto LABEL_44;
          }
          type metadata accessor for ActionExecutionOutcome(0);
          sub_252BA62F0((uint64_t)&unk_269C44FB0);
          sub_252D1A498();
          sub_252CB8ACC();
          v320();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v321();
          sub_252CB8C9C();
LABEL_52:
          swift_storeEnumTagMultiPayload();
LABEL_53:
          sub_252C06474();
          sub_252C06474();
          break;
        default:
          LOBYTE(v439[0]) = 0;
          sub_252C0AC90();
          sub_252CB8150();
          type metadata accessor for MessagePayload.Request(0);
          sub_252BA62F0((uint64_t)&unk_269C450D8);
          sub_252CB8374();
          sub_252B5F53C();
          v309();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v310();
          swift_storeEnumTagMultiPayload();
          goto LABEL_53;
      }
    }
    else
    {
LABEL_6:
      uint64_t v194 = v432;
      sub_252D1A308();
      sub_252CB86D8();
      sub_252CBC958();
      sub_252AC3A24(&qword_269C42E78);
      *uint64_t v184 = v194;
      sub_252D1A3F8();
      sub_252B77578();
      sub_252B0014C();
      uint64_t v195 = sub_252CB8498();
      v196(v195);
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v197 = sub_252CBA174();
LABEL_44:
      v199(v197, v198);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v437);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BD4534()
{
}

void sub_252BD454C()
{
}

void MessagePayload.init(query:requiredContextProviders:)()
{
  sub_252AFC730();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = (int *)type metadata accessor for MessagePayload.Request(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v12);
  sub_252B7732C();
  uint64_t v13 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v14 = sub_252AEA368(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_252CB83D0();
  uint64_t v80 = type metadata accessor for MessagePayload.RequestContent(v15);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  sub_252CB8678(v17, v73[0]);
  uint64_t v18 = sub_252AC3A24(&qword_269C450E0);
  uint64_t v19 = sub_252AEA368(v18);
  MEMORY[0x270FA5388](v19);
  sub_252B5F688();
  uint64_t v84 = sub_252AC3A24(&qword_269C43838);
  sub_252AEDBD0();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_252AEDC14();
  uint64_t v83 = v23;
  sub_252B22C04();
  MEMORY[0x270FA5388](v24);
  if (!v4) {
    goto LABEL_20;
  }
  uint64_t v85 = (uint64_t *)((char *)v73 - v25);
  uint64_t v77 = v6;
  uint64_t v90 = MEMORY[0x263F8EE78];
  uint64_t v26 = *(void *)(v4 + 16);
  uint64_t v78 = v8;
  uint64_t v79 = v0;
  if (v26)
  {
    uint64_t v88 = v2;
    uint64_t v27 = v11;
    uint64_t v28 = v4 + 32;
    do
    {
      sub_252C0B318(v28, (uint64_t)v89);
      sub_252AC3A68(v89, v89[3]);
      uint64_t v29 = sub_252CB9AF0();
      uint64_t v31 = (void *)v30(v29);
      _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v89);
      sub_252C055EC(v31);
      v28 += 40;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v32 = v90;
    uint64_t v11 = v27;
    uint64_t v8 = v78;
    uint64_t v2 = v88;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x263F8EE78];
  }
  uint64_t v33 = v85;
  if (!*(void *)(v32 + 16))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v77;
LABEL_20:
    uint64_t v59 = v81;
    *uint64_t v81 = v8;
    v59[1] = v6;
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = sub_252D19588();
    uint64_t v61 = sub_252CBB688();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v61, v62, v63, v60);
    uint64_t v64 = v11[5];
    uint64_t v65 = v1 + v11[7];
    uint64_t v66 = sub_252CBAA78();
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v66, v67, v68, v60);
    uint64_t v69 = (uint64_t *)(v1 + v11[9]);
    *uint64_t v69 = 0;
    v69[1] = 0;
    v69[2] = 0;
    sub_252C06474();
    *(void *)(v1 + v64) = 0;
    *(unsigned char *)(v1 + v11[6]) = 0;
    *(_OWORD *)uint64_t v65 = 0u;
    *(_OWORD *)(v65 + 16) = 0u;
    *(unsigned char *)(v65 + 32) = -2;
    uint64_t v70 = sub_252CBA600();
    sub_252C0CB04(v70, v71, v72);
    sub_252C08D48(*v69, v69[1]);
    *uint64_t v69 = 0;
    v69[1] = 0;
    v69[2] = 0;
    sub_252B236A0();
    sub_252C06474();
    type metadata accessor for MessagePayload(0);
    swift_storeEnumTagMultiPayload();
    sub_252AFC718();
    return;
  }
  uint64_t v88 = *(void *)(v32 + 16);
  uint64_t v74 = v11;
  uint64_t v75 = v1;
  uint64_t v76 = v10;
  unint64_t v34 = v32 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  uint64_t v82 = *(void *)(v21 + 72);
  v73[1] = v32;
  swift_bridgeObjectRetain();
  uint64_t v35 = MEMORY[0x263F8EE80];
  while (1)
  {
    unint64_t v86 = v34;
    uint64_t v36 = sub_252CBAA94();
    sub_252CB7E00(v36, v37, &qword_269C43838);
    uint64_t v38 = v83;
    uint64_t v39 = (char *)v83 + *(int *)(v84 + 48);
    uint64_t v41 = *v33;
    uint64_t v40 = v33[1];
    *uint64_t v83 = *v33;
    v38[1] = v40;
    uint64_t v42 = sub_252D19BE8();
    sub_252AEA314();
    uint64_t v44 = v43;
    uint64_t v87 = v39;
    sub_252CB9240();
    sub_252AEDE38();
    v45();
    swift_isUniquelyReferenced_nonNull_native();
    v89[0] = v35;
    unint64_t v46 = sub_252AC7C94(v41, v40);
    if (__OFADD__(*(void *)(v35 + 16), (v47 & 1) == 0)) {
      break;
    }
    unint64_t v48 = v46;
    char v49 = v47;
    sub_252AC3A24(&qword_269C450E8);
    char v50 = sub_252D1A338();
    uint64_t v33 = v85;
    if (v50)
    {
      unint64_t v51 = sub_252AC7C94(v41, v40);
      if ((v49 & 1) != (v52 & 1)) {
        goto LABEL_23;
      }
      unint64_t v48 = v51;
    }
    uint64_t v35 = v89[0];
    if (v49)
    {
      uint64_t v53 = *(void (**)(void))(v44 + 32);
      sub_252CBB5B8();
      v53();
      sub_252CBB5B8();
      v53();
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, 0, 1, v42);
    }
    else
    {
      *(void *)(v89[0] + 8 * (v48 >> 6) + 64) |= 1 << v48;
      uint64_t v54 = (uint64_t *)(*(void *)(v35 + 48) + 16 * v48);
      *uint64_t v54 = v41;
      v54[1] = v40;
      sub_252CBB5B8();
      v55();
      uint64_t v56 = *(void *)(v35 + 16);
      BOOL v57 = __OFADD__(v56, 1);
      uint64_t v58 = v56 + 1;
      if (v57) {
        goto LABEL_22;
      }
      *(void *)(v35 + 16) = v58;
      _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, 1, 1, v42);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_252B5A4CC(v2, &qword_269C450E0);
    sub_252B5A4CC((uint64_t)v33, &qword_269C43838);
    unint64_t v34 = v86 + v82;
    if (!--v88)
    {
      swift_bridgeObjectRelease();
      uint64_t v1 = v75;
      uint64_t v11 = v74;
      uint64_t v8 = v78;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  sub_252D1A628();
  __break(1u);
}

uint64_t SystemPrompt.stepId.getter()
{
  return sub_252C049C8();
}

uint64_t SystemPrompt.stepId.setter()
{
  return sub_252C04A40();
}

uint64_t (*SystemPrompt.stepId.modify())()
{
  return nullsub_1;
}

uint64_t SystemPrompt.toolId.getter()
{
  return sub_252BB5CD8();
}

uint64_t SystemPrompt.toolId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BD4B98(a1, a2);
}

uint64_t sub_252BD4B98(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_252CB9888();
  v6(v5);
  uint64_t result = sub_252B4C9A4();
  *uint64_t v2 = v3;
  v2[1] = a2;
  return result;
}

uint64_t (*SystemPrompt.toolId.modify())()
{
  return nullsub_1;
}

uint64_t SystemPrompt.prompt.getter()
{
  return sub_252C04B58();
}

uint64_t SystemPrompt.prompt.setter()
{
  return sub_252BD77F0();
}

uint64_t (*SystemPrompt.prompt.modify())()
{
  return nullsub_1;
}

unint64_t SystemPrompt.description.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_252BD4E40()
{
  sub_252D1A268();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  sub_252D19DD8();

  return swift_bridgeObjectRelease();
}

void SystemPrompt.init(stepId:toolId:prompt:)()
{
}

uint64_t SystemPrompt.Prompt.description.getter()
{
  type metadata accessor for SystemPrompt.Prompt(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v0);
  sub_252B23260();
  sub_252CB9A98();
  sub_252BA661C();
  sub_252B23988();
  swift_getEnumCaseMultiPayload();
  sub_252BA6670();
  return sub_252AFC650();
}

void static SystemPrompt.Prompt.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v4 = type metadata accessor for ParameterConfirmation(0);
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  v51[1] = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51[0] = type metadata accessor for ParameterNeedsValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  *(void *)&long long v52 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_252AEDD78();
  type metadata accessor for SystemPrompt.Prompt(v9);
  sub_252AEA304();
  MEMORY[0x270FA5388](v10);
  sub_252CB9604();
  MEMORY[0x270FA5388](v11);
  sub_252CB8858();
  MEMORY[0x270FA5388](v12);
  sub_252CB8500();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v51 - v14;
  uint64_t v16 = sub_252AC3A24(&qword_269C450F8);
  uint64_t v17 = sub_252AEA368(v16);
  MEMORY[0x270FA5388](v17);
  sub_252CBA96C();
  sub_252BA661C();
  sub_252CBC3B4();
  sub_252BA661C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252BA661C();
      if (sub_252CBC998() != 1) {
        goto LABEL_16;
      }
      uint64_t v22 = (void *)v52;
      sub_252C06474();
      BOOL v23 = *v3 == *v22 && v3[1] == v22[1];
      if (v23 || (sub_252D1A5D8() & 1) != 0) {
        _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
      }
      sub_252BA6670();
      sub_252BA6670();
      sub_252BA6670();
      goto LABEL_22;
    case 2u:
      sub_252CBC8F0();
      if (sub_252CBC998() == 2)
      {
        sub_252C06474();
        uint64_t v24 = sub_252CBB3A4();
        static ParameterConfirmation.== infix(_:_:)(v24);
        sub_252BA6670();
        sub_252BA6670();
        goto LABEL_21;
      }
LABEL_16:
      sub_252BA6670();
      goto LABEL_18;
    case 3u:
      sub_252BA661C();
      uint64_t v25 = v1[1];
      uint64_t v27 = v1[4];
      uint64_t v26 = v1[5];
      uint64_t v28 = v1[7];
      if (sub_252CBC998() != 3) {
        goto LABEL_17;
      }
      uint64_t v29 = v1[6];
      char v30 = *((unsigned char *)v1 + 24);
      uint64_t v31 = v1[2];
      uint64_t v32 = *v1;
      uint64_t v33 = *v2;
      uint64_t v34 = v2[1];
      uint64_t v35 = v2[2];
      char v36 = *((unsigned char *)v2 + 24);
      uint64_t v37 = v2[4];
      uint64_t v38 = v2[7];
      uint64_t v60 = v32;
      uint64_t v61 = v25;
      uint64_t v62 = v31;
      LOBYTE(v63) = v30;
      uint64_t v64 = v27;
      uint64_t v65 = v26;
      uint64_t v66 = v29;
      uint64_t v67 = v28;
      uint64_t v53 = v33;
      uint64_t v54 = v34;
      uint64_t v55 = v35;
      LOBYTE(v56) = v36;
      uint64_t v57 = v37;
      long long v52 = *(_OWORD *)(v2 + 5);
      long long v58 = v52;
      uint64_t v59 = v38;
      static ParameterDisambiguation.== infix(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    default:
      sub_252CBC92C();
      uint64_t v18 = *((void *)v15 + 1);
      uint64_t v19 = *((void *)v15 + 3);
      uint64_t v20 = *((void *)v15 + 4);
      uint64_t v21 = *((void *)v15 + 6);
      if (sub_252CBC998())
      {
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_18:
        sub_252B5A4CC(v0, &qword_269C450F8);
      }
      else
      {
        __int16 v39 = *((_WORD *)v15 + 28);
        uint64_t v40 = *((void *)v15 + 5);
        uint64_t v41 = *((void *)v15 + 2);
        uint64_t v42 = *(void *)v15;
        uint64_t v43 = *v2;
        uint64_t v44 = v2[1];
        uint64_t v45 = v2[2];
        uint64_t v46 = v2[3];
        uint64_t v48 = v2[4];
        uint64_t v47 = v2[5];
        uint64_t v49 = v2[6];
        __int16 v50 = *((_WORD *)v2 + 28);
        uint64_t v60 = v42;
        uint64_t v61 = v18;
        uint64_t v62 = v41;
        uint64_t v63 = v19;
        uint64_t v64 = v20;
        uint64_t v65 = v40;
        uint64_t v66 = v21;
        LOWORD(v67) = v39;
        uint64_t v53 = v43;
        uint64_t v54 = v44;
        uint64_t v55 = v45;
        uint64_t v56 = v46;
        uint64_t v57 = v48;
        *(void *)&long long v58 = v47;
        *((void *)&v58 + 1) = v49;
        LOWORD(v59) = v50;
        static ActionConfirmation.== infix(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        swift_bridgeObjectRelease();
LABEL_21:
        sub_252BA6670();
      }
LABEL_22:
      sub_252CBBC64();
      sub_252AFC718();
      return;
  }
}

void static ActionConfirmation.== infix(_:_:)()
{
  sub_252AFC698();
  uint64_t v1 = sub_252CBA2B4(v0);
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v7 = v3[5];
  uint64_t v6 = v3[6];
  uint64_t v8 = v2[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[5];
  uint64_t v11 = v2[6];
  BOOL v12 = v1 == *v2 && v3[1] == v2[1];
  if (v12 || (sub_252D1A5D8(), sub_252B5F6F8(), (v13 & 1) != 0))
  {
    BOOL v14 = v4 == v8 && v5 == v9;
    if (v14 || (sub_252CBA60C(), sub_252B5F6F8(), (v15 & 1) != 0))
    {
      uint64_t v16 = sub_252CB9AF0();
      if ((sub_252BB4C2C(v16, v17) & 1) != 0 && v6 && v11 && (v7 != v10 || v6 != v11)) {
        sub_252CB9F3C();
      }
    }
  }
  sub_252AFC67C();
}

uint64_t static ParameterNeedsValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252BE3354(a1, a2, type metadata accessor for ParameterNeedsValue);
}

uint64_t static ParameterConfirmation.== infix(_:_:)(uint64_t a1)
{
  sub_252CB8AB0(a1);
  BOOL v5 = v5 && v3 == v4;
  if (!v5)
  {
    sub_252D1A5D8();
    uint64_t result = sub_252B5F6F8();
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  char v8 = *(unsigned char *)(v1 + 24);
  if (*(unsigned char *)(v2 + 24))
  {
    if (!*(unsigned char *)(v1 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(v2 + 16) != *(void *)(v1 + 16)) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  type metadata accessor for ParameterConfirmation(0);
  if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) == 0) {
    return 0;
  }
  sub_252CBA8DC();
  if (!v11)
  {
    if (v9) {
      return 0;
    }
LABEL_22:
    sub_252CBA8DC();
    if (v18)
    {
      if (!v16) {
        return 0;
      }
      sub_252B233A0(v17);
      BOOL v21 = v5 && v19 == v20;
      return v21 || (sub_252D1A5D8() & 1) != 0;
    }
    return !v16;
  }
  if (!v9) {
    return 0;
  }
  sub_252B233A0(v10);
  if (v5 && v12 == v13) {
    goto LABEL_22;
  }
  sub_252D1A5D8();
  uint64_t result = sub_252B5F6F8();
  if (v15) {
    goto LABEL_22;
  }
  return result;
}

void static ParameterDisambiguation.== infix(_:_:)()
{
  sub_252AFC698();
  uint64_t v1 = sub_252CBA2B4(v0);
  uint64_t v4 = *(void *)(v3 + 16);
  char v5 = *(unsigned char *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 40);
  uint64_t v19 = *(void *)(v3 + 48);
  uint64_t v20 = *(void *)(v3 + 56);
  uint64_t v7 = *(void *)(v2 + 16);
  int v8 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + 40);
  BOOL v10 = v1 == *(void *)v2 && *(void *)(v3 + 8) == *(void *)(v2 + 8);
  uint64_t v11 = *(void *)(v2 + 48);
  uint64_t v12 = *(void *)(v2 + 56);
  if (!v10)
  {
    sub_252D1A5D8();
    sub_252B5F6F8();
    if ((v13 & 1) == 0) {
      goto LABEL_26;
    }
  }
  if (v5)
  {
    if (!v8) {
      goto LABEL_26;
    }
  }
  else
  {
    if (v4 == v7) {
      char v14 = v8;
    }
    else {
      char v14 = 1;
    }
    if (v14) {
      goto LABEL_26;
    }
  }
  sub_252B1D7E4();
  if ((v15 & 1) == 0) {
    goto LABEL_26;
  }
  if (v6)
  {
    if (!v9) {
      goto LABEL_26;
    }
    uint64_t v16 = (void *)sub_252CB9AF0();
    if ((sub_252B1D710(v16, v17) & 1) == 0) {
      goto LABEL_26;
    }
  }
  else if (v9)
  {
    goto LABEL_26;
  }
  if (v20 && v12 && (v19 != v11 || v20 != v12)) {
    sub_252CBA46C();
  }
LABEL_26:
  sub_252AFC67C();
}

uint64_t sub_252BD596C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1DD50 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000252D1DD70 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1DD90 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000252D1DDB0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_252BD5B08(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BD5B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252C0298C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BD5BBC(uint64_t a1)
{
  unint64_t v2 = sub_252C0B514();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD5BF8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B514();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_252BD5C34()
{
  return sub_252BD5B08(*v0);
}

uint64_t sub_252BD5C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BD596C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BD5C64(uint64_t a1)
{
  unint64_t v2 = sub_252C0B398();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD5CA0(uint64_t a1)
{
  unint64_t v2 = sub_252C0B398();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD5CDC(uint64_t a1)
{
  unint64_t v2 = sub_252C0B47C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD5D18(uint64_t a1)
{
  unint64_t v2 = sub_252C0B47C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD5D54(uint64_t a1)
{
  unint64_t v2 = sub_252C0B3E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD5D90(uint64_t a1)
{
  unint64_t v2 = sub_252C0B3E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD5DCC(uint64_t a1)
{
  unint64_t v2 = sub_252C0B4C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD5E08(uint64_t a1)
{
  unint64_t v2 = sub_252C0B4C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPrompt.Prompt.encode(to:)()
{
  sub_252AF4380();
  sub_252CBB730();
  sub_252AC3A24(&qword_269C45100);
  sub_252AEDBD0();
  uint64_t v42 = v3;
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  sub_252CB8678(v4, v38[0]);
  sub_252AC3A24(&qword_269C45108);
  sub_252AEDBD0();
  uint64_t v39 = v6;
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  v38[8] = (uint64_t)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[6] = type metadata accessor for ParameterConfirmation(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252B98874(v9, v38[0]);
  sub_252AC3A24(&qword_269C45110);
  sub_252AEDBD0();
  v38[4] = v11;
  v38[5] = v10;
  MEMORY[0x270FA5388](v10);
  v38[3] = (uint64_t)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[2] = type metadata accessor for ParameterNeedsValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v13);
  sub_252AF45F0();
  sub_252AC3A24(&qword_269C45118);
  sub_252AEDBD0();
  v38[1] = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_252B9835C();
  type metadata accessor for SystemPrompt.Prompt(v16);
  sub_252AEA304();
  MEMORY[0x270FA5388](v17);
  sub_252AC423C();
  sub_252AC3A24(&qword_269C45120);
  sub_252AEDBD0();
  uint64_t v44 = v19;
  uint64_t v45 = v18;
  MEMORY[0x270FA5388](v18);
  sub_252AC3A68(v0, v0[3]);
  sub_252C0B398();
  sub_252CBA880();
  sub_252BA661C();
  sub_252CBAD60();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CBA5F4();
      sub_252C06474();
      LOBYTE(v46) = 1;
      sub_252C0B4C8();
      sub_252CB8424();
      sub_252BA62F0((uint64_t)&unk_269C45158);
      sub_252B98D40();
      sub_252D1A578();
      sub_252B5F53C();
      v36();
      goto LABEL_6;
    case 2u:
      sub_252C06474();
      LOBYTE(v46) = 2;
      sub_252C0B47C();
      sub_252CB8424();
      sub_252BA62F0((uint64_t)&unk_269C45148);
      sub_252D1A578();
      sub_252B5F53C();
      v28();
LABEL_6:
      sub_252BA6670();
      sub_252CBBD84();
      sub_252CB94A4();
      v37();
      break;
    case 3u:
      uint64_t v29 = v1[1];
      uint64_t v54 = *v1;
      uint64_t v40 = v1[2];
      LODWORD(v39) = *((unsigned __int8 *)v1 + 24);
      uint64_t v30 = v1[4];
      uint64_t v31 = v1[5];
      uint64_t v33 = v1[6];
      uint64_t v32 = v1[7];
      LOBYTE(v46) = 3;
      sub_252C0B3E4();
      sub_252B5FCCC();
      uint64_t v46 = v54;
      uint64_t v47 = v29;
      uint64_t v48 = v40;
      LOBYTE(v49) = v39;
      uint64_t v40 = v30;
      uint64_t v50 = v30;
      uint64_t v51 = v31;
      uint64_t v52 = v33;
      uint64_t v53 = v32;
      sub_252C0B430();
      sub_252D1A578();
      sub_252B5F53C();
      v34();
      sub_252CBBD84();
      sub_252B5F53C();
      v35();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v20 = *v1;
      uint64_t v21 = v1[1];
      uint64_t v22 = v1[3];
      uint64_t v41 = v1[2];
      uint64_t v42 = v20;
      uint64_t v43 = v22;
      uint64_t v23 = v1[5];
      uint64_t v24 = v1[6];
      uint64_t v39 = v1[4];
      uint64_t v40 = v23;
      __int16 v25 = *((_WORD *)v1 + 28);
      LOBYTE(v46) = 0;
      sub_252C0B514();
      sub_252B5FCCC();
      uint64_t v46 = v42;
      uint64_t v47 = v21;
      uint64_t v48 = v41;
      uint64_t v49 = v22;
      uint64_t v50 = v39;
      uint64_t v51 = v40;
      uint64_t v52 = v24;
      LOWORD(v53) = v25;
      sub_252C0B560();
      sub_252D1A578();
      sub_252CB8510();
      sub_252B5F53C();
      v26();
      sub_252CBBD84();
      sub_252B5F53C();
      v27();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  sub_252B5FD80();
  sub_252AF4368();
}

void SystemPrompt.Prompt.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  sub_252CBAEE0();
  sub_252AC3A24(&qword_269C45170);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v15);
  sub_252B98874(v16, v49);
  sub_252AC3A24(&qword_269C45178);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  sub_252B774E4(v18, v50);
  sub_252AC3A24(&qword_269C45180);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v19);
  sub_252B9883C(v20, v51);
  sub_252AC3A24(&qword_269C45188);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v21);
  sub_252CB8A78(v22, v52);
  sub_252AC3A24(&qword_269C45190);
  sub_252AEDBD0();
  uint64_t v53 = v24;
  uint64_t v54 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = sub_252AF4420();
  uint64_t v55 = type metadata accessor for SystemPrompt.Prompt(v25);
  sub_252AEA304();
  MEMORY[0x270FA5388](v26);
  sub_252CB87A8();
  MEMORY[0x270FA5388](v27);
  sub_252CB8500();
  MEMORY[0x270FA5388](v28);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v29);
  sub_252CB9D8C();
  MEMORY[0x270FA5388](v30);
  sub_252CBA5A8();
  uint64_t v56 = (uint64_t)v10;
  sub_252AC3A68(v10, v10[3]);
  sub_252C0B398();
  sub_252B7765C();
  sub_252D1A718();
  if (a10) {
    goto LABEL_10;
  }
  sub_252D1A4C8();
  sub_252CBAF84();
  if (!v31
    || (uint64_t v32 = *(unsigned __int8 *)(v14 + 32),
        uint64_t v33 = sub_252CB9534(),
        sub_252B5F440(v33),
        uint64_t v35 = v34,
        unint64_t v37 = v36,
        swift_bridgeObjectRelease(),
        v35 != v37 >> 1))
  {
    sub_252D1A308();
    sub_252CB86D8();
    uint64_t v39 = v38;
    sub_252AC3A24(&qword_269C42E78);
    sub_252CB9528();
    *uint64_t v39 = v55;
    sub_252D1A3F8();
    sub_252B77578();
    sub_252B0014C();
    sub_252CB86CC();
    v40();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v13, v54);
LABEL_10:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v56);
    goto LABEL_11;
  }
  switch(v32)
  {
    case 1:
      sub_252C0B4C8();
      sub_252B5F734();
      type metadata accessor for ParameterNeedsValue(0);
      sub_252BA62F0((uint64_t)&unk_269C451A8);
      sub_252D1A498();
      sub_252CBAA88();
      sub_252B5F53C();
      v43();
      swift_unknownObjectRelease();
      sub_252B5F53C();
      v44();
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
    case 2:
      sub_252C0B47C();
      sub_252B5F734();
      type metadata accessor for ParameterConfirmation(0);
      sub_252BA62F0((uint64_t)&unk_269C451A0);
      sub_252CBBEE0();
      sub_252B5F53C();
      v45();
      swift_unknownObjectRelease();
      sub_252B5F53C();
      v46();
      sub_252CBC908();
      goto LABEL_12;
    case 3:
      LOBYTE(v57) = 3;
      sub_252C0B3E4();
      sub_252B5F734();
      sub_252C0B5AC();
      sub_252D1A498();
      sub_252B5F67C();
      v47();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v48();
      *(_OWORD *)uint64_t v12 = v57;
      *(void *)(v12 + 16) = v58;
      *(unsigned char *)(v12 + 24) = v59;
      *(void *)(v12 + 32) = *((void *)&v59 + 1);
      *(_OWORD *)(v12 + 40) = v60;
      *(void *)(v12 + 56) = v61;
      sub_252CBC908();
      swift_storeEnumTagMultiPayload();
      sub_252C06474();
      goto LABEL_14;
    default:
      LOBYTE(v57) = 0;
      sub_252C0B514();
      sub_252B5F734();
      sub_252C0B5F8();
      sub_252D1A498();
      sub_252B5F53C();
      v41();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v42();
      *(_OWORD *)uint64_t v11 = v57;
      *(void *)(v11 + 16) = v58;
      *(_OWORD *)(v11 + 24) = v59;
      *(_OWORD *)(v11 + 40) = v60;
      *(_WORD *)(v11 + 56) = v61;
LABEL_12:
      swift_storeEnumTagMultiPayload();
LABEL_13:
      sub_252C06474();
LABEL_14:
      sub_252C06474();
      _s16IntelligenceFlow17AnySessionMessageVwxx_0(v56);
      break;
  }
LABEL_11:
  sub_252B5FD80();
  sub_252AF4368();
}

uint64_t sub_252BD6D94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644970657473 && a2 == 0xE600000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_252BD6ED0(char a1)
{
  return *(void *)&aStepid_0[8 * a1];
}

void sub_252BD6EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SystemPrompt.Prompt.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252BD6F00()
{
}

uint64_t sub_252BD6F20()
{
  return sub_252BD6ED0(*v0);
}

uint64_t sub_252BD6F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BD6D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BD6F50(uint64_t a1)
{
  unint64_t v2 = sub_252C0B644();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD6F8C(uint64_t a1)
{
  unint64_t v2 = sub_252C0B644();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPrompt.encode(to:)()
{
  sub_252B2330C();
  sub_252B98750();
  sub_252AC3A24(&qword_269C451B8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C0B644();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB81D4();
  if (!v0)
  {
    type metadata accessor for SystemPrompt(0);
    sub_252CB8770();
    uint64_t v2 = sub_252CB92BC();
    type metadata accessor for SystemPrompt.Prompt(v2);
    sub_252BA62F0((uint64_t)&unk_269C451C8);
    sub_252B98230();
  }
  uint64_t v3 = sub_252AF4620();
  v4(v3);
  sub_252CB8A6C();
  sub_252B232F8();
}

void SystemPrompt.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = sub_252CBA9E8(v2);
  type metadata accessor for SystemPrompt.Prompt(v3);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  sub_252AEDD2C();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B230DC(v6, v14);
  sub_252AC3A24(&qword_269C451D0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_252B9835C();
  type metadata accessor for SystemPrompt(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252B5FD8C(v1);
  sub_252C0B644();
  sub_252CB9A64();
  if (v0)
  {
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v1);
  }
  else
  {
    sub_252CBA77C();
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB8CF8();
    sub_252B7E53C();
    v10();
    uint64_t v11 = sub_252CB967C();
    sub_252CB95D8(v11, v12);
    sub_252BA62F0((uint64_t)&unk_269C451D8);
    sub_252CB9000();
    sub_252B5F53C();
    v13();
    sub_252CBB82C();
    sub_252C06474();
    sub_252CBC9C8();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v1);
    sub_252BA6670();
  }
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BD7414()
{
}

void sub_252BD742C()
{
}

uint64_t (*SystemPromptResolution.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t SystemPromptResolution.systemResponseEventId.getter()
{
  return sub_252BA7F84();
}

uint64_t SystemPromptResolution.systemResponseEventId.setter(uint64_t a1)
{
  return sub_252BD7558(a1, (uint64_t)type metadata accessor for SystemPromptResolution, MEMORY[0x263F07508]);
}

uint64_t (*SystemPromptResolution.systemResponseEventId.modify())()
{
  return nullsub_1;
}

uint64_t SystemPromptResolution.actionResponseEventId.getter()
{
  return sub_252BA7F84();
}

uint64_t SystemPromptResolution.actionResponseEventId.setter(uint64_t a1)
{
  return sub_252BD7558(a1, (uint64_t)type metadata accessor for SystemPromptResolution, MEMORY[0x263F07508]);
}

uint64_t sub_252BD7558(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_252CB9888();
  v5(v4);
  uint64_t v6 = sub_252CBB79C();
  a3(v6);
  sub_252AEA304();
  uint64_t v7 = sub_252AFCA44();

  return v8(v7);
}

void (*SystemPromptResolution.actionResponseEventId.modify())(int **a1, char a2)
{
  uint64_t v2 = malloc(0x40uLL);
  sub_252CBBF60(v2);
  uint64_t v3 = sub_252D19588();
  *(void *)(v1 + 8) = v3;
  sub_252AEDBD0();
  uint64_t v5 = v4;
  *(void *)(v1 + 16) = v4;
  size_t v7 = *(void *)(v6 + 64);
  *(void *)(v1 + 24) = malloc(v7);
  uint64_t v8 = malloc(v7);
  *(void *)(v1 + 32) = v8;
  uint64_t v9 = *(int *)(type metadata accessor for SystemPromptResolution(0) + 20);
  *(_DWORD *)(v1 + 56) = v9;
  uint64_t v10 = v0 + v9;
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v1 + 40) = v11;
  *(void *)(v1 + 48) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v3);
  return sub_252BD76A8;
}

void sub_252BD76A8(int **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (void *)*((void *)*a1 + 3);
  uint64_t v3 = (void *)*((void *)*a1 + 4);
  if (a2)
  {
    uint64_t v5 = *((void *)v2 + 1);
    uint64_t v6 = *((void *)v2 + 2);
    uint64_t v7 = *(void *)v2 + v2[14];
    (*((void (**)(void, void, uint64_t))v2 + 5))(*((void *)v2 + 3), *((void *)v2 + 4), v5);
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 40))(v7, v4, v5);
    sub_252B23988();
    sub_252CB8D98();
    v8();
  }
  else
  {
    (*(void (**)(void, void, void))(*((void *)v2 + 2) + 40))(*(void *)v2 + v2[14], *((void *)v2 + 4), *((void *)v2 + 1));
  }
  free(v3);
  free(v4);

  free(v2);
}

uint64_t SystemPromptResolution.userAction.getter()
{
  return sub_252C04B58();
}

uint64_t SystemPromptResolution.userAction.setter()
{
  return sub_252BD77F0();
}

uint64_t sub_252BD77F0()
{
  uint64_t v2 = sub_252CBAC10();
  v3(v2);
  sub_252B4C3A8();
  return v0(v1);
}

uint64_t (*SystemPromptResolution.userAction.modify())()
{
  return nullsub_1;
}

uint64_t SystemPromptResolution.statementId.getter()
{
  return sub_252BE1808();
}

void SystemPromptResolution.statementId.setter()
{
}

uint64_t (*SystemPromptResolution.statementId.modify())()
{
  return nullsub_1;
}

uint64_t SystemPromptResolution.inputModality.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SystemPromptResolution(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 32));
  if (*((unsigned char *)v4 + 16) == 2)
  {
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    uint64_t v7 = *v4 | v5;
    if (v7) {
      LOBYTE(v7) = (v6 ^ 1 | v5) == 0;
    }
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  *a1 = v7;
  return result;
}

uint64_t sub_252BD7944@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SystemPromptResolution.inputModality.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_252BD7980(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return SystemPromptResolution.inputModality.setter(&v2);
}

uint64_t SystemPromptResolution.inputModality.setter(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for SystemPromptResolution(0);
  uint64_t result = sub_252CBBDEC(v3);
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 2;
  return result;
}

uint64_t (*SystemPromptResolution.inputModality.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SystemPromptResolution(0) + 32);
  *(_DWORD *)(a1 + 8) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((unsigned char *)v4 + 16) == 2)
  {
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    uint64_t v7 = *v4 | v5;
    if (v7) {
      LOBYTE(v7) = (v6 ^ 1 | v5) == 0;
    }
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  *(unsigned char *)(a1 + 12) = v7;
  return sub_252BD7A88;
}

uint64_t sub_252BD7A88(uint64_t a1)
{
  uint64_t v1 = *(void *)a1 + *(int *)(a1 + 8);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 12);
  uint64_t result = sub_252AD1694(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 2;
  return result;
}

uint64_t SystemPromptResolution.input.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SystemPromptResolution(0) + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;

  return sub_252ACE76C(v4, v5, v6);
}

uint64_t SystemPromptResolution.input.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = type metadata accessor for SystemPromptResolution(0);
  uint64_t result = sub_252CBBDEC(v5);
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

uint64_t (*SystemPromptResolution.input.modify())()
{
  return nullsub_1;
}

uint64_t SystemPromptResolution.description.getter()
{
  uint64_t v1 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v2 = sub_252AEA368(v1);
  MEMORY[0x270FA5388](v2);
  sub_252B23278();
  sub_252D1A268();
  sub_252D19DD8();
  uint64_t v3 = sub_252CBBD30();
  sub_252CB7E00(v3, v4, &qword_26B2320E8);
  uint64_t v5 = sub_252D19588();
  sub_252B22A90(v0, 1, v5);
  if (v6)
  {
    sub_252B5A4CC(v0, &qword_26B2320E8);
  }
  else
  {
    _s16IntelligenceFlow15SessionClientIDV11descriptionSSvg_0();
    sub_252B0014C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v5);
  }
  sub_252CB9240();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  type metadata accessor for SystemPromptResolution(0);
  sub_252BA62F0((uint64_t)&unk_269C450F0);
  sub_252D1A5B8();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  SystemPromptResolution.UserAction.description.getter();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  swift_bridgeObjectRetain();
  StatementID.description.getter();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_252CBA700();
  return 0;
}

void SystemPromptResolution.init(actionEventId:systemResponseEventId:userAction:statementId:input:)()
{
  sub_252AFC8E4();
  sub_252CBCA04();
  int v3 = *v2;
  uint64_t v14 = *((void *)v2 + 2);
  uint64_t v15 = *((void *)v2 + 1);
  uint64_t v16 = v4[1];
  uint64_t v17 = *v4;
  int v5 = *((unsigned __int8 *)v4 + 16);
  uint64_t v6 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 1, 1, v6);
  uint64_t v7 = type metadata accessor for SystemPromptResolution(0);
  uint64_t v8 = v0 + *(int *)(v7 + 32);
  *(void *)uint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  *(unsigned char *)(v8 + 16) = 2;
  sub_252C0CB04(v1, v0, &qword_26B2320E8);
  sub_252B0014C();
  sub_252B4C1CC();
  v9();
  sub_252C06474();
  uint64_t v10 = v0 + *(int *)(v7 + 28);
  *(_DWORD *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = v15;
  *(void *)(v10 + 16) = v14;
  if (v5 == 255) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v17;
  }
  if (v5 == 255) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v16;
  }
  if (v5 == 255) {
    char v13 = 2;
  }
  else {
    char v13 = v5;
  }
  sub_252AD1694(*(void *)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
  *(void *)uint64_t v8 = v11;
  *(void *)(v8 + 8) = v12;
  *(unsigned char *)(v8 + 16) = v13;
  sub_252AFC918();
}

void _s16IntelligenceFlow22SystemPromptResolutionV13actionEventId014systemResponsegH010userAction09statementH013inputModalityAC10Foundation4UUIDVSg_AkC04UserL0OAA11StatementIDVAC05InputO0OSgtcfC_0()
{
  sub_252AFC698();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  int v18 = *v4;
  uint64_t v5 = *((void *)v4 + 1);
  uint64_t v6 = *((void *)v4 + 2);
  v17[0] = *v7;
  sub_252D19588();
  uint64_t v8 = sub_252CBC364();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, v9, v10, v11);
  uint64_t v12 = type metadata accessor for SystemPromptResolution(0);
  uint64_t v13 = v3 + *(int *)(v12 + 32);
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 2;
  sub_252C0BED4(v1, v3, &qword_26B2320E8);
  sub_252B4C01C();
  sub_252AEDE38();
  v14();
  sub_252BA661C();
  uint64_t v15 = v3 + *(int *)(v12 + 28);
  *(_DWORD *)uint64_t v15 = v18;
  *(void *)(v15 + 8) = v5;
  *(void *)(v15 + 16) = v6;
  sub_252AD1694(*(void *)v13, *(void *)(v13 + 8), *(unsigned char *)(v13 + 16));
  *(void *)uint64_t v13 = v17[0] & 1;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 2;
  sub_252BA6670();
  sub_252B23988();
  sub_252CB8ACC();
  v16();
  sub_252B5A4CC(v1, &qword_26B2320E8);
  sub_252AFC67C();
}

void SystemPromptResolution.init(actionEventId:actionResponseEventId:userAction:statementId:)()
{
  sub_252AFC730();
  sub_252CBCA04();
  int v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  uint64_t v7 = sub_252D19588();
  sub_252CB9614(v7);
  sub_252C0CB04(v1, v0, &qword_26B2320E8);
  sub_252B0014C();
  sub_252B4C1CC();
  v8();
  sub_252C06474();
  uint64_t v9 = v0 + *(int *)(v2 + 28);
  *(_DWORD *)uint64_t v9 = v4;
  *(void *)(v9 + 8) = v5;
  *(void *)(v9 + 16) = v6;
  sub_252AFC718();
}

void SystemPromptResolution.init(actionEventId:actionResponseEventId:userAction:)()
{
  sub_252B23290();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_252D19588();
  sub_252CB9614(v5);
  uint64_t v6 = sub_252AF4478();
  sub_252C0BED4(v6, v7, &qword_26B2320E8);
  sub_252B4C01C();
  sub_252AEDE38();
  v8();
  sub_252C06474();
  sub_252CBBC18();
  sub_252CB8ACC();
  v9();
  sub_252B5A4CC(v2, &qword_26B2320E8);
  uint64_t v10 = v4 + *(int *)(v0 + 28);
  *(_DWORD *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  sub_252B232A4();
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV7eventId10userActionAC10Foundation4UUIDV_AC04UserI0OtcfC_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_252D19588();
  uint64_t v3 = sub_252CB978C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v3, v4, v5, v2);
  uint64_t v6 = type metadata accessor for SystemPromptResolution(0);
  uint64_t v7 = a1 + *(int *)(v6 + 32);
  *(void *)uint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  *(unsigned char *)(v7 + 16) = 2;
  sub_252B5A4CC(a1, &qword_26B2320E8);
  sub_252B4C01C();
  sub_252AEDE38();
  v8();
  sub_252CBB324();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, v10, v11, v12);
  _s16IntelligenceFlow15SessionClientIDVACycfC_0();
  sub_252C06474();
  sub_252AFCA44();
  sub_252CB8D98();
  uint64_t result = v13();
  uint64_t v15 = a1 + *(int *)(v6 + 28);
  *(_DWORD *)uint64_t v15 = 0;
  *(void *)(v15 + 8) = 0;
  *(void *)(v15 + 16) = 0;
  return result;
}

uint64_t SystemPromptResolution.InputModality.description.getter()
{
  if (*v0) {
    return 0x7365672064616568;
  }
  else {
    return 0x6863756F74;
  }
}

uint64_t sub_252BD8398(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6863756F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473654764616568 && a2 == 0xEB00000000657275)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BD8498(char a1)
{
  if (a1) {
    return 0x7473654764616568;
  }
  else {
    return 0x6863756F74;
  }
}

uint64_t sub_252BD84D4()
{
  return sub_252BD8498(*v0);
}

uint64_t sub_252BD84DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BD8398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BD8504(uint64_t a1)
{
  unint64_t v2 = sub_252C0B6B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD8540(uint64_t a1)
{
  unint64_t v2 = sub_252C0B6B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD857C(uint64_t a1)
{
  unint64_t v2 = sub_252C0B6FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD85B8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B6FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD85F4(uint64_t a1)
{
  unint64_t v2 = sub_252C0B748();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD8630(uint64_t a1)
{
  unint64_t v2 = sub_252C0B748();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPromptResolution.InputModality.encode(to:)()
{
  sub_252AF4380();
  sub_252CBBF48();
  sub_252AC3A24(&qword_269C451E0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B774C8(v3, v13);
  sub_252AC3A24(&qword_269C451E8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C451F0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  char v6 = *v0;
  sub_252CB85D0(v1);
  sub_252C0B6B0();
  sub_252CBA75C();
  if (v6)
  {
    sub_252C0B6FC();
    sub_252CB8F38();
    sub_252CB85C4();
  }
  else
  {
    sub_252C0B748();
    sub_252CB8F38();
    sub_252CB99EC();
  }
  sub_252B5F53C();
  v9(v7, v8);
  sub_252B0012C();
  v12(v10, v11);
  sub_252CBAC94();
  sub_252AF4368();
}

void SystemPromptResolution.InputModality.init(from:)()
{
  sub_252AF4380();
  sub_252CBB2DC(v1);
  sub_252AC3A24(&qword_269C45210);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C45218);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F6A0();
  sub_252AC3A24(&qword_269C45220);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = *(void *)(v0 + 32);
  sub_252CB8200((void *)v0);
  sub_252C0B6B0();
  sub_252B5F908();
  if (v17) {
    goto LABEL_8;
  }
  sub_252CB9B3C();
  sub_252CBAE60();
  if (!v6 || (uint64_t v7 = sub_252CB8EC0(), sub_252B5F440(v7), sub_252CBAB04(), v5))
  {
    sub_252D1A308();
    sub_252CB86D8();
    uint64_t v9 = v8;
    sub_252AC3A24(&qword_269C42E78);
    sub_252CBBEBC();
    void *v9 = &type metadata for SystemPromptResolution.InputModality;
    sub_252D1A3F8();
    sub_252B5FC40();
    sub_252B0014C();
    sub_252CB86CC();
    v10();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252B5F53C();
    v11();
    uint64_t v0 = v17;
LABEL_8:
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
    goto LABEL_9;
  }
  if (v0)
  {
    sub_252CBB1DC();
    sub_252C0B6FC();
    sub_252CB8FA0();
    sub_252CBAC44();
    sub_252B5F53C();
    v12();
    swift_unknownObjectRelease();
    sub_252CB8E20();
    v13();
  }
  else
  {
    sub_252C0B748();
    sub_252CB9208();
    sub_252CBAC44();
    sub_252B5F53C();
    v14();
    swift_unknownObjectRelease();
    uint64_t v15 = sub_252CBABBC();
    v16(v15);
  }
  sub_252CBBDCC();
LABEL_9:
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BD8B58()
{
}

void sub_252BD8B70()
{
}

uint64_t SystemPromptResolution.ResolutionInput.description.getter()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1)
  {
    if (*(_OWORD *)v0 == 0) {
      return 0x6863756F74;
    }
    else {
      return 0x7365672064616568;
    }
  }
  else
  {
    sub_252D19DD8();
    sub_252D1A328();
    sub_252CBA700();
    return 0;
  }
}

uint64_t static SystemPromptResolution.ResolutionInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_25;
    }
    if (v3 == v5 && v2 == v4)
    {
      LOBYTE(v6) = 1;
    }
    else
    {
      sub_252CB9F60();
      LOBYTE(v6) = sub_252CB845C();
    }
    sub_252CBC7B4();
    sub_252ACE76C(v30, v31, v32);
    sub_252ACE76C(v3, v2, 0);
    sub_252AD1694(v3, v2, 0);
    sub_252CBC7B4();
LABEL_28:
    sub_252AD1694(v14, v15, v16);
    return v6 & 1;
  }
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_252CB9360();
      char v9 = sub_252B1D7E0(v7, v8);
      sub_252ACE76C(v5, v4, 1u);
      sub_252ACE76C(v3, v2, 1u);
      sub_252AD1694(v3, v2, 1u);
      sub_252AD1694(v5, v4, 1u);
      return v9 & 1;
    }
    goto LABEL_25;
  }
  if (!(v3 | v2))
  {
    if (v6 == 2 && (v4 | v5) == 0)
    {
      sub_252AD1694(*(void *)a1, v2, 2u);
      uint64_t v33 = sub_252B4C5C0();
      sub_252AD1694(v33, v34, 2u);
      LOBYTE(v6) = 1;
      return v6 & 1;
    }
    goto LABEL_25;
  }
  if (v6 == 2 && v5 == 1 && v4 == 0)
  {
    sub_252AD1694(*(void *)a1, v2, 2u);
    uint64_t v14 = sub_252CBC0EC();
    goto LABEL_28;
  }
LABEL_25:
  sub_252B988F8();
  sub_252ACE76C(v18, v19, v20);
  sub_252CBC850();
  sub_252ACE76C(v21, v22, v23);
  sub_252CBC850();
  sub_252AD1694(v24, v25, v26);
  sub_252B988F8();
  sub_252AD1694(v27, v28, v29);
  LOBYTE(v6) = 0;
  return v6 & 1;
}

uint64_t sub_252BD8E38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6863756F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7473654764616568 && a2 == 0xEB00000000657275;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x686365657073 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_252BD8FE0(char a1)
{
  uint64_t result = 0x6863756F74;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7473654764616568;
      break;
    case 2:
      uint64_t result = 1954047348;
      break;
    case 3:
      uint64_t result = 0x686365657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BD906C()
{
  return sub_252BD8FE0(*v0);
}

uint64_t sub_252BD9074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BD8E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BD909C(uint64_t a1)
{
  unint64_t v2 = sub_252C0B794();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD90D8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B794();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD9114(uint64_t a1)
{
  unint64_t v2 = sub_252C0B878();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD9150(uint64_t a1)
{
  unint64_t v2 = sub_252C0B878();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD918C(uint64_t a1)
{
  unint64_t v2 = sub_252C0B7E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD91C8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B7E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD9204(uint64_t a1)
{
  unint64_t v2 = sub_252C0B82C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD9240(uint64_t a1)
{
  unint64_t v2 = sub_252C0B82C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BD927C(uint64_t a1)
{
  unint64_t v2 = sub_252C0B8C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BD92B8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B8C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPromptResolution.ResolutionInput.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C45228);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B98820(v4, v22);
  sub_252AC3A24(&qword_269C45230);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B98858(v6, v23);
  sub_252AC3A24(&qword_269C45238);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252CB84E4(v8, v24);
  sub_252AC3A24(&qword_269C45240);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  sub_252CB8678(v10, v25);
  sub_252AC3A24(&qword_269C45248);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v11);
  sub_252B7732C();
  uint64_t v13 = *v0;
  uint64_t v12 = v0[1];
  int v14 = *((unsigned __int8 *)v0 + 16);
  sub_252B5FEB4(v2);
  sub_252C0B794();
  sub_252B7765C();
  sub_252D1A738();
  if (v14)
  {
    if (v14 == 1)
    {
      sub_252C0B7E0();
      sub_252CBAF2C();
      sub_252C06A68();
      sub_252CBBF88();
      sub_252D1A578();
      sub_252B5F53C();
      v15();
      sub_252CBB3B0();
      sub_252B5F658();
      v16();
    }
    else
    {
      if (v13 | v12) {
        sub_252C0B878();
      }
      else {
        sub_252C0B8C4();
      }
      sub_252CBAF2C();
      sub_252B5F53C();
      v19();
      uint64_t v20 = sub_252CBB3B0();
      v21(v20);
    }
  }
  else
  {
    sub_252C0B82C();
    sub_252CBAF2C();
    sub_252C06B00();
    sub_252D1A578();
    sub_252CBAEA0();
    sub_252B5F53C();
    v17();
    sub_252CB99EC();
    sub_252B5F53C();
    v18();
  }
  sub_252B98814();
  sub_252AF4368();
}

void SystemPromptResolution.ResolutionInput.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_252AF4380();
  sub_252CBAEE0();
  uint64_t v47 = v11;
  sub_252AC3A24(&qword_269C45278);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v12);
  sub_252B774C8(v13, v45);
  sub_252AC3A24(&qword_269C45280);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v14);
  sub_252CB8320(v15, v46);
  sub_252AC3A24(&qword_269C45288);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v16);
  sub_252B23278();
  sub_252AC3A24(&qword_269C45290);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C45298);
  sub_252AEDBD0();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  sub_252AC423C();
  uint64_t v48 = (uint64_t)v10;
  sub_252CB8AD8(v10);
  sub_252C0B794();
  sub_252D1A718();
  if (!a10)
  {
    sub_252D1A4C8();
    sub_252CBBAD0();
    if (v21
      && (uint64_t v22 = *(unsigned __int8 *)(v19 + 32),
          uint64_t v23 = sub_252CB9BB8(),
          sub_252B5F440(v23),
          uint64_t v25 = v24,
          unint64_t v27 = v26,
          swift_bridgeObjectRelease(),
          v25 == v27 >> 1))
    {
      switch(v22)
      {
        case 1:
          sub_252C0B878();
          sub_252CB9998();
          sub_252B5F53C();
          v39();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v40();
          uint64_t v31 = 0;
          char v32 = 2;
          uint64_t v30 = 1;
          break;
        case 2:
          LOBYTE(v49) = 2;
          sub_252C0B82C();
          sub_252CB9998();
          sub_252C06C30();
          sub_252CBBF10();
          sub_252B5F53C();
          v41();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v42();
          char v32 = 0;
          uint64_t v30 = v49;
          uint64_t v31 = v50;
          break;
        case 3:
          LOBYTE(v49) = 3;
          sub_252C0B7E0();
          sub_252CB9998();
          sub_252C06BE4();
          sub_252CBB42C();
          sub_252D1A498();
          sub_252B5F53C();
          v43();
          swift_unknownObjectRelease();
          sub_252B0012C();
          v44();
          uint64_t v31 = 0;
          uint64_t v30 = v49;
          char v32 = 1;
          break;
        default:
          sub_252C0B8C4();
          sub_252CB9998();
          sub_252B5F53C();
          v28();
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v29();
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          char v32 = 2;
          break;
      }
      *(void *)uint64_t v47 = v30;
      *(void *)(v47 + 8) = v31;
      *(unsigned char *)(v47 + 16) = v32;
    }
    else
    {
      sub_252D1A308();
      sub_252CB86D8();
      uint64_t v34 = v33;
      sub_252AC3A24(&qword_269C42E78);
      sub_252CB9528();
      *uint64_t v34 = &type metadata for SystemPromptResolution.ResolutionInput;
      sub_252D1A3F8();
      sub_252B77578();
      sub_252B0014C();
      uint64_t v35 = sub_252CB8498();
      v36(v35);
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v37 = sub_252CBA5F4();
      v38(v37);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v48);
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BD9C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SystemPromptResolution.ResolutionInput.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_252BD9C64()
{
}

uint64_t SystemPromptResolution.UserAction.description.getter()
{
  sub_252D19BE8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_252B7E494();
  type metadata accessor for SystemPromptResolution.UserAction(v1);
  sub_252AEA304();
  MEMORY[0x270FA5388](v2);
  sub_252B5F630();
  sub_252CBBC4C();
  sub_252BA661C();
  sub_252B233D8();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CBBC18();
      sub_252B7E53C();
      v3();
      sub_252CB95F4();
      sub_252D1A268();
      sub_252B5FC34();
      sub_252D19DD8();
      sub_252D1A328();
      sub_252CBA700();
      sub_252CB8D98();
      v4();
      return sub_252B23988();
    case 2u:
      sub_252CB95F4();
      sub_252D1A268();
      swift_bridgeObjectRelease();
      sub_252B5FC34();
      goto LABEL_7;
    case 3u:
    case 4u:
      sub_252CB95F4();
      sub_252D1A268();
      swift_bridgeObjectRelease();
      sub_252B5FC34();
      sub_252D1A5B8();
      goto LABEL_7;
    case 5u:
      sub_252CB95F4();
      sub_252D1A268();
      sub_252D19DD8();
      sub_252BD4E40();
      goto LABEL_9;
    case 6u:
    case 7u:
      return sub_252B23988();
    default:
      sub_252CB95F4();
      sub_252D1A268();
      swift_bridgeObjectRelease();
      sub_252CBB388();
LABEL_7:
      sub_252D19DD8();
      swift_bridgeObjectRelease();
LABEL_9:
      sub_252CBA700();
      return sub_252B23988();
  }
}

void static SystemPromptResolution.UserAction.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v20 = v5;
  uint64_t v21 = v4;
  MEMORY[0x270FA5388](v4);
  v19[1] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_252AEDD78();
  type metadata accessor for SystemPromptResolution.UserAction(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252CB87A8();
  MEMORY[0x270FA5388](v9);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v10);
  sub_252CB9604();
  MEMORY[0x270FA5388](v11);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v12);
  sub_252CB8858();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252AC3A24(&qword_269C452A0);
  uint64_t v15 = sub_252AEA368(v14);
  MEMORY[0x270FA5388](v15);
  sub_252B4C3FC();
  sub_252BA661C();
  sub_252BA661C();
  sub_252AEA3DC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CBC8F0();
      if (sub_252B7762C() == 1)
      {
        uint64_t v16 = v20;
        sub_252CB9234();
        sub_252B7E53C();
        v17();
        sub_252CBB398();
        _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
        uint64_t v18 = *(void (**)(void))(v16 + 8);
        sub_252CB9234();
        sub_252B983F0();
        v18();
        sub_252CBB3A4();
        sub_252B983F0();
        v18();
        goto LABEL_17;
      }
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v21);
      goto LABEL_19;
    case 2u:
      sub_252BA661C();
      if (sub_252B7762C() == 2) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 3u:
      sub_252BA661C();
      if (sub_252B7762C() == 3) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 4u:
      sub_252BA661C();
      if (sub_252B7762C() == 4) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 5u:
      sub_252CBBD18();
      if (sub_252B7762C() == 5) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 6u:
      if (sub_252B7762C() != 6) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 7u:
      if (sub_252B7762C() == 7) {
        goto LABEL_17;
      }
      goto LABEL_19;
    default:
      sub_252BA661C();
      if (sub_252B7762C()) {
LABEL_19:
      }
        sub_252B5A4CC(v0, &qword_269C452A0);
      else {
LABEL_17:
      }
        sub_252BA6670();
      sub_252CBBC64();
      sub_252AFC718();
      return;
  }
}

uint64_t sub_252BDA3F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F436E6F69746361 && a2 == 0xEF64656D7269666ELL;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E55656369766564 && a2 == 0xEE0064656B636F6CLL;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1DDD0 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000252D1DDF0 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1DE10 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1DE30 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000252D1DE50 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0x61436E6F69746361 && a2 == 0xEE0064656C65636ELL)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 7;
      }
      else {
        return 8;
      }
    }
  }
}

unint64_t sub_252BDA770(char a1)
{
  unint64_t result = 0x6F436E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E55656369766564;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x61436E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_252BDA8A8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B95C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDA8E4(uint64_t a1)
{
  unint64_t v2 = sub_252C0B95C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDA920(uint64_t a1)
{
  unint64_t v2 = sub_252C0BC08();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDA95C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BC08();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_252BDA998()
{
  return sub_252BDA770(*v0);
}

uint64_t sub_252BDA9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BDA3F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BDA9C8(uint64_t a1)
{
  unint64_t v2 = sub_252C0B910();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDAA04(uint64_t a1)
{
  unint64_t v2 = sub_252C0B910();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDAA40(uint64_t a1)
{
  unint64_t v2 = sub_252C0BBBC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDAA7C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BBBC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDAAB8(uint64_t a1)
{
  unint64_t v2 = sub_252C0BA8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDAAF4(uint64_t a1)
{
  unint64_t v2 = sub_252C0BA8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDAB30(uint64_t a1)
{
  unint64_t v2 = sub_252C0BB24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDAB6C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BB24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDABA8(uint64_t a1)
{
  unint64_t v2 = sub_252C0BAD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDABE4(uint64_t a1)
{
  unint64_t v2 = sub_252C0BAD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDAC20(uint64_t a1)
{
  unint64_t v2 = sub_252C0BB70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDAC5C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BB70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BDAC98(uint64_t a1)
{
  unint64_t v2 = sub_252C0B9F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDACD4(uint64_t a1)
{
  unint64_t v2 = sub_252C0B9F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPromptResolution.UserAction.encode(to:)()
{
  sub_252AF4380();
  uint64_t v48 = v0;
  uint64_t v3 = v2;
  sub_252AC3A24(&qword_269C452A8);
  sub_252AEDBD0();
  v44[23] = v5;
  v44[24] = v4;
  MEMORY[0x270FA5388](v4);
  sub_252CB821C(v6, v44[0]);
  sub_252AC3A24(&qword_269C452B0);
  sub_252AEDBD0();
  v44[20] = v8;
  v44[21] = v7;
  MEMORY[0x270FA5388](v7);
  sub_252B2347C(v9, v44[0]);
  sub_252AC3A24(&qword_269C452B8);
  sub_252AEDBD0();
  v44[17] = v11;
  v44[18] = v10;
  MEMORY[0x270FA5388](v10);
  sub_252CB8694(v12, v44[0]);
  sub_252AC3A24(&qword_269C452C0);
  sub_252AEDBD0();
  v44[14] = v14;
  v44[15] = v13;
  MEMORY[0x270FA5388](v13);
  sub_252B98874(v15, v44[0]);
  v44[10] = sub_252AC3A24(&qword_269C452C8);
  sub_252AEDBD0();
  v44[9] = v16;
  MEMORY[0x270FA5388](v17);
  sub_252B9857C((uint64_t)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_252AC3A24(&qword_269C452D0);
  sub_252AEDBD0();
  v44[11] = v20;
  v44[12] = v19;
  MEMORY[0x270FA5388](v19);
  sub_252B7E454((uint64_t)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44[8] = sub_252D19BE8();
  sub_252AEDBD0();
  v44[7] = v22;
  MEMORY[0x270FA5388](v23);
  sub_252B9857C((uint64_t)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44[3] = sub_252AC3A24(&qword_269C452D8);
  sub_252AEDBD0();
  v44[2] = v25;
  MEMORY[0x270FA5388](v26);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C452E0);
  sub_252AEDBD0();
  v44[1] = v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = sub_252CB87E0();
  type metadata accessor for SystemPromptResolution.UserAction(v29);
  sub_252AEA304();
  MEMORY[0x270FA5388](v30);
  sub_252B5F688();
  sub_252AC3A24(&qword_269C452E8);
  sub_252AEDBD0();
  uint64_t v46 = v31;
  uint64_t v47 = v32;
  MEMORY[0x270FA5388](v31);
  sub_252AF45F0();
  sub_252CB8E64(v3);
  sub_252C0B910();
  uint64_t v45 = v1;
  sub_252CBBFA8();
  sub_252D1A738();
  sub_252BA661C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CBBFB4();
      sub_252B5FC8C();
      sub_252B7E53C();
      v36();
      sub_252C0BB70();
      sub_252CB9094();
      sub_252BA62F0((uint64_t)&unk_269C440E0);
      sub_252D1A578();
      sub_252B5F53C();
      v37();
      sub_252CBB398();
      sub_252B5F67C();
      v38();
      goto LABEL_10;
    case 2u:
      sub_252C0BB24();
      sub_252CB8424();
      sub_252D1A538();
      goto LABEL_8;
    case 3u:
      sub_252C0BAD8();
      sub_252CB8424();
      sub_252D1A558();
      goto LABEL_8;
    case 4u:
      sub_252C0BA8C();
      sub_252CB8424();
      sub_252D1A558();
      goto LABEL_8;
    case 5u:
      sub_252C0B9F4();
      sub_252CB8424();
      sub_252C0BA40();
      sub_252D1A578();
LABEL_8:
      sub_252B5F53C();
      v39();
      uint64_t v34 = sub_252B233D8();
      goto LABEL_11;
    case 6u:
      sub_252C0B95C();
      sub_252CB9094();
      sub_252C0B9A8();
      sub_252D1A578();
      uint64_t v40 = sub_252CBC51C();
      v41(v40);
LABEL_10:
      uint64_t v34 = sub_252B7E4CC();
      goto LABEL_11;
    case 7u:
      sub_252C0BBBC();
      sub_252D1A4D8();
      sub_252B5F53C();
      v42();
      sub_252B5F53C();
      v43();
      goto LABEL_12;
    default:
      char v49 = 0;
      sub_252C0BC08();
      sub_252CB8714();
      sub_252D1A538();
      sub_252B7E4D8();
      sub_252B5F53C();
      v33();
      uint64_t v34 = sub_252CB9240();
LABEL_11:
      v35(v34);
LABEL_12:
      sub_252CB8A3C();
      sub_252AF4368();
      return;
  }
}

void SystemPromptResolution.UserAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  sub_252AF4380();
  sub_252AC3A24(&qword_269C45348);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v17);
  sub_252CB84E4(v18, v112);
  sub_252AC3A24(&qword_269C45350);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v19);
  sub_252B2347C(v20, v113);
  sub_252AC3A24(&qword_269C45358);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v21);
  sub_252CB83B4(v22, v114);
  sub_252AC3A24(&qword_269C45360);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v23);
  sub_252CB8694(v24, v115);
  sub_252AC3A24(&qword_269C45368);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v25);
  sub_252CB8678(v26, v116);
  sub_252AC3A24(&qword_269C45370);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v27);
  sub_252CB8320(v28, v117);
  sub_252AC3A24(&qword_269C45378);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v29);
  sub_252B98820(v30, v118);
  sub_252AC3A24(&qword_269C45380);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v31);
  sub_252B5FA1C(v32, v119);
  sub_252AC3A24(&qword_269C45388);
  sub_252AEDBD0();
  uint64_t v122 = v34;
  uint64_t v123 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = sub_252BA59A0();
  uint64_t v121 = type metadata accessor for SystemPromptResolution.UserAction(v35);
  sub_252AEA304();
  MEMORY[0x270FA5388](v36);
  sub_252AEDC14();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v37);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v38);
  sub_252AEDDB4();
  sub_252AEDC04();
  MEMORY[0x270FA5388](v39);
  sub_252CB8BA8();
  MEMORY[0x270FA5388](v40);
  sub_252CB8500();
  MEMORY[0x270FA5388](v41);
  sub_252CB8954();
  MEMORY[0x270FA5388](v42);
  sub_252CB8858();
  MEMORY[0x270FA5388](v43);
  sub_252CBA598();
  uint64_t v44 = (void *)sub_252CBC4D0();
  sub_252B5FEB4(v44);
  sub_252C0B910();
  sub_252CBAD84();
  sub_252D1A718();
  if (!v13)
  {
    sub_252D1A4C8();
    sub_252CBBAD0();
    if (v45
      && (uint64_t v14 = (uint64_t *)*(unsigned __int8 *)(v12 + 32),
          uint64_t v46 = sub_252CB9BB8(),
          sub_252B5F440(v46),
          uint64_t v48 = v47,
          unint64_t v50 = v49,
          swift_bridgeObjectRelease(),
          v48 == v50 >> 1))
    {
      switch((unint64_t)v14)
      {
        case 1uLL:
          sub_252C0BBBC();
          sub_252CB897C();
          sub_252B77650();
          sub_252B5F53C();
          v56(v53, v54, v55);
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v60(v57, v58, v59);
          sub_252CBBD0C();
          swift_storeEnumTagMultiPayload();
          goto LABEL_18;
        case 2uLL:
          sub_252C0BB70();
          sub_252CB897C();
          sub_252D19BE8();
          sub_252BA62F0((uint64_t)&unk_269C440F0);
          sub_252CB8238();
          sub_252B5F53C();
          v73(v70, v71, v72);
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v77(v74, v75, v76);
          swift_storeEnumTagMultiPayload();
          goto LABEL_17;
        case 3uLL:
          sub_252C0BB24();
          sub_252CB897C();
          goto LABEL_6;
        case 4uLL:
          sub_252C0BAD8();
          sub_252CB897C();
          uint64_t v78 = sub_252D1A478();
          sub_252CB8D6C();
          v82(v79, v80, v81);
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v86(v83, v84, v85);
          *uint64_t v15 = v78;
          sub_252CBBD0C();
          swift_storeEnumTagMultiPayload();
          sub_252C06474();
          goto LABEL_18;
        case 5uLL:
          sub_252C0BA8C();
          sub_252CB897C();
          uint64_t v87 = sub_252D1A478();
          sub_252B5F53C();
          v91(v88, v89, v90);
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v95(v92, v93, v94);
          *uint64_t v120 = v87;
          swift_storeEnumTagMultiPayload();
          goto LABEL_17;
        case 6uLL:
          sub_252C0B9F4();
          sub_252CB897C();
          sub_252C0BCA0();
          sub_252CBC1A8();
          sub_252B5F53C();
          v99(v96, v97, v98);
          swift_unknownObjectRelease();
          sub_252B0012C();
          v103(v100, v101, v102);
          sub_252CBA3CC(a12);
          goto LABEL_16;
        case 7uLL:
          sub_252C0B95C();
          sub_252CB897C();
          sub_252C0BC54();
          sub_252CBC1A8();
          sub_252B5F53C();
          v107(v104, v105, v106);
          swift_unknownObjectRelease();
          sub_252B0012C();
          v111(v108, v109, v110);
          sub_252CBBD0C();
          goto LABEL_16;
        default:
          sub_252C0BC08();
          sub_252CB897C();
LABEL_6:
          char v61 = sub_252D1A458();
          sub_252B5F53C();
          v65(v62, v63, v64);
          swift_unknownObjectRelease();
          sub_252B5F53C();
          v69(v66, v67, v68);
          sub_252CBA3CC(v61 & 1);
LABEL_16:
          swift_storeEnumTagMultiPayload();
LABEL_17:
          sub_252C06474();
LABEL_18:
          sub_252C06474();
          break;
      }
    }
    else
    {
      sub_252D1A308();
      sub_252CB86D8();
      sub_252CBC958();
      sub_252AC3A24(&qword_269C42E78);
      *uint64_t v14 = v121;
      sub_252D1A3F8();
      sub_252B77578();
      sub_252B0014C();
      uint64_t v51 = sub_252CB8498();
      v52(v51);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v16, v123);
    }
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v124);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BDC0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SystemPromptResolution.UserAction.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void sub_252BDC114()
{
}

uint64_t SystemPromptResolution.RequirementResolution.isRequirementSatisfied.getter()
{
  return *v0;
}

uint64_t SystemPromptResolution.RequirementResolution.isRequirementSatisfied.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*SystemPromptResolution.RequirementResolution.isRequirementSatisfied.modify())()
{
  return nullsub_1;
}

IntelligenceFlow::SystemPromptResolution::RequirementResolution __swiftcall SystemPromptResolution.RequirementResolution.init(isRequirementSatisfied:)(IntelligenceFlow::SystemPromptResolution::RequirementResolution isRequirementSatisfied)
{
  v1->isRequirementSatisfied = isRequirementSatisfied.isRequirementSatisfied;
  return isRequirementSatisfied;
}

uint64_t SystemPromptResolution.RequirementResolution.description.getter()
{
  sub_252D1A268();
  swift_bridgeObjectRelease();
  sub_252CBB388();
  uint64_t v2 = v0;
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252CBA700();
  return v2;
}

uint64_t sub_252BDC20C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000252D1DE70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_252BDC294()
{
  return 0xD000000000000016;
}

uint64_t sub_252BDC2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BDC20C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_252BDC2E0(uint64_t a1)
{
  unint64_t v2 = sub_252C0BCEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDC31C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BCEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPromptResolution.RequirementResolution.encode(to:)()
{
  sub_252AF4380();
  uint64_t v1 = v0;
  sub_252AC3A24(&qword_269C453A0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  sub_252AC3A68(v1, v1[3]);
  sub_252C0BCEC();
  sub_252CBA564();
  sub_252D1A538();
  sub_252B5F658();
  v3();
  sub_252B5FD80();
  sub_252AF4368();
}

void SystemPromptResolution.RequirementResolution.init(from:)()
{
  sub_252AF4380();
  sub_252CB8F54();
  sub_252AC3A24(&qword_269C453B0);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C0BCEC();
  sub_252CB86F0();
  if (!v1)
  {
    char v4 = sub_252D1A458();
    sub_252B5F658();
    v5();
    *uint64_t v2 = v4 & 1;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BDC514()
{
}

void sub_252BDC52C()
{
}

uint64_t sub_252BDC550(uint64_t a1)
{
  unint64_t v2 = sub_252C0BD38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDC58C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BD38();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPromptResolution.ActionCancellation.encode(to:)()
{
}

void sub_252BDC604()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252CBBFE0();
  sub_252AC3A24(v3);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v4);
  sub_252AF45F0();
  sub_252AC3A68(v0, v0[3]);
  v2();
  sub_252D1A738();
  sub_252B5F658();
  v5();
  sub_252B5FB60();
  sub_252AF4368();
}

uint64_t SystemPromptResolution.ActionCancellation.init(from:)(uint64_t a1)
{
  return sub_252CB93D8(a1);
}

void sub_252BDC6F0()
{
}

void SystemPromptResolution.stepId.modify()
{
  sub_252B23290();
  unint64_t v2 = sub_252CBA9CC();
  sub_252CBABAC(v2);
  uint64_t v3 = sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA368(v3);
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = sub_252CBAA5C((uint64_t)v5);
  *(void *)(v1 + 16) = v6;
  sub_252AEDBD0();
  *(void *)(v1 + 24) = v7;
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  uint64_t v10 = sub_252CBBEF8((uint64_t)v9);
  sub_252CB9384((uint64_t)v10);
  sub_252B22A90(v0, 1, v6);
  if (v11)
  {
    _s16IntelligenceFlow15SessionClientIDVACycfC_0();
    sub_252B5A4CC(v0, &qword_26B2320E8);
  }
  else
  {
    uint64_t v12 = sub_252CB91F0();
    v13(v12);
  }
  sub_252B232A4();
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV6stepId10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252B23260();
  sub_252CB7E00(v1, v1, &qword_26B2320E8);
  uint64_t v5 = sub_252D19588();
  sub_252B22A90(v1, 1, v5);
  if (v6)
  {
    _s16IntelligenceFlow15SessionClientIDVACycfC_0();
    return sub_252B5A4CC(v1, &qword_26B2320E8);
  }
  else
  {
    sub_252B0014C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, v1, v5);
  }
}

uint64_t _s16IntelligenceFlow22SystemPromptResolutionV6stepId10Foundation4UUIDVvs_0()
{
  sub_252B5A4CC(v0, &qword_26B2320E8);
  sub_252D19588();
  sub_252AEA304();
  sub_252AF4478();
  sub_252B4C1CC();
  v1();
  sub_252CBB324();

  return _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v2, v3, v4, v5);
}

void SystemPromptResolution.eventId.modify()
{
  sub_252B23290();
  uint64_t v2 = sub_252CBA9CC();
  sub_252CBABAC(v2);
  uint64_t v3 = sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA368(v3);
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = sub_252CBAA5C((uint64_t)v5);
  *(void *)(v1 + 16) = v6;
  sub_252AEDBD0();
  *(void *)(v1 + 24) = v7;
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  uint64_t v10 = sub_252CBBEF8((uint64_t)v9);
  sub_252CB9384((uint64_t)v10);
  sub_252B22A90(v0, 1, v6);
  if (v11)
  {
    _s16IntelligenceFlow15SessionClientIDVACycfC_0();
    sub_252B5A4CC(v0, &qword_26B2320E8);
  }
  else
  {
    uint64_t v12 = sub_252CB91F0();
    v13(v12);
  }
  sub_252B232A4();
}

void sub_252BDCA58()
{
  sub_252B23290();
  uint64_t v1 = (void *)(*v0)[4];
  uint64_t v2 = (void *)(*v0)[5];
  uint64_t v4 = **v0;
  uint64_t v3 = (void *)(*v0)[1];
  if (v5)
  {
    sub_252AEDE38();
    v6();
    sub_252B5A4CC(v4, &qword_26B2320E8);
    sub_252CBBFB4();
    sub_252CBA600();
    sub_252B7E53C();
    v7();
    sub_252CBC308();
    sub_252CBBC18();
    sub_252B5F67C();
    v8();
  }
  else
  {
    sub_252B5A4CC(**v0, &qword_26B2320E8);
    uint64_t v9 = sub_252CBC378();
    v10(v9);
    sub_252CBC308();
  }
  free(v2);
  free(v1);
  free(v3);
  sub_252B232A4();
  free(v11);
}

uint64_t sub_252BDCB48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1D310 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7475706E69 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_252D1A5D8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_252BDCD94(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6974634172657375;
      break;
    case 3:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 4:
      unint64_t result = 0x7475706E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BDCE5C()
{
  return sub_252BDCD94(*v0);
}

uint64_t sub_252BDCE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BDCB48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BDCE8C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BD84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDCEC8(uint64_t a1)
{
  unint64_t v2 = sub_252C0BD84();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemPromptResolution.encode(to:)()
{
  sub_252AF4380();
  sub_252B98750();
  sub_252AC3A24(&qword_269C453C8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C0BD84();
  sub_252AF4784();
  sub_252D19588();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252B98690();
  if (!v0)
  {
    type metadata accessor for SystemPromptResolution(0);
    sub_252B98D6C();
    sub_252B98230();
    sub_252CBC610();
    type metadata accessor for SystemPromptResolution.UserAction(0);
    sub_252BA62F0((uint64_t)&unk_269C453D8);
    sub_252B98230();
    sub_252CBA5C8();
    sub_252B67274();
    sub_252B98230();
    sub_252C0BDD0();
    sub_252B98230();
  }
  sub_252B5F658();
  v2();
  sub_252B98814();
  sub_252AF4368();
}

void SystemPromptResolution.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  type metadata accessor for SystemPromptResolution.UserAction(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v4);
  sub_252CBA94C(v5, v22);
  uint64_t v6 = sub_252D19588();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B5F688();
  uint64_t v8 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v9 = sub_252AEA368(v8);
  MEMORY[0x270FA5388](v9);
  sub_252B7732C();
  sub_252AC3A24(&qword_269C453E8);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_252B4C750();
  uint64_t v12 = type metadata accessor for SystemPromptResolution(v11);
  sub_252AEA304();
  MEMORY[0x270FA5388](v13);
  sub_252B5F630();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v1, 1, 1, v6);
  uint64_t v23 = v12;
  uint64_t v14 = v1 + *(int *)(v12 + 32);
  *(void *)uint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 2;
  uint64_t v15 = v3[4];
  sub_252CB85D0(v3);
  sub_252C0BD84();
  sub_252D1A718();
  if (v0)
  {
    sub_252B98E00();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_252B5A4CC(v1, &qword_26B2320E8);
    if (v3)
    {
      sub_252BA6670();
      if (!v15) {
        goto LABEL_6;
      }
    }
    else if (!v15)
    {
LABEL_6:
      sub_252AD1694(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16));
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  LOBYTE(v24) = 0;
  sub_252BA62F0((uint64_t)&qword_26B231070);
  sub_252CBC268();
  sub_252D1A438();
  uint64_t v16 = sub_252CBACA0();
  sub_252C0CB04(v16, v17, v18);
  sub_252CB9E74();
  sub_252CBBC34();
  sub_252CBC268();
  sub_252D1A498();
  sub_252B7E53C();
  v19();
  sub_252CBAFA8();
  sub_252BA62F0((uint64_t)&unk_269C453F0);
  sub_252CB9A38();
  sub_252CBA628();
  sub_252C06474();
  sub_252CBA5C8();
  sub_252B674A8();
  sub_252CBA628();
  uint64_t v20 = v1 + *(int *)(v23 + 28);
  *(_DWORD *)uint64_t v20 = v24;
  *(_OWORD *)(v20 + 8) = v25;
  sub_252C0BE1C();
  sub_252CBA628();
  sub_252B0012C();
  v21();
  sub_252AD1694(*(void *)v14, *(void *)(v14 + 8), *(unsigned char *)(v14 + 16));
  *(void *)uint64_t v14 = v24;
  *(void *)(v14 + 8) = v25;
  *(unsigned char *)(v14 + 16) = BYTE8(v25);
  sub_252BA661C();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
  sub_252BA6670();
LABEL_7:
  sub_252CB8538();
  sub_252AF4368();
}

void sub_252BDD634()
{
}

void sub_252BDD64C()
{
}

uint64_t ActionResponse.actionEventId.getter()
{
  uint64_t v0 = sub_252B4C614();
  return sub_252CB7E00(v0, v1, &qword_26B2320E8);
}

uint64_t ActionResponse.actionEventId.setter(uint64_t a1)
{
  return sub_252C0CB04(a1, v1, &qword_26B2320E8);
}

uint64_t (*ActionResponse.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t ActionResponse.exprId.getter()
{
  return sub_252AEA3DC();
}

uint64_t ActionResponse.exprId.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ActionResponse(0);
  uint64_t result = sub_252B4C9A4();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ActionResponse.exprId.modify())()
{
  return nullsub_1;
}

uint64_t ActionResponse.toolId.getter()
{
  return sub_252BDD798();
}

uint64_t sub_252BDD798()
{
  uint64_t v0 = sub_252CBAF78();
  v1(v0);
  sub_252B4C69C();
  return sub_252AEA3DC();
}

uint64_t ActionResponse.toolId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BDFF20(a1, a2);
}

uint64_t (*ActionResponse.toolId.modify())()
{
  return nullsub_1;
}

uint64_t ActionResponse.outcome.getter()
{
  return sub_252BDFFDC();
}

uint64_t ActionResponse.outcome.setter()
{
  return sub_252BE0064();
}

uint64_t (*ActionResponse.outcome.modify())()
{
  return nullsub_1;
}

uint64_t ActionResponse.response.getter()
{
  return sub_252BDD908();
}

uint64_t sub_252BDD908()
{
  uint64_t v0 = sub_252CB899C();
  v1(v0);
  return sub_252CBB7DC();
}

uint64_t ActionResponse.response.setter()
{
  return sub_252C0846C();
}

uint64_t (*ActionResponse.response.modify())()
{
  return nullsub_1;
}

uint64_t ActionResponse.responseOutput.getter()
{
  return sub_252BE1A04();
}

uint64_t ActionResponse.responseOutput.setter()
{
  return sub_252BE1A8C();
}

uint64_t (*ActionResponse.responseOutput.modify())()
{
  return nullsub_1;
}

uint64_t ActionResponse.clientQueryId.getter()
{
  return sub_252AEA3DC();
}

uint64_t ActionResponse.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ActionResponse(0);
  uint64_t result = sub_252B4C9A4();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ActionResponse.clientQueryId.modify())()
{
  return nullsub_1;
}

void ActionResponse.init(actionEventId:exprId:toolId:outcome:responseOutput:clientQueryId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_252CBB1EC();
  uint64_t v64 = v30;
  uint64_t v63 = v31;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = sub_252D19588();
  sub_252CBC3E0(v39, v41, v42, v40);
  uint64_t v44 = (void *)(v39 + v43);
  *uint64_t v44 = 0;
  v44[1] = 0;
  uint64_t v45 = sub_252CBBE7C();
  uint64_t v46 = (int *)type metadata accessor for ResponseManifest(v45);
  bzero(v27, 0xB9uLL);
  uint64_t v47 = sub_252CBBD3C();
  uint64_t v48 = type metadata accessor for ResponseVisual.UIType(v47);
  sub_252B4C33C(v28, v49, v50, v48);
  uint64_t v51 = &v27[v46[9]];
  *(void *)uint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  uint64_t v52 = &v27[v46[10]];
  *(void *)uint64_t v52 = 0;
  *((void *)v52 + 1) = 0;
  v27[v46[11]] = 2;
  v27[v46[12]] = 2;
  uint64_t v53 = sub_252CBBE7C();
  uint64_t v54 = type metadata accessor for ResponseOutput(v53);
  uint64_t v55 = sub_252CB978C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v55, v56, v57, v54);
  uint64_t v58 = (void *)(v39 + *(int *)(v29 + 40));
  *uint64_t v58 = 0;
  v58[1] = 0;
  uint64_t v59 = sub_252CBB398();
  sub_252C0CB04(v59, v60, v61);
  swift_bridgeObjectRelease();
  *uint64_t v44 = v37;
  v44[1] = v35;
  uint64_t v62 = (void *)(v39 + *(int *)(v29 + 24));
  void *v62 = v33;
  v62[1] = v63;
  sub_252C06474();
  sub_252B5A4CC((uint64_t)v27, &qword_269C41AB8);
  sub_252C06474();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0((uint64_t)v27, 0, 1, v54);
  swift_bridgeObjectRelease();
  *uint64_t v58 = v64;
  v58[1] = a27;
  sub_252CBB228();
}

#error "252BDDD48: call analysis failed (funcsize=63)"

void ActionResponse.init(actionEventId:exprId:toolId:outcome:response:)()
{
  sub_252AFC8E4();
  uint64_t v30 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_252D19588();
  uint64_t v13 = sub_252CBC3E0(v9, v11, v12, v10);
  uint64_t v15 = (void *)(v9 + v14);
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = (char *)(v9 + *(int *)(v13 + 32));
  uint64_t v17 = (int *)type metadata accessor for ResponseManifest(0);
  bzero(v16, 0xB9uLL);
  uint64_t v18 = (uint64_t)&v16[v17[8]];
  uint64_t v19 = type metadata accessor for ResponseVisual.UIType(0);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v18, 1, 1, v19);
  uint64_t v20 = &v16[v17[9]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v21 = &v16[v17[10]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v16[v17[11]] = 2;
  v16[v17[12]] = 2;
  uint64_t v22 = v9 + v0[9];
  uint64_t v23 = type metadata accessor for ResponseOutput(0);
  sub_252B4C33C(v22, v24, v25, v23);
  sub_252CBBC58(v0[10]);
  uint64_t v26 = sub_252CBACA0();
  sub_252C0CB04(v26, v27, v28);
  swift_bridgeObjectRelease();
  *uint64_t v15 = v7;
  v15[1] = v5;
  uint64_t v29 = (void *)(v9 + v0[6]);
  *uint64_t v29 = v3;
  v29[1] = v30;
  sub_252C06474();
  sub_252C0846C();
  sub_252AFC918();
}

void _s16IntelligenceFlow14ActionResponseV7eventId04toolF07outcome8responseAC10Foundation4UUIDV_SSAA0C7OutcomeOAA0D8ManifestVtcfC_0()
{
  sub_252AFC698();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_252D19588();
  uint64_t v8 = sub_252CBBCAC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v8, v9, v10, v7);
  uint64_t v11 = (int *)type metadata accessor for ActionResponse(0);
  uint64_t v12 = (void *)(v6 + v11[5]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (void *)(v6 + v11[8]);
  uint64_t v14 = (int *)type metadata accessor for ResponseManifest(0);
  bzero(v13, 0xB9uLL);
  uint64_t v15 = sub_252CBBE7C();
  uint64_t v16 = type metadata accessor for ResponseVisual.UIType(v15);
  sub_252B4C33C(v0, v17, v18, v16);
  sub_252CBA15C(v14[9]);
  sub_252CBA15C(v14[10]);
  *((unsigned char *)v13 + v14[11]) = 2;
  *((unsigned char *)v13 + v14[12]) = 2;
  uint64_t v19 = sub_252CBC438();
  uint64_t v20 = type metadata accessor for ResponseOutput(v19);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 1, 1, v20);
  sub_252CBB724(v11[10]);
  sub_252B5A4CC(v6, &qword_26B2320E8);
  sub_252B0014C();
  sub_252CBC8CC();
  sub_252B4C1CC();
  v21();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v6, 0, 1, v7);
  uint64_t v22 = (void *)(v6 + v11[6]);
  void *v22 = v4;
  v22[1] = v2;
  sub_252C06474();
  sub_252C0846C();
  sub_252AFC67C();
}

void ActionResponse.stepId.modify()
{
  sub_252B23290();
  uint64_t v2 = sub_252CBA9CC();
  sub_252CBABAC(v2);
  uint64_t v3 = sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA368(v3);
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = sub_252CBAA5C((uint64_t)v5);
  *(void *)(v1 + 16) = v6;
  sub_252AEDBD0();
  *(void *)(v1 + 24) = v7;
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  uint64_t v10 = sub_252CBBEF8((uint64_t)v9);
  sub_252CB9384((uint64_t)v10);
  sub_252B22A90(v0, 1, v6);
  if (v11)
  {
    _s16IntelligenceFlow15SessionClientIDVACycfC_0();
    sub_252B5A4CC(v0, &qword_26B2320E8);
  }
  else
  {
    uint64_t v12 = sub_252CB91F0();
    v13(v12);
  }
  sub_252B232A4();
}

uint64_t sub_252BDE1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  sub_252D19588();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B23278();
  uint64_t v8 = sub_252CB9F60();
  v9(v8);
  return a5(v5);
}

void ActionResponse.eventId.modify()
{
  sub_252B23290();
  uint64_t v2 = sub_252CBA9CC();
  sub_252CBABAC(v2);
  uint64_t v3 = sub_252AC3A24(&qword_26B2320E8);
  sub_252AEA368(v3);
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  uint64_t v6 = sub_252CBAA5C((uint64_t)v5);
  *(void *)(v1 + 16) = v6;
  sub_252AEDBD0();
  *(void *)(v1 + 24) = v7;
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  uint64_t v10 = sub_252CBBEF8((uint64_t)v9);
  sub_252CB9384((uint64_t)v10);
  sub_252B22A90(v0, 1, v6);
  if (v11)
  {
    _s16IntelligenceFlow15SessionClientIDVACycfC_0();
    sub_252B5A4CC(v0, &qword_26B2320E8);
  }
  else
  {
    uint64_t v12 = sub_252CB91F0();
    v13(v12);
  }
  sub_252B232A4();
}

#error "252BDE3CC: call analysis failed (funcsize=48)"

void static ActionOutcome.== infix(_:_:)()
{
  sub_252AFC730();
  v46[13] = v5;
  v46[14] = v6;
  v46[2] = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v7);
  v46[7] = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[5] = type metadata accessor for ParameterNotAllowed(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  v46[6] = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ParameterConfirmation(0);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  v46[3] = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[1] = type metadata accessor for ParameterNeedsValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  v46[4] = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ActionSuccess(0);
  uint64_t v17 = sub_252AEA368(v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = sub_252B7E454((uint64_t)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = (void *)type metadata accessor for ActionOutcome(v19);
  sub_252AEA304();
  MEMORY[0x270FA5388](v21);
  sub_252CB8858();
  MEMORY[0x270FA5388](v22);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v23);
  sub_252CB8954();
  MEMORY[0x270FA5388](v24);
  v46[12] = (char *)v46 - v25;
  sub_252B22C04();
  MEMORY[0x270FA5388](v26);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v27);
  sub_252CB8500();
  MEMORY[0x270FA5388](v28);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v29);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v30);
  sub_252B98DC4();
  MEMORY[0x270FA5388](v31);
  sub_252CB9604();
  MEMORY[0x270FA5388](v32);
  sub_252CB8F64();
  uint64_t v33 = sub_252AC3A24(&qword_269C45400);
  uint64_t v34 = sub_252AEA368(v33);
  MEMORY[0x270FA5388](v34);
  sub_252CBA90C();
  sub_252BA661C();
  sub_252CBB53C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252BA661C();
      if (sub_252CBA50C() != 1) {
        goto LABEL_52;
      }
      sub_252CB89B0();
      sub_252CBC024();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_66;
    case 2u:
      sub_252BA661C();
      if (sub_252CBB46C() != 2) {
        goto LABEL_53;
      }
      uint64_t v35 = v20[1];
      if (v2)
      {
        if (!v35) {
          goto LABEL_64;
        }
        BOOL v36 = v4 == *v20 && v2 == v35;
        if (!v36 && (sub_252CB8520() & 1) == 0) {
          goto LABEL_64;
        }
      }
      else if (v35)
      {
LABEL_64:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      }
      sub_252B1E820();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_66:
      sub_252BA6670();
LABEL_67:
      sub_252CBBC64();
      sub_252AFC718();
      return;
    case 3u:
      sub_252CB8C60();
      if (sub_252CB8B40() != 3) {
        goto LABEL_55;
      }
      sub_252CBA498();
      sub_252CB95B8();
      BOOL v39 = v36 && v37 == v38;
      if (v39 || (sub_252D1A5D8() & 1) != 0) {
        goto LABEL_40;
      }
      goto LABEL_41;
    case 4u:
      sub_252CBC85C();
      if (sub_252CB8B40() != 4) {
        goto LABEL_55;
      }
      sub_252CBB454();
      static ParameterConfirmation.== infix(_:_:)(v3);
      sub_252CBC5E4();
      sub_252BA6670();
      goto LABEL_61;
    case 5u:
      sub_252BA661C();
      if (sub_252CBACAC() == 5)
      {
        sub_252CB8884();
        sub_252CBC024();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_66;
      }
LABEL_52:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_53:
      swift_bridgeObjectRelease();
LABEL_54:
      swift_bridgeObjectRelease();
      goto LABEL_56;
    case 6u:
      sub_252CB8C60();
      if (sub_252CB8B40() != 6) {
        goto LABEL_55;
      }
      sub_252CBA498();
      sub_252CB95B8();
      BOOL v42 = v36 && v40 == v41;
      if (v42 || (sub_252D1A5D8())
        && (_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) != 0)
      {
        sub_252CBC05C();
      }
      goto LABEL_41;
    case 7u:
      sub_252BA661C();
      if (sub_252CB8B40() != 7) {
        goto LABEL_55;
      }
      sub_252CBA498();
      sub_252CB95B8();
      BOOL v45 = v36 && v43 == v44;
      if (v45 || (sub_252D1A5D8() & 1) != 0) {
LABEL_40:
      }
        sub_252CB98C8();
LABEL_41:
      sub_252BA6670();
      sub_252CBC8D8();
      goto LABEL_66;
    case 8u:
      sub_252BA661C();
      if (sub_252CBB334() == 8)
      {
        sub_252CBA054();
        sub_252CBA2E8();
        goto LABEL_66;
      }
      sub_252AD16E4(v3, v2, v0);
      goto LABEL_56;
    case 9u:
      sub_252CB99C0();
      if (sub_252CBBFF8() != 9) {
        goto LABEL_54;
      }
      sub_252B1D7E4();
      sub_252CB8EFC();
      swift_bridgeObjectRelease();
      goto LABEL_66;
    case 0xAu:
      sub_252BA661C();
      if (sub_252CBA50C() == 10)
      {
        sub_252CB9148();
        sub_252CBA374();
        sub_252CB9258();
        goto LABEL_66;
      }
      sub_252CB9258();
      goto LABEL_56;
    default:
      sub_252BA661C();
      if (!sub_252CB8B40())
      {
        sub_252CBB454();
        static ActionSuccess.== infix(_:_:)();
        sub_252CBC5E4();
        sub_252BA6670();
LABEL_61:
        sub_252BA6670();
        goto LABEL_66;
      }
LABEL_55:
      sub_252BA6670();
LABEL_56:
      sub_252B5A4CC(v1, &qword_269C45400);
      goto LABEL_67;
  }
}

uint64_t sub_252BDEF8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x644972707865 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x65736E6F70736572 && a2 == 0xEE0074757074754FLL;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_252D1A5D8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_252BDF2B0()
{
  return 7;
}

unint64_t sub_252BDF2B8(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 1919973477;
      goto LABEL_4;
    case 2:
      uint64_t v3 = 1819242356;
LABEL_4:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x644900000000;
      break;
    case 3:
      unint64_t result = 0x656D6F6374756FLL;
      break;
    case 4:
    case 5:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 6:
      unint64_t result = 0x7551746E65696C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BDF3A8()
{
  return sub_252BDF2B8(*v0);
}

uint64_t sub_252BDF3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BDEF8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BDF3D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252BDF2B0();
  *a1 = result;
  return result;
}

uint64_t sub_252BDF400(uint64_t a1)
{
  unint64_t v2 = sub_252C0BE68();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BDF43C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BE68();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ActionResponse.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C45408);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C0BE68();
  sub_252AF4784();
  sub_252CB9EC4();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB9E90();
  sub_252CB90AC();
  if (!v0)
  {
    type metadata accessor for ActionResponse(0);
    sub_252CB8CC4();
    sub_252CB8868();
    type metadata accessor for ActionOutcome(0);
    sub_252BA62F0((uint64_t)&unk_269C45418);
    sub_252B982A8();
    uint64_t v2 = sub_252CBB664();
    type metadata accessor for ResponseManifest(v2);
    sub_252BA62F0((uint64_t)&unk_269C449D0);
    sub_252B982A8();
    sub_252CBC294();
    type metadata accessor for ResponseOutput(0);
    sub_252BA62F0((uint64_t)&unk_269C45420);
    sub_252CB90AC();
    sub_252CBC27C();
    sub_252CB8CC4();
  }
  uint64_t v3 = sub_252AF4620();
  v4(v3);
  sub_252CBAD48();
  sub_252B232F8();
}

void ActionResponse.init(from:)()
{
  sub_252AF4380();
  uint64_t v72 = v0;
  uint64_t v4 = v3;
  uint64_t v60 = v5;
  uint64_t v6 = sub_252AC3A24(&qword_269C41AB8);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  char v61 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_252AEDD78();
  BOOL v10 = (int *)type metadata accessor for ResponseManifest(v9);
  sub_252AEA304();
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_252AEDD78();
  uint64_t v63 = type metadata accessor for ActionOutcome(v13);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  sub_252CB84E4(v15, v60);
  uint64_t v16 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v17 = sub_252AEA368(v16);
  MEMORY[0x270FA5388](v17);
  sub_252CB8A94(v18, v60);
  uint64_t v66 = sub_252AC3A24(&qword_269C45428);
  sub_252AEDBD0();
  uint64_t v64 = v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_252B4C76C();
  uint64_t v22 = (int *)type metadata accessor for ActionResponse(v21);
  sub_252AEA304();
  MEMORY[0x270FA5388](v23);
  uint64_t v24 = sub_252CB96E0();
  uint64_t v25 = sub_252CBBCAC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v25, v26, v27, v24);
  sub_252CBB724(v22[5]);
  uint64_t v71 = v28;
  uint64_t v29 = (void *)(v1 + v22[8]);
  bzero(v29, 0xB9uLL);
  type metadata accessor for ResponseVisual.UIType(0);
  uint64_t v30 = sub_252CBAA78();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v30, v31, v32, v33);
  sub_252CBA15C(v10[9]);
  sub_252CBA15C(v10[10]);
  *((unsigned char *)v29 + v10[11]) = 2;
  uint64_t v34 = v10[12];
  uint64_t v73 = v29;
  *((unsigned char *)v29 + v34) = 2;
  uint64_t v35 = v1 + v22[9];
  uint64_t v36 = type metadata accessor for ResponseOutput(0);
  uint64_t v69 = v35;
  uint64_t v37 = sub_252CBAA78();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v37, v38, v39, v36);
  uint64_t v70 = v22;
  sub_252CBB724(v22[10]);
  uint64_t v67 = v40;
  uint64_t v68 = v4;
  sub_252B5FD8C(v4);
  sub_252C0BE68();
  uint64_t v65 = v2;
  sub_252CBC6F4();
  if (v0)
  {
    sub_252CBB5AC();
    uint64_t v41 = v69;
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v68);
    sub_252B5A4CC(v1, &qword_26B2320E8);
    swift_bridgeObjectRelease();
    if (v24) {
      swift_bridgeObjectRelease();
    }
    if (v35) {
      sub_252BA6670();
    }
    sub_252BA6670();
    sub_252B5A4CC(v41, &qword_269C41AB8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9E90();
    sub_252D1A438();
    uint64_t v42 = sub_252B233D8();
    sub_252C0CB04(v42, v43, v44);
    uint64_t v45 = sub_252D1A408();
    uint64_t v46 = v70;
    uint64_t v47 = v71;
    uint64_t v48 = v45;
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    *uint64_t v47 = v48;
    v47[1] = v50;
    sub_252CB965C();
    uint64_t v51 = sub_252D1A448();
    uint64_t v52 = (uint64_t *)(v1 + v46[6]);
    *uint64_t v52 = v51;
    v52[1] = v53;
    sub_252BA62F0((uint64_t)&unk_269C45430);
    sub_252D1A498();
    sub_252C06474();
    sub_252BA62F0((uint64_t)&unk_269C430B0);
    sub_252D1A498();
    sub_252C0846C();
    sub_252CBC294();
    sub_252BA62F0((uint64_t)&unk_269C45438);
    uint64_t v54 = (uint64_t)v61;
    sub_252CBBC34();
    sub_252D1A438();
    sub_252C0CB04(v54, v69, &qword_269C41AB8);
    sub_252CBC27C();
    uint64_t v55 = sub_252D1A408();
    uint64_t v57 = v56;
    sub_252B5F67C();
    v58();
    uint64_t v59 = v67;
    swift_bridgeObjectRelease();
    uint64_t *v59 = v55;
    v59[1] = v57;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v68);
    sub_252BA6670();
  }
  sub_252CB9FC4();
  sub_252AF4368();
}

void sub_252BDFDD4()
{
}

void sub_252BDFDEC()
{
}

uint64_t (*SystemResponse.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.statementId.getter()
{
  uint64_t v2 = sub_252B4C488();
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SystemResponse(v2) + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t *v0 = *v3;
  v0[1] = v5;
  v0[2] = v6;

  return sub_252C099B4(v4, v5, v6);
}

double SystemResponse.statementId.setter()
{
  uint64_t v1 = sub_252CBA260();
  type metadata accessor for SystemResponse(v1);
  sub_252CBBA40();
  uint64_t v2 = sub_252C099C8(*v0, v0[1], v0[2]);
  *(void *)&double result = sub_252CBB218(v2, v3, v4, v5, v6, v7, v8, v9, v10).n128_u64[0];
  return result;
}

uint64_t (*SystemResponse.statementId.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.toolId.getter()
{
  return sub_252BDD798();
}

uint64_t SystemResponse.toolId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BDFF20(a1, a2);
}

uint64_t sub_252BDFF20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_252CB9888();
  v6(v5);
  uint64_t result = sub_252B4C9A4();
  *uint64_t v2 = v3;
  v2[1] = a2;
  return result;
}

uint64_t (*SystemResponse.toolId.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.outcome.getter()
{
  return sub_252BDFFDC();
}

uint64_t sub_252BDFFDC()
{
  uint64_t v4 = sub_252CBB578();
  uint64_t v6 = v5(v4);
  return v0(v1 + *(int *)(v6 + 28), v3, v2);
}

uint64_t SystemResponse.outcome.setter()
{
  return sub_252BE0064();
}

uint64_t sub_252BE0064()
{
  uint64_t v2 = sub_252CBAC10();
  v3(v2);
  sub_252CB9B60();
  return v0(v1);
}

uint64_t (*SystemResponse.outcome.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.responseOutput.getter()
{
  return sub_252BAA1F8();
}

uint64_t SystemResponse.responseOutput.setter(uint64_t a1)
{
  return sub_252BE0124(a1, (uint64_t)type metadata accessor for SystemResponse, &qword_269C41AB8);
}

uint64_t sub_252BE0124(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_252CB9888();
  v6(v5);
  sub_252B4CA64();
  return sub_252C0CB04(v3, v7, a3);
}

uint64_t (*SystemResponse.responseOutput.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.clientQueryId.getter()
{
  return sub_252BE8EAC();
}

uint64_t SystemResponse.clientQueryId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BE8EF8(a1, a2);
}

uint64_t (*SystemResponse.clientQueryId.modify())()
{
  return nullsub_1;
}

uint64_t SystemResponse.interpretedStatementResults.getter()
{
  type metadata accessor for SystemResponse(0);

  return swift_bridgeObjectRetain();
}

void SystemResponse.init(responseOutput:clientQueryId:interpretedStatementResults:)()
{
  sub_252AFC730();
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v41 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = sub_252B4C488();
  uint64_t v40 = type metadata accessor for StatementOutcome(v8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v9);
  sub_252CB8320(v10, v40);
  uint64_t v11 = sub_252AC3A24(&qword_269C45440);
  uint64_t v12 = sub_252AEA368(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_252CB9708();
  uint64_t v14 = type metadata accessor for InterpretedStatementResult(v13);
  sub_252AEA304();
  MEMORY[0x270FA5388](v15);
  sub_252CB83D0();
  uint64_t v16 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 1, 1, v16);
  uint64_t v17 = (int *)type metadata accessor for SystemResponse(0);
  uint64_t v18 = (uint64_t *)(v0 + v17[5]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  v18[2] = 1;
  uint64_t v19 = sub_252CBBD3C();
  uint64_t v20 = type metadata accessor for ResponseOutput(v19);
  sub_252B4C33C(1, v21, v22, v20);
  uint64_t v23 = (void *)(v0 + v17[9]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  sub_252C0BED4(v7, 1, &qword_269C41AB8);
  swift_bridgeObjectRelease();
  *uint64_t v23 = v41;
  v23[1] = v42;
  *(void *)(v0 + v17[10]) = v43;
  sub_252B7769C(v43, v1);
  sub_252B22A90(v1, 1, v14);
  if (v24)
  {
    sub_252B5A4CC(v1, &qword_269C45440);
    sub_252B5A4CC(v0, &qword_26B2320E8);
    _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 1, 1, v16);
    sub_252C099C8(*v18, v18[1], v18[2]);
    *uint64_t v18 = 0;
    v18[1] = 0;
    v18[2] = 1;
    sub_252B5A4CC(v7, &qword_269C41AB8);
    uint64_t v25 = (void *)(v0 + v17[6]);
    *uint64_t v25 = 0;
    v25[1] = 0xE000000000000000;
    uint64_t v26 = v0 + v17[7];
    *(_OWORD *)uint64_t v26 = xmmword_252D354A0;
    *(void *)(v26 + 24) = 0;
    *(void *)(v26 + 32) = 0;
    *(void *)(v26 + 16) = 0;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_252C06474();
    uint64_t v27 = sub_252CB9CB0();
    sub_252C0BED4(v27, v28, v29);
    uint64_t v30 = (unsigned int *)(v2 + *(int *)(v14 + 24));
    uint64_t v32 = *((void *)v30 + 1);
    uint64_t v31 = *((void *)v30 + 2);
    uint64_t v33 = *v18;
    uint64_t v34 = v18[1];
    uint64_t v35 = v18[2];
    *uint64_t v18 = *v30;
    v18[1] = v32;
    v18[2] = v31;
    swift_bridgeObjectRetain();
    sub_252C099C8(v33, v34, v35);
    uint64_t v36 = (uint64_t *)(v2 + *(int *)(v14 + 32));
    if (v36[1])
    {
      uint64_t v37 = *v36;
      unint64_t v38 = v36[1];
    }
    else
    {
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    sub_252B5A4CC(v7, &qword_269C41AB8);
    uint64_t v39 = (void *)(v0 + v17[6]);
    *uint64_t v39 = v37;
    v39[1] = v38;
    sub_252BA661C();
    sub_252BA6670();
    sub_252C06474();
  }
  sub_252AFC718();
}

__n128 ActionFailure.init(failure:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v2;
  return result;
}

void SystemResponse.init(actionEventId:statementId:toolId:outcome:responseOutput:clientQueryId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  sub_252CBB1EC();
  uint64_t v39 = v12;
  uint64_t v40 = v13;
  uint64_t v38 = v14;
  uint64_t v16 = v15;
  sub_252CBC830(v17, v18);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, 1, 1, v21);
  type metadata accessor for SystemResponse(0);
  sub_252B98D6C();
  uint64_t v23 = (uint64_t *)(v9 + v22);
  *uint64_t v23 = 0;
  v23[1] = 0;
  v23[2] = 1;
  uint64_t v25 = v9 + *(int *)(v24 + 32);
  uint64_t v26 = type metadata accessor for ResponseOutput(0);
  sub_252B4C33C(v25, v27, v28, v26);
  uint64_t v29 = (void *)(v9 + v11[9]);
  *uint64_t v29 = 0;
  v29[1] = 0;
  uint64_t v30 = sub_252AF4478();
  sub_252C0BED4(v30, v31, v32);
  sub_252C099C8(*v23, v23[1], v23[2]);
  *(_OWORD *)uint64_t v23 = a9;
  v23[2] = v20;
  uint64_t v33 = (void *)(v9 + v11[6]);
  *uint64_t v33 = v16;
  v33[1] = v38;
  sub_252BA661C();
  uint64_t v34 = sub_252CBA1D4();
  sub_252C0BED4(v34, v35, &qword_269C41AB8);
  swift_bridgeObjectRelease();
  *uint64_t v29 = v39;
  v29[1] = v40;
  uint64_t v36 = sub_252CBC8CC();
  sub_252B5A4CC(v36, v37);
  sub_252BA6670();
  sub_252B5A4CC(v10, &qword_26B2320E8);
  *(void *)(v9 + v11[10]) = MEMORY[0x263F8EE78];
  sub_252CBB228();
}

void SystemResponse.init(actionEventId:statementId:toolId:outcome:responseOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  sub_252AFC8E4();
  uint64_t v31 = v11;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_252CBC830(v16, v17);
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = sub_252D19588();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v9, 1, 1, v20);
  uint64_t v21 = (int *)type metadata accessor for SystemResponse(0);
  uint64_t v22 = (uint64_t *)(v9 + v21[5]);
  uint64_t *v22 = 0;
  v22[1] = 0;
  v22[2] = 1;
  uint64_t v23 = v9 + v21[8];
  uint64_t v24 = type metadata accessor for ResponseOutput(0);
  sub_252B4C33C(v23, v25, v26, v24);
  uint64_t v27 = (void *)(v9 + v21[9]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = sub_252AF4478();
  sub_252C0BED4(v28, v29, &qword_26B2320E8);
  sub_252C099C8(*v22, v22[1], v22[2]);
  *(_OWORD *)uint64_t v22 = a9;
  v22[2] = v19;
  uint64_t v30 = (void *)(v9 + v21[6]);
  *uint64_t v30 = v15;
  v30[1] = v13;
  sub_252BA661C();
  sub_252C0CB04(v31, v23, &qword_269C41AB8);
  sub_252BA6670();
  sub_252B5A4CC(v10, &qword_26B2320E8);
  *(void *)(v9 + v21[10]) = MEMORY[0x263F8EE78];
  sub_252AFC918();
}

uint64_t sub_252BE0850(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
      if (v7 || (sub_252D1A5D8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
        if (v8 || (sub_252D1A5D8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x65736E6F70736572 && a2 == 0xEE0074757074754FLL;
          if (v9 || (sub_252D1A5D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x7551746E65696C63 && a2 == 0xED00006449797265;
            if (v10 || (sub_252D1A5D8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000252D1DE90)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v11 = sub_252D1A5D8();
              swift_bridgeObjectRelease();
              if (v11) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_252BE0B9C(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 2:
      unint64_t result = 0x64496C6F6F74;
      break;
    case 3:
      unint64_t result = 0x656D6F6374756FLL;
      break;
    case 4:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 5:
      unint64_t result = 0x7551746E65696C63;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BE0CB0()
{
  return sub_252BE0B9C(*v0);
}

uint64_t sub_252BE0CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BE0850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BE0CE0(uint64_t a1)
{
  unint64_t v2 = sub_252C0BF18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE0D1C(uint64_t a1)
{
  unint64_t v2 = sub_252C0BF18();

  return MEMORY[0x270FA00B8](a1, v2);
}

void SystemResponse.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C45448);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C0BF18();
  sub_252AF4784();
  sub_252D19588();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB90AC();
  if (!v0)
  {
    type metadata accessor for SystemResponse(0);
    sub_252B67274();
    sub_252CB90AC();
    sub_252CB8868();
    type metadata accessor for StatementOutcome(0);
    sub_252BA62F0((uint64_t)&unk_269C449C8);
    sub_252B982A8();
    type metadata accessor for ResponseOutput(0);
    sub_252BA62F0((uint64_t)&unk_269C45420);
    sub_252CB90AC();
    sub_252CBC2A0();
    sub_252CB8CC4();
    sub_252AC3A24(&qword_269C45458);
    sub_252C0BF64();
    sub_252B982A8();
  }
  uint64_t v2 = sub_252AF4620();
  v3(v2);
  sub_252CBAD48();
  sub_252B232F8();
}

void SystemResponse.init(from:)()
{
  sub_252AF4380();
  uint64_t v3 = v2;
  uint64_t v4 = sub_252AC3A24(&qword_269C41AB8);
  uint64_t v5 = sub_252AEA368(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = sub_252CBA92C(v6, v40);
  type metadata accessor for StatementOutcome(v7);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252CB83B4(v9, v41);
  uint64_t v10 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v11 = sub_252AEA368(v10);
  MEMORY[0x270FA5388](v11);
  sub_252B2347C(v12, v42);
  sub_252AC3A24(&qword_269C45470);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_252B4C750();
  uint64_t v15 = type metadata accessor for SystemResponse(v14);
  sub_252AEA304();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_252CBB0F4();
  uint64_t v18 = sub_252CBB688();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v18, v19, v20, v17);
  uint64_t v21 = (uint64_t *)(v1 + *(int *)(v15 + 20));
  *uint64_t v21 = 0;
  v21[1] = 0;
  v21[2] = 1;
  uint64_t v22 = sub_252CBBE7C();
  uint64_t v23 = type metadata accessor for ResponseOutput(v22);
  uint64_t v24 = sub_252CB978C();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v24, v25, v26, v23);
  uint64_t v44 = (uint64_t)v3;
  uint64_t v45 = v15;
  sub_252CBA15C(*(int *)(v15 + 36));
  uint64_t v28 = v27;
  uint64_t v29 = v3[4];
  sub_252CB8200(v3);
  sub_252C0BF18();
  sub_252CBBFA8();
  sub_252D1A718();
  if (v0)
  {
    sub_252CBB5AC();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v3);
    sub_252B5A4CC(v1, &qword_26B2320E8);
    sub_252C099C8(*v21, v21[1], v21[2]);
    if (v29) {
      swift_bridgeObjectRelease();
    }
    if (v3) {
      sub_252BA6670();
    }
    sub_252B5A4CC(1, &qword_269C41AB8);
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_252BA62F0((uint64_t)&qword_26B231070);
    sub_252CB9A38();
    sub_252D1A438();
    uint64_t v30 = sub_252CB9DD4();
    sub_252C0CB04(v30, v31, v32);
    sub_252B674A8();
    sub_252B98B0C();
    sub_252D1A438();
    sub_252C099C8(*v21, v21[1], v21[2]);
    *(_OWORD *)uint64_t v21 = v46;
    v21[2] = v47;
    sub_252CBAFA8();
    uint64_t v33 = sub_252D1A448();
    uint64_t v34 = (uint64_t *)(v1 + *(int *)(v45 + 24));
    *uint64_t v34 = v33;
    v34[1] = v35;
    sub_252CBB67C();
    sub_252BA62F0((uint64_t)&unk_269C449E0);
    sub_252CB9A38();
    sub_252D1A498();
    sub_252C06474();
    sub_252CBC2B4();
    sub_252BA62F0((uint64_t)&unk_269C45438);
    sub_252CB9A38();
    sub_252D1A438();
    sub_252C0CB04(v43, 1, &qword_269C41AB8);
    LOBYTE(v46) = 5;
    uint64_t v36 = sub_252D1A408();
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t *v28 = v36;
    v28[1] = v38;
    sub_252AC3A24(&qword_269C45458);
    sub_252C0C008();
    sub_252B98B0C();
    sub_252D1A498();
    sub_252B5F53C();
    v39();
    *(void *)(v1 + *(int *)(v45 + 40)) = v46;
    sub_252BA661C();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v44);
    sub_252BA6670();
  }
  sub_252CB924C();
  sub_252AF4368();
}

void sub_252BE15F4()
{
}

void sub_252BE160C()
{
}

uint64_t (*InterpretedStatementResult.actionEventId.modify())()
{
  return nullsub_1;
}

uint64_t InterpretedStatementResult.resultStatementID.getter()
{
  uint64_t v0 = sub_252B4C488();
  uint64_t v1 = type metadata accessor for InterpretedStatementResult(v0);
  sub_252CB9D74(*(int *)(v1 + 20));

  return swift_bridgeObjectRetain();
}

void InterpretedStatementResult.resultStatementID.setter()
{
  uint64_t v0 = sub_252CBB714();
  type metadata accessor for InterpretedStatementResult(v0);
  sub_252CBBA40();
  swift_bridgeObjectRelease();
  sub_252CBB708();
}

uint64_t (*InterpretedStatementResult.resultStatementID.modify())()
{
  return nullsub_1;
}

uint64_t InterpretedStatementResult.originProgramStatementID.getter()
{
  return sub_252BE1714();
}

uint64_t sub_252BE1714()
{
  uint64_t v0 = sub_252B4C488();
  uint64_t v2 = v1(v0);
  sub_252CB9D74(*(int *)(v2 + 24));

  return swift_bridgeObjectRetain();
}

void InterpretedStatementResult.originProgramStatementID.setter()
{
}

void sub_252BE1770()
{
  uint64_t v0 = sub_252CBB714();
  v1(v0);
  swift_bridgeObjectRelease();
  sub_252CBB708();
}

uint64_t (*InterpretedStatementResult.originProgramStatementID.modify())()
{
  return nullsub_1;
}

uint64_t InterpretedStatementResult.originTaskStatementID.getter()
{
  return sub_252BE1808();
}

uint64_t sub_252BE1808()
{
  uint64_t v0 = sub_252B4C488();
  uint64_t v2 = v1(v0);
  sub_252CB9D74(*(int *)(v2 + 28));

  return swift_bridgeObjectRetain();
}

void InterpretedStatementResult.originTaskStatementID.setter()
{
}

void sub_252BE1864()
{
  uint64_t v0 = sub_252CBB714();
  v1(v0);
  swift_bridgeObjectRelease();
  sub_252CBB708();
}

uint64_t (*InterpretedStatementResult.originTaskStatementID.modify())()
{
  return nullsub_1;
}

uint64_t InterpretedStatementResult.toolId.getter()
{
  return sub_252BE18FC();
}

uint64_t sub_252BE18FC()
{
  uint64_t v0 = sub_252CBAF78();
  v1(v0);
  sub_252B4C69C();
  return sub_252AEA3DC();
}

uint64_t InterpretedStatementResult.toolId.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BE1948(a1, a2);
}

uint64_t sub_252BE1948(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_252CB9888();
  v6(v5);
  uint64_t result = sub_252B4C9A4();
  *uint64_t v2 = v3;
  v2[1] = a2;
  return result;
}

uint64_t (*InterpretedStatementResult.toolId.modify())()
{
  return nullsub_1;
}

uint64_t InterpretedStatementResult.outcome.getter()
{
  return sub_252BE1A04();
}

uint64_t sub_252BE1A04()
{
  uint64_t v4 = sub_252CBB578();
  uint64_t v6 = v5(v4);
  return v0(v1 + *(int *)(v6 + 36), v3, v2);
}

uint64_t InterpretedStatementResult.outcome.setter()
{
  return sub_252BE1A8C();
}

uint64_t sub_252BE1A8C()
{
  uint64_t v2 = sub_252CBAC10();
  v3(v2);
  sub_252CBAED4();
  return v0(v1);
}

uint64_t (*InterpretedStatementResult.outcome.modify())()
{
  return nullsub_1;
}

void InterpretedStatementResult.init(actionEventId:resultStatementID:originProgramStatementID:toolId:outcome:)()
{
  sub_252AFC8E4();
  uint64_t v21 = v0;
  uint64_t v20 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  uint64_t v9 = *((void *)v6 + 2);
  int v11 = *v10;
  uint64_t v12 = *((void *)v10 + 1);
  uint64_t v13 = *((void *)v10 + 2);
  uint64_t v14 = sub_252D19588();
  uint64_t v15 = (int *)sub_252CBC530(v14);
  uint64_t v16 = (void *)(v5 + v15[8]);
  *uint64_t v16 = 0;
  v16[1] = 0;
  sub_252C0CB04(v3, v5, &qword_26B2320E8);
  uint64_t v17 = v5 + v15[5];
  *(_DWORD *)uint64_t v17 = v7;
  *(void *)(v17 + 8) = v8;
  *(void *)(v17 + 16) = v9;
  uint64_t v18 = v5 + v15[6];
  *(_DWORD *)uint64_t v18 = v11;
  *(void *)(v18 + 8) = v12;
  *(void *)(v18 + 16) = v13;
  uint64_t v19 = v5 + v15[7];
  *(_DWORD *)uint64_t v19 = v11;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v16 = v20;
  v16[1] = v21;
  sub_252C06474();
  sub_252AFC918();
}

void InterpretedStatementResult.init(actionEventId:resultStatementID:originProgramStatementID:originTaskStatementID:toolId:outcome:)()
{
  sub_252CBB1EC();
  uint64_t v25 = v0;
  uint64_t v24 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  uint64_t v9 = *((void *)v6 + 2);
  int v11 = *v10;
  uint64_t v12 = *((void *)v10 + 1);
  uint64_t v13 = *((void *)v10 + 2);
  int v23 = *v14;
  uint64_t v21 = *((void *)v14 + 2);
  uint64_t v22 = *((void *)v14 + 1);
  uint64_t v15 = sub_252D19588();
  uint64_t v16 = (int *)sub_252CBC530(v15);
  uint64_t v17 = (void *)(v5 + v16[8]);
  void *v17 = 0;
  v17[1] = 0;
  sub_252C0CB04(v3, v5, &qword_26B2320E8);
  uint64_t v18 = v5 + v16[5];
  *(_DWORD *)uint64_t v18 = v7;
  *(void *)(v18 + 8) = v8;
  *(void *)(v18 + 16) = v9;
  uint64_t v19 = v5 + v16[6];
  *(_DWORD *)uint64_t v19 = v11;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v13;
  uint64_t v20 = v5 + v16[7];
  *(_DWORD *)uint64_t v20 = v23;
  *(void *)(v20 + 8) = v22;
  *(void *)(v20 + 16) = v21;
  swift_bridgeObjectRelease();
  void *v17 = v24;
  v17[1] = v25;
  sub_252C06474();
  sub_252CBB228();
}

void static InterpretedStatementResult.== infix(_:_:)()
{
  sub_252AFC730();
  sub_252CB9F20();
  sub_252AEDBD0();
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  sub_252AC3A24(&qword_269C441F0);
  sub_252CBB750();
  MEMORY[0x270FA5388](v8);
  sub_252B23278();
  uint64_t v9 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v10 = sub_252AEA368(v9);
  MEMORY[0x270FA5388](v10);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v11);
  sub_252CB8750();
  MEMORY[0x270FA5388](v12);
  sub_252CB8F64();
  sub_252CB7E00(v1, v3, &qword_26B2320E8);
  sub_252CB7E00(v0, v4, &qword_26B2320E8);
  sub_252CBB9C4();
  sub_252CB7E00(v4, v5, &qword_26B2320E8);
  uint64_t v13 = sub_252CB8170(v2);
  if (v15)
  {
    sub_252CB9CE0();
    sub_252CBAF14();
    sub_252CB8170(v5);
    if (v15)
    {
      sub_252B5A4CC(v2, &qword_26B2320E8);
      goto LABEL_11;
    }
LABEL_9:
    sub_252B5A4CC(v2, &qword_269C441F0);
    goto LABEL_53;
  }
  sub_252CBBCD8(v13, v14, &qword_26B2320E8);
  sub_252CB8170(v5);
  if (v15)
  {
    sub_252CB9960();
    sub_252CBA6E8();
    uint64_t v16 = sub_252CBB698();
    v17(v16);
    goto LABEL_9;
  }
  sub_252B7E53C();
  v18();
  sub_252BA62F0((uint64_t)&qword_269C41B28);
  char v19 = sub_252CB9288();
  uint64_t v20 = *(void (**)(void))(v49 + 8);
  sub_252B0012C();
  v20();
  sub_252CB9CE0();
  sub_252CBAF14();
  sub_252B0012C();
  v20();
  sub_252CBC8B4();
  if ((v19 & 1) == 0) {
    goto LABEL_53;
  }
LABEL_11:
  type metadata accessor for InterpretedStatementResult(0);
  sub_252CB92A8();
  if (!v15) {
    goto LABEL_53;
  }
  sub_252CBB9A0();
  if (!v23)
  {
    if (v21) {
      goto LABEL_53;
    }
LABEL_22:
    sub_252CB92A8();
    if (!v15) {
      goto LABEL_53;
    }
    sub_252CBB9A0();
    if (v30)
    {
      if (!v28) {
        goto LABEL_53;
      }
      sub_252CB9D9C(v29);
      if (!v15 || v31 != v32)
      {
        sub_252D1A5D8();
        sub_252B5F6F8();
        if ((v34 & 1) == 0) {
          goto LABEL_53;
        }
      }
    }
    else if (v28)
    {
      goto LABEL_53;
    }
    sub_252CB92A8();
    if (!v15) {
      goto LABEL_53;
    }
    sub_252CBB9A0();
    if (v37)
    {
      if (!v35) {
        goto LABEL_53;
      }
      sub_252CB9D9C(v36);
      if (!v15 || v38 != v39)
      {
        sub_252D1A5D8();
        sub_252B5F6F8();
        if ((v41 & 1) == 0) {
          goto LABEL_53;
        }
      }
    }
    else if (v35)
    {
      goto LABEL_53;
    }
    sub_252CBA8DC();
    if (v44)
    {
      if (!v42) {
        goto LABEL_53;
      }
      sub_252B233A0(v43);
      if (!v15 || v45 != v46)
      {
        sub_252D1A5D8();
        sub_252B5F6F8();
        if ((v48 & 1) == 0) {
          goto LABEL_53;
        }
      }
    }
    else if (v42)
    {
      goto LABEL_53;
    }
    static StatementOutcome.== infix(_:_:)();
    goto LABEL_53;
  }
  if (v21)
  {
    sub_252CB9D9C(v22);
    if (v15 && v24 == v25) {
      goto LABEL_22;
    }
    sub_252D1A5D8();
    sub_252B5F6F8();
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_53:
  sub_252AFC718();
}

uint64_t sub_252BE2080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000252D1DEB0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000252D1DED0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000252D1DEF0 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v6 = a1 == 0x64496C6F6F74 && a2 == 0xE600000000000000;
    if (v6 || (sub_252D1A5D8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      char v8 = sub_252D1A5D8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 5;
      }
      else {
        return 6;
      }
    }
  }
}

unint64_t sub_252BE2300(char a1)
{
  unint64_t result = 0x76456E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x64496C6F6F74;
      break;
    case 5:
      unint64_t result = 0x656D6F6374756FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_252BE23E0()
{
  return sub_252BE2300(*v0);
}

uint64_t sub_252BE23E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BE2080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BE2410(uint64_t a1)
{
  unint64_t v2 = sub_252C0C0AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE244C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C0AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void InterpretedStatementResult.encode(to:)()
{
  sub_252B2330C();
  sub_252CB8F90();
  sub_252AC3A24(&qword_269C45488);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v1);
  sub_252B98154();
  sub_252C0C0AC();
  sub_252AF4784();
  sub_252D19588();
  sub_252BA62F0((uint64_t)&qword_26B231C10);
  sub_252CB90AC();
  if (!v0)
  {
    unint64_t v2 = (int *)type metadata accessor for InterpretedStatementResult(0);
    sub_252CB9C98(v2[5]);
    sub_252B67274();
    sub_252B982A8();
    sub_252CB9C98(v2[6]);
    sub_252B982A8();
    sub_252CB9C98(v2[7]);
    sub_252B982A8();
    sub_252CB8CC4();
    type metadata accessor for StatementOutcome(0);
    sub_252BA62F0((uint64_t)&unk_269C449C8);
    sub_252B982A8();
  }
  uint64_t v3 = sub_252AF4620();
  v4(v3);
  sub_252CBAD48();
  sub_252B232F8();
}

void InterpretedStatementResult.init(from:)()
{
  sub_252AF4380();
  uint64_t v4 = v3;
  type metadata accessor for StatementOutcome(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v5);
  sub_252AF45F0();
  uint64_t v6 = sub_252AC3A24(&qword_26B2320E8);
  uint64_t v7 = sub_252AEA368(v6);
  MEMORY[0x270FA5388](v7);
  sub_252B98858(v8, v24);
  sub_252AC3A24(&qword_269C45498);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_252CB83D0();
  uint64_t v11 = type metadata accessor for InterpretedStatementResult(v10);
  sub_252AEA304();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_252CB96E0();
  uint64_t v14 = sub_252CBBCAC();
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v14, v15, v16, v13);
  sub_252CBB724(*(int *)(v11 + 32));
  uint64_t v26 = v17;
  uint64_t v18 = v4[4];
  sub_252CB8200(v4);
  sub_252C0C0AC();
  sub_252B77644();
  sub_252D1A718();
  if (v0)
  {
    uint64_t v19 = sub_252CBC174();
    _s16IntelligenceFlow17AnySessionMessageVwxx_0(v19);
    sub_252B5A4CC(v1, &qword_26B2320E8);
    if (v4)
    {
      swift_bridgeObjectRelease();
      if (!v2)
      {
LABEL_5:
        if (!v18)
        {
LABEL_7:
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    else if (!v2)
    {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  LOBYTE(v27) = 0;
  sub_252BA62F0((uint64_t)&qword_26B231070);
  sub_252CB9A38();
  sub_252D1A438();
  sub_252C0CB04(v25, v1, &qword_26B2320E8);
  sub_252B674A8();
  sub_252B98B0C();
  sub_252CBB960();
  sub_252CBA21C(v27);
  sub_252CBA7FC();
  sub_252B98B0C();
  sub_252CBB960();
  sub_252CBA21C(v27);
  sub_252CBA5C8();
  sub_252B98B0C();
  sub_252CBB960();
  sub_252CBA21C(v27);
  sub_252CBC2B4();
  uint64_t v20 = sub_252D1A408();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t *v26 = v20;
  v26[1] = v22;
  sub_252BA62F0((uint64_t)&unk_269C449E0);
  sub_252D1A498();
  sub_252B5F658();
  v23();
  sub_252C06474();
  sub_252BA661C();
  _s16IntelligenceFlow17AnySessionMessageVwxx_0((uint64_t)v4);
  sub_252BA6670();
LABEL_8:
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BE2BA0()
{
}

void sub_252BE2BB8()
{
}

void static ActionSuccess.== infix(_:_:)()
{
  sub_252AFC730();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v81 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v8);
  sub_252B98820(v9, v73);
  uint64_t v10 = sub_252AC3A24(&qword_269C454A0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v11);
  sub_252AEDE70();
  uint64_t v82 = v12;
  uint64_t v13 = sub_252AC3A24(&qword_269C41A78);
  uint64_t v14 = sub_252AEA368(v13);
  MEMORY[0x270FA5388](v14);
  sub_252AEDC14();
  uint64_t v78 = v15;
  sub_252B22C04();
  MEMORY[0x270FA5388](v16);
  sub_252AEDDB4();
  uint64_t v79 = v17;
  sub_252B22C04();
  MEMORY[0x270FA5388](v18);
  uint64_t v80 = (uint64_t)&v73 - v19;
  uint64_t v20 = sub_252AEDD78();
  uint64_t v21 = type metadata accessor for ActionSuccess.UndoContext(v20);
  sub_252AEA304();
  MEMORY[0x270FA5388](v22);
  sub_252AC423C();
  uint64_t v23 = sub_252AC3A24(&qword_269C454A8);
  sub_252AEA304();
  MEMORY[0x270FA5388](v24);
  sub_252B5F630();
  uint64_t v25 = sub_252AC3A24(&qword_269C41A68);
  uint64_t v26 = sub_252AEA368(v25);
  MEMORY[0x270FA5388](v26);
  sub_252CB9604();
  MEMORY[0x270FA5388](v27);
  sub_252CB9300();
  MEMORY[0x270FA5388](v28);
  sub_252CBA5A8();
  sub_252CB9954();
  if ((_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) == 0) {
    goto LABEL_35;
  }
  uint64_t v73 = v10;
  uint64_t v29 = type metadata accessor for ActionSuccess(0);
  uint64_t v30 = *(int *)(v29 + 20);
  uint64_t v74 = v7;
  sub_252CB7E00(v7 + v30, v3, &qword_269C41A68);
  uint64_t v75 = v5;
  uint64_t v76 = (int *)v29;
  sub_252CB7E00(v5 + *(int *)(v29 + 20), v0, &qword_269C41A68);
  uint64_t v31 = v2 + *(int *)(v23 + 48);
  sub_252CB7E00(v3, v2, &qword_269C41A68);
  uint64_t v32 = sub_252AEA3DC();
  sub_252CB7E00(v32, v33, &qword_269C41A68);
  sub_252B22A90(v2, 1, v21);
  if (!v34)
  {
    sub_252CB7E00(v2, v1, &qword_269C41A68);
    sub_252B22A90(v31, 1, v21);
    if (!v34)
    {
      sub_252C06474();
      char v39 = _s16IntelligenceFlow15SessionClientIDV2eeoiySbAC_ACtFZ_0();
      if (v39)
      {
        sub_252CB93A8();
        BOOL v42 = v34 && v40 == v41;
        if (v42 || (sub_252D1A5D8() & 1) != 0)
        {
          sub_252CB93A8();
          BOOL v45 = v34 && v43 == v44;
          if (v45 || (sub_252D1A5D8() & 1) != 0)
          {
            sub_252BA6670();
            sub_252B5A4CC(v0, &qword_269C41A68);
            sub_252B5A4CC(v3, &qword_269C41A68);
            sub_252BA6670();
            goto LABEL_23;
          }
        }
      }
      sub_252BA6670();
      sub_252B5A4CC(v0, &qword_269C41A68);
      sub_252B5A4CC(v3, &qword_269C41A68);
      sub_252BA6670();
      uint64_t v38 = sub_252B233D8();
LABEL_34:
      sub_252B5A4CC(v38, v37);
      goto LABEL_35;
    }
    uint64_t v35 = sub_252AEA3DC();
    sub_252B5A4CC(v35, v36);
    sub_252B5A4CC(v3, &qword_269C41A68);
    sub_252BA6670();
LABEL_10:
    uint64_t v37 = &qword_269C454A8;
    uint64_t v38 = v2;
    goto LABEL_34;
  }
  sub_252B5A4CC(v0, &qword_269C41A68);
  sub_252B5A4CC(v3, &qword_269C41A68);
  sub_252B22A90(v31, 1, v21);
  if (!v34) {
    goto LABEL_10;
  }
LABEL_23:
  sub_252B5A4CC(v2, &qword_269C41A68);
  uint64_t v46 = v75;
  uint64_t v47 = v76;
  uint64_t v48 = v74;
  if (*(unsigned __int8 *)(v74 + v76[6]) != *(unsigned __int8 *)(v75 + v76[6])) {
    goto LABEL_35;
  }
  uint64_t v49 = v80;
  sub_252CB7E00(v74 + v76[7], v80, &qword_269C41A78);
  uint64_t v50 = v79;
  sub_252CB7E00(v46 + v47[7], v79, &qword_269C41A78);
  uint64_t v51 = v82;
  uint64_t v52 = v82 + *(int *)(v73 + 48);
  uint64_t v53 = sub_252CBA174();
  sub_252CB7E00(v53, v54, &qword_269C41A78);
  uint64_t v55 = sub_252CBA79C();
  sub_252CB7E00(v55, v56, &qword_269C41A78);
  uint64_t v57 = v81;
  sub_252B22A90(v51, 1, v81);
  if (!v34)
  {
    uint64_t v58 = v78;
    sub_252CB7E00(v51, v78, &qword_269C41A78);
    sub_252B22A90(v52, 1, v57);
    if (!v59)
    {
      uint64_t v60 = v77;
      sub_252C06474();
      static ActionSuccess.FollowUpAction.ExecutableAction.== infix(_:_:)(v58, v60, v61, v62, v63, v64, v65, v66, v73, v74, v75, (uint64_t)v76, v77, v78, v79, v80, v81, v82);
      char v68 = v67;
      sub_252BA6670();
      sub_252B5A4CC(v50, &qword_269C41A78);
      sub_252B5A4CC(v49, &qword_269C41A78);
      sub_252BA6670();
      sub_252B5A4CC(v51, &qword_269C41A78);
      uint64_t v47 = v76;
      if ((v68 & 1) == 0) {
        goto LABEL_35;
      }
      goto LABEL_37;
    }
    sub_252CBC594();
    sub_252CB9960();
    sub_252BA6670();
    goto LABEL_33;
  }
  sub_252B5A4CC(v50, &qword_269C41A78);
  sub_252B5A4CC(v49, &qword_269C41A78);
  sub_252B22A90(v52, 1, v57);
  if (!v34)
  {
LABEL_33:
    uint64_t v37 = &qword_269C454A0;
    uint64_t v38 = v51;
    goto LABEL_34;
  }
  sub_252B5A4CC(v51, &qword_269C41A78);
LABEL_37:
  if (*(unsigned __int8 *)(v48 + v47[8]) == *(unsigned __int8 *)(v46 + v47[8]))
  {
    uint64_t v69 = v47[9];
    if (*(void *)(v48 + v69 + 8))
    {
      if (*(void *)(v46 + v69 + 8))
      {
        sub_252B233A0(v48 + v69);
        if (v34) {
          BOOL v72 = v70 == v71;
        }
        else {
          BOOL v72 = 0;
        }
        if (!v72) {
          sub_252D1A5D8();
        }
      }
    }
  }
LABEL_35:
  sub_252AFC718();
}

void static ToolDisambiguation.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (v4) {
      return;
    }
    goto LABEL_8;
  }
  if (v4)
  {
    BOOL v5 = *a1 == *a2 && v3 == v4;
    if (v5 || (sub_252D1A5D8() & 1) != 0)
    {
LABEL_8:
      sub_252AEA3DC();
      sub_252B1E820();
    }
  }
}

uint64_t static ParameterNotAllowed.== infix(_:_:)(uint64_t a1)
{
  sub_252CB8AB0(a1);
  BOOL v3 = v3 && v1 == v2;
  if (v3 || (sub_252D1A5D8(), uint64_t result = sub_252B5F6F8(), (v5 & 1) != 0))
  {
    uint64_t v6 = type metadata accessor for ParameterNotAllowed(0);
    sub_252CB9E80(v6);
    return (_s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0() & 1) != 0
        && sub_252CBBDB8(*(int *)(v6 + 24));
  }
  return result;
}

uint64_t static ParameterCandidatesNotFound.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_252BE3354(a1, a2, type metadata accessor for ParameterCandidatesNotFound);
}

uint64_t sub_252BE3354(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  sub_252CB8AB0(a1);
  BOOL v6 = v6 && v4 == v5;
  if (!v6 && (sub_252D1A5D8() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a3(0);
  sub_252CB9E80(v7);

  return _s16IntelligenceFlow14MessagePayloadO17ActionWillExecuteV18ToolParameterValueO0J0V2eeoiySbAI_AItFZ_0();
}

uint64_t static ActionRequirement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4 >> 6)
  {
    case 1u:
      if ((v7 & 0xC0) == 0x40) {
        goto LABEL_7;
      }
      goto LABEL_16;
    case 2u:
      if ((v7 & 0xC0) != 0x80) {
        goto LABEL_16;
      }
LABEL_7:
      sub_252CB979C();
      char v8 = v5 == v2;
      break;
    case 3u:
      BOOL v9 = v7 >= 0xC0 && (v6 | v5) == 0;
      if (!v9 || v7 != 192) {
        goto LABEL_16;
      }
      sub_252AD16E4(*(void *)a1, v3, v4);
      uint64_t v10 = sub_252B4C5C0();
      sub_252AD16E4(v10, v11, 192);
      char v8 = 1;
      break;
    default:
      if (v7 > 0x3F)
      {
        sub_252ACE7D0(*(void *)a1, v3, v4);
LABEL_16:
        sub_252ACE7BC(v5, v6, v7);
        sub_252CB979C();
        char v8 = 0;
      }
      else
      {
        v15[0] = *(void *)a1;
        v15[1] = v3;
        char v16 = v4;
        v13[0] = v5;
        v13[1] = v6;
        char v14 = v7;
        sub_252ACE7BC(v5, v6, v7);
        sub_252ACE7BC(v2, v3, v4);
        sub_252ACE7BC(v2, v3, v4);
        sub_252ACE7BC(v5, v6, v7);
        char v8 = static SystemRequirement.== infix(_:_:)(v15, (uint64_t)v13);
        sub_252CB979C();
        sub_252AD16E4(v5, v6, v7);
        sub_252AD16E4(v2, v3, v4);
      }
      break;
  }
  return v8 & 1;
}

void static ValueDisambiguation.== infix(_:_:)()
{
}

uint64_t static ActionFailure.== infix(_:_:)()
{
  static ActionFailure.Failure.== infix(_:_:)();
  return v0 & 1;
}

uint64_t sub_252BE35C8()
{
  return 11;
}

uint64_t sub_252BE35D0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C560();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE360C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C560();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE3648(uint64_t a1)
{
  unint64_t v2 = sub_252C0C2B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3684(uint64_t a1)
{
  unint64_t v2 = sub_252C0C2B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_252BE36C0()
{
  return sub_252BE5D74(*v0);
}

uint64_t sub_252BE36DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BE5A4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BE3704@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_252BE35C8();
  *a1 = result;
  return result;
}

uint64_t sub_252BE372C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C138();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3768(uint64_t a1)
{
  unint64_t v2 = sub_252C0C138();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE37A4(uint64_t a1)
{
  unint64_t v2 = sub_252C0C184();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE37E0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C184();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE381C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C34C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3858(uint64_t a1)
{
  unint64_t v2 = sub_252C0C34C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE3894(uint64_t a1)
{
  unint64_t v2 = sub_252C0C430();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE38D0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C430();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE390C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C3E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3948(uint64_t a1)
{
  unint64_t v2 = sub_252C0C3E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE3984(uint64_t a1)
{
  unint64_t v2 = sub_252C0C47C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE39C0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C47C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE39FC(uint64_t a1)
{
  unint64_t v2 = sub_252C0C398();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3A38(uint64_t a1)
{
  unint64_t v2 = sub_252C0C398();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE3A74(uint64_t a1)
{
  unint64_t v2 = sub_252C0C5AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3AB0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C5AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE3AEC(uint64_t a1)
{
  unint64_t v2 = sub_252C0C4C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3B28(uint64_t a1)
{
  unint64_t v2 = sub_252C0C4C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE3B64(uint64_t a1)
{
  unint64_t v2 = sub_252C0C21C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE3BA0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C21C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ActionOutcome.encode(to:)()
{
  sub_252AF4380();
  sub_252CBB730();
  sub_252AC3A24(&qword_269C454B0);
  sub_252AEDBD0();
  v71[39] = v3;
  v71[40] = v2;
  MEMORY[0x270FA5388](v2);
  sub_252CB8694(v4, v71[0]);
  sub_252AC3A24(&qword_269C454B8);
  sub_252AEDBD0();
  v71[36] = v6;
  v71[37] = v5;
  MEMORY[0x270FA5388](v5);
  sub_252B98874(v7, v71[0]);
  sub_252AC3A24(&qword_269C454C0);
  sub_252AEDBD0();
  v71[33] = v9;
  v71[34] = v8;
  MEMORY[0x270FA5388](v8);
  sub_252CB86B0(v10, v71[0]);
  v71[31] = sub_252AC3A24(&qword_269C454C8);
  sub_252AEDBD0();
  v71[30] = v11;
  MEMORY[0x270FA5388](v12);
  v71[29] = (uint64_t)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[26] = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  sub_252B9857C((uint64_t)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[27] = sub_252AC3A24(&qword_269C454D0);
  sub_252AEDBD0();
  v71[25] = v16;
  MEMORY[0x270FA5388](v17);
  v71[24] = (uint64_t)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[20] = type metadata accessor for ParameterNotAllowed(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v19);
  sub_252B9857C((uint64_t)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[22] = sub_252AC3A24(&qword_269C454D8);
  sub_252AEDBD0();
  v71[21] = v21;
  MEMORY[0x270FA5388](v22);
  sub_252B9857C((uint64_t)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[18] = sub_252AC3A24(&qword_269C454E0);
  sub_252AEDBD0();
  v71[17] = v24;
  MEMORY[0x270FA5388](v25);
  v71[16] = (uint64_t)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[13] = type metadata accessor for ParameterConfirmation(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v27);
  sub_252B9857C((uint64_t)v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[14] = sub_252AC3A24(&qword_269C454E8);
  sub_252AEDBD0();
  v71[12] = v29;
  MEMORY[0x270FA5388](v30);
  v71[11] = (uint64_t)v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[9] = type metadata accessor for ParameterNeedsValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v32);
  sub_252B9857C((uint64_t)v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[8] = sub_252AC3A24(&qword_269C454F0);
  sub_252AEDBD0();
  v71[7] = v34;
  MEMORY[0x270FA5388](v35);
  sub_252B9857C((uint64_t)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[5] = sub_252AC3A24(&qword_269C454F8);
  sub_252AEDBD0();
  v71[4] = v37;
  MEMORY[0x270FA5388](v38);
  sub_252B9857C((uint64_t)v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  void v71[2] = sub_252AC3A24(&qword_269C45500);
  sub_252AEDBD0();
  v71[1] = v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = type metadata accessor for ActionSuccess(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = sub_252B4C750();
  type metadata accessor for ActionOutcome(v44);
  sub_252AEA304();
  MEMORY[0x270FA5388](v45);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C45508);
  sub_252AEDBD0();
  v71[42] = v46;
  v71[43] = v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)v71 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (char *)v0[4];
  sub_252CB88F4(v0);
  sub_252C0C138();
  v71[41] = (uint64_t)v49;
  sub_252CBBA80();
  sub_252BA661C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CB9730();
      sub_252C0C560();
      sub_252CB838C();
      sub_252CB9D1C();
      sub_252CB93C0();
      sub_252B5F53C();
      v54();
      sub_252B5F53C();
      v55();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 2u:
      sub_252CBC888();
      sub_252C0C4C8();
      sub_252CB9AD0();
      BOOL v72 = v50;
      uint64_t v73 = v49;
      uint64_t v74 = v42;
      sub_252C0C514();
      sub_252CBAD14();
      sub_252B5F53C();
      v56();
      sub_252B5F53C();
      v57();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3u:
      sub_252CB8814();
      LOBYTE(v72) = 3;
      sub_252C0C47C();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45158);
      sub_252CB8F74();
      sub_252B5F53C();
      v58();
      goto LABEL_10;
    case 4u:
      sub_252CB8814();
      LOBYTE(v72) = 4;
      sub_252C0C430();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45148);
      sub_252CB8F74();
      sub_252B5F53C();
      v59();
      goto LABEL_10;
    case 5u:
      sub_252CB9AA4();
      sub_252C0C3E4();
      sub_252CB9094();
      sub_252CB9E28();
      sub_252CBACEC();
      sub_252B5F53C();
      v60();
      sub_252B5F53C();
      v61();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 6u:
      sub_252CB8814();
      LOBYTE(v72) = 6;
      sub_252C0C398();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45560);
      sub_252CB8F74();
      sub_252B5F53C();
      v62();
      goto LABEL_10;
    case 7u:
      sub_252CB8814();
      LOBYTE(v72) = 7;
      sub_252C0C34C();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45550);
      sub_252CB8F74();
      sub_252B5F53C();
      v63();
LABEL_10:
      sub_252BA6670();
      uint64_t v52 = sub_252B7E4CC();
      goto LABEL_11;
    case 8u:
      sub_252CBC780();
      sub_252C0C2B4();
      sub_252CB9AD0();
      BOOL v72 = v49;
      uint64_t v73 = (char *)v42;
      LOBYTE(v74) = (_BYTE)v50;
      sub_252C0C300();
      sub_252CBB4D8();
      sub_252B5F53C();
      v69();
      sub_252B5F53C();
      v70();
      sub_252AD16E4((uint64_t)v49, v42, (char)v50);
      goto LABEL_16;
    case 9u:
      uint64_t v64 = *v1;
      LOBYTE(v72) = 9;
      sub_252C0C21C();
      sub_252CB8424();
      BOOL v72 = v64;
      sub_252C0C268();
      sub_252CBB490();
      sub_252B5F53C();
      v65();
      sub_252CB94A4();
      v66();
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 0xAu:
      sub_252CBBBB4();
      sub_252C0C184();
      sub_252CBA648();
      sub_252CBC5F0();
      sub_252CBB4B4();
      sub_252B5F53C();
      v67();
      sub_252B5F53C();
      v68();
      sub_252CBB914();
      goto LABEL_16;
    default:
      sub_252C06474();
      LOBYTE(v72) = 0;
      sub_252C0C5AC();
      sub_252CBAE10();
      sub_252BA62F0((uint64_t)&unk_269C455A0);
      sub_252CB93C0();
      sub_252B5F53C();
      v51();
      sub_252BA6670();
      uint64_t v52 = sub_252B98E58();
LABEL_11:
      v53(v52);
LABEL_16:
      sub_252CB8A3C();
      sub_252AF4368();
      return;
  }
}

void ActionOutcome.init(from:)()
{
  sub_252AF4380();
  unint64_t v4 = (unint64_t)v3;
  v86[42] = v5;
  v86[23] = sub_252AC3A24(&qword_269C455A8);
  sub_252AEDBD0();
  v86[45] = v6;
  MEMORY[0x270FA5388](v7);
  sub_252CB8A78(v8, v86[0]);
  v86[22] = sub_252AC3A24(&qword_269C455B0);
  sub_252AEDBD0();
  v86[31] = v9;
  MEMORY[0x270FA5388](v10);
  sub_252CB86B0(v11, v86[0]);
  v86[21] = sub_252AC3A24(&qword_269C455B8);
  sub_252AEDBD0();
  v86[10] = v12;
  MEMORY[0x270FA5388](v13);
  sub_252B9857C((uint64_t)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[20] = sub_252AC3A24(&qword_269C455C0);
  sub_252AEDBD0();
  v86[30] = v15;
  MEMORY[0x270FA5388](v16);
  sub_252B9857C((uint64_t)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[19] = sub_252AC3A24(&qword_269C455C8);
  sub_252AEDBD0();
  v86[29] = v18;
  MEMORY[0x270FA5388](v19);
  sub_252B9857C((uint64_t)v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[18] = sub_252AC3A24(&qword_269C455D0);
  sub_252AEDBD0();
  v86[44] = v21;
  MEMORY[0x270FA5388](v22);
  sub_252B9857C((uint64_t)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[16] = sub_252AC3A24(&qword_269C455D8);
  sub_252AEDBD0();
  v86[28] = v24;
  MEMORY[0x270FA5388](v25);
  sub_252B2347C(v26, v86[0]);
  v86[17] = sub_252AC3A24(&qword_269C455E0);
  sub_252AEDBD0();
  v86[27] = v27;
  MEMORY[0x270FA5388](v28);
  sub_252B9857C((uint64_t)v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[15] = sub_252AC3A24(&qword_269C455E8);
  sub_252AEDBD0();
  v86[26] = v30;
  MEMORY[0x270FA5388](v31);
  sub_252B9857C((uint64_t)v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[14] = sub_252AC3A24(&qword_269C455F0);
  sub_252AEDBD0();
  v86[25] = v33;
  MEMORY[0x270FA5388](v34);
  sub_252B9857C((uint64_t)v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[13] = sub_252AC3A24(&qword_269C455F8);
  sub_252AEDBD0();
  v86[24] = v36;
  MEMORY[0x270FA5388](v37);
  sub_252B9857C((uint64_t)v86 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_252AC3A24(&qword_269C45600);
  sub_252AEDBD0();
  v86[47] = v40;
  v86[48] = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = sub_252B4C76C();
  v86[46] = type metadata accessor for ActionOutcome(v41);
  sub_252AEA304();
  MEMORY[0x270FA5388](v42);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v43);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v44);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v45);
  v86[43] = (uint64_t)v86 - v46;
  sub_252B22C04();
  MEMORY[0x270FA5388](v47);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v48);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v49);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v50);
  sub_252CB8750();
  MEMORY[0x270FA5388](v51);
  sub_252CB8500();
  MEMORY[0x270FA5388](v52);
  sub_252CB8954();
  MEMORY[0x270FA5388](v53);
  sub_252CB9300();
  MEMORY[0x270FA5388](v54);
  uint64_t v55 = *(void *)(v4 + 32);
  uint64_t v88 = (void *)v4;
  sub_252B5FD8C((void *)v4);
  sub_252C0C138();
  uint64_t v87 = v2;
  sub_252CB9A44();
  if (v0) {
    goto LABEL_17;
  }
  sub_252CB940C();
  sub_252CBBD48();
  if (!v56 || (uint64_t v57 = sub_252CB9908(), sub_252B5F440(v57), sub_252CBC490(), v55 != v4 >> 1))
  {
    sub_252D1A308();
    sub_252CB86D8();
    sub_252CBC484();
    sub_252AC3A24(&qword_269C42E78);
    sub_252CBB278();
    sub_252B77578();
    sub_252B0014C();
    uint64_t v60 = sub_252CB8498();
    v61(v60);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252CB8D98();
    v62();
LABEL_17:
    uint64_t v73 = (uint64_t)v88;
    goto LABEL_18;
  }
  switch(v1)
  {
    case 1:
      char v89 = 1;
      sub_252C0C560();
      sub_252CB825C();
      sub_252C0B5F8();
      sub_252CB91B0();
      sub_252B5F53C();
      v63();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v64();
      sub_252CB8E80();
      goto LABEL_19;
    case 2:
      char v89 = 2;
      sub_252C0C4C8();
      sub_252CB825C();
      sub_252C0C6DC();
      sub_252CB91B0();
      sub_252B5F53C();
      v65();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v66();
      sub_252CB9DAC();
      goto LABEL_19;
    case 3:
      char v89 = 3;
      sub_252C0C47C();
      sub_252CB825C();
      type metadata accessor for ParameterNeedsValue(0);
      sub_252BA62F0((uint64_t)&unk_269C451A8);
      sub_252CB918C();
      sub_252B5F53C();
      v74();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v75();
      goto LABEL_19;
    case 4:
      char v89 = 4;
      sub_252C0C430();
      sub_252CB825C();
      type metadata accessor for ParameterConfirmation(0);
      sub_252BA62F0((uint64_t)&unk_269C451A0);
      sub_252CB96A4();
      sub_252B5F53C();
      v76();
      swift_unknownObjectRelease();
      sub_252CB8E20();
      v77();
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 5:
      char v89 = 5;
      sub_252C0C3E4();
      sub_252CB825C();
      sub_252C0B5AC();
      sub_252CBA6A0();
      uint64_t v78 = sub_252CB8C3C();
      v79(v78);
      swift_unknownObjectRelease();
      sub_252B5F53C();
      v80();
      sub_252CB8BD8();
      goto LABEL_19;
    case 6:
      char v89 = 6;
      sub_252C0C398();
      sub_252CB825C();
      type metadata accessor for ParameterNotAllowed(0);
      sub_252BA62F0((uint64_t)&unk_269C45628);
      sub_252CB9100();
      sub_252B5F53C();
      v67();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v68();
      goto LABEL_19;
    case 7:
      char v89 = 7;
      sub_252C0C34C();
      sub_252CB825C();
      type metadata accessor for ParameterCandidatesNotFound(0);
      sub_252BA62F0((uint64_t)&unk_269C45620);
      sub_252CB9100();
      sub_252B5F53C();
      v69();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v70();
      goto LABEL_19;
    case 8:
      char v89 = 8;
      sub_252C0C2B4();
      sub_252CB825C();
      sub_252C0C690();
      sub_252CB9124();
      sub_252B5F53C();
      v71();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v72();
      sub_252CB9EDC();
      goto LABEL_19;
    case 9:
      char v89 = 9;
      sub_252C0C21C();
      sub_252CB825C();
      sub_252C0C644();
      sub_252CB9124();
      sub_252B5F53C();
      v81();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v82();
      sub_252CBA424();
      goto LABEL_19;
    case 10:
      char v89 = 10;
      sub_252C0C184();
      sub_252CB825C();
      sub_252C0C5F8();
      sub_252CBA674();
      sub_252B983F0();
      v83();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v84();
      sub_252CB9E9C();
      goto LABEL_19;
    default:
      char v89 = 0;
      sub_252C0C5AC();
      sub_252CB825C();
      type metadata accessor for ActionSuccess(0);
      sub_252BA62F0((uint64_t)&unk_269C45638);
      sub_252CB918C();
      sub_252B5F53C();
      v58();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v59();
LABEL_19:
      swift_storeEnumTagMultiPayload();
LABEL_20:
      sub_252C06474();
      uint64_t v85 = (uint64_t)v88;
      sub_252C06474();
      uint64_t v73 = v85;
      break;
  }
LABEL_18:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v73);
  sub_252CB9FC4();
  sub_252AF4368();
}

uint64_t sub_252BE5A4C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v4 || (sub_252CB9724(), (sub_252CB845C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0xD000000000000012 && (sub_252CB966C((uint64_t)"actionConfirmation"), v4) {
         || (sub_252CB845C() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v3 == 0xD000000000000012 && (sub_252CB966C((uint64_t)"toolDisambiguation"), v4) {
         || (sub_252CB845C() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (v3 == 0xD000000000000013 && (sub_252CB966C((uint64_t)"parameterNeedsValue"), v4) {
         || (sub_252CB845C() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (v3 == 0xD000000000000015 && (sub_252CBA7D8(), v4) || (sub_252CB845C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (v3 == 0xD000000000000017 && (sub_252CBA7D8(), v4) || (sub_252CB845C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (v3 == 0xD000000000000013 && (sub_252CB966C((uint64_t)"parameterNotAllowed"), v4) {
         || (sub_252CB845C() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (v3 == 0xD00000000000001BLL && (sub_252CBA7D8(), v4) || (sub_252CB845C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (v3 == 0xD000000000000011 && (sub_252CBA7D8(), v4) || (sub_252CB845C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (v3 == 0xD000000000000013 && (sub_252CB966C((uint64_t)"valueDisambiguation"), v4) {
         || (sub_252CB845C() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (v3 == 0x6572756C696166 && v2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    sub_252CB845C();
    sub_252CB8EFC();
    if (v3) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

unint64_t sub_252BE5D74(char a1)
{
  unint64_t result = 0x73736563637573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 6:
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x6572756C696166;
      break;
    default:
      return result;
  }
  return result;
}

void sub_252BE5EBC()
{
}

void sub_252BE5ED4()
{
}

uint64_t sub_252BE5EF0(uint64_t a1)
{
  unint64_t v2 = sub_252C0CA20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE5F2C(uint64_t a1)
{
  unint64_t v2 = sub_252C0CA20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE5F68(uint64_t a1)
{
  unint64_t v2 = sub_252C0C80C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE5FA4(uint64_t a1)
{
  unint64_t v2 = sub_252C0C80C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE5FE0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C728();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE601C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C728();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE6058(uint64_t a1)
{
  unint64_t v2 = sub_252C0C774();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE6094(uint64_t a1)
{
  unint64_t v2 = sub_252C0C774();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE60D0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C858();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE610C(uint64_t a1)
{
  unint64_t v2 = sub_252C0C858();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE6148(uint64_t a1)
{
  unint64_t v2 = sub_252C0C93C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE6184(uint64_t a1)
{
  unint64_t v2 = sub_252C0C93C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE61C0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C8F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE61FC(uint64_t a1)
{
  unint64_t v2 = sub_252C0C8F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE6238(uint64_t a1)
{
  unint64_t v2 = sub_252C0C988();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE6274(uint64_t a1)
{
  unint64_t v2 = sub_252C0C988();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE62B0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C8A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE62EC(uint64_t a1)
{
  unint64_t v2 = sub_252C0C8A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE6328(uint64_t a1)
{
  unint64_t v2 = sub_252C0CA6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE6364(uint64_t a1)
{
  unint64_t v2 = sub_252C0CA6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE63A0(uint64_t a1)
{
  unint64_t v2 = sub_252C0C9D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE63DC(uint64_t a1)
{
  unint64_t v2 = sub_252C0C9D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_252BE6418(uint64_t a1)
{
  unint64_t v2 = sub_252C0C7C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE6454(uint64_t a1)
{
  unint64_t v2 = sub_252C0C7C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void StatementOutcome.encode(to:)()
{
  sub_252AF4380();
  sub_252CBB730();
  sub_252AC3A24(&qword_269C45640);
  sub_252AEDBD0();
  v71[39] = v3;
  v71[40] = v2;
  MEMORY[0x270FA5388](v2);
  sub_252CB8694(v4, v71[0]);
  sub_252AC3A24(&qword_269C45648);
  sub_252AEDBD0();
  v71[36] = v6;
  v71[37] = v5;
  MEMORY[0x270FA5388](v5);
  sub_252B98874(v7, v71[0]);
  sub_252AC3A24(&qword_269C45650);
  sub_252AEDBD0();
  v71[33] = v9;
  v71[34] = v8;
  MEMORY[0x270FA5388](v8);
  sub_252CB86B0(v10, v71[0]);
  v71[31] = sub_252AC3A24(&qword_269C45658);
  sub_252AEDBD0();
  v71[30] = v11;
  MEMORY[0x270FA5388](v12);
  v71[29] = (uint64_t)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[26] = type metadata accessor for ParameterCandidatesNotFound(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v14);
  sub_252B9857C((uint64_t)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[27] = sub_252AC3A24(&qword_269C45660);
  sub_252AEDBD0();
  v71[25] = v16;
  MEMORY[0x270FA5388](v17);
  v71[24] = (uint64_t)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[20] = type metadata accessor for ParameterNotAllowed(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v19);
  sub_252B9857C((uint64_t)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[22] = sub_252AC3A24(&qword_269C45668);
  sub_252AEDBD0();
  v71[21] = v21;
  MEMORY[0x270FA5388](v22);
  sub_252B9857C((uint64_t)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[18] = sub_252AC3A24(&qword_269C45670);
  sub_252AEDBD0();
  v71[17] = v24;
  MEMORY[0x270FA5388](v25);
  v71[16] = (uint64_t)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[13] = type metadata accessor for ParameterConfirmation(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v27);
  sub_252B9857C((uint64_t)v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[14] = sub_252AC3A24(&qword_269C45678);
  sub_252AEDBD0();
  v71[12] = v29;
  MEMORY[0x270FA5388](v30);
  v71[11] = (uint64_t)v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[9] = type metadata accessor for ParameterNeedsValue(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v32);
  sub_252B9857C((uint64_t)v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[8] = sub_252AC3A24(&qword_269C45680);
  sub_252AEDBD0();
  v71[7] = v34;
  MEMORY[0x270FA5388](v35);
  sub_252B9857C((uint64_t)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71[5] = sub_252AC3A24(&qword_269C45688);
  sub_252AEDBD0();
  v71[4] = v37;
  MEMORY[0x270FA5388](v38);
  sub_252B9857C((uint64_t)v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  void v71[2] = sub_252AC3A24(&qword_269C45690);
  sub_252AEDBD0();
  v71[1] = v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = type metadata accessor for ActionSuccess(0);
  sub_252AEA304();
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = sub_252B4C750();
  type metadata accessor for StatementOutcome(v44);
  sub_252AEA304();
  MEMORY[0x270FA5388](v45);
  sub_252AF45D8();
  sub_252AC3A24(&qword_269C45698);
  sub_252AEDBD0();
  v71[42] = v46;
  v71[43] = v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)v71 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (char *)v0[4];
  sub_252CB88F4(v0);
  sub_252C0C728();
  v71[41] = (uint64_t)v49;
  sub_252CBBA80();
  sub_252BA661C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_252CB9730();
      sub_252C0CA20();
      sub_252CB838C();
      sub_252CB9D1C();
      sub_252CB93C0();
      sub_252B5F53C();
      v54();
      sub_252B5F53C();
      v55();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 2u:
      sub_252CBC888();
      sub_252C0C9D4();
      sub_252CB9AD0();
      BOOL v72 = v50;
      uint64_t v73 = v49;
      uint64_t v74 = v42;
      sub_252C0C514();
      sub_252CBAD14();
      sub_252B5F53C();
      v56();
      sub_252B5F53C();
      v57();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3u:
      sub_252CB8814();
      LOBYTE(v72) = 3;
      sub_252C0C988();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45158);
      sub_252CB8F74();
      sub_252B5F53C();
      v58();
      goto LABEL_10;
    case 4u:
      sub_252CB8814();
      LOBYTE(v72) = 4;
      sub_252C0C93C();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45148);
      sub_252CB8F74();
      sub_252B5F53C();
      v59();
      goto LABEL_10;
    case 5u:
      sub_252CB9AA4();
      sub_252C0C8F0();
      sub_252CB9094();
      sub_252CB9E28();
      sub_252CBACEC();
      sub_252B5F53C();
      v60();
      sub_252B5F53C();
      v61();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 6u:
      sub_252CB8814();
      LOBYTE(v72) = 6;
      sub_252C0C8A4();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45560);
      sub_252CB8F74();
      sub_252B5F53C();
      v62();
      goto LABEL_10;
    case 7u:
      sub_252CB8814();
      LOBYTE(v72) = 7;
      sub_252C0C858();
      sub_252CB838C();
      sub_252BA62F0((uint64_t)&unk_269C45550);
      sub_252CB8F74();
      sub_252B5F53C();
      v63();
LABEL_10:
      sub_252BA6670();
      uint64_t v52 = sub_252B7E4CC();
      goto LABEL_11;
    case 8u:
      sub_252CBC780();
      sub_252C0C80C();
      sub_252CB9AD0();
      BOOL v72 = v49;
      uint64_t v73 = (char *)v42;
      LOBYTE(v74) = (_BYTE)v50;
      sub_252C0C300();
      sub_252CBB4D8();
      sub_252B5F53C();
      v69();
      sub_252B5F53C();
      v70();
      sub_252AD16E4((uint64_t)v49, v42, (char)v50);
      goto LABEL_16;
    case 9u:
      uint64_t v64 = *v1;
      LOBYTE(v72) = 9;
      sub_252C0C7C0();
      sub_252CB8424();
      BOOL v72 = v64;
      sub_252C0C268();
      sub_252CBB490();
      sub_252B5F53C();
      v65();
      sub_252CB94A4();
      v66();
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 0xAu:
      sub_252CBBBB4();
      sub_252C0C774();
      sub_252CBA648();
      sub_252CBC5F0();
      sub_252CBB4B4();
      sub_252B5F53C();
      v67();
      sub_252B5F53C();
      v68();
      sub_252CBB914();
      goto LABEL_16;
    default:
      sub_252C06474();
      LOBYTE(v72) = 0;
      sub_252C0CA6C();
      sub_252CBAE10();
      sub_252BA62F0((uint64_t)&unk_269C455A0);
      sub_252CB93C0();
      sub_252B5F53C();
      v51();
      sub_252BA6670();
      uint64_t v52 = sub_252B98E58();
LABEL_11:
      v53(v52);
LABEL_16:
      sub_252CB8A3C();
      sub_252AF4368();
      return;
  }
}

void StatementOutcome.init(from:)()
{
  sub_252AF4380();
  unint64_t v4 = (unint64_t)v3;
  v86[42] = v5;
  v86[23] = sub_252AC3A24(&qword_269C45700);
  sub_252AEDBD0();
  v86[45] = v6;
  MEMORY[0x270FA5388](v7);
  sub_252CB8A78(v8, v86[0]);
  v86[22] = sub_252AC3A24(&qword_269C45708);
  sub_252AEDBD0();
  v86[31] = v9;
  MEMORY[0x270FA5388](v10);
  sub_252CB86B0(v11, v86[0]);
  v86[21] = sub_252AC3A24(&qword_269C45710);
  sub_252AEDBD0();
  v86[10] = v12;
  MEMORY[0x270FA5388](v13);
  sub_252B9857C((uint64_t)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[20] = sub_252AC3A24(&qword_269C45718);
  sub_252AEDBD0();
  v86[30] = v15;
  MEMORY[0x270FA5388](v16);
  sub_252B9857C((uint64_t)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[19] = sub_252AC3A24(&qword_269C45720);
  sub_252AEDBD0();
  v86[29] = v18;
  MEMORY[0x270FA5388](v19);
  sub_252B9857C((uint64_t)v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[18] = sub_252AC3A24(&qword_269C45728);
  sub_252AEDBD0();
  v86[44] = v21;
  MEMORY[0x270FA5388](v22);
  sub_252B9857C((uint64_t)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[16] = sub_252AC3A24(&qword_269C45730);
  sub_252AEDBD0();
  v86[28] = v24;
  MEMORY[0x270FA5388](v25);
  sub_252B2347C(v26, v86[0]);
  v86[17] = sub_252AC3A24(&qword_269C45738);
  sub_252AEDBD0();
  v86[27] = v27;
  MEMORY[0x270FA5388](v28);
  sub_252B9857C((uint64_t)v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[15] = sub_252AC3A24(&qword_269C45740);
  sub_252AEDBD0();
  v86[26] = v30;
  MEMORY[0x270FA5388](v31);
  sub_252B9857C((uint64_t)v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[14] = sub_252AC3A24(&qword_269C45748);
  sub_252AEDBD0();
  v86[25] = v33;
  MEMORY[0x270FA5388](v34);
  sub_252B9857C((uint64_t)v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86[13] = sub_252AC3A24(&qword_269C45750);
  sub_252AEDBD0();
  v86[24] = v36;
  MEMORY[0x270FA5388](v37);
  sub_252B9857C((uint64_t)v86 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_252AC3A24(&qword_269C45758);
  sub_252AEDBD0();
  v86[47] = v40;
  v86[48] = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = sub_252B4C76C();
  v86[46] = type metadata accessor for StatementOutcome(v41);
  sub_252AEA304();
  MEMORY[0x270FA5388](v42);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v43);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v44);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v45);
  v86[43] = (uint64_t)v86 - v46;
  sub_252B22C04();
  MEMORY[0x270FA5388](v47);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v48);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v49);
  sub_252AEDC04();
  MEMORY[0x270FA5388](v50);
  sub_252CB8750();
  MEMORY[0x270FA5388](v51);
  sub_252CB8500();
  MEMORY[0x270FA5388](v52);
  sub_252CB8954();
  MEMORY[0x270FA5388](v53);
  sub_252CB9300();
  MEMORY[0x270FA5388](v54);
  uint64_t v55 = *(void *)(v4 + 32);
  uint64_t v88 = (void *)v4;
  sub_252B5FD8C((void *)v4);
  sub_252C0C728();
  uint64_t v87 = v2;
  sub_252CB9A44();
  if (v0) {
    goto LABEL_17;
  }
  sub_252CB940C();
  sub_252CBBD48();
  if (!v56 || (uint64_t v57 = sub_252CB9908(), sub_252B5F440(v57), sub_252CBC490(), v55 != v4 >> 1))
  {
    sub_252D1A308();
    sub_252CB86D8();
    sub_252CBC484();
    sub_252AC3A24(&qword_269C42E78);
    sub_252CBB278();
    sub_252B77578();
    sub_252B0014C();
    uint64_t v60 = sub_252CB8498();
    v61(v60);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_252CB8D98();
    v62();
LABEL_17:
    uint64_t v73 = (uint64_t)v88;
    goto LABEL_18;
  }
  switch(v1)
  {
    case 1:
      char v89 = 1;
      sub_252C0CA20();
      sub_252CB825C();
      sub_252C0B5F8();
      sub_252CB91B0();
      sub_252B5F53C();
      v63();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v64();
      sub_252CB8E80();
      goto LABEL_19;
    case 2:
      char v89 = 2;
      sub_252C0C9D4();
      sub_252CB825C();
      sub_252C0C6DC();
      sub_252CB91B0();
      sub_252B5F53C();
      v65();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v66();
      sub_252CB9DAC();
      goto LABEL_19;
    case 3:
      char v89 = 3;
      sub_252C0C988();
      sub_252CB825C();
      type metadata accessor for ParameterNeedsValue(0);
      sub_252BA62F0((uint64_t)&unk_269C451A8);
      sub_252CB918C();
      sub_252B5F53C();
      v74();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v75();
      goto LABEL_19;
    case 4:
      char v89 = 4;
      sub_252C0C93C();
      sub_252CB825C();
      type metadata accessor for ParameterConfirmation(0);
      sub_252BA62F0((uint64_t)&unk_269C451A0);
      sub_252CB96A4();
      sub_252B5F53C();
      v76();
      swift_unknownObjectRelease();
      sub_252CB8E20();
      v77();
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 5:
      char v89 = 5;
      sub_252C0C8F0();
      sub_252CB825C();
      sub_252C0B5AC();
      sub_252CBA6A0();
      uint64_t v78 = sub_252CB8C3C();
      v79(v78);
      swift_unknownObjectRelease();
      sub_252B5F53C();
      v80();
      sub_252CB8BD8();
      goto LABEL_19;
    case 6:
      char v89 = 6;
      sub_252C0C8A4();
      sub_252CB825C();
      type metadata accessor for ParameterNotAllowed(0);
      sub_252BA62F0((uint64_t)&unk_269C45628);
      sub_252CB9100();
      sub_252B5F53C();
      v67();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v68();
      goto LABEL_19;
    case 7:
      char v89 = 7;
      sub_252C0C858();
      sub_252CB825C();
      type metadata accessor for ParameterCandidatesNotFound(0);
      sub_252BA62F0((uint64_t)&unk_269C45620);
      sub_252CB9100();
      sub_252B5F53C();
      v69();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v70();
      goto LABEL_19;
    case 8:
      char v89 = 8;
      sub_252C0C80C();
      sub_252CB825C();
      sub_252C0C690();
      sub_252CB9124();
      sub_252B5F53C();
      v71();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v72();
      sub_252CB9EDC();
      goto LABEL_19;
    case 9:
      char v89 = 9;
      sub_252C0C7C0();
      sub_252CB825C();
      sub_252C0C644();
      sub_252CB9124();
      sub_252B5F53C();
      v81();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v82();
      sub_252CBA424();
      goto LABEL_19;
    case 10:
      char v89 = 10;
      sub_252C0C774();
      sub_252CB825C();
      sub_252C0C5F8();
      sub_252CBA674();
      sub_252B983F0();
      v83();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v84();
      sub_252CB9E9C();
      goto LABEL_19;
    default:
      char v89 = 0;
      sub_252C0CA6C();
      sub_252CB825C();
      type metadata accessor for ActionSuccess(0);
      sub_252BA62F0((uint64_t)&unk_269C45638);
      sub_252CB918C();
      sub_252B5F53C();
      v58();
      swift_unknownObjectRelease();
      sub_252B0012C();
      v59();
LABEL_19:
      swift_storeEnumTagMultiPayload();
LABEL_20:
      sub_252C06474();
      uint64_t v85 = (uint64_t)v88;
      sub_252C06474();
      uint64_t v73 = v85;
      break;
  }
LABEL_18:
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v73);
  sub_252CB9FC4();
  sub_252AF4368();
}

void sub_252BE8300()
{
}

void sub_252BE8318()
{
}

uint64_t StatementID.index.getter()
{
  return *v0;
}

uint64_t StatementID.index.setter(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

uint64_t (*StatementID.index.modify())()
{
  return nullsub_1;
}

uint64_t StatementID.name.getter()
{
  return sub_252AEA3DC();
}

uint64_t StatementID.name.setter()
{
  sub_252B4C958();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*StatementID.name.modify())()
{
  return nullsub_1;
}

uint64_t StatementID.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  return result;
}

BOOL static StatementID.< infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 < *a2;
}

uint64_t StatementID.description.getter()
{
  if (*(void *)(v0 + 16)) {
    sub_252D19DD8();
  }
  sub_252D1A268();
  swift_bridgeObjectRelease();
  sub_252CBB388();
  uint64_t v3 = v1;
  sub_252D1A5B8();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252D19DD8();
  swift_bridgeObjectRelease();
  sub_252CBA700();
  return v3;
}

uint64_t StatementID.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_252D1A6D8();
  if (!v1) {
    return sub_252D1A6C8();
  }
  sub_252D1A6C8();
  swift_bridgeObjectRetain();
  sub_252AFCA44();
  sub_252D19DB8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_252BE8580(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_252D1A5D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_252D1A5D8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_252BE8658(char a1)
{
  if (a1) {
    return 1701667182;
  }
  else {
    return 0x7865646E69;
  }
}

uint64_t sub_252BE8684()
{
  return sub_252BE8658(*v0);
}

uint64_t sub_252BE868C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_252BE8580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_252BE86B4(uint64_t a1)
{
  unint64_t v2 = sub_252C0CAB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_252BE86F0(uint64_t a1)
{
  unint64_t v2 = sub_252C0CAB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void StatementID.encode(to:)()
{
  sub_252AF4380();
  unint64_t v2 = v1;
  sub_252AC3A24(&qword_269C45760);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B23278();
  sub_252CB88F4(v2);
  sub_252C0CAB8();
  sub_252CBC714();
  sub_252D1A738();
  sub_252D1A588();
  if (!v0)
  {
    sub_252CBA818();
    sub_252CB8CC4();
  }
  sub_252B5F67C();
  v4();
  sub_252B5FBC4();
  sub_252AF4368();
}

uint64_t StatementID.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_252AF455C();
  sub_252D1A6D8();
  sub_252D1A6C8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_252D19DB8();
    swift_bridgeObjectRelease();
  }
  return sub_252D1A6E8();
}

void StatementID.init(from:)()
{
  sub_252AF4380();
  sub_252CB9314();
  sub_252AC3A24(&qword_269C45770);
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v3);
  sub_252B5F60C();
  sub_252C0CAB8();
  sub_252B5F908();
  if (!v1)
  {
    sub_252CBBF88();
    int v4 = sub_252D1A4A8();
    sub_252CBC65C();
    sub_252CBBF88();
    uint64_t v5 = sub_252D1A408();
    uint64_t v7 = v6;
    sub_252B5F658();
    v8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)uint64_t v2 = v4;
    *(void *)(v2 + 8) = v5;
    *(void *)(v2 + 16) = v7;
  }
  _s16IntelligenceFlow17AnySessionMessageVwxx_0(v0);
  swift_bridgeObjectRelease();
  sub_252B98814();
  sub_252AF4368();
}

void sub_252BE89FC()
{
}

void sub_252BE8A14()
{
}

uint64_t sub_252BE8A38()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_252D1A6A8();
  sub_252D1A6D8();
  sub_252D1A6C8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_252D19DB8();
    swift_bridgeObjectRelease();
  }
  return sub_252D1A6E8();
}

uint64_t sub_252BE8AC4@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  return StatementID.init(integerLiteral:)(*a1, a2);
}

uint64_t sub_252BE8AD0(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_252BE8B30(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_252BE8AE8);
}

BOOL sub_252BE8AE8(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return a4 >= a1;
}

uint64_t sub_252BE8AF4(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_252BE8B30(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_252BE8B0C);
}

BOOL sub_252BE8B0C(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return a1 >= a4;
}

uint64_t sub_252BE8B18(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_252BE8B30(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_252BE8B54);
}

uint64_t sub_252BE8B30(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*a1, *((void *)a1 + 1), *((void *)a1 + 2), *a2, *((void *)a2 + 1), *((void *)a2 + 2));
}

BOOL sub_252BE8B54(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return a4 < a1;
}

uint64_t ActionSuccess.returnValue.getter()
{
  return sub_252C049C8();
}

uint64_t ActionSuccess.returnValue.setter()
{
  return sub_252C04A40();
}

uint64_t (*ActionSuccess.returnValue.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.appLaunched.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionSuccess(0) + 24));
}

uint64_t ActionSuccess.appLaunched.setter(char a1)
{
  return sub_252BE8BF0(a1, type metadata accessor for ActionSuccess);
}

uint64_t sub_252BE8BF0(char a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*ActionSuccess.appLaunched.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ActionSuccess(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3);
  return sub_252BE8C7C;
}

uint64_t sub_252BE8C7C(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(int *)(result + 8)) = *(unsigned char *)(result + 12);
  return result;
}

uint64_t ActionSuccess.undoContext.getter()
{
  return sub_252BC0E70();
}

uint64_t ActionSuccess.undoContext.setter(uint64_t a1)
{
  return sub_252BC0EC8(a1, (uint64_t)type metadata accessor for ActionSuccess, &qword_269C41A68);
}

uint64_t (*ActionSuccess.undoContext.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.didShowInAppResult.setter(char a1)
{
  return sub_252BE8BF0(a1, type metadata accessor for ActionSuccess);
}

uint64_t (*ActionSuccess.didShowInAppResult.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.followUpAction.getter()
{
  return sub_252BDFFDC();
}

uint64_t ActionSuccess.followUpAction.setter()
{
  return sub_252BE0064();
}

uint64_t (*ActionSuccess.followUpAction.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.shouldOpen.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionSuccess(0) + 32));
}

uint64_t ActionSuccess.shouldOpen.setter(char a1)
{
  uint64_t result = type metadata accessor for ActionSuccess(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ActionSuccess.shouldOpen.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.inAppSearchString.getter()
{
  return sub_252BE8EAC();
}

uint64_t sub_252BE8EAC()
{
  uint64_t v0 = sub_252CBAF78();
  v1(v0);
  sub_252B4C69C();
  return sub_252AEA3DC();
}

uint64_t ActionSuccess.inAppSearchString.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BE8EF8(a1, a2);
}

uint64_t sub_252BE8EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_252CB9888();
  v6(v5);
  uint64_t result = sub_252B4C9A4();
  *uint64_t v2 = v3;
  v2[1] = a2;
  return result;
}

uint64_t (*ActionSuccess.inAppSearchString.modify())()
{
  return nullsub_1;
}

void ActionSuccess.init(returnValue:didShowInAppResult:undoContext:followUpAction:shouldOpen:inAppSearchString:)()
{
  sub_252AFC698();
  uint64_t v23 = v1;
  uint64_t v24 = v2;
  char v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = (int *)type metadata accessor for ActionSuccess(0);
  uint64_t v12 = v10 + v11[5];
  uint64_t v13 = type metadata accessor for ActionSuccess.UndoContext(0);
  sub_252B4C33C(v12, v14, v15, v13);
  uint64_t v16 = sub_252CBC438();
  uint64_t v17 = type metadata accessor for ActionSuccess.FollowUpAction(v16);
  _s16IntelligenceFlow26SessionServerDebuggerEventV7PayloadOwst_0(v0, 1, 1, v17);
  uint64_t v18 = (void *)(v10 + v11[9]);
  sub_252D19BE8();
  *uint64_t v18 = 0;
  v18[1] = 0;
  sub_252AEA304();
  sub_252B4C1CC();
  v19();
  *(unsigned char *)(v10 + v11[6]) = v8;
  sub_252C0CB04(v6, v12, &qword_269C41A68);
  uint64_t v20 = sub_252CBB1D0();
  sub_252C0CB04(v20, v21, v22);
  *(unsigned char *)(v10 + v11[8]) = v4;
  swift_bridgeObjectRelease();
  *uint64_t v18 = v23;
  v18[1] = v24;
  sub_252AFC67C();
}

void ActionSuccess.init(returnValue:didShowInAppResult:undoContext:followUpAction:shouldOpen:)()
{
  sub_252AFC730();
  uint64_t v2 = v1;
  uint64_t v3 = sub_252AC3A24(&qword_269C41A78);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252B7732C();
  uint64_t v5 = sub_252AC3A24(&qword_269C41A68);
  uint64_t v6 = sub_252AEA368(v5);
  MEMORY[0x270FA5388](v6);
  sub_252B9835C();
  sub_252D19BE8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v7);
  sub_252B5F630();
  sub_252CBB1D0();
  sub_252AEDE38();
  v8();
  uint64_t v9 = sub_252B23988();
  sub_252CB7E00(v9, v10, &qword_269C41A68);
  sub_252CB7E00(v2, v0, &qword_269C41A78);
  ActionSuccess.init(returnValue:didShowInAppResult:undoContext:followUpAction:shouldOpen:inAppSearchString:)();
  sub_252B5A4CC(v2, &qword_269C41A78);
  uint64_t v11 = sub_252CBAA88();
  sub_252B5A4CC(v11, v12);
  sub_252CB8D98();
  v13();
  sub_252AFC718();
}

void ActionSuccess.init(returnValue:didShowInAppResult:undoContext:followUpAction:)()
{
  sub_252AFC730();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_252AC3A24(&qword_269C41A78);
  uint64_t v6 = sub_252AEA368(v5);
  MEMORY[0x270FA5388](v6);
  sub_252AF45D8();
  uint64_t v7 = sub_252AC3A24(&qword_269C41A68);
  uint64_t v8 = sub_252AEA368(v7);
  MEMORY[0x270FA5388](v8);
  sub_252CBB0B0();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v9);
  sub_252B23278();
  sub_252B7E4CC();
  sub_252AEDE38();
  v10();
  uint64_t v11 = sub_252CBBC40();
  sub_252CB7E00(v11, v12, &qword_269C41A68);
  sub_252CB7E00(v2, v0, &qword_269C41A78);
  ActionSuccess.init(returnValue:didShowInAppResult:undoContext:followUpAction:shouldOpen:)();
  sub_252B5A4CC(v2, &qword_269C41A78);
  sub_252B5A4CC(v4, &qword_269C41A68);
  sub_252B983F0();
  v13();
  sub_252AFC718();
}

void ActionSuccess.init(returnValue:didShowInAppResult:undoContext:)()
{
  sub_252AFC730();
  sub_252CB9314();
  uint64_t v1 = sub_252AC3A24(&qword_269C41A78);
  uint64_t v2 = sub_252AEA368(v1);
  MEMORY[0x270FA5388](v2);
  sub_252AC423C();
  uint64_t v3 = sub_252AC3A24(&qword_269C41A68);
  uint64_t v4 = sub_252AEA368(v3);
  MEMORY[0x270FA5388](v4);
  sub_252B5FA38();
  sub_252D19BE8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v5);
  sub_252B7732C();
  sub_252CBB3B0();
  sub_252AEDE38();
  v6();
  uint64_t v7 = sub_252CBAA88();
  sub_252CB7E00(v7, v8, &qword_269C41A68);
  uint64_t v9 = type metadata accessor for ActionSuccess.FollowUpAction(0);
  sub_252B4C33C(v0, v10, v11, v9);
  ActionSuccess.init(returnValue:didShowInAppResult:undoContext:followUpAction:)();
  uint64_t v12 = sub_252CBBC4C();
  sub_252B5A4CC(v12, v13);
  sub_252CBB1C4();
  sub_252B5F658();
  v14();
  sub_252AFC718();
}

void ActionSuccess.init(returnValue:appLaunched:undoContext:)()
{
  sub_252AFC730();
  uint64_t v0 = sub_252AC3A24(&qword_269C41A68);
  uint64_t v1 = sub_252AEA368(v0);
  MEMORY[0x270FA5388](v1);
  sub_252CB83D0();
  sub_252D19BE8();
  sub_252AEDBD0();
  MEMORY[0x270FA5388](v2);
  sub_252AF45D8();
  sub_252CBB6D4();
  sub_252AEDE38();
  v3();
  uint64_t v4 = sub_252CBC87C();
  sub_252CB7E00(v4, v5, &qword_269C41A68);
  ActionSuccess.init(returnValue:didShowInAppResult:undoContext:)();
  uint64_t v6 = sub_252AFCA44();
  sub_252B5A4CC(v6, v7);
  sub_252CBB1C4();
  sub_252B775A0();
  v8();
  sub_252AFC718();
}

void ActionSuccess.init(returnValue:appLaunched:)()
{
  sub_252AFC730();
  sub_252CB9314();
  uint64_t v1 = sub_252AC3A24(&qword_269C41A68);
  uint64_t v2 = sub_252AEA368(v1);
  MEMORY[0x270FA5388](v2);
  sub_252CB84C8();
  MEMORY[0x270FA5388](v3);
  sub_252CB8F64();
  sub_252D19BE8();
  sub_252AEDBD0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_252CB87A8();
  MEMORY[0x270FA5388](v7);
  sub_252CBB608();
  uint64_t v8 = *(void (**)(uint64_t))(v5 + 16);
  uint64_t v9 = sub_252CBB3B0();
  v8(v9);
  uint64_t v10 = type metadata accessor for ActionSuccess.UndoContext(0);
  sub_252B4C33C(v0, v11, v12, v10);
  uint64_t v13 = sub_252CBA168();
  v8(v13);
  uint64_t v14 = sub_252CB9DD4();
  sub_252CB7E00(v14, v15, &qword_269C41A68);
  ActionSuccess.init(returnValue:didShowInAppResult:undoContext:)();
  sub_252B5A4CC(v0, &qword_269C41A68);
  uint64_t v16 = *(void (**)(void))(v5 + 8);
  sub_252CBACA0();
  sub_252CB8E20();
  v16();
  sub_252B98E58();
  sub_252CB8E20();
  v16();
  sub_252AFC718();
}

uint64_t ActionSuccess.UndoContext.token.getter()
{
  return sub_252C049C8();
}

uint64_t ActionSuccess.UndoContext.token.setter()
{
  return sub_252C04A40();
}

uint64_t (*ActionSuccess.UndoContext.token.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.UndoContext.bundleIdentifier.getter()
{
  return sub_252BB5CD8();
}

uint64_t ActionSuccess.UndoContext.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BD4B98(a1, a2);
}

uint64_t (*ActionSuccess.UndoContext.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.UndoContext.actionDescription.getter()
{
  return sub_252BDD798();
}

uint64_t ActionSuccess.UndoContext.actionDescription.setter(uint64_t a1, uint64_t a2)
{
  return sub_252BDFF20(a1, a2);
}

uint64_t (*ActionSuccess.UndoContext.actionDescription.modify())()
{
  return nullsub_1;
}

uint64_t ActionSuccess.UndoContext.init(token:bundleIdentifier:actionDescription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_252B4C7EC();
  sub_252D19588();
  sub_252AEA304();
  sub_252B4C1CC();
  v10();
  uint64_t result = type metadata accessor for ActionSuccess.UndoContext(0);
  uint64_t v12 = (void *)(v7 + *(int *)(result + 20));
  *uint64_t v12 = v6;
  v12[1] = v5;
  uint64_t v13 = (void *)(v7 + *(int *)(result + 24));
  *uint64_t v13 = a4;
  v13[1] = a5;
  return result;
}