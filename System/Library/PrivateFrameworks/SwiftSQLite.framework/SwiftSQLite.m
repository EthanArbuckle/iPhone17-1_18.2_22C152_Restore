uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t vars8;

  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

Swift::String __swiftcall SchemaType.drop(ifExists:)(Swift::Bool ifExists)
{
  sub_25E6B11EC(0, v1, v9);
  uint64_t v3 = sub_25E681AE4(0x454C424154, 0xE500000000000000, (uint64_t)v9, ifExists);
  v5 = v4;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  uint64_t v6 = v3;
  v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_25E676610@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v6 = v2[5];
  if (v6)
  {
    uint64_t v7 = v2[4];
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25E67A2F8(v5, v4, (uint64_t *)(inited + 32));
      swift_bridgeObjectRelease();
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(inited + 104) = &protocol witness table for Expression<A>;
      *(void *)(inited + 72) = 21313;
      *(void *)(inited + 80) = 0xE200000000000000;
      uint64_t v10 = MEMORY[0x263F8EE78];
      *(void *)(inited + 88) = MEMORY[0x263F8EE78];
      *(void *)(inited + 96) = v9;
      *(void *)(inited + 136) = v9;
      *(void *)(inited + 144) = &protocol witness table for Expression<A>;
      sub_25E681960(0, 0xE000000000000000, v7, v6, 34, 0xE100000000000000);
      sub_25E6C24A0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C24A0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 112) = 0;
      *(void *)(inited + 120) = 0xE000000000000000;
      *(void *)(inited + 128) = v10;
      sub_25E686E60(inited, a2);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      return swift_arrayDestroy();
    }
    uint64_t v5 = v2[4];
    uint64_t v4 = v2[5];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v5, v4, a2);
  return swift_bridgeObjectRelease();
}

uint64_t Table.create(temporary:ifNotExists:withoutRowid:block:)(char a1, char a2, char a3, void (*a4)(void))
{
  long long v9 = v4[9];
  long long v50 = v4[8];
  long long v51 = v9;
  uint64_t v52 = *((void *)v4 + 20);
  long long v10 = v4[5];
  long long v46 = v4[4];
  long long v47 = v10;
  long long v11 = v4[7];
  long long v48 = v4[6];
  long long v49 = v11;
  long long v12 = v4[1];
  long long v42 = *v4;
  long long v43 = v12;
  long long v13 = v4[3];
  long long v44 = v4[2];
  long long v45 = v13;
  type metadata accessor for TableBuilder();
  *(void *)(swift_allocObject() + 16) = MEMORY[0x263F8EE78];
  a4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  if (*((void *)&v44 + 1))
  {
    uint64_t v15 = *((void *)&v44 + 1);
    uint64_t v16 = v44;
  }
  else
  {
    uint64_t v15 = *((void *)&v43 + 1);
    uint64_t v16 = v43;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v16, v15, v41);
  swift_bridgeObjectRelease();
  if (a1) {
    unsigned __int8 v17 = 1;
  }
  else {
    unsigned __int8 v17 = 2;
  }
  sub_25E676C44(0x454C424154, 0xE500000000000000, (uint64_t)v41, v17, a2 & 1, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 96) = v18;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_25E686E60(v19, v41);
  sub_25E680774(v41, 0, 0xE000000000000000, (void *)(inited + 72));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  swift_bridgeObjectRelease();
  if (a3)
  {
    long long v20 = xmmword_25E6C31B0;
    uint64_t v21 = MEMORY[0x263F8EE78];
    v22 = &protocol witness table for Expression<A>;
  }
  else
  {
    uint64_t v18 = 0;
    v22 = 0;
    uint64_t v21 = 0;
    long long v20 = 0uLL;
  }
  *(void *)(inited + 136) = v18;
  *(void *)(inited + 144) = v22;
  *(_OWORD *)(inited + 112) = v20;
  uint64_t v23 = 32;
  *(void *)(inited + 128) = v21;
  v40 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_25E6826BC(inited + v23, (uint64_t)v41, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)v41, (uint64_t)&v36);
    if (v37)
    {
      sub_25E681E94(&v36, (uint64_t)v39);
      sub_25E681E94(v39, (uint64_t)&v36);
      v24 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v24 = sub_25E680BF4(0, v24[2] + 1, 1, v24, qword_26B38E148, &qword_26B38E0F0);
        v40 = v24;
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1) {
        v40 = sub_25E680BF4((void *)(v25 > 1), v26 + 1, 1, v24, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v27 = v37;
      uint64_t v28 = v38;
      uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v36, v37);
      MEMORY[0x270FA5388](v29);
      v31 = (char *)&v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v31);
      sub_25E6811A8(v26, (uint64_t)v31, (uint64_t *)&v40, v27, v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v36, &qword_26B38E1F0);
    }
    v23 += 40;
  }
  while (v23 != 152);
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v40, v41);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v41, v41[3]);
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return countAndFlagsBits;
}

uint64_t sub_25E676C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  v33 = a6;
  int v10 = a4;
  long long v40 = xmmword_25E6C31C0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  long long v45 = &protocol witness table for Expression<A>;
  uint64_t v41 = 0x455441455243;
  unint64_t v42 = 0xE600000000000000;
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v43 = MEMORY[0x263F8EE78];
  uint64_t v44 = v11;
  if (v10 == 2)
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    unsigned __int8 v17 = 0;
  }
  else
  {
    uint64_t v13 = 0x5241524F504D4554;
    if ((v10 & 1) == 0) {
      uint64_t v13 = 0x455551494E55;
    }
    unint64_t v14 = 0xE900000000000059;
    if ((v10 & 1) == 0) {
      unint64_t v14 = 0xE600000000000000;
    }
    unsigned __int8 v17 = &protocol witness table for Expression<A>;
    uint64_t v15 = MEMORY[0x263F8EE78];
    uint64_t v16 = v11;
  }
  uint64_t v46 = v13;
  unint64_t v47 = v14;
  uint64_t v48 = v15;
  uint64_t v49 = v16;
  uint64_t v54 = v11;
  v55 = &protocol witness table for Expression<A>;
  long long v50 = v17;
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v53 = MEMORY[0x263F8EE78];
  if (a5)
  {
    long long v18 = xmmword_25E6C31D0;
    uint64_t v19 = MEMORY[0x263F8EE78];
    long long v20 = &protocol witness table for Expression<A>;
  }
  else
  {
    uint64_t v11 = 0;
    long long v20 = 0;
    uint64_t v19 = 0;
    long long v18 = 0uLL;
  }
  uint64_t v58 = v11;
  v59 = v20;
  long long v56 = v18;
  uint64_t v57 = v19;
  sub_25E681F18(a3, (uint64_t)&v60);
  v39[0] = v12;
  swift_bridgeObjectRetain();
  for (uint64_t i = 4; i != 29; i += 5)
  {
    sub_25E6826BC((uint64_t)&v39[i + 1], (uint64_t)v38, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)v38, (uint64_t)&v34);
    if (v35)
    {
      sub_25E681E94(&v34, (uint64_t)v37);
      sub_25E681E94(v37, (uint64_t)&v34);
      v22 = (void *)v39[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v22 = sub_25E680BF4(0, v22[2] + 1, 1, v22, qword_26B38E148, &qword_26B38E0F0);
        v39[0] = (uint64_t)v22;
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1) {
        v39[0] = (uint64_t)sub_25E680BF4((void *)(v23 > 1), v24 + 1, 1, v22, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v25 = v35;
      uint64_t v26 = v36;
      uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v35);
      MEMORY[0x270FA5388](v27);
      uint64_t v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v30 + 16))(v29);
      sub_25E6811A8(v24, (uint64_t)v29, v39, v25, v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v34, &qword_26B38E1F0);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F0);
  swift_arrayDestroy();
  sub_25E686E60(v39[0], v33);
  return swift_bridgeObjectRelease();
}

uint64_t Table.create(_:temporary:ifNotExists:)(void *a1, char a2, char a3)
{
  return sub_25E67A564(a1, a2, a3, 0x454C424154, 0xE500000000000000);
}

uint64_t Table.addColumn<A>(_:check:defaultValue:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v12 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v13 = a2[2];
  long long v14 = v5[9];
  long long v45 = v5[8];
  long long v46 = v14;
  uint64_t v47 = *((void *)v5 + 20);
  long long v15 = v5[5];
  long long v41 = v5[4];
  long long v42 = v15;
  long long v16 = v5[7];
  long long v43 = v5[6];
  long long v44 = v16;
  long long v17 = v5[1];
  long long v37 = *v5;
  long long v38 = v17;
  long long v18 = v5[3];
  long long v39 = v5[2];
  long long v40 = v18;
  v35[3] = type metadata accessor for Expression();
  v35[4] = &protocol witness table for Expression<A>;
  v35[0] = v8;
  v35[1] = v9;
  v35[2] = v10;
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = v19(a4, a5);
  uint64_t v22 = v21;
  unsigned __int8 v34 = 2;
  if (v11)
  {
    *((void *)&v32 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    v33 = &protocol witness table for Expression<A>;
    *(void *)&long long v31 = v12;
    *((void *)&v31 + 1) = v11;
    *(void *)&long long v32 = v13;
  }
  else
  {
    v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
  }
  uint64_t v23 = *(void *)(a5 + 8);
  v30[3] = a4;
  v30[4] = v23;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a3, a4);
  long long v28 = xmmword_25E6C31E0;
  memset(v29, 0, sizeof(v29));
  sub_25E681ED4(v12, v11);
  sub_25E6771E4((uint64_t)v35, v20, v22, &v34, 0, 0, (uint64_t)&v31, (uint64_t)v30, v36, (uint64_t)v29, (uint64_t *)&v28);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v29, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v31, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  uint64_t v25 = sub_25E677878((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25;
}

{
  long long *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  long long v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24;
  uint64_t v26;
  long long v28;
  _OWORD v29[5];
  uint64_t v30[5];
  void v31[5];
  unsigned __int8 v32;
  void v33[5];
  uint64_t v34[5];
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  uint64_t v45;

  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a2[1];
  uint64_t v26 = *a2;
  uint64_t v12 = a2[2];
  uint64_t v13 = v5[9];
  long long v43 = v5[8];
  long long v44 = v13;
  long long v45 = *((void *)v5 + 20);
  long long v14 = v5[5];
  long long v39 = v5[4];
  long long v40 = v14;
  long long v15 = v5[7];
  long long v41 = v5[6];
  long long v42 = v15;
  long long v16 = v5[1];
  uint64_t v35 = *v5;
  uint64_t v36 = v16;
  long long v17 = v5[3];
  long long v37 = v5[2];
  long long v38 = v17;
  v33[3] = type metadata accessor for Expression();
  v33[4] = &protocol witness table for Expression<A>;
  v33[0] = v9;
  v33[1] = v8;
  v33[2] = v10;
  long long v18 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v18(a4, a5);
  uint64_t v21 = v20;
  long long v32 = 2;
  v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v31[4] = &protocol witness table for Expression<A>;
  v31[0] = v26;
  v31[1] = v11;
  v31[2] = v12;
  uint64_t v22 = *(void *)(a5 + 8);
  v30[3] = a4;
  v30[4] = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a3, a4);
  long long v28 = xmmword_25E6C31E0;
  memset(v29, 0, sizeof(v29));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6771E4((uint64_t)v33, v19, v21, &v32, 0, 0, (uint64_t)v31, (uint64_t)v30, v34, (uint64_t)v29, (uint64_t *)&v28);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v29, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v31, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  unint64_t v24 = sub_25E677878((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v24;
}

{
  long long *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  long long v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  long long v43;
  unsigned char v44[80];
  long long v45;
  long long v46;
  uint64_t v47;
  long long v48;
  long long v49;
  _UNKNOWN **v50;
  unsigned __int8 v51;
  void v52[5];
  uint64_t v53[5];
  long long v54;
  long long v55;
  long long v56;
  long long v57;
  long long v58;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  uint64_t v64;

  long long v40 = a3;
  uint64_t v10 = sub_25E6C2790();
  long long v42 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *a1;
  long long v14 = a1[1];
  long long v15 = a1[2];
  long long v16 = a2[1];
  long long v17 = a2[2];
  long long v38 = *a2;
  long long v39 = v17;
  long long v18 = v5[9];
  v62 = v5[8];
  v63 = v18;
  v64 = *((void *)v5 + 20);
  uint64_t v19 = v5[5];
  uint64_t v58 = v5[4];
  v59 = v19;
  uint64_t v20 = v5[7];
  uint64_t v60 = v5[6];
  v61 = v20;
  uint64_t v21 = v5[1];
  uint64_t v54 = *v5;
  v55 = v21;
  uint64_t v22 = v5[3];
  long long v56 = v5[2];
  uint64_t v57 = v22;
  long long v41 = v23;
  v52[3] = type metadata accessor for Expression();
  v52[4] = &protocol witness table for Expression<A>;
  v52[0] = v13;
  v52[1] = v14;
  v52[2] = v15;
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v24(a4, a5);
  uint64_t v36 = v26;
  long long v37 = v25;
  uint64_t v51 = 2;
  if (v16)
  {
    *((void *)&v49 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v50 = &protocol witness table for Expression<A>;
    uint64_t v27 = v38;
    *(void *)&uint64_t v48 = v38;
    *((void *)&v48 + 1) = v16;
    *(void *)&uint64_t v49 = v39;
  }
  else
  {
    uint64_t v27 = v38;
    long long v50 = 0;
    uint64_t v48 = 0u;
    uint64_t v49 = 0u;
  }
  long long v28 = v41;
  uint64_t v29 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v12, v40, v41);
  uint64_t v30 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v12, 1, a4) == 1)
  {
    sub_25E681ED4(v27, v16);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v28);
    uint64_t v47 = 0;
    long long v45 = 0u;
    long long v46 = 0u;
  }
  else
  {
    long long v31 = *(void *)(a5 + 8);
    *((void *)&v46 + 1) = a4;
    uint64_t v47 = v31;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
    (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 32))(boxed_opaque_existential_1, v12, a4);
    sub_25E681ED4(v27, v16);
  }
  long long v43 = xmmword_25E6C31E0;
  memset(v44, 0, sizeof(v44));
  sub_25E6771E4((uint64_t)v52, v37, v36, &v51, 1, 0, (uint64_t)&v48, (uint64_t)&v45, v53, (uint64_t)v44, (uint64_t *)&v43);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v44, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v45, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v48, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v33 = sub_25E677878((uint64_t)v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return v33;
}

{
  long long *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  long long v41;
  unsigned char v42[80];
  long long v43;
  long long v44;
  uint64_t v45;
  void v46[5];
  unsigned __int8 v47;
  void v48[5];
  uint64_t v49[5];
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  long long v55;
  long long v56;
  long long v57;
  long long v58;
  long long v59;
  uint64_t v60;

  long long v39 = a3;
  uint64_t v10 = sub_25E6C2790();
  long long v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v38 = (char *)&v33 - v11;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  long long v14 = a1[2];
  long long v15 = *a2;
  uint64_t v35 = a2[1];
  uint64_t v36 = v15;
  unsigned __int8 v34 = a2[2];
  long long v16 = v5[9];
  uint64_t v58 = v5[8];
  v59 = v16;
  uint64_t v60 = *((void *)v5 + 20);
  long long v17 = v5[5];
  uint64_t v54 = v5[4];
  v55 = v17;
  long long v18 = v5[7];
  long long v56 = v5[6];
  uint64_t v57 = v18;
  uint64_t v19 = v5[1];
  long long v50 = *v5;
  uint64_t v51 = v19;
  uint64_t v20 = v5[3];
  uint64_t v52 = v5[2];
  uint64_t v53 = v20;
  v48[3] = type metadata accessor for Expression();
  v48[4] = &protocol witness table for Expression<A>;
  v48[0] = v12;
  v48[1] = v13;
  v48[2] = v14;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v21(a4, a5);
  uint64_t v23 = v37;
  unint64_t v24 = v22;
  long long v40 = v25;
  uint64_t v47 = 2;
  v46[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v46[4] = &protocol witness table for Expression<A>;
  uint64_t v26 = v38;
  v46[0] = v36;
  v46[1] = v35;
  v46[2] = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v38, v39, v10);
  uint64_t v27 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, a4) == 1)
  {
    long long v28 = *(void (**)(char *, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v26, v10);
    long long v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
  }
  else
  {
    uint64_t v29 = *(void *)(a5 + 8);
    *((void *)&v44 + 1) = a4;
    long long v45 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v43);
    (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 32))(boxed_opaque_existential_1, v26, a4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  long long v41 = xmmword_25E6C31E0;
  memset(v42, 0, sizeof(v42));
  sub_25E6771E4((uint64_t)v48, v24, v40, &v47, 1, 0, (uint64_t)v46, (uint64_t)&v43, v49, (uint64_t)v42, (uint64_t *)&v41);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v42, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v43, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v46, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  long long v31 = sub_25E677878((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return v31;
}

uint64_t sub_25E6771E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t *a11)
{
  uint64_t v52 = a8;
  v55 = a9;
  int v16 = *a4;
  unint64_t v17 = a11[1];
  uint64_t v51 = *a11;
  unint64_t v53 = v17;
  long long v68 = xmmword_25E6C31F0;
  uint64_t v54 = v69;
  sub_25E681F18(a1, (uint64_t)v69);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v19 = v18;
  v69[9] = &protocol witness table for Expression<A>;
  v69[5] = a2;
  v69[6] = a3;
  v69[7] = MEMORY[0x263F8EE78];
  v69[8] = v18;
  if (v16 == 2)
  {
    unint64_t v20 = 0;
    unint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    unint64_t v24 = 0;
  }
  else
  {
    unint64_t v20 = 0xD000000000000019;
    if ((v16 & 1) == 0) {
      unint64_t v20 = 0x205952414D495250;
    }
    unint64_t v21 = 0x800000025E6C4680;
    if ((v16 & 1) == 0) {
      unint64_t v21 = 0xEB0000000059454BLL;
    }
    unint64_t v24 = &protocol witness table for Expression<A>;
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v23 = v18;
  }
  v69[10] = v20;
  v69[11] = v21;
  v69[12] = v22;
  v69[13] = v23;
  v69[14] = v24;
  uint64_t v25 = &protocol witness table for Expression<A>;
  uint64_t v26 = (void *)MEMORY[0x263F8EE78];
  if (a5)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    unint64_t v28 = 0xE800000000000000;
    uint64_t v27 = 0x4C4C554E20544F4ELL;
    uint64_t v29 = MEMORY[0x263F8EE78];
    uint64_t v30 = v18;
  }
  v69[15] = v27;
  v69[16] = v28;
  v69[17] = v29;
  v69[18] = v30;
  v69[19] = v25;
  if (a6)
  {
    long long v31 = xmmword_25E6C3200;
    uint64_t v32 = MEMORY[0x263F8EE78];
    v33 = &protocol witness table for Expression<A>;
    uint64_t v34 = v18;
  }
  else
  {
    uint64_t v34 = 0;
    v33 = 0;
    uint64_t v32 = 0;
    long long v31 = 0uLL;
  }
  v73 = v33;
  long long v70 = v31;
  uint64_t v72 = v34;
  uint64_t v71 = v32;
  sub_25E6826BC(a7, (uint64_t)&v62, &qword_26B38E1F0);
  if (*((void *)&v63 + 1))
  {
    sub_25E681E94(&v62, (uint64_t)v56);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_25E6C3210;
    *(void *)(v35 + 56) = v19;
    *(void *)(v35 + 64) = &protocol witness table for Expression<A>;
    *(void *)(v35 + 32) = 0x4B43454843;
    *(void *)(v35 + 40) = 0xE500000000000000;
    *(void *)(v35 + 48) = v26;
    sub_25E681F18((uint64_t)v56, v35 + 72);
    swift_bridgeObjectRetain();
    sub_25E686E60(v35, v74);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    memset(v74, 0, sizeof(v74));
    swift_bridgeObjectRetain();
  }
  sub_25E6826BC(v52, (uint64_t)&v62, &qword_26B38E1F0);
  unint64_t v36 = v53;
  if (*((void *)&v63 + 1))
  {
    sub_25E681E94(&v62, (uint64_t)v56);
    *((void *)&v76 + 1) = v19;
    v77 = &protocol witness table for Expression<A>;
    sub_25E680774(v56, 0x20544C5541464544, 0xE800000000000000, &v75);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    v77 = 0;
    long long v75 = 0u;
    long long v76 = 0u;
  }
  sub_25E6826BC(a10, (uint64_t)&v62, &qword_26B38E0E8);
  if (*((void *)&v63 + 1))
  {
    v57[0] = v64;
    v57[1] = v65;
    v57[2] = v66;
    v56[0] = v62;
    v56[1] = v63;
    sub_25E6802A8((uint64_t)v56, (uint64_t)v57 + 8, v78);
    sub_25E681F7C((uint64_t)v56, &qword_26A7016A8);
  }
  else
  {
    memset(v78, 0, sizeof(v78));
  }
  if (v53 == 3)
  {
    memset(v79, 0, 40);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 32) = 0x4554414C4C4F43;
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = v19;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 48) = v26;
    *(void *)(inited + 96) = &type metadata for Collation;
    *(void *)(inited + 104) = &protocol witness table for Collation;
    uint64_t v38 = v51;
    *(void *)(inited + 72) = v51;
    *(void *)(inited + 80) = v36;
    sub_25E681EAC(v38, v36);
    sub_25E686E60(inited, v79);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  v61 = v26;
  for (uint64_t i = 32; i != 392; i += 40)
  {
    sub_25E6826BC((uint64_t)&v67[i], (uint64_t)&v62, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)&v62, (uint64_t)&v58);
    if (v59)
    {
      sub_25E681E94(&v58, (uint64_t)v56);
      sub_25E681E94(v56, (uint64_t)&v58);
      long long v40 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        long long v40 = sub_25E680BF4(0, v40[2] + 1, 1, v40, qword_26B38E148, &qword_26B38E0F0);
        v61 = v40;
      }
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1) {
        v61 = sub_25E680BF4((void *)(v41 > 1), v42 + 1, 1, v40, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v43 = v59;
      uint64_t v44 = v60;
      uint64_t v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v58, v59);
      MEMORY[0x270FA5388](v45);
      uint64_t v47 = (char *)&v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v48 + 16))(v47);
      sub_25E6811A8(v42, (uint64_t)v47, (uint64_t *)&v61, v43, v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v58, &qword_26B38E1F0);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F0);
  swift_arrayDestroy();
  sub_25E686E60((uint64_t)v61, v55);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E677878(uint64_t a1)
{
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  uint64_t v26 = *((void *)v1 + 20);
  long long v4 = v1[5];
  long long v20 = v1[4];
  long long v21 = v4;
  long long v5 = v1[7];
  long long v22 = v1[6];
  long long v23 = v5;
  long long v6 = v1[1];
  long long v16 = *v1;
  long long v17 = v6;
  long long v7 = v1[3];
  long long v18 = v1[2];
  long long v19 = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 32) = 0x4154205245544C41;
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  uint64_t v10 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = 0xEB00000000454C42;
  *(void *)(inited + 48) = v10;
  if (*((void *)&v18 + 1))
  {
    uint64_t v12 = *((void *)&v18 + 1);
    uint64_t v11 = v18;
  }
  else
  {
    uint64_t v12 = *((void *)&v17 + 1);
    uint64_t v11 = v17;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v11, v12, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = v9;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = 0x554C4F4320444441;
  *(void *)(inited + 120) = 0xEA00000000004E4DLL;
  *(void *)(inited + 128) = v10;
  sub_25E681F18(a1, inited + 152);
  sub_25E686E60(inited, v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return countAndFlagsBits;
}

uint64_t Table.addColumn<A>(_:unique:check:references:_:)(uint64_t *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a3[1];
  uint64_t v27 = a3[2];
  uint64_t v28 = *a3;
  uint64_t v29 = *a5;
  uint64_t v31 = a5[1];
  uint64_t v32 = a5[2];
  long long v14 = v7[9];
  long long v57 = v7[8];
  long long v58 = v14;
  uint64_t v59 = *((void *)v7 + 20);
  long long v15 = v7[5];
  long long v53 = v7[4];
  long long v54 = v15;
  long long v16 = v7[7];
  long long v55 = v7[6];
  long long v56 = v16;
  long long v17 = v7[1];
  long long v49 = *v7;
  long long v50 = v17;
  long long v18 = v7[3];
  long long v51 = v7[2];
  long long v52 = v18;
  uint64_t v19 = type metadata accessor for Expression();
  v47[3] = v19;
  v47[4] = &protocol witness table for Expression<A>;
  v47[0] = v10;
  v47[1] = v11;
  v47[2] = v12;
  long long v20 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(a6, a7);
  uint64_t v23 = v22;
  unsigned __int8 v46 = 2;
  if (v13)
  {
    *((void *)&v44 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    uint64_t v45 = &protocol witness table for Expression<A>;
    uint64_t v24 = v28;
    *(void *)&long long v43 = v28;
    *((void *)&v43 + 1) = v13;
    *(void *)&long long v44 = v27;
  }
  else
  {
    uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
    uint64_t v24 = v28;
  }
  uint64_t v42 = 0;
  memset(v41, 0, sizeof(v41));
  sub_25E681F18(a4, (uint64_t)v35);
  uint64_t v39 = v19;
  long long v40 = &protocol witness table for Expression<A>;
  uint64_t v36 = v29;
  uint64_t v37 = v31;
  uint64_t v38 = v32;
  long long v34 = xmmword_25E6C31E0;
  sub_25E681ED4(v24, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6771E4((uint64_t)v47, v21, v23, &v46, 0, a2 & 1, (uint64_t)&v43, (uint64_t)v41, v48, (uint64_t)v35, (uint64_t *)&v34);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v41, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v35, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v43, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  uint64_t v25 = sub_25E677878((uint64_t)v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return v25;
}

{
  long long *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  long long v33;
  unsigned char v34[40];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  _OWORD v40[2];
  uint64_t v41;
  void v42[5];
  unsigned __int8 v43;
  void v44[5];
  uint64_t v45[5];
  long long v46;
  long long v47;
  long long v48;
  long long v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  long long v55;
  uint64_t v56;

  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a3[1];
  uint64_t v26 = a3[2];
  uint64_t v27 = *a3;
  uint64_t v30 = *a5;
  uint64_t v28 = a5[1];
  uint64_t v29 = a5[2];
  long long v14 = v7[9];
  long long v54 = v7[8];
  long long v55 = v14;
  long long v56 = *((void *)v7 + 20);
  long long v15 = v7[5];
  long long v50 = v7[4];
  long long v51 = v15;
  long long v16 = v7[7];
  long long v52 = v7[6];
  long long v53 = v16;
  long long v17 = v7[1];
  unsigned __int8 v46 = *v7;
  uint64_t v47 = v17;
  long long v18 = v7[3];
  uint64_t v48 = v7[2];
  long long v49 = v18;
  uint64_t v19 = type metadata accessor for Expression();
  v44[3] = v19;
  v44[4] = &protocol witness table for Expression<A>;
  v44[0] = v10;
  v44[1] = v11;
  v44[2] = v12;
  long long v20 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(a6, a7);
  uint64_t v23 = v22;
  long long v43 = 2;
  v42[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v42[4] = &protocol witness table for Expression<A>;
  v42[0] = v27;
  v42[1] = v13;
  v42[2] = v26;
  unint64_t v41 = 0;
  memset(v40, 0, sizeof(v40));
  sub_25E681F18(a4, (uint64_t)v34);
  uint64_t v38 = v19;
  uint64_t v39 = &protocol witness table for Expression<A>;
  uint64_t v35 = v30;
  uint64_t v36 = v28;
  uint64_t v37 = v29;
  v33 = xmmword_25E6C31E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6771E4((uint64_t)v44, v21, v23, &v43, 0, a2, (uint64_t)v42, (uint64_t)v40, v45, (uint64_t)v34, (uint64_t *)&v33);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v40, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v34, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v42, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  uint64_t v24 = sub_25E677878((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return v24;
}

{
  long long *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  long long v33;
  unsigned char v34[40];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  _OWORD v40[2];
  uint64_t v41;
  long long v42;
  long long v43;
  _UNKNOWN **v44;
  unsigned __int8 v45;
  void v46[5];
  uint64_t v47[5];
  long long v48;
  long long v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  long long v55;
  long long v56;
  long long v57;
  uint64_t v58;

  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a3[1];
  uint64_t v27 = *a3;
  long long v14 = a3[2];
  uint64_t v28 = *a5;
  uint64_t v30 = a5[1];
  uint64_t v31 = a5[2];
  long long v15 = v7[9];
  long long v56 = v7[8];
  long long v57 = v15;
  long long v58 = *((void *)v7 + 20);
  long long v16 = v7[5];
  long long v52 = v7[4];
  long long v53 = v16;
  long long v17 = v7[7];
  long long v54 = v7[6];
  long long v55 = v17;
  long long v18 = v7[1];
  uint64_t v48 = *v7;
  long long v49 = v18;
  uint64_t v19 = v7[3];
  long long v50 = v7[2];
  long long v51 = v19;
  sub_25E6C2790();
  v46[3] = type metadata accessor for Expression();
  v46[4] = &protocol witness table for Expression<A>;
  v46[0] = v10;
  v46[1] = v11;
  v46[2] = v12;
  long long v20 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(a6, a7);
  uint64_t v23 = v22;
  uint64_t v45 = 2;
  if (v13)
  {
    *((void *)&v43 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v44 = &protocol witness table for Expression<A>;
    uint64_t v24 = v27;
    *(void *)&uint64_t v42 = v27;
    *((void *)&v42 + 1) = v13;
    *(void *)&long long v43 = v14;
  }
  else
  {
    long long v44 = 0;
    uint64_t v42 = 0u;
    long long v43 = 0u;
    uint64_t v24 = v27;
  }
  unint64_t v41 = 0;
  memset(v40, 0, sizeof(v40));
  sub_25E681F18(a4, (uint64_t)v34);
  uint64_t v38 = type metadata accessor for Expression();
  uint64_t v39 = &protocol witness table for Expression<A>;
  uint64_t v35 = v28;
  uint64_t v36 = v30;
  uint64_t v37 = v31;
  v33 = xmmword_25E6C31E0;
  sub_25E681ED4(v24, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6771E4((uint64_t)v46, v21, v23, &v45, 1, a2 & 1, (uint64_t)&v42, (uint64_t)v40, v47, (uint64_t)v34, (uint64_t *)&v33);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v40, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v34, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v42, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  uint64_t v25 = sub_25E677878((uint64_t)v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return v25;
}

{
  long long *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  long long v32;
  unsigned char v33[40];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  _OWORD v39[2];
  uint64_t v40;
  void v41[5];
  unsigned __int8 v42;
  void v43[5];
  uint64_t v44[5];
  long long v45;
  long long v46;
  long long v47;
  long long v48;
  long long v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  uint64_t v55;

  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a3[1];
  uint64_t v26 = *a3;
  long long v14 = a3[2];
  uint64_t v27 = a5[1];
  uint64_t v29 = a5[2];
  uint64_t v30 = *a5;
  long long v15 = v7[9];
  long long v53 = v7[8];
  long long v54 = v15;
  long long v55 = *((void *)v7 + 20);
  long long v16 = v7[5];
  long long v49 = v7[4];
  long long v50 = v16;
  long long v17 = v7[7];
  long long v51 = v7[6];
  long long v52 = v17;
  long long v18 = v7[1];
  uint64_t v45 = *v7;
  unsigned __int8 v46 = v18;
  uint64_t v19 = v7[3];
  uint64_t v47 = v7[2];
  uint64_t v48 = v19;
  sub_25E6C2790();
  v43[3] = type metadata accessor for Expression();
  v43[4] = &protocol witness table for Expression<A>;
  v43[0] = v10;
  v43[1] = v11;
  v43[2] = v12;
  long long v20 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(a6, a7);
  uint64_t v23 = v22;
  uint64_t v42 = 2;
  v41[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v41[4] = &protocol witness table for Expression<A>;
  v41[0] = v26;
  v41[1] = v13;
  _OWORD v41[2] = v14;
  long long v40 = 0;
  memset(v39, 0, sizeof(v39));
  sub_25E681F18(a4, (uint64_t)v33);
  uint64_t v37 = type metadata accessor for Expression();
  uint64_t v38 = &protocol witness table for Expression<A>;
  long long v34 = v30;
  uint64_t v35 = v27;
  uint64_t v36 = v29;
  uint64_t v32 = xmmword_25E6C31E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6771E4((uint64_t)v43, v21, v23, &v42, 1, a2, (uint64_t)v41, (uint64_t)v39, v44, (uint64_t)v33, (uint64_t *)&v32);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v39, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v33, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v41, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  uint64_t v24 = sub_25E677878((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return v24;
}

uint64_t Table.addColumn<A>(_:check:defaultValue:collate:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v14 = a2[2];
  uint64_t v30 = *a4;
  unint64_t v29 = a4[1];
  long long v15 = v6[9];
  long long v48 = v6[8];
  long long v49 = v15;
  uint64_t v50 = *((void *)v6 + 20);
  long long v16 = v6[5];
  long long v44 = v6[4];
  long long v45 = v16;
  long long v17 = v6[7];
  long long v46 = v6[6];
  long long v47 = v17;
  long long v18 = v6[1];
  long long v40 = *v6;
  long long v41 = v18;
  long long v19 = v6[3];
  long long v42 = v6[2];
  long long v43 = v19;
  v38[3] = type metadata accessor for Expression();
  v38[4] = &protocol witness table for Expression<A>;
  v38[0] = v9;
  v38[1] = v10;
  v38[2] = v11;
  long long v20 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(a5, a6);
  uint64_t v23 = v22;
  unsigned __int8 v37 = 2;
  if (v13)
  {
    *((void *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    uint64_t v36 = &protocol witness table for Expression<A>;
    *(void *)&long long v34 = v12;
    *((void *)&v34 + 1) = v13;
    *(void *)&long long v35 = v14;
  }
  else
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  uint64_t v24 = *(void *)(a6 + 8);
  v33[3] = a5;
  v33[4] = v24;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a3, a5);
  memset(v32, 0, sizeof(v32));
  v31[0] = v30;
  v31[1] = v29;
  sub_25E681ED4(v12, v13);
  sub_25E681EAC(v30, v29);
  sub_25E6771E4((uint64_t)v38, v21, v23, &v37, 0, 0, (uint64_t)&v34, (uint64_t)v33, v39, (uint64_t)v32, v31);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v30, v29);
  sub_25E681F7C((uint64_t)v32, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v33, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v34, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v26 = sub_25E677878((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v26;
}

{
  long long *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31[2];
  _OWORD v32[5];
  uint64_t v33[5];
  void v34[5];
  unsigned __int8 v35;
  void v36[5];
  uint64_t v37[5];
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  uint64_t v48;

  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  unint64_t v29 = *a2;
  uint64_t v27 = a2[1];
  uint64_t v28 = a2[2];
  uint64_t v12 = *a4;
  uint64_t v13 = a4[1];
  uint64_t v14 = v6[9];
  long long v46 = v6[8];
  long long v47 = v14;
  long long v48 = *((void *)v6 + 20);
  long long v15 = v6[5];
  long long v42 = v6[4];
  long long v43 = v15;
  long long v16 = v6[7];
  long long v44 = v6[6];
  long long v45 = v16;
  long long v17 = v6[1];
  uint64_t v38 = *v6;
  uint64_t v39 = v17;
  long long v18 = v6[3];
  long long v40 = v6[2];
  long long v41 = v18;
  v36[3] = type metadata accessor for Expression();
  v36[4] = &protocol witness table for Expression<A>;
  v36[0] = v9;
  v36[1] = v10;
  v36[2] = v11;
  long long v19 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v20 = v19(a5, a6);
  uint64_t v22 = v21;
  long long v35 = 2;
  v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v34[4] = &protocol witness table for Expression<A>;
  v34[0] = v29;
  v34[1] = v27;
  v34[2] = v28;
  uint64_t v23 = *(void *)(a6 + 8);
  v33[3] = a5;
  v33[4] = v23;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a3, a5);
  memset(v32, 0, sizeof(v32));
  v31[0] = v12;
  v31[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681EAC(v12, v13);
  sub_25E6771E4((uint64_t)v36, v20, v22, &v35, 0, 0, (uint64_t)v34, (uint64_t)v33, v37, (uint64_t)v32, v31);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v12, v13);
  sub_25E681F7C((uint64_t)v32, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v33, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v34, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  uint64_t v25 = sub_25E677878((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v25;
}

{
  long long *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[2];
  unsigned char v55[80];
  long long v56;
  long long v57;
  uint64_t v58;
  long long v59;
  long long v60;
  _UNKNOWN **v61;
  unsigned __int8 v62;
  void v63[5];
  uint64_t v64[5];
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  uint64_t v75;

  long long v51 = a3;
  uint64_t v12 = sub_25E6C2790();
  long long v53 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v44 - v13;
  long long v16 = *a1;
  long long v15 = a1[1];
  long long v17 = a1[2];
  long long v18 = *a2;
  long long v19 = a2[1];
  long long v20 = a2[2];
  long long v49 = v19;
  uint64_t v50 = v18;
  uint64_t v21 = *a4;
  long long v47 = a4[1];
  long long v48 = v21;
  uint64_t v22 = v6[9];
  v73 = v6[8];
  v74 = v22;
  long long v75 = *((void *)v6 + 20);
  uint64_t v23 = v6[5];
  v69 = v6[4];
  long long v70 = v23;
  uint64_t v24 = v6[7];
  uint64_t v71 = v6[6];
  uint64_t v72 = v24;
  uint64_t v25 = v6[1];
  long long v65 = *v6;
  long long v66 = v25;
  uint64_t v26 = v6[3];
  v67 = v6[2];
  long long v68 = v26;
  long long v52 = v27;
  v63[3] = type metadata accessor for Expression();
  v63[4] = &protocol witness table for Expression<A>;
  v63[0] = v16;
  v63[1] = v15;
  v63[2] = v17;
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v29 = v28(a5, a6);
  uint64_t v30 = v49;
  long long v45 = v31;
  long long v46 = v29;
  long long v62 = 2;
  if (v49)
  {
    *((void *)&v60 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    v61 = &protocol witness table for Expression<A>;
    uint64_t v32 = v50;
    *(void *)&uint64_t v59 = v50;
    *((void *)&v59 + 1) = v30;
    *(void *)&uint64_t v60 = v20;
  }
  else
  {
    uint64_t v32 = v50;
    v61 = 0;
    uint64_t v59 = 0u;
    uint64_t v60 = 0u;
  }
  v33 = v52;
  long long v34 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v14, v51, v52);
  long long v35 = *(void *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v14, 1, a5) == 1)
  {
    sub_25E681ED4(v32, v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v33);
    long long v58 = 0;
    long long v56 = 0u;
    long long v57 = 0u;
  }
  else
  {
    uint64_t v36 = *(void *)(a6 + 8);
    *((void *)&v57 + 1) = a5;
    long long v58 = v36;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v56);
    (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 32))(boxed_opaque_existential_1, v14, a5);
    sub_25E681ED4(v32, v30);
  }
  uint64_t v39 = v47;
  uint64_t v38 = v48;
  long long v41 = v45;
  long long v40 = v46;
  memset(v55, 0, sizeof(v55));
  v54[0] = v48;
  v54[1] = v47;
  sub_25E681EAC(v48, v47);
  sub_25E6771E4((uint64_t)v63, v40, v41, &v62, 1, 0, (uint64_t)&v59, (uint64_t)&v56, v64, (uint64_t)v55, v54);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v38, v39);
  sub_25E681F7C((uint64_t)v55, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v56, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v59, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  long long v42 = sub_25E677878((uint64_t)v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  return v42;
}

{
  long long *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50[2];
  unsigned char v51[80];
  long long v52;
  long long v53;
  uint64_t v54;
  void v55[5];
  unsigned __int8 v56;
  void v57[5];
  uint64_t v58[5];
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  uint64_t v69;

  long long v43 = a6;
  long long v46 = a3;
  uint64_t v11 = sub_25E6C2790();
  long long v45 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v44 = (char *)&v40 - v12;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  long long v15 = a1[2];
  long long v16 = *a2;
  long long v17 = a2[1];
  long long v41 = a2[2];
  long long v42 = v16;
  long long v18 = *a4;
  long long v48 = a4[1];
  long long v49 = v18;
  long long v19 = v6[9];
  v67 = v6[8];
  long long v68 = v19;
  v69 = *((void *)v6 + 20);
  long long v20 = v6[5];
  long long v63 = v6[4];
  long long v64 = v20;
  uint64_t v21 = v6[7];
  long long v65 = v6[6];
  long long v66 = v21;
  uint64_t v22 = v6[1];
  uint64_t v59 = *v6;
  uint64_t v60 = v22;
  uint64_t v23 = v6[3];
  v61 = v6[2];
  long long v62 = v23;
  v57[3] = type metadata accessor for Expression();
  v57[4] = &protocol witness table for Expression<A>;
  v57[0] = v13;
  v57[1] = v14;
  v57[2] = v15;
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 40);
  uint64_t v25 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = v24(a5, v25);
  uint64_t v27 = v41;
  long long v47 = v26;
  unint64_t v29 = v28;
  long long v56 = 2;
  v55[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v55[4] = &protocol witness table for Expression<A>;
  v55[0] = v42;
  v55[1] = v17;
  uint64_t v31 = v44;
  uint64_t v30 = v45;
  v55[2] = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v46, v11);
  uint64_t v32 = *(void *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, a5) == 1)
  {
    v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v31, v11);
    long long v54 = 0;
    long long v52 = 0u;
    long long v53 = 0u;
  }
  else
  {
    long long v34 = *(void *)(v25 + 8);
    *((void *)&v53 + 1) = a5;
    long long v54 = v34;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v52);
    (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(boxed_opaque_existential_1, v31, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  memset(v51, 0, sizeof(v51));
  unsigned __int8 v37 = v48;
  uint64_t v36 = v49;
  v50[0] = v49;
  v50[1] = v48;
  sub_25E681EAC(v49, v48);
  sub_25E6771E4((uint64_t)v57, v47, v29, &v56, 1, 0, (uint64_t)v55, (uint64_t)&v52, v58, (uint64_t)v51, v50);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v36, v37);
  sub_25E681F7C((uint64_t)v51, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v52, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v55, &qword_26B38E1F0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  uint64_t v38 = sub_25E677878((uint64_t)v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return v38;
}

uint64_t sub_25E679748(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 32) = 0x4154205245544C41;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = 0xEB00000000454C42;
  *(void *)(inited + 48) = v5;
  if (v1[5])
  {
    uint64_t v6 = v1[4];
    uint64_t v7 = v1[5];
  }
  else
  {
    uint64_t v6 = v1[2];
    uint64_t v7 = v1[3];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v6, v7, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = v4;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = 0x5420454D414E4552;
  *(void *)(inited + 120) = 0xE90000000000004FLL;
  *(void *)(inited + 128) = v5;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(inited + 176) = v4;
  *(void *)(inited + 184) = &protocol witness table for Expression<A>;
  swift_bridgeObjectRetain();
  sub_25E681960(0, 0xE000000000000000, v8, v9, 34, 0xE100000000000000);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  *(void *)(inited + 152) = 0;
  *(void *)(inited + 160) = 0xE000000000000000;
  *(void *)(inited + 168) = v5;
  sub_25E686E60(inited, v12);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return countAndFlagsBits;
}

uint64_t Table.createIndex(_:unique:ifNotExists:)(uint64_t a1, char a2, char a3)
{
  long long v7 = v3[9];
  long long v61 = v3[8];
  long long v62 = v7;
  uint64_t v63 = *((void *)v3 + 20);
  long long v8 = v3[5];
  long long v57 = v3[4];
  long long v58 = v8;
  long long v9 = v3[7];
  long long v59 = v3[6];
  long long v60 = v9;
  long long v10 = v3[1];
  *(_OWORD *)&v53[29] = *v3;
  long long v54 = v10;
  long long v11 = v3[3];
  long long v55 = v3[2];
  long long v56 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  long long v13 = v3[8];
  long long v14 = v3[9];
  long long v15 = v3[6];
  long long v49 = v3[7];
  long long v50 = v13;
  long long v51 = v14;
  long long v17 = v3[4];
  long long v16 = v3[5];
  uint64_t v52 = *((void *)v3 + 20);
  long long v47 = v16;
  long long v48 = v15;
  long long v18 = v3[1];
  long long v42 = *v3;
  long long v43 = v18;
  long long v19 = v3[2];
  long long v45 = v3[3];
  long long v46 = v17;
  long long v44 = v19;
  uint64_t v37 = a1;
  sub_25E679E08(a1, v53);
  if (a2) {
    unsigned __int8 v20 = 0;
  }
  else {
    unsigned __int8 v20 = 2;
  }
  sub_25E676C44(0x5845444E49, 0xE500000000000000, (uint64_t)v53, v20, a3, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = 20047;
  *(void *)(inited + 80) = 0xE200000000000000;
  *(void *)(inited + 88) = MEMORY[0x263F8EE78];
  *(void *)(inited + 96) = v21;
  if (*((void *)&v55 + 1))
  {
    uint64_t v23 = *((void *)&v55 + 1);
    uint64_t v22 = v55;
  }
  else
  {
    uint64_t v23 = *((void *)&v54 + 1);
    uint64_t v22 = v54;
    swift_bridgeObjectRetain();
  }
  *(void *)(inited + 136) = v21;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  swift_bridgeObjectRetain();
  sub_25E681960(0, 0xE000000000000000, v22, v23, 34, 0xE100000000000000);
  *(void *)&long long v42 = 0;
  *((void *)&v42 + 1) = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  *(void *)(inited + 112) = 0;
  *(void *)(inited + 120) = 0xE000000000000000;
  uint64_t v24 = (void *)MEMORY[0x263F8EE78];
  *(void *)(inited + 128) = MEMORY[0x263F8EE78];
  *(void *)(inited + 176) = v21;
  *(void *)(inited + 184) = &protocol witness table for Expression<A>;
  sub_25E686E60(v37, (uint64_t *)&v42);
  sub_25E680774(&v42, 0, 0xE000000000000000, (void *)(inited + 152));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  long long v41 = v24;
  for (uint64_t i = 32; i != 192; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)&v42, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)&v42, (uint64_t)&v38);
    if (v39)
    {
      sub_25E681E94(&v38, (uint64_t)v53);
      sub_25E681E94((long long *)v53, (uint64_t)&v38);
      uint64_t v26 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v26 = sub_25E680BF4(0, v26[2] + 1, 1, v26, qword_26B38E148, &qword_26B38E0F0);
        long long v41 = v26;
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v41 = sub_25E680BF4((void *)(v27 > 1), v28 + 1, 1, v26, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v29 = v39;
      uint64_t v30 = v40;
      uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
      MEMORY[0x270FA5388](v31);
      v33 = (char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_25E6811A8(v28, (uint64_t)v33, (uint64_t *)&v41, v29, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v38, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v41, (uint64_t *)&v42);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  return countAndFlagsBits;
}

uint64_t sub_25E679E08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v5 = v2[9];
  long long v48 = v2[8];
  long long v49 = v5;
  uint64_t v50 = *((void *)v2 + 20);
  long long v6 = v2[5];
  long long v44 = v2[4];
  long long v45 = v6;
  long long v7 = v2[7];
  long long v46 = v2[6];
  long long v47 = v7;
  long long v8 = v2[1];
  long long v40 = *v2;
  long long v41 = v8;
  long long v9 = v2[3];
  long long v42 = v2[2];
  long long v43 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E220);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25E6C31A0;
  *(void *)(v10 + 32) = 0x7865646E69;
  *(void *)(v10 + 40) = 0xE500000000000000;
  uint64_t v11 = *((void *)&v41 + 1);
  *(void *)(v10 + 48) = v41;
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = 28271;
  *(void *)(v10 + 72) = 0xE200000000000000;
  int64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v39 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25E68B5FC(0, v12, 0);
    uint64_t v13 = a1 + 32;
    uint64_t v14 = v39;
    do
    {
      sub_25E681F18(v13, (uint64_t)v36);
      uint64_t v15 = v37;
      uint64_t v16 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8))(&v34, v15, v16);
      uint64_t v17 = v34;
      uint64_t v18 = v35;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B5FC(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v39;
      }
      unint64_t v20 = *(void *)(v14 + 16);
      unint64_t v19 = *(void *)(v14 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_25E68B5FC((char *)(v19 > 1), v20 + 1, 1);
        uint64_t v14 = v39;
      }
      *(void *)(v14 + 16) = v20 + 1;
      uint64_t v21 = v14 + 16 * v20;
      *(void *)(v21 + 32) = v17;
      *(void *)(v21 + 40) = v18;
      v13 += 40;
      --v12;
    }
    while (v12);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  v36[0] = v10;
  sub_25E686834(v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
  sub_25E682618();
  sub_25E6C24B0();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_25E6C2540();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = HIBYTE(v24) & 0xF;
  v36[0] = v22;
  v36[1] = v24;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
  }
  v36[2] = 0;
  uint64_t v37 = v25;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_25E6C25D0();
  if (!v27)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0xE000000000000000;
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25E67A2F8(v30, v31, a2);
    return swift_bridgeObjectRelease();
  }
  uint64_t v28 = v26;
  uint64_t v29 = v27;
  uint64_t v30 = 0;
  uint64_t v31 = 0xE000000000000000;
  while (v28 == 34 && v29 == 0xE100000000000000 || (sub_25E6C2910() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v28 = sub_25E6C25D0();
    uint64_t v29 = v32;
    if (!v32) {
      goto LABEL_38;
    }
  }
  uint64_t result = sub_25E6C2910();
  if ((result & 1) == 0)
  {
    if (v28 != 97 || v29 != 0xE100000000000000)
    {
      if (sub_25E6C2910()) {
        goto LABEL_25;
      }
      if (v28 == 122 && v29 == 0xE100000000000000) {
        goto LABEL_36;
      }
    }
    if ((sub_25E6C2910() & 1) == 0)
    {
LABEL_36:
      uint64_t v34 = v30;
      uint64_t v35 = v31;
      swift_bridgeObjectRetain();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = v34;
      uint64_t v31 = v35;
      goto LABEL_15;
    }
LABEL_25:
    uint64_t result = sub_25E6C2910();
    if (result) {
      goto LABEL_40;
    }
    if (v28 == 48 && v29 == 0xE100000000000000
      || (sub_25E6C2910() & 1) == 0 && (v28 != 57 || v29 != 0xE100000000000000))
    {
      sub_25E6C2910();
    }
    goto LABEL_36;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t Table.dropIndex(_:ifExists:)(uint64_t a1, char a2)
{
  sub_25E679E08(a1, v5);
  uint64_t v3 = sub_25E681AE4(0x5845444E49, 0xE500000000000000, (uint64_t)v5, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_25E67A2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  sub_25E681960(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v4 + 56);
  if (v8)
  {
    uint64_t v9 = *(void *)(v4 + 48);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 56) = v11;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    sub_25E681960(0, 0xE000000000000000, v9, v8, 34, 0xE100000000000000);
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    swift_bridgeObjectRelease();
    *(void *)(inited + 32) = 0;
    uint64_t v12 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE000000000000000;
    *(void *)(inited + 48) = v12;
    *(void *)(inited + 96) = v11;
    *(void *)(inited + 104) = &protocol witness table for Expression<A>;
    *(void *)(inited + 72) = 0;
    *(void *)(inited + 80) = 0xE000000000000000;
    *(void *)(inited + 88) = v12;
    sub_25E686E60(inited, a3);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    a3[4] = (uint64_t)&protocol witness table for Expression<A>;
    *a3 = 0;
    a3[1] = 0xE000000000000000;
    a3[2] = MEMORY[0x263F8EE78];
    a3[3] = result;
  }
  return result;
}

uint64_t View.create(_:temporary:ifNotExists:)(void *a1, char a2, char a3)
{
  return sub_25E67A564(a1, a2, a3, 1464158550, 0xE400000000000000);
}

uint64_t sub_25E67A564(void *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a5;
  long long v10 = v5[9];
  long long v52 = v5[8];
  long long v53 = v10;
  uint64_t v54 = *((void *)v5 + 20);
  long long v11 = v5[5];
  long long v48 = v5[4];
  long long v49 = v11;
  long long v12 = v5[7];
  long long v50 = v5[6];
  long long v51 = v12;
  long long v13 = v5[1];
  long long v44 = *v5;
  long long v45 = v13;
  long long v14 = v5[3];
  long long v46 = v5[2];
  long long v47 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  if (*((void *)&v46 + 1))
  {
    uint64_t v17 = *((void *)&v46 + 1);
    uint64_t v16 = v46;
  }
  else
  {
    uint64_t v17 = *((void *)&v45 + 1);
    uint64_t v16 = v45;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v16, v17, v43);
  swift_bridgeObjectRelease();
  if (a2) {
    unsigned __int8 v18 = 1;
  }
  else {
    unsigned __int8 v18 = 2;
  }
  sub_25E676C44(a4, v37, (uint64_t)v43, v18, a3 & 1, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  unint64_t v20 = (void *)MEMORY[0x263F8EE78];
  *(void *)(inited + 72) = 21313;
  *(void *)(inited + 80) = 0xE200000000000000;
  *(void *)(inited + 88) = v20;
  *(void *)(inited + 96) = v19;
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  unint64_t v23 = __swift_project_boxed_opaque_existential_1(a1, v21);
  *(void *)(inited + 136) = v21;
  *(void *)(inited + 144) = *(void *)(v22 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 112));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_1, v23, v21);
  long long v42 = v20;
  for (uint64_t i = 32; i != 152; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v43, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)v43, (uint64_t)&v38);
    if (v39)
    {
      sub_25E681E94(&v38, (uint64_t)v41);
      sub_25E681E94(v41, (uint64_t)&v38);
      uint64_t v26 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v26 = sub_25E680BF4(0, v26[2] + 1, 1, v26, qword_26B38E148, &qword_26B38E0F0);
        long long v42 = v26;
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v42 = sub_25E680BF4((void *)(v27 > 1), v28 + 1, 1, v26, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v29 = v39;
      uint64_t v30 = v40;
      uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
      MEMORY[0x270FA5388](v31);
      v33 = (char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_25E6811A8(v28, (uint64_t)v33, (uint64_t *)&v42, v29, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v38, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v42, v43);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v43, v43[3]);
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return countAndFlagsBits;
}

Swift::String __swiftcall View.drop(ifExists:)(Swift::Bool ifExists)
{
  long long v3 = v1[9];
  long long v25 = v1[8];
  long long v26 = v3;
  uint64_t v27 = *((void *)v1 + 20);
  long long v4 = v1[5];
  long long v21 = v1[4];
  long long v22 = v4;
  long long v5 = v1[7];
  long long v23 = v1[6];
  long long v24 = v5;
  long long v6 = v1[1];
  long long v17 = *v1;
  long long v18 = v6;
  long long v7 = v1[3];
  long long v19 = v1[2];
  long long v20 = v7;
  if (*((void *)&v19 + 1))
  {
    uint64_t v8 = *((void *)&v19 + 1);
    uint64_t v9 = v19;
  }
  else
  {
    uint64_t v8 = *((void *)&v18 + 1);
    uint64_t v9 = v18;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v9, v8, v16);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_25E681AE4(1464158550, 0xE400000000000000, (uint64_t)v16, ifExists);
  long long v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  uint64_t v13 = v10;
  long long v14 = v12;
  result._object = v14;
  result._uint64_t countAndFlagsBits = v13;
  return result;
}

uint64_t VirtualTable.create(_:ifNotExists:)(uint64_t *a1, char a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  long long v7 = v2[9];
  long long v44 = v2[8];
  long long v45 = v7;
  uint64_t v46 = *((void *)v2 + 20);
  long long v8 = v2[5];
  long long v40 = v2[4];
  long long v41 = v8;
  long long v9 = v2[7];
  long long v42 = v2[6];
  long long v43 = v9;
  long long v10 = v2[1];
  long long v36 = *v2;
  long long v37 = v10;
  long long v11 = v2[3];
  long long v38 = v2[2];
  long long v39 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  if (*((void *)&v38 + 1))
  {
    uint64_t v13 = *((void *)&v38 + 1);
    uint64_t v14 = v38;
  }
  else
  {
    uint64_t v13 = *((void *)&v37 + 1);
    uint64_t v14 = v37;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_25E67A2F8(v14, v13, v35);
  swift_bridgeObjectRelease();
  sub_25E676C44(0x204C415554524956, 0xED0000454C424154, (uint64_t)v35, 2u, a2 & 1, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 72) = 0x474E495355;
  *(void *)(inited + 80) = 0xE500000000000000;
  *(void *)(inited + 136) = &type metadata for Module;
  *(void *)(inited + 144) = &protocol witness table for Module;
  uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  *(void *)(inited + 88) = MEMORY[0x263F8EE78];
  *(void *)(inited + 96) = v15;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = v5;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 128) = v6;
  uint64_t v34 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (uint64_t i = 32; i != 152; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v35, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)v35, (uint64_t)&v30);
    if (v31)
    {
      sub_25E681E94(&v30, (uint64_t)v33);
      sub_25E681E94(v33, (uint64_t)&v30);
      long long v18 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        long long v18 = sub_25E680BF4(0, v18[2] + 1, 1, v18, qword_26B38E148, &qword_26B38E0F0);
        uint64_t v34 = v18;
      }
      unint64_t v20 = v18[2];
      unint64_t v19 = v18[3];
      if (v20 >= v19 >> 1) {
        uint64_t v34 = sub_25E680BF4((void *)(v19 > 1), v20 + 1, 1, v18, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v21 = v31;
      uint64_t v22 = v32;
      uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30, v31);
      MEMORY[0x270FA5388](v23);
      long long v25 = (char *)&v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v26 + 16))(v25);
      sub_25E6811A8(v20, (uint64_t)v25, (uint64_t *)&v34, v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v30, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v34, v35);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return countAndFlagsBits;
}

uint64_t _s11SwiftSQLite5TableV6renameySSACF_0(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  uint64_t v14 = *(void *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = v1[9];
  long long v23 = v1[8];
  long long v24 = v7;
  uint64_t v25 = *((void *)v1 + 20);
  long long v8 = v1[5];
  long long v19 = v1[4];
  long long v20 = v8;
  long long v9 = v1[7];
  long long v21 = v1[6];
  long long v22 = v9;
  long long v10 = v1[1];
  long long v15 = *v1;
  long long v16 = v10;
  long long v11 = v1[3];
  long long v17 = v1[2];
  long long v18 = v11;
  return sub_25E679748((uint64_t)v13);
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:)(void *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v12 = a3[2];
  uint64_t v14 = *a4;
  uint64_t v13 = a4[1];
  uint64_t v22 = a4[2];
  v34[0] = *a1;
  v34[1] = v8;
  v34[2] = v9;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  unsigned __int8 v33 = 2;
  if (!v10)
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v19 = v14;
    if (v13) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
    goto LABEL_6;
  }
  *((void *)&v31 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v32 = &protocol witness table for Expression<A>;
  *(void *)&long long v30 = v11;
  *((void *)&v30 + 1) = v10;
  *(void *)&long long v31 = v12;
  uint64_t v19 = v14;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v28 + 1) = type metadata accessor for Expression();
  uint64_t v29 = &protocol witness table for Expression<A>;
  *(void *)&long long v27 = v19;
  *((void *)&v27 + 1) = v13;
  *(void *)&long long v28 = v22;
LABEL_6:
  long long v25 = xmmword_25E6C31E0;
  memset(v26, 0, sizeof(v26));
  sub_25E681ED4(v11, v10);
  sub_25E681ED4(v19, v13);
  uint64_t v20 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v34, v16, v18, &v33, 0, a2 & 1, (uint64_t)&v30, (uint64_t)&v27, (uint64_t)v26, &v25, v24, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v26, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v27, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;
  long long v24;
  _OWORD v25[5];
  long long v26;
  long long v27;
  _UNKNOWN **v28;
  void v29[5];
  unsigned __int8 v30;
  void v31[4];

  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a3[1];
  long long v21 = *a3;
  uint64_t v11 = a3[2];
  uint64_t v12 = *a4;
  uint64_t v13 = a4[1];
  uint64_t v14 = a4[2];
  v31[0] = *a1;
  v31[1] = v8;
  uint64_t v31[2] = v9;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  long long v30 = 2;
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v29[4] = &protocol witness table for Expression<A>;
  v29[0] = v21;
  v29[1] = v10;
  v29[2] = v11;
  if (v13)
  {
    *((void *)&v27 + 1) = type metadata accessor for Expression();
    long long v28 = &protocol witness table for Expression<A>;
    *(void *)&uint64_t v26 = v12;
    *((void *)&v26 + 1) = v13;
    *(void *)&long long v27 = v14;
  }
  else
  {
    long long v28 = 0;
    uint64_t v26 = 0u;
    long long v27 = 0u;
  }
  uint64_t v24 = xmmword_25E6C31E0;
  memset(v25, 0, sizeof(v25));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681ED4(v12, v13);
  uint64_t v19 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v31, v16, v18, &v30, 0, a2 & 1, (uint64_t)v29, (uint64_t)&v26, (uint64_t)v25, &v24, v23, v19, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v25, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v26, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v29, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v24;
  long long v25;
  _OWORD v26[5];
  long long v27;
  long long v28;
  _UNKNOWN **v29;
  long long v30;
  long long v31;
  _UNKNOWN **v32;
  unsigned __int8 v33;
  void v34[4];

  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v12 = a3[2];
  uint64_t v14 = *a4;
  uint64_t v13 = a4[1];
  uint64_t v22 = a4[2];
  v34[0] = *a1;
  v34[1] = v8;
  v34[2] = v9;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  unsigned __int8 v33 = 2;
  if (!v10)
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v19 = v14;
    if (v13) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
    goto LABEL_6;
  }
  *((void *)&v31 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v32 = &protocol witness table for Expression<A>;
  *(void *)&long long v30 = v11;
  *((void *)&v30 + 1) = v10;
  *(void *)&long long v31 = v12;
  uint64_t v19 = v14;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v28 + 1) = type metadata accessor for Expression();
  uint64_t v29 = &protocol witness table for Expression<A>;
  *(void *)&long long v27 = v19;
  *((void *)&v27 + 1) = v13;
  *(void *)&long long v28 = v22;
LABEL_6:
  long long v25 = xmmword_25E6C31E0;
  memset(v26, 0, sizeof(v26));
  sub_25E681ED4(v11, v10);
  sub_25E681ED4(v19, v13);
  sub_25E6C2790();
  uint64_t v20 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v34, v16, v18, &v33, 1, a2 & 1, (uint64_t)&v30, (uint64_t)&v27, (uint64_t)v26, &v25, v24, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v26, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v27, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  long long v23;
  _OWORD v24[5];
  void v25[3];
  uint64_t v26;
  _UNKNOWN **v27;
  long long v28;
  long long v29;
  _UNKNOWN **v30;
  unsigned __int8 v31;
  void v32[4];

  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v12 = a3[2];
  uint64_t v13 = a4[1];
  uint64_t v20 = *a4;
  uint64_t v14 = a4[2];
  v32[0] = *a1;
  v32[1] = v8;
  v32[2] = v9;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  long long v31 = 2;
  if (v10)
  {
    *((void *)&v29 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v30 = &protocol witness table for Expression<A>;
    *(void *)&long long v28 = v11;
    *((void *)&v28 + 1) = v10;
    *(void *)&uint64_t v29 = v12;
  }
  else
  {
    long long v30 = 0;
    long long v28 = 0u;
    uint64_t v29 = 0u;
  }
  sub_25E6C2790();
  uint64_t v26 = type metadata accessor for Expression();
  long long v27 = &protocol witness table for Expression<A>;
  v25[0] = v20;
  v25[1] = v13;
  v25[2] = v14;
  long long v23 = xmmword_25E6C31E0;
  memset(v24, 0, sizeof(v24));
  sub_25E681ED4(v11, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v32, v16, v18, &v31, 1, a2 & 1, (uint64_t)&v28, (uint64_t)v25, (uint64_t)v24, &v23, v22, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v24, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v25, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v28, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;
  long long v24;
  _OWORD v25[5];
  long long v26;
  long long v27;
  _UNKNOWN **v28;
  void v29[5];
  unsigned __int8 v30;
  void v31[4];

  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a3[1];
  long long v21 = *a3;
  uint64_t v11 = a3[2];
  uint64_t v12 = *a4;
  uint64_t v13 = a4[1];
  uint64_t v14 = a4[2];
  v31[0] = *a1;
  v31[1] = v8;
  uint64_t v31[2] = v9;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  long long v30 = 2;
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v29[4] = &protocol witness table for Expression<A>;
  v29[0] = v21;
  v29[1] = v10;
  v29[2] = v11;
  if (v13)
  {
    *((void *)&v27 + 1) = type metadata accessor for Expression();
    long long v28 = &protocol witness table for Expression<A>;
    *(void *)&uint64_t v26 = v12;
    *((void *)&v26 + 1) = v13;
    *(void *)&long long v27 = v14;
  }
  else
  {
    long long v28 = 0;
    uint64_t v26 = 0u;
    long long v27 = 0u;
  }
  uint64_t v24 = xmmword_25E6C31E0;
  memset(v25, 0, sizeof(v25));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681ED4(v12, v13);
  sub_25E6C2790();
  uint64_t v19 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v31, v16, v18, &v30, 1, a2 & 1, (uint64_t)v29, (uint64_t)&v26, (uint64_t)v25, &v24, v23, v19, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v25, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v26, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v29, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  long long v23;
  _OWORD v24[5];
  void v25[3];
  uint64_t v26;
  _UNKNOWN **v27;
  void v28[5];
  unsigned __int8 v29;
  void v30[4];

  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v12 = a3[2];
  uint64_t v13 = a4[1];
  uint64_t v20 = *a4;
  uint64_t v14 = a4[2];
  v30[0] = *a1;
  v30[1] = v8;
  v30[2] = v9;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  uint64_t v29 = 2;
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v11;
  v28[1] = v10;
  v28[2] = v12;
  sub_25E6C2790();
  uint64_t v26 = type metadata accessor for Expression();
  long long v27 = &protocol witness table for Expression<A>;
  v25[0] = v20;
  v25[1] = v13;
  v25[2] = v14;
  long long v23 = xmmword_25E6C31E0;
  memset(v24, 0, sizeof(v24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v30, v16, v18, &v29, 1, a2, (uint64_t)v28, (uint64_t)v25, (uint64_t)v24, &v23, v21, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v24, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v25, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:)(void *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v14 = a3[2];
  v31[0] = *a1;
  v31[1] = v10;
  uint64_t v31[2] = v11;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  unsigned __int8 v30 = 2;
  if (v12)
  {
    *((void *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    uint64_t v29 = &protocol witness table for Expression<A>;
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v12;
    *(void *)&long long v28 = v14;
  }
  else
  {
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
  }
  uint64_t v19 = *(void *)(a6 + 8);
  v26[3] = a5;
  v26[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  long long v24 = xmmword_25E6C31E0;
  memset(v25, 0, sizeof(v25));
  sub_25E681ED4(v13, v12);
  uint64_t v21 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v31, v16, v18, &v30, 0, a2 & 1, (uint64_t)&v27, (uint64_t)v26, (uint64_t)v25, &v24, v23, v21, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v25, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v26, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v27, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  long long v25;
  _OWORD v26[5];
  uint64_t v27[5];
  void v28[5];
  unsigned __int8 v29;
  void v30[4];

  long long v7 = v6;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v14 = *a3;
  uint64_t v13 = a3[1];
  long long v15 = a3[2];
  v30[0] = *a1;
  v30[1] = v11;
  v30[2] = v12;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a5, a6);
  uint64_t v19 = v18;
  uint64_t v29 = 2;
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v14;
  v28[1] = v13;
  v28[2] = v15;
  uint64_t v20 = *(void *)(a6 + 8);
  v27[3] = a5;
  v27[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  long long v25 = xmmword_25E6C31E0;
  memset(v26, 0, sizeof(v26));
  uint64_t v22 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v30, v17, v19, &v29, 0, a2, (uint64_t)v28, (uint64_t)v27, (uint64_t)v26, &v25, v7, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v26, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v23;
  long long v24;
  _OWORD v25[5];
  uint64_t v26[5];
  long long v27;
  long long v28;
  _UNKNOWN **v29;
  unsigned __int8 v30;
  void v31[4];

  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v14 = a3[2];
  v31[0] = *a1;
  v31[1] = v10;
  uint64_t v31[2] = v11;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  unsigned __int8 v30 = 2;
  if (v12)
  {
    *((void *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    uint64_t v29 = &protocol witness table for Expression<A>;
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v12;
    *(void *)&long long v28 = v14;
  }
  else
  {
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
  }
  uint64_t v19 = *(void *)(a6 + 8);
  v26[3] = a5;
  v26[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  long long v24 = xmmword_25E6C31E0;
  memset(v25, 0, sizeof(v25));
  sub_25E681ED4(v13, v12);
  sub_25E6C2790();
  uint64_t v21 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v31, v16, v18, &v30, 1, a2 & 1, (uint64_t)&v27, (uint64_t)v26, (uint64_t)v25, &v24, v23, v21, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v25, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v26, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v27, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  long long v25;
  _OWORD v26[5];
  uint64_t v27[5];
  void v28[5];
  unsigned __int8 v29;
  void v30[4];

  long long v7 = v6;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  long long v15 = a3[2];
  v30[0] = *a1;
  v30[1] = v11;
  v30[2] = v12;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a5, a6);
  uint64_t v19 = v18;
  uint64_t v29 = 2;
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v13;
  v28[1] = v14;
  v28[2] = v15;
  uint64_t v20 = *(void *)(a6 + 8);
  v27[3] = a5;
  v27[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  long long v25 = xmmword_25E6C31E0;
  memset(v26, 0, sizeof(v26));
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v30, v17, v19, &v29, 1, a2, (uint64_t)v28, (uint64_t)v27, (uint64_t)v26, &v25, v7, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v26, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:primaryKey:check:defaultValue:)(void *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = a4[1];
  uint64_t v24 = a4[2];
  uint64_t v25 = *a4;
  v36[0] = *a1;
  v36[1] = v9;
  v36[2] = v10;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  if (a2) {
    unsigned __int8 v19 = 0;
  }
  else {
    unsigned __int8 v19 = 2;
  }
  unsigned __int8 v35 = v19;
  if (!v11)
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    uint64_t v21 = v24;
    uint64_t v20 = v25;
    if (v14) {
      goto LABEL_6;
    }
LABEL_8:
    long long v31 = 0;
    long long v29 = 0u;
    long long v30 = 0u;
    goto LABEL_9;
  }
  *((void *)&v33 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v34 = &protocol witness table for Expression<A>;
  *(void *)&long long v32 = v12;
  *((void *)&v32 + 1) = v11;
  *(void *)&long long v33 = v13;
  uint64_t v21 = v24;
  uint64_t v20 = v25;
  if (!v14) {
    goto LABEL_8;
  }
LABEL_6:
  *((void *)&v30 + 1) = type metadata accessor for Expression();
  long long v31 = &protocol witness table for Expression<A>;
  *(void *)&long long v29 = v20;
  *((void *)&v29 + 1) = v14;
  *(void *)&long long v30 = v21;
LABEL_9:
  long long v27 = xmmword_25E6C31E0;
  memset(v28, 0, sizeof(v28));
  sub_25E681ED4(v12, v11);
  sub_25E681ED4(v20, v14);
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v36, v16, v18, &v35, 0, 0, (uint64_t)&v32, (uint64_t)&v29, (uint64_t)v28, &v27, v26, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v32, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  long long v25;
  _OWORD v26[5];
  long long v27;
  long long v28;
  _UNKNOWN **v29;
  void v30[5];
  unsigned __int8 v31;
  void v32[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a3[1];
  uint64_t v12 = a3[2];
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  uint64_t v22 = *a3;
  uint64_t v23 = a4[2];
  v32[0] = *a1;
  v32[1] = v9;
  v32[2] = v10;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a5, a6);
  uint64_t v18 = v17;
  if (a2) {
    unsigned __int8 v19 = 0;
  }
  else {
    unsigned __int8 v19 = 2;
  }
  long long v31 = v19;
  v30[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v22;
  v30[1] = v11;
  v30[2] = v12;
  if (v14)
  {
    *((void *)&v28 + 1) = type metadata accessor for Expression();
    long long v29 = &protocol witness table for Expression<A>;
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v14;
    *(void *)&long long v28 = v23;
  }
  else
  {
    long long v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
  }
  uint64_t v25 = xmmword_25E6C31E0;
  memset(v26, 0, sizeof(v26));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681ED4(v13, v14);
  uint64_t v20 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v32, v16, v18, &v31, 0, 0, (uint64_t)v30, (uint64_t)&v27, (uint64_t)v26, &v25, v24, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v26, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v27, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:primaryKey:check:)(void *a1, unsigned __int8 *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  unsigned __int8 v11 = *a2;
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v14 = a3[2];
  v29[0] = *a1;
  v29[1] = v9;
  v29[2] = v10;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a4, a5);
  uint64_t v18 = v17;
  unsigned __int8 v28 = v11;
  if (v12)
  {
    *((void *)&v26 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v27 = &protocol witness table for Expression<A>;
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = v12;
    *(void *)&long long v26 = v14;
  }
  else
  {
    long long v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
  }
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  long long v21 = xmmword_25E6C31E0;
  memset(v22, 0, sizeof(v22));
  sub_25E681ED4(v13, v12);
  uint64_t v19 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v29, v16, v18, &v28, 0, 0, (uint64_t)&v25, (uint64_t)v23, (uint64_t)v22, &v21, v6, v19, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v22, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v23, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v25, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  long long v21;
  _OWORD v22[5];
  _OWORD v23[2];
  uint64_t v24;
  void v25[5];
  unsigned __int8 v26;
  void v27[4];

  uint64_t v6 = v5;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  unsigned __int8 v11 = *a2;
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v14 = a3[2];
  v27[0] = *a1;
  v27[1] = v9;
  v27[2] = v10;
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15(a4, a5);
  uint64_t v18 = v17;
  long long v26 = v11;
  v25[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v13;
  v25[1] = v12;
  v25[2] = v14;
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  long long v21 = xmmword_25E6C31E0;
  memset(v22, 0, sizeof(v22));
  uint64_t v19 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v27, v16, v18, &v26, 0, 0, (uint64_t)v25, (uint64_t)v23, (uint64_t)v22, &v21, v6, v19, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v22, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v23, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v25, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:references:_:)(void *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = a5[1];
  uint64_t v21 = *a5;
  uint64_t v15 = a5[2];
  v39[0] = *a1;
  v39[1] = v9;
  long long v39[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = v16(a6, a7);
  uint64_t v18 = v17;
  unsigned __int8 v38 = 2;
  if (v11)
  {
    *((void *)&v36 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v37 = &protocol witness table for Expression<A>;
    *(void *)&long long v35 = v12;
    *((void *)&v35 + 1) = v11;
    *(void *)&long long v36 = v13;
  }
  else
  {
    long long v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
  }
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_25E681F18(a4, (uint64_t)v27);
  uint64_t v19 = type metadata accessor for Expression();
  uint64_t v31 = v19;
  long long v32 = &protocol witness table for Expression<A>;
  uint64_t v28 = v21;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  long long v26 = xmmword_25E6C31E0;
  sub_25E681ED4(v12, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v39, v23, v18, &v38, 0, a2 & 1, (uint64_t)&v35, (uint64_t)v33, (uint64_t)v27, &v26, v25, v19, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v33, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v35, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v25;
  long long v26;
  unsigned char v27[40];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  _OWORD v33[2];
  uint64_t v34;
  void v35[5];
  unsigned __int8 v36;
  void v37[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = a5[1];
  uint64_t v23 = *a5;
  uint64_t v15 = a5[2];
  v37[0] = *a1;
  v37[1] = v9;
  long long v37[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v36 = 2;
  v35[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v35[4] = &protocol witness table for Expression<A>;
  v35[0] = v11;
  v35[1] = v12;
  v35[2] = v13;
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_25E681F18(a4, (uint64_t)v27);
  uint64_t v20 = type metadata accessor for Expression();
  uint64_t v31 = v20;
  long long v32 = &protocol witness table for Expression<A>;
  uint64_t v28 = v23;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  long long v26 = xmmword_25E6C31E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v37, v17, v19, &v36, 0, a2, (uint64_t)v35, (uint64_t)v33, (uint64_t)v27, &v26, v25, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v33, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v35, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v25;
  long long v26;
  unsigned char v27[40];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  _OWORD v33[2];
  uint64_t v34;
  long long v35;
  long long v36;
  _UNKNOWN **v37;
  unsigned __int8 v38;
  void v39[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = a5[1];
  uint64_t v22 = *a5;
  uint64_t v15 = a5[2];
  v39[0] = *a1;
  v39[1] = v9;
  long long v39[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  unsigned __int8 v38 = 2;
  if (v11)
  {
    *((void *)&v36 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v37 = &protocol witness table for Expression<A>;
    *(void *)&long long v35 = v12;
    *((void *)&v35 + 1) = v11;
    *(void *)&long long v36 = v13;
  }
  else
  {
    long long v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
  }
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_25E681F18(a4, (uint64_t)v27);
  uint64_t v31 = type metadata accessor for Expression();
  long long v32 = &protocol witness table for Expression<A>;
  uint64_t v28 = v22;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  long long v26 = xmmword_25E6C31E0;
  sub_25E681ED4(v12, v11);
  sub_25E6C2790();
  uint64_t v20 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v39, v17, v19, &v38, 1, a2 & 1, (uint64_t)&v35, (uint64_t)v33, (uint64_t)v27, &v26, v25, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v33, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v35, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v25;
  long long v26;
  unsigned char v27[40];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  _OWORD v33[2];
  uint64_t v34;
  void v35[5];
  unsigned __int8 v36;
  void v37[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = a5[1];
  uint64_t v23 = *a5;
  uint64_t v15 = a5[2];
  v37[0] = *a1;
  v37[1] = v9;
  long long v37[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v36 = 2;
  v35[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v35[4] = &protocol witness table for Expression<A>;
  v35[0] = v11;
  v35[1] = v12;
  v35[2] = v13;
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_25E681F18(a4, (uint64_t)v27);
  uint64_t v31 = type metadata accessor for Expression();
  long long v32 = &protocol witness table for Expression<A>;
  uint64_t v28 = v23;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  long long v26 = xmmword_25E6C31E0;
  sub_25E6C2790();
  uint64_t v20 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E680F74((uint64_t)v37, v17, v19, &v36, 1, a2, (uint64_t)v35, (uint64_t)v33, (uint64_t)v27, &v26, v25, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681F7C((uint64_t)v33, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v35, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:collate:)(void *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = *a4;
  uint64_t v15 = a4[1];
  uint64_t v25 = *a5;
  uint64_t v26 = a4[2];
  unint64_t v24 = a5[1];
  v38[0] = *a1;
  v38[1] = v9;
  v38[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  unsigned __int8 v37 = 2;
  if (v12)
  {
    *((void *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v36 = &protocol witness table for Expression<A>;
    *(void *)&long long v34 = v11;
    *((void *)&v34 + 1) = v12;
    *(void *)&long long v35 = v13;
  }
  else
  {
    long long v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  uint64_t v20 = v11;
  if (v15)
  {
    uint64_t v21 = type metadata accessor for Expression();
    uint64_t v20 = v11;
    *((void *)&v32 + 1) = v21;
    long long v33 = &protocol witness table for Expression<A>;
    *(void *)&long long v31 = v14;
    *((void *)&v31 + 1) = v15;
    *(void *)&long long v32 = v26;
  }
  else
  {
    long long v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
  }
  memset(v30, 0, sizeof(v30));
  *(void *)&long long v29 = v25;
  *((void *)&v29 + 1) = v24;
  sub_25E681ED4(v20, v12);
  sub_25E681ED4(v14, v15);
  sub_25E681EAC(v25, v24);
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v38, v17, v19, &v37, 0, a2 & 1, (uint64_t)&v34, (uint64_t)&v31, (uint64_t)v30, &v29, v28, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v25, v24);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v31, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v34, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  long long v27;
  _OWORD v28[5];
  long long v29;
  long long v30;
  _UNKNOWN **v31;
  void v32[5];
  unsigned __int8 v33;
  void v34[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v15 = *a4;
  uint64_t v14 = a4[1];
  uint64_t v25 = *a5;
  uint64_t v26 = a4[2];
  uint64_t v22 = a5[1];
  v34[0] = *a1;
  v34[1] = v9;
  v34[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v33 = 2;
  v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v32[4] = &protocol witness table for Expression<A>;
  v32[0] = v11;
  v32[1] = v12;
  v32[2] = v13;
  if (v14)
  {
    *((void *)&v30 + 1) = type metadata accessor for Expression();
    long long v31 = &protocol witness table for Expression<A>;
    *(void *)&long long v29 = v15;
    *((void *)&v29 + 1) = v14;
    *(void *)&uint64_t v30 = v26;
  }
  else
  {
    long long v31 = 0;
    long long v29 = 0u;
    uint64_t v30 = 0u;
  }
  memset(v28, 0, sizeof(v28));
  *(void *)&long long v27 = v25;
  *((void *)&v27 + 1) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681ED4(v15, v14);
  sub_25E681EAC(v25, v22);
  uint64_t v20 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v34, v17, v19, &v33, 0, a2 & 1, (uint64_t)v32, (uint64_t)&v29, (uint64_t)v28, &v27, v24, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v25, v22);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v32, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  long long v29;
  _OWORD v30[5];
  long long v31;
  long long v32;
  _UNKNOWN **v33;
  long long v34;
  long long v35;
  _UNKNOWN **v36;
  unsigned __int8 v37;
  void v38[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = *a4;
  uint64_t v15 = a4[1];
  uint64_t v25 = *a5;
  uint64_t v26 = a4[2];
  unint64_t v24 = a5[1];
  v38[0] = *a1;
  v38[1] = v9;
  v38[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  unsigned __int8 v37 = 2;
  if (v12)
  {
    *((void *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v36 = &protocol witness table for Expression<A>;
    *(void *)&long long v34 = v11;
    *((void *)&v34 + 1) = v12;
    *(void *)&long long v35 = v13;
  }
  else
  {
    long long v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  uint64_t v20 = v11;
  if (v15)
  {
    uint64_t v21 = type metadata accessor for Expression();
    uint64_t v20 = v11;
    *((void *)&v32 + 1) = v21;
    long long v33 = &protocol witness table for Expression<A>;
    *(void *)&long long v31 = v14;
    *((void *)&v31 + 1) = v15;
    *(void *)&long long v32 = v26;
  }
  else
  {
    long long v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
  }
  memset(v30, 0, sizeof(v30));
  *(void *)&long long v29 = v25;
  *((void *)&v29 + 1) = v24;
  sub_25E681ED4(v20, v12);
  sub_25E681ED4(v14, v15);
  sub_25E681EAC(v25, v24);
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v38, v17, v19, &v37, 1, a2 & 1, (uint64_t)&v34, (uint64_t)&v31, (uint64_t)v30, &v29, v28, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v25, v24);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v31, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v34, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  _OWORD v27[5];
  void v28[3];
  uint64_t v29;
  _UNKNOWN **v30;
  long long v31;
  long long v32;
  _UNKNOWN **v33;
  unsigned __int8 v34;
  void v35[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v25 = a3[2];
  uint64_t v13 = a4[1];
  uint64_t v21 = *a4;
  uint64_t v22 = a4[2];
  uint64_t v14 = *a5;
  uint64_t v15 = a5[1];
  v35[0] = *a1;
  v35[1] = v9;
  v35[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v34 = 2;
  if (v12)
  {
    *((void *)&v32 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v33 = &protocol witness table for Expression<A>;
    *(void *)&long long v31 = v11;
    *((void *)&v31 + 1) = v12;
    *(void *)&long long v32 = v25;
  }
  else
  {
    long long v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
  }
  sub_25E6C2790();
  long long v29 = type metadata accessor for Expression();
  uint64_t v30 = &protocol witness table for Expression<A>;
  v28[0] = v21;
  v28[1] = v13;
  v28[2] = v22;
  memset(v27, 0, sizeof(v27));
  *(void *)&uint64_t v26 = v14;
  *((void *)&v26 + 1) = v15;
  sub_25E681ED4(v11, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681EAC(v14, v15);
  sub_25E680F74((uint64_t)v35, v17, v19, &v34, 1, a2 & 1, (uint64_t)&v31, (uint64_t)v28, (uint64_t)v27, &v26, v24, v29, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v14, v15);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v31, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  long long v27;
  _OWORD v28[5];
  long long v29;
  long long v30;
  _UNKNOWN **v31;
  void v32[5];
  unsigned __int8 v33;
  void v34[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v15 = *a4;
  uint64_t v14 = a4[1];
  uint64_t v25 = *a5;
  uint64_t v26 = a4[2];
  uint64_t v22 = a5[1];
  v34[0] = *a1;
  v34[1] = v9;
  v34[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v33 = 2;
  v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v32[4] = &protocol witness table for Expression<A>;
  v32[0] = v11;
  v32[1] = v12;
  v32[2] = v13;
  if (v14)
  {
    *((void *)&v30 + 1) = type metadata accessor for Expression();
    long long v31 = &protocol witness table for Expression<A>;
    *(void *)&long long v29 = v15;
    *((void *)&v29 + 1) = v14;
    *(void *)&uint64_t v30 = v26;
  }
  else
  {
    long long v31 = 0;
    long long v29 = 0u;
    uint64_t v30 = 0u;
  }
  memset(v28, 0, sizeof(v28));
  *(void *)&long long v27 = v25;
  *((void *)&v27 + 1) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681ED4(v15, v14);
  sub_25E681EAC(v25, v22);
  sub_25E6C2790();
  uint64_t v20 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v34, v17, v19, &v33, 1, a2 & 1, (uint64_t)v32, (uint64_t)&v29, (uint64_t)v28, &v27, v24, v20, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v25, v22);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)&v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v32, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  long long v26;
  _OWORD v27[5];
  void v28[3];
  uint64_t v29;
  _UNKNOWN **v30;
  void v31[5];
  unsigned __int8 v32;
  void v33[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = a4[1];
  uint64_t v15 = a4[2];
  uint64_t v23 = *a5;
  uint64_t v21 = *a4;
  uint64_t v22 = a5[1];
  v33[0] = *a1;
  v33[1] = v9;
  _OWORD v33[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v32 = 2;
  v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  void v31[4] = &protocol witness table for Expression<A>;
  v31[0] = v11;
  v31[1] = v12;
  uint64_t v31[2] = v13;
  sub_25E6C2790();
  long long v29 = type metadata accessor for Expression();
  uint64_t v30 = &protocol witness table for Expression<A>;
  v28[0] = v21;
  v28[1] = v14;
  v28[2] = v15;
  memset(v27, 0, sizeof(v27));
  *(void *)&uint64_t v26 = v23;
  *((void *)&v26 + 1) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681EAC(v23, v22);
  sub_25E680F74((uint64_t)v33, v17, v19, &v32, 1, a2, (uint64_t)v31, (uint64_t)v28, (uint64_t)v27, &v26, v24, v29, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v23, v22);
  sub_25E681F7C((uint64_t)v27, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v31, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:collate:)(void *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = *a5;
  unint64_t v15 = a5[1];
  v34[0] = *a1;
  v34[1] = v9;
  v34[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  unsigned __int8 v33 = 2;
  if (v11)
  {
    *((void *)&v31 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v32 = &protocol witness table for Expression<A>;
    *(void *)&long long v30 = v12;
    *((void *)&v30 + 1) = v11;
    *(void *)&long long v31 = v13;
  }
  else
  {
    long long v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  uint64_t v20 = *(void *)(a7 + 8);
  v29[3] = a6;
  void v29[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v28, 0, sizeof(v28));
  *(void *)&long long v27 = v14;
  *((void *)&v27 + 1) = v15;
  sub_25E681ED4(v12, v11);
  sub_25E681EAC(v14, v15);
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v34, v17, v19, &v33, 0, a2 & 1, (uint64_t)&v30, (uint64_t)v29, (uint64_t)v28, &v27, v26, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v14, v15);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v25;
  long long v27;
  _OWORD v28[5];
  uint64_t v29[5];
  void v30[5];
  unsigned __int8 v31;
  void v32[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = *a5;
  unint64_t v15 = a5[1];
  v32[0] = *a1;
  v32[1] = v9;
  v32[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v31 = 2;
  v30[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v11;
  v30[1] = v12;
  v30[2] = v13;
  uint64_t v20 = *(void *)(a7 + 8);
  v29[3] = a6;
  void v29[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v28, 0, sizeof(v28));
  *(void *)&long long v27 = v14;
  *((void *)&v27 + 1) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681EAC(v14, v15);
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v32, v17, v19, &v31, 0, a2, (uint64_t)v30, (uint64_t)v29, (uint64_t)v28, &v27, v25, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v14, v15);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v26;
  long long v27;
  _OWORD v28[5];
  uint64_t v29[5];
  long long v30;
  long long v31;
  _UNKNOWN **v32;
  unsigned __int8 v33;
  void v34[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = *a5;
  unint64_t v15 = a5[1];
  v34[0] = *a1;
  v34[1] = v9;
  v34[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  unsigned __int8 v33 = 2;
  if (v11)
  {
    *((void *)&v31 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    long long v32 = &protocol witness table for Expression<A>;
    *(void *)&long long v30 = v12;
    *((void *)&v30 + 1) = v11;
    *(void *)&long long v31 = v13;
  }
  else
  {
    long long v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  uint64_t v20 = *(void *)(a7 + 8);
  v29[3] = a6;
  void v29[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v28, 0, sizeof(v28));
  *(void *)&long long v27 = v14;
  *((void *)&v27 + 1) = v15;
  sub_25E681ED4(v12, v11);
  sub_25E681EAC(v14, v15);
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v34, v17, v19, &v33, 1, a2 & 1, (uint64_t)&v30, (uint64_t)v29, (uint64_t)v28, &v27, v26, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v14, v15);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)&v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v25;
  long long v27;
  _OWORD v28[5];
  uint64_t v29[5];
  void v30[5];
  unsigned __int8 v31;
  void v32[4];

  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = a3[2];
  uint64_t v14 = *a5;
  unint64_t v15 = a5[1];
  v32[0] = *a1;
  v32[1] = v9;
  v32[2] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a6, a7);
  uint64_t v19 = v18;
  long long v31 = 2;
  v30[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v11;
  v30[1] = v12;
  v30[2] = v13;
  uint64_t v20 = *(void *)(a7 + 8);
  v29[3] = a6;
  void v29[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v28, 0, sizeof(v28));
  *(void *)&long long v27 = v14;
  *((void *)&v27 + 1) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681EAC(v14, v15);
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  sub_25E680F74((uint64_t)v32, v17, v19, &v31, 1, a2, (uint64_t)v30, (uint64_t)v29, (uint64_t)v28, &v27, v25, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_25E681EC0(v14, v15);
  sub_25E681F7C((uint64_t)v28, &qword_26B38E0E8);
  sub_25E681F7C((uint64_t)v29, &qword_26B38E1F0);
  sub_25E681F7C((uint64_t)v30, &qword_26B38E1F0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.primaryKey<A>(_:)(uint64_t *a1)
{
  void (*v8)(void *__return_ptr, void, void);
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void v18[3];
  uint64_t v19;
  unint64_t v20;
  long long v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;

  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3230;
  uint64_t v5 = type metadata accessor for Expression();
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = v3;
  *(void *)&uint64_t v21 = 0x205952414D495250;
  *((void *)&v21 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E686E60(inited, (uint64_t *)&v21);
  uint64_t v19 = 0x205952414D495250;
  uint64_t v20 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v7 = v23;
  uint64_t v6 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  uint64_t v8 = (void (*)(void *__return_ptr, void, void))v6[1];
  v8(v18, v7, v6);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  v8(v18, v7, v6);
  uint64_t v11 = v18[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)(v17 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v17 + 16) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v12 = sub_25E680BF4(0, v12[2] + 1, 1, v12, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v17 + 16) = v12;
  }
  unint64_t v15 = v12[2];
  uint64_t v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    uint64_t v12 = sub_25E680BF4((void *)(v14 > 1), v15 + 1, 1, v12, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v17 + 16) = v12;
  }
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  unint64_t v24 = &protocol witness table for Expression<A>;
  *(void *)&uint64_t v21 = v9;
  *((void *)&v21 + 1) = v10;
  uint64_t v22 = v11;
  v12[2] = v15 + 1;
  sub_25E681E94(&v21, (uint64_t)&v12[5 * v15 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.primaryKey<A, B>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  void (*v12)(void *__return_ptr, void, void);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void v22[3];
  uint64_t v23;
  unint64_t v24;
  long long v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;

  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  uint64_t v9 = type metadata accessor for Expression();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 96) = type metadata accessor for Expression();
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = v5;
  *(void *)(inited + 88) = v7;
  *(void *)&uint64_t v25 = 0x205952414D495250;
  *((void *)&v25 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E686E60(inited, (uint64_t *)&v25);
  uint64_t v23 = 0x205952414D495250;
  unint64_t v24 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v11 = v27;
  uint64_t v10 = v28;
  __swift_project_boxed_opaque_existential_1(&v25, v27);
  uint64_t v12 = (void (*)(void *__return_ptr, void, void))v10[1];
  v12(v22, v11, v10);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  v12(v22, v11, v10);
  unint64_t v15 = v22[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(v21 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v21 + 16) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_25E680BF4(0, v16[2] + 1, 1, v16, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v21 + 16) = v16;
  }
  uint64_t v19 = v16[2];
  uint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    uint64_t v16 = sub_25E680BF4((void *)(v18 > 1), v19 + 1, 1, v16, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v21 + 16) = v16;
  }
  long long v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v28 = &protocol witness table for Expression<A>;
  *(void *)&uint64_t v25 = v13;
  *((void *)&v25 + 1) = v14;
  uint64_t v26 = v15;
  v16[2] = v19 + 1;
  sub_25E681E94(&v25, (uint64_t)&v16[5 * v19 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.primaryKey<A, B, C>(_:_:_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  void (*v15)(void *__return_ptr, void, void);
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void v26[3];
  uint64_t v27;
  unint64_t v28;
  long long v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;

  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a3[1];
  unint64_t v24 = *a3;
  uint64_t v10 = a3[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  uint64_t v12 = type metadata accessor for Expression();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 96) = type metadata accessor for Expression();
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = v7;
  *(void *)(inited + 88) = v8;
  *(void *)(inited + 136) = type metadata accessor for Expression();
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = v24;
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 128) = v10;
  *(void *)&long long v29 = 0x205952414D495250;
  *((void *)&v29 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E686E60(inited, (uint64_t *)&v29);
  long long v27 = 0x205952414D495250;
  uint64_t v28 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v13 = v31;
  uint64_t v14 = v32;
  __swift_project_boxed_opaque_existential_1(&v29, v31);
  unint64_t v15 = (void (*)(void *__return_ptr, void, void))v14[1];
  v15(v26, v13, v14);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  v15(v26, v13, v14);
  uint64_t v18 = v26[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void **)(v25 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v25 + 16) = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v19 = sub_25E680BF4(0, v19[2] + 1, 1, v19, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v25 + 16) = v19;
  }
  uint64_t v22 = v19[2];
  uint64_t v21 = v19[3];
  if (v22 >= v21 >> 1)
  {
    uint64_t v19 = sub_25E680BF4((void *)(v21 > 1), v22 + 1, 1, v19, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v25 + 16) = v19;
  }
  long long v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  long long v32 = &protocol witness table for Expression<A>;
  *(void *)&long long v29 = v16;
  *((void *)&v29 + 1) = v17;
  long long v30 = v18;
  v19[2] = v22 + 1;
  sub_25E681E94(&v29, (uint64_t)&v19[5 * v22 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.primaryKey<A, B, C, D>(_:_:_:_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  void (*v16)(void *__return_ptr, void, void);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void v30[3];
  uint64_t v31;
  unint64_t v32;
  long long v33;
  uint64_t v34;
  uint64_t v35;
  _UNKNOWN **v36;

  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v26 = *a3;
  uint64_t v10 = a3[2];
  uint64_t v25 = a3[1];
  uint64_t v11 = a4[1];
  long long v27 = a4[2];
  uint64_t v28 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  uint64_t v13 = type metadata accessor for Expression();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 96) = type metadata accessor for Expression();
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v8;
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 136) = type metadata accessor for Expression();
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = v26;
  *(void *)(inited + 120) = v25;
  *(void *)(inited + 128) = v10;
  *(void *)(inited + 176) = type metadata accessor for Expression();
  *(void *)(inited + 184) = &protocol witness table for Expression<A>;
  *(void *)(inited + 152) = v28;
  *(void *)(inited + 160) = v11;
  *(void *)(inited + 168) = v27;
  *(void *)&unsigned __int8 v33 = 0x205952414D495250;
  *((void *)&v33 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E686E60(inited, (uint64_t *)&v33);
  long long v31 = 0x205952414D495250;
  long long v32 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v14 = v35;
  unint64_t v15 = v36;
  __swift_project_boxed_opaque_existential_1(&v33, v35);
  uint64_t v16 = (void (*)(void *__return_ptr, void, void))v15[1];
  v16(v30, v14, v15);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v17 = v31;
  uint64_t v18 = v32;
  v16(v30, v14, v15);
  uint64_t v19 = v30[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(v29 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v29 + 16) = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v20 = sub_25E680BF4(0, v20[2] + 1, 1, v20, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v29 + 16) = v20;
  }
  uint64_t v23 = v20[2];
  uint64_t v22 = v20[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t v20 = sub_25E680BF4((void *)(v22 > 1), v23 + 1, 1, v20, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v29 + 16) = v20;
  }
  long long v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  long long v36 = &protocol witness table for Expression<A>;
  *(void *)&unsigned __int8 v33 = v17;
  *((void *)&v33 + 1) = v18;
  long long v34 = v19;
  v20[2] = v23 + 1;
  sub_25E681E94(&v33, (uint64_t)&v20[5 * v23 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.unique(_:)(uint64_t a1)
{
  void (*v6)(void *__return_ptr, void, void);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  void v15[3];
  uint64_t v16;
  unint64_t v17;
  long long v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;

  uint64_t v2 = v1;
  *(void *)&uint64_t v18 = 0x455551494E55;
  *((void *)&v18 + 1) = 0xE600000000000000;
  sub_25E6C25A0();
  sub_25E686E60(a1, (uint64_t *)&v18);
  uint64_t v16 = 0x455551494E55;
  uint64_t v17 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v4 = v20;
  uint64_t v5 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  uint64_t v6 = (void (*)(void *__return_ptr, void, void))v5[1];
  v6(v15, v4, v5);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  v6(v15, v4, v5);
  uint64_t v9 = v15[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = sub_25E680BF4(0, v10[2] + 1, 1, v10, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v2 + 16) = v10;
  }
  uint64_t v13 = v10[2];
  uint64_t v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    uint64_t v10 = sub_25E680BF4((void *)(v12 > 1), v13 + 1, 1, v10, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v2 + 16) = v10;
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v21 = &protocol witness table for Expression<A>;
  *(void *)&uint64_t v18 = v7;
  *((void *)&v18 + 1) = v8;
  uint64_t v19 = v9;
  v10[2] = v13 + 1;
  return sub_25E681E94(&v18, (uint64_t)&v10[5 * v13 + 4]);
}

Swift::Void __swiftcall TableBuilder.unique(_:)(Swift::OpaquePointer a1)
{
  void (*v6)(void *__return_ptr, void, void);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  void v14[3];
  uint64_t v15;
  unint64_t v16;
  long long v17;
  uint64_t v18;
  uint64_t v19;
  _UNKNOWN **v20;

  uint64_t v2 = v1;
  *(void *)&uint64_t v17 = 0x455551494E55;
  *((void *)&v17 + 1) = 0xE600000000000000;
  sub_25E6C25A0();
  sub_25E686E60((uint64_t)a1._rawValue, (uint64_t *)&v17);
  unint64_t v15 = 0x455551494E55;
  uint64_t v16 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v4 = v19;
  uint64_t v5 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  uint64_t v6 = (void (*)(void *__return_ptr, void, void))v5[1];
  v6(v14, v4, v5);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  v6(v14, v4, v5);
  uint64_t v9 = v14[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = sub_25E680BF4(0, v10[2] + 1, 1, v10, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v2 + 16) = v10;
  }
  uint64_t v13 = v10[2];
  uint64_t v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    uint64_t v10 = sub_25E680BF4((void *)(v12 > 1), v13 + 1, 1, v10, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v2 + 16) = v10;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v20 = &protocol witness table for Expression<A>;
  *(void *)&uint64_t v17 = v7;
  *((void *)&v17 + 1) = v8;
  uint64_t v18 = v9;
  v10[2] = v13 + 1;
  sub_25E681E94(&v17, (uint64_t)&v10[5 * v13 + 4]);
}

uint64_t TableBuilder.check(_:)(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TableBuilder.check(_:)(v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  long long v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;

  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v16 = &protocol witness table for Expression<A>;
  *(void *)&uint64_t v13 = v4;
  *((void *)&v13 + 1) = v3;
  uint64_t v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(&v13, v15);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v7 = v6[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  uint64_t v8 = *(void **)(v2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_25E680BF4(0, v8[2] + 1, 1, v8, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v2 + 16) = v8;
  }
  uint64_t v11 = v8[2];
  uint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_25E680BF4((void *)(v10 > 1), v11 + 1, 1, v8, qword_26B38E148, &qword_26B38E0F0);
    *(void *)(v2 + 16) = v8;
  }
  unint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v16 = &protocol witness table for Expression<A>;
  *(void *)&uint64_t v13 = 0x204B43454843;
  *((void *)&v13 + 1) = 0xE600000000000000;
  uint64_t v14 = v7;
  v8[2] = v11 + 1;
  return sub_25E681E94(&v13, (uint64_t)&v8[5 * v11 + 4]);
}

SwiftSQLite::TableBuilder::Dependency_optional __swiftcall TableBuilder.Dependency.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25E6C28C0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TableBuilder.Dependency.rawValue.getter()
{
  uint64_t result = 0x4F49544341204F4ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x5443495254534552;
      break;
    case 2:
      uint64_t result = 0x4C4C554E20544553;
      break;
    case 3:
      uint64_t result = 0x4146454420544553;
      break;
    case 4:
      uint64_t result = 0x45444143534143;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E67F634(unsigned __int8 *a1, char *a2)
{
  return sub_25E6B1E68(*a1, *a2);
}

uint64_t sub_25E67F640()
{
  return sub_25E6C2A20();
}

uint64_t sub_25E67F744()
{
  sub_25E6C2570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E67F830()
{
  return sub_25E6C2A20();
}

SwiftSQLite::TableBuilder::Dependency_optional sub_25E67F930(Swift::String *a1)
{
  return TableBuilder.Dependency.init(rawValue:)(*a1);
}

void sub_25E67F93C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE90000000000004ELL;
  uint64_t v3 = 0x4F49544341204F4ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x5443495254534552;
      goto LABEL_3;
    case 2:
      *a1 = 0x4C4C554E20544553;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x4146454420544553;
      a1[1] = 0xEB00000000544C55;
      break;
    case 4:
      *a1 = 0x45444143534143;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t TableBuilder.foreignKey<A>(_:references:_:update:delete:)(void *a1, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, unsigned __int8 *a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v12 = a3[2];
  unsigned __int8 v13 = *a4;
  unsigned __int8 v14 = *a5;
  v20[0] = *a1;
  v20[1] = v8;
  v20[2] = v9;
  v19[0] = v10;
  v19[1] = v11;
  v19[2] = v12;
  unsigned __int8 v18 = v13;
  unsigned __int8 v17 = v14;
  uint64_t v15 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681240((uint64_t)v20, a2, (uint64_t)v19, &v18, &v17, v6, v15, v15, (uint64_t)&protocol witness table for Expression<A>, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v18;
  unsigned __int8 v19;
  void v20[3];
  void v21[3];

  uint64_t v6 = v5;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v12 = a3[2];
  unsigned __int8 v13 = *a4;
  unsigned __int8 v14 = *a5;
  v21[0] = *a1;
  v21[1] = v8;
  v21[2] = v9;
  v20[0] = v10;
  v20[1] = v11;
  v20[2] = v12;
  uint64_t v19 = v13;
  unsigned __int8 v18 = v14;
  sub_25E6C2790();
  uint64_t v15 = type metadata accessor for Expression();
  uint64_t v16 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681240((uint64_t)v21, a2, (uint64_t)v20, &v19, &v18, v6, v15, v16, (uint64_t)&protocol witness table for Expression<A>, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.foreignKey<A, B>(_:references:_:update:delete:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, unsigned __int8 *a6, unsigned __int8 *a7)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a2[1];
  uint64_t v24 = *a2;
  uint64_t v11 = a2[2];
  uint64_t v25 = a4[1];
  uint64_t v27 = *a4;
  uint64_t v28 = a5[1];
  uint64_t v29 = a5[2];
  uint64_t v30 = *a5;
  unsigned __int8 v31 = *a7;
  unsigned __int8 v32 = *a6;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = type metadata accessor for Expression();
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = v9;
  uint64_t v14 = type metadata accessor for Expression();
  *(void *)(inited + 96) = v14;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v24;
  *(void *)(inited + 80) = v10;
  *(void *)(inited + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E686E60(inited, v42);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  sub_25E681F18(a3, (uint64_t)v40);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_25E6C3210;
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  *(void *)(v15 + 56) = v13;
  *(void *)(v15 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v15 + 32) = v27;
  *(void *)(v15 + 40) = v25;
  *(void *)(v15 + 48) = v16;
  *(void *)(v15 + 96) = v14;
  *(void *)(v15 + 104) = &protocol witness table for Expression<A>;
  *(void *)(v15 + 72) = v30;
  *(void *)(v15 + 80) = v28;
  *(void *)(v15 + 88) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E686E60(v15, v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_25E681F18((uint64_t)v40, (uint64_t)v36);
  sub_25E681F18((uint64_t)v41, (uint64_t)v37);
  unsigned __int8 v35 = v32;
  unsigned __int8 v34 = v31;
  uint64_t v17 = v43;
  uint64_t v18 = v44;
  uint64_t v19 = __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v20 = v38;
  uint64_t v21 = v39;
  uint64_t v22 = __swift_project_boxed_opaque_existential_1(v37, v38);
  sub_25E681240((uint64_t)v19, (uint64_t)v36, (uint64_t)v22, &v35, &v34, v33, v17, v20, v18, v21);
  sub_25E681F7C((uint64_t)v40, &qword_26A7016A8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t TableBuilder.foreignKey<A, B, C>(_:references:_:update:delete:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, unsigned __int8 *a8, unsigned __int8 *a9)
{
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v27 = *a2;
  uint64_t v28 = a3[1];
  uint64_t v29 = a3[2];
  uint64_t v30 = *a3;
  uint64_t v14 = a5[1];
  uint64_t v15 = a5[2];
  uint64_t v34 = *a5;
  uint64_t v35 = a6[2];
  uint64_t v36 = *a6;
  uint64_t v37 = a7[1];
  uint64_t v38 = a7[2];
  uint64_t v39 = *a7;
  unsigned __int8 v40 = *a9;
  unsigned __int8 v41 = *a8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for Expression();
  *(void *)(inited + 56) = v32;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = type metadata accessor for Expression();
  *(void *)(inited + 96) = v31;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v27;
  *(void *)(inited + 80) = v12;
  *(void *)(inited + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for Expression();
  *(void *)(inited + 136) = v17;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = v30;
  *(void *)(inited + 120) = v28;
  *(void *)(inited + 128) = v29;
  sub_25E686E60(inited, v51);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  sub_25E681F18(a4, (uint64_t)v49);
  uint64_t v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_25E6C31A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 56) = v32;
  *(void *)(v18 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v18 + 32) = v34;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 72) = v36;
  *(void *)(v18 + 80) = v19;
  *(void *)(v18 + 96) = v31;
  *(void *)(v18 + 104) = &protocol witness table for Expression<A>;
  *(void *)(v18 + 88) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 136) = v17;
  *(void *)(v18 + 144) = &protocol witness table for Expression<A>;
  *(void *)(v18 + 112) = v39;
  *(void *)(v18 + 120) = v37;
  *(void *)(v18 + 128) = v38;
  sub_25E686E60(v18, v50);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_25E681F18((uint64_t)v49, (uint64_t)v45);
  sub_25E681F18((uint64_t)v50, (uint64_t)v46);
  unsigned __int8 v44 = v41;
  unsigned __int8 v43 = v40;
  uint64_t v20 = v52;
  uint64_t v21 = v53;
  uint64_t v22 = __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v23 = v47;
  uint64_t v24 = v48;
  uint64_t v25 = __swift_project_boxed_opaque_existential_1(v46, v47);
  sub_25E681240((uint64_t)v22, (uint64_t)v45, (uint64_t)v25, &v44, &v43, v42, v20, v23, v21, v24);
  sub_25E681F7C((uint64_t)v49, &qword_26A7016A8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
}

uint64_t sub_25E6802A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_25E681F18(a1, (uint64_t)v11);
  sub_25E681F18(a2, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = 0x434E455245464552;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = 0xEA00000000005345;
  *(void *)(inited + 48) = v7;
  uint64_t v8 = v12;
  uint64_t v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_25E6B15CC(0, v8, v9, (uint64_t *)(inited + 72));
  *(void *)(inited + 136) = v6;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  sub_25E680774(v14, 0, 0xE000000000000000, (void *)(inited + 112));
  sub_25E686E60(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  return sub_25E681F7C((uint64_t)v11, &qword_26A7016A8);
}

uint64_t TableBuilder.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TableBuilder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL static PrimaryKey.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PrimaryKey.hash(into:)()
{
  return sub_25E6C2A10();
}

uint64_t PrimaryKey.hashValue.getter()
{
  return sub_25E6C2A20();
}

BOOL sub_25E6804F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_25E68050C()
{
  return sub_25E6C2A20();
}

uint64_t sub_25E680554()
{
  return sub_25E6C2A10();
}

uint64_t sub_25E680580()
{
  return sub_25E6C2A20();
}

uint64_t Module.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_25E681960(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  a4[2] = a3;
  return result;
}

uint64_t Module.expression.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  sub_25E686E60(v1[2], v6);
  sub_25E680774(v6, v3, v4, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_25E68070C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  sub_25E686E60(v1[2], v6);
  sub_25E680774(v6, v3, v4, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_25E680774@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void v13[3];
  uint64_t v14;
  uint64_t v15;

  uint64_t v14 = a2;
  uint64_t v15 = a3;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  v8(v13, v6, v7);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v9 = v14;
  uint64_t v10 = v15;
  v8(v13, v6, v7);
  uint64_t v11 = v13[2];
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v9;
  a4[1] = v10;
  a4[2] = v11;
  return result;
}

void *sub_25E680878(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25E680BF4(a1, a2, a3, a4, qword_26B38E148, &qword_26B38E0F0);
}

void *sub_25E68088C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E6809C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E220);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E680AC8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016C8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_25E680BE0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25E680BF4(a1, a2, a3, a4, &qword_26B38E090, &qword_26B38E050);
}

void *sub_25E680BF4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_25E680D30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38DFB8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[11 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 88 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E048);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E680E70(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E228);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25E680F74(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, long long *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v32 = a7;
  uint64_t v33 = a8;
  uint64_t v39[3] = a12;
  void v39[4] = a13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 16))(boxed_opaque_existential_1, a1, a12);
  unsigned __int8 v35 = *a4;
  long long v34 = *a10;
  sub_25E6771E4((uint64_t)v39, a2, a3, &v35, a5, a6, v32, v33, v36, a9, (uint64_t *)&v34);
  uint64_t v20 = (uint64_t *)(a11 + 16);
  uint64_t v21 = *(void **)(a11 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a11 + 16) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_25E680BF4(0, v21[2] + 1, 1, v21, qword_26B38E148, &qword_26B38E0F0);
    *uint64_t v20 = (uint64_t)v21;
  }
  unint64_t v24 = v21[2];
  unint64_t v23 = v21[3];
  if (v24 >= v23 >> 1) {
    *uint64_t v20 = (uint64_t)sub_25E680BF4((void *)(v23 > 1), v24 + 1, 1, v21, qword_26B38E148, &qword_26B38E0F0);
  }
  uint64_t v25 = v37;
  uint64_t v26 = v38;
  uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v30 + 16))(v29);
  sub_25E6811A8(v24, (uint64_t)v29, v20, v25, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_25E6811A8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_25E681E94(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_25E681240(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v64[3] = a7;
  v64[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v64);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(boxed_opaque_existential_1, a1, a7);
  v63[3] = a8;
  v63[4] = a10;
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1(v63);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16))(v19, a3, a8);
  sub_25E681F18(a2, (uint64_t)v61);
  sub_25E681F18((uint64_t)v63, (uint64_t)v62);
  LODWORD(a8) = *a4;
  int v20 = *a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 56) = v22;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  sub_25E680774(v64, 0x204E474945524F46, 0xEC0000002059454BLL, (void *)(inited + 32));
  sub_25E681F18((uint64_t)v61, (uint64_t)&v56);
  sub_25E681F18((uint64_t)v62, (uint64_t)v60);
  sub_25E6802A8((uint64_t)&v56, (uint64_t)v60, (uint64_t *)(inited + 72));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  unint64_t v23 = (void *)MEMORY[0x263F8EE78];
  if (a8 != 5)
  {
    uint64_t v56 = 0x5441445055204E4FLL;
    unint64_t v57 = 0xEA00000000002045;
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    uint64_t v26 = v56;
    unint64_t v27 = v57;
    *(void *)(inited + 136) = v22;
    *(void *)(inited + 144) = &protocol witness table for Expression<A>;
    *(void *)(inited + 112) = v26;
    *(void *)(inited + 120) = v27;
    *(void *)(inited + 128) = v23;
    if (v20 != 5) {
      goto LABEL_3;
    }
LABEL_5:
    *(void *)(inited + 184) = 0;
    *(_OWORD *)(inited + 152) = 0u;
    *(_OWORD *)(inited + 168) = 0u;
    goto LABEL_6;
  }
  *(void *)(inited + 144) = 0;
  *(_OWORD *)(inited + 112) = 0u;
  *(_OWORD *)(inited + 128) = 0u;
  if (v20 == 5) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v56 = 0x54454C4544204E4FLL;
  unint64_t v57 = 0xEA00000000002045;
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  uint64_t v24 = v56;
  unint64_t v25 = v57;
  *(void *)(inited + 176) = v22;
  *(void *)(inited + 184) = &protocol witness table for Expression<A>;
  *(void *)(inited + 152) = v24;
  *(void *)(inited + 160) = v25;
  *(void *)(inited + 168) = v23;
LABEL_6:
  long long v55 = v23;
  for (uint64_t i = 32; i != 192; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)&v56, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)&v56, (uint64_t)&v51);
    if (v52)
    {
      sub_25E681E94(&v51, (uint64_t)v54);
      sub_25E681E94(v54, (uint64_t)&v51);
      uint64_t v29 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v29 = sub_25E680BF4(0, v29[2] + 1, 1, v29, qword_26B38E148, &qword_26B38E0F0);
        long long v55 = v29;
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        long long v55 = sub_25E680BF4((void *)(v30 > 1), v31 + 1, 1, v29, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v32 = v52;
      uint64_t v33 = v53;
      uint64_t v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v51, v52);
      MEMORY[0x270FA5388](v34);
      uint64_t v36 = (char *)&v51 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v37 + 16))(v36);
      sub_25E6811A8(v31, (uint64_t)v36, (uint64_t *)&v55, v32, v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v51, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v55, &v56);
  swift_bridgeObjectRelease();
  unsigned __int8 v40 = *(void **)(a6 + 16);
  uint64_t v38 = (uint64_t *)(a6 + 16);
  uint64_t v39 = v40;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v38 = (uint64_t)v40;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v39 = sub_25E680BF4(0, v39[2] + 1, 1, v39, qword_26B38E148, &qword_26B38E0F0);
    *uint64_t v38 = (uint64_t)v39;
  }
  unint64_t v43 = v39[2];
  unint64_t v42 = v39[3];
  if (v43 >= v42 >> 1) {
    *uint64_t v38 = (uint64_t)sub_25E680BF4((void *)(v42 > 1), v43 + 1, 1, v39, qword_26B38E148, &qword_26B38E0F0);
  }
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  uint64_t v46 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v56, v58);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v51 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v49 + 16))(v48);
  sub_25E6811A8(v43, (uint64_t)v48, v38, v44, v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  sub_25E681F7C((uint64_t)v61, &qword_26A7016A8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
}

uint64_t sub_25E681960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_25E6C25D0();
  if (v10)
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    do
    {
      if (v11 == a5 && v12 == a6 || (sub_25E6C2910() & 1) != 0) {
        sub_25E6C24A0();
      }
      sub_25E6C24A0();
      swift_bridgeObjectRetain();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_25E6C25D0();
      uint64_t v12 = v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E681AE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  v29[0] = 0x20504F5244;
  v29[1] = 0xE500000000000000;
  sub_25E6C25A0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = 0x20504F5244;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  *(void *)(inited + 48) = MEMORY[0x263F8EE78];
  *(void *)(inited + 56) = v7;
  if (a4)
  {
    long long v9 = xmmword_25E6C3240;
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v11 = &protocol witness table for Expression<A>;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
  }
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v11;
  *(_OWORD *)(inited + 72) = v9;
  *(void *)(inited + 88) = v10;
  sub_25E681F18(a3, inited + 112);
  uint64_t v28 = v8;
  for (uint64_t i = 32; i != 152; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v29, &qword_26B38E1F0);
    sub_25E681E2C((uint64_t)v29, (uint64_t)&v24);
    if (v25)
    {
      sub_25E681E94(&v24, (uint64_t)v27);
      sub_25E681E94(v27, (uint64_t)&v24);
      uint64_t v13 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v13 = sub_25E680BF4(0, v13[2] + 1, 1, v13, qword_26B38E148, &qword_26B38E0F0);
        uint64_t v28 = v13;
      }
      unint64_t v15 = v13[2];
      unint64_t v14 = v13[3];
      if (v15 >= v14 >> 1) {
        uint64_t v28 = sub_25E680BF4((void *)(v14 > 1), v15 + 1, 1, v13, qword_26B38E148, &qword_26B38E0F0);
      }
      uint64_t v16 = v25;
      uint64_t v17 = v26;
      uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v24, v25);
      MEMORY[0x270FA5388](v18);
      int v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v20);
      sub_25E6811A8(v15, (uint64_t)v20, (uint64_t *)&v28, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v24, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v28, v29);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  uint64_t countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return countAndFlagsBits;
}

uint64_t type metadata accessor for TableBuilder()
{
  return self;
}

uint64_t sub_25E681E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E681E94(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25E681EAC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25E681EC0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E681ED4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25E681F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25E681F7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25E681FDC()
{
  unint64_t result = qword_26A7016B0;
  if (!qword_26A7016B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7016B0);
  }
  return result;
}

unint64_t sub_25E682034()
{
  unint64_t result = qword_26A7016B8;
  if (!qword_26A7016B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7016B8);
  }
  return result;
}

uint64_t method lookup function for TableBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TableBuilder);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TableBuilder.Dependency(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TableBuilder.Dependency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E68220CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_25E682234(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25E682240(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TableBuilder.Dependency()
{
  return &type metadata for TableBuilder.Dependency;
}

uint64_t getEnumTagSinglePayload for PrimaryKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PrimaryKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E6823B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25E6823DC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PrimaryKey()
{
  return &type metadata for PrimaryKey;
}

uint64_t destroy for Module()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s11SwiftSQLite6ModuleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Module(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Module(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Module(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Module(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Module()
{
  return &type metadata for Module;
}

void type metadata accessor for ComparisonResult()
{
  if (!qword_26A7016C0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A7016C0);
    }
  }
}

unint64_t sub_25E682618()
{
  unint64_t result = qword_26B38E208;
  if (!qword_26B38E208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B38E200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B38E208);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25E6826BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E682720(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned __int8 v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_25E6C26F0();
  if (!v20) {
    return sub_25E6C2670();
  }
  uint64_t v21 = v20;
  unint64_t v27 = v15;
  uint64_t v43 = sub_25E6C2480();
  uint64_t v35 = sub_25E6C2860();
  sub_25E6C2830();
  unsigned __int8 v41 = v19;
  uint64_t result = sub_25E6C26E0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    long long v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_25E6C2710();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_25E6C2840();
      sub_25E6C2700();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t sub_25E682B1C(char a1)
{
  uint64_t result = 7561825;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x646E756F72;
      break;
    case 2:
      uint64_t result = 0x6D6F646E6172;
      break;
    case 3:
      uint64_t result = 0x6C626D6F646E6172;
      break;
    case 4:
      uint64_t result = 0x626F6C626F72657ALL;
      break;
    case 5:
      uint64_t result = 0x6874676E656CLL;
      break;
    case 6:
      uint64_t result = 0x7265776F6CLL;
      break;
    case 7:
      uint64_t result = 0x7265707075;
      break;
    case 8:
      uint64_t result = 0x6D6972746CLL;
      break;
    case 9:
      uint64_t result = 0x6D69727472;
      break;
    case 10:
      uint64_t result = 1835627124;
      break;
    case 11:
      uint64_t result = 0x6563616C706572;
      break;
    case 12:
      uint64_t result = 0x727473627573;
      break;
    case 13:
      uint64_t result = 1162561868;
      break;
    case 14:
      uint64_t result = 20041;
      break;
    case 15:
      uint64_t result = 1112493127;
      break;
    case 16:
      uint64_t result = 0x484354414DLL;
      break;
    case 17:
      uint64_t result = 0x505845474552;
      break;
    case 18:
      uint64_t result = 0x4554414C4C4F43;
      break;
    case 19:
      uint64_t result = 0x6C6C756E6669;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E682D20@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v5 = sub_25E682B1C(a2);
  sub_25E68711C(a1, v5, v6, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E682D8C@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v5 = sub_25E682B1C(a2);
  uint64_t v7 = v6;
  sub_25E686E60(a1, v9);
  sub_25E68711C(v9, v5, v7, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.absoluteValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E682D20(v9, 0, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E682D20(v9, 0, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.round(_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  if (a2)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3230;
    *(void *)(inited + 56) = a3;
    *(void *)(inited + 64) = *(void *)(a4 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, v5, a3);
    sub_25E686E60(inited, v15);
  }
  else
  {
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_25E6C3210;
    *(void *)(v10 + 56) = a3;
    *(void *)(v10 + 64) = *(void *)(a4 + 8);
    uint64_t v11 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v11, v5, a3);
    *(void *)(v10 + 96) = MEMORY[0x263F8D6C8];
    *(void *)(v10 + 104) = &protocol witness table for Int;
    *(void *)(v10 + 72) = a1;
    sub_25E686E60(v10, v15);
  }
  sub_25E680770(v15, 0x646E756F72, 0xE500000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t *v10;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14[5];

  uint64_t v5 = v4;
  if (a2)
  {
    uint64_t v12 = *(void *)(a4 + 8);
    v14[3] = a3;
    v14[4] = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, v5, a3);
    sub_25E680770(v14, 0x646E756F72, 0xE500000000000000);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = a3;
    *(void *)(inited + 64) = *(void *)(a4 + 8);
    uint64_t v10 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v10, v5, a3);
    *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 72) = a1;
    sub_25E686E60(inited, v14);
    sub_25E680770(v14, 0x646E756F72, 0xE500000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    return swift_arrayDestroy();
  }
}

uint64_t static ExpressionType<>.random()@<X0>(void *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = MEMORY[0x263F8EE78];
  return sub_25E682D8C(v2, 2, a1);
}

uint64_t static ExpressionType<>.random(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6833B0(a1, a2, a3, 0x6C626D6F646E6172, 0xEA0000000000626FLL);
}

uint64_t static ExpressionType<>.allZeros(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6833B0(a1, a2, a3, 0x626F6C626F72657ALL, 0xE800000000000000);
}

uint64_t sub_25E6833B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_25E686E60(MEMORY[0x263F8EE78], v8);
  sub_25E680770(v8, a4, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t ExpressionType<>.length.getter(uint64_t a1, uint64_t a2)
{
  return sub_25E684228(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E684228(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E684228(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E684228(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.lowercaseString.getter(uint64_t a1, uint64_t a2)
{
  return sub_25E684228(a1, a2, 0x7265776F6CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E684228(a1, a2, 0x7265776F6CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.uppercaseString.getter(uint64_t a1, uint64_t a2)
{
  return sub_25E684228(a1, a2, 0x7265707075, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E684228(a1, a2, 0x7265707075, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

void *ExpressionType<>.like(_:escape:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    v33[0] = 40;
    v33[1] = 0xE100000000000000;
    (*(void (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t inited = swift_initStackObject();
    uint64_t v16 = MEMORY[0x263F8D310];
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = v16;
    *(void *)(inited + 64) = &protocol witness table for String;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(void *)(inited + 96) = v16;
    *(void *)(inited + 104) = &protocol witness table for String;
    *(void *)(inited + 72) = a3;
    *(void *)(inited + 80) = a4;
    swift_bridgeObjectRetain();
    uint64_t result = sub_25E6866CC((void *)inited);
    *a7 = 40;
    a7[1] = 0xE100000000000000;
    a7[2] = v14;
  }
  else
  {
    uint64_t v18 = *(void *)(a6 + 8);
    v33[3] = a5;
    v33[4] = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, v7, a5);
    v32[3] = MEMORY[0x263F8D310];
    v32[4] = &protocol witness table for String;
    v32[0] = a1;
    v32[1] = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v33, v20 + 32);
    sub_25E681F18((uint64_t)v32, v20 + 72);
    uint64_t v28 = 32;
    *(void *)&long long v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v20, &v28);
    swift_bridgeObjectRelease();
    uint64_t v21 = v30;
    uint64_t v22 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v22[1])(&v26, v21, v22);
    uint64_t v23 = v26;
    long long v25 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    uint64_t v31 = &protocol witness table for Expression<A>;
    uint64_t v28 = v23;
    long long v29 = v25;
    sub_25E680770(&v28, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return result;
}

{
  uint64_t v7;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  void *result;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  long long v25;
  uint64_t v26;
  long long v27;
  uint64_t v28;
  long long v29;
  uint64_t v30;
  _UNKNOWN **v31;
  void v32[5];
  uint64_t v33[6];

  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    v33[0] = 40;
    v33[1] = 0xE100000000000000;
    (*(void (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t inited = swift_initStackObject();
    uint64_t v16 = MEMORY[0x263F8D310];
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = v16;
    *(void *)(inited + 64) = &protocol witness table for String;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(void *)(inited + 96) = v16;
    *(void *)(inited + 104) = &protocol witness table for String;
    *(void *)(inited + 72) = a3;
    *(void *)(inited + 80) = a4;
    swift_bridgeObjectRetain();
    uint64_t result = sub_25E6866CC((void *)inited);
    *a7 = 40;
    a7[1] = 0xE100000000000000;
    a7[2] = v14;
  }
  else
  {
    uint64_t v18 = *(void *)(a6 + 8);
    v33[3] = a5;
    v33[4] = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, v7, a5);
    v32[3] = MEMORY[0x263F8D310];
    v32[4] = &protocol witness table for String;
    v32[0] = a1;
    v32[1] = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v33, v20 + 32);
    sub_25E681F18((uint64_t)v32, v20 + 72);
    uint64_t v28 = 32;
    *(void *)&long long v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v20, &v28);
    swift_bridgeObjectRelease();
    uint64_t v21 = v30;
    uint64_t v22 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v22[1])(&v26, v21, v22);
    uint64_t v23 = v26;
    long long v25 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v31 = &protocol witness table for Expression<A>;
    uint64_t v28 = v23;
    long long v29 = v25;
    sub_25E680770(&v28, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return result;
}

uint64_t ExpressionType<>.like(_:escape:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = a1[2];
  if (a3)
  {
    uint64_t v15 = *(void *)(a5 + 8);
    uint64_t v47 = a4;
    uint64_t v48 = v15;
    uint64_t v16 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v16, v7, a4);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
    uint64_t v44 = &protocol witness table for Expression<A>;
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    uint64_t v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v45, inited + 32);
    sub_25E681F18((uint64_t)&v40, inited + 72);
    uint64_t v36 = 32;
    *(void *)&long long v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v36);
    swift_bridgeObjectRelease();
    uint64_t v18 = v38;
    uint64_t v19 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v19[1])(&v34, v18, v19);
    uint64_t v20 = *((void *)&v35 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    uint64_t v45 = 40;
    unint64_t v46 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v21 = v45;
    unint64_t v22 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t v23 = swift_initStackObject();
    uint64_t v24 = MEMORY[0x263F8D310];
    *(_OWORD *)(v23 + 16) = xmmword_25E6C3230;
    *(void *)(v23 + 56) = v24;
    *(void *)(v23 + 64) = &protocol witness table for String;
    *(void *)(v23 + 32) = a2;
    *(void *)(v23 + 40) = a3;
    uint64_t v45 = v20;
    swift_bridgeObjectRetain();
    sub_25E6866CC((void *)v23);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v45;
    *a6 = v21;
    a6[1] = v22;
    a6[2] = v26;
  }
  else
  {
    uint64_t v27 = *(void *)(a5 + 8);
    uint64_t v47 = a4;
    uint64_t v48 = v27;
    uint64_t v28 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v28, v7, a4);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
    uint64_t v44 = &protocol witness table for Expression<A>;
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    uint64_t v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v45, v29 + 32);
    sub_25E681F18((uint64_t)&v40, v29 + 72);
    uint64_t v36 = 32;
    *(void *)&long long v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v29, &v36);
    swift_bridgeObjectRelease();
    uint64_t v30 = v38;
    uint64_t v31 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v34, v30, v31);
    uint64_t v32 = v34;
    long long v33 = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    uint64_t v39 = &protocol witness table for Expression<A>;
    uint64_t v36 = v32;
    long long v37 = v33;
    sub_25E680770(&v36, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  return result;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t *v16;
  uint64_t inited;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32;
  long long v33;
  uint64_t v34;
  long long v35;
  uint64_t v36;
  long long v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  uint64_t v7 = v6;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = a1[2];
  if (a3)
  {
    uint64_t v15 = *(void *)(a5 + 8);
    uint64_t v47 = a4;
    uint64_t v48 = v15;
    uint64_t v16 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v16, v7, a4);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
    uint64_t v44 = &protocol witness table for Expression<A>;
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    uint64_t v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v45, inited + 32);
    sub_25E681F18((uint64_t)&v40, inited + 72);
    uint64_t v36 = 32;
    *(void *)&long long v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v36);
    swift_bridgeObjectRelease();
    uint64_t v18 = v38;
    uint64_t v19 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v19[1])(&v34, v18, v19);
    uint64_t v20 = *((void *)&v35 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    uint64_t v45 = 40;
    unint64_t v46 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v21 = v45;
    unint64_t v22 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t v23 = swift_initStackObject();
    uint64_t v24 = MEMORY[0x263F8D310];
    *(_OWORD *)(v23 + 16) = xmmword_25E6C3230;
    *(void *)(v23 + 56) = v24;
    *(void *)(v23 + 64) = &protocol witness table for String;
    *(void *)(v23 + 32) = a2;
    *(void *)(v23 + 40) = a3;
    uint64_t v45 = v20;
    swift_bridgeObjectRetain();
    sub_25E6866CC((void *)v23);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v45;
    *a6 = v21;
    a6[1] = v22;
    a6[2] = v26;
  }
  else
  {
    uint64_t v27 = *(void *)(a5 + 8);
    uint64_t v47 = a4;
    uint64_t v48 = v27;
    uint64_t v28 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v28, v7, a4);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
    uint64_t v44 = &protocol witness table for Expression<A>;
    uint64_t v40 = v11;
    uint64_t v41 = v10;
    uint64_t v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v45, v29 + 32);
    sub_25E681F18((uint64_t)&v40, v29 + 72);
    uint64_t v36 = 32;
    *(void *)&long long v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v29, &v36);
    swift_bridgeObjectRelease();
    uint64_t v30 = v38;
    uint64_t v31 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v34, v30, v31);
    uint64_t v32 = v34;
    long long v33 = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v39 = &protocol witness table for Expression<A>;
    uint64_t v36 = v32;
    long long v37 = v33;
    sub_25E680770(&v36, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  return result;
}

uint64_t ExpressionType<>.glob(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E684A74(a1, a2, a3, a4, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E684A74(a1, a2, a3, a4, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.regexp(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E684EA4(a1, a2, a3, a4, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E684EA4(a1, a2, a3, a4, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.collate(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6850D4(a1, a2, a3, &qword_26A7016D0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E6850D4(a1, a2, a3, &qword_26A7016E8, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.ltrim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E683D1C(a1, a2, a3, 0x6D6972746CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E683D1C(a1, a2, a3, 0x6D6972746CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.rtrim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E683D1C(a1, a2, a3, 0x6D69727472, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

{
  return sub_25E683D1C(a1, a2, a3, 0x6D69727472, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t sub_25E683D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, uint64_t))
{
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 64) = *(void *)(a3 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, v6, a2);
    v20[0] = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D8);
    sub_25E6867CC(&qword_26A7016E0, &qword_26A7016D8);
    uint64_t v15 = sub_25E6C2610();
    *(void *)(inited + 96) = MEMORY[0x263F8D310];
    *(void *)(inited + 104) = &protocol witness table for String;
    *(void *)(inited + 72) = v15;
    *(void *)(inited + 80) = v16;
    sub_25E686E60(inited, v20);
    a6(v20, a4, a5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t v18 = *(void *)(a3 + 8);
    void v20[3] = a2;
    v20[4] = v18;
    uint64_t v19 = __swift_allocate_boxed_opaque_existential_1(v20);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v19, v6, a2);
    a6(v20, a4, a5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
}

uint64_t ExpressionType<>.trim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 64) = *(void *)(a3 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, v3, a2);
    v15[0] = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D8);
    sub_25E6867CC(&qword_26A7016E0, &qword_26A7016D8);
    uint64_t v10 = sub_25E6C2610();
    *(void *)(inited + 96) = MEMORY[0x263F8D310];
    *(void *)(inited + 104) = &protocol witness table for String;
    *(void *)(inited + 72) = v10;
    *(void *)(inited + 80) = v11;
    sub_25E686E60(inited, v15);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_25E6C3230;
    *(void *)(v12 + 56) = a2;
    *(void *)(v12 + 64) = *(void *)(a3 + 8);
    uint64_t v13 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v13, v4, a2);
    sub_25E686E60(v12, v15);
  }
  sub_25E680770(v15, 1835627124, 0xE400000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

{
  return sub_25E683D1C(a1, a2, a3, 1835627124, 0xE400000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.replace(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_25E685374(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t *, uint64_t, unint64_t))sub_25E680770);
}

{
  return sub_25E685374(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t *, uint64_t, unint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.substring(_:length:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6854FC(a1, a2, a3, a4, a5, (void (*)(uint64_t *, uint64_t, unint64_t))sub_25E680770);
}

{
  return sub_25E6854FC(a1, a2, a3, a4, a5, (void (*)(uint64_t *, uint64_t, unint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68572C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))ExpressionType<>.substring(_:length:));
}

{
  return sub_25E68572C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))ExpressionType<>.substring(_:length:));
}

uint64_t sub_25E684228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v10 = *(void *)(a2 + 8);
  v13[3] = a1;
  v13[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v5, a1);
  a5(v13, a3, a4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_25E684A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t *, void, unint64_t))
{
  uint64_t v9 = v6;
  uint64_t v13 = *(void *)(a4 + 8);
  v28[3] = a3;
  v28[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, v9, a3);
  v27[3] = MEMORY[0x263F8D310];
  v27[4] = &protocol witness table for String;
  v27[0] = a1;
  v27[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v28, inited + 32);
  sub_25E681F18((uint64_t)v27, inited + 72);
  uint64_t v23 = 32;
  *(void *)&long long v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v23);
  swift_bridgeObjectRelease();
  uint64_t v16 = v25;
  uint64_t v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  uint64_t v18 = v21;
  long long v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v26 = &protocol witness table for Expression<A>;
  uint64_t v23 = v18;
  long long v24 = v20;
  a6(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t _s11SwiftSQLite14ExpressionTypePAASS010UnderlyingD0RtzrlE5matchyAA0C0VySbGSSF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, v5, a3);
  v23[3] = MEMORY[0x263F8D310];
  v23[4] = &protocol witness table for String;
  v23[0] = a1;
  v23[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  long long v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t sub_25E684EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t *, void, unint64_t))
{
  uint64_t v9 = v6;
  uint64_t v13 = *(void *)(a4 + 8);
  v28[3] = a3;
  v28[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, v9, a3);
  v27[3] = MEMORY[0x263F8D310];
  v27[4] = &protocol witness table for String;
  v27[0] = a1;
  v27[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v28, inited + 32);
  sub_25E681F18((uint64_t)v27, inited + 72);
  uint64_t v23 = 32;
  *(void *)&long long v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v23);
  swift_bridgeObjectRelease();
  uint64_t v16 = v25;
  uint64_t v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  uint64_t v18 = v21;
  long long v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v26 = &protocol witness table for Expression<A>;
  uint64_t v23 = v18;
  long long v24 = v20;
  a6(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_25E6850D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *, void, unint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v12 = *(void *)(a3 + 8);
  v27[3] = a2;
  v27[4] = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, v8, a2);
  v26[3] = &type metadata for Collation;
  v26[4] = &protocol witness table for Collation;
  v26[0] = v10;
  v26[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v27, inited + 32);
  sub_25E681F18((uint64_t)v26, inited + 72);
  uint64_t v22 = 32;
  *(void *)&long long v23 = 0xE100000000000000;
  sub_25E681EAC(v10, v11);
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v22);
  swift_bridgeObjectRelease();
  uint64_t v15 = v24;
  uint64_t v16 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v16[1])(&v20, v15, v16);
  uint64_t v17 = v20;
  long long v19 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v25 = &protocol witness table for Expression<A>;
  uint64_t v22 = v17;
  long long v23 = v19;
  a5(&v22, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_25E685374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, uint64_t, unint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  *(void *)(inited + 56) = a5;
  *(void *)(inited + 64) = *(void *)(a6 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, v7, a5);
  uint64_t v16 = MEMORY[0x263F8D310];
  *(void *)(inited + 96) = MEMORY[0x263F8D310];
  *(void *)(inited + 104) = &protocol witness table for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  *(void *)(inited + 136) = v16;
  *(void *)(inited + 144) = &protocol witness table for String;
  *(void *)(inited + 112) = a3;
  *(void *)(inited + 120) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E686E60(inited, v19);
  a7(v19, 0x6563616C706572, 0xE700000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t sub_25E6854FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, unint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  if (a3)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = a4;
    *(void *)(inited + 64) = *(void *)(a5 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, v6, a4);
    *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 72) = a1;
    sub_25E686E60(inited, v19);
  }
  else
  {
    uint64_t v13 = swift_initStackObject();
    *(_OWORD *)(v13 + 16) = xmmword_25E6C31A0;
    *(void *)(v13 + 56) = a4;
    *(void *)(v13 + 64) = *(void *)(a5 + 8);
    uint64_t v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v14, v6, a4);
    uint64_t v15 = MEMORY[0x263F8D6C8];
    *(void *)(v13 + 96) = MEMORY[0x263F8D6C8];
    *(void *)(v13 + 104) = &protocol witness table for Int;
    *(void *)(v13 + 72) = a1;
    *(void *)(v13 + 136) = v15;
    *(void *)(v13 + 144) = &protocol witness table for Int;
    *(void *)(v13 + 112) = a2;
    sub_25E686E60(v13, v19);
  }
  a6(v19, 0x727473627573, 0xE600000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t sub_25E68572C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, uint64_t, uint64_t))
{
  BOOL v5 = __OFSUB__(a2, result);
  uint64_t v6 = a2 - result;
  if (!v5) {
    return a5(result, v6, 0, a3, a4);
  }
  __break(1u);
  return result;
}

uint64_t Collection<>.contains(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = sub_25E6C26F0();
  sub_25E685A74((void *)0x3F, 0xE100000000000000, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
  sub_25E6867CC((unint64_t *)&qword_26B38E208, &qword_26B38E200);
  sub_25E6C24B0();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  v35[3] = type metadata accessor for Expression();
  v35[4] = &protocol witness table for Expression<A>;
  v35[0] = v6;
  v35[1] = v7;
  v35[2] = v8;
  uint64_t v30 = 40;
  unint64_t v31 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  uint64_t v12 = sub_25E682720((void (*)(char *, char *))sub_25E686810, (uint64_t)v20, a2, v10, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v11);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v34 = &protocol witness table for Expression<A>;
  uint64_t v30 = 40;
  unint64_t v31 = 0xE100000000000000;
  uint64_t v32 = v12;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v35, inited + 32);
  sub_25E681F18((uint64_t)&v30, inited + 72);
  uint64_t v26 = 32;
  *(void *)&long long v27 = 0xE100000000000000;
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v26);
  swift_bridgeObjectRelease();
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  __swift_project_boxed_opaque_existential_1(&v26, v28);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v24, v14, v15);
  uint64_t v16 = v24;
  long long v19 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v29 = &protocol witness table for Expression<A>;
  uint64_t v26 = v16;
  long long v27 = v19;
  sub_25E680770(&v26, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  long long v19;
  unsigned char v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  long long v25;
  uint64_t v26;
  long long v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  void v35[6];

  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = sub_25E6C26F0();
  sub_25E685A74((void *)0x3F, 0xE100000000000000, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
  sub_25E6867CC((unint64_t *)&qword_26B38E208, &qword_26B38E200);
  sub_25E6C24B0();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  sub_25E6C2790();
  v35[3] = type metadata accessor for Expression();
  v35[4] = &protocol witness table for Expression<A>;
  v35[0] = v6;
  v35[1] = v7;
  v35[2] = v8;
  uint64_t v30 = 40;
  unint64_t v31 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  uint64_t v12 = sub_25E682720((void (*)(char *, char *))sub_25E686B60, (uint64_t)v20, a2, v10, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v11);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v34 = &protocol witness table for Expression<A>;
  uint64_t v30 = 40;
  unint64_t v31 = 0xE100000000000000;
  uint64_t v32 = v12;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v35, inited + 32);
  sub_25E681F18((uint64_t)&v30, inited + 72);
  uint64_t v26 = 32;
  *(void *)&long long v27 = 0xE100000000000000;
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v26);
  swift_bridgeObjectRelease();
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  __swift_project_boxed_opaque_existential_1(&v26, v28);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v24, v14, v15);
  uint64_t v16 = v24;
  long long v19 = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v29 = &protocol witness table for Expression<A>;
  uint64_t v26 = v16;
  long long v27 = v19;
  sub_25E680770(&v26, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

void *sub_25E685A74(void *result, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      BOOL v5 = result;
      uint64_t v6 = (void *)sub_25E6C2680();
      uint64_t v7 = v6;
      v6[2] = a3;
      v6[4] = v5;
      uint64_t v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x263F8EE78];
    }
    return v7;
  }
  return result;
}

uint64_t sub_25E685E54@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 56);
  swift_getAssociatedTypeWitness();
  a2[3] = swift_getAssociatedTypeWitness();
  a2[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(a2);
  uint64_t v5 = swift_checkMetadataState();
  return v4(v5, a1);
}

uint64_t String.like(_:escape:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  if (a3)
  {
    uint64_t v39 = MEMORY[0x263F8D310];
    uint64_t v40 = &protocol witness table for String;
    uint64_t v37 = a4;
    unint64_t v38 = a5;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
    uint64_t v36 = &protocol witness table for Expression<A>;
    uint64_t v32 = v8;
    uint64_t v33 = v7;
    uint64_t v34 = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v37, inited + 32);
    sub_25E681F18((uint64_t)&v32, inited + 72);
    uint64_t v28 = 32;
    *(void *)&long long v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v28);
    swift_bridgeObjectRelease();
    uint64_t v13 = v30;
    uint64_t v14 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v26, v13, v14);
    uint64_t v15 = *((void *)&v27 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    uint64_t v37 = 40;
    unint64_t v38 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v16 = v37;
    unint64_t v17 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_25E6C3230;
    *(void *)(v18 + 56) = MEMORY[0x263F8D310];
    *(void *)(v18 + 64) = &protocol witness table for String;
    *(void *)(v18 + 32) = a2;
    *(void *)(v18 + 40) = a3;
    uint64_t v37 = v15;
    swift_bridgeObjectRetain();
    sub_25E6866CC((void *)v18);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = v37;
    *a6 = v16;
    a6[1] = v17;
    a6[2] = v20;
  }
  else
  {
    uint64_t v39 = MEMORY[0x263F8D310];
    uint64_t v40 = &protocol witness table for String;
    uint64_t v37 = a4;
    unint64_t v38 = a5;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
    uint64_t v36 = &protocol witness table for Expression<A>;
    uint64_t v32 = v8;
    uint64_t v33 = v7;
    uint64_t v34 = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v21 = swift_initStackObject();
    *(_OWORD *)(v21 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v37, v21 + 32);
    sub_25E681F18((uint64_t)&v32, v21 + 72);
    uint64_t v28 = 32;
    *(void *)&long long v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v21, &v28);
    swift_bridgeObjectRelease();
    uint64_t v22 = v30;
    uint64_t v23 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v23[1])(&v26, v22, v23);
    uint64_t v24 = v26;
    long long v25 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
    unint64_t v31 = &protocol witness table for Expression<A>;
    uint64_t v28 = v24;
    long long v29 = v25;
    sub_25E680770(&v28, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  }
  return result;
}

uint64_t ?? infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E6C2790();
  *(void *)(inited + 56) = type metadata accessor for Expression();
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = v11;
  *(void *)(inited + 96) = a3;
  *(void *)(inited + 104) = *(void *)(a4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E682D8C(inited, 19, a5);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t ?? infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E6C2790();
  *(void *)(inited + 56) = type metadata accessor for Expression();
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 96) = type metadata accessor for Expression();
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v6;
  *(void *)(inited + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E682D8C(inited, 19, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;

  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E6C2790();
  uint64_t v11 = type metadata accessor for Expression();
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 96) = v11;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v7;
  *(void *)(inited + 88) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E682D8C(inited, 19, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

void *sub_25E6866CC(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_25E68088C(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E6867CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E686810@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E685E54(*(void *)(v1 + 32), a1);
}

uint64_t sub_25E686834(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_25E6809C4((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E686920(uint64_t a1)
{
  return sub_25E686A50(a1, (uint64_t (*)(void))sub_25E680878, &qword_26B38E0F0);
}

uint64_t sub_25E686940(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_25E680AC8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E686A30(uint64_t a1)
{
  return sub_25E686A50(a1, (uint64_t (*)(void))sub_25E680BE0, &qword_26B38E050);
}

uint64_t sub_25E686A50(uint64_t result, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v9 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(v9 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  uint64_t result = a2();
  uint64_t v5 = result;
  if (!*(void *)(v9 + 16))
  {
LABEL_10:
    if (!v4) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
LABEL_5:
  if ((*(void *)(v5 + 24) >> 1) - *(void *)(v5 + 16) < v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v10 = *(void *)(v5 + 16);
  BOOL v11 = __OFADD__(v10, v4);
  uint64_t v12 = v10 + v4;
  if (!v11)
  {
    *(void *)(v5 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_25E686B60@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E686810(a1);
}

uint64_t static Module.RTree<A, B>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_25E6C3230;
  uint64_t v9 = (void *)v8;
  *(void *)(v8 + 56) = type metadata accessor for Expression();
  v9[8] = &protocol witness table for Expression<A>;
  v9[4] = v5;
  uint64_t v9[5] = v6;
  v9[6] = v7;
  uint64_t v10 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (MEMORY[0x2611E0030](a2, TupleTypeMetadata2))
  {
    unint64_t v31 = a3;
    uint64_t v12 = 0;
    uint64_t v13 = (uint64_t *)(a2 + 72);
    uint64_t v32 = TupleTypeMetadata2;
    uint64_t v33 = a2;
    while (1)
    {
      char v14 = sub_25E6C2690();
      uint64_t result = sub_25E6C2660();
      if ((v14 & 1) == 0) {
        break;
      }
      if (__OFADD__(v12, 1)) {
        goto LABEL_21;
      }
      uint64_t v35 = v12 + 1;
      uint64_t v17 = *(v13 - 1);
      uint64_t v16 = *v13;
      uint64_t v18 = *(v13 - 3);
      uint64_t v36 = *(v13 - 2);
      long long v19 = v9;
      uint64_t v21 = *(v13 - 5);
      uint64_t v20 = *(v13 - 4);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(void *)(inited + 32) = v21;
      uint64_t v9 = v19;
      *(void *)(inited + 56) = v34;
      *(void *)(inited + 64) = &protocol witness table for Expression<A>;
      *(void *)(inited + 40) = v20;
      *(void *)(inited + 48) = v18;
      *(void *)(inited + 96) = v34;
      *(void *)(inited + 104) = &protocol witness table for Expression<A>;
      *(void *)(inited + 72) = v36;
      *(void *)(inited + 80) = v17;
      *(void *)(inited + 88) = v16;
      int64_t v23 = v19[2];
      int64_t v24 = v23 + 2;
      BOOL v25 = __OFADD__(v23, 2);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      if (v25) {
        goto LABEL_22;
      }
      int64_t v26 = v9[3] >> 1;
      if (v26 < v24)
      {
        if (v23 <= v24) {
          int64_t v30 = v23 + 2;
        }
        else {
          int64_t v30 = v23;
        }
        uint64_t result = (uint64_t)sub_25E680878((void *)1, v30, 1, v9);
        uint64_t v9 = (void *)result;
        int64_t v23 = *(void *)(result + 16);
        int64_t v26 = *(void *)(result + 24) >> 1;
      }
      if (v26 - v23 < 2) {
        goto LABEL_23;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      uint64_t result = swift_arrayInitWithCopy();
      uint64_t v27 = v9[2];
      BOOL v28 = __OFADD__(v27, 2);
      uint64_t v29 = v27 + 2;
      if (v28) {
        goto LABEL_24;
      }
      v9[2] = v29;
      swift_bridgeObjectRelease();
      ++v12;
      v13 += 6;
      if (v35 == MEMORY[0x2611E0030](v33, v32))
      {
        uint64_t result = swift_bridgeObjectRelease();
        a3 = v31;
        goto LABEL_19;
      }
    }
    uint64_t result = sub_25E6C27E0();
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_19:
    *a3 = 0x6565727472;
    a3[1] = 0xE500000000000000;
    a3[2] = v9;
  }
  return result;
}

uint64_t sub_25E686E60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
LABEL_24:
    v27[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
    sub_25E6867CC((unint64_t *)&qword_26B38E208, &qword_26B38E200);
    uint64_t v23 = sub_25E6C24B0();
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    v2[3] = result;
    v2[4] = (uint64_t)&protocol witness table for Expression<A>;
    *uint64_t v2 = v23;
    v2[1] = v25;
    v2[2] = (uint64_t)v6;
    return result;
  }
  uint64_t v4 = (void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v7 = v4[3];
    uint64_t v8 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v7);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v27, v7, v8);
    uint64_t v10 = v27[0];
    uint64_t v9 = v27[1];
    uint64_t v11 = v27[2];
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_25E6809C4(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
      uint64_t v5 = result;
    }
    unint64_t v14 = *(void *)(v5 + 16);
    unint64_t v13 = *(void *)(v5 + 24);
    if (v14 >= v13 >> 1)
    {
      uint64_t result = (uint64_t)sub_25E6809C4((char *)(v13 > 1), v14 + 1, 1, (char *)v5);
      uint64_t v5 = result;
    }
    *(void *)(v5 + 16) = v14 + 1;
    unint64_t v15 = v5 + 16 * v14;
    *(void *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v9;
    uint64_t v16 = *(void *)(v11 + 16);
    int64_t v17 = v6[2];
    int64_t v18 = v17 + v16;
    if (__OFADD__(v17, v16)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v18 <= v6[3] >> 1)
    {
      if (*(void *)(v11 + 16)) {
        goto LABEL_18;
      }
    }
    else
    {
      if (v17 <= v18) {
        int64_t v19 = v17 + v16;
      }
      else {
        int64_t v19 = v17;
      }
      uint64_t result = (uint64_t)sub_25E68088C((void *)result, v19, 1, v6);
      uint64_t v6 = (void *)result;
      if (*(void *)(v11 + 16))
      {
LABEL_18:
        if ((v6[3] >> 1) - v6[2] < v16) {
          goto LABEL_27;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
        uint64_t result = swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v20 = v6[2];
          BOOL v21 = __OFADD__(v20, v16);
          uint64_t v22 = v20 + v16;
          if (v21) {
            goto LABEL_28;
          }
          v6[2] = v22;
        }
        goto LABEL_4;
      }
    }
    if (v16) {
      goto LABEL_26;
    }
LABEL_4:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v4 += 5;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = a2;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25E68711C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t vars8;

  unint64_t v14 = a2;
  unint64_t v15 = a3;
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  v8(v13, v6, v7);
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v9 = v14;
  uint64_t v10 = v15;
  v8(v13, v6, v7);
  uint64_t v11 = v13[2];
  swift_bridgeObjectRelease();
  return Expression.init(_:_:)(v9, v10, v11, a4);
}

uint64_t sub_25E687240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18(a1, inited + 32);
  sub_25E681F18(a2, inited + 72);
  sub_25E687350(inited, a3, a4);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

void * infix(_:_:)(void *a1@<X8>)
{
  *a1 = 42;
  a1[1] = 0xE100000000000000;
  a1[2] = MEMORY[0x263F8EE78];
}

void sub_25E687340()
{
  qword_26B38EA00 = -1;
}

uint64_t sub_25E687350@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Expression();
  uint64_t v19 = 32;
  unint64_t v20 = 0xE100000000000000;
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(a1, &v19);
  swift_bridgeObjectRelease();
  uint64_t v7 = v22;
  uint64_t v8 = v23;
  __swift_project_boxed_opaque_existential_1(&v19, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v8[1])(&v17, v7, v8);
  uint64_t v15 = v17;
  long long v16 = v18;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_25E6867CC(&qword_26B38E0B0, &qword_26B38E1E8);
  ExpressionType.init<A>(_:)((uint64_t)&v15, v6, v9, WitnessTable, v11);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  unint64_t v13 = v25;
  uint64_t v14 = v26;
  if (a2)
  {
    uint64_t v22 = v6;
    uint64_t v23 = &protocol witness table for Expression<A>;
    uint64_t v19 = v24;
    unint64_t v20 = v25;
    uint64_t v21 = v26;
    sub_25E68711C(&v19, 0, 0xE000000000000000, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  }
  else
  {
    *a3 = v24;
    a3[1] = v13;
    a3[2] = v14;
  }
  return result;
}

uint64_t sub_25E687500(uint64_t a1)
{
  sub_25E687934(a1, (uint64_t)&v6);
  if (v7)
  {
    sub_25E681E94(&v6, (uint64_t)v8);
    sub_25E681F18((uint64_t)v8, (uint64_t)&v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      uint64_t v4 = 10104;
      uint64_t v5 = 0xE200000000000000;
      Blob.toHex()();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      uint64_t v1 = 10104;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        sub_25E681E94(&v6, (uint64_t)&v4);
        sub_25E6C2870();
        uint64_t v1 = 0;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
        uint64_t v2 = (long long *)v8;
        goto LABEL_9;
      }
      sub_25E681960(0, 0xE000000000000000, v4, v5, 39, 0xE100000000000000);
      sub_25E6C24A0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C24A0();
      swift_bridgeObjectRelease();
      uint64_t v1 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v2 = &v6;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return v1;
  }
  sub_25E68799C((uint64_t)&v6);
  return 1280070990;
}

uint64_t sub_25E687708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = &v13[-v8 - 8];
  uint64_t v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v10);
  sub_25E681F18(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
  swift_dynamicCast();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v9, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return swift_dynamicCast();
}

uint64_t sub_25E6878CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_25E687934(a1, (uint64_t)v6);
  if (v7)
  {
    sub_25E687708((uint64_t)v6, a2, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E687934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E68799C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Data.declaredDatatype.getter()
{
  return 1112493122;
}

uint64_t static Data.fromDatatypeValue(_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_25E688C00(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Data.datatypeValue.getter@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_25E688C9C(a1, a2);
      uint64_t result = sub_25E6887C8((int)a1, a1, a2, a3);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      sub_25E688C9C(a1, a2);
      swift_retain();
      swift_retain();
      sub_25E6887C8(v8, a1, a2, a3);
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      sub_25E688CF4(a1, a2);
      uint64_t result = sub_25E688CF4(a1, a2);
      *a3 = MEMORY[0x263F8EE78];
      break;
    default:
      uint64_t v9 = a1;
      __int16 v10 = a2;
      char v11 = BYTE2(a2);
      char v12 = BYTE3(a2);
      char v13 = BYTE4(a2);
      char v14 = BYTE5(a2);
      long long v6 = sub_25E6888C4(&v9, BYTE6(a2));
      sub_25E688CF4(a1, a2);
      uint64_t result = sub_25E688CF4(a1, a2);
      *a3 = v6;
      break;
  }
  return result;
}

uint64_t sub_25E687C8C()
{
  return 1112493122;
}

uint64_t sub_25E687C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_25E688C00(v2);
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_25E687CE8@<X0>(void *a1@<X8>)
{
  return Data.datatypeValue.getter(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t static Date.declaredDatatype.getter()
{
  return 1415071060;
}

uint64_t static Date.fromDatatypeValue(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25E6C23B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B38DFC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v9 = (id)qword_26B38E0C8;
  __int16 v10 = (void *)sub_25E6C24D0();
  id v11 = objc_msgSend(v9, sel_dateFromString_, v10);

  if (v11)
  {
    sub_25E6C23A0();

    char v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v12(v8, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(a1, v8, v2);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  __break(1u);
  return result;
}

uint64_t Date.datatypeValue.getter()
{
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26B38E0C8;
  uint64_t v1 = (void *)sub_25E6C2390();
  id v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  uint64_t v3 = sub_25E6C24E0();
  return v3;
}

uint64_t sub_25E688020()
{
  return 1415071060;
}

uint64_t sub_25E688030@<X0>(uint64_t a1@<X8>)
{
  return static Date.fromDatatypeValue(_:)(a1);
}

void sub_25E68803C(uint64_t *a1@<X8>)
{
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26B38E0C8;
  uint64_t v3 = (void *)sub_25E6C2390();
  id v4 = objc_msgSend(v2, sel_stringFromDate_, v3);

  uint64_t v5 = sub_25E6C24E0();
  uint64_t v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

id sub_25E68810C()
{
  id result = sub_25E68812C();
  qword_26B38E0C8 = (uint64_t)result;
  return result;
}

id sub_25E68812C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0A0);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25E6C2410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  uint64_t v8 = (void *)sub_25E6C24D0();
  objc_msgSend(v7, sel_setDateFormat_, v8);

  sub_25E6C23F0();
  id v9 = (void *)sub_25E6C2400();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v9);

  sub_25E6C2420();
  uint64_t v10 = sub_25E6C2440();
  uint64_t v11 = *(void *)(v10 - 8);
  char v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) != 1)
  {
    char v12 = (void *)sub_25E6C2430();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  }
  objc_msgSend(v7, sel_setTimeZone_, v12);

  return v7;
}

id dateFormatter.getter()
{
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_26B38E0C8;
  return v0;
}

void dateFormatter.setter(uint64_t a1)
{
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (void *)qword_26B38E0C8;
  qword_26B38E0C8 = a1;
}

uint64_t (*dateFormatter.modify())()
{
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static UUID.declaredDatatype.getter()
{
  return 1415071060;
}

uint64_t static UUID.fromDatatypeValue(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38DFB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E6C23C0();
  uint64_t v5 = sub_25E6C23E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E68862C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38DFB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E6C23C0();
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E688728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s10Foundation4UUIDV11SwiftSQLiteE13datatypeValueSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *sub_25E688750@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_25E688A3C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_25E688B00((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_25E688B7C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_25E6887C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v8 = sub_25E6C2340();
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_25E6C2360();
  BOOL v11 = __OFSUB__(a1, v10);
  uint64_t v12 = a1 - v10;
  if (v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    sub_25E6C2350();
    __break(1u);
    JUMPOUT(0x25E6888B4);
  }
  sub_25E6C2350();
  int64_t v13 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_10;
      }
      int64_t v13 = HIDWORD(a2) - (int)a2;
LABEL_8:
      long long v16 = sub_25E6888C4((const void *)(v9 + v12), v13);
      uint64_t result = sub_25E688CF4(a2, a3);
      *a4 = v16;
      return result;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      int64_t v13 = v14 - v15;
      if (!__OFSUB__(v14, v15)) {
        goto LABEL_8;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_8;
    default:
      int64_t v13 = BYTE6(a3);
      goto LABEL_8;
  }
}

void *sub_25E6888C4(const void *a1, int64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (a2 <= 0)
  {
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E098);
    uint64_t v4 = (void *)swift_allocObject();
    size_t v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a2;
    uint64_t v4[3] = 2 * v5 - 64;
  }
  memcpy(v4 + 4, a1, a2);
  return v4;
}

void *sub_25E688954(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E220);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_25E695E70((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25E688D64();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_25E688A3C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_25E688B00(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25E6C2370();
  swift_allocObject();
  uint64_t result = sub_25E6C2330();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25E6C2380();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_25E688B7C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25E6C2370();
  swift_allocObject();
  uint64_t result = sub_25E6C2330();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25E688C00(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0B8);
  unint64_t v10 = sub_25E688D6C();
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  int64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_25E688750(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_25E688C9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_25E688CF4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

_UNKNOWN **sub_25E688D4C()
{
  return &protocol witness table for Blob;
}

_UNKNOWN **sub_25E688D58()
{
  return &protocol witness table for String;
}

uint64_t sub_25E688D64()
{
  return swift_release();
}

unint64_t sub_25E688D6C()
{
  unint64_t result = qword_26B38E0E0;
  if (!qword_26B38E0E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B38E0B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B38E0E0);
  }
  return result;
}

uint64_t sub_25E688DC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *a1;
  *(void *)(a5 + 24) = type metadata accessor for Expression();
  *(void *)(a5 + 32) = &protocol witness table for Expression<A>;
  *(void *)a5 = v10;
  *(_OWORD *)(a5 + 8) = *(_OWORD *)(a1 + 1);
  uint64_t v11 = *(void *)(a4 + 8);
  *(void *)(a5 + 64) = a3;
  *(void *)(a5 + 72) = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a5 + 40));
  int64_t v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v13(boxed_opaque_existential_1, a2, a3);
}

__n128 sub_25E688E7C@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  sub_25E6C2790();
  *(void *)(a3 + 24) = type metadata accessor for Expression();
  *(void *)(a3 + 32) = &protocol witness table for Expression<A>;
  *(void *)a3 = v6;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 1);
  *(void *)(a3 + 64) = type metadata accessor for Expression();
  *(void *)(a3 + 72) = &protocol witness table for Expression<A>;
  *(void *)(a3 + 40) = v7;
  __n128 result = *(__n128 *)(a2 + 1);
  *(__n128 *)(a3 + 48) = result;
  return result;
}

__n128 sub_25E688F14@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  sub_25E6C2790();
  uint64_t v8 = type metadata accessor for Expression();
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = &protocol witness table for Expression<A>;
  *(void *)a3 = v6;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 1);
  *(void *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = &protocol witness table for Expression<A>;
  *(void *)(a3 + 40) = v7;
  __n128 result = *(__n128 *)(a2 + 1);
  *(__n128 *)(a3 + 48) = result;
  return result;
}

uint64_t sub_25E688F94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = type metadata accessor for Expression();
  *(void *)(a4 + 24) = v13;
  *(void *)(a4 + 32) = &protocol witness table for Expression<A>;
  *(void *)a4 = v12;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v18 = v13;
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  ExpressionType<>.init(value:)((uint64_t)v11, v13, WitnessTable, a3, (uint64_t)&v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return sub_25E681E94(&v17, a4 + 40);
}

uint64_t Setter.expression.getter@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18(v1, inited + 32);
  sub_25E681F18(v1 + 40, inited + 72);
  v11[0] = 32;
  v11[1] = 0xE100000000000000;
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, v11);
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  uint64_t v5 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 8))(&v9, v4, v5);
  uint64_t v6 = v9;
  long long v8 = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  *(void *)a1 = v6;
  *(_OWORD *)(a1 + 8) = v8;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t <- infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = type metadata accessor for Expression();
  *a3 = v5;
  a3[1] = v4;
  a3[2] = v6;
  a3[3] = v10;
  a3[8] = v10;
  a3[9] = &protocol witness table for Expression<A>;
  a3[4] = &protocol witness table for Expression<A>;
  a3[5] = v8;
  a3[6] = v7;
  a3[7] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t <- infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v7[1];
  uint64_t v11 = v7[2];
  v15[0] = *v7;
  v15[1] = v10;
  v15[2] = v11;
  (*(void (**)(char *))(v12 + 16))(v9);
  sub_25E688DC8(v15, (uint64_t)v9, a2, a3, a4);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t <- infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E689440(a1, a2, a3, a4, (void (*)(void *, void *))sub_25E688E7C);
}

{
  return sub_25E689440(a1, a2, a3, a4, (void (*)(void *, void *))sub_25E688F14);
}

uint64_t sub_25E689440(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void *, void *))
{
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  v12[0] = *a1;
  v12[1] = v5;
  v12[2] = v6;
  v11[0] = v7;
  v11[1] = v8;
  v11[2] = v9;
  a5(v12, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t <- infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_25E6C2790();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17[-1] - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  v17[0] = v11;
  v17[1] = v12;
  v17[2] = v13;
  (*(void (**)(char *, uint64_t))(v14 + 16))(v10, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_25E688F94(v17, (uint64_t)v10, a3, a4);
}

uint64_t += infix(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E689884(a1, a2, &qword_26A7016D0, a3);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  long long v20;
  uint64_t v21;
  uint64_t v22;
  long long v23;
  uint64_t v24;
  long long v25;
  uint64_t v26;
  _UNKNOWN **v27;
  void v28[5];
  void v29[6];

  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v21 = *a1;
  uint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016E8);
  v29[3] = v10;
  void v29[4] = &protocol witness table for Expression<A>;
  v29[0] = v5;
  v29[1] = v4;
  v29[2] = v6;
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v7;
  v28[1] = v8;
  v28[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v29, inited + 32);
  sub_25E681F18((uint64_t)v28, inited + 72);
  uint64_t v24 = 32;
  *(void *)&unint64_t v25 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v24);
  swift_bridgeObjectRelease();
  uint64_t v12 = v26;
  uint64_t v13 = v27;
  __swift_project_boxed_opaque_existential_1(&v24, v26);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v22, v12, v13);
  uint64_t v14 = v22;
  unint64_t v20 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  uint64_t v26 = v10;
  uint64_t v27 = &protocol witness table for Expression<A>;
  uint64_t v24 = v14;
  unint64_t v25 = v20;
  uint64_t v22 = 0;
  *(void *)&uint64_t v23 = 0xE000000000000000;
  sub_25E6C25A0();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(&v24, v10);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v16 = v22;
  long long v17 = v23;
  uint64_t v18 = v15[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  *a3 = v21;
  a3[1] = v4;
  a3[2] = v6;
  a3[3] = v10;
  a3[8] = v10;
  a3[9] = &protocol witness table for Expression<A>;
  a3[4] = &protocol witness table for Expression<A>;
  a3[5] = v16;
  a3[6] = v17;
  a3[7] = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

{
  return sub_25E689884(a1, a2, &qword_26A7016E8, a3);
}

uint64_t += infix(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_25E689AFC(a1, a2, a3, &qword_26A7016D0, a4);
}

{
  return sub_25E689AFC(a1, a2, a3, &qword_26A7016E8, a4);
}

uint64_t sub_25E689884@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v22 = *a1;
  uint64_t v7 = a1[2];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v30[3] = v11;
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v6;
  v30[1] = v5;
  v30[2] = v7;
  v29[3] = v11;
  void v29[4] = &protocol witness table for Expression<A>;
  v29[0] = v8;
  v29[1] = v9;
  v29[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v30, inited + 32);
  sub_25E681F18((uint64_t)v29, inited + 72);
  uint64_t v25 = 32;
  *(void *)&long long v26 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v25);
  swift_bridgeObjectRelease();
  uint64_t v13 = v27;
  uint64_t v14 = v28;
  __swift_project_boxed_opaque_existential_1(&v25, v27);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v23, v13, v14);
  uint64_t v15 = v23;
  long long v21 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  uint64_t v27 = v11;
  BOOL v28 = &protocol witness table for Expression<A>;
  uint64_t v25 = v15;
  long long v26 = v21;
  uint64_t v23 = 0;
  *(void *)&long long v24 = 0xE000000000000000;
  sub_25E6C25A0();
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(&v25, v11);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v17 = v23;
  uint64_t v18 = v24;
  uint64_t v19 = v16[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  *a4 = v22;
  a4[1] = v5;
  a4[2] = v7;
  a4[3] = v11;
  a4[8] = v11;
  a4[9] = &protocol witness table for Expression<A>;
  a4[4] = &protocol witness table for Expression<A>;
  a4[5] = v17;
  a4[6] = v18;
  a4[7] = v19;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E689AFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v22 = *a1;
  uint64_t v10 = a1[2];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v30[3] = v11;
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v9;
  v30[1] = v8;
  v30[2] = v10;
  v29[3] = MEMORY[0x263F8D310];
  void v29[4] = &protocol witness table for String;
  v29[0] = a2;
  v29[1] = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v30, inited + 32);
  sub_25E681F18((uint64_t)v29, inited + 72);
  uint64_t v25 = 32;
  *(void *)&long long v26 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v25);
  swift_bridgeObjectRelease();
  uint64_t v13 = v27;
  uint64_t v14 = v28;
  __swift_project_boxed_opaque_existential_1(&v25, v27);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v23, v13, v14);
  uint64_t v15 = v23;
  long long v21 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  uint64_t v27 = v11;
  BOOL v28 = &protocol witness table for Expression<A>;
  uint64_t v25 = v15;
  long long v26 = v21;
  uint64_t v23 = 0;
  *(void *)&long long v24 = 0xE000000000000000;
  sub_25E6C25A0();
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(&v25, v11);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v17 = v23;
  uint64_t v18 = v24;
  uint64_t v19 = v16[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  *a5 = v22;
  a5[1] = v8;
  a5[2] = v10;
  a5[3] = v11;
  a5[8] = v11;
  a5[9] = &protocol witness table for Expression<A>;
  a5[4] = &protocol witness table for Expression<A>;
  a5[5] = v17;
  a5[6] = v18;
  a5[7] = v19;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t += infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A408(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))+ infix<A>(_:_:), a3);
}

uint64_t += infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68A4D0(a1, (void (*)(void *__return_ptr, uint64_t *))+ infix<A>(_:_:), a2);
}

uint64_t sub_25E689D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016F0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = a1;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = v8;
  v21[3] = MEMORY[0x263F8D6C8];
  v21[4] = &protocol witness table for Int;
  v21[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&long long v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  long long v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  unint64_t v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  long long v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t += infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))+ infix<A>(_:_:));
}

{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))+ infix<A>(_:_:));
}

uint64_t sub_25E689FA4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = *a2;
  v18[0] = *a1;
  v18[1] = v8;
  v18[2] = v9;
  uint64_t v14 = v18[0];
  uint64_t v15 = v8;
  uint64_t v16 = v9;
  uint64_t v12 = v10;
  long long v13 = *(_OWORD *)(a2 + 1);
  a6(v17, &v14, &v12);
  uint64_t v14 = v17[0];
  uint64_t v15 = v17[1];
  uint64_t v16 = v17[2];
  <- infix<A>(_:_:)(v18, &v14, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t += infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E68A2CC(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *))+ infix<A>(_:_:));
}

uint64_t -= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A408(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))- infix<A>(_:_:), a3);
}

uint64_t -= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68A4D0(a1, (void (*)(void *__return_ptr, uint64_t *))- infix<A>(_:_:), a2);
}

uint64_t sub_25E68A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016F0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = a1;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = v8;
  v21[3] = MEMORY[0x263F8D6C8];
  v21[4] = &protocol witness table for Int;
  v21[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&long long v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  long long v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  unint64_t v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  long long v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t -= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))- infix<A>(_:_:));
}

{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))- infix<A>(_:_:));
}

uint64_t -= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E68A2CC(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *))- infix<A>(_:_:));
}

uint64_t sub_25E68A2CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *__return_ptr, uint64_t *))
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  v15[0] = *a1;
  v15[1] = v8;
  v15[2] = v9;
  uint64_t v11 = v15[0];
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  a6(v14, &v11);
  uint64_t v11 = v14[0];
  uint64_t v12 = v14[1];
  uint64_t v13 = v14[2];
  <- infix<A>(_:_:)(v15, &v11, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A408(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))* infix<A>(_:_:), a3);
}

uint64_t *= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68A4D0(a1, (void (*)(void *__return_ptr, uint64_t *))* infix<A>(_:_:), a2);
}

uint64_t *= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))* infix<A>(_:_:));
}

{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))* infix<A>(_:_:));
}

uint64_t *= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E68A2CC(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *))* infix<A>(_:_:));
}

uint64_t /= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A408(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))/ infix<A>(_:_:), a3);
}

uint64_t sub_25E68A408@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void *__return_ptr, uint64_t *, uint64_t *)@<X5>, void *a4@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  v15[0] = *a1;
  v15[1] = v5;
  v15[2] = v6;
  uint64_t v11 = v15[0];
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  uint64_t v9 = v7;
  long long v10 = *(_OWORD *)(a2 + 1);
  a3(v14, &v11, &v9);
  uint64_t v11 = v14[0];
  uint64_t v12 = v14[1];
  uint64_t v13 = v14[2];
  <- infix<A>(_:_:)(v15, &v11, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t /= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68A4D0(a1, (void (*)(void *__return_ptr, uint64_t *))/ infix<A>(_:_:), a2);
}

uint64_t sub_25E68A4D0@<X0>(uint64_t *a1@<X0>, void (*a2)(void *__return_ptr, uint64_t *)@<X5>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  v11[0] = *a1;
  v11[1] = v4;
  v11[2] = v5;
  uint64_t v7 = v11[0];
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  a2(v10, &v7);
  uint64_t v7 = v10[0];
  uint64_t v8 = v10[1];
  uint64_t v9 = v10[2];
  <- infix<A>(_:_:)(v11, &v7, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t /= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))/ infix<A>(_:_:));
}

{
  return sub_25E689FA4(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))/ infix<A>(_:_:));
}

uint64_t /= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E68A2CC(a1, a2, a3, a4, a5, (void (*)(void *__return_ptr, uint64_t *))/ infix<A>(_:_:));
}

uint64_t %= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A990(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))% infix<A>(_:_:), a3);
}

uint64_t %= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68AA58(a1, (void (*)(void *__return_ptr, uint64_t *))% infix<A>(_:_:), a2);
}

uint64_t %= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))% infix<A>(_:_:));
}

{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))% infix<A>(_:_:));
}

uint64_t sub_25E68A614(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = *a2;
  v17[0] = *a1;
  v17[1] = v7;
  v17[2] = v8;
  uint64_t v13 = v17[0];
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  uint64_t v11 = v9;
  long long v12 = *(_OWORD *)(a2 + 1);
  a5(v16, &v13, &v11);
  uint64_t v13 = v16[0];
  uint64_t v14 = v16[1];
  uint64_t v15 = v16[2];
  <- infix<A>(_:_:)(v17, &v13, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t %= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A764(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *))% infix<A>(_:_:));
}

uint64_t <<= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A990(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))<< infix<A>(_:_:), a3);
}

uint64_t <<= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68AA58(a1, (void (*)(void *__return_ptr, uint64_t *))<< infix<A>(_:_:), a2);
}

uint64_t <<= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))<< infix<A>(_:_:));
}

{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))<< infix<A>(_:_:));
}

uint64_t <<= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A764(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *))<< infix<A>(_:_:));
}

uint64_t sub_25E68A764(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, uint64_t *))
{
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  v14[0] = *a1;
  v14[1] = v7;
  v14[2] = v8;
  uint64_t v10 = v14[0];
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  a5(v13, &v10);
  uint64_t v10 = v13[0];
  uint64_t v11 = v13[1];
  uint64_t v12 = v13[2];
  <- infix<A>(_:_:)(v14, &v10, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t >>= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A990(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))>> infix<A>(_:_:), a3);
}

uint64_t >>= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68AA58(a1, (void (*)(void *__return_ptr, uint64_t *))>> infix<A>(_:_:), a2);
}

uint64_t >>= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))>> infix<A>(_:_:));
}

{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))>> infix<A>(_:_:));
}

uint64_t >>= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A764(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *))>> infix<A>(_:_:));
}

uint64_t &= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A990(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), a3);
}

uint64_t &= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68AA58(a1, (void (*)(void *__return_ptr, uint64_t *))& infix<A>(_:_:), a2);
}

uint64_t &= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:));
}

{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:));
}

uint64_t &= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A764(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *))& infix<A>(_:_:));
}

uint64_t |= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A990(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))| infix<A>(_:_:), a3);
}

uint64_t |= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68AA58(a1, (void (*)(void *__return_ptr, uint64_t *))| infix<A>(_:_:), a2);
}

uint64_t |= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))| infix<A>(_:_:));
}

{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))| infix<A>(_:_:));
}

uint64_t |= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A764(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *))| infix<A>(_:_:));
}

uint64_t ^= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25E68A990(a1, a2, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))^ infix<A>(_:_:), a3);
}

uint64_t sub_25E68A990@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void *__return_ptr, uint64_t *, uint64_t *)@<X4>, void *a4@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  v15[0] = *a1;
  v15[1] = v5;
  v15[2] = v6;
  uint64_t v11 = v15[0];
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  uint64_t v9 = v7;
  long long v10 = *(_OWORD *)(a2 + 1);
  a3(v14, &v11, &v9);
  uint64_t v11 = v14[0];
  uint64_t v12 = v14[1];
  uint64_t v13 = v14[2];
  <- infix<A>(_:_:)(v15, &v11, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ^= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25E68AA58(a1, (void (*)(void *__return_ptr, uint64_t *))^ infix<A>(_:_:), a2);
}

uint64_t sub_25E68AA58@<X0>(uint64_t *a1@<X0>, void (*a2)(void *__return_ptr, uint64_t *)@<X4>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  v11[0] = *a1;
  v11[1] = v4;
  v11[2] = v5;
  uint64_t v7 = v11[0];
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  a2(v10, &v7);
  uint64_t v7 = v10[0];
  uint64_t v8 = v10[1];
  uint64_t v9 = v10[2];
  <- infix<A>(_:_:)(v11, &v7, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ^= infix<A>(_:_:)(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))^ infix<A>(_:_:));
}

{
  return sub_25E68A614(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *, uint64_t *))^ infix<A>(_:_:));
}

uint64_t ^= infix<A>(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E68A764(a1, a2, a3, a4, (void (*)(void *__return_ptr, uint64_t *))^ infix<A>(_:_:));
}

double ++ postfix<A>(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E68AB84(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E689D9C, a2);
}

{
  return sub_25E68ACAC(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E689D9C, a2);
}

double -- postfix<A>(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E68AB84(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E68A0AC, a2);
}

{
  return sub_25E68ACAC(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E68A0AC, a2);
}

double sub_25E68AB84@<D0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016F0);
  uint64_t v17 = v6;
  *(void *)&long long v18 = v5;
  *((void *)&v18 + 1) = v7;
  uint64_t v9 = type metadata accessor for Expression();
  unint64_t v10 = sub_25E68ADC8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  ExpressionType.init<A>(_:)((uint64_t)&v17, v8, v9, v10, WitnessTable);
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  uint64_t v14 = v21;
  a2(&v17, v19, v20, v21, 1);
  uint64_t v15 = v17;
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + 16) = v14;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = &protocol witness table for Expression<A>;
  *(void *)(a3 + 32) = &protocol witness table for Expression<A>;
  *(void *)(a3 + 40) = v15;
  double result = *(double *)&v18;
  *(_OWORD *)(a3 + 48) = v18;
  return result;
}

double sub_25E68ACAC@<D0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016F0);
  uint64_t v17 = v6;
  *(void *)&long long v18 = v5;
  *((void *)&v18 + 1) = v7;
  sub_25E6C2790();
  uint64_t v9 = type metadata accessor for Expression();
  unint64_t v10 = sub_25E68ADC8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  ExpressionType.init<A>(_:)((uint64_t)&v17, v8, v9, v10, WitnessTable);
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  uint64_t v14 = v21;
  a2(&v17, v19, v20, v21, 1);
  uint64_t v15 = v17;
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + 16) = v14;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = &protocol witness table for Expression<A>;
  *(void *)(a3 + 32) = &protocol witness table for Expression<A>;
  *(void *)(a3 + 40) = v15;
  double result = *(double *)&v18;
  *(_OWORD *)(a3 + 48) = v18;
  return result;
}

unint64_t sub_25E68ADC8()
{
  unint64_t result = qword_26A7016F8;
  if (!qword_26A7016F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A7016F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7016F8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Setter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for Setter(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for Setter(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for Setter(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for Setter(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for Setter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Setter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Setter()
{
  return &type metadata for Setter;
}

uint64_t Blob.description.getter()
{
  return 10104;
}

void *Blob.init(bytes:length:)@<X0>(const void *a1@<X0>, int64_t a2@<X1>, void *a3@<X8>)
{
  __n128 result = sub_25E6888C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t Blob.bytes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Blob.init(bytes:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

Swift::String __swiftcall Blob.toHex()()
{
  uint64_t v1 = *v0;
  int64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25E68B5FC(0, v2, 0);
    sub_25E68BCD4();
    uint64_t v3 = 0;
    do
    {
      unsigned int v4 = *(unsigned __int8 *)(v1 + v3 + 32);
      if (v4 >= 0x10) {
        uint64_t v5 = 0;
      }
      else {
        uint64_t v5 = 48;
      }
      if (v4 >= 0x10) {
        unint64_t v6 = 0xE000000000000000;
      }
      else {
        unint64_t v6 = 0xE100000000000000;
      }
      sub_25E6C25F0();
      swift_bridgeObjectRetain();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v16 + 16);
      unint64_t v7 = *(void *)(v16 + 24);
      if (v8 >= v7 >> 1) {
        sub_25E68B5FC((char *)(v7 > 1), v8 + 1, 1);
      }
      ++v3;
      *(void *)(v16 + 16) = v8 + 1;
      uint64_t v9 = v16 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
  sub_25E682618();
  uint64_t v10 = sub_25E6C24B0();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v10;
  uint64_t v14 = v12;
  result._object = v14;
  result._uint64_t countAndFlagsBits = v13;
  return result;
}

uint64_t sub_25E68B508()
{
  return 10104;
}

BOOL sub_25E68B570(uint64_t *a1, uint64_t *a2)
{
  return sub_25E68B588(*a1, *a2);
}

BOOL == infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_25E68B588(*a1, *a2);
}

BOOL sub_25E68B588(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = (unsigned __int8 *)(a1 + 33);
  unint64_t v6 = (unsigned __int8 *)(a2 + 33);
  do
  {
    int v8 = *v5++;
    int v7 = v8;
    int v10 = *v6++;
    int v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

char *sub_25E68B5FC(char *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68B71C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_25E68B61C(void *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68BB98(a1, a2, a3, *v3, qword_26B38E148, &qword_26B38E0F0);
  *uint64_t v3 = result;
  return result;
}

void *sub_25E68B64C(void *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68B820(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_25E68B66C(void *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68B958(a1, a2, a3, *v3, &qword_26A701708, &qword_26A701710);
  *uint64_t v3 = result;
  return result;
}

void *sub_25E68B69C(void *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68B958(a1, a2, a3, *v3, &qword_26A701718, &qword_26A701720);
  *uint64_t v3 = result;
  return result;
}

char *sub_25E68B6CC(char *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68BA80(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_25E68B6EC(void *a1, int64_t a2, char a3)
{
  BOOL result = sub_25E68BB98(a1, a2, a3, *v3, &qword_26B38E090, &qword_26B38E050);
  *uint64_t v3 = result;
  return result;
}

char *sub_25E68B71C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E220);
    int v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_25E68B820(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    int v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_25E68B958(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    void v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_25E68BA80(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016C8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_25E68BB98(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

unint64_t sub_25E68BCD4()
{
  unint64_t result = qword_26A701700;
  if (!qword_26A701700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A701700);
  }
  return result;
}

ValueMetadata *type metadata accessor for Blob()
{
  return &type metadata for Blob;
}

uint64_t ExpressionType.init(literal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 40))(a1, a2, MEMORY[0x263F8EE78], a3, a4);
}

Swift::String __swiftcall Expressible.asSQL()()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 8))(&v9);
  uint64_t v1 = v11;
  uint64_t v2 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v2 = v9 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_25E6C25D0();
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
    uint64_t v4 = (void *)0xE000000000000000;
    goto LABEL_16;
  }
  uint64_t v5 = v3;
  unint64_t v6 = v4;
  unint64_t v7 = 0;
  while (1)
  {
    if (v5 != 63 || v6 != (void *)0xE100000000000000)
    {
      uint64_t v3 = sub_25E6C2910();
      if ((v3 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        goto LABEL_6;
      }
    }
    if ((v7 & 0x8000000000000000) != 0) {
      break;
    }
    if (v7 >= *(void *)(v1 + 16)) {
      goto LABEL_15;
    }
    sub_25E687500(v1 + 32 + 40 * v7++);
LABEL_6:
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_25E6C25D0();
    uint64_t v5 = v3;
    unint64_t v6 = v4;
    if (!v4) {
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

uint64_t ExpressionType.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
  uint64_t v12 = v11;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a3, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 40))(v10, v12, v13, a2, a4);
  size_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v14(a1, a3);
}

uint64_t ExpressionType.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, unint64_t, void, uint64_t, uint64_t))(a4 + 40))(0, 0xE000000000000000, MEMORY[0x263F8EE78], a3, a4);
}

uint64_t Expression.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_25E68C13C@<X0>(void *a1@<X8>)
{
  return sub_25E68C32C(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_25E68C144@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25E6C23B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8D310];
  *(_OWORD *)(v8 + 16) = xmmword_25E6C3230;
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = &protocol witness table for String;
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v10 = (id)qword_26B38E0C8;
  uint64_t v11 = (void *)sub_25E6C2390();
  id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

  uint64_t v13 = sub_25E6C24E0();
  uint64_t v15 = v14;

  *(void *)(v8 + 32) = v13;
  *(void *)(v8 + 40) = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = 63;
  a1[1] = 0xE100000000000000;
  a1[2] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68C32C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E6C3230;
  unint64_t v7 = (void *)(v6 + 32);
  *(void *)(v6 + 56) = &type metadata for Blob;
  *(void *)(v6 + 64) = &protocol witness table for Blob;
  uint64_t v8 = v6;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_25E688C9C(a1, a2);
      sub_25E688C9C(a1, a2);
      sub_25E6887C8((int)a1, a1, a2, v7);
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      sub_25E688C9C(a1, a2);
      sub_25E688C9C(a1, a2);
      swift_retain();
      swift_retain();
      sub_25E6887C8(v10, a1, a2, v7);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      sub_25E688CF4(a1, a2);
      sub_25E688CF4(a1, a2);
      void *v7 = MEMORY[0x263F8EE78];
      break;
    default:
      uint64_t v12 = a1;
      __int16 v13 = a2;
      char v14 = BYTE2(a2);
      char v15 = BYTE3(a2);
      char v16 = BYTE4(a2);
      char v17 = BYTE5(a2);
      uint64_t v9 = sub_25E6888C4(&v12, BYTE6(a2));
      sub_25E688CF4(a1, a2);
      sub_25E688CF4(a1, a2);
      void *v7 = v9;
      break;
  }
  sub_25E688CF4(a1, a2);
  *a3 = 63;
  a3[1] = 0xE100000000000000;
  a3[2] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t Value.expression.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Expression();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  uint64_t WitnessTable = swift_getWitnessTable();
  ExpressionType<>.init(value:)((uint64_t)v9, v10, WitnessTable, a2);
  v17[0] = v17[3];
  v17[1] = v17[4];
  v17[2] = v17[5];
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(WitnessTable + 24))(v10, WitnessTable);
  uint64_t v14 = v13;
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(WitnessTable + 32))(v10, WitnessTable);
  *a3 = v12;
  a3[1] = v14;
  a3[2] = v15;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68C738@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_25E6C3230;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 64) = &protocol witness table for String;
  *(void *)(v7 + 32) = _s10Foundation4UUIDV11SwiftSQLiteE13datatypeValueSSvg_0();
  *(void *)(v7 + 40) = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v7;
  return swift_bridgeObjectRelease();
}

uint64_t ExpressionType<>.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v23 = a3;
  v21[1] = a5;
  uint64_t v22 = a2;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v21[0] = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v21 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_25E6C3230;
  char v16 = (uint64_t *)(v15 + 32);
  char v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v24 = a1;
  v17(v11, a1, v8);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(v15 + 64) = 0;
    *(_OWORD *)char v16 = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 56))(AssociatedTypeWitness, a4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, AssociatedTypeWitness);
    *(void *)(v15 + 56) = v12;
    *(void *)(v15 + 64) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
    (*(void (**)(uint64_t *, char *, uint64_t))(v21[0] + 32))(boxed_opaque_existential_1, v14, v12);
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 40))(63, 0xE100000000000000, v15, v22);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v24, v8);
}

uint64_t Expression.template.getter()
{
  uint64_t v0 = sub_25E68D9E0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Expression.template.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Expression.template.modify())()
{
  return nullsub_1;
}

uint64_t Expression.bindings.getter()
{
  sub_25E68D9E8();
  return swift_bridgeObjectRetain();
}

uint64_t Expression.bindings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Expression.bindings.modify())()
{
  return nullsub_1;
}

uint64_t sub_25E68CCA8()
{
  uint64_t v0 = sub_25E68D9E0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_25E68CCE0()
{
  sub_25E68D9E8();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E68CD0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return ExpressionType.expression.getter(a1, WitnessTable, a2);
}

uint64_t ExpressionType.expression.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void))(a2 + 24))();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = result;
  return result;
}

uint64_t ExpressionType.asc.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  *(void *)(inited + 56) = a1;
  *(void *)(inited + 64) = *(void *)(a2 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = 4412225;
  *(void *)(inited + 80) = 0xE300000000000000;
  *(void *)(inited + 88) = MEMORY[0x263F8EE78];
  *(void *)(inited + 96) = v9;
  sub_25E686E60(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t ExpressionType.desc.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  *(void *)(inited + 56) = a1;
  *(void *)(inited + 64) = *(void *)(a2 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = 1129530692;
  *(void *)(inited + 80) = 0xE400000000000000;
  *(void *)(inited + 88) = MEMORY[0x263F8EE78];
  *(void *)(inited + 96) = v9;
  sub_25E686E60(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t ExpressionType<>.init(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_25E6C3230;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a4 + 56);
  swift_getAssociatedTypeWitness();
  *(void *)(v8 + 56) = swift_getAssociatedTypeWitness();
  *(void *)(v8 + 64) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v8 + 32));
  uint64_t v10 = swift_checkMetadataState();
  v9(v10, a4);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(63, 0xE100000000000000, v8, a2, a3);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(a1, v10);
}

uint64_t static ExpressionType<>.null.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_25E6C2790();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))((char *)&v13 - v10, 1, 1, AssociatedTypeWitness);
  return ExpressionType<>.init(value:)((uint64_t)v11, a1, a2, a3, a4);
}

uint64_t sub_25E68D2D0()
{
  sub_25E681960(0, 0xE000000000000000, 0x4449574F52, 0xE500000000000000, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25E6C24A0();
  qword_26A701728 = 0;
  unk_26A701730 = 0xE000000000000000;
  qword_26A701738 = MEMORY[0x263F8EE78];
  return result;
}

uint64_t rowid.getter@<X0>(void *a1@<X8>)
{
  if (qword_26A7016A0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_26A701730;
  uint64_t v3 = qword_26A701738;
  *a1 = qword_26A701728;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t cast<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  *a4 = 0x282054534143;
  a4[1] = 0xE600000000000000;
  a4[2] = v7;
  return swift_bridgeObjectRetain();
}

{
  uint64_t v7;
  uint64_t vars8;

  uint64_t v7 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  sub_25E6C2790();
  *a4 = 0x282054534143;
  a4[1] = 0xE600000000000000;
  a4[2] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E68D634@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E6C3230;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = &protocol witness table for Double;
  *(void *)(v6 + 32) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68D6C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E6C3230;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = &protocol witness table for Int64;
  *(void *)(v6 + 32) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68D74C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_25E6C3230;
  *(void *)(v7 + 56) = a1;
  *(void *)(v7 + 64) = &protocol witness table for String;
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68D7DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E6C3230;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = &protocol witness table for Blob;
  *(void *)(v6 + 32) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68D86C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x263F8E5C0];
  *(_OWORD *)(v4 + 16) = xmmword_25E6C3230;
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = &protocol witness table for Int64;
  *(void *)(v4 + 32) = v3;
  *a1 = 63;
  a1[1] = 0xE100000000000000;
  a1[2] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68D8F0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x263F8E5C0];
  *(_OWORD *)(v4 + 16) = xmmword_25E6C3230;
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = &protocol witness table for Int64;
  *(void *)(v4 + 32) = v3;
  *a1 = 63;
  a1[1] = 0xE100000000000000;
  a1[2] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68D974@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return ExpressionType.expression.getter(a1, (uint64_t)&protocol witness table for Select<A>, a2);
}

uint64_t sub_25E68D984@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Expression()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E68D9E0()
{
  return *(void *)v0;
}

uint64_t sub_25E68D9E8()
{
  return *(void *)(v0 + 16);
}

uint64_t dispatch thunk of ExpressionType.template.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ExpressionType.bindings.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ExpressionType.init(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_25E68DA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t dispatch thunk of Expressible.expression.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25E68DA78@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t (*Connection.createFunction<A>(_:deterministic:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))()
{
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a6;
  void v14[3] = a7;
  v14[4] = a4;
  void v14[5] = a5;
  swift_retain();
  uint64_t v15 = sub_25E68DE90(a1, a2, 0, a3, (uint64_t)sub_25E68DE68, (uint64_t)v14, a6, a7);
  uint64_t v17 = v16;
  uint64_t result = (uint64_t (*)())swift_release();
  if (!v20)
  {
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a6;
    void v19[3] = a7;
    v19[4] = v15;
    uint64_t v19[5] = v17;
    return sub_25E68DFA0;
  }
  return result;
}

{
  void *v14;
  uint64_t (*v15)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v16;
  uint64_t v17;
  uint64_t (*result)();
  void *v19;
  uint64_t v20;

  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a6;
  void v14[3] = a7;
  v14[4] = a4;
  void v14[5] = a5;
  swift_retain();
  uint64_t v15 = sub_25E68E0E0(a1, a2, 0, a3, (uint64_t)sub_25E690D7C, (uint64_t)v14, a6, a7);
  uint64_t v17 = v16;
  uint64_t result = (uint64_t (*)())swift_release();
  if (!v20)
  {
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a6;
    void v19[3] = a7;
    v19[4] = v15;
    uint64_t v19[5] = v17;
    return sub_25E690D78;
  }
  return result;
}

uint64_t sub_25E68DE30()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25E68DE68()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t (*sub_25E68DE90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a7;
  void v16[3] = a8;
  v16[4] = a5;
  uint64_t v16[5] = a6;
  swift_retain();
  Connection.createFunction(_:argumentCount:deterministic:_:)(a1, a2, a3, 0, a4, (uint64_t)sub_25E690D60, (uint64_t)v16);
  swift_release();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a7;
  void v17[3] = a8;
  v17[4] = a1;
  v17[5] = a2;
  swift_bridgeObjectRetain();
  return sub_25E690D6C;
}

uint64_t sub_25E68DFA0()
{
  return (*(uint64_t (**)(void))(v0 + 32))(MEMORY[0x263F8EE78]);
}

uint64_t (*sub_25E68E0E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a7;
  void v16[3] = a8;
  v16[4] = a5;
  uint64_t v16[5] = a6;
  swift_retain();
  Connection.createFunction(_:argumentCount:deterministic:_:)(a1, a2, a3, 0, a4, (uint64_t)sub_25E690BF4, (uint64_t)v16);
  swift_release();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a7;
  void v17[3] = a8;
  v17[4] = a1;
  v17[5] = a2;
  swift_bridgeObjectRetain();
  return sub_25E690D54;
}

uint64_t (*Connection.createFunction<A, B>(_:deterministic:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(uint64_t a1)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68DE90(a1, a2, 1, a3, (uint64_t)sub_25E68E360, (uint64_t)v16, a6, a8);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t))swift_release();
  if (!v23)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = v17;
    v21[7] = v19;
    return sub_25E68E364;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t);
  void *v21;
  uint64_t v23;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68DE90(a1, a2, 1, a3, (uint64_t)sub_25E68E4B4, (uint64_t)v16, a6, a8);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t))swift_release();
  if (!v23)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = v17;
    v21[7] = v19;
    return sub_25E68E518;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t);
  void *v21;
  uint64_t v23;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68E0E0(a1, a2, 1, a3, (uint64_t)sub_25E68E360, (uint64_t)v16, a6, a8);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t))swift_release();
  if (!v23)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = v17;
    v21[7] = v19;
    return sub_25E68E364;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t);
  void *v21;
  uint64_t v23;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68E0E0(a1, a2, 1, a3, (uint64_t)sub_25E68EB6C, (uint64_t)v16, a6, a8);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t))swift_release();
  if (!v23)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = v17;
    v21[7] = v19;
    return sub_25E68E518;
  }
  return result;
}

uint64_t sub_25E68E328()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25E68E364(uint64_t a1)
{
  return sub_25E68E530(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_25E68E7AC);
}

uint64_t sub_25E68E4B4(uint64_t a1)
{
  return sub_25E68E4E0(a1, (uint64_t)sub_25E690E20, (void (*)(char *, char *))sub_25E690D98);
}

uint64_t sub_25E68E4E0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *))
{
  return sub_25E68E9AC(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2, a3);
}

uint64_t sub_25E68E518(uint64_t a1)
{
  return sub_25E68E530(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_25E68EB98);
}

uint64_t sub_25E68E530(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_25E68E694(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t result = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(result + 16))
  {
    sub_25E6878CC(result + 32, a5, v9);
    a2(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E68E788(uint64_t a1)
{
  return sub_25E68E694(a1, *(void (**)(char *))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25E68E7AC(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E6C3230;
  *(void *)(v6 + 56) = type metadata accessor for Expression();
  *(void *)(v6 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  *(void *)(v6 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68E9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *, char *))
{
  uint64_t v24 = a6;
  uint64_t v25 = a8;
  uint64_t v15 = sub_25E6C2790();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v23 - v18;
  if (*(void *)(a1 + 16))
  {
    v23[1] = v23;
    _OWORD v23[2] = a3;
    v23[0] = a2;
    uint64_t v20 = MEMORY[0x270FA5388](result);
    v23[-2] = a5;
    v23[-1] = a7;
    MEMORY[0x270FA5388](v20);
    v23[-6] = a4;
    v23[-5] = a5;
    v23[-4] = v24;
    v23[-3] = a7;
    v23[-2] = v25;
    v23[-1] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
    sub_25E68DA78(a9, (uint64_t)&v23[-8], MEMORY[0x263F8E628], a5, v22, (uint64_t)v19);
    ((void (*)(char *))v23[0])(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E68EB6C(uint64_t a1)
{
  return sub_25E68E4E0(a1, (uint64_t)sub_25E690E20, (void (*)(char *, char *))sub_25E690780);
}

uint64_t sub_25E68EB98(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E6C3230;
  sub_25E6C2790();
  *(void *)(v6 + 56) = type metadata accessor for Expression();
  *(void *)(v6 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  *(void *)(v6 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v6);
  return swift_bridgeObjectRelease();
}

uint64_t (*Connection.createFunction<A, B, C>(_:deterministic:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68DE90(a1, a2, 2, a3, (uint64_t)sub_25E68EDE4, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68EDE8;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68DE90(a1, a2, 2, a3, (uint64_t)sub_25E68EF40, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68EFC8;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68DE90(a1, a2, 2, a3, (uint64_t)sub_25E68F15C, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68F19C;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68E0E0(a1, a2, 2, a3, (uint64_t)sub_25E68EDE4, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68EDE8;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68DE90(a1, a2, 2, a3, (uint64_t)sub_25E68F734, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68F7D4;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68E0E0(a1, a2, 2, a3, (uint64_t)sub_25E68EF40, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68EFC8;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68E0E0(a1, a2, 2, a3, (uint64_t)sub_25E68F15C, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68F19C;
  }
  return result;
}

{
  void *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, void *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*result)(uint64_t, uint64_t);
  void *v21;
  uint64_t v25;

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  void v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  uint64_t v17 = sub_25E68E0E0(a1, a2, 2, a3, (uint64_t)sub_25E6905D0, (uint64_t)v16, a6, a9);
  uint64_t v19 = v18;
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t))swift_release();
  if (!v25)
  {
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    void v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    v21[8] = v17;
    v21[9] = v19;
    return sub_25E68F7D4;
  }
  return result;
}

uint64_t sub_25E68EDAC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_25E68EDE8(uint64_t a1, uint64_t a2)
{
  return sub_25E68EFE0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_25E68F4E8);
}

uint64_t sub_25E68EF40(uint64_t a1)
{
  return sub_25E68EF80(a1, (uint64_t)sub_25E690E20, (uint64_t)sub_25E690D80, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_25E68F92C);
}

uint64_t sub_25E68EF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))
{
  return a4(a1, v4[8], v4[9], v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], a2, a3);
}

uint64_t sub_25E68EFC8(uint64_t a1, uint64_t a2)
{
  return sub_25E68EFE0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_25E68FBA8);
}

uint64_t sub_25E68EFE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_25E68F15C(uint64_t a1)
{
  return sub_25E68EF80(a1, (uint64_t)sub_25E690E20, (uint64_t)sub_25E690D80, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_25E68FE00);
}

uint64_t sub_25E68F19C(uint64_t a1, uint64_t a2)
{
  return sub_25E68EFE0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_25E690064);
}

uint64_t sub_25E68F2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = *(void *)(a6 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(result + 16);
  if (v23)
  {
    uint64_t v25 = v19;
    uint64_t result = sub_25E6878CC(a1 + 32, a5, v20);
    if (v23 != 1)
    {
      sub_25E6878CC(a1 + 72, a6, a9);
      v25(v22, v15);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a6);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, a5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E68F4B4(uint64_t a1)
{
  return sub_25E68F2F4(a1, v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_25E68F4E8(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E6C3210;
  *(void *)(v9 + 56) = type metadata accessor for Expression();
  *(void *)(v9 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v5;
  *(void *)(v9 + 96) = type metadata accessor for Expression();
  *(void *)(v9 + 104) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 72) = v6;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68F734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E68F788(a1, (uint64_t)sub_25E690E20, (void (*)(char *, char *))sub_25E690D80, (uint64_t)sub_25E690E20, (uint64_t)sub_25E690D80, a2);
}

uint64_t sub_25E68F788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_25E6902BC(a1, *(void (**)(char *, uint64_t))(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), a6, *(void *)(v6 + 56), a2, a3, a4, a5);
}

uint64_t sub_25E68F7D4(uint64_t a1, uint64_t a2)
{
  return sub_25E68EFE0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_25E690624);
}

uint64_t sub_25E68F92C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(char *, char *))
{
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v17 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25E6C2790();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v33 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25)
  {
    uint64_t v34 = result;
    uint64_t v35 = v17;
    uint64_t v36 = a3;
    uint64_t v37 = a2;
    uint64_t v39 = &v33;
    unint64_t v38 = a12;
    uint64_t v26 = MEMORY[0x270FA5388](result);
    uint64_t v27 = v43;
    *(&v33 - 2) = a5;
    *(&v33 - 1) = v27;
    MEMORY[0x270FA5388](v26);
    *(&v33 - 8) = v41;
    *(&v33 - 7) = a5;
    uint64_t v28 = v42;
    *(&v33 - 6) = a6;
    *(&v33 - 5) = v28;
    *(&v33 - 4) = v29;
    *(&v33 - 3) = a10;
    *(&v33 - 2) = v30;
    *(&v33 - 1) = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
    uint64_t result = sub_25E68DA78(v38, (uint64_t)(&v33 - 10), MEMORY[0x263F8E628], a5, v32, (uint64_t)v24);
    if (v25 != 1)
    {
      sub_25E6878CC(a1 + 72, a6, a10);
      v37(v24, v19);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v19, a6);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v34);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E68FBA8(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E6C3210;
  sub_25E6C2790();
  *(void *)(v9 + 56) = type metadata accessor for Expression();
  *(void *)(v9 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v5;
  *(void *)(v9 + 96) = type metadata accessor for Expression();
  *(void *)(v9 + 104) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 72) = v6;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E68FE00@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(char *, char *))
{
  uint64_t v37 = a4;
  uint64_t v38 = a7;
  uint64_t v39 = a9;
  uint64_t v40 = a3;
  uint64_t v17 = sub_25E6C2790();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v22 = *(void *)(a5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v19);
  uint64_t v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    uint64_t v36 = result;
    uint64_t result = sub_25E6878CC(a1 + 32, a5, a8);
    if (v26 != 1)
    {
      uint64_t v34 = (uint64_t)&v34;
      uint64_t v35 = a2;
      uint64_t v27 = MEMORY[0x270FA5388](result);
      *(&v34 - 2) = a6;
      *(&v34 - 1) = v28;
      MEMORY[0x270FA5388](v27);
      *(&v34 - 8) = v37;
      *(&v34 - 7) = a5;
      uint64_t v29 = v38;
      *(&v34 - 6) = a6;
      *(&v34 - 5) = v29;
      *(&v34 - 4) = a8;
      *(&v34 - 3) = v30;
      *(&v34 - 2) = v31;
      *(&v34 - 1) = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
      sub_25E68DA78(a12, (uint64_t)(&v34 - 10), MEMORY[0x263F8E628], a6, v33, (uint64_t)v21);
      v35(v25, v21);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, a5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E690064(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E6C3210;
  *(void *)(v9 + 56) = type metadata accessor for Expression();
  *(void *)(v9 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v5;
  sub_25E6C2790();
  *(void *)(v9 + 96) = type metadata accessor for Expression();
  *(void *)(v9 + 104) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 72) = v6;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6902BC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(char *, char *), uint64_t a13, uint64_t a14)
{
  uint64_t v54 = a7;
  uint64_t v55 = a8;
  uint64_t v53 = a4;
  uint64_t v20 = sub_25E6C2790();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v52 = (uint64_t)&v43 - v22;
  uint64_t v23 = sub_25E6C2790();
  uint64_t result = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v43 - v26;
  uint64_t v28 = *(void *)(a1 + 16);
  if (v28)
  {
    uint64_t v44 = v25;
    uint64_t v45 = result;
    uint64_t v46 = v21;
    uint64_t v47 = a9;
    uint64_t v48 = v20;
    uint64_t v49 = a3;
    long long v50 = a2;
    long long v51 = &v43;
    uint64_t v29 = MEMORY[0x270FA5388](result);
    uint64_t v30 = v55;
    *(&v43 - 2) = a5;
    *(&v43 - 1) = v30;
    MEMORY[0x270FA5388](v29);
    *(&v43 - 8) = v53;
    *(&v43 - 7) = a5;
    uint64_t v31 = v54;
    *(&v43 - 6) = a6;
    *(&v43 - 5) = v31;
    *(&v43 - 4) = v32;
    *(&v43 - 3) = a10;
    *(&v43 - 2) = v33;
    *(&v43 - 1) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
    uint64_t result = sub_25E68DA78(a12, (uint64_t)(&v43 - 10), MEMORY[0x263F8E628], a5, v35, (uint64_t)v27);
    if (v28 != 1)
    {
      uint64_t v36 = MEMORY[0x270FA5388](a14);
      *(&v43 - 2) = a6;
      *(&v43 - 1) = a10;
      uint64_t v37 = (void (*)(char *, char *))MEMORY[0x270FA5388](v36);
      *(&v43 - 8) = v53;
      *(&v43 - 7) = a5;
      uint64_t v38 = v54;
      *(&v43 - 6) = a6;
      *(&v43 - 5) = v38;
      *(&v43 - 4) = v55;
      *(&v43 - 3) = a10;
      *(&v43 - 2) = v39;
      *(&v43 - 1) = v40;
      uint64_t v41 = v52;
      sub_25E68DA78(v37, (uint64_t)(&v43 - 10), MEMORY[0x263F8E628], a6, v42, v52);
      v50(v27, v41);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v48);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v27, v45);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E6905D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E68F788(a1, (uint64_t)sub_25E690748, (void (*)(char *, char *))sub_25E690D80, (uint64_t)sub_25E690E20, (uint64_t)sub_25E690750, a2);
}

uint64_t sub_25E690624(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E6C3210;
  sub_25E6C2790();
  *(void *)(v9 + 56) = type metadata accessor for Expression();
  *(void *)(v9 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v5;
  sub_25E6C2790();
  *(void *)(v9 + 96) = type metadata accessor for Expression();
  *(void *)(v9 + 104) = &protocol witness table for Expression<A>;
  *(void *)(v9 + 72) = v6;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E690748(uint64_t a1)
{
  return sub_25E687708(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25E690750()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_25E690780()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_25E6907B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  a4[3] = swift_getAssociatedTypeWitness();
  a4[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(a4);
  v12(a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a2);
}

uint64_t sub_25E6908FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_25E681960(0, 0xE000000000000000, a2, a3, 34, 0xE100000000000000);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  sub_25E686E60(a1, v7);
  sub_25E68711C(v7, 0, 0xE000000000000000, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_25E690A0C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_25E6C2790();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - v12;
  a2(a1);
  uint64_t v14 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(void *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(a4 + 56);
    *(void *)(a5 + 24) = swift_getAssociatedTypeWitness();
    *(void *)(a5 + 32) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
    v16(a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v13, a3);
  }
  return result;
}

uint64_t sub_25E690BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E690A0C(a1, *(void (**)(uint64_t))(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25E690C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_25E681960(0, 0xE000000000000000, a2, a3, 34, 0xE100000000000000);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  sub_25E686E60(a1, v7);
  sub_25E6C2790();
  sub_25E68711C(v7, 0, 0xE000000000000000, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_25E690D1C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25E690D54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25E690C00(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_25E690D60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E6907B0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25E690D6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25E6908FC(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_25E690D80()
{
  return sub_25E690750();
}

uint64_t sub_25E690D98()
{
  return sub_25E690780();
}

unint64_t QueryError.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 24))
  {
    case 1:
      sub_25E6C27D0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000010;
      sub_25E6C25A0();
      sub_25E6C25A0();
      MEMORY[0x2611DFFD0](v1, MEMORY[0x263F8D310]);
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      return v3;
    case 2:
      sub_25E6C27D0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000012;
      sub_25E6C25A0();
      sub_25E6C25A0();
      MEMORY[0x2611DFFD0](v1, MEMORY[0x263F8D310]);
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 3:
      sub_25E6C27D0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000022;
      sub_25E6C25A0();
      goto LABEL_5;
    default:
      sub_25E6C27D0();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0x2068637573206F4ELL;
LABEL_5:
      sub_25E6C25A0();
      return v3;
  }
}

uint64_t sub_25E691088(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result = a2;
  if (a4 - 1 < 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (!a4 || a4 == 3)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for QueryError(uint64_t a1)
{
  return sub_25E691108(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_25E691108(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result = a2;
  if (a4 - 1 < 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a4 || a4 == 3)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_25E691088(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_25E691088(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_25E691108(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_25E691108(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25E691338(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_25E691340(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

uint64_t static DateFunctions.date(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_25E691374(1702125924, 0xE400000000000000, a1, a2, a3, a4);
}

uint64_t sub_25E691374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = *(void *)(a5 + 16);
  if (v11)
  {
    sub_25E685A74((void *)0x3F, 0xE100000000000000, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
    sub_25E682618();
    sub_25E6C24B0();
    swift_bridgeObjectRelease();
    uint64_t v20 = a2;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v12 = a1;
    uint64_t v13 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E220);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3230;
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    uint64_t v18 = inited;
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_25E686834(v15);
    uint64_t v16 = sub_25E6917B4(v18);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    uint64_t v12 = a1;
    uint64_t v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_25E6C3230;
    *(void *)(v16 + 56) = MEMORY[0x263F8D310];
    *(void *)(v16 + 64) = &protocol witness table for String;
    *(void *)(v16 + 32) = a3;
    *(void *)(v16 + 40) = a4;
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a6 = v12;
  a6[1] = v13;
  a6[2] = v16;
  return result;
}

uint64_t static DateFunctions.time(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_25E691374(1701669236, 0xE400000000000000, a1, a2, a3, a4);
}

uint64_t static DateFunctions.datetime(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_25E691374(0x656D697465746164, 0xE800000000000000, a1, a2, a3, a4);
}

uint64_t static DateFunctions.julianday(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_25E691374(0x61646E61696C756ALL, 0xE900000000000079, a1, a2, a3, a4);
}

uint64_t static DateFunctions.strftime(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = *(void *)(a5 + 16);
  if (v11)
  {
    sub_25E685A74((void *)0x3F, 0xE100000000000000, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
    sub_25E682618();
    sub_25E6C24B0();
    swift_bridgeObjectRelease();
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    unint64_t v12 = 0xEF202C3F202C3F28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E220);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(void *)(inited + 48) = a3;
    *(void *)(inited + 56) = a4;
    uint64_t v18 = inited;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_25E686834(v14);
    uint64_t v15 = sub_25E6917B4(v18);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_25E6C3210;
    uint64_t v17 = MEMORY[0x263F8D310];
    *(void *)(v15 + 56) = MEMORY[0x263F8D310];
    *(void *)(v15 + 64) = &protocol witness table for String;
    *(void *)(v15 + 32) = a1;
    *(void *)(v15 + 40) = a2;
    *(void *)(v15 + 96) = v17;
    *(void *)(v15 + 104) = &protocol witness table for String;
    *(void *)(v15 + 72) = a3;
    *(void *)(v15 + 80) = a4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v12 = 0xEE00293F202C3F28;
  }
  *a6 = 0x656D697466727473;
  a6[1] = v12;
  a6[2] = v15;
  return result;
}

uint64_t sub_25E6917B4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_25E68B64C(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B64C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_25E68B64C((void *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_25E691CAC((uint64_t)v8, v2 + 40 * v6 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E6918E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_25E68B61C(0, v1, 0);
    uint64_t v2 = v15;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v15 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_25E68B61C((void *)(v9 > 1), v8 + 1, 1);
        uint64_t v2 = v15;
      }
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
      uint64_t v14 = &protocol witness table for Expression<A>;
      *(void *)&long long v11 = v6;
      *((void *)&v11 + 1) = v5;
      uint64_t v12 = v7;
      *(void *)(v2 + 16) = v8 + 1;
      sub_25E681E94(&v11, v2 + 40 * v8 + 32);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DateFunctions.deinit()
{
  return v0;
}

uint64_t DateFunctions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t Date.date.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691A88(1702125924, 0xE400000000000000, a1);
}

uint64_t type metadata accessor for DateFunctions()
{
  return self;
}

uint64_t Date.time.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691A88(1701669236, 0xE400000000000000, a1);
}

uint64_t Date.datetime.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691A88(0x656D697465746164, 0xE800000000000000, a1);
}

uint64_t Date.julianday.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691A88(0x61646E61696C756ALL, 0xE900000000000079, a1);
}

uint64_t sub_25E691A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for DateFunctions();
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v6 = (id)qword_26B38E0C8;
  uint64_t v7 = (void *)sub_25E6C2390();
  id v8 = objc_msgSend(v6, sel_stringFromDate_, v7);

  uint64_t v9 = sub_25E6C24E0();
  uint64_t v11 = v10;

  sub_25E691374(a1, a2, v9, v11, MEMORY[0x263F8EE78], a3);
  return swift_bridgeObjectRelease();
}

uint64_t Expression<A>.date.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691C00(0x2865746164, 0xE500000000000000, a1);
}

uint64_t Expression<A>.time.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691C00(0x28656D6974, 0xE500000000000000, a1);
}

uint64_t Expression<A>.datetime.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691C00(0x656D697465746164, 0xE900000000000028, a1);
}

uint64_t Expression<A>.julianday.getter@<X0>(void *a1@<X8>)
{
  return sub_25E691C00(0x61646E61696C756ALL, 0xEA00000000002879, a1);
}

uint64_t sub_25E691C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for DateFunctions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DateFunctions);
}

uint64_t sub_25E691CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ExpressionType<>.distinct.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  (*(void (**)(void))(a2 + 24))();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  swift_getAssociatedTypeWitness();
  return Expression.init(_:_:)(0x54434E4954534944, 0xE900000000000020, v6, a3);
}

{
  uint64_t v6;
  uint64_t vars8;

  (*(void (**)(void))(a2 + 24))();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  swift_getAssociatedTypeWitness();
  return Expression.init(_:_:)(0x54434E4954534944, 0xE900000000000020, v6, a3);
}

uint64_t ExpressionType<>.count.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  v7[3] = a1;
  v7[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v2, a1);
  sub_25E680770(v7, 0x746E756F63, 0xE500000000000000);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t ExpressionType<>.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E692410(a1, a2, a3, a4, 0x746E756F63, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.max.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E6C2790();
  sub_25E68711C(v9, 7889261, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E68711C(v9, 7889261, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.min.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E6C2790();
  sub_25E68711C(v9, 7235949, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E68711C(v9, 7235949, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.average.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E692410(a1, a2, a3, a4, 6780513, 0xE300000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.sum.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E6C2790();
  sub_25E68711C(v9, 7173491, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  uint64_t v6 = *(void *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_25E68711C(v9, 7173491, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.total.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E692410(a1, a2, a3, a4, 0x6C61746F74, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t sub_25E692410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v15[3] = a1;
  uint64_t v15[4] = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v7, a1);
  a7(v15, a5, a6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t ExpressionType<>.average.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6925C8(a1, a2, a3, a4, a5, 6780513, 0xE300000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t ExpressionType<>.total.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6925C8(a1, a2, a3, a4, a5, 0x6C61746F74, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_25E680770);
}

uint64_t sub_25E6925C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v13 = *(void *)(a2 + 8);
  void v16[3] = a1;
  v16[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v8, a1);
  a8(v16, a6, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t count(_:)(void (*a1)(void *__return_ptr, void *, void *))
{
  memset(v4, 0, sizeof(v4));
  memset(v3, 0, sizeof(v3));
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  v5[4] = &protocol witness table for Expression<A>;
  a1(v5, v4, v3);
  sub_25E680770(v5, 0x746E756F63, 0xE500000000000000);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

sqlite3 *sub_25E692708(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = 0;
  uint64_t v3 = (sqlite3 **)(a1 + 16);
  uint64_t result = (sqlite3 *)swift_beginAccess();
  uint64_t v5 = *(sqlite3 **)(a1 + 16);
  if (!v5)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = sub_25E6C2550();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unsigned int v7 = sqlite3_prepare_v2(v5, (const char *)(v6 + 32), -1, (sqlite3_stmt **)(v1 + 16), 0);
  swift_endAccess();
  swift_release();
  uint64_t v8 = qword_26B38E100;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  if (sub_25E6950B4(v7, (uint64_t)off_26B38E0F8))
  {
    swift_release_n();
    return (sqlite3 *)v1;
  }
  uint64_t result = *v3;
  if (!*v3) {
    goto LABEL_11;
  }
  uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
  if (result)
  {
    uint64_t v9 = sub_25E6C25B0();
    uint64_t v11 = v10;
    swift_release();
    sub_25E69645C();
    swift_allocError();
    *(void *)uint64_t v12 = v9;
    *(void *)(v12 + 8) = v11;
    *(_DWORD *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    return (sqlite3 *)v1;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t Statement.deinit()
{
  swift_beginAccess();
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Statement.__deallocating_deinit()
{
  swift_beginAccess();
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Statement.columnCount.getter()
{
  if (*(unsigned char *)(v0 + 40) != 1) {
    return *(void *)(v0 + 32);
  }
  swift_beginAccess();
  uint64_t result = sqlite3_column_count(*(sqlite3_stmt **)(v0 + 16));
  *(void *)(v0 + 32) = (int)result;
  *(unsigned char *)(v0 + 40) = 0;
  return result;
}

uint64_t Statement.columnCount.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 40) = 0;
  return result;
}

void *(*Statement.columnCount.modify(uint64_t *a1))(void *result)
{
  a1[1] = v1;
  *a1 = Statement.columnCount.getter();
  return sub_25E692A1C;
}

void *sub_25E692A1C(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 32) = *result;
  *(unsigned char *)(v1 + 40) = 0;
  return result;
}

uint64_t Statement.columnNames.getter()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
LABEL_7:
    swift_bridgeObjectRetain();
    return v1;
  }
  uint64_t result = Statement.columnCount.getter();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((result & 0x80000000) == 0)
  {
    uint64_t v3 = result << 32;
    swift_retain();
    uint64_t v1 = sub_25E696070(v3, v0);
    swift_release();
    *(void *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t Statement.columnNames.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Statement.columnNames.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = Statement.columnNames.getter();
  return sub_25E692B3C;
}

uint64_t sub_25E692B3C(void *a1)
{
  *(void *)(a1[1] + 48) = *a1;
  return swift_bridgeObjectRelease();
}

void Statement.row.getter(void *a1@<X8>)
{
  uint64_t v3 = v1[7];
  if (v3)
  {
    uint64_t v4 = v1[8];
LABEL_5:
    *a1 = v3;
    a1[1] = v4;
    return;
  }
  swift_beginAccess();
  uint64_t v3 = v1[2];
  if (v3)
  {
    swift_retain();
    uint64_t v4 = Statement.columnCount.getter();
    swift_release();
    v1[7] = v3;
    v1[8] = v4;
    goto LABEL_5;
  }
  __break(1u);
}

void *Statement.row.setter(void *result)
{
  uint64_t v2 = result[1];
  *(void *)(v1 + 56) = *result;
  *(void *)(v1 + 64) = v2;
  return result;
}

void *(*Statement.row.modify(void *a1))(void *result)
{
  a1[2] = v1;
  Statement.row.getter(a1);
  return sub_25E692C20;
}

void *sub_25E692C20(void *result)
{
  uint64_t v2 = result[1];
  uint64_t v1 = result[2];
  *(void *)(v1 + 56) = *result;
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t Statement.bind(_:)(uint64_t a1)
{
  sub_25E696210(a1);
  return swift_retain();
}

{
  uint64_t vars8;

  sub_25E696210(a1);
  return swift_retain();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  sqlite3_stmt *v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  long long v21;
  _OWORD v22[2];
  uint64_t v23;
  void v24[2];
  uint64_t v25;

  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
  sqlite3_clear_bindings(*(sqlite3_stmt **)(v1 + 16));
  uint64_t v19 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a1 + 64);
  uint64_t v20 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  uint64_t v11 = v10 | (v6 << 6);
LABEL_8:
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = (void *)(*(void *)(a1 + 48) + 16 * v11);
  uint64_t v14 = v13[1];
  *(void *)&uint64_t v21 = *v13;
  *((void *)&v21 + 1) = v14;
  sub_25E687934(v12 + 40 * v11, (uint64_t)v22);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_25E69639C((uint64_t)&v21, (uint64_t)v24, &qword_26A701740);
    if (!v24[1])
    {
      swift_release();
      return swift_retain();
    }
    sub_25E69639C((uint64_t)&v25, (uint64_t)&v21, &qword_26B38E1F8);
    unsigned int v7 = *(sqlite3_stmt **)(v1 + 16);
    uint64_t v8 = sub_25E6C2550();
    uint64_t v9 = sqlite3_bind_parameter_index(v7, (const char *)(v8 + 32));
    swift_release();
    if (v9 < 1) {
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    sub_25E692C80((uint64_t)&v21, v9);
    sub_25E681F7C((uint64_t)&v21, &qword_26B38E1F8);
    if (v5) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 < v20)
    {
      uint64_t v16 = *(void *)(v19 + 8 * v15);
      if (v16) {
        goto LABEL_12;
      }
      uint64_t v17 = v6 + 2;
      ++v6;
      if (v15 + 1 < v20)
      {
        uint64_t v16 = *(void *)(v19 + 8 * v17);
        if (v16) {
          goto LABEL_15;
        }
        uint64_t v6 = v15 + 1;
        if (v15 + 2 < v20)
        {
          uint64_t v16 = *(void *)(v19 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_12;
          }
          uint64_t v17 = v15 + 3;
          uint64_t v6 = v15 + 2;
          if (v15 + 3 < v20)
          {
            uint64_t v16 = *(void *)(v19 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                uint64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_30;
                }
                if (v15 >= v20)
                {
                  uint64_t v6 = v20 - 1;
                  goto LABEL_26;
                }
                uint64_t v16 = *(void *)(v19 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_12;
                }
              }
            }
LABEL_15:
            uint64_t v15 = v17;
LABEL_12:
            uint64_t v5 = (v16 - 1) & v16;
            uint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
            uint64_t v6 = v15;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    uint64_t v5 = 0;
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    uint64_t v21 = 0u;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_25E6C27D0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t result = sub_25E6C2880();
  __break(1u);
  return result;
}

uint64_t sub_25E692C80(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 24))
  {
    swift_beginAccess();
    if (a2 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (a2 <= 0x7FFFFFFF)
    {
      return sqlite3_bind_null(v2[2], a2);
    }
    __break(1u);
    goto LABEL_46;
  }
  sub_25E687934(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      uint64_t v3 = v13;
      swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF)
        {
          unint64_t v4 = *(void *)(v13 + 16);
          if (!(v4 >> 31))
          {
            uint64_t v2 = (sqlite3_stmt **)v2[2];
            if (qword_26B38E0D0 == -1)
            {
LABEL_8:
              sqlite3_bind_blob((sqlite3_stmt *)v2, a2, (const void *)(v3 + 32), v4, (void (__cdecl *)(void *))qword_26B38EA00);
              return swift_bridgeObjectRelease();
            }
LABEL_49:
            swift_once();
            goto LABEL_8;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
  else
  {
    sub_25E681F7C((uint64_t)v15, &qword_26B38E1F8);
  }
  sub_25E687934(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      swift_beginAccess();
      if (a2 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (a2 <= 0x7FFFFFFF)
      {
        return sqlite3_bind_double(v2[2], a2, *(double *)&v13);
      }
      __break(1u);
      goto LABEL_52;
    }
  }
  else
  {
    sub_25E681F7C((uint64_t)v15, &qword_26B38E1F8);
  }
  sub_25E687934(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF) {
          return sqlite3_bind_int64(v2[2], a2, v13);
        }
        goto LABEL_53;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
  }
  else
  {
    sub_25E681F7C((uint64_t)v15, &qword_26B38E1F8);
  }
  sub_25E687934(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF)
        {
          uint64_t v2 = (sqlite3_stmt **)v2[2];
          if (qword_26B38E0D0 == -1)
          {
LABEL_30:
            uint64_t v8 = (void (__cdecl *)(void *))qword_26B38EA00;
            uint64_t v9 = sub_25E6C2550();
            swift_bridgeObjectRelease();
            sqlite3_bind_text((sqlite3_stmt *)v2, a2, (const char *)(v9 + 32), -1, v8);
            return swift_release();
          }
LABEL_56:
          swift_once();
          goto LABEL_30;
        }
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
  }
  else
  {
    sub_25E681F7C((uint64_t)v15, &qword_26B38E1F8);
  }
  sub_25E687934(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      uint64_t v10 = MEMORY[0x263F8E5C0];
      uint64_t v11 = v13;
LABEL_39:
      uint64_t v16 = v10;
      uint64_t v17 = &protocol witness table for Int64;
      v15[0] = v11;
      sub_25E692C80(v15, a2);
      uint64_t v12 = (long long *)v15;
      return sub_25E681F7C((uint64_t)v12, &qword_26B38E1F8);
    }
  }
  else
  {
    sub_25E681F7C((uint64_t)v15, &qword_26B38E1F8);
  }
  sub_25E687934(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      uint64_t v10 = MEMORY[0x263F8E5C0];
      uint64_t v11 = v13;
      goto LABEL_39;
    }
  }
  else
  {
    sub_25E681F7C((uint64_t)v15, &qword_26B38E1F8);
  }
  sub_25E687934(a1, (uint64_t)&v13);
  if (!v14)
  {
    uint64_t v12 = &v13;
    return sub_25E681F7C((uint64_t)v12, &qword_26B38E1F8);
  }
  sub_25E681E94(&v13, (uint64_t)v15);
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 0xE000000000000000;
  sub_25E6C27D0();
  sub_25E6C25A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
  sub_25E6C2870();
  uint64_t result = sub_25E6C2880();
  __break(1u);
  return result;
}

sqlite3 *Statement.run(_:)(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  if (*(void *)(a1 + 16))
  {
    uint64_t v5 = Statement.run(_:)(a1);
    if (!v2) {
      return v5;
    }
    return (sqlite3 *)v4;
  }
  else
  {
    uint64_t v21 = (sqlite3_stmt **)(v1 + 16);
    swift_beginAccess();
    sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
    sub_25E696400();
    uint64_t v6 = *(void *)(v1 + 24);
    while (1)
    {
      while (1)
      {
        if (qword_26B38E1E0 != -1) {
          swift_once();
        }
        sub_25E6C2740();
        uint64_t v7 = sub_25E6A57E4();
        if ((v23 & 1) == 0 && v22 == v7) {
          break;
        }
        id v16 = *(id *)(v6 + 88);
        sub_25E6C2770();

        if (v3) {
          return (sqlite3 *)v4;
        }
        if ((v24 & 1) == 0)
        {
LABEL_26:
          swift_retain();
          return (sqlite3 *)v4;
        }
      }
      unsigned int v8 = sqlite3_step(*v21);
      uint64_t v9 = qword_26B38E100;
      swift_retain();
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v10 = off_26B38E0F8;
      if (!*((void *)off_26B38E0F8 + 2)) {
        break;
      }
      uint64_t v11 = MEMORY[0x2611E0360](*((void *)off_26B38E0F8 + 5), v8, 4);
      uint64_t v12 = -1 << v10[32];
      unint64_t v13 = v11 & ~v12;
      if (((*(void *)&v10[((v13 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v13) & 1) == 0) {
        break;
      }
      uint64_t v14 = *((void *)v10 + 6);
      if (*(_DWORD *)(v14 + 4 * v13) != v8)
      {
        uint64_t v15 = ~v12;
        do
        {
          unint64_t v13 = (v13 + 1) & v15;
          if (((*(void *)&v10[((v13 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v13) & 1) == 0) {
            goto LABEL_22;
          }
        }
        while (*(_DWORD *)(v14 + 4 * v13) != v8);
      }
      swift_release();
      if (v8 != 100) {
        goto LABEL_26;
      }
    }
LABEL_22:
    swift_beginAccess();
    uint64_t result = *(sqlite3 **)(v6 + 16);
    if (result)
    {
      uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
      if (result)
      {
        uint64_t v4 = sub_25E6C25B0();
        uint64_t v19 = v18;
        swift_release();
        sub_25E69645C();
        swift_allocError();
        *(void *)uint64_t v20 = v4;
        *(void *)(v20 + 8) = v19;
        *(_DWORD *)(v20 + 16) = v8;
        *(void *)(v20 + 24) = 0;
        swift_willThrow();
        return (sqlite3 *)v4;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  sqlite3 *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  uint64_t v2 = v1;
  uint64_t v3 = sub_25E696210(a1);
  swift_beginAccess();
  uint64_t v4 = *(sqlite3_stmt **)(v3 + 16);
  swift_retain();
  sqlite3_reset(v4);
  sub_25E696400();
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(void *)(v3 + 24);
      if (qword_26B38E1E0 != -1) {
        swift_once();
      }
      sub_25E6C2740();
      uint64_t v6 = sub_25E6A57E4();
      if ((v22 & 1) == 0 && v21 == v6) {
        break;
      }
      uint64_t v15 = *(id *)(v5 + 88);
      sub_25E6C2770();
      if (v2)
      {
        swift_release();

        return (sqlite3 *)v3;
      }

      if ((v23 & 1) == 0) {
        return (sqlite3 *)v3;
      }
    }
    uint64_t v7 = sqlite3_step(*(sqlite3_stmt **)(v3 + 16));
    unsigned int v8 = qword_26B38E100;
    swift_retain();
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v9 = off_26B38E0F8;
    if (!*((void *)off_26B38E0F8 + 2)) {
      goto LABEL_19;
    }
    uint64_t v10 = MEMORY[0x2611E0360](*((void *)off_26B38E0F8 + 5), v7, 4);
    uint64_t v11 = -1 << v9[32];
    uint64_t v12 = v10 & ~v11;
    if (((*(void *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0) {
      goto LABEL_19;
    }
    unint64_t v13 = *((void *)v9 + 6);
    if (*(_DWORD *)(v13 + 4 * v12) != v7) {
      break;
    }
LABEL_2:
    swift_release();
    if (v7 != 100) {
      return (sqlite3 *)v3;
    }
  }
  uint64_t v14 = ~v11;
  while (1)
  {
    uint64_t v12 = (v12 + 1) & v14;
    if (((*(void *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0) {
      break;
    }
    if (*(_DWORD *)(v13 + 4 * v12) == v7) {
      goto LABEL_2;
    }
  }
LABEL_19:
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v5 + 16);
  if (result)
  {
    uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      uint64_t v17 = sub_25E6C25B0();
      uint64_t v19 = v18;
      swift_release();
      sub_25E69645C();
      swift_allocError();
      *(void *)uint64_t v20 = v17;
      *(void *)(v20 + 8) = v19;
      *(_DWORD *)(v20 + 16) = v7;
      *(void *)(v20 + 24) = 0;
      swift_willThrow();
      swift_release();
      return (sqlite3 *)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  sqlite3 *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  sqlite3_stmt **v21;
  uint64_t v22;
  char v23;
  char v24;

  uint64_t v3 = v2;
  uint64_t v4 = v1;
  Statement.bind(_:)(a1);
  uint64_t v21 = (sqlite3_stmt **)(v1 + 16);
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
  sub_25E696400();
  uint64_t v5 = *(void *)(v1 + 24);
  while (1)
  {
    while (1)
    {
      if (qword_26B38E1E0 != -1) {
        swift_once();
      }
      sub_25E6C2740();
      uint64_t v6 = sub_25E6A57E4();
      if ((v23 & 1) == 0 && v22 == v6) {
        break;
      }
      uint64_t v15 = *(id *)(v5 + 88);
      sub_25E6C2770();
      if (v3)
      {
        swift_release();

        return (sqlite3 *)v4;
      }

      if ((v24 & 1) == 0) {
        return (sqlite3 *)v4;
      }
    }
    uint64_t v7 = sqlite3_step(*v21);
    unsigned int v8 = qword_26B38E100;
    swift_retain();
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v9 = off_26B38E0F8;
    if (!*((void *)off_26B38E0F8 + 2)) {
      goto LABEL_19;
    }
    uint64_t v10 = MEMORY[0x2611E0360](*((void *)off_26B38E0F8 + 5), v7, 4);
    uint64_t v11 = -1 << v9[32];
    uint64_t v12 = v10 & ~v11;
    if (((*(void *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0) {
      goto LABEL_19;
    }
    unint64_t v13 = *((void *)v9 + 6);
    if (*(_DWORD *)(v13 + 4 * v12) != v7) {
      break;
    }
LABEL_2:
    swift_release();
    if (v7 != 100) {
      return (sqlite3 *)v4;
    }
  }
  uint64_t v14 = ~v11;
  while (1)
  {
    uint64_t v12 = (v12 + 1) & v14;
    if (((*(void *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0) {
      break;
    }
    if (*(_DWORD *)(v13 + 4 * v12) == v7) {
      goto LABEL_2;
    }
  }
LABEL_19:
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v5 + 16);
  if (result)
  {
    uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      uint64_t v17 = sub_25E6C25B0();
      uint64_t v19 = v18;
      swift_release();
      sub_25E69645C();
      swift_allocError();
      *(void *)uint64_t v20 = v17;
      *(void *)(v20 + 8) = v19;
      *(_DWORD *)(v20 + 16) = v7;
      *(void *)(v20 + 24) = 0;
      swift_willThrow();
      swift_release();
      return (sqlite3 *)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Statement.step()()
{
  uint64_t v2 = *(void *)(v0 + 24);
  sub_25E696400();
  if (qword_26B38E1E0 != -1) {
    swift_once();
  }
  sub_25E6C2740();
  uint64_t v3 = sub_25E6A57E4();
  if ((v15 & 1) != 0 || v14 != v3)
  {
    id v7 = *(id *)(v2 + 88);
    sub_25E6C2770();

    if (!v1) {
      BOOL v6 = v16;
    }
    goto LABEL_14;
  }
  swift_beginAccess();
  unsigned int v4 = sqlite3_step(*(sqlite3_stmt **)(v0 + 16));
  uint64_t v5 = qword_26B38E100;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  if (!sub_25E6950B4(v4, (uint64_t)off_26B38E0F8))
  {
    swift_beginAccess();
    unsigned int v8 = *(sqlite3 **)(v2 + 16);
    if (v8)
    {
      unsigned int v8 = (sqlite3 *)sqlite3_errmsg(v8);
      if (v8)
      {
        uint64_t v9 = sub_25E6C25B0();
        uint64_t v11 = v10;
        swift_release();
        sub_25E69645C();
        swift_allocError();
        *(void *)uint64_t v12 = v9;
        *(void *)(v12 + 8) = v11;
        *(_DWORD *)(v12 + 16) = v4;
        *(void *)(v12 + 24) = 0;
        swift_willThrow();
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return (char)v8;
  }
  swift_release();
  BOOL v6 = v4 == 100;
LABEL_14:
  LOBYTE(v8) = v6;
  return (char)v8;
}

void Statement.scalar(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = sub_25E696210(a1);
    swift_beginAccess();
    uint64_t v5 = *(sqlite3_stmt **)(v4 + 16);
    swift_retain();
    sqlite3_reset(v5);
    Statement.step()();
    if (!v6)
    {
      Statement.row.getter(&v8);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
  }
  else
  {
    swift_beginAccess();
    sqlite3_reset(*(sqlite3_stmt **)(v2 + 16));
    Statement.step()();
    if (!v7)
    {
      Statement.row.getter(&v8);
      Cursor.subscript.getter(0, a2);
    }
  }
}

uint64_t Statement.scalar(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_25E696210(a1);
  swift_beginAccess();
  uint64_t v4 = *(sqlite3_stmt **)(v3 + 16);
  swift_retain();
  sqlite3_reset(v4);
  Statement.step()();
  if (!v5)
  {
    Statement.row.getter(&v7);
    Cursor.subscript.getter(0, a2);
  }
  return swift_release();
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  Statement.bind(_:)(a1);
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v2 + 16));
  Statement.step()();
  if (!v4)
  {
    Statement.row.getter(&v6);
    Cursor.subscript.getter(0, a2);
  }
  return swift_release();
}

void Cursor.subscript.getter(uint64_t iCol@<X0>, uint64_t a2@<X8>)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  int v4 = iCol;
  if (iCol > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C2880();
    __break(1u);
    JUMPOUT(0x25E6942F0);
  }
  uint64_t v5 = *v2;
  switch(sqlite3_column_type(*v2, iCol))
  {
    case 1:
      sqlite3_int64 v6 = sqlite3_column_int64(v5, v4);
      *(void *)(a2 + 24) = MEMORY[0x263F8E5C0];
      *(void *)(a2 + 32) = &protocol witness table for Int64;
      *(void *)a2 = v6;
      return;
    case 2:
      double v12 = sqlite3_column_double(v5, v4);
      *(void *)(a2 + 24) = MEMORY[0x263F8D538];
      *(void *)(a2 + 32) = &protocol witness table for Double;
      *(double *)a2 = v12;
      return;
    case 3:
      if (!sqlite3_column_text(v5, v4)) {
        goto LABEL_15;
      }
      uint64_t v7 = sub_25E6C25C0();
      *(void *)(a2 + 24) = MEMORY[0x263F8D310];
      *(void *)(a2 + 32) = &protocol witness table for String;
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v8;
      return;
    case 4:
      *(void *)(a2 + 24) = &type metadata for Blob;
      *(void *)(a2 + 32) = &protocol witness table for Blob;
      uint64_t v9 = sqlite3_column_blob(v5, v4);
      if (v9)
      {
        uint64_t v10 = v9;
        int v11 = sqlite3_column_bytes(v5, v4);
        *(void *)a2 = sub_25E6888C4(v10, v11);
      }
      else
      {
        *(void *)a2 = MEMORY[0x263F8EE78];
      }
      return;
    case 5:
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    default:
      goto LABEL_16;
  }
}

sqlite3 *sub_25E69439C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  swift_beginAccess();
  unsigned int v5 = sqlite3_step(*(sqlite3_stmt **)(a1 + 16));
  uint64_t v6 = qword_26B38E100;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  if (sub_25E6950B4(v5, (uint64_t)off_26B38E0F8))
  {
    uint64_t result = (sqlite3 *)swift_release();
    *a2 = v5 == 100;
    return result;
  }
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v4 + 16);
  if (result)
  {
    uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      uint64_t v8 = sub_25E6C25B0();
      uint64_t v10 = v9;
      swift_release();
      sub_25E69645C();
      swift_allocError();
      *(void *)uint64_t v11 = v8;
      *(void *)(v11 + 8) = v10;
      *(_DWORD *)(v11 + 16) = v5;
      *(void *)(v11 + 24) = 0;
      return (sqlite3 *)swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Statement.makeIterator()()
{
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v0 + 16));
  return swift_retain();
}

uint64_t sub_25E69451C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t result = sqlite3_reset(*(sqlite3_stmt **)(v3 + 16));
  *a1 = v3;
  return result;
}

uint64_t sub_25E694568()
{
  return 0;
}

uint64_t sub_25E694570()
{
  return 2;
}

void *sub_25E694578()
{
  uint64_t v1 = sub_25E69537C(*v0);
  swift_release();
  return v1;
}

uint64_t sub_25E6945B0(void *a1, void *a2, uint64_t a3)
{
  return sub_25E695950(a1, a2, a3);
}

uint64_t sub_25E6945D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  uint64_t v11 = (uint64_t *)swift_allocObject();
  v11[2] = v10;
  uint64_t v11[3] = a4;
  v11[4] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E080);
  uint64_t result = swift_allocObject();
  uint64_t v13 = result;
  uint64_t v14 = 0;
  *(void *)(result + 16) = sub_25E6967E0;
  *(void *)(result + 24) = v11;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v13;
    return v14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_25E694F48(v10, a5, (uint64_t)v15);
    if (v16 == 1)
    {
      uint64_t v14 = 0;
LABEL_9:
      sub_25E681F7C((uint64_t)v15, &qword_26B38E0D8);
    }
    else
    {
      uint64_t v14 = 0;
      while (1)
      {
        sub_25E69639C((uint64_t)v15, (uint64_t)v17, &qword_26B38E1F8);
        sub_25E69639C((uint64_t)v17, a2, &qword_26B38E1F8);
        if (a3 - 1 == v14) {
          break;
        }
        a2 += 40;
        sub_25E694F48(v11[2], v11[4], (uint64_t)v15);
        ++v14;
        if (v16 == 1) {
          goto LABEL_9;
        }
      }
      uint64_t v14 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E694750()
{
  return sub_25E6C2640();
}

uint64_t FailableIterator.next()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Array.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25E6C2790();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v29 = *(void *)(a2 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v32 = sub_25E6C2480();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v18 = v31;
  uint64_t v30 = a1;
  uint64_t v31 = a3;
  v17(a3, a4);
  if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)(v31 - 8) + 8))(v30);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = v17;
    uint64_t v27 = a4 + 16;
    uint64_t v20 = *(void *)(v29 + 48);
    uint64_t v19 = v29 + 48;
    uint64_t v28 = a4;
    uint64_t v29 = v20;
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v19 - 16);
    while (((unsigned int (*)(char *, uint64_t, uint64_t))v29)(v11, 1, a2) != 1)
    {
      (*v25)(v16, v11, a2);
      (*(void (**)(char *, char *, uint64_t))(v19 - 32))(v14, v16, a2);
      sub_25E6C26C0();
      sub_25E6C26A0();
      (*(void (**)(char *, uint64_t))(v19 - 40))(v16, a2);
      v26(v31, v28);
    }
    (*(void (**)(uint64_t))(*(void *)(v31 - 8) + 8))(v30);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
    return v32;
  }
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Statement.failableNext()()
{
  Swift::Bool v1 = Statement.step()();
  uint64_t v2 = 0;
  if (!v3 && v1)
  {
    Statement.row.getter(v4);
    uint64_t v2 = (void *)sub_25E695184(v4[0], v4[1]);
  }
  result.value._rawValue = v2;
  result.is_nil = v0;
  return result;
}

uint64_t sub_25E694BA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Statement.step()();
  if (!v3)
  {
    if (result)
    {
      Statement.row.getter(v4);
      uint64_t result = sub_25E695184(v4[0], v4[1]);
    }
    else
    {
      uint64_t result = 0;
    }
    *a1 = result;
  }
  return result;
}

uint64_t sub_25E694C08@<X0>(uint64_t *a1@<X8>)
{
  Swift::Bool v2 = Statement.step()();
  if (v3)
  {
    MEMORY[0x2611E09A0](v3);
LABEL_5:
    uint64_t result = 0;
    goto LABEL_6;
  }
  if (!v2) {
    goto LABEL_5;
  }
  Statement.row.getter(v5);
  uint64_t result = sub_25E695184(v5[0], v5[1]);
LABEL_6:
  *a1 = result;
  return result;
}

const char *Statement.description.getter()
{
  swift_beginAccess();
  uint64_t result = sqlite3_sql(*(sqlite3_stmt **)(v0 + 16));
  if (result) {
    return (const char *)sub_25E6C25B0();
  }
  __break(1u);
  return result;
}

const char *sub_25E694CB8()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t result = sqlite3_sql(*(sqlite3_stmt **)(v1 + 16));
  if (result) {
    return (const char *)sub_25E6C25B0();
  }
  __break(1u);
  return result;
}

double Cursor.subscript.getter(uint64_t iCol)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_double(*v1, iCol);
  }
  __break(1u);
  return result;
}

sqlite3_int64 Cursor.subscript.getter(sqlite3_int64 iCol)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_int64(*v1, iCol);
  }
  __break(1u);
  return iCol;
}

{
  sqlite3_stmt **v1;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_int64(*v1, iCol);
  }
  __break(1u);
  return iCol;
}

uint64_t Cursor.subscript.getter(uint64_t iCol)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (iCol > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  iCol = (uint64_t)sqlite3_column_text(*v1, iCol);
  if (!iCol)
  {
LABEL_9:
    __break(1u);
    return iCol;
  }
  return sub_25E6C25C0();
}

uint64_t Cursor.subscript.getter@<X0>(uint64_t iCol@<X0>, void *a2@<X8>)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v4 = iCol;
  if (iCol > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return iCol;
  }
  unsigned int v5 = *v2;
  uint64_t v6 = sqlite3_column_blob(v5, iCol);
  if (v6)
  {
    uint64_t v7 = v6;
    int v8 = sqlite3_column_bytes(v5, v4);
    iCol = (uint64_t)sub_25E6888C4(v7, v8);
  }
  else
  {
    iCol = MEMORY[0x263F8EE78];
  }
  *a2 = iCol;
  return iCol;
}

BOOL Cursor.subscript.getter(BOOL iCol)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_int64(*v1, iCol) != 0;
  }
  __break(1u);
  return iCol;
}

uint64_t Cursor.makeIterator()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  int v4 = (void *)swift_allocObject();
  uint64_t v4[2] = v3;
  void v4[3] = v1;
  v4[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E080);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_25E6964C0;
  *(void *)(result + 24) = v4;
  return result;
}

void sub_25E694F48(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(a1 + 16) >= a2)
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = xmmword_25E6C3690;
  }
  else
  {
    swift_beginAccess();
    uint64_t v7 = *v6 + 1;
    if (__OFADD__(*v6, 1))
    {
      __break(1u);
    }
    else
    {
      *uint64_t v6 = v7;
      Cursor.subscript.getter(v7 - 1, a3);
    }
  }
}

uint64_t sub_25E695004@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = v3;
  v6[4] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E080);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_25E6967E0;
  *(void *)(result + 24) = v6;
  *a1 = result;
  return result;
}

uint64_t sub_25E6950A4()
{
  return sub_25E695184(*v0, v0[1]);
}

uint64_t sub_25E6950AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6945D4(a1, a2, a3, *v3, v3[1]);
}

BOOL sub_25E6950B4(unsigned int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = MEMORY[0x2611E0360](*(void *)(a2 + 40), a1, 4);
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_25E695184(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = (uint64_t *)(v3 + 16);
  swift_retain();
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = (void *)MEMORY[0x263F8EE78];
  if (*v4 < a2)
  {
    uint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x263F8EE78] + 32;
    while (1)
    {
      uint64_t *v4 = v5 + 1;
      Cursor.subscript.getter(v5, (uint64_t)v22);
      uint64_t result = sub_25E69639C((uint64_t)v22, (uint64_t)v23, &qword_26B38E1F8);
      if (!v7)
      {
        unint64_t v10 = v6[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
        uint64_t v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 40;
        v13[2] = v12;
        void v13[3] = 2 * v14;
        unint64_t v15 = (unint64_t)(v13 + 4);
        uint64_t v16 = v6[3] >> 1;
        if (v6[2])
        {
          if (v13 != v6 || v15 >= (unint64_t)&v6[5 * v16 + 4]) {
            memmove(v13 + 4, v6 + 4, 40 * v16);
          }
          v6[2] = 0;
        }
        uint64_t v8 = v15 + 40 * v16;
        uint64_t v7 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        unint64_t v6 = v13;
      }
      BOOL v18 = __OFSUB__(v7--, 1);
      if (v18) {
        break;
      }
      sub_25E69639C((uint64_t)v23, v8, &qword_26B38E1F8);
      v8 += 40;
      uint64_t v5 = *v4;
      if (*v4 >= a2) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = 0;
LABEL_21:
  uint64_t result = swift_release_n();
  unint64_t v19 = v6[3];
  if (v19 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v20 = v19 >> 1;
  BOOL v18 = __OFSUB__(v20, v7);
  uint64_t v21 = v20 - v7;
  if (!v18)
  {
    v6[2] = v21;
    return (uint64_t)v6;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25E69537C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(sqlite3_stmt **)(a1 + 16);
  swift_retain();
  sqlite3_reset(v2);
  Swift::Bool v3 = Statement.step()();
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v6 = 0;
  if (!v4)
  {
    uint64_t v13 = MEMORY[0x263F8EE78] + 32;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if (!v3) {
        goto LABEL_4;
      }
      uint64_t v54 = (void *)v13;
      uint64_t v55 = v6;
      uint64_t v56 = v7;
      Statement.row.getter(v61);
      unint64_t v15 = (sqlite3_stmt *)v61[0];
      uint64_t v14 = v61[1];
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      uint64_t v17 = (uint64_t *)(v16 + 16);
      swift_retain();
      swift_beginAccess();
      uint64_t v18 = *v17;
      if (*v17 < v14) {
        break;
      }
      uint64_t v19 = 0;
LABEL_44:
      swift_release_n();
      unint64_t v39 = v5[3];
      uint64_t v40 = v55;
      uint64_t v7 = v56;
      uint64_t v41 = v54;
      if (v39 >= 2)
      {
        unint64_t v42 = v39 >> 1;
        BOOL v10 = __OFSUB__(v42, v19);
        uint64_t v43 = v42 - v19;
        if (v10) {
          goto LABEL_68;
        }
        v5[2] = v43;
      }
      if (!v55)
      {
        unint64_t v44 = v56[3];
        if ((uint64_t)((v44 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_69;
        }
        int64_t v45 = v44 & 0xFFFFFFFFFFFFFFFELL;
        if (v45 <= 1) {
          uint64_t v46 = 1;
        }
        else {
          uint64_t v46 = v45;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A701768);
        uint64_t v47 = (void *)swift_allocObject();
        int64_t v48 = _swift_stdlib_malloc_size(v47);
        uint64_t v49 = v48 - 32;
        if (v48 < 32) {
          uint64_t v49 = v48 - 25;
        }
        uint64_t v50 = v49 >> 3;
        v47[2] = v46;
        v47[3] = 2 * (v49 >> 3);
        unint64_t v51 = (unint64_t)(v47 + 4);
        uint64_t v52 = v56[3] >> 1;
        if (v56[2])
        {
          uint64_t v53 = v56 + 4;
          if (v47 != v56 || v51 >= (unint64_t)v53 + 8 * v52) {
            memmove(v47 + 4, v53, 8 * v52);
          }
          long long v56[2] = 0;
        }
        uint64_t v41 = (void *)(v51 + 8 * v52);
        uint64_t v40 = (v50 & 0x7FFFFFFFFFFFFFFFLL) - v52;
        swift_release();
        uint64_t v7 = v47;
      }
      BOOL v10 = __OFSUB__(v40, 1);
      uint64_t v6 = v40 - 1;
      if (v10) {
        goto LABEL_67;
      }
      *uint64_t v41 = v5;
      uint64_t v13 = (uint64_t)(v41 + 1);
      Swift::Bool v3 = Statement.step()();
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
      if (v4) {
        goto LABEL_3;
      }
    }
    uint64_t v19 = 0;
    uint64_t v20 = (uint64_t)(v5 + 4);
    while (2)
    {
      *uint64_t v17 = v18 + 1;
      if (v18 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v18 <= 0x7FFFFFFF)
      {
        switch(sqlite3_column_type(v15, v18))
        {
          case 1:
            sqlite3_int64 v21 = sqlite3_column_int64(v15, v18);
            uint64_t v59 = &protocol witness table for Int64;
            *((void *)&v58 + 1) = MEMORY[0x263F8E5C0];
            *(void *)&long long v57 = v21;
            goto LABEL_29;
          case 2:
            double v24 = sqlite3_column_double(v15, v18);
            *((void *)&v58 + 1) = MEMORY[0x263F8D538];
            uint64_t v59 = &protocol witness table for Double;
            *(double *)&long long v57 = v24;
            goto LABEL_29;
          case 3:
            if (!sqlite3_column_text(v15, v18)) {
              goto LABEL_71;
            }
            uint64_t v22 = sub_25E6C25C0();
            *((void *)&v58 + 1) = MEMORY[0x263F8D310];
            uint64_t v59 = &protocol witness table for String;
            *(void *)&long long v57 = v22;
            *((void *)&v57 + 1) = v23;
LABEL_29:
            sub_25E69639C((uint64_t)&v57, (uint64_t)v60, &qword_26B38E1F8);
            if (v19) {
              goto LABEL_40;
            }
            unint64_t v31 = v5[3];
            if ((uint64_t)((v31 >> 1) + 0x4000000000000000) < 0) {
              goto LABEL_66;
            }
            int64_t v32 = v31 & 0xFFFFFFFFFFFFFFFELL;
            if (v32 <= 1) {
              uint64_t v33 = 1;
            }
            else {
              uint64_t v33 = v32;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
            uint64_t v34 = (void *)swift_allocObject();
            uint64_t v35 = (uint64_t)(_swift_stdlib_malloc_size(v34) - 32) / 40;
            v34[2] = v33;
            v34[3] = 2 * v35;
            unint64_t v36 = (unint64_t)(v34 + 4);
            uint64_t v37 = v5[3] >> 1;
            if (v5[2])
            {
              uint64_t v38 = v5 + 4;
              if (v34 != v5 || v36 >= (unint64_t)v38 + 40 * v37) {
                memmove(v34 + 4, v38, 40 * v37);
              }
              v5[2] = 0;
            }
            uint64_t v20 = v36 + 40 * v37;
            uint64_t v19 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
            swift_release();
            uint64_t v5 = v34;
LABEL_40:
            BOOL v10 = __OFSUB__(v19--, 1);
            if (v10) {
              goto LABEL_65;
            }
            sub_25E69639C((uint64_t)v60, v20, &qword_26B38E1F8);
            v20 += 40;
            uint64_t v18 = *v17;
            if (*v17 >= v14) {
              goto LABEL_44;
            }
            continue;
          case 4:
            *((void *)&v58 + 1) = &type metadata for Blob;
            uint64_t v59 = &protocol witness table for Blob;
            uint64_t v25 = sqlite3_column_blob(v15, v18);
            if (v25)
            {
              uint64_t v26 = v25;
              int v27 = sqlite3_column_bytes(v15, v18);
              if (v27)
              {
                size_t v28 = v27;
                if (v27 <= 0)
                {
                  uint64_t v29 = (void *)MEMORY[0x263F8EE78];
                }
                else
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E098);
                  uint64_t v29 = (void *)swift_allocObject();
                  size_t v30 = _swift_stdlib_malloc_size(v29);
                  v29[2] = v28;
                  v29[3] = 2 * v30 - 64;
                }
                memcpy(v29 + 4, v26, v28);
              }
              else
              {
                uint64_t v29 = (void *)MEMORY[0x263F8EE78];
              }
              *(void *)&long long v57 = v29;
            }
            else
            {
              *(void *)&long long v57 = MEMORY[0x263F8EE78];
            }
            goto LABEL_29;
          case 5:
            uint64_t v59 = 0;
            long long v57 = 0u;
            long long v58 = 0u;
            goto LABEL_29;
          default:
            goto LABEL_72;
        }
      }
      break;
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
LABEL_3:
  MEMORY[0x2611E09A0](v4);
LABEL_4:
  swift_release();
  unint64_t v8 = v7[3];
  if (v8 >= 2)
  {
    unint64_t v9 = v8 >> 1;
    BOOL v10 = __OFSUB__(v9, v6);
    uint64_t v11 = v9 - v6;
    if (!v10)
    {
      v7[2] = v11;
      return v7;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    swift_release();
    __break(1u);
LABEL_72:
    swift_release();
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C2880();
    __break(1u);
    JUMPOUT(0x25E69593CLL);
  }
  return v7;
}

uint64_t sub_25E695950(void *a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v3 + 16));
  uint64_t v6 = 0;
  if (a2 && a3)
  {
    if ((a3 & 0x8000000000000000) == 0)
    {
      Swift::Bool v7 = Statement.step()();
      uint64_t v9 = 0;
      if (v8)
      {
LABEL_5:
        MEMORY[0x2611E09A0](v8);
        uint64_t v6 = v9;
        goto LABEL_6;
      }
      uint64_t v11 = 1;
      uint64_t v42 = v3;
      uint64_t v43 = a3;
      while (1)
      {
        uint64_t v6 = v9;
        if (!v7) {
          goto LABEL_6;
        }
        uint64_t v45 = v11;
        uint64_t v46 = a2;
        Statement.row.getter(v51);
        uint64_t v13 = (sqlite3_stmt *)v51[0];
        uint64_t v12 = v51[1];
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = 0;
        unint64_t v15 = (uint64_t *)(v14 + 16);
        swift_retain();
        swift_beginAccess();
        uint64_t v16 = *v15;
        if (*v15 < v12) {
          break;
        }
        uint64_t v17 = 0;
        uint64_t v18 = (void *)MEMORY[0x263F8EE78];
LABEL_43:
        swift_release_n();
        unint64_t v39 = v18[3];
        if (v39 >= 2)
        {
          unint64_t v40 = v39 >> 1;
          BOOL v38 = __OFSUB__(v40, v17);
          uint64_t v41 = v40 - v17;
          if (v38) {
            goto LABEL_54;
          }
          v18[2] = v41;
        }
        uint64_t v9 = v45;
        *uint64_t v46 = v18;
        if (v45 == v43)
        {
          uint64_t v6 = v43;
          uint64_t v3 = v42;
          goto LABEL_6;
        }
        a2 = v46 + 1;
        uint64_t v11 = v45 + 1;
        uint64_t v3 = v42;
        Swift::Bool v7 = Statement.step()();
        if (v8) {
          goto LABEL_5;
        }
      }
      uint64_t v17 = 0;
      uint64_t v18 = (void *)MEMORY[0x263F8EE78];
      uint64_t v19 = MEMORY[0x263F8EE78] + 32;
      while (2)
      {
        *unint64_t v15 = v16 + 1;
        if (v16 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else if (v16 <= 0x7FFFFFFF)
        {
          switch(sqlite3_column_type(v13, v16))
          {
            case 1:
              sqlite3_int64 v20 = sqlite3_column_int64(v13, v16);
              uint64_t v49 = &protocol witness table for Int64;
              *((void *)&v48 + 1) = MEMORY[0x263F8E5C0];
              *(void *)&long long v47 = v20;
              goto LABEL_28;
            case 2:
              double v29 = sqlite3_column_double(v13, v16);
              *((void *)&v48 + 1) = MEMORY[0x263F8D538];
              uint64_t v49 = &protocol witness table for Double;
              *(double *)&long long v47 = v29;
              goto LABEL_28;
            case 3:
              if (!sqlite3_column_text(v13, v16)) {
                goto LABEL_56;
              }
              uint64_t v21 = sub_25E6C25C0();
              *((void *)&v48 + 1) = MEMORY[0x263F8D310];
              uint64_t v49 = &protocol witness table for String;
              *(void *)&long long v47 = v21;
              *((void *)&v47 + 1) = v22;
LABEL_28:
              sub_25E69639C((uint64_t)&v47, (uint64_t)v50, &qword_26B38E1F8);
              if (v17) {
                goto LABEL_39;
              }
              unint64_t v30 = v18[3];
              if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0) {
                goto LABEL_53;
              }
              int64_t v31 = v30 & 0xFFFFFFFFFFFFFFFELL;
              if (v31 <= 1) {
                uint64_t v32 = 1;
              }
              else {
                uint64_t v32 = v31;
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
              uint64_t v33 = (void *)swift_allocObject();
              uint64_t v34 = (uint64_t)(_swift_stdlib_malloc_size(v33) - 32) / 40;
              _OWORD v33[2] = v32;
              v33[3] = 2 * v34;
              unint64_t v35 = (unint64_t)(v33 + 4);
              uint64_t v36 = v18[3] >> 1;
              if (v18[2])
              {
                uint64_t v37 = v18 + 4;
                if (v33 != v18 || v35 >= (unint64_t)v37 + 40 * v36) {
                  memmove(v33 + 4, v37, 40 * v36);
                }
                v18[2] = 0;
              }
              uint64_t v19 = v35 + 40 * v36;
              uint64_t v17 = (v34 & 0x7FFFFFFFFFFFFFFFLL) - v36;
              swift_release();
              uint64_t v18 = v33;
LABEL_39:
              BOOL v38 = __OFSUB__(v17--, 1);
              if (v38) {
                goto LABEL_52;
              }
              sub_25E69639C((uint64_t)v50, v19, &qword_26B38E1F8);
              v19 += 40;
              uint64_t v16 = *v15;
              if (*v15 >= v12) {
                goto LABEL_43;
              }
              continue;
            case 4:
              *((void *)&v48 + 1) = &type metadata for Blob;
              uint64_t v49 = &protocol witness table for Blob;
              uint64_t v23 = sqlite3_column_blob(v13, v16);
              if (v23)
              {
                double v24 = v23;
                int v25 = sqlite3_column_bytes(v13, v16);
                if (v25)
                {
                  size_t v26 = v25;
                  if (v25 <= 0)
                  {
                    int v27 = (void *)MEMORY[0x263F8EE78];
                  }
                  else
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E098);
                    int v27 = (void *)swift_allocObject();
                    size_t v28 = _swift_stdlib_malloc_size(v27);
                    long long v27[2] = v26;
                    void v27[3] = 2 * v28 - 64;
                  }
                  memcpy(v27 + 4, v24, v26);
                }
                else
                {
                  int v27 = (void *)MEMORY[0x263F8EE78];
                }
                *(void *)&long long v47 = v27;
              }
              else
              {
                *(void *)&long long v47 = MEMORY[0x263F8EE78];
              }
              goto LABEL_28;
            case 5:
              uint64_t v49 = 0;
              long long v47 = 0u;
              long long v48 = 0u;
              goto LABEL_28;
            default:
              goto LABEL_57;
          }
        }
        break;
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
    }
    __break(1u);
LABEL_56:
    swift_release();
    __break(1u);
LABEL_57:
    swift_release();
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C2880();
    __break(1u);
    JUMPOUT(0x25E695E5CLL);
  }
LABEL_6:
  *a1 = v3;
  return v6;
}

uint64_t sub_25E695E70(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    uint64_t v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    sqlite3_int64 v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25E696070(uint64_t result, uint64_t a2)
{
  int v3 = result;
  unint64_t v4 = HIDWORD(result);
  if (result < 0 != (int)result < 0)
  {
    if ((int)result >= 0) {
      int v5 = result;
    }
    else {
      int v5 = -(int)result;
    }
    if (result >= 0) {
      int v6 = HIDWORD(result);
    }
    else {
      int v6 = -HIDWORD(result);
    }
    BOOL v7 = __CFADD__(v5, v6);
    uint64_t v8 = (v5 + v6);
    if (v7)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if ((int)result < 0) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = -v8;
    }
LABEL_14:
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t result = (uint64_t)sub_25E68B5FC(0, v9 & ~(v9 >> 63), 0);
    if ((v9 & 0x8000000000000000) == 0)
    {
      uint64_t v10 = v21;
      sqlite3_int64 v20 = (sqlite3_stmt **)(a2 + 16);
      swift_beginAccess();
      if (v3 <= (int)v4) {
        int v11 = v4;
      }
      else {
        int v11 = v3;
      }
      uint64_t v12 = (v11 - v3);
      for (int i = v3; ; ++i)
      {
        uint64_t result = (uint64_t)sqlite3_column_name(*v20, i);
        if (!result) {
          break;
        }
        uint64_t result = sub_25E6C25B0();
        uint64_t v15 = result;
        unint64_t v17 = *(void *)(v21 + 16);
        unint64_t v16 = *(void *)(v21 + 24);
        if (v17 >= v16 >> 1)
        {
          uint64_t v19 = v14;
          uint64_t result = (uint64_t)sub_25E68B5FC((char *)(v16 > 1), v17 + 1, 1);
          uint64_t v14 = v19;
        }
        *(void *)(v21 + 16) = v17 + 1;
        uint64_t v18 = v21 + 16 * v17;
        *(void *)(v18 + 32) = v15;
        *(void *)(v18 + 40) = v14;
        if ((int)v4 < v3)
        {
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (!v12) {
          goto LABEL_28;
        }
        --v12;
        if (!--v9) {
          return v10;
        }
      }
      goto LABEL_32;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!__OFSUB__(HIDWORD(result), result))
  {
    uint64_t v9 = HIDWORD(result) - (int)result;
    goto LABEL_14;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_25E696210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return v1;
  }
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
  sqlite3_clear_bindings(*(sqlite3_stmt **)(v1 + 16));
  if (v2 == sqlite3_bind_parameter_count(*(sqlite3_stmt **)(v1 + 16)))
  {
    uint64_t v4 = 0;
    uint64_t v5 = a1 + 32;
    do
    {
      sub_25E692C80(v5, ++v4);
      v5 += 40;
    }
    while (v2 != v4);
    return v1;
  }
  sub_25E6C27D0();
  sqlite3_bind_parameter_count(*(sqlite3_stmt **)(v1 + 16));
  sub_25E6C2900();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  sub_25E6C2900();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t result = sub_25E6C2880();
  __break(1u);
  return result;
}

uint64_t sub_25E69639C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_25E696400()
{
  unint64_t result = qword_26B38E128;
  if (!qword_26B38E128)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B38E128);
  }
  return result;
}

sqlite3 *sub_25E696440@<X0>(BOOL *a1@<X8>)
{
  return sub_25E69439C(v1, a1);
}

unint64_t sub_25E69645C()
{
  unint64_t result = qword_26A701748;
  if (!qword_26A701748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A701748);
  }
  return result;
}

uint64_t sub_25E6964B0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25E6964C0(uint64_t a1@<X8>)
{
  sub_25E694F48(*(void *)(v1 + 16), *(void *)(v1 + 32), a1);
}

unint64_t sub_25E6964D0()
{
  unint64_t result = qword_26A701750;
  if (!qword_26A701750)
  {
    type metadata accessor for Statement();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A701750);
  }
  return result;
}

uint64_t type metadata accessor for Statement()
{
  return self;
}

unint64_t sub_25E696548(uint64_t a1)
{
  unint64_t result = sub_25E6964D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25E696574()
{
  unint64_t result = qword_26A701758;
  if (!qword_26A701758)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A701760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A701758);
  }
  return result;
}

uint64_t sub_25E6965D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Statement.columnCount.getter();
  *a1 = result;
  return result;
}

void *sub_25E6965FC(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)(v2 + 32) = *result;
  *(unsigned char *)(v2 + 40) = 0;
  return result;
}

uint64_t sub_25E696610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Statement.columnNames.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25E69663C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_25E696680(void *a1@<X8>)
{
  Statement.row.getter(v3);
  uint64_t v2 = v3[1];
  *a1 = v3[0];
  a1[1] = v2;
}

void *sub_25E6966BC(void *result, uint64_t *a2)
{
  uint64_t v2 = result[1];
  uint64_t v3 = *a2;
  *(void *)(v3 + 56) = *result;
  *(void *)(v3 + 64) = v2;
  return result;
}

uint64_t method lookup function for Statement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Statement);
}

uint64_t dispatch thunk of FailableIterator.failableNext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Cursor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Cursor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Cursor()
{
  return &type metadata for Cursor;
}

uint64_t sub_25E6967A8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t + infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_25E696A34(a1, a2, &qword_26A7016D0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  long long v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  _UNKNOWN **v20;
  void v21[5];
  void v22[5];

  uint64_t v2 = *a1;
  int v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  int v6 = a2[1];
  BOOL v7 = a2[2];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016E8);
  v22[3] = v8;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  unint64_t v17 = 32;
  *(void *)&uint64_t v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  int v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  uint64_t v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  sqlite3_int64 v20 = &protocol witness table for Expression<A>;
  unint64_t v17 = v12;
  uint64_t v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  return sub_25E696A34(a1, a2, &qword_26A7016E8, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  long long v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  _UNKNOWN **v20;
  void v21[5];
  void v22[5];

  uint64_t v2 = *a1;
  int v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  int v6 = a2[1];
  BOOL v7 = a2[2];
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016E8);
  v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  unint64_t v17 = 32;
  *(void *)&uint64_t v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  int v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  uint64_t v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  sqlite3_int64 v20 = &protocol witness table for Expression<A>;
  unint64_t v17 = v12;
  uint64_t v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t + infix(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25E696C34(a1, a2, a3, &qword_26A7016D0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E696C34(a1, a2, a3, &qword_26A7016E8, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E696A34(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v5;
  v25[1] = v6;
  v25[2] = v7;
  v24[3] = v11;
  v24[4] = &protocol witness table for Expression<A>;
  v24[0] = v8;
  v24[1] = v9;
  v24[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = v11;
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  a4(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_25E696C34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *, void, unint64_t))
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v9;
  v25[2] = v10;
  v24[3] = MEMORY[0x263F8D310];
  v24[4] = &protocol witness table for String;
  v24[0] = a2;
  v24[1] = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = v11;
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  a5(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E696E98(a1, a2, 0, a3);
}

{
  return sub_25E697074(a1, a2, 0, a3);
}

{
  return sub_25E697170(a1, a2, 0, a3);
}

{
  return sub_25E698390(a1, a2, 0, a3);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E696F78(a1, a2, a3, a4, 0, a5);
}

{
  return sub_25E69725C(a1, a2, a3, a4, 0, a5);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E696E98(a1, a2, 1, a3);
}

{
  return sub_25E697074(a1, a2, 1, a3);
}

{
  return sub_25E697170(a1, a2, 1, a3);
}

{
  return sub_25E698390(a1, a2, 1, a3);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E696F78(a1, a2, a3, a4, 1, a5);
}

{
  return sub_25E69725C(a1, a2, a3, a4, 1, a5);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E696E98(a1, a2, 5, a3);
}

{
  return sub_25E697074(a1, a2, 5, a3);
}

{
  return sub_25E697170(a1, a2, 5, a3);
}

{
  return sub_25E698390(a1, a2, 5, a3);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E696F78(a1, a2, a3, a4, 5, a5);
}

{
  return sub_25E69725C(a1, a2, a3, a4, 5, a5);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E696E98(a1, a2, 6, a3);
}

{
  return sub_25E697074(a1, a2, 6, a3);
}

{
  return sub_25E697170(a1, a2, 6, a3);
}

{
  return sub_25E698390(a1, a2, 6, a3);
}

uint64_t sub_25E696E98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W5>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  uint64_t v15 = type metadata accessor for Expression();
  unint64_t v16 = &protocol witness table for Expression<A>;
  v14[0] = v7;
  v14[1] = v6;
  v14[2] = v8;
  void v13[3] = v15;
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E696F78(a1, a2, a3, a4, 6, a5);
}

{
  return sub_25E69725C(a1, a2, a3, a4, 6, a5);
}

uint64_t sub_25E696F78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  void v18[3] = type metadata accessor for Expression();
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  uint64_t v14 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v18, (uint64_t)v17, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_25E697074@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W5>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = a2[2];
  sub_25E6C2790();
  void v14[3] = type metadata accessor for Expression();
  v14[4] = &protocol witness table for Expression<A>;
  v14[0] = v6;
  v14[1] = v5;
  v14[2] = v7;
  void v13[3] = type metadata accessor for Expression();
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v9;
  v13[1] = v8;
  v13[2] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_25E697170@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W5>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  sub_25E6C2790();
  uint64_t v15 = type metadata accessor for Expression();
  unint64_t v16 = &protocol witness table for Expression<A>;
  v14[0] = v7;
  v14[1] = v6;
  v14[2] = v8;
  void v13[3] = v15;
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_25E69725C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  sub_25E6C2790();
  void v18[3] = type metadata accessor for Expression();
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  uint64_t v14 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v18, (uint64_t)v17, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E697410(a1, a2, 7, a3);
}

{
  return sub_25E6975EC(a1, a2, 7, a3);
}

{
  return sub_25E6976E8(a1, a2, 7, a3);
}

{
  return sub_25E698810(a1, a2, 7, a3);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E6974F0(a1, a2, a3, a4, 7, a5);
}

{
  return sub_25E6977D4(a1, a2, a3, a4, 7, a5);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E697410(a1, a2, 8, a3);
}

{
  return sub_25E6975EC(a1, a2, 8, a3);
}

{
  return sub_25E6976E8(a1, a2, 8, a3);
}

{
  return sub_25E698810(a1, a2, 8, a3);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E6974F0(a1, a2, a3, a4, 8, a5);
}

{
  return sub_25E6977D4(a1, a2, a3, a4, 8, a5);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E697410(a1, a2, 9, a3);
}

{
  return sub_25E6975EC(a1, a2, 9, a3);
}

{
  return sub_25E6976E8(a1, a2, 9, a3);
}

{
  return sub_25E698810(a1, a2, 9, a3);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E6974F0(a1, a2, a3, a4, 9, a5);
}

{
  return sub_25E6977D4(a1, a2, a3, a4, 9, a5);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E697410(a1, a2, 10, a3);
}

{
  return sub_25E6975EC(a1, a2, 10, a3);
}

{
  return sub_25E6976E8(a1, a2, 10, a3);
}

{
  return sub_25E698810(a1, a2, 10, a3);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E6974F0(a1, a2, a3, a4, 10, a5);
}

{
  return sub_25E6977D4(a1, a2, a3, a4, 10, a5);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E697410(a1, a2, 11, a3);
}

{
  return sub_25E6975EC(a1, a2, 11, a3);
}

{
  return sub_25E6976E8(a1, a2, 11, a3);
}

{
  return sub_25E698810(a1, a2, 11, a3);
}

uint64_t sub_25E697410@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W4>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  uint64_t v15 = type metadata accessor for Expression();
  unint64_t v16 = &protocol witness table for Expression<A>;
  v14[0] = v7;
  v14[1] = v6;
  v14[2] = v8;
  void v13[3] = v15;
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E6974F0(a1, a2, a3, a4, 11, a5);
}

{
  return sub_25E6977D4(a1, a2, a3, a4, 11, a5);
}

uint64_t sub_25E6974F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  void v18[3] = type metadata accessor for Expression();
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  uint64_t v14 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v18, (uint64_t)v17, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_25E6975EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W4>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = a2[2];
  sub_25E6C2790();
  void v14[3] = type metadata accessor for Expression();
  v14[4] = &protocol witness table for Expression<A>;
  v14[0] = v6;
  v14[1] = v5;
  v14[2] = v7;
  void v13[3] = type metadata accessor for Expression();
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v9;
  v13[1] = v8;
  v13[2] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_25E6976E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W4>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  sub_25E6C2790();
  uint64_t v15 = type metadata accessor for Expression();
  unint64_t v16 = &protocol witness table for Expression<A>;
  v14[0] = v7;
  v14[1] = v6;
  v14[2] = v8;
  void v13[3] = v15;
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_25E6977D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  sub_25E6C2790();
  void v18[3] = type metadata accessor for Expression();
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  uint64_t v14 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v18, (uint64_t)v17, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t ^ infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6979DC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_25E6979DC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_25E6979DC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_25E6979DC(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

uint64_t ^ infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E697BD0(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_25E697BD0(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

uint64_t sub_25E6979DC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, uint64_t *), void (*a6)(uint64_t *__return_ptr, uint64_t *, uint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t *, void *, uint64_t), void (*a8)(uint64_t *, uint64_t *, uint64_t))
{
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v15 = a2[2];
  uint64_t v29 = *a1;
  uint64_t v10 = v29;
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  uint64_t v23 = v13;
  uint64_t v24 = v14;
  uint64_t v25 = v15;
  a5(&v26, &v29, &v23);
  uint64_t v23 = v26;
  uint64_t v24 = v27;
  uint64_t v25 = v28;
  a6(&v29, &v23, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v29;
  uint64_t v27 = v30;
  uint64_t v28 = v31;
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  v19[0] = v13;
  v19[1] = v14;
  v19[2] = v15;
  a7(&v23, &v20, v19, a3);
  uint64_t v20 = v23;
  uint64_t v21 = v24;
  uint64_t v22 = v25;
  a8(&v26, &v20, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E697BD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *), void (*a6)(uint64_t *__return_ptr, uint64_t *, uint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t *, uint64_t *, uint64_t))
{
  uint64_t v13 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v27 = *a1;
  uint64_t v14 = v27;
  uint64_t v28 = v13;
  uint64_t v29 = v15;
  a5(&v24, &v27);
  uint64_t v21 = v24;
  uint64_t v22 = v25;
  uint64_t v23 = v26;
  a6(&v27, &v21, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v27;
  uint64_t v25 = v28;
  uint64_t v26 = v29;
  uint64_t v18 = v14;
  uint64_t v19 = v13;
  uint64_t v20 = v15;
  a7(&v21, &v18, a2, a3, a4);
  uint64_t v18 = v21;
  uint64_t v19 = v22;
  uint64_t v20 = v23;
  a8(&v24, &v18, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E697D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  sub_25E697D88(a4);
  sub_25E687240(a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E697D88(char a1)
{
  uint64_t result = 43;
  switch(a1)
  {
    case 1:
      uint64_t result = 45;
      break;
    case 2:
      uint64_t result = 21071;
      break;
    case 3:
      uint64_t result = 4476481;
      break;
    case 4:
      uint64_t result = 542396238;
      break;
    case 5:
      uint64_t result = 42;
      break;
    case 6:
      uint64_t result = 47;
      break;
    case 7:
      uint64_t result = 37;
      break;
    case 8:
      uint64_t result = 15420;
      break;
    case 9:
      uint64_t result = 15934;
      break;
    case 10:
      uint64_t result = 38;
      break;
    case 11:
      uint64_t result = 124;
      break;
    case 12:
      uint64_t result = 126;
      break;
    case 13:
      uint64_t result = 61;
      break;
    case 14:
      uint64_t result = 15649;
      break;
    case 15:
      uint64_t result = 62;
      break;
    case 16:
      uint64_t result = 60;
      break;
    case 17:
      uint64_t result = 15678;
      break;
    case 18:
      uint64_t result = 15676;
      break;
    case 19:
      uint64_t result = 31868;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E697ECC@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v5 = sub_25E697D88(a2);
  sub_25E68711C(a1, v5, v6, a3);
  return swift_bridgeObjectRelease();
}

uint64_t + infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_25E698160(a1, a2, a3, &qword_26A7016D0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E698160(a1, a2, a3, &qword_26A7016E8, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E698160(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t *, void, unint64_t))
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = a3[2];
  void v23[3] = MEMORY[0x263F8D310];
  v23[4] = &protocol witness table for String;
  v23[0] = a1;
  v23[1] = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v22[3] = v9;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v6;
  v22[1] = v7;
  v22[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v23, inited + 32);
  sub_25E681F18((uint64_t)v22, inited + 72);
  uint64_t v18 = 32;
  *(void *)&long long v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v18);
  swift_bridgeObjectRelease();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  uint64_t v13 = v16;
  long long v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  uint64_t v20 = v9;
  uint64_t v21 = &protocol witness table for Expression<A>;
  uint64_t v18 = v13;
  long long v19 = v15;
  a5(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69848C(a1, a2, a3, a4, 0, a5);
}

{
  return sub_25E698584(a1, a2, a3, a4, 0, a5);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69848C(a1, a2, a3, a4, 1, a5);
}

{
  return sub_25E698584(a1, a2, a3, a4, 1, a5);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69848C(a1, a2, a3, a4, 5, a5);
}

{
  return sub_25E698584(a1, a2, a3, a4, 5, a5);
}

uint64_t sub_25E698390@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W5>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  void v14[3] = type metadata accessor for Expression();
  v14[4] = &protocol witness table for Expression<A>;
  v14[0] = v7;
  v14[1] = v6;
  v14[2] = v8;
  sub_25E6C2790();
  void v13[3] = type metadata accessor for Expression();
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69848C(a1, a2, a3, a4, 6, a5);
}

{
  return sub_25E698584(a1, a2, a3, a4, 6, a5);
}

uint64_t sub_25E69848C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v12 = a2[2];
  uint64_t v13 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v16[3] = type metadata accessor for Expression();
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v11;
  v16[1] = v10;
  v16[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v17, (uint64_t)v16, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_25E698584@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v12 = a2[2];
  uint64_t v13 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_25E6C2790();
  void v16[3] = type metadata accessor for Expression();
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v11;
  v16[1] = v10;
  v16[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v17, (uint64_t)v16, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t - prefix<A>(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  v7[3] = type metadata accessor for Expression();
  v7[4] = &protocol witness table for Expression<A>;
  v7[0] = v4;
  v7[1] = v3;
  v7[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697ECC(v7, 1, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void v7[5];

  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  sub_25E6C2790();
  v7[3] = type metadata accessor for Expression();
  v7[4] = &protocol witness table for Expression<A>;
  v7[0] = v4;
  v7[1] = v3;
  v7[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697ECC(v7, 1, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69890C(a1, a2, a3, a4, 7, a5);
}

{
  return sub_25E698A04(a1, a2, a3, a4, 7, a5);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69890C(a1, a2, a3, a4, 8, a5);
}

{
  return sub_25E698A04(a1, a2, a3, a4, 8, a5);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69890C(a1, a2, a3, a4, 9, a5);
}

{
  return sub_25E698A04(a1, a2, a3, a4, 9, a5);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69890C(a1, a2, a3, a4, 10, a5);
}

{
  return sub_25E698A04(a1, a2, a3, a4, 10, a5);
}

uint64_t sub_25E698810@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W4>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  void v14[3] = type metadata accessor for Expression();
  v14[4] = &protocol witness table for Expression<A>;
  v14[0] = v7;
  v14[1] = v6;
  v14[2] = v8;
  sub_25E6C2790();
  void v13[3] = type metadata accessor for Expression();
  v13[4] = &protocol witness table for Expression<A>;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v14, (uint64_t)v13, 1, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_25E69890C(a1, a2, a3, a4, 11, a5);
}

{
  return sub_25E698A04(a1, a2, a3, a4, 11, a5);
}

uint64_t sub_25E69890C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v12 = a2[2];
  uint64_t v13 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v16[3] = type metadata accessor for Expression();
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v11;
  v16[1] = v10;
  v16[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v17, (uint64_t)v16, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_25E698A04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v12 = a2[2];
  uint64_t v13 = *(void *)(a4 + 8);
  void v17[3] = a3;
  v17[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_25E6C2790();
  void v16[3] = type metadata accessor for Expression();
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v11;
  v16[1] = v10;
  v16[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697D08((uint64_t)v17, (uint64_t)v16, 1, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t ~ prefix<A>(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  v7[3] = type metadata accessor for Expression();
  v7[4] = &protocol witness table for Expression<A>;
  v7[0] = v4;
  v7[1] = v3;
  v7[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697ECC(v7, 12, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void v7[5];

  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  sub_25E6C2790();
  v7[3] = type metadata accessor for Expression();
  v7[4] = &protocol witness table for Expression<A>;
  v7[0] = v4;
  v7[1] = v3;
  v7[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E697ECC(v7, 12, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t ^ infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E698D24(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_25E698D24(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

uint64_t sub_25E698D24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t *), void (*a6)(uint64_t *__return_ptr, uint64_t *, uint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t), void (*a8)(uint64_t *, uint64_t *, uint64_t))
{
  uint64_t v13 = a2[1];
  uint64_t v15 = a2[2];
  uint64_t v27 = *a2;
  uint64_t v14 = v27;
  uint64_t v28 = v13;
  uint64_t v29 = v15;
  a5(&v24, a1, &v27);
  uint64_t v21 = v24;
  uint64_t v22 = v25;
  uint64_t v23 = v26;
  a6(&v27, &v21, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v27;
  uint64_t v25 = v28;
  uint64_t v26 = v29;
  uint64_t v18 = v14;
  uint64_t v19 = v13;
  uint64_t v20 = v15;
  a7(&v21, a1, &v18, a3, a4);
  uint64_t v18 = v21;
  uint64_t v19 = v22;
  uint64_t v20 = v23;
  a8(&v24, &v18, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t == infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v40 = a4;
  uint64_t v41 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v20 = a2;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v20, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v23 = type metadata accessor for Expression();
    uint64_t v54 = v23;
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v24 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v39, 1, 1, a3);
    uint64_t v49 = v23;
    uint64_t v50 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)(v24, v23, WitnessTable, v40, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, inited + 32);
    sub_25E681F18((uint64_t)v48, inited + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v44);
    swift_bridgeObjectRelease();
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v28[1])(&v42, v27, v28);
    uint64_t v29 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v29;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, a3);
    uint64_t v54 = type metadata accessor for Expression();
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v30 = *(_UNKNOWN ***)(v40 + 8);
    uint64_t v49 = a3;
    uint64_t v50 = v30;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_1, v16, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v32 = v22;
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, v33 + 32);
    sub_25E681F18((uint64_t)v48, v33 + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v33, &v44);
    swift_bridgeObjectRelease();
    uint64_t v34 = v46;
    unint64_t v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    uint64_t v36 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v36;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
}

uint64_t == infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t == infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v37 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  long long v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = a2[2];
  *(void *)&long long v36 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    uint64_t v21 = type metadata accessor for Expression();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    uint64_t v50 = v21;
    uint64_t v51 = &protocol witness table for Expression<A>;
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)((uint64_t)v12, v21, WitnessTable, v35, (uint64_t)v49);
    uint64_t v47 = v21;
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, inited + 32);
    sub_25E681F18((uint64_t)&v44, inited + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v40);
    swift_bridgeObjectRelease();
    uint64_t v24 = v42;
    uint64_t v25 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v25[1])(&v38, v24, v25);
    uint64_t v26 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v26;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    uint64_t v27 = *(_UNKNOWN ***)(v35 + 8);
    uint64_t v50 = a3;
    uint64_t v51 = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    uint64_t v47 = type metadata accessor for Expression();
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, v29 + 32);
    sub_25E681F18((uint64_t)&v44, v29 + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v29, &v40);
    swift_bridgeObjectRelease();
    uint64_t v30 = v42;
    uint64_t v31 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v38, v30, v31);
    uint64_t v32 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v32;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t === infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v40 = a4;
  uint64_t v41 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v20 = a2;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v20, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v23 = type metadata accessor for Expression();
    uint64_t v54 = v23;
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v24 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v39, 1, 1, a3);
    uint64_t v49 = v23;
    uint64_t v50 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)(v24, v23, WitnessTable, v40, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, inited + 32);
    sub_25E681F18((uint64_t)v48, inited + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v44);
    swift_bridgeObjectRelease();
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v28[1])(&v42, v27, v28);
    uint64_t v29 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v29;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, a3);
    uint64_t v54 = type metadata accessor for Expression();
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v30 = *(_UNKNOWN ***)(v40 + 8);
    uint64_t v49 = a3;
    uint64_t v50 = v30;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_1, v16, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v32 = v22;
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, v33 + 32);
    sub_25E681F18((uint64_t)v48, v33 + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v33, &v44);
    swift_bridgeObjectRelease();
    uint64_t v34 = v46;
    uint64_t v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    uint64_t v36 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v36;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
}

uint64_t === infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t === infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v37 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  long long v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = a2[2];
  *(void *)&long long v36 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    uint64_t v21 = type metadata accessor for Expression();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    uint64_t v50 = v21;
    uint64_t v51 = &protocol witness table for Expression<A>;
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)((uint64_t)v12, v21, WitnessTable, v35, (uint64_t)v49);
    uint64_t v47 = v21;
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, inited + 32);
    sub_25E681F18((uint64_t)&v44, inited + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v40);
    swift_bridgeObjectRelease();
    uint64_t v24 = v42;
    uint64_t v25 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v25[1])(&v38, v24, v25);
    uint64_t v26 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v26;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    uint64_t v27 = *(_UNKNOWN ***)(v35 + 8);
    uint64_t v50 = a3;
    uint64_t v51 = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    uint64_t v47 = type metadata accessor for Expression();
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, v29 + 32);
    sub_25E681F18((uint64_t)&v44, v29 + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v29, &v40);
    swift_bridgeObjectRelease();
    uint64_t v30 = v42;
    uint64_t v31 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v38, v30, v31);
    uint64_t v32 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v32;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t != infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v40 = a4;
  uint64_t v41 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v20 = a2;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v20, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v23 = type metadata accessor for Expression();
    uint64_t v54 = v23;
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v24 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v39, 1, 1, a3);
    uint64_t v49 = v23;
    uint64_t v50 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)(v24, v23, WitnessTable, v40, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, inited + 32);
    sub_25E681F18((uint64_t)v48, inited + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v44);
    swift_bridgeObjectRelease();
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v28[1])(&v42, v27, v28);
    uint64_t v29 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v29;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, a3);
    uint64_t v54 = type metadata accessor for Expression();
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v30 = *(_UNKNOWN ***)(v40 + 8);
    uint64_t v49 = a3;
    uint64_t v50 = v30;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_1, v16, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v32 = v22;
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, v33 + 32);
    sub_25E681F18((uint64_t)v48, v33 + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v33, &v44);
    swift_bridgeObjectRelease();
    uint64_t v34 = v46;
    uint64_t v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    uint64_t v36 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v36;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
}

uint64_t != infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t != infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v37 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  long long v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = a2[2];
  *(void *)&long long v36 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    uint64_t v21 = type metadata accessor for Expression();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    uint64_t v50 = v21;
    uint64_t v51 = &protocol witness table for Expression<A>;
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)((uint64_t)v12, v21, WitnessTable, v35, (uint64_t)v49);
    uint64_t v47 = v21;
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, inited + 32);
    sub_25E681F18((uint64_t)&v44, inited + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v40);
    swift_bridgeObjectRelease();
    uint64_t v24 = v42;
    uint64_t v25 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v25[1])(&v38, v24, v25);
    uint64_t v26 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v26;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    uint64_t v27 = *(_UNKNOWN ***)(v35 + 8);
    uint64_t v50 = a3;
    uint64_t v51 = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    uint64_t v47 = type metadata accessor for Expression();
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, v29 + 32);
    sub_25E681F18((uint64_t)&v44, v29 + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v29, &v40);
    swift_bridgeObjectRelease();
    uint64_t v30 = v42;
    uint64_t v31 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v38, v30, v31);
    uint64_t v32 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v32;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t !== infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v40 = a4;
  uint64_t v41 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v38 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v20 = a2;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v20, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v23 = type metadata accessor for Expression();
    uint64_t v54 = v23;
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v24 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v39, 1, 1, a3);
    uint64_t v49 = v23;
    uint64_t v50 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)(v24, v23, WitnessTable, v40, (uint64_t)v48);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, inited + 32);
    sub_25E681F18((uint64_t)v48, inited + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v44);
    swift_bridgeObjectRelease();
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v28[1])(&v42, v27, v28);
    uint64_t v29 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v29;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, a3);
    uint64_t v54 = type metadata accessor for Expression();
    uint64_t v55 = &protocol witness table for Expression<A>;
    uint64_t v51 = v18;
    uint64_t v52 = v17;
    uint64_t v53 = v19;
    uint64_t v30 = *(_UNKNOWN ***)(v40 + 8);
    uint64_t v49 = a3;
    uint64_t v50 = v30;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_1, v16, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v32 = v22;
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v51, v33 + 32);
    sub_25E681F18((uint64_t)v48, v33 + 72);
    uint64_t v44 = 32;
    *(void *)&long long v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v33, &v44);
    swift_bridgeObjectRelease();
    uint64_t v34 = v46;
    uint64_t v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    uint64_t v36 = v42;
    long long v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    uint64_t v47 = &protocol witness table for Expression<A>;
    uint64_t v44 = v36;
    long long v45 = v40;
    sub_25E680770(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
}

uint64_t !== infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t !== infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v37 = a5;
  uint64_t v8 = sub_25E6C2790();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  long long v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = a2[2];
  *(void *)&long long v36 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    uint64_t v21 = type metadata accessor for Expression();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    uint64_t v50 = v21;
    uint64_t v51 = &protocol witness table for Expression<A>;
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    ExpressionType<>.init(value:)((uint64_t)v12, v21, WitnessTable, v35, (uint64_t)v49);
    uint64_t v47 = v21;
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, inited + 32);
    sub_25E681F18((uint64_t)&v44, inited + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v40);
    swift_bridgeObjectRelease();
    uint64_t v24 = v42;
    uint64_t v25 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v25[1])(&v38, v24, v25);
    uint64_t v26 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v26;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    uint64_t v27 = *(_UNKNOWN ***)(v35 + 8);
    uint64_t v50 = a3;
    uint64_t v51 = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    uint64_t v47 = type metadata accessor for Expression();
    long long v48 = &protocol witness table for Expression<A>;
    uint64_t v44 = v34;
    uint64_t v45 = v36;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v49, v29 + 32);
    sub_25E681F18((uint64_t)&v44, v29 + 72);
    uint64_t v40 = 32;
    *(void *)&long long v41 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(v29, &v40);
    swift_bridgeObjectRelease();
    uint64_t v30 = v42;
    uint64_t v31 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v38, v30, v31);
    uint64_t v32 = v38;
    long long v36 = v39;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    long long v43 = &protocol witness table for Expression<A>;
    uint64_t v40 = v32;
    long long v41 = v36;
    sub_25E680770(&v40, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  long long v17;
  uint64_t v18;
  long long v19;
  uint64_t v20;
  long long v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  void v25[5];

  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  sub_25E6C2790();
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t > infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  long long v20;
  uint64_t v21;
  _UNKNOWN **v22;
  void v23[5];
  uint64_t v24[5];

  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_25E6C2790();
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  long long v17;
  uint64_t v18;
  long long v19;
  uint64_t v20;
  long long v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  void v25[5];

  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  sub_25E6C2790();
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t >= infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  long long v20;
  uint64_t v21;
  _UNKNOWN **v22;
  void v23[5];
  uint64_t v24[5];

  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_25E6C2790();
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  long long v17;
  uint64_t v18;
  long long v19;
  uint64_t v20;
  long long v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  void v25[5];

  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  sub_25E6C2790();
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t < infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  long long v20;
  uint64_t v21;
  _UNKNOWN **v22;
  void v23[5];
  uint64_t v24[5];

  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_25E6C2790();
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  sub_25E6C2790();
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  void v21[3] = type metadata accessor for Expression();
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = type metadata accessor for Expression();
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v6;
  v20[1] = v5;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void v20[5];
  void v21[3];
  uint64_t v22;
  _UNKNOWN **v23;

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_25E6C2790();
  uint64_t v22 = type metadata accessor for Expression();
  uint64_t v23 = &protocol witness table for Expression<A>;
  v21[0] = v2;
  v21[1] = v3;
  void v21[2] = v4;
  void v20[3] = v22;
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v5;
  v20[1] = v6;
  v20[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v21, inited + 32);
  sub_25E681F18((uint64_t)v20, inited + 72);
  uint64_t v16 = 32;
  *(void *)&long long v17 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_project_boxed_opaque_existential_1(&v16, v18);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v10[1])(&v14, v9, v10);
  uint64_t v11 = v14;
  long long v13 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v19 = &protocol witness table for Expression<A>;
  uint64_t v16 = v11;
  long long v17 = v13;
  sub_25E680770(&v16, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  long long v17;
  uint64_t v18;
  long long v19;
  uint64_t v20;
  long long v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  void v25[5];

  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  sub_25E6C2790();
  v25[3] = type metadata accessor for Expression();
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  uint64_t v10 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  sub_25E680770(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t <= infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  long long v20;
  uint64_t v21;
  _UNKNOWN **v22;
  void v23[5];
  uint64_t v24[5];

  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_25E6C2790();
  void v23[3] = type metadata accessor for Expression();
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v7;
  v23[1] = v6;
  _OWORD v23[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v24, inited + 32);
  sub_25E681F18((uint64_t)v23, inited + 72);
  uint64_t v19 = 32;
  *(void *)&long long v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v19);
  swift_bridgeObjectRelease();
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  uint64_t v14 = v17;
  long long v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v22 = &protocol witness table for Expression<A>;
  uint64_t v19 = v14;
  long long v20 = v16;
  sub_25E680770(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

void *_s11SwiftSQLite2teoiyAA10ExpressionVySbGSNyxG_ADyxGtSLRzAA5ValueRzSL8DatatypeAaHPRpzAahKRQlF_0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v15 = a1[2];
  sub_25E6C27D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(inited + 56) = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(inited + 64) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v10(a2, a3);
  sub_25E6C24C0();
  *(void *)(inited + 96) = AssociatedTypeWitness;
  *(void *)(inited + 104) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  v10(a2, a3);
  swift_bridgeObjectRetain();
  uint64_t result = sub_25E6866CC((void *)inited);
  *a4 = v7;
  a4[1] = v14;
  a4[2] = v15;
  return result;
}

void *_s11SwiftSQLite2teoiyAA10ExpressionVySbGSnyxG_ADyxGtSLRzAA5ValueRzSL8DatatypeAaHPRpzAahKRQlF_0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  sub_25E6C27D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3230;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(inited + 56) = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(inited + 64) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v10(a2, a3);
  swift_bridgeObjectRetain();
  sub_25E6866CC((void *)inited);
  uint64_t v13 = (void *)swift_bridgeObjectRetain();
  sub_25E6866CC(v13);
  uint64_t v14 = v8;
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_25E6C3230;
  sub_25E6C2720();
  *(void *)(v15 + 56) = AssociatedTypeWitness;
  *(void *)(v15 + 64) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v10(a2, a3);
  uint64_t result = sub_25E6866CC((void *)v15);
  *a4 = v18;
  a4[1] = v17;
  a4[2] = v14;
  return result;
}

void *~= infix<A>(_:_:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  return sub_25E6A3128(a1, a2, a3, a4);
}

{
  return sub_25E6A3128(a1, a2, a3, a4);
}

{
  return sub_25E6A3128(a1, a2, a3, a4);
}

{
  return sub_25E6A3128(a1, a2, a3, a4);
}

{
  return sub_25E6A3128(a1, a2, a3, a4);
}

{
  return sub_25E6A3128(a1, a2, a3, a4);
}

void *sub_25E6A3128@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v7 = a1[2];
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3230;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  *(void *)(inited + 56) = swift_getAssociatedTypeWitness();
  *(void *)(inited + 64) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v9(a2, a3);
  swift_bridgeObjectRetain();
  uint64_t result = sub_25E6866CC((void *)inited);
  *a4 = v11;
  a4[1] = v12;
  a4[2] = v7;
  return result;
}

uint64_t _s11SwiftSQLite3andyAA10ExpressionVySbGAEd_tF_0(uint64_t a1)
{
  uint64_t v1 = sub_25E6918E4(a1);
  uint64_t v9 = 32;
  *(void *)&long long v10 = 0xE100000000000000;
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(v1, &v9);
  swift_bridgeObjectRelease();
  uint64_t v2 = v11;
  uint64_t v3 = v12;
  __swift_project_boxed_opaque_existential_1(&v9, v11);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v3[1])(&v7, v2, v3);
  uint64_t v4 = v7;
  long long v6 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v12 = &protocol witness table for Expression<A>;
  uint64_t v9 = v4;
  long long v10 = v6;
  sub_25E680770(&v9, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  return swift_bridgeObjectRelease();
}

uint64_t && infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_25E6A37AC(a1, a2, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  long long v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  _UNKNOWN **v20;
  void v21[5];
  void v22[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  long long v6 = a2[1];
  uint64_t v7 = a2[2];
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  long long v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  void v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&uint64_t v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  long long v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  uint64_t v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  long long v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  uint64_t v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  long long v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  _UNKNOWN **v20;
  void v21[5];
  void v22[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  long long v6 = a2[1];
  uint64_t v7 = a2[2];
  long long v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v22[3] = v8;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  void v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&uint64_t v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  long long v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  uint64_t v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  long long v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  uint64_t v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  return sub_25E6A37AC(a1, a2, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A37AC(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v5;
  v25[1] = v6;
  v25[2] = v7;
  v24[3] = v11;
  v24[4] = &protocol witness table for Expression<A>;
  v24[0] = v8;
  v24[1] = v9;
  v24[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = v11;
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  a4(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t && infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_25E6A39D0(a1, a2, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E6A39D0(a1, a2, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A39D0(uint64_t *a1, char a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v6;
  v25[1] = v7;
  v25[2] = v8;
  v25[3] = v9;
  uint64_t v23 = MEMORY[0x263F8D4F8];
  uint64_t v24 = &protocol witness table for Bool;
  v22[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v22, inited + 72);
  uint64_t v18 = 32;
  *(void *)&long long v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v18);
  swift_bridgeObjectRelease();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  uint64_t v13 = v16;
  long long v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  uint64_t v20 = v9;
  long long v21 = &protocol witness table for Expression<A>;
  uint64_t v18 = v13;
  long long v19 = v15;
  a4(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t && infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_25E6A3BEC(a1, a2, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E6A3BEC(a1, a2, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A3BEC(char a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v23 = MEMORY[0x263F8D4F8];
  uint64_t v24 = &protocol witness table for Bool;
  v22[0] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  void v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v6;
  v21[1] = v5;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&long long v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  long long v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  uint64_t v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  long long v18 = v14;
  a4(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t _s11SwiftSQLite2oryAA10ExpressionVySbGAEd_tF_0(uint64_t a1)
{
  uint64_t v1 = sub_25E6918E4(a1);
  uint64_t v9 = 32;
  *(void *)&long long v10 = 0xE100000000000000;
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(v1, &v9);
  swift_bridgeObjectRelease();
  uint64_t v2 = v11;
  uint64_t v3 = v12;
  __swift_project_boxed_opaque_existential_1(&v9, v11);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v3[1])(&v7, v2, v3);
  uint64_t v4 = v7;
  long long v6 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v12 = &protocol witness table for Expression<A>;
  uint64_t v9 = v4;
  long long v10 = v6;
  sub_25E680770(&v9, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  return swift_bridgeObjectRelease();
}

uint64_t || infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_25E6A42F4(a1, a2, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  long long v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  _UNKNOWN **v20;
  void v21[5];
  void v22[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  long long v6 = a2[1];
  uint64_t v7 = a2[2];
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  long long v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  void v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&long long v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  long long v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  long long v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  uint64_t v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  long long v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  long long v14;
  uint64_t v15;
  long long v16;
  uint64_t v17;
  long long v18;
  uint64_t v19;
  _UNKNOWN **v20;
  void v21[5];
  void v22[5];

  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  long long v6 = a2[1];
  uint64_t v7 = a2[2];
  long long v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  v22[3] = v8;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  void v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&long long v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  long long v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  long long v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  uint64_t v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  long long v18 = v14;
  sub_25E680770(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  return sub_25E6A42F4(a1, a2, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A42F4(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v5;
  v25[1] = v6;
  v25[2] = v7;
  v24[3] = v11;
  v24[4] = &protocol witness table for Expression<A>;
  v24[0] = v8;
  v24[1] = v9;
  v24[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v24, inited + 72);
  uint64_t v20 = 32;
  *(void *)&long long v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v20);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  long long v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  uint64_t v15 = v18;
  long long v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  uint64_t v22 = v11;
  uint64_t v23 = &protocol witness table for Expression<A>;
  uint64_t v20 = v15;
  long long v21 = v17;
  a4(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t || infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_25E6A4514(a1, a2, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E6A4514(a1, a2, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A4514(uint64_t *a1, char a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v6;
  v25[1] = v7;
  v25[2] = v8;
  v25[3] = v9;
  uint64_t v23 = MEMORY[0x263F8D4F8];
  uint64_t v24 = &protocol witness table for Bool;
  v22[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v25, inited + 32);
  sub_25E681F18((uint64_t)v22, inited + 72);
  uint64_t v18 = 32;
  *(void *)&long long v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v18);
  swift_bridgeObjectRelease();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  uint64_t v13 = v16;
  long long v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  uint64_t v20 = v9;
  long long v21 = &protocol witness table for Expression<A>;
  uint64_t v18 = v13;
  long long v19 = v15;
  a4(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t || infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_25E6A472C(a1, a2, &qword_26B38E070, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

{
  return sub_25E6A472C(a1, a2, &qword_26B38E0C0, (void (*)(uint64_t *, void, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A472C(char a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, void, unint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v23 = MEMORY[0x263F8D4F8];
  uint64_t v24 = &protocol witness table for Bool;
  v22[0] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  void v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v6;
  v21[1] = v5;
  void v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E681F18((uint64_t)v22, inited + 32);
  sub_25E681F18((uint64_t)v21, inited + 72);
  uint64_t v17 = 32;
  *(void *)&long long v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  sub_25E6C25A0();
  sub_25E686E60(inited, &v17);
  swift_bridgeObjectRelease();
  uint64_t v10 = v19;
  uint64_t v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  uint64_t v12 = v15;
  long long v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  uint64_t v19 = v8;
  uint64_t v20 = &protocol witness table for Expression<A>;
  uint64_t v17 = v12;
  long long v18 = v14;
  a4(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t ! prefix(_:)(uint64_t *a1)
{
  return sub_25E6A4940(a1, &qword_26B38E070, (void (*)(void *, uint64_t, unint64_t))sub_25E680770);
}

{
  return sub_25E6A4940(a1, &qword_26B38E0C0, (void (*)(void *, uint64_t, unint64_t))sub_25E680770);
}

uint64_t sub_25E6A4940(uint64_t *a1, uint64_t *a2, void (*a3)(void *, uint64_t, unint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  void v8[3] = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8[4] = &protocol witness table for Expression<A>;
  v8[0] = v5;
  v8[1] = v4;
  v8[2] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v8, 542396238, 0xE400000000000000);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t Bool.datatypeValue.getter(char a1)
{
  return a1 & 1;
}

BOOL static Bool.fromDatatypeValue(_:)(uint64_t a1)
{
  return a1 != 0;
}

uint64_t static Double.declaredDatatype.getter()
{
  return 1279346002;
}

uint64_t sub_25E6A4A08()
{
  return 1279346002;
}

double sub_25E6A4A18@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

double sub_25E6A4A24@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t static Int64.declaredDatatype.getter()
{
  return 0x52454745544E49;
}

uint64_t sub_25E6A4A4C()
{
  return 0x52454745544E49;
}

uint64_t static String.declaredDatatype.getter()
{
  return 1415071060;
}

uint64_t static String.fromDatatypeValue(_:)(uint64_t a1)
{
  return a1;
}

uint64_t String.datatypeValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E6A4ADC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6A4AE8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t static Blob.declaredDatatype.getter()
{
  return 1112493122;
}

uint64_t static Blob.fromDatatypeValue(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t Blob.datatypeValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6A4B1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6A4B28@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t static Bool.declaredDatatype.getter()
{
  return sub_25E6A4BEC((uint64_t *)aInteger);
}

uint64_t static Bool.declaredDatatype.setter(uint64_t a1, uint64_t a2)
{
  return sub_25E6A4C50(a1, a2, aInteger, &qword_26A701778);
}

uint64_t (*static Bool.declaredDatatype.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_25E6A4BAC(uint64_t a1, uint64_t a2)
{
  return sub_25E6A4D48(a1, a2, (uint64_t *)aInteger);
}

void *sub_25E6A4BBC@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_25E6A4BD0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static Int.declaredDatatype.getter()
{
  return sub_25E6A4BEC((uint64_t *)aInteger_0);
}

uint64_t sub_25E6A4BEC(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static Int.declaredDatatype.setter(uint64_t a1, uint64_t a2)
{
  return sub_25E6A4C50(a1, a2, aInteger_0, &qword_26B38E068);
}

uint64_t sub_25E6A4C50(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Int.declaredDatatype.modify())()
{
  return j_j__swift_endAccess;
}

_UNKNOWN **sub_25E6A4D08()
{
  return &protocol witness table for Double;
}

_UNKNOWN **sub_25E6A4D14()
{
  return &protocol witness table for Int64;
}

_UNKNOWN **sub_25E6A4D20()
{
  return &protocol witness table for String;
}

_UNKNOWN **sub_25E6A4D2C()
{
  return &protocol witness table for Blob;
}

uint64_t sub_25E6A4D38(uint64_t a1, uint64_t a2)
{
  return sub_25E6A4D48(a1, a2, (uint64_t *)aInteger_0);
}

uint64_t sub_25E6A4D48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t v4 = *a3;
  swift_bridgeObjectRetain();
  return v4;
}

void *sub_25E6A4DA0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_25E6A4DAC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t dispatch thunk of static Value.declaredDatatype.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static Value.fromDatatypeValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Value.datatypeValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void Connection.createFunction(_:argumentCount:deterministic:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  if ((a4 & 1) == 0)
  {
    uint64_t v13 = a3;
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v13 = -1;
LABEL_5:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a6;
  *(void *)(v14 + 24) = a7;
  aBlock[4] = sub_25E6A8020;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E6A8220;
  aBlock[3] = &block_descriptor;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  if (a5) {
    int v16 = 2049;
  }
  else {
    int v16 = 1;
  }
  swift_beginAccess();
  uint64_t v17 = *(sqlite3 **)(v7 + 16);
  if (!v17) {
    goto LABEL_20;
  }
  if (v13 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  uint64_t v18 = sub_25E6C2550();
  sqlite3_create_function_v2(v17, (const char *)(v18 + 32), v13, v16, v15, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_25E6A82A8, 0, 0, 0);
  swift_release();
  uint64_t v19 = (uint64_t *)(v7 + 72);
  swift_beginAccess();
  if (*(void *)(*(void *)(v7 + 72) + 16))
  {
    swift_bridgeObjectRetain();
    sub_25E6A8B4C(a1, a2);
    if (v20)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  unint64_t v21 = sub_25E6A98BC(MEMORY[0x263F8EE78]);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = *v19;
  *uint64_t v19 = 0x8000000000000000;
  sub_25E6A93E8(v21, a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v19 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_15:
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_25E6A8300(aBlock, a1, a2);
  if (*v23)
  {
    uint64_t v25 = v23;
    _Block_copy(v15);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    sub_25E6A92C0((uint64_t)v15, v13, v26);
    *uint64_t v25 = v27;
    swift_bridgeObjectRelease();
    ((void (*)(void *, void))v24)(aBlock, 0);
    swift_endAccess();
    _Block_release(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    ((void (*)(void *, void))v24)(aBlock, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    _Block_release(v15);
  }
}

uint64_t Connection.handle.getter()
{
  swift_beginAccess();
  uint64_t result = *(void *)(v0 + 16);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E6A5180@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  switch(result)
  {
    case 9:
      char v2 = 2;
      goto LABEL_7;
    case 0x12:
      char v2 = 0;
LABEL_7:
      *a2 = v2;
      return result;
    case 0x17:
      char v2 = 1;
      goto LABEL_7;
  }
  sub_25E6C27D0();
  swift_bridgeObjectRelease();
  sub_25E6C2900();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25E6C2880();
  __break(1u);
  return result;
}

BOOL static Connection.Operation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Connection.Operation.hash(into:)()
{
  return sub_25E6C2A10();
}

uint64_t Connection.Operation.hashValue.getter()
{
  return sub_25E6C2A20();
}

BOOL sub_25E6A5300(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Connection.__allocating_init(_:readonly:)(void *a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  Connection.init(_:readonly:)(a1, a2);
  return v4;
}

sqlite3 *Connection.init(_:readonly:)(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v28 = a2;
  uint64_t v5 = sub_25E6C2760();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v23 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25E6C2470();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_25E6C2730();
  MEMORY[0x270FA5388](v8);
  v22[3] = *a1;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  uint64_t v9 = (sqlite3 **)(v2 + 16);
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v10 = MEMORY[0x263F8EE80];
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = v10;
  *(void *)(v2 + 80) = v10;
  v22[2] = sub_25E696400();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_25E6A99AC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E110);
  sub_25E6A9A04();
  sub_25E6C27A0();
  sub_25E6C2460();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x263F8F130], v25);
  *(void *)(v2 + 88) = sub_25E6C2780();
  *(void *)(v2 + 96) = 0;
  *(unsigned char *)(v2 + 104) = 1;
  if (v28) {
    int v11 = 65537;
  }
  else {
    int v11 = 65542;
  }
  uint64_t v12 = sub_25E6C2550();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unsigned int v13 = sqlite3_open_v2((const char *)(v12 + 32), v9, v11, 0);
  swift_endAccess();
  swift_release();
  uint64_t v14 = qword_26B38E100;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  if (sub_25E6950B4(v13, (uint64_t)off_26B38E0F8))
  {
    swift_release();
    uint64_t v15 = qword_26B38E1E0;
    id v16 = *(id *)(v3 + 88);
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_25E6A57E4();
    char v27 = 0;
    sub_25E6C2750();

    return (sqlite3 *)v3;
  }
  uint64_t result = *v9;
  if (*v9)
  {
    uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      uint64_t v18 = sub_25E6C25B0();
      uint64_t v20 = v19;
      swift_release();
      sub_25E69645C();
      swift_allocError();
      *(void *)uint64_t v21 = v18;
      *(void *)(v21 + 8) = v20;
      *(_DWORD *)(v21 + 16) = v13;
      *(void *)(v21 + 24) = 0;
      swift_willThrow();
      swift_release();
      return (sqlite3 *)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Connection.Location.description.getter()
{
  unint64_t v1 = v0[1];
  if (v1 == 1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *v0;
  }
  if (v1) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x3A79726F6D656D3ALL;
  }
  sub_25E6A9A60(*v0, v1);
  return v3;
}

uint64_t sub_25E6A57E4()
{
  uint64_t result = v0;
  if (*(unsigned char *)(v0 + 104) != 1) {
    return *(void *)(v0 + 96);
  }
  *(void *)(v0 + 96) = v0;
  *(unsigned char *)(v0 + 104) = 0;
  return result;
}

uint64_t Connection.__allocating_init(_:readonly:)(uint64_t a1, uint64_t a2, int a3)
{
  v6[1] = a2;
  v6[0] = a1;
  uint64_t v4 = swift_allocObject();
  Connection.init(_:readonly:)(v6, a3);
  return v4;
}

sqlite3 *Connection.deinit()
{
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v0 + 16);
  if (result)
  {
    sqlite3_close(result);
    _Block_release(*(const void **)(v0 + 32));
    _Block_release(*(const void **)(v0 + 40));
    _Block_release(*(const void **)(v0 + 48));
    _Block_release(*(const void **)(v0 + 56));
    _Block_release(*(const void **)(v0 + 64));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (sqlite3 *)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Connection.__deallocating_deinit()
{
  Connection.deinit();
  return swift_deallocClassInstance();
}

sqlite3 *Connection.readonly.getter()
{
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v0 + 16);
  if (result) {
    return (sqlite3 *)(sqlite3_db_readonly(result, 0) == 1);
  }
  __break(1u);
  return result;
}

sqlite3 *Connection.lastInsertRowid.getter()
{
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v0 + 16);
  if (result) {
    return (sqlite3 *)sqlite3_last_insert_rowid(result);
  }
  __break(1u);
  return result;
}

uint64_t Connection.changes.getter()
{
  return sub_25E6A59DC(MEMORY[0x263F8C7A0]);
}

uint64_t Connection.totalChanges.getter()
{
  return sub_25E6A59DC(MEMORY[0x263F8C7E0]);
}

uint64_t sub_25E6A59DC(int (*a1)(void))
{
  swift_beginAccess();
  uint64_t result = *(void *)(v1 + 16);
  if (result) {
    return a1();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.execute(_:)(Swift::String a1)
{
  sub_25E696400();
  if (qword_26B38E1E0 != -1) {
    swift_once();
  }
  sub_25E6C2740();
  uint64_t v2 = sub_25E6A57E4();
  if ((v14 & 1) != 0 || v13 != v2)
  {
    id v8 = *(id *)(v1 + 88);
    sub_25E6C2770();

    return;
  }
  uint64_t v3 = (sqlite3 **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(sqlite3 **)(v1 + 16);
  if (!v4)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = sub_25E6C2550();
  unsigned int v6 = sqlite3_exec(v4, (const char *)(v5 + 32), 0, 0, 0);
  swift_release();
  uint64_t v7 = qword_26B38E100;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  if (sub_25E6950B4(v6, (uint64_t)off_26B38E0F8))
  {
    swift_release();
    return;
  }
  if (!*v3) {
    goto LABEL_15;
  }
  if (sqlite3_errmsg(*v3))
  {
    uint64_t v9 = sub_25E6C25B0();
    uint64_t v11 = v10;
    swift_release();
    sub_25E69645C();
    swift_allocError();
    *(void *)uint64_t v12 = v9;
    *(void *)(v12 + 8) = v11;
    *(_DWORD *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = 0;
    swift_willThrow();
    return;
  }
LABEL_16:
  __break(1u);
}

sqlite3 *sub_25E6A5C44@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X8>)
{
  uint64_t v4 = (sqlite3 **)(a1 + 16);
  uint64_t result = (sqlite3 *)swift_beginAccess();
  unsigned int v6 = *(sqlite3 **)(a1 + 16);
  if (!v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = sub_25E6C2550();
  unsigned int v8 = sqlite3_exec(v6, (const char *)(v7 + 32), 0, 0, 0);
  swift_release();
  uint64_t v9 = qword_26B38E100;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  if (sub_25E6950B4(v8, (uint64_t)off_26B38E0F8))
  {
    uint64_t result = (sqlite3 *)swift_release();
    *a2 = v8;
    return result;
  }
  uint64_t result = *v4;
  if (!*v4) {
    goto LABEL_10;
  }
  uint64_t result = (sqlite3 *)sqlite3_errmsg(result);
  if (result)
  {
    uint64_t v10 = sub_25E6C25B0();
    uint64_t v12 = v11;
    swift_release();
    sub_25E69645C();
    swift_allocError();
    *(void *)uint64_t v13 = v10;
    *(void *)(v13 + 8) = v12;
    *(_DWORD *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = 0;
    return (sqlite3 *)swift_willThrow();
  }
LABEL_11:
  __break(1u);
  return result;
}

sqlite3 *Connection.prepare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_25E692708(v3);
  if (v6 && !v4)
  {
    uint64_t v8 = sub_25E696210(a3);
    swift_retain();
    swift_release();
    return (sqlite3 *)v8;
  }
  return v7;
}

{
  uint64_t v3;
  uint64_t v4;
  sqlite3 *result;
  uint64_t v7;

  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25E692708(v3);
  if (!v4)
  {
    uint64_t v7 = Statement.bind(_:)(a3);
    swift_release();
    return (sqlite3 *)v7;
  }
  return result;
}

uint64_t Connection.prepare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v3);
  if (!v4)
  {
    a2 = sub_25E696210(a3);
    swift_retain();
    swift_release();
  }
  return a2;
}

sqlite3 *Connection.run(_:_:)(uint64_t a1, uint64_t a2, sqlite3 *a3)
{
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v3);
  if (!v4)
  {
    a3 = Statement.run(_:)((uint64_t)a3);
    swift_release();
  }
  return a3;
}

uint64_t (*Connection.run(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  return sub_25E6A60BC(a1, a2, a3, (uint64_t (*)(uint64_t))Statement.run(_:));
}

{
  return sub_25E6A60BC(a1, a2, a3, (uint64_t (*)(uint64_t))Statement.run(_:));
}

uint64_t (*sub_25E6A60BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t)))(uint64_t)
{
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v4);
  if (!v5)
  {
    a4 = (uint64_t (*)(uint64_t))a4(a3);
    swift_release();
  }
  return a4;
}

sqlite3 *Connection.vacuum()()
{
  type metadata accessor for Statement();
  swift_allocObject();
  uint64_t v2 = swift_retain();
  sub_25E692708(v2);
  if (!v0)
  {
    uint64_t v1 = Statement.run(_:)(MEMORY[0x263F8EE78]);
    swift_release();
  }
  return v1;
}

sqlite3 *Connection.scalar(_:_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v10[14] = *MEMORY[0x263EF8340];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25E692708(v2);
  if (!v3)
  {
    uint64_t v7 = sub_25E696210(a1);
    swift_beginAccess();
    uint64_t v8 = *(sqlite3_stmt **)(v7 + 16);
    swift_retain();
    sqlite3_reset(v8);
    Statement.step()();
    if (!v9)
    {
      Statement.row.getter(v10);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  sqlite3 *result;
  uint64_t v7;
  sqlite3_stmt *v8;
  uint64_t v9;
  void v10[15];

  v10[14] = *MEMORY[0x263EF8340];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25E692708(v2);
  if (!v3)
  {
    uint64_t v7 = sub_25E696210(a1);
    swift_beginAccess();
    uint64_t v8 = *(sqlite3_stmt **)(v7 + 16);
    swift_retain();
    sqlite3_reset(v8);
    Statement.step()();
    if (!v9)
    {
      Statement.row.getter(v10);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  sqlite3 *result;
  uint64_t v7;
  uint64_t v8;
  void v9[15];

  v9[14] = *MEMORY[0x263EF8340];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_25E692708(v2);
  if (!v3)
  {
    uint64_t v7 = Statement.bind(_:)(a1);
    swift_beginAccess();
    sqlite3_reset(*(sqlite3_stmt **)(v7 + 16));
    Statement.step()();
    if (!v8)
    {
      Statement.row.getter(v9);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

SwiftSQLite::Connection::TransactionMode_optional __swiftcall Connection.TransactionMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25E6C28C0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Connection.TransactionMode.rawValue.getter()
{
  uint64_t v1 = 0x54414944454D4D49;
  if (*v0 != 1) {
    uint64_t v1 = 0x564953554C435845;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4445525245464544;
  }
}

uint64_t sub_25E6A6684(char *a1, unsigned __int8 *a2)
{
  return sub_25E6B21F8(*a1, *a2);
}

uint64_t sub_25E6A6690()
{
  return sub_25E6C2A20();
}

uint64_t sub_25E6A673C()
{
  sub_25E6C2570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6A67D4()
{
  return sub_25E6C2A20();
}

SwiftSQLite::Connection::TransactionMode_optional sub_25E6A687C(Swift::String *a1)
{
  return Connection.TransactionMode.init(rawValue:)(*a1);
}

void sub_25E6A6888(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = 0x54414944454D4D49;
  if (v2 != 1) {
    uint64_t v4 = 0x564953554C435845;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x4445525245464544;
  }
  if (!v5) {
    unint64_t v3 = 0xE900000000000045;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t Connection.transaction(_:block:)(uint64_t a1, void (*a2)(uint64_t))
{
  return swift_bridgeObjectRelease();
}

void sub_25E6A6A5C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_25E696400();
  if (qword_26B38E1E0 != -1) {
    swift_once();
  }
  sub_25E6C2740();
  uint64_t v7 = sub_25E6A57E4();
  if ((v10 & 1) != 0 || v9 != v7)
  {
    id v8 = *(id *)(v3 + 88);
    sub_25E6C2770();
  }
  else
  {
    sub_25E6A6D68(v3, a1, a2, a3);
  }
}

uint64_t Connection.savepoint(_:block:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return swift_bridgeObjectRelease();
}

sqlite3 *sub_25E6A6D68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  SwiftSQLite::Connection::TransactionMode_optional result = sub_25E692708(a1);
  if (!v4)
  {
    Statement.run(_:)(MEMORY[0x263F8EE78]);
    swift_release();
    uint64_t v8 = swift_release();
    a4(v8);
    swift_initStackObject();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25E692708(a1);
    Statement.run(_:)(MEMORY[0x263F8EE78]);
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

Swift::Void __swiftcall Connection.interrupt()()
{
  swift_beginAccess();
  uint64_t v1 = *(sqlite3 **)(v0 + 16);
  if (v1) {
    sqlite3_interrupt(v1);
  }
  else {
    __break(1u);
  }
}

double Connection.busyTimeout.getter()
{
  swift_beginAccess();
  return *(double *)(v0 + 24);
}

sqlite3 *Connection.busyTimeout.setter(double a1)
{
  swift_beginAccess();
  *(double *)(v1 + 24) = a1;
  swift_beginAccess();
  SwiftSQLite::Connection::TransactionMode_optional result = *(sqlite3 **)(v1 + 16);
  if (!result) {
    goto LABEL_9;
  }
  double v4 = a1 * 1000.0;
  if ((~COERCE__INT64(a1 * 1000.0) & 0x7FF0000000000000) != 0)
  {
    if (v4 > -2147483650.0)
    {
      if (v4 < 2147483650.0) {
        return (sqlite3 *)sqlite3_busy_timeout(result, (int)v4);
      }
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

sqlite3 *(*Connection.busyTimeout.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_25E6A7124;
}

sqlite3 *sub_25E6A7124(uint64_t a1, char a2)
{
  SwiftSQLite::Connection::TransactionMode_optional result = (sqlite3 *)swift_endAccess();
  if (a2) {
    return result;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  SwiftSQLite::Connection::TransactionMode_optional result = *(sqlite3 **)(v5 + 16);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  double v6 = *(double *)(*(void *)(a1 + 24) + 24) * 1000.0;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v6 <= -2147483650.0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v6 >= 2147483650.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  return (sqlite3 *)sqlite3_busy_timeout(result, (int)v6);
}

void Connection.busyHandler(_:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    v10[4] = sub_25E6A9A94;
    v10[5] = v5;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_25E6A7350;
    void v10[3] = &block_descriptor_6;
    double v6 = _Block_copy(v10);
    sub_25E6A9ACC(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    uint64_t v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_busy_handler(v7, (int (__cdecl *)(void *, int))sub_25E6A73A0, v6);
      sub_25E6A9ADC(a1);
      uint64_t v8 = *(const void **)(v2 + 32);
      *(void *)(v2 + 32) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_busy_handler(v9, 0, 0);
      uint64_t v8 = *(const void **)(v2 + 32);
      *(void *)(v2 + 32) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_25E6A7350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v4 = v3(a2);
  swift_release();
  return v4;
}

uint64_t sub_25E6A73A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_25E6A73B0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    v10[4] = sub_25E6AA2F8;
    v10[5] = v5;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_25E6A751C;
    void v10[3] = &block_descriptor_48;
    double v6 = _Block_copy(v10);
    sub_25E6A9ACC(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    uint64_t v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_trace_v2(v7, 1u, (int (__cdecl *)(unsigned int, void *, void *, void *))sub_25E6A7570, v6);
      sub_25E6A9ADC(a1);
      uint64_t v8 = *(const void **)(v2 + 40);
      *(void *)(v2 + 40) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_trace_v2(v9, 0, 0, 0);
      uint64_t v8 = *(const void **)(v2 + 40);
      *(void *)(v2 + 40) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_25E6A751C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_25E6A7570(int a1, uint64_t a2, sqlite3_stmt *pStmt)
{
  if (pStmt)
  {
    uint64_t v4 = sqlite3_expanded_sql(pStmt);
    if (v4)
    {
      uint64_t v5 = v4;
      (*(void (**)(uint64_t, char *))(a2 + 16))(a2, v4);
      sqlite3_free(v5);
    }
  }
  return 0;
}

void Connection.updateHook(_:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    v10[4] = sub_25E6A9AC4;
    v10[5] = v5;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_25E6A77D4;
    void v10[3] = &block_descriptor_12;
    double v6 = _Block_copy(v10);
    sub_25E6A9ACC(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    uint64_t v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_update_hook(v7, (void (__cdecl *)(void *, int, const char *, const char *, sqlite3_int64))sub_25E6A784C, v6);
      sub_25E6A9ADC(a1);
      uint64_t v8 = *(const void **)(v2 + 48);
      *(void *)(v2 + 48) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_update_hook(v9, 0, 0);
      uint64_t v8 = *(const void **)(v2 + 48);
      *(void *)(v2 + 48) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_25E6A772C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_25E6A5180(a1, &v13);
  uint64_t v7 = sub_25E6C25B0();
  uint64_t v9 = v8;
  uint64_t v10 = sub_25E6C25B0();
  a5(&v13, v7, v9, v10, v11, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6A77D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  return swift_release();
}

uint64_t sub_25E6A784C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    if (a4) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void Connection.commitHook(_:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    v10[4] = sub_25E6A9AEC;
    v10[5] = v5;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_25E6A79CC;
    void v10[3] = &block_descriptor_18;
    double v6 = _Block_copy(v10);
    sub_25E6A9ACC(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    uint64_t v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_commit_hook(v7, (int (__cdecl *)(void *))sub_25E6A7A0C, v6);
      sub_25E6A9ADC(a1);
      uint64_t v8 = *(const void **)(v2 + 56);
      *(void *)(v2 + 56) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_commit_hook(v9, 0, 0);
      uint64_t v8 = *(const void **)(v2 + 56);
      *(void *)(v2 + 56) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_25E6A79CC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_25E6A7A0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void Connection.rollbackHook(_:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    v10[4] = sub_25E6A9B40;
    v10[5] = v5;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_25E6A7B7C;
    void v10[3] = &block_descriptor_24;
    double v6 = _Block_copy(v10);
    sub_25E6A9ACC(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    uint64_t v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_rollback_hook(v7, (void (__cdecl *)(void *))sub_25E6A7BC0, v6);
      sub_25E6A9ADC(a1);
      uint64_t v8 = *(const void **)(v2 + 64);
      *(void *)(v2 + 64) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_rollback_hook(v9, 0, 0);
      uint64_t v8 = *(const void **)(v2 + 64);
      *(void *)(v2 + 64) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_25E6A7B7C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_25E6A7BC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_25E6A7BCC(uint64_t a1, int a2, uint64_t a3, void (*a4)(void *__return_ptr, void), int a5)
{
  void (*v19)(void *__return_ptr, void);
  sqlite3_int64 v21[7];
  void v22[3];
  uint64_t v23;
  void v24[6];

  if (a2 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = a1;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (a2)
  {
    uint64_t v19 = a4;
    uint64_t v10 = a2;
    v22[0] = MEMORY[0x263F8EE78];
    double v6 = v22;
    sub_25E68B64C(0, a2, 0);
    sqlite3_int64 v11 = 0;
    uint64_t v8 = v22[0];
    uint64_t v5 = 40;
    while (v10 != v11)
    {
      v21[0] = v11;
      sub_25E6A8028(v21, a3, (uint64_t)v24);
      v22[0] = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        double v6 = v22;
        sub_25E68B64C((void *)(v12 > 1), v13 + 1, 1);
        uint64_t v8 = v22[0];
      }
      ++v11;
      *(void *)(v8 + 16) = v13 + 1;
      sub_25E691CAC((uint64_t)v24, v8 + 40 * v13 + 32);
      if (v10 == v11)
      {
        a4 = v19;
        uint64_t v5 = a1;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_9:
  LODWORD(v6) = a5;
  a4(v24, v8);
  swift_bridgeObjectRelease();
  sub_25E687934((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      LODWORD(v6) = v21[0];
      unint64_t v14 = *(void *)(v21[0] + 16);
      if (!(v14 >> 31))
      {
        sqlite3_result_blob((sqlite3_context *)v5, (const void *)(v21[0] + 32), v14, 0);
        sub_25E68799C((uint64_t)v24);
        return swift_bridgeObjectRelease();
      }
      goto LABEL_34;
    }
  }
  else
  {
    sub_25E68799C((uint64_t)v22);
  }
  sub_25E687934((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      sqlite3_result_double((sqlite3_context *)v5, *(double *)v21);
      return sub_25E68799C((uint64_t)v24);
    }
  }
  else
  {
    sub_25E68799C((uint64_t)v22);
  }
  sub_25E687934((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      sqlite3_result_int64((sqlite3_context *)v5, v21[0]);
      return sub_25E68799C((uint64_t)v24);
    }
  }
  else
  {
    sub_25E68799C((uint64_t)v22);
  }
  sub_25E687934((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E078);
    if (swift_dynamicCast())
    {
      uint64_t v16 = sub_25E6C2580();
      if (v16 >= (uint64_t)0xFFFFFFFF80000000)
      {
        LODWORD(v6) = v16;
        if (v16 <= 0x7FFFFFFF)
        {
          if (qword_26B38E0D0 == -1)
          {
LABEL_27:
            uint64_t v17 = (void (__cdecl *)(void *))qword_26B38EA00;
            uint64_t v18 = sub_25E6C2550();
            swift_bridgeObjectRelease();
            sqlite3_result_text((sqlite3_context *)v5, (const char *)(v18 + 32), (int)v6, v17);
            sub_25E68799C((uint64_t)v24);
            return swift_release();
          }
LABEL_37:
          swift_once();
          goto LABEL_27;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    sub_25E68799C((uint64_t)v22);
  }
  if (!v24[3])
  {
    sqlite3_result_null((sqlite3_context *)v5);
    return sub_25E68799C((uint64_t)v24);
  }
  sub_25E687934((uint64_t)v24, (uint64_t)v22);
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_25E6C27D0();
  swift_bridgeObjectRelease();
  void v21[5] = 0xD000000000000019;
  v21[6] = 0x800000025E6C4AD0;
  sub_25E687934((uint64_t)v22, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  sub_25E6C2530();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25E6C2880();
  __break(1u);
  return result;
}

uint64_t sub_25E6A7FE8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E6A8020(uint64_t a1, int a2, uint64_t a3)
{
  return sub_25E6A7BCC(a1, a2, a3, *(void (**)(void *__return_ptr, void))(v3 + 16), *(void *)(v3 + 24));
}

void sub_25E6A8028(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!a2)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    sub_25E6C27D0();
    swift_bridgeObjectRelease();
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C2880();
    __break(1u);
    JUMPOUT(0x25E6A820CLL);
  }
  uint64_t v4 = *(sqlite3_value **)(a2 + 8 * *a1);
  switch(sqlite3_value_type(v4))
  {
    case 1:
      sqlite3_int64 v5 = sqlite3_value_int64(v4);
      *(void *)(a3 + 24) = MEMORY[0x263F8E5C0];
      *(void *)(a3 + 32) = &protocol witness table for Int64;
      goto LABEL_10;
    case 2:
      double v8 = sqlite3_value_double(v4);
      *(void *)(a3 + 24) = MEMORY[0x263F8D538];
      *(void *)(a3 + 32) = &protocol witness table for Double;
      *(double *)a3 = v8;
      return;
    case 3:
      if (!sqlite3_value_text(v4)) {
        goto LABEL_13;
      }
      uint64_t v6 = sub_25E6C25C0();
      *(void *)(a3 + 24) = MEMORY[0x263F8D310];
      *(void *)(a3 + 32) = &protocol witness table for String;
      *(void *)a3 = v6;
      *(void *)(a3 + 8) = v7;
      break;
    case 4:
      uint64_t v9 = sqlite3_value_blob(v4);
      if (!v9) {
        goto LABEL_14;
      }
      uint64_t v10 = v9;
      int v11 = sqlite3_value_bytes(v4);
      *(void *)(a3 + 24) = &type metadata for Blob;
      *(void *)(a3 + 32) = &protocol witness table for Blob;
      sqlite3_int64 v5 = (sqlite3_int64)sub_25E6888C4(v10, v11);
LABEL_10:
      *(void *)a3 = v5;
      break;
    case 5:
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    default:
      goto LABEL_15;
  }
}

uint64_t sub_25E6A8220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v7(a2, a3, a4);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25E6A82A8(sqlite3_context *a1)
{
  uint64_t v1 = (uint64_t (*)(void))*((void *)sqlite3_user_data(a1) + 2);
  return v1();
}

void (*sub_25E6A8300(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  uint64_t v6[5] = sub_25E6A8BC4(v6, a2, a3);
  return sub_25E6A8380;
}

void sub_25E6A8380(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

void Connection.createCollation(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  aBlock[4] = sub_25E6A9B68;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E6A86FC;
  aBlock[3] = &block_descriptor_30;
  int v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unint64_t v12 = (sqlite3 **)(v5 + 16);
  swift_beginAccess();
  unint64_t v13 = *(sqlite3 **)(v5 + 16);
  if (!v13)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = sub_25E6C2550();
  collation_uint64_t v2 = sqlite3_create_collation_v2(v13, (const char *)(v14 + 32), 1, v11, (int (__cdecl *)(void *, int, const void *, int, const void *))sub_25E6A8758, 0);
  swift_release();
  uint64_t v16 = qword_26B38E100;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  if (sub_25E6950B4(collation_v2, (uint64_t)off_26B38E0F8))
  {
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    _Block_copy(v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *(void *)(v5 + 80);
    *(void *)(v5 + 80) = 0x8000000000000000;
    sub_25E6A9528((uint64_t)v11, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v5 + 80) = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_9:
    _Block_release(v11);
    return;
  }
  if (!*v12) {
    goto LABEL_11;
  }
  if (sqlite3_errmsg(*v12))
  {
    uint64_t v18 = sub_25E6C25B0();
    uint64_t v20 = v19;
    swift_release();
    sub_25E69645C();
    swift_allocError();
    *(void *)uint64_t v21 = v18;
    *(void *)(v21 + 8) = v20;
    *(_DWORD *)(v21 + 16) = collation_v2;
    *(void *)(v21 + 24) = 0;
    swift_willThrow();
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_25E6A865C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_25E6C25C0();
  uint64_t v6 = v5;
  uint64_t v7 = sub_25E6C25C0();
  uint64_t v9 = a3(v4, v6, v7, v8);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v9 <= 0x7FFFFFFF)
  {
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E6A86FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v6 = v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_25E6A8758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 && a5)
  {
    uint64_t v5 = *(uint64_t (**)(void))(a1 + 16);
    return v5();
  }
  else
  {
    uint64_t result = sub_25E6C2880();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E6A87E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E108);
  swift_allocObject();
  uint64_t result = sub_25E6C2450();
  qword_26B38E1D8 = result;
  return result;
}

sqlite3 *Connection.description.getter()
{
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v0 + 16);
  if (result)
  {
    uint64_t result = (sqlite3 *)sqlite3_db_filename(result, 0);
    if (result) {
      return (sqlite3 *)sub_25E6C25B0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

sqlite3 *sub_25E6A887C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t result = *(sqlite3 **)(v1 + 16);
  if (result)
  {
    uint64_t result = (sqlite3 *)sqlite3_db_filename(result, 0);
    if (result) {
      return (sqlite3 *)sub_25E6C25B0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E6A88D8()
{
  unint64_t v1 = v0[1];
  if (v1 == 1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *v0;
  }
  if (v1) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x3A79726F6D656D3ALL;
  }
  sub_25E6A9A60(*v0, v1);
  return v3;
}

void *sub_25E6A8934()
{
  uint64_t result = (void *)sub_25E6A979C((uint64_t)&unk_270B400E0);
  off_26B38E0F8 = result;
  return result;
}

const char *Result.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[3];
  if (v2)
  {
    swift_retain_n();
    sub_25E6C27D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    swift_beginAccess();
    uint64_t result = sqlite3_sql(*(sqlite3_stmt **)(v2 + 16));
    if (result)
    {
      sub_25E6C25B0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C25A0();
      sub_25E6C2900();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C25A0();
      swift_release_n();
      return (const char *)v1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v4 = *v0;
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    return (const char *)v4;
  }
  return result;
}

unint64_t sub_25E6A8B08(uint64_t a1)
{
  uint64_t v2 = sub_25E6C29F0();
  return sub_25E6A8F68(a1, v2);
}

unint64_t sub_25E6A8B4C(uint64_t a1, uint64_t a2)
{
  sub_25E6C2A00();
  sub_25E6C2570();
  uint64_t v4 = sub_25E6C2A20();
  return sub_25E6A9004(a1, a2, v4);
}

void (*sub_25E6A8BC4(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_25E6A8E7C(v6);
  v6[10] = sub_25E6A8CE4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_25E6A8C70;
}

void sub_25E6A8C70(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_25E6A8CE4(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  void v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_25E6A8B4C(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *uint64_t v10 = v19;
        return sub_25E6A8E2C;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_25E6BFAA8();
      goto LABEL_7;
    }
    sub_25E6BEFC8(v16, a4 & 1);
    unint64_t v20 = sub_25E6A8B4C(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_25E6C2990();
  __break(1u);
  return result;
}

void sub_25E6A8E2C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_25E6A8EB8(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_25E6A8E7C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_25E6A8EAC;
}

uint64_t sub_25E6A8EAC(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_25E6A8EB8(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_25E6C0010(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_25E6A90E8(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_25E6A8F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_25E6A9004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25E6C2910() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25E6C2910() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25E6A90E8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25E6C27B0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25E6C2A00();
        swift_bridgeObjectRetain();
        sub_25E6C2570();
        uint64_t v9 = sub_25E6C2A20();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          BOOL v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *BOOL v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    char v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    char v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *char v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_25E6A92C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25E6A8B08(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      _Block_release(*(const void **)(v17 + 8 * v10));
      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_25E6BF904();
    goto LABEL_7;
  }
  sub_25E6BED10(v13, a3 & 1);
  unint64_t v18 = sub_25E6A8B08(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_15:
    sub_25E6C2990();
    __break(1u);
    return;
  }
  unint64_t v10 = v18;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25E6BFFC8(v10, a2, a1, v16);
}

uint64_t sub_25E6A93E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25E6A8B4C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25E6BFAA8();
    goto LABEL_7;
  }
  sub_25E6BEFC8(v15, a4 & 1);
  unint64_t v21 = sub_25E6A8B4C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_25E6C2990();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25E6C0010(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_25E6A9528(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25E6A8B4C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      _Block_release(*(const void **)(v19 + 8 * v12));
      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25E6BFC60();
    goto LABEL_7;
  }
  sub_25E6BF2E0(v15, a4 & 1);
  unint64_t v20 = sub_25E6A8B4C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_25E6C2990();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25E6C0010(v12, a2, a3, a1, v18);
  swift_bridgeObjectRetain();
}

uint64_t sub_25E6A9668(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_25E6A8B4C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25E6BFE18();
    goto LABEL_7;
  }
  sub_25E6BF5F8(result, a4 & 1);
  uint64_t result = sub_25E6A8B4C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_25E6C2990();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25E6C0010(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6A979C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E130);
    uint64_t v3 = sub_25E6C27C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = *(void *)(v3 + 40);
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      unsigned int v9 = *(_DWORD *)(v6 + 4 * v4);
      uint64_t result = MEMORY[0x2611E0360](v7, v9, 4);
      unint64_t v11 = result & v8;
      unint64_t v12 = (result & (unint64_t)v8) >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * v12);
      uint64_t v14 = 1 << (result & v8);
      uint64_t v15 = *(void *)(v3 + 48);
      if ((v14 & v13) != 0)
      {
        while (*(_DWORD *)(v15 + 4 * v11) != v9)
        {
          unint64_t v11 = (v11 + 1) & v8;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v12) = v14 | v13;
        *(_DWORD *)(v15 + 4 * v11) = v9;
        uint64_t v16 = *(void *)(v3 + 16);
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v18;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_25E6A98BC(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A701790);
  uint64_t v3 = (void *)sub_25E6C28B0();
  uint64_t v5 = a1[4];
  uint64_t v4 = (const void *)a1[5];
  unint64_t result = sub_25E6A8B08(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v8 = (const void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    void v3[2] = v12;
    _Block_copy(v4);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v5 = (uint64_t)*(v8 - 1);
    uint64_t v4 = *v8;
    unint64_t result = sub_25E6A8B08(v5);
    v8 += 2;
    if (v13) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_25E6A99AC()
{
  unint64_t result = qword_26B38E120;
  if (!qword_26B38E120)
  {
    sub_25E6C2730();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B38E120);
  }
  return result;
}

unint64_t sub_25E6A9A04()
{
  unint64_t result = qword_26B38E118;
  if (!qword_26B38E118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B38E110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B38E118);
  }
  return result;
}

uint64_t sub_25E6A9A60(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

sqlite3 *sub_25E6A9A74@<X0>(unsigned int *a1@<X8>)
{
  return sub_25E6A5C44(*(void *)(v1 + 16), a1);
}

uint64_t sub_25E6A9A94(int a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(a1) & 1;
}

uint64_t sub_25E6A9AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6A772C(a1, a2, a3, a4, *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16));
}

uint64_t sub_25E6A9ACC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25E6A9ADC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25E6A9AEC()
{
  (*(void (**)(void))(v0 + 16))();
  return 0;
}

uint64_t sub_25E6A9B40()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25E6A9B68(uint64_t a1, uint64_t a2)
{
  return sub_25E6A865C(a1, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 16));
}

unint64_t sub_25E6A9B74()
{
  unint64_t result = qword_26A701780;
  if (!qword_26A701780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A701780);
  }
  return result;
}

unint64_t sub_25E6A9BCC()
{
  unint64_t result = qword_26A701788;
  if (!qword_26A701788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A701788);
  }
  return result;
}

double sub_25E6A9C20@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  double result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

sqlite3 *sub_25E6A9C68(double *a1)
{
  return Connection.busyTimeout.setter(*a1);
}

uint64_t type metadata accessor for Connection()
{
  return self;
}

uint64_t method lookup function for Connection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Connection);
}

uint64_t dispatch thunk of Connection.__allocating_init(_:readonly:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unint64_t destroy for Connection.Location(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11SwiftSQLite10ConnectionC8LocationOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for Connection.Location(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Connection.Location(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Connection.Location(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Connection.Location(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_25E6A9F14(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25E6A9F2C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Connection.Location()
{
  return &type metadata for Connection.Location;
}

ValueMetadata *type metadata accessor for Connection.Operation()
{
  return &type metadata for Connection.Operation;
}

uint64_t getEnumTagSinglePayload for JoinType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11SwiftSQLite10ConnectionC9OperationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E6AA0D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Connection.TransactionMode()
{
  return &type metadata for Connection.TransactionMode;
}

uint64_t destroy for Result()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Result(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Result(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25E6AA2E0()
{
  return 0;
}

ValueMetadata *type metadata accessor for Result()
{
  return &type metadata for Result;
}

uint64_t sub_25E6AA2F8()
{
  unint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = sub_25E6C25C0();
  v1(v2);
  return swift_bridgeObjectRelease();
}

sqlite3 *sub_25E6AA344()
{
  return sub_25E6A6D68(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_25E6AA3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016E8);
  a6[3] = v12;
  a6[4] = &protocol witness table for Expression<A>;
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  uint64_t v19 = v12;
  unint64_t v20 = &protocol witness table for Expression<A>;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_25E6C3230;
  if (a5)
  {
    uint64_t v14 = &protocol witness table for String;
    uint64_t v15 = MEMORY[0x263F8D310];
  }
  else
  {
    a4 = 0;
    uint64_t v15 = 0;
    uint64_t v14 = 0;
    *(void *)(v13 + 48) = 0;
  }
  *(void *)(v13 + 32) = a4;
  *(void *)(v13 + 40) = a5;
  *(void *)(v13 + 56) = v15;
  *(void *)(v13 + 64) = v14;
  *(void *)&long long v17 = 63;
  *((void *)&v17 + 1) = 0xE100000000000000;
  uint64_t v18 = v13;
  return sub_25E681E94(&v17, (uint64_t)(a6 + 5));
}

uint64_t QueryType.insert(_:userInfo:otherSetters:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6AA8BC(a1, a2, a3, a4, a5, (void (*)(void, uint64_t, uint64_t))QueryType.insert(_:));
}

uint64_t type metadata accessor for SQLiteEncoder()
{
  return self;
}

uint64_t QueryType.insert(or:encodable:userInfo:otherSetters:)(char *a1, void *a2, uint64_t a3)
{
  char v6 = *a1;
  BOOL v7 = (void *)type metadata accessor for SQLiteEncoder();
  int v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v8[2] = MEMORY[0x263F8EE78];
  void v8[3] = v9;
  v8[4] = a3;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v12[3]._rawValue = v7;
  v12[4]._rawValue = (void *)sub_25E6B0910(&qword_26A701798, (void (*)(uint64_t))type metadata accessor for SQLiteEncoder);
  v12[0]._rawValue = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25E6C2490();
  if (v3)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    char v13 = v6;
    v12[0] = (Swift::OpaquePointer)v8[2];
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_25E686940(v11);
    QueryType.insert(or:_:)((SwiftSQLite::OnConflict)&v13, v12[0]);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

SwiftSQLite::Insert __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> QueryType.insertMany(_:userInfo:otherSetters:)(Swift::OpaquePointer _, Swift::OpaquePointer userInfo, Swift::OpaquePointer otherSetters)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v7 = sub_25E6B0618((uint64_t)_._rawValue, (uint64_t)userInfo._rawValue, (uint64_t)otherSetters._rawValue);
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_bridgeObjectRelease();
  if (!v3)
  {
    QueryType.insertMany(_:)((Swift::OpaquePointer)v7);
    uint64_t v8 = swift_bridgeObjectRelease();
  }
  result.bindings._rawValue = v10;
  result.template._object = v9;
  result.template._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t QueryType.upsert(_:userInfo:otherSetters:onConflictOf:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v10 = type metadata accessor for SQLiteEncoder();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8EE78];
  v11[2] = MEMORY[0x263F8EE78];
  uint64_t v11[3] = v12;
  v11[4] = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  void v18[3] = v10;
  v18[4] = sub_25E6B0910(&qword_26A701798, (void (*)(uint64_t))type metadata accessor for SQLiteEncoder);
  v18[0] = (uint64_t)v11;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25E6C2490();
  if (v6)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    v18[0] = v11[2];
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_25E686940(v14);
    QueryType.upsert(_:onConflictOf:)(v18[0], a3, a4, a5, a6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t QueryType.update(_:userInfo:otherSetters:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6AA8BC(a1, a2, a3, a4, a5, (void (*)(void, uint64_t, uint64_t))QueryType.update(_:));
}

uint64_t sub_25E6AA8BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t))
{
  long long v17 = a6;
  uint64_t v9 = type metadata accessor for SQLiteEncoder();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8EE78];
  v10[2] = MEMORY[0x263F8EE78];
  void v10[3] = v11;
  v10[4] = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  void v16[3] = v9;
  v16[4] = sub_25E6B0910(&qword_26A701798, (void (*)(uint64_t))type metadata accessor for SQLiteEncoder);
  v16[0] = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_25E6C2490();
  if (v6)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v16[0] = v10[2];
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_25E686940(v13);
    v17(v16[0], a4, a5);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t Row.decode<A>(userInfo:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  type metadata accessor for SQLiteDecoder();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8EE78];
  v5[2] = v4;
  uint64_t v5[3] = v3;
  v5[4] = v6;
  void v5[5] = a1;
  sub_25E6B0910(qword_26A7017A0, (void (*)(uint64_t))type metadata accessor for SQLiteDecoder);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_25E6C26D0();
}

uint64_t Row.decoder(userInfo:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = type metadata accessor for SQLiteDecoder();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v8[2] = v6;
  void v8[3] = v5;
  v8[4] = v9;
  void v8[5] = a1;
  a2[3] = v7;
  a2[4] = sub_25E6B0910(qword_26A7017A0, (void (*)(uint64_t))type metadata accessor for SQLiteDecoder);
  *a2 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6AABF8(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v3;
  return result;
}

void sub_25E6AAC34()
{
}

void sub_25E6AAC90()
{
}

uint64_t sub_25E6AACEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v2, v3, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25E6C3230;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(void *)(v5 + 64) = 0;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 16) = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25E680AC8(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
    uint64_t v6 = result;
    *(void *)(v1 + 16) = result;
  }
  unint64_t v9 = *(void *)(v6 + 16);
  unint64_t v8 = *(void *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_25E680AC8((char *)(v8 > 1), v9 + 1, 1, (char *)v6);
    uint64_t v6 = result;
    *(void *)(v1 + 16) = result;
  }
  *(void *)(v6 + 16) = v9 + 1;
  uint64_t v10 = (void *)(v6 + 80 * v9);
  v10[4] = 0;
  v10[5] = 0xE000000000000000;
  void v10[6] = MEMORY[0x263F8EE78];
  v10[7] = v4;
  v10[8] = &protocol witness table for Expression<A>;
  v10[9] = 63;
  v10[10] = 0xE100000000000000;
  v10[11] = v5;
  v10[12] = v4;
  v10[13] = &protocol witness table for Expression<A>;
  return result;
}

double sub_25E6AAEF8(uint64_t a1, uint64_t a2)
{
  return sub_25E6ABFD8(a1, a2, &qword_26A7016F0, MEMORY[0x263F8D6C8], (uint64_t)&protocol witness table for Int);
}

__n128 sub_25E6AAF28(char a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  *(void *)uint64_t v15 = 0;
  *(void *)&v15[8] = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E070);
  uint64_t v7 = *(char **)(v3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_25E680AC8(0, *((void *)v7 + 2) + 1, 1, v7);
    *(void *)(v3 + 16) = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_25E680AC8((char *)(v9 > 1), v10 + 1, 1, v7);
    *(void *)(v3 + 16) = v7;
  }
  *((void *)v7 + 2) = v10 + 1;
  uint64_t v11 = &v7[80 * v10];
  uint64_t v12 = MEMORY[0x263F8EE78];
  *((void *)v11 + 4) = *(void *)v15;
  *((void *)v11 + 5) = 0xE000000000000000;
  *((void *)v11 + 6) = v12;
  *((void *)v11 + 7) = v6;
  *((void *)v11 + 8) = &protocol witness table for Expression<A>;
  v11[72] = a1 & 1;
  __n128 result = *(__n128 *)v15;
  uint64_t v14 = MEMORY[0x263F8D4F8];
  *((void *)v11 + 11) = *(void *)&v15[15];
  *((void *)v11 + 12) = v14;
  *(_OWORD *)(v11 + 73) = *(_OWORD *)v15;
  *((void *)v11 + 13) = &protocol witness table for Bool;
  return result;
}

double sub_25E6AB120(float a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018D8);
  uint64_t v7 = *(char **)(v3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_25E680AC8(0, *((void *)v7 + 2) + 1, 1, v7);
    *(void *)(v3 + 16) = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_25E680AC8((char *)(v9 > 1), v10 + 1, 1, v7);
    *(void *)(v3 + 16) = v7;
  }
  *((void *)v7 + 2) = v10 + 1;
  uint64_t v11 = &v7[80 * v10];
  *((void *)v11 + 4) = v14;
  *((void *)v11 + 5) = 0xE000000000000000;
  *((void *)v11 + 6) = MEMORY[0x263F8EE78];
  *((void *)v11 + 7) = v6;
  *((void *)v11 + 8) = &protocol witness table for Expression<A>;
  *((double *)v11 + 9) = a1;
  double result = *(double *)&v14;
  uint64_t v13 = MEMORY[0x263F8D538];
  *((_OWORD *)v11 + 5) = v14;
  *((void *)v11 + 12) = v13;
  *((void *)v11 + 13) = &protocol witness table for Double;
  return result;
}

double sub_25E6AB310(double a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  *(void *)&long long v14 = 0;
  *((void *)&v14 + 1) = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018D8);
  uint64_t v7 = *(char **)(v3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_25E680AC8(0, *((void *)v7 + 2) + 1, 1, v7);
    *(void *)(v3 + 16) = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_25E680AC8((char *)(v9 > 1), v10 + 1, 1, v7);
    *(void *)(v3 + 16) = v7;
  }
  *((void *)v7 + 2) = v10 + 1;
  uint64_t v11 = &v7[80 * v10];
  *((void *)v11 + 4) = v14;
  *((void *)v11 + 5) = 0xE000000000000000;
  *((void *)v11 + 6) = MEMORY[0x263F8EE78];
  *((void *)v11 + 7) = v6;
  *((void *)v11 + 8) = &protocol witness table for Expression<A>;
  *((double *)v11 + 9) = a1;
  double result = *(double *)&v14;
  uint64_t v13 = MEMORY[0x263F8D538];
  *((_OWORD *)v11 + 5) = v14;
  *((void *)v11 + 12) = v13;
  *((void *)v11 + 13) = &protocol witness table for Double;
  return result;
}

uint64_t sub_25E6AB4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v5, v6, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
  uint64_t v8 = *(void *)(v4 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25E680AC8(0, *(void *)(v8 + 16) + 1, 1, (char *)v8);
    uint64_t v8 = result;
    *(void *)(v4 + 16) = result;
  }
  unint64_t v11 = *(void *)(v8 + 16);
  unint64_t v10 = *(void *)(v8 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_25E680AC8((char *)(v10 > 1), v11 + 1, 1, (char *)v8);
    uint64_t v8 = result;
    *(void *)(v4 + 16) = result;
  }
  *(void *)(v8 + 16) = v11 + 1;
  uint64_t v12 = (void *)(v8 + 80 * v11);
  uint64_t v12[4] = 0;
  Swift::OpaquePointer v12[5] = 0xE000000000000000;
  v12[6] = MEMORY[0x263F8EE78];
  v12[7] = v7;
  v12[8] = &protocol witness table for Expression<A>;
  v12[9] = a1;
  uint64_t v13 = MEMORY[0x263F8D310];
  v12[10] = a2;
  v12[12] = v13;
  v12[13] = &protocol witness table for String;
  return result;
}

uint64_t sub_25E6AB6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v78 = a4;
  uint64_t v7 = *v4;
  uint64_t v80 = a2;
  uint64_t v81 = v7;
  uint64_t v8 = sub_25E6C2520();
  MEMORY[0x270FA5388](v8 - 8);
  long long v76 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B38DFC0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25E6C23B0();
  uint64_t v79 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  v77 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v20((char *)&v74 - v21, a1, a3);
  if (swift_dynamicCast())
  {
    unint64_t v23 = *((void *)&v82[0] + 1);
    uint64_t v22 = *(void *)&v82[0];
    uint64_t v24 = v4[2];
    uint64_t v25 = sub_25E6C2A30();
    uint64_t v26 = v83;
    sub_25E681960(0, 0xE000000000000000, v25, v27, 34, 0xE100000000000000);
    uint64_t v83 = v26;
    *(void *)&v82[0] = 0;
    *((void *)&v82[0] + 1) = 0xE000000000000000;
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    swift_bridgeObjectRelease();
    long long v28 = v82[0];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E058);
    uint64_t v30 = *(char **)(v24 + 16);
    sub_25E688C9C(v22, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v24 + 16) = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v30 = sub_25E680AC8(0, *((void *)v30 + 2) + 1, 1, v30);
      *(void *)(v24 + 16) = v30;
    }
    unint64_t v33 = *((void *)v30 + 2);
    unint64_t v32 = *((void *)v30 + 3);
    if (v33 >= v32 >> 1)
    {
      uint64_t v30 = sub_25E680AC8((char *)(v32 > 1), v33 + 1, 1, v30);
      *(void *)(v24 + 16) = v30;
    }
    *((void *)v30 + 2) = v33 + 1;
    uint64_t v34 = &v30[80 * v33];
    uint64_t v35 = MEMORY[0x263F8EE78];
    *((_OWORD *)v34 + 2) = v28;
    *((void *)v34 + 6) = v35;
    *((void *)v34 + 7) = v29;
    *((void *)v34 + 8) = &protocol witness table for Expression<A>;
    *((void *)v34 + 9) = v22;
    *((void *)v34 + 10) = v23;
    *((void *)v34 + 12) = MEMORY[0x263F06F78];
    *((void *)v34 + 13) = &protocol witness table for Data;
    return sub_25E688CF4(v22, v23);
  }
  uint64_t v74 = a1;
  long long v75 = v4;
  uint64_t v36 = v83;
  v20(v19, a1, a3);
  int v37 = swift_dynamicCast();
  uint64_t v38 = v79;
  long long v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
  if (!v37)
  {
    v39(v12, 1, 1, v13);
    uint64_t v40 = v36;
    goto LABEL_17;
  }
  v39(v12, 0, 1, v13);
  uint64_t v40 = v36;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v12, 1, v13) == 1)
  {
LABEL_17:
    sub_25E6B10A8((uint64_t)v12);
    sub_25E6C2320();
    swift_allocObject();
    sub_25E6C2310();
    uint64_t v22 = sub_25E6C2300();
    unint64_t v23 = v60;
    uint64_t result = swift_release();
    long long v61 = v75;
    if (v40) {
      return result;
    }
    sub_25E6C2510();
    uint64_t v81 = sub_25E6C2500();
    uint64_t v79 = v62;
    uint64_t v63 = v61[2];
    uint64_t v64 = sub_25E6C2A30();
    sub_25E681960(0, 0xE000000000000000, v64, v65, 34, 0xE100000000000000);
    uint64_t v83 = 0;
    *(void *)&v82[0] = 0;
    *((void *)&v82[0] + 1) = 0xE000000000000000;
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    swift_bridgeObjectRelease();
    sub_25E6AA3CC(*(uint64_t *)&v82[0], *((uint64_t *)&v82[0] + 1), MEMORY[0x263F8EE78], v81, v79, v82);
    long long v66 = *(char **)(v63 + 16);
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v63 + 16) = v66;
    if ((v67 & 1) == 0)
    {
      long long v66 = sub_25E680AC8(0, *((void *)v66 + 2) + 1, 1, v66);
      *(void *)(v63 + 16) = v66;
    }
    unint64_t v69 = *((void *)v66 + 2);
    unint64_t v68 = *((void *)v66 + 3);
    if (v69 >= v68 >> 1)
    {
      long long v66 = sub_25E680AC8((char *)(v68 > 1), v69 + 1, 1, v66);
      *(void *)(v63 + 16) = v66;
    }
    *((void *)v66 + 2) = v69 + 1;
    long long v70 = &v66[80 * v69];
    *((_OWORD *)v70 + 2) = v82[0];
    long long v71 = v82[1];
    long long v72 = v82[2];
    long long v73 = v82[4];
    *((_OWORD *)v70 + 5) = v82[3];
    *((_OWORD *)v70 + 6) = v73;
    *((_OWORD *)v70 + 3) = v71;
    *((_OWORD *)v70 + 4) = v72;
    return sub_25E688CF4(v22, v23);
  }
  long long v41 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  uint64_t v78 = v13;
  v41(v77, v12, v13);
  uint64_t v42 = v75[2];
  uint64_t v43 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v43, v44, 34, 0xE100000000000000);
  uint64_t v83 = v36;
  *(void *)&v82[0] = 0;
  *((void *)&v82[0] + 1) = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v81 = *((void *)&v82[0] + 1);
  uint64_t v45 = *(void *)&v82[0];
  if (qword_26B38E0A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v46 = (id)qword_26B38E0C8;
  uint64_t v47 = (void *)sub_25E6C2390();
  id v48 = objc_msgSend(v46, sel_stringFromDate_, v47);

  uint64_t v49 = sub_25E6C24E0();
  uint64_t v51 = v50;

  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016D0);
  uint64_t v53 = *(char **)(v42 + 16);
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v42 + 16) = v53;
  if ((v54 & 1) == 0)
  {
    uint64_t v53 = sub_25E680AC8(0, *((void *)v53 + 2) + 1, 1, v53);
    *(void *)(v42 + 16) = v53;
  }
  unint64_t v56 = *((void *)v53 + 2);
  unint64_t v55 = *((void *)v53 + 3);
  if (v56 >= v55 >> 1)
  {
    uint64_t v53 = sub_25E680AC8((char *)(v55 > 1), v56 + 1, 1, v53);
    *(void *)(v42 + 16) = v53;
  }
  *((void *)v53 + 2) = v56 + 1;
  long long v57 = &v53[80 * v56];
  uint64_t v58 = v81;
  *((void *)v57 + 4) = v45;
  *((void *)v57 + 5) = v58;
  *((void *)v57 + 6) = MEMORY[0x263F8EE78];
  *((void *)v57 + 7) = v52;
  *((void *)v57 + 8) = &protocol witness table for Expression<A>;
  *((void *)v57 + 9) = v49;
  *((void *)v57 + 10) = v51;
  *((void *)v57 + 12) = MEMORY[0x263F8D310];
  *((void *)v57 + 13) = &protocol witness table for String;
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v77, v78);
}

double sub_25E6ABFA8(uint64_t a1, uint64_t a2)
{
  return sub_25E6ABFD8(a1, a2, &qword_26A7018D0, MEMORY[0x263F8E5C0], (uint64_t)&protocol witness table for Int64);
}

double sub_25E6ABFD8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v8 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v8, v9, 34, 0xE100000000000000);
  *(void *)&long long v20 = 0;
  *((void *)&v20 + 1) = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = *(char **)(v7 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v7 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v11 = sub_25E680AC8(0, *((void *)v11 + 2) + 1, 1, v11);
    *(void *)(v7 + 16) = v11;
  }
  unint64_t v14 = *((void *)v11 + 2);
  unint64_t v13 = *((void *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    uint64_t v11 = sub_25E680AC8((char *)(v13 > 1), v14 + 1, 1, v11);
    *(void *)(v7 + 16) = v11;
  }
  *((void *)v11 + 2) = v14 + 1;
  uint64_t v15 = &v11[80 * v14];
  uint64_t v16 = MEMORY[0x263F8EE78];
  *((void *)v15 + 4) = v20;
  *((void *)v15 + 5) = 0xE000000000000000;
  *((void *)v15 + 6) = v16;
  *((void *)v15 + 7) = v10;
  *((void *)v15 + 8) = &protocol witness table for Expression<A>;
  *((void *)v15 + 9) = a1;
  double result = *(double *)&v20;
  *((_OWORD *)v15 + 5) = v20;
  *((void *)v15 + 12) = a4;
  *((void *)v15 + 13) = a5;
  return result;
}

void sub_25E6AC1B8()
{
}

void sub_25E6AC214()
{
}

uint64_t sub_25E6AC270()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25E6AC2B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6AC2BC()
{
  return sub_25E6AACEC();
}

double sub_25E6AC2E0(char a1)
{
  *(void *)&double result = sub_25E6AAF28(a1).n128_u64[0];
  return result;
}

uint64_t sub_25E6AC304(uint64_t a1, uint64_t a2)
{
  return sub_25E6AB4FC(a1, a2);
}

double sub_25E6AC328(double a1)
{
  return sub_25E6AB310(a1);
}

double sub_25E6AC34C(float a1)
{
  return sub_25E6AB120(a1);
}

double sub_25E6AC370(uint64_t a1, uint64_t a2)
{
  return sub_25E6AAEF8(a1, a2);
}

uint64_t sub_25E6AC394(char a1)
{
  return sub_25E6B0A08(a1, MEMORY[0x263F8E498]);
}

uint64_t sub_25E6AC3D8(__int16 a1)
{
  return sub_25E6B0AF4(a1, MEMORY[0x263F8E4F0]);
}

uint64_t sub_25E6AC41C(int a1)
{
  return sub_25E6B0BE0(a1, MEMORY[0x263F8E548]);
}

double sub_25E6AC460(uint64_t a1, uint64_t a2)
{
  return sub_25E6ABFA8(a1, a2);
}

uint64_t sub_25E6AC484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6AC630(a1, a2, a3, a4, a5, MEMORY[0x263F8E428]);
}

uint64_t sub_25E6AC4B0(uint64_t a1)
{
  return sub_25E6B0CCC(a1, MEMORY[0x263F8D9D0]);
}

uint64_t sub_25E6AC4F4(char a1)
{
  return sub_25E6B0A08(a1, MEMORY[0x263F8E778]);
}

uint64_t sub_25E6AC538(__int16 a1)
{
  return sub_25E6B0AF4(a1, MEMORY[0x263F8E888]);
}

uint64_t sub_25E6AC57C(int a1)
{
  return sub_25E6B0BE0(a1, MEMORY[0x263F8E8F8]);
}

uint64_t sub_25E6AC5C0(uint64_t a1)
{
  return sub_25E6B0CCC(a1, MEMORY[0x263F8E970]);
}

uint64_t sub_25E6AC604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6AC630(a1, a2, a3, a4, a5, MEMORY[0x263F8E430]);
}

uint64_t sub_25E6AC630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  return a6(a1, a2, a3, v11, a5);
}

uint64_t sub_25E6AC6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6AB6E4(a1, a2, a3, a4);
}

uint64_t sub_25E6AC6C4()
{
  return sub_25E6C2980();
}

uint64_t sub_25E6AC734()
{
  return sub_25E6C2960();
}

uint64_t sub_25E6AC78C()
{
  return sub_25E6C2950();
}

uint64_t sub_25E6AC7F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6ACB70(a1, a2, a3, a4, a5, MEMORY[0x263F8E3B8]);
}

uint64_t sub_25E6AC820(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6ACAD4(a1, a2, a3, a4, MEMORY[0x263F8E3C0]);
}

uint64_t sub_25E6AC84C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6ACB70(a1, a2, a3, a4, a5, MEMORY[0x263F8E3C8]);
}

uint64_t sub_25E6AC878(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6AC9AC(a1, a2, a3, a4, MEMORY[0x263F8E3D8]);
}

uint64_t sub_25E6AC8A4(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6ACA40(a1, a2, a3, a4, MEMORY[0x263F8E3E0]);
}

uint64_t sub_25E6AC8D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6ACAD4(a1, a2, a3, a4, MEMORY[0x263F8E3E8]);
}

uint64_t sub_25E6AC8FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6ACB70(a1, a2, a3, a4, a5, MEMORY[0x263F8E3F0]);
}

uint64_t sub_25E6AC928(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_25E6ACC10(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E400]);
}

uint64_t sub_25E6AC954(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6ACB70(a1, a2, a3, a4, a5, MEMORY[0x263F8E3D0]);
}

uint64_t sub_25E6AC980(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6AC9AC(a1, a2, a3, a4, MEMORY[0x263F8E3F8]);
}

uint64_t sub_25E6AC9AC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_25E6ACA14(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6ACA40(a1, a2, a3, a4, MEMORY[0x263F8E408]);
}

uint64_t sub_25E6ACA40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_25E6ACAA8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6ACAD4(a1, a2, a3, a4, MEMORY[0x263F8E410]);
}

uint64_t sub_25E6ACAD4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_25E6ACB44(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6ACB70(a1, a2, a3, a4, a5, MEMORY[0x263F8E418]);
}

uint64_t sub_25E6ACB70(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a2 & 1;
  uint64_t v11 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_25E6ACBE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_25E6ACC10(a1, a2, a3, a4, a5, a6, MEMORY[0x263F8E420]);
}

uint64_t sub_25E6ACC10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_25E6ACC94()
{
  return sub_25E6C2970();
}

void sub_25E6ACD04()
{
}

void sub_25E6ACD28()
{
}

void sub_25E6ACD4C()
{
}

void sub_25E6ACD70()
{
}

uint64_t sub_25E6ACD94()
{
  type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = v2;
  swift_retain();
  swift_getWitnessTable();
  return sub_25E6C28E0();
}

uint64_t sub_25E6ACE2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25E6ACE74()
{
  return sub_25E6ACD94();
}

void sub_25E6ACE98()
{
}

void sub_25E6ACEFC()
{
}

__n128 sub_25E6ACF60(__n128 *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x263F8EE78];
  __n128 result = *a1;
  *(__n128 *)(v2 + 24) = *a1;
  return result;
}

uint64_t sub_25E6ACFA4()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018C0);
  sub_25E6B116C();
  uint64_t v0 = sub_25E6C2630();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25E6AD064()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_25E6C2A30();
  char v2 = sub_25E6B2C48(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_25E6AD11C()
{
  return (sub_25E6AD064() & 1) == 0;
}

uint64_t sub_25E6AD14C()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v6 = sub_25E6AE640(0, 0xE000000000000000, MEMORY[0x263F8EE78], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7 != 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v9 = v7 & 1;
      return v9 & 1;
    }
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0xE000000000000000;
    *(void *)(v8 + 16) = 0;
    *(unsigned char *)(v8 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_25E6AD398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26B38DFC0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6AED9C(a1, a2, a3, a4, v13);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v15 = sub_25E6C23B0();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
    {
      sub_25E6B10A8((uint64_t)v13);
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v17 = a1;
      *(void *)(v17 + 8) = a2;
      *(void *)(v17 + 16) = 0;
      *(unsigned char *)(v17 + 24) = 3;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a5, v13, v15);
    }
  }
  return result;
}

uint64_t sub_25E6AD55C()
{
  return sub_25E6AD574();
}

uint64_t sub_25E6AD574()
{
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_25E6AE860(0, 0xE000000000000000, MEMORY[0x263F8EE78], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8)
    {
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0xE000000000000000;
      *(void *)(v9 + 16) = 0;
      *(unsigned char *)(v9 + 24) = 3;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_25E6AD798()
{
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25E6AE860(0, 0xE000000000000000, MEMORY[0x263F8EE78], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0xE000000000000000;
    *(void *)(v9 + 16) = 0;
    *(unsigned char *)(v9 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6AD9E8()
{
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25E6AE860(0, 0xE000000000000000, MEMORY[0x263F8EE78], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0xE000000000000000;
    *(void *)(v9 + 16) = 0;
    *(unsigned char *)(v9 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6ADC34()
{
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  uint64_t v7 = v6;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_25E6AEB04(0, 0xE000000000000000, MEMORY[0x263F8EE78], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v7 = v8;
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0xE000000000000000;
    *(void *)(v12 + 16) = 0;
    *(unsigned char *)(v12 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_25E6ADE7C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_25E6C2520();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  id v48 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25E6C23B0();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v51 = a3;
  uint64_t v52 = a1;
  if (v12 == MEMORY[0x263F06F78])
  {
    uint64_t v23 = *(void *)(v3 + 24);
    uint64_t v24 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_25E6C2A30();
    sub_25E681960(0, 0xE000000000000000, v25, v26, 34, 0xE100000000000000);
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    swift_bridgeObjectRelease();
    uint64_t v28 = v54;
    uint64_t v27 = v55;
    swift_bridgeObjectRetain();
    sub_25E6AEFC4(v28, v27, v23, v24, &v54);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v40 = v55;
    if (v55 >> 60 == 15)
    {
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v41 = v28;
      *(void *)(v41 + 8) = v27;
      *(void *)(v41 + 16) = 0;
      *(unsigned char *)(v41 + 24) = 3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v42 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v42;
    unint64_t v55 = v40;
    return swift_dynamicCast();
  }
  uint64_t v45 = v14;
  uint64_t v46 = v13;
  uint64_t v44 = a2;
  uint64_t v17 = *(void *)(v3 + 32);
  uint64_t v18 = v12;
  unint64_t v56 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25E6C2A30();
  sub_25E681960(0, 0xE000000000000000, v19, v20, 34, 0xE100000000000000);
  uint64_t v53 = v4;
  uint64_t v47 = v18;
  if (v10 == v18)
  {
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    swift_bridgeObjectRelease();
    uint64_t v30 = v53;
    sub_25E6AD398(v54, v55, v56, v17, (uint64_t)v16);
    if (v30)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v45, v16, v47);
    return swift_dynamicCast();
  }
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  uint64_t v21 = v53;
  sub_25E6AEB04(v54, v55, MEMORY[0x263F8EE78], v56, v17);
  if (v21) {
    goto LABEL_8;
  }
  uint64_t v31 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v31)
  {
    uint64_t v36 = sub_25E6C2800();
    swift_allocError();
    uint64_t v38 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018B0);
    *uint64_t v38 = v47;
    swift_bridgeObjectRetain();
    sub_25E6C27F0();
    long long v39 = (unsigned int *)MEMORY[0x263F8DCB0];
    goto LABEL_18;
  }
  unint64_t v32 = v48;
  sub_25E6C2510();
  uint64_t v33 = sub_25E6C24F0();
  unint64_t v35 = v34;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
  if (v35 >> 60 == 15)
  {
    uint64_t v36 = sub_25E6C2800();
    swift_allocError();
    uint64_t v38 = v37;
    swift_bridgeObjectRetain();
    sub_25E6C27F0();
    long long v39 = (unsigned int *)MEMORY[0x263F8DCB8];
LABEL_18:
    (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *v39, v36);
    return swift_willThrow();
  }
  sub_25E6C22F0();
  swift_allocObject();
  sub_25E6C22E0();
  sub_25E6C22D0();
  swift_release();
  return sub_25E6B0E94(v33, v35);
}

unint64_t sub_25E6AE640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_25E6A8B4C(a1, a2);
    if (v11) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_25E688954(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_25E6B0EFC((uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14[2];
  if (v15 == 1)
  {
    uint64_t v20 = v14[4];
    uint64_t v19 = v14[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(void *)(a4 + 16) || (unint64_t v10 = sub_25E6A8B4C(v20, v19), (v21 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v10);
    swift_bridgeObjectRelease();
    return sub_25E6B01E0(v22, a4, a5);
  }
  if (v15)
  {
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v24 = a1;
    *(void *)(v24 + 8) = a2;
    *(void *)(v24 + 16) = v14;
    *(unsigned char *)(v24 + 24) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v16 = (char *)sub_25E688954(a4);
  swift_bridgeObjectRelease();
  uint64_t v25 = v16;
  sub_25E6C0058(&v25);
  if (v5)
  {
LABEL_15:
    unint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v25;
  sub_25E6B0EA8();
  swift_allocError();
  *(void *)uint64_t v18 = a1;
  *(void *)(v18 + 8) = a2;
  *(void *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 24) = 1;
  return swift_willThrow();
}

uint64_t sub_25E6AE860(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v7 = a4;
  if (*(void *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_25E6A8B4C(a1, a2);
    if (v11)
    {
      unint64_t v7 = *(void *)(*(void *)(v7 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v7 < *(void *)(a5 + 16)) {
        goto LABEL_15;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_25E688954(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_25E6B0EFC((uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14[2];
  if (v15 != 1)
  {
    if (v15)
    {
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v24 = a1;
      *(void *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = v14;
      *(unsigned char *)(v24 + 24) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v16 = (char *)sub_25E688954(v7);
    swift_bridgeObjectRelease();
    v26[0] = v16;
    sub_25E6C0058(v26);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v26[0];
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v18 = a1;
      *(void *)(v18 + 8) = a2;
      *(void *)(v18 + 16) = v17;
      *(unsigned char *)(v18 + 24) = 1;
      return swift_willThrow();
    }
    goto LABEL_24;
  }
  uint64_t v20 = v14[4];
  uint64_t v19 = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v7 + 16) || (unint64_t v21 = sub_25E6A8B4C(v20, v19), (v22 & 1) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_24:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  unint64_t v7 = *(void *)(*(void *)(v7 + 56) + 8 * v21);
  swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_21;
  }
  if (v7 >= *(void *)(a5 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_15:
  sub_25E687934(a5 + 40 * v7 + 32, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  if (swift_dynamicCast()) {
    return v25;
  }
  else {
    return 0;
  }
}

uint64_t sub_25E6AEB04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v7 = a4;
  if (*(void *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_25E6A8B4C(a1, a2);
    if (v11)
    {
      unint64_t v7 = *(void *)(*(void *)(v7 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v7 < *(void *)(a5 + 16)) {
        goto LABEL_15;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_25E688954(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_25E6B0EFC((uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14[2];
  if (v15 != 1)
  {
    if (v15)
    {
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v24 = a1;
      *(void *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = v14;
      *(unsigned char *)(v24 + 24) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v16 = (char *)sub_25E688954(v7);
    swift_bridgeObjectRelease();
    v26[0] = v16;
    sub_25E6C0058(v26);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v26[0];
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v18 = a1;
      *(void *)(v18 + 8) = a2;
      *(void *)(v18 + 16) = v17;
      *(unsigned char *)(v18 + 24) = 1;
      return swift_willThrow();
    }
    goto LABEL_24;
  }
  uint64_t v20 = v14[4];
  uint64_t v19 = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v7 + 16) || (unint64_t v21 = sub_25E6A8B4C(v20, v19), (v22 & 1) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_24:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  unint64_t v7 = *(void *)(*(void *)(v7 + 56) + 8 * v21);
  swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_21;
  }
  if (v7 >= *(void *)(a5 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_15:
  sub_25E687934(a5 + 40 * v7 + 32, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  if (swift_dynamicCast()) {
    return v25;
  }
  else {
    return 0;
  }
}

uint64_t sub_25E6AED9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_25E6A8B4C(a1, a2);
    if (v12) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_25E688954(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_25E6B0EFC((uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v15[2];
  if (v16 == 1)
  {
    uint64_t v21 = v15[4];
    uint64_t v20 = v15[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(void *)(a3 + 16) || (unint64_t v11 = sub_25E6A8B4C(v21, v20), (v22 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
LABEL_10:
    unint64_t v23 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRelease();
    return sub_25E6B0268(v23, a4, a5);
  }
  if (v16)
  {
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v25 = a1;
    *(void *)(v25 + 8) = a2;
    *(void *)(v25 + 16) = v15;
    *(unsigned char *)(v25 + 24) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = (char *)sub_25E688954(a3);
  swift_bridgeObjectRelease();
  uint64_t v26 = v17;
  sub_25E6C0058(&v26);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v26;
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v19 = a1;
    *(void *)(v19 + 8) = a2;
    *(void *)(v19 + 16) = v18;
    *(unsigned char *)(v19 + 24) = 1;
    return swift_willThrow();
  }
LABEL_14:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_25E6AEFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_25E6A8B4C(a1, a2);
    if (v12) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_25E688954(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_25E6B0EFC((uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v15[2];
  if (v16 == 1)
  {
    uint64_t v21 = v15[4];
    uint64_t v20 = v15[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(void *)(a3 + 16) || (unint64_t v11 = sub_25E6A8B4C(v21, v20), (v22 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
LABEL_10:
    unint64_t v23 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRelease();
    return sub_25E6B0564(v23, a4, a5);
  }
  if (v16)
  {
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v25 = a1;
    *(void *)(v25 + 8) = a2;
    *(void *)(v25 + 16) = v15;
    *(unsigned char *)(v25 + 24) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = (char *)sub_25E688954(a3);
  swift_bridgeObjectRelease();
  uint64_t v26 = v17;
  sub_25E6C0058(&v26);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v26;
    sub_25E6B0EA8();
    swift_allocError();
    *(void *)uint64_t v19 = a1;
    *(void *)(v19 + 8) = a2;
    *(void *)(v19 + 16) = v18;
    *(unsigned char *)(v19 + 24) = 1;
    return swift_willThrow();
  }
LABEL_14:
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_25E6AF1EC()
{
  uint64_t v0 = sub_25E6C2800();
  swift_allocError();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x263F8DCB8], v0);
  return swift_willThrow();
}

uint64_t sub_25E6AF2AC()
{
  return sub_25E6AF3CC();
}

uint64_t sub_25E6AF2DC()
{
  uint64_t v0 = sub_25E6C2800();
  swift_allocError();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x263F8DCB8], v0);
  return swift_willThrow();
}

uint64_t sub_25E6AF39C()
{
  return sub_25E6AF3CC();
}

uint64_t sub_25E6AF3CC()
{
  uint64_t v0 = sub_25E6C2800();
  swift_allocError();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x263F8DCB8], v0);
  return swift_willThrow();
}

uint64_t sub_25E6AF48C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25E6AF4C4()
{
  sub_25E6AF48C();
  return swift_deallocClassInstance();
}

uint64_t sub_25E6AF4F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6AF500()
{
  return sub_25E6ACFA4();
}

uint64_t sub_25E6AF524()
{
  return sub_25E6AD064() & 1;
}

BOOL sub_25E6AF54C()
{
  return sub_25E6AD11C();
}

uint64_t sub_25E6AF574()
{
  return sub_25E6AD14C() & 1;
}

uint64_t sub_25E6AF59C()
{
  return sub_25E6ADC34();
}

uint64_t sub_25E6AF5C0()
{
  return sub_25E6AD9E8();
}

uint64_t sub_25E6AF5E4()
{
  return sub_25E6AD798();
}

uint64_t sub_25E6AF608()
{
  return sub_25E6AD55C();
}

uint64_t sub_25E6AF62C()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E498]);
}

uint64_t sub_25E6AF670()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E4F0]);
}

uint64_t sub_25E6AF6B4()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E548]);
}

uint64_t sub_25E6AF6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AF8A4(a1, a2, a3, MEMORY[0x263F8E3A8]);
}

uint64_t sub_25E6AF724()
{
  return sub_25E6B0DB8(MEMORY[0x263F8D9D0]);
}

uint64_t sub_25E6AF768()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E778]);
}

uint64_t sub_25E6AF7AC()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E888]);
}

uint64_t sub_25E6AF7F0()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E8F8]);
}

uint64_t sub_25E6AF834()
{
  return sub_25E6B0DB8(MEMORY[0x263F8E970]);
}

uint64_t sub_25E6AF878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AF8A4(a1, a2, a3, MEMORY[0x263F8E3B0]);
}

uint64_t sub_25E6AF8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  return a4(a1, v7, a3);
}

uint64_t sub_25E6AF900@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_25E6ADE7C(a1, a2, a3);
}

uint64_t sub_25E6AF924()
{
  return sub_25E6C2930();
}

uint64_t sub_25E6AF978()
{
  return sub_25E6C2920();
}

uint64_t sub_25E6AF9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFD60(a1, a2, a3, MEMORY[0x263F8E338]);
}

uint64_t sub_25E6AF9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFCBC(a1, a2, a3, MEMORY[0x263F8E340]);
}

uint64_t sub_25E6AFA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFD60(a1, a2, a3, MEMORY[0x263F8E348]);
}

uint64_t sub_25E6AFA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFB84(a1, a2, a3, MEMORY[0x263F8E358]);
}

uint64_t sub_25E6AFA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFC20(a1, a2, a3, MEMORY[0x263F8E360]);
}

uint64_t sub_25E6AFAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFCBC(a1, a2, a3, MEMORY[0x263F8E368]);
}

uint64_t sub_25E6AFAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFD60(a1, a2, a3, MEMORY[0x263F8E370]);
}

uint64_t sub_25E6AFB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFDF4(a1, a2, a3, MEMORY[0x263F8E380]);
}

uint64_t sub_25E6AFB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFD60(a1, a2, a3, MEMORY[0x263F8E350]);
}

uint64_t sub_25E6AFB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFB84(a1, a2, a3, MEMORY[0x263F8E378]);
}

uint64_t sub_25E6AFB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  return a4(a1, v7, a3) & 0x1FF;
}

uint64_t sub_25E6AFBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFC20(a1, a2, a3, MEMORY[0x263F8E388]);
}

uint64_t sub_25E6AFC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  return a4(a1, v7, a3) & 0x1FFFF;
}

uint64_t sub_25E6AFC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFCBC(a1, a2, a3, MEMORY[0x263F8E390]);
}

uint64_t sub_25E6AFCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  unint64_t v8 = a4(a1, v7, a3);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_25E6AFD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFD60(a1, a2, a3, MEMORY[0x263F8E398]);
}

uint64_t sub_25E6AFD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_25E6AFDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6AFDF4(a1, a2, a3, MEMORY[0x263F8E3A0]);
}

uint64_t sub_25E6AFDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_25E6AFE60()
{
  return sub_25E6C2940();
}

uint64_t sub_25E6AFEE0()
{
  return sub_25E6AF1EC();
}

uint64_t sub_25E6AFF04()
{
  return sub_25E6AF2AC();
}

uint64_t sub_25E6AFF28()
{
  return sub_25E6AF2DC();
}

uint64_t sub_25E6AFF4C()
{
  return sub_25E6AF39C();
}

uint64_t sub_25E6AFF70()
{
  type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = (void *)swift_allocObject();
  void v3[2] = MEMORY[0x263F8EE78];
  void v3[3] = v2;
  v3[4] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_25E6C28D0();
}

uint64_t sub_25E6B0028()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25E6B0080()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6B008C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6B0098()
{
  return sub_25E6AFF70();
}

uint64_t sub_25E6B00BC()
{
  return sub_25E6B011C();
}

uint64_t sub_25E6B00EC()
{
  return sub_25E6B011C();
}

uint64_t sub_25E6B011C()
{
  uint64_t v0 = sub_25E6C2800();
  swift_allocError();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x263F8DCB8], v0);
  return swift_willThrow();
}

unint64_t sub_25E6B01E0(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(void *)(a3 + 16) <= result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_25E687934(a3 + 40 * result + 32, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  if (swift_dynamicCast()) {
    return v3 != 0;
  }
  else {
    return 2;
  }
}

uint64_t sub_25E6B0268@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6 = sub_25E6C23B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B38DFC0);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(a2 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  sub_25E687934(a2 + 40 * a1 + 32, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  if (!swift_dynamicCast()) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  }
  if (qword_26B38E0A8 != -1) {
    goto LABEL_11;
  }
LABEL_5:
  swift_beginAccess();
  id v13 = (id)qword_26B38E0C8;
  uint64_t v14 = (void *)sub_25E6C24D0();
  id v15 = objc_msgSend(v13, sel_dateFromString_, v14);

  if (v15)
  {
    sub_25E6C23A0();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v12, v9, v6);
    uint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    v17(v12, 0, 1, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
    if (result != 1)
    {
      v16(a3, v12, v6);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v17)(a3, 0, 1, v6);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  __break(1u);
  return result;
}

unint64_t sub_25E6B0564@<X0>(unint64_t result@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(void *)(a2 + 16) <= result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_25E687934(a2 + 40 * result + 32, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v4 = sub_25E688C00(v7);
    unint64_t v6 = v5;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  *a3 = v4;
  a3[1] = v6;
  return result;
}

char *sub_25E6B0618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v30 = (void *)MEMORY[0x263F8EE78];
  sub_25E68B69C(0, v5, 0);
  uint64_t v9 = (void *)(a1 + 32);
  uint64_t v26 = type metadata accessor for SQLiteEncoder();
  while (1)
  {
    int64_t v28 = v5;
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v6;
    void v10[3] = v6;
    v10[4] = a2;
    uint64_t v11 = __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v29[3] = v26;
    void v29[4] = sub_25E6B0910(&qword_26A701798, (void (*)(uint64_t))type metadata accessor for SQLiteEncoder);
    v29[0] = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25E6C2490();
    if (v4)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      swift_release();
      return (char *)v11;
    }
    uint64_t result = (char *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v13 = v10[2];
    uint64_t v14 = *(void *)(a3 + 16);
    uint64_t v15 = a3;
    int64_t v16 = *(void *)(v13 + 16);
    int64_t v17 = v16 + v14;
    if (__OFADD__(v16, v14)) {
      break;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v18 = v15;
    swift_bridgeObjectRetain();
    uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (result && (uint64_t v19 = (char *)v13, v17 <= *(void *)(v13 + 24) >> 1))
    {
      a3 = v18;
      if (!v14) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v16 <= v17) {
        int64_t v20 = v16 + v14;
      }
      else {
        int64_t v20 = v16;
      }
      uint64_t result = sub_25E680AC8(result, v20, 1, (char *)v13);
      uint64_t v19 = result;
      a3 = v18;
      if (!v14) {
        goto LABEL_16;
      }
    }
    if ((*((void *)v19 + 3) >> 1) - *((void *)v19 + 2) < v14) {
      goto LABEL_26;
    }
    uint64_t result = (char *)swift_arrayInitWithCopy();
    uint64_t v21 = *((void *)v19 + 2);
    BOOL v22 = __OFADD__(v21, v14);
    uint64_t v23 = v21 + v14;
    if (v22) {
      goto LABEL_27;
    }
    *((void *)v19 + 2) = v23;
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25E68B69C(0, v11[2] + 1, 1);
      uint64_t v11 = v30;
    }
    unint64_t v25 = v11[2];
    unint64_t v24 = v11[3];
    if (v25 >= v24 >> 1)
    {
      sub_25E68B69C((void *)(v24 > 1), v25 + 1, 1);
      uint64_t v11 = v30;
    }
    v11[2] = v25 + 1;
    v11[v25 + 4] = v19;
    v9 += 5;
    int64_t v5 = v28 - 1;
    uint64_t v4 = 0;
    uint64_t v6 = MEMORY[0x263F8EE78];
    if (v28 == 1) {
      return (char *)v11;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SQLiteDecoder()
{
  return self;
}

uint64_t sub_25E6B0910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E6B095C()
{
  return sub_25E6B09A8();
}

uint64_t type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E6B0990()
{
  return sub_25E6B09A8();
}

uint64_t sub_25E6B09A8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E6B0A00(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_25E6B0A08(char a1, uint64_t a2)
{
  uint64_t v4 = sub_25E6C2820();
  swift_allocError();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018A8);
  *(void *)(v6 + 24) = a2;
  *(unsigned char *)uint64_t v6 = a1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, *MEMORY[0x263F8DCE0], v4);
  return swift_willThrow();
}

uint64_t sub_25E6B0AF4(__int16 a1, uint64_t a2)
{
  uint64_t v4 = sub_25E6C2820();
  swift_allocError();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018A8);
  *(void *)(v6 + 24) = a2;
  *(_WORD *)uint64_t v6 = a1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, *MEMORY[0x263F8DCE0], v4);
  return swift_willThrow();
}

uint64_t sub_25E6B0BE0(int a1, uint64_t a2)
{
  uint64_t v4 = sub_25E6C2820();
  swift_allocError();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018A8);
  *(void *)(v6 + 24) = a2;
  *(_DWORD *)uint64_t v6 = a1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, *MEMORY[0x263F8DCE0], v4);
  return swift_willThrow();
}

uint64_t sub_25E6B0CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E6C2820();
  swift_allocError();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018A8);
  v6[3] = a2;
  *uint64_t v6 = a1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(void *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, *MEMORY[0x263F8DCE0], v4);
  return swift_willThrow();
}

uint64_t sub_25E6B0DB8(uint64_t a1)
{
  uint64_t v2 = sub_25E6C2800();
  swift_allocError();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7018B0);
  void *v4 = a1;
  swift_bridgeObjectRetain();
  sub_25E6C27F0();
  (*(void (**)(void *, void, uint64_t))(*(void *)(v2 - 8) + 104))(v4, *MEMORY[0x263F8DCB0], v2);
  return swift_willThrow();
}

uint64_t sub_25E6B0E94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25E688CF4(a1, a2);
  }
  return a1;
}

unint64_t sub_25E6B0EA8()
{
  unint64_t result = qword_26A7018B8;
  if (!qword_26A7018B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7018B8);
  }
  return result;
}

uint64_t sub_25E6B0EFC(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v15 = result + 40;
  unint64_t v16 = *(void *)(result + 16);
  do
  {
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (int i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(i - 1);
      uint64_t v9 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      char v11 = sub_25E6C25E0();
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
      unint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return v5;
      }
    }
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      unint64_t result = (uint64_t)sub_25E68B5FC(0, *(void *)(v5 + 16) + 1, 1);
    }
    unint64_t v13 = *(void *)(v5 + 16);
    unint64_t v12 = *(void *)(v5 + 24);
    if (v13 >= v12 >> 1) {
      unint64_t result = (uint64_t)sub_25E68B5FC((char *)(v12 > 1), v13 + 1, 1);
    }
    *(void *)(v5 + 16) = v13 + 1;
    uint64_t v14 = v5 + 16 * v13;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v9;
    uint64_t v3 = v15;
    unint64_t v1 = v16;
  }
  while (v4 + v2);
  return v5;
}

uint64_t sub_25E6B10A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B38DFC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E6B1108()
{
  return sub_25E6C2A40();
}

unint64_t sub_25E6B116C()
{
  unint64_t result = qword_26A7018C8;
  if (!qword_26A7018C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A7018C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7018C8);
  }
  return result;
}

uint64_t sub_25E6B11D4()
{
  return sub_25E6AF608();
}

uint64_t sub_25E6B11EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void (*v10)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  uint64_t v41;
  _OWORD v42[10];
  uint64_t v43;
  void v44[21];
  void v45[23];

  char v5 = a1;
  uint64_t v30 = a3;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 16);
  char v11 = v3;
  uint64_t v29 = v9;
  v10((long long *)v45, v12, v9);
  unint64_t v13 = v45[4];
  uint64_t v14 = v45[5];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v45);
  if (v14)
  {
    if (v5)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_25E6C31A0;
      uint64_t v27 = (uint64_t *)(v15 + 32);
      int64_t v28 = v13;
      unint64_t v16 = v29;
      v10((long long *)v44, a2, v29);
      int64_t v17 = v44[2];
      uint64_t v18 = v44[3];
      swift_bridgeObjectRetain();
      sub_25E6C0EF4(v44);
      sub_25E6B1ABC(v17, v18, a2, v16, v27);
      swift_bridgeObjectRelease();
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(v15 + 104) = &protocol witness table for Expression<A>;
      *(void *)(v15 + 72) = 21313;
      *(void *)(v15 + 80) = 0xE200000000000000;
      int64_t v20 = MEMORY[0x263F8EE78];
      *(void *)(v15 + 88) = MEMORY[0x263F8EE78];
      *(void *)(v15 + 96) = v19;
      *(void *)(v15 + 136) = v19;
      *(void *)(v15 + 144) = &protocol witness table for Expression<A>;
      sub_25E681960(0, 0xE000000000000000, v28, v14, 34, 0xE100000000000000);
      *(void *)&v42[0] = 0;
      *((void *)&v42[0] + 1) = 0xE000000000000000;
      sub_25E6C24A0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C24A0();
      swift_bridgeObjectRelease();
      uint64_t v21 = *((void *)&v42[0] + 1);
      *(void *)(v15 + 112) = *(void *)&v42[0];
      *(void *)(v15 + 120) = v21;
      *(void *)(v15 + 128) = v20;
      sub_25E686E60(v15, v30);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayDestroy();
      return swift_deallocClassInstance();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v11;
  unint64_t v24 = v29;
  v10((long long *)v44, a2, v29);
  unint64_t v25 = v44[4];
  uint64_t v26 = v44[5];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v44);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23, a2);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  }
  else
  {
    v10(&v31, a2, v24);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
    v42[8] = v39;
    v42[9] = v40;
    uint64_t v43 = v41;
    v42[4] = v35;
    v42[5] = v36;
    v42[6] = v37;
    v42[7] = v38;
    v42[0] = v31;
    v42[1] = v32;
    v42[2] = v33;
    uint64_t v42[3] = v34;
    uint64_t v26 = *((void *)&v32 + 1);
    unint64_t v25 = v32;
    swift_bridgeObjectRetain();
    sub_25E6C0EF4(v42);
  }
  sub_25E6B1ABC(v25, v26, a2, v24, v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6B15CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void (*v13)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  uint64_t v29;
  _OWORD v30[10];
  uint64_t v31;
  void v32[23];
  uint64_t vars8;

  uint64_t v8 = *(void *)(a2 - 8);
  char v9 = MEMORY[0x270FA5388](a1);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
  {
    return sub_25E6B11EC(0, a2, a4);
  }
  else
  {
    unint64_t v13 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 16);
    v13((long long *)v32, a2, a3);
    uint64_t v14 = v32[5];
    uint64_t v18 = v32[4];
    swift_bridgeObjectRetain();
    sub_25E6C0EF4(v32);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v4, a2);
    if (v14)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
      uint64_t v15 = v18;
    }
    else
    {
      v13(&v19, a2, a3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
      v30[8] = v27;
      v30[9] = v28;
      uint64_t v31 = v29;
      v30[4] = v23;
      _OWORD v30[5] = v24;
      void v30[6] = v25;
      v30[7] = v26;
      v30[0] = v19;
      v30[1] = v20;
      v30[2] = v21;
      v30[3] = v22;
      uint64_t v14 = *((void *)&v20 + 1);
      uint64_t v15 = v20;
      swift_bridgeObjectRetain();
      sub_25E6C0EF4(v30);
    }
    a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    a4[4] = (uint64_t)&protocol witness table for Expression<A>;
    sub_25E681960(0, 0xE000000000000000, v15, v14, 34, 0xE100000000000000);
    *(void *)&v30[0] = 0;
    *((void *)&v30[0] + 1) = 0xE000000000000000;
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v16 = *((void *)&v30[0] + 1);
    *a4 = *(void *)&v30[0];
    a4[1] = v16;
    a4[2] = MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_25E6B1894(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_25E68B5FC(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x2611DFEE0](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_25E68B5FC((char *)(v12 > 1), v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E6B1994(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_25E68B5FC(0, v5, 0);
    uint64_t v6 = v19;
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v17[0] = *(v8 - 1);
      v17[1] = v9;
      swift_bridgeObjectRetain();
      a1(v18, v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25E68B5FC((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v6 = v19;
      }
      v8 += 2;
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_25E6B1ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  swift_bridgeObjectRetain();
  sub_25E681960(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  swift_bridgeObjectRelease();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 16))(v16, a3, a4);
  uint64_t v9 = v16[6];
  uint64_t v10 = v16[7];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v16);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 56) = v12;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    sub_25E681960(0, 0xE000000000000000, v9, v10, 34, 0xE100000000000000);
    sub_25E6C24A0();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C24A0();
    swift_bridgeObjectRelease();
    *(void *)(inited + 32) = 0;
    uint64_t v13 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE000000000000000;
    *(void *)(inited + 48) = v13;
    *(void *)(inited + 96) = v12;
    *(void *)(inited + 104) = &protocol witness table for Expression<A>;
    *(void *)(inited + 72) = 0;
    *(void *)(inited + 80) = 0xE000000000000000;
    *(void *)(inited + 88) = v13;
    sub_25E686E60(inited, a5);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    return swift_arrayDestroy();
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    a5[4] = (uint64_t)&protocol witness table for Expression<A>;
    *a5 = 0;
    a5[1] = 0xE000000000000000;
    a5[2] = MEMORY[0x263F8EE78];
    a5[3] = result;
  }
  return result;
}

uint64_t sub_25E6B1D54(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x52454E4E49;
    }
    else {
      uint64_t v3 = 0x54554F205446454CLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xEA00000000005245;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x52454E4E49;
      }
      else {
        uint64_t v6 = 0x54554F205446454CLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xEA00000000005245;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x53534F5243;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x53534F5243)
  {
LABEL_21:
    char v8 = sub_25E6C2910();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25E6B1E68(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE90000000000004ELL;
  uint64_t v3 = 0x4F49544341204F4ELL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4F49544341204F4ELL;
  unint64_t v6 = 0xE90000000000004ELL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x5443495254534552;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x4C4C554E20544553;
      break;
    case 3:
      uint64_t v5 = 0x4146454420544553;
      unint64_t v6 = 0xEB00000000544C55;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x45444143534143;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x5443495254534552) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x4C4C554E20544553) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x4146454420544553;
      unint64_t v2 = 0xEB00000000544C55;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x45444143534143) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_25E6C2910();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25E6B204C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x4543414C504552;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4543414C504552;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x4B4341424C4C4F52;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x54524F4241;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1279869254;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x45524F4E4749;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x4B4341424C4C4F52) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x54524F4241) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1279869254;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x45524F4E4749) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_25E6C2910();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_25E6B21F8(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000045;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x54414944454D4D49;
    }
    else {
      uint64_t v3 = 0x564953554C435845;
    }
    unint64_t v4 = 0xE900000000000045;
    int v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1) {
        uint64_t v6 = 0x54414944454D4D49;
      }
      else {
        uint64_t v6 = 0x564953554C435845;
      }
      if (v3 != v6) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x4445525245464544;
    int v5 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v2 = 0xE800000000000000;
  if (v3 != 0x4445525245464544)
  {
LABEL_15:
    char v7 = sub_25E6C2910();
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v2) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

SwiftSQLite::Insert __swiftcall QueryType.insert(_:)(Swift::OpaquePointer a1)
{
  unsigned __int8 v7 = 5;
  uint64_t v4 = sub_25E6B6EB4(&v7, (uint64_t)a1._rawValue, v1, v2, v3);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._uint64_t countAndFlagsBits = v4;
  return result;
}

SwiftSQLite::Insert __swiftcall QueryType.insert(or:_:)(SwiftSQLite::OnConflict or, Swift::OpaquePointer _)
{
  uint64_t v4 = sub_25E6B8124((char *)or, (uint64_t)_._rawValue, v2, v3, (uint64_t (*)(char *))sub_25E6B6EB4);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._uint64_t countAndFlagsBits = v4;
  return result;
}

SwiftSQLite::Insert __swiftcall QueryType.insertMany(_:)(Swift::OpaquePointer a1)
{
  unsigned __int8 v7 = 5;
  uint64_t v4 = sub_25E6B75B8(&v7, (uint64_t)a1._rawValue, v1, v2, v3);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t QueryType.upsert(_:onConflictOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = a2;
  uint64_t v31 = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_25E6B8614((uint64_t)sub_25E6B85F4, (uint64_t)v30, a1);
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v27 = v7;
    uint64_t v28 = a3;
    uint64_t v29 = a4;
    uint64_t v43 = MEMORY[0x263F8EE78];
    sub_25E68B6CC(0, v11, 0);
    uint64_t v12 = v10 + 32;
    do
    {
      sub_25E6C0C3C(v12, (uint64_t)v37);
      sub_25E681F18((uint64_t)v37, (uint64_t)v34);
      sub_25E681960(0, 0xE000000000000000, 0x646564756C637865, 0xE800000000000000, 34, 0xE100000000000000);
      *(void *)&long long v38 = 0;
      *((void *)&v38 + 1) = 0xE000000000000000;
      sub_25E6C24A0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C24A0();
      long long v13 = v38;
      sub_25E681F18((uint64_t)v34, (uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(inited + 32) = v13;
      *(void *)(inited + 56) = v15;
      *(void *)(inited + 64) = &protocol witness table for Expression<A>;
      *(void *)(inited + 40) = *((void *)&v13 + 1);
      *(void *)(inited + 48) = MEMORY[0x263F8EE78];
      uint64_t v16 = v35;
      uint64_t v17 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      *(void *)(inited + 96) = v15;
      *(void *)(inited + 104) = &protocol witness table for Expression<A>;
      v18(v16, v17);
      sub_25E686E60(inited, (uint64_t *)v33 + 1);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayDestroy();
      long long v40 = v33[0];
      long long v41 = v33[1];
      long long v42 = v33[2];
      long long v38 = v32[0];
      long long v39 = v32[1];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      sub_25E6C0C98((uint64_t)v37);
      uint64_t v19 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B6CC(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v43;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_25E68B6CC((char *)(v20 > 1), v21 + 1, 1);
        uint64_t v19 = v43;
      }
      *(void *)(v19 + 16) = v21 + 1;
      BOOL v22 = (_OWORD *)(v19 + 80 * v21);
      v22[2] = v38;
      long long v23 = v39;
      long long v24 = v40;
      long long v25 = v42;
      void v22[5] = v41;
      v22[6] = v25;
      v22[3] = v23;
      void v22[4] = v24;
      v12 += 80;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a4 = v29;
    uint64_t v7 = v27;
    a3 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
  QueryType.upsert(_:onConflictOf:set:)(a1, v7, v19, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

SwiftSQLite::Update __swiftcall QueryType.update(_:)(Swift::OpaquePointer a1)
{
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  uint64_t v8 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C4160;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = 0x455441445055;
  *(void *)(inited + 40) = 0xE600000000000000;
  int64_t v11 = (void *)MEMORY[0x263F8EE78];
  *(void *)(inited + 48) = MEMORY[0x263F8EE78];
  *(void *)(inited + 56) = v10;
  sub_25E6B11EC(0, v6, (uint64_t *)(inited + 72));
  *(void *)(inited + 136) = v10;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  uint64_t v12 = v11;
  *(void *)(inited + 112) = 5522771;
  *(void *)(inited + 120) = 0xE300000000000000;
  *(void *)(inited + 128) = v11;
  int64_t v13 = *((void *)a1._rawValue + 2);
  if (v13)
  {
    uint64_t v40 = v6;
    uint64_t v41 = v5;
    uint64_t v42 = v4;
    uint64_t v43 = v8;
    *(void *)&long long v45 = v12;
    sub_25E68B61C(0, v13, 0);
    uint64_t v14 = (char *)a1._rawValue + 32;
    uint64_t v15 = (uint64_t)v12;
    long long v44 = xmmword_25E6C3210;
    do
    {
      sub_25E6C0C3C((uint64_t)v14, (uint64_t)v49);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t v16 = swift_initStackObject();
      *(_OWORD *)(v16 + 16) = v44;
      sub_25E681F18((uint64_t)v49, v16 + 32);
      sub_25E681F18((uint64_t)&v52, v16 + 72);
      sub_25E686E60(v16, &v53);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayDestroy();
      sub_25E6C0C98((uint64_t)v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B61C(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v45;
      }
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1) {
        sub_25E68B61C((void *)(v17 > 1), v18 + 1, 1);
      }
      uint64_t v19 = v55;
      uint64_t v20 = v56;
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v55);
      MEMORY[0x270FA5388](v21);
      long long v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v24 + 16))(v23);
      sub_25E6C0BA4(v18, (uint64_t)v23, (uint64_t *)&v45, v19, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
      uint64_t v15 = v45;
      v14 += 80;
      --v13;
    }
    while (v13);
    uint64_t v8 = v43;
    uint64_t v6 = v40;
    uint64_t v5 = v41;
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v15 = (uint64_t)v12;
  }
  sub_25E686E60(v15, (uint64_t *)(inited + 152));
  swift_bridgeObjectRelease();
  sub_25E6B594C(v5, inited + 192);
  sub_25E6B6068(v6, v5, inited + 232);
  sub_25E6B6414(v5, inited + 272);
  v48[0] = (uint64_t)v12;
  for (uint64_t i = 32; i != 312; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v49, &qword_26B38E1F0);
    sub_25E69639C((uint64_t)v49, (uint64_t)&v45, &qword_26B38E1F0);
    if (v46)
    {
      sub_25E681E94(&v45, (uint64_t)&v53);
      sub_25E681E94((long long *)&v53, (uint64_t)&v45);
      uint64_t v26 = (void *)v48[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v26 = sub_25E680878(0, v26[2] + 1, 1, v26);
        v48[0] = (uint64_t)v26;
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        v48[0] = (uint64_t)sub_25E680878((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      uint64_t v29 = v46;
      uint64_t v30 = v47;
      uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v45, v46);
      MEMORY[0x270FA5388](v31);
      uint64_t v33 = (char *)&v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_25E6811A8(v28, (uint64_t)v33, v48, v29, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v45, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60(v48[0], v49);
  swift_bridgeObjectRelease();
  uint64_t v35 = v50;
  uint64_t v36 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v36 + 8))(&v53, v35, v36);
  *(void *)uint64_t v8 = v53;
  *(_OWORD *)(v8 + 8) = v54;
  uint64_t v37 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  result.bindings._rawValue = v39;
  result.template._object = v38;
  result.template._uint64_t countAndFlagsBits = v37;
  return result;
}

uint64_t sub_25E6B2C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  sub_25E681960(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  uint64_t v10 = 0;
  uint64_t v11 = 0xE000000000000000;
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  if (!*(void *)(v3 + 16) || (unint64_t v5 = sub_25E6A8B4C(v10, v11), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v5);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(void *)(v4 + 16))
  {
    sub_25E6826BC(v4 + 40 * v7 + 32, (uint64_t)&v10, &qword_26B38E1F8);
    BOOL v9 = v12 != 0;
    sub_25E681F7C((uint64_t)&v10, &qword_26B38E1F8);
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t Row.get<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a3;
  uint64_t v7 = sub_25E6C2790();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  BOOL v9 = (char *)&v23 - v8;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v12 = a1[2];
  long long v33 = *v4;
  uint64_t v13 = type metadata accessor for Expression();
  uint64_t v27 = v11;
  uint64_t v28 = v10;
  uint64_t v29 = v12;
  uint64_t v14 = type metadata accessor for Expression();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  ExpressionType.init<A>(_:)((uint64_t)&v27, v13, v14, WitnessTable, v16);
  uint64_t v27 = v30;
  uint64_t v28 = v31;
  uint64_t v29 = v32;
  uint64_t v17 = v34;
  Row.get<A>(_:)((uint64_t)&v27, a2, v26, (uint64_t)v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v20 = v24;
    uint64_t v19 = v25;
    uint64_t v21 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v22 = v11;
      *(void *)(v22 + 8) = v10;
      *(void *)(v22 + 16) = 0;
      *(unsigned char *)(v22 + 24) = 3;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v19, v9, a2);
    }
  }
  return result;
}

uint64_t Row.get<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)a1;
  long long v10 = *(_OWORD *)(a1 + 8);
  uint64_t v11 = *v4;
  uint64_t v12 = v4[1];
  uint64_t v13 = *(void *)(*v4 + 16);
  long long v41 = v10;
  if (v13)
  {
    uint64_t v14 = v10;
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_25E6A8B4C(v9, v14);
    if (v16)
    {
      unint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      uint64_t v18 = a4;
      unint64_t v19 = v17;
      uint64_t v20 = v12;
      return sub_25E6BE218(v19, v20, a2, a3, v18);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = v12;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_25E688954(v21);
  uint64_t v23 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v23);
  v38[2] = a2;
  v38[3] = a3;
  void v38[4] = v9;
  long long v39 = v41;
  uint64_t v24 = (void *)sub_25E6B87C4((uint64_t)sub_25E6C0CEC, (uint64_t)v38, (uint64_t)v22);
  uint64_t v25 = v24;
  uint64_t v26 = v24[2];
  if (v26 == 1)
  {
    uint64_t v32 = v24[4];
    uint64_t v31 = v24[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(v11 + 16))
    {
      unint64_t v33 = sub_25E6A8B4C(v32, v31);
      if (v34)
      {
        unint64_t v35 = *(void *)(*(void *)(v11 + 56) + 8 * v33);
        swift_bridgeObjectRelease();
        uint64_t v18 = a4;
        unint64_t v19 = v35;
        uint64_t v20 = v40;
        return sub_25E6BE218(v19, v20, a2, a3, v18);
      }
    }
    swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    if (v26)
    {
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v37 = v9;
      *(void *)(v37 + 8) = v41;
      *(void *)(v37 + 16) = v25;
      *(unsigned char *)(v37 + 24) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = v41;
    swift_bridgeObjectRetain();
    uint64_t v28 = (char *)sub_25E688954(v11);
    swift_bridgeObjectRelease();
    uint64_t v42 = v28;
    sub_25E6C0058(&v42);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = v42;
      sub_25E6B0EA8();
      swift_allocError();
      *(void *)uint64_t v30 = v9;
      *(void *)(v30 + 8) = v27;
      *(void *)(v30 + 16) = v29;
      *(unsigned char *)(v30 + 24) = 1;
      return swift_willThrow();
    }
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t SchemaType.select(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6B3470(a1, a2, a3, a4, 0);
}

uint64_t sub_25E6B32D0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  uint64_t (*v15)(void *, void);
  uint64_t v16;
  uint64_t v18;
  void v21[21];
  void v22[21];
  void v23[22];

  long long v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  v10(v22, a3, a5);
  uint64_t v11 = v22[3];
  uint64_t v18 = v22[2];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v22);
  v10(v23, a3, a5);
  uint64_t v13 = v23[6];
  uint64_t v12 = v23[7];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40))(v18, v11, v13, v12, a4, a6);
  v10(v21, a3, a5);
  (*(void (**)(void *, uint64_t, uint64_t))(a6 + 24))(v21, a4, a6);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a6 + 32);
  swift_bridgeObjectRetain();
  unint64_t v15 = (uint64_t (*)(void *, void))v14(v21, a4, a6);
  *(unsigned char *)char v16 = a1;
  *(void *)(v16 + 8) = a2;
  swift_bridgeObjectRelease();
  return v15(v21, 0);
}

uint64_t SchemaType.select(distinct:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6B3470(a1, a2, a3, a4, 1);
}

uint64_t sub_25E6B3470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25E6C3230;
  sub_25E681F18(a1, v10 + 32);
  swift_bridgeObjectRetain();
  sub_25E686920(a2);
  sub_25E6B32D0(a5, v10, a3, a3, *(void *)(a4 + 8), *(void *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t SchemaType.select(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6B32D0(0, a1, a2, a2, *(void *)(a3 + 8), *(void *)(a3 + 8));
}

uint64_t SchemaType.select(distinct:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6B32D0(1, a1, a2, a2, *(void *)(a3 + 8), *(void *)(a3 + 8));
}

uint64_t SchemaType.select(_:)(void (*a1)(void *, void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6B3598(a1, a2, a3, a4, 0);
}

uint64_t SchemaType.select(distinct:)(void (*a1)(void *, void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6B3598(a1, a2, a3, a4, 1);
}

uint64_t sub_25E6B3598(void (*a1)(void *, void *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E6C3230;
  memset(v12, 0, sizeof(v12));
  memset(v11, 0, sizeof(v11));
  *(void *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(v9 + 64) = &protocol witness table for Expression<A>;
  a1(v12, v11);
  sub_25E6B32D0(a5, v9, a3, a3, *(void *)(a4 + 8), *(void *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t SchemaType.select<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6B36B0(a1, a2, a3, a4, a5, 0);
}

{
  return sub_25E6B37B4(a1, a2, a3, a4, a5, 0);
}

uint64_t SchemaType.select<A>(distinct:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E6B36B0(a1, a2, a3, a4, a5, 1);
}

{
  return sub_25E6B37B4(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_25E6B36B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_25E6C3230;
  *(void *)(v12 + 56) = type metadata accessor for Expression();
  *(void *)(v12 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v12 + 32) = v10;
  *(void *)(v12 + 40) = v9;
  *(void *)(v12 + 48) = v11;
  uint64_t v13 = type metadata accessor for ScalarQuery();
  uint64_t v14 = *(void *)(a4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6B32D0(a6, v12, a2, v13, v14, (uint64_t)&protocol witness table for ScalarQuery<A>);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6B37B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_25E6C3230;
  sub_25E6C2790();
  *(void *)(v12 + 56) = type metadata accessor for Expression();
  *(void *)(v12 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v12 + 32) = v10;
  *(void *)(v12 + 40) = v9;
  *(void *)(v12 + 48) = v11;
  uint64_t v13 = type metadata accessor for ScalarQuery();
  uint64_t v14 = *(void *)(a4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6B32D0(a6, v12, a2, v13, v14, (uint64_t)&protocol witness table for ScalarQuery<A>);
  return swift_bridgeObjectRelease();
}

uint64_t SchemaType.count.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t v13 = &protocol witness table for Expression<A>;
  uint64_t v9 = 42;
  unint64_t v10 = 0xE100000000000000;
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v12 = v4;
  sub_25E6C25A0();
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(&v9, v4);
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v6 = v5[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  uint64_t v9 = 0x746E756F63;
  unint64_t v10 = 0xE500000000000000;
  uint64_t v11 = v6;
  SchemaType.select<A>(_:)(&v9, a1, MEMORY[0x263F8D6C8], a2, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.union(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  sub_25E681F18(a1, (uint64_t)v17);
  uint64_t v8 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a3 + 32))(v16, a2, a3);
  uint64_t v10 = v9;
  uint64_t v11 = *(void **)(v9 + 160);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v10 + 160) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v11 = sub_25E680BE0(0, v11[2] + 1, 1, v11);
    *(void *)(v10 + 160) = v11;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v11 = sub_25E680BE0((void *)(v13 > 1), v14 + 1, 1, v11);
    *(void *)(v10 + 160) = v11;
  }
  v11[2] = v14 + 1;
  sub_25E681E94(v17, (uint64_t)&v11[5 * v14 + 4]);
  return v8(v16, 0);
}

uint64_t QueryType.join(_:on:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = 1;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  QueryType.join(_:_:on:)(&v14, a1, (uint64_t)v13, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v5;
  uint64_t v7;
  long long v8;
  char v9;

  uint64_t v5 = *a2;
  uint64_t v9 = 1;
  uint64_t v7 = v5;
  uint64_t v8 = *(_OWORD *)(a2 + 1);
  return QueryType.join(_:_:on:)(&v9, a1, (uint64_t)&v7, a3, a4, a5);
}

uint64_t QueryType.join(_:_:on:)@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void (*v22)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **);
  uint64_t v23;
  _UNKNOWN **v24;
  uint64_t v25;
  uint64_t (*v26)(void *, void);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v39;
  uint64_t v40;
  char v41;
  long long v42;
  uint64_t v43;
  uint64_t v44;
  long long v45;
  uint64_t v46;
  long long v47;
  uint64_t v48;
  _UNKNOWN **v49;
  void v50[5];
  long long v51;
  long long v52;
  long long v53;
  _OWORD v54[2];
  uint64_t v55;
  long long v56;
  uint64_t v57;
  uint64_t v58;
  _UNKNOWN **v59;
  long long v60[2];
  void v61[9];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  uint64_t v8 = a4;
  long long v41 = *a1;
  uint64_t v42 = *(_OWORD *)a3;
  uint64_t v43 = *(void *)(a3 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(a6, v6, a4);
  sub_25E681F18((uint64_t)a2, (uint64_t)v60);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v61, v10, v11);
  uint64_t v12 = v62;
  uint64_t v13 = v63;
  uint64_t v14 = v64;
  sub_25E681ED4(v62, v63);
  sub_25E6C0EF4(v61);
  if (v13)
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    *((void *)&v52 + 1) = v15;
    *(void *)&uint64_t v53 = &protocol witness table for Expression<A>;
    uint64_t v58 = v15;
    uint64_t v59 = &protocol witness table for Expression<A>;
    uint64_t v56 = v42;
    long long v57 = v43;
    v50[3] = v15;
    v50[4] = &protocol witness table for Expression<A>;
    v50[0] = v12;
    v50[1] = v13;
    v50[2] = v14;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v16 = v12;
    uint64_t v40 = v12;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)&v56, inited + 32);
    sub_25E681F18((uint64_t)v50, inited + 72);
    uint64_t v46 = 32;
    *(void *)&uint64_t v47 = 0xE100000000000000;
    sub_25E681ED4(v16, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v46);
    swift_bridgeObjectRelease();
    uint64_t v18 = a5;
    uint64_t v19 = v8;
    uint64_t v20 = v48;
    uint64_t v21 = v49;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    uint64_t v22 = (void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v21[1];
    uint64_t v23 = v20;
    a5 = v18;
    uint64_t v24 = v21;
    uint64_t v8 = v19;
    v22(&v44, v23, v24);
    uint64_t v25 = v44;
    long long v39 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    id v48 = v15;
    uint64_t v49 = &protocol witness table for Expression<A>;
    uint64_t v46 = v25;
    uint64_t v47 = v39;
    sub_25E680770(&v46, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
    sub_25E6C0D2C(v40, v13);
    if (*((void *)&v52 + 1))
    {
      sub_25E681E94(&v51, (uint64_t)&v56);
      goto LABEL_6;
    }
  }
  else
  {
    *(void *)&uint64_t v53 = 0;
    uint64_t v51 = 0u;
    uint64_t v52 = 0u;
  }
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
  uint64_t v59 = &protocol witness table for Expression<A>;
  uint64_t v56 = v42;
  long long v57 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681F7C((uint64_t)&v51, &qword_26B38E1F0);
LABEL_6:
  LOBYTE(v51) = v41;
  sub_25E681E94(v60, (uint64_t)&v51 + 8);
  sub_25E681E94(&v56, (uint64_t)v54);
  uint64_t v26 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(a5 + 32))(v50, v8, a5);
  uint64_t v28 = v27;
  uint64_t v29 = *(void **)(v27 + 64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v28 + 64) = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v29 = sub_25E680D30(0, v29[2] + 1, 1, v29);
    *(void *)(v28 + 64) = v29;
  }
  uint64_t v32 = v29[2];
  uint64_t v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    uint64_t v29 = sub_25E680D30((void *)(v31 > 1), v32 + 1, 1, v29);
    *(void *)(v28 + 64) = v29;
  }
  v29[2] = v32 + 1;
  unint64_t v33 = &v29[11 * v32];
  char v34 = v52;
  *((_OWORD *)v33 + 2) = v51;
  *((_OWORD *)v33 + 3) = v34;
  unint64_t v35 = v53;
  uint64_t v36 = v54[0];
  uint64_t v37 = v54[1];
  v33[14] = v55;
  *((_OWORD *)v33 + 5) = v36;
  *((_OWORD *)v33 + 6) = v37;
  *((_OWORD *)v33 + 4) = v35;
  return v26(v50, 0);
}

uint64_t QueryType.join(_:_:on:)@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v12 = a3[2];
  char v15 = *a1;
  v14[0] = v10;
  v14[1] = v11;
  v14[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  QueryType.join(_:_:on:)(&v15, a2, (uint64_t)v14, a4, a5, a6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.filter(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  v10[0] = *a1;
  v10[1] = v7;
  v10[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  QueryType.filter(_:)(v10, a2, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  void *v19;
  uint64_t (*v20)(void *, void);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  long long v25;
  uint64_t v26;
  uint64_t v27;
  long long v28;
  uint64_t v29;
  long long v30;
  uint64_t v31;
  _UNKNOWN **v32;
  void v33[5];
  void v34[5];
  void v35[9];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 16))(v35, a2, a3);
  uint64_t v11 = v36;
  uint64_t v10 = v37;
  uint64_t v12 = v38;
  sub_25E681ED4(v36, v37);
  sub_25E6C0EF4(v35);
  if (v10)
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    void v34[3] = v13;
    void v34[4] = &protocol witness table for Expression<A>;
    v34[0] = v11;
    v34[1] = v10;
    v34[2] = v12;
    _OWORD v33[3] = v13;
    v33[4] = &protocol witness table for Expression<A>;
    v33[0] = v7;
    v33[1] = v8;
    _OWORD v33[2] = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t v14 = v11;
    uint64_t v26 = v11;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    sub_25E681F18((uint64_t)v34, inited + 32);
    sub_25E681F18((uint64_t)v33, inited + 72);
    uint64_t v29 = 32;
    *(void *)&uint64_t v30 = 0xE100000000000000;
    sub_25E681ED4(v14, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    sub_25E6C25A0();
    sub_25E686E60(inited, &v29);
    swift_bridgeObjectRelease();
    uint64_t v16 = v31;
    unint64_t v17 = v32;
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v27, v16, v17);
    uint64_t v18 = v27;
    uint64_t v25 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    uint64_t v31 = v13;
    uint64_t v32 = &protocol witness table for Expression<A>;
    uint64_t v29 = v18;
    uint64_t v30 = v25;
    uint64_t v27 = 0;
    *(void *)&uint64_t v28 = 0xE000000000000000;
    sub_25E6C25A0();
    uint64_t v19 = __swift_project_boxed_opaque_existential_1(&v29, v13);
    swift_bridgeObjectRetain();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    sub_25E6C25A0();
    uint64_t v7 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v19[2];
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    sub_25E6C0D2C(v26, v10);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v20 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 32))(v34, a2, a3);
  uint64_t v22 = v21[9];
  uint64_t v23 = v21[10];
  v21[9] = v7;
  v21[10] = v8;
  v21[11] = v9;
  sub_25E6C0D2C(v22, v23);
  return v20(v34, 0);
}

uint64_t QueryType.where(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11[0] = v8;
  v11[1] = v7;
  v11[2] = v9;
  QueryType.filter(_:)(v11, a2, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.where(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)a1;
  long long v6 = *(_OWORD *)(a1 + 8);
  return QueryType.filter(_:)(&v5, a2, a3, a4);
}

uint64_t QueryType.group(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  memset(v5, 0, sizeof(v5));
  return sub_25E6B4648(a1, v5, a2, a3, a4);
}

{
  uint64_t v5[3];

  memset(v5, 0, sizeof(v5));
  return sub_25E6B4648(a1, v5, a2, a3, a4);
}

uint64_t sub_25E6B4648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = a2[2];
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a5, v5);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 32);
  swift_bridgeObjectRetain();
  sub_25E681ED4(v9, v10);
  uint64_t v13 = (uint64_t (*)(unsigned char *, void))v12(v19, a3, a4);
  uint64_t v15 = v14[12];
  uint64_t v16 = v14[13];
  uint64_t v17 = v14[14];
  v14[12] = a1;
  v14[13] = v9;
  v14[14] = v10;
  v14[15] = v11;
  sub_25E6C0D70(v15, v16, v17);
  return v13(v19, 0);
}

uint64_t QueryType.group(_:having:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6B4814(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t))QueryType.group(_:having:));
}

{
  return sub_25E6B4814(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t))QueryType.group(_:having:));
}

uint64_t QueryType.group(_:having:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  v12[0] = *a2;
  v12[1] = v9;
  v12[2] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6B4648(a1, v12, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t vars8;

  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  v12[0] = *a2;
  v12[1] = v9;
  v12[2] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E6B4648(a1, v12, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6B4814(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t))
{
  uint64_t v10 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_25E6C3230;
  sub_25E681F18(a1, v11 + 32);
  uint64_t v13 = v10;
  long long v14 = *(_OWORD *)(a2 + 1);
  a5(v11, &v13, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.order(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a3 + 32);
  swift_bridgeObjectRetain();
  uint64_t v9 = (uint64_t (*)(unsigned char *, void))v8(v12, a2, a3);
  *(void *)(v10 + 128) = a1;
  swift_bridgeObjectRelease();
  return v9(v12, 0);
}

uint64_t QueryType.limit(_:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_25E6B4A74(a1, a2 & 1, 0, 1, a3, a4, a5);
}

uint64_t sub_25E6B4A74@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(a7, v7, a5);
  char v14 = a4 & 1;
  char v16 = a2 & 1;
  BOOL v15 = (a2 & 1) == 0;
  if (a2) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = a1;
  }
  if (v15)
  {
    char v18 = v14;
  }
  else
  {
    a3 = 0;
    char v18 = 0;
  }
  uint64_t v19 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a6 + 32))(v22, a5, a6);
  *(void *)(v20 + 136) = v17;
  *(void *)(v20 + 144) = a3;
  *(unsigned char *)(v20 + 152) = v18;
  *(unsigned char *)(v20 + 153) = v16;
  return v19(v22, 0);
}

uint64_t QueryType.limit(_:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a5, v5);
  uint64_t v10 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 32))(v13, a3, a4);
  *(void *)(v11 + 136) = a1;
  *(void *)(v11 + 144) = a2;
  *(_WORD *)(v11 + 152) = 0;
  return v10(v13, 0);
}

uint64_t sub_25E6B4C30@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  if (*v2) {
    uint64_t v5 = 0x44205443454C4553;
  }
  else {
    uint64_t v5 = 0x5443454C4553;
  }
  if (*v2) {
    unint64_t v6 = 0xEF54434E49545349;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v8;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_25E686E60(v9, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = v7;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = 1297044038;
  *(void *)(inited + 120) = 0xE400000000000000;
  *(void *)(inited + 128) = v8;
  a1(1);
  sub_25E686E60(inited, a2);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

uint64_t sub_25E6B4D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void (*v6)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void v15[21];
  void v16[22];

  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  unint64_t v6 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  v6(v16, a1, a2);
  sub_25E6C0EF4(v16);
  if (LOBYTE(v16[0])) {
    uint64_t v7 = 0x44205443454C4553;
  }
  else {
    uint64_t v7 = 0x5443454C4553;
  }
  if (LOBYTE(v16[0])) {
    uint64_t v8 = 0xEF54434E49545349;
  }
  else {
    uint64_t v8 = 0xE600000000000000;
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  uint64_t v10 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = v10;
  uint64_t v11 = v10;
  v6(v15, a1, a2);
  uint64_t v12 = v15[1];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v15);
  sub_25E686E60(v12, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = v9;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = 1297044038;
  *(void *)(inited + 120) = 0xE400000000000000;
  *(void *)(inited + 128) = v11;
  sub_25E6B11EC(1, a1, (uint64_t *)(inited + 152));
  sub_25E686E60(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  return swift_arrayDestroy();
}

double sub_25E6B4F68@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v39 = v2;
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v25 = (uint64_t *)a1;
    uint64_t v38 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25E68B61C(0, v3, 0);
    uint64_t v27 = (long long *)&v34;
    uint64_t v28 = &v31;
    uint64_t v4 = v2 + 40;
    long long v26 = xmmword_25E6C3220;
    uint64_t v5 = MEMORY[0x263F8EE78];
    do
    {
      unint64_t v6 = (long long *)v28;
      sub_25E681F18(v4, (uint64_t)v28);
      uint64_t v7 = v27;
      sub_25E681F18(v4 + 40, (uint64_t)v27);
      sub_25E681E94(v6, (uint64_t)v36);
      sub_25E681E94(v7, (uint64_t)v35);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v26;
      uint64_t v29 = inited + 32;
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C25A0();
      uint64_t v9 = v30;
      unint64_t v10 = v31;
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(inited + 56) = v11;
      *(void *)(inited + 64) = &protocol witness table for Expression<A>;
      *(void *)(inited + 32) = v9;
      *(void *)(inited + 40) = v10;
      *(void *)(inited + 48) = v5;
      uint64_t v12 = v37;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      sub_25E6B11EC(1, v12, (uint64_t *)(inited + 72));
      *(void *)(inited + 136) = v11;
      *(void *)(inited + 144) = &protocol witness table for Expression<A>;
      *(void *)(inited + 112) = 20047;
      *(void *)(inited + 120) = 0xE200000000000000;
      *(void *)(inited + 128) = v5;
      sub_25E681F18((uint64_t)v35, inited + 152);
      sub_25E686E60(inited, &v30);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayDestroy();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      uint64_t v13 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B61C(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v38;
      }
      unint64_t v15 = *(void *)(v13 + 16);
      unint64_t v14 = *(void *)(v13 + 24);
      if (v15 >= v14 >> 1) {
        sub_25E68B61C((void *)(v14 > 1), v15 + 1, 1);
      }
      uint64_t v16 = v32;
      uint64_t v17 = v33;
      uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30, v32);
      MEMORY[0x270FA5388](v18);
      uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v20);
      sub_25E6C0BA4(v15, (uint64_t)v20, &v38, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
      v4 += 88;
      --v3;
    }
    while (v3);
    uint64_t v22 = v38;
    sub_25E6C1EB8((uint64_t)&v39);
    sub_25E686E60(v22, v25);
    swift_release();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_25E6B531C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(void *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned char v25[88];
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void v30[21];
  void v31[22];

  unint64_t v6 = *(void (**)(void *__return_ptr))(a2 + 16);
  v6(v31);
  uint64_t v7 = v31[8];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v31);
  uint64_t v8 = *(void *)(v7 + 16);
  double result = swift_bridgeObjectRelease();
  if (v8)
  {
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)(v30, a1, a2);
    unint64_t v10 = v30[8];
    swift_bridgeObjectRetain();
    sub_25E6C0EF4(v30);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v29 = MEMORY[0x263F8EE78];
      sub_25E68B61C(0, v11, 0);
      uint64_t v24 = v10;
      uint64_t v12 = v10 + 32;
      uint64_t v13 = a3;
      do
      {
        sub_25E6826BC(v12, (uint64_t)v25, &qword_26B38E048);
        sub_25E6B55C4((uint64_t)v25, v26);
        sub_25E681F7C((uint64_t)v25, &qword_26B38E048);
        unint64_t v14 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E68B61C(0, *(void *)(v14 + 16) + 1, 1);
          unint64_t v14 = v29;
        }
        uint64_t v16 = *(void *)(v14 + 16);
        unint64_t v15 = *(void *)(v14 + 24);
        if (v16 >= v15 >> 1) {
          sub_25E68B61C((void *)(v15 > 1), v16 + 1, 1);
        }
        uint64_t v17 = v27;
        uint64_t v18 = v28;
        uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
        MEMORY[0x270FA5388](v19);
        uint64_t v21 = &v25[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(unsigned char *))(v22 + 16))(v21);
        sub_25E6C0BA4(v16, (uint64_t)v21, &v29, v17, v18);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        v12 += 88;
        --v11;
      }
      while (v11);
      a3 = v13;
      uint64_t v23 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = MEMORY[0x263F8EE78];
    }
    sub_25E686E60(v23, (uint64_t *)a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_25E6B55C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_25E681F18(a1 + 8, (uint64_t)v10);
  sub_25E681F18(a1 + 48, (uint64_t)v11);
  sub_25E681E94(v10, (uint64_t)v13);
  sub_25E681E94(v11, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3220;
  *(void *)&v10[0] = 0xE000000000000000;
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C25A0();
  uint64_t v5 = *(void *)&v10[0];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 32) = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v7;
  uint64_t v8 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  sub_25E6B11EC(1, v8, (uint64_t *)(inited + 72));
  *(void *)(inited + 136) = v6;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  *(void *)(inited + 112) = 20047;
  *(void *)(inited + 120) = 0xE200000000000000;
  *(void *)(inited + 128) = v7;
  sub_25E681F18((uint64_t)v12, inited + 152);
  sub_25E686E60(inited, a2);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t JoinType.rawValue.getter()
{
  uint64_t v1 = 0x52454E4E49;
  if (*v0 != 1) {
    uint64_t v1 = 0x54554F205446454CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x53534F5243;
  }
}

double sub_25E6B5828@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[10];
  if (v3)
  {
    uint64_t v4 = v1[11];
    uint64_t v5 = v1[9];
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 32) = 0x4552454857;
    *(void *)(inited + 56) = v7;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    uint64_t v8 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    *(void *)(inited + 104) = &protocol witness table for Expression<A>;
    *(void *)(inited + 72) = v5;
    *(void *)(inited + 80) = v3;
    *(void *)(inited + 88) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E686E60(inited, (uint64_t *)a1);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_25E6B594C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(a1 + 16))(v10);
  uint64_t v3 = v11;
  uint64_t v4 = v12;
  uint64_t v5 = v13;
  sub_25E681ED4(v11, v12);
  sub_25E6C0EF4(v10);
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 32) = 0x4552454857;
    *(void *)(inited + 56) = v7;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    uint64_t v8 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
    *(void *)(inited + 104) = &protocol witness table for Expression<A>;
    *(void *)(inited + 72) = v3;
    *(void *)(inited + 80) = v4;
    *(void *)(inited + 88) = v5;
    sub_25E686E60(inited, (uint64_t *)a2);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_25E6B5A8C(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[12];
  if (v3)
  {
    uint64_t v5 = v1[13];
    uint64_t v4 = v1[14];
    uint64_t v6 = v1[15];
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 56) = v8;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    *(void *)(inited + 32) = 0x59422050554F5247;
    uint64_t v9 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v9;
    swift_bridgeObjectRetain();
    sub_25E681ED4(v5, v4);
    sub_25E686E60(v3, (uint64_t *)(inited + 72));
    sub_25E686E60(inited, (uint64_t *)v12);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_25E6C3210;
      sub_25E681F18((uint64_t)v12, v10 + 32);
      uint64_t v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = xmmword_25E6C3210;
      *(void *)(v11 + 56) = v8;
      *(void *)(v11 + 64) = &protocol witness table for Expression<A>;
      *(void *)(v11 + 32) = 0x474E49564148;
      *(void *)(v11 + 40) = 0xE600000000000000;
      *(void *)(v11 + 48) = MEMORY[0x263F8EE78];
      *(void *)(v11 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
      *(void *)(v11 + 104) = &protocol witness table for Expression<A>;
      *(void *)(v11 + 72) = v5;
      *(void *)(v11 + 80) = v4;
      *(void *)(v11 + 88) = v6;
      sub_25E686E60(v11, (uint64_t *)(v10 + 72));
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_25E686E60(v10, (uint64_t *)a1);
      swift_setDeallocating();
      swift_arrayDestroy();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      sub_25E681E94(v12, a1);
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

void *sub_25E6B5CE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(a1 + 16))(v14);
  uint64_t v4 = v15;
  uint64_t v3 = v16;
  uint64_t v5 = v17;
  uint64_t v6 = v18;
  sub_25E6C0E9C(v15, v16, v17);
  double result = sub_25E6C0EF4(v14);
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 56) = v9;
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    *(void *)(inited + 32) = 0x59422050554F5247;
    uint64_t v10 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v10;
    sub_25E686E60(v4, (uint64_t *)(inited + 72));
    sub_25E686E60(inited, (uint64_t *)v13);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if (v5)
    {
      uint64_t v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = xmmword_25E6C3210;
      sub_25E681F18((uint64_t)v13, v11 + 32);
      uint64_t v12 = swift_initStackObject();
      *(_OWORD *)(v12 + 16) = xmmword_25E6C3210;
      *(void *)(v12 + 56) = v9;
      *(void *)(v12 + 64) = &protocol witness table for Expression<A>;
      *(void *)(v12 + 32) = 0x474E49564148;
      *(void *)(v12 + 40) = 0xE600000000000000;
      *(void *)(v12 + 48) = MEMORY[0x263F8EE78];
      *(void *)(v12 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0C0);
      *(void *)(v12 + 104) = &protocol witness table for Expression<A>;
      *(void *)(v12 + 72) = v3;
      *(void *)(v12 + 80) = v5;
      *(void *)(v12 + 88) = v6;
      sub_25E686E60(v12, (uint64_t *)(v11 + 72));
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_25E686E60(v11, (uint64_t *)a2);
      swift_setDeallocating();
      swift_arrayDestroy();
      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    else
    {
      return (void *)sub_25E681E94(v13, a2);
    }
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_25E6B5F50@<D0>(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)(v1 + 128) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    *(void *)(inited + 32) = 0x594220524544524FLL;
    uint64_t v4 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v4;
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_25E686E60(v5, (uint64_t *)(inited + 72));
    swift_bridgeObjectRelease();
    sub_25E686E60(inited, (uint64_t *)a1);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_25E6B6068@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(void *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  double result;
  void v13[21];
  void v14[21];

  uint64_t v6 = *(void (**)(void *__return_ptr))(a2 + 16);
  v6(v14);
  uint64_t v7 = v14[16];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v14);
  uint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
    *(void *)(inited + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(inited + 64) = &protocol witness table for Expression<A>;
    *(void *)(inited + 32) = 0x594220524544524FLL;
    uint64_t v10 = MEMORY[0x263F8EE78];
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v10;
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)(v13, a1, a2);
    uint64_t v11 = v13[16];
    swift_bridgeObjectRetain();
    sub_25E6C0EF4(v13);
    sub_25E686E60(v11, (uint64_t *)(inited + 72));
    swift_bridgeObjectRelease();
    sub_25E686E60(inited, (uint64_t *)a3);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
    swift_arrayDestroy();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_25E6B61F0@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  v9[0] = *(_OWORD *)(v1 + 128);
  v9[1] = v3;
  uint64_t v10 = *(void *)(v1 + 160);
  sub_25E69639C((uint64_t)v9 + 8, (uint64_t)v11, &qword_26B38E210);
  uint64_t result = sub_25E69639C((uint64_t)v11, (uint64_t)&v12, &qword_26B38E210);
  if (v14)
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    char v5 = v13;
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    if (v5)
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(a1 + 32) = &protocol witness table for Expression<A>;
      *(void *)a1 = 0x2054494D494CLL;
      *(void *)(a1 + 8) = 0xE600000000000000;
      *(void *)(a1 + 16) = MEMORY[0x263F8EE78];
      *(void *)(a1 + 24) = result;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(inited + 56) = v7;
      *(void *)(inited + 64) = &protocol witness table for Expression<A>;
      *(void *)(inited + 32) = 0x2054494D494CLL;
      uint64_t v8 = MEMORY[0x263F8EE78];
      *(void *)(inited + 40) = 0xE600000000000000;
      *(void *)(inited + 48) = v8;
      sub_25E6C2900();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 96) = v7;
      *(void *)(inited + 104) = &protocol witness table for Expression<A>;
      *(void *)(inited + 72) = 0x2054455346464FLL;
      *(void *)(inited + 80) = 0xE700000000000000;
      *(void *)(inited + 88) = v8;
      sub_25E686E60(inited, (uint64_t *)a1);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      return swift_arrayDestroy();
    }
  }
  return result;
}

uint64_t sub_25E6B6414@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(a1 + 16))(v8);
  uint64_t result = (uint64_t)sub_25E6C0EF4(v8);
  if (v10)
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    char v4 = v9;
    sub_25E6C2900();
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(a2 + 32) = &protocol witness table for Expression<A>;
      *(void *)a2 = 0x2054494D494CLL;
      *(void *)(a2 + 8) = 0xE600000000000000;
      *(void *)(a2 + 16) = MEMORY[0x263F8EE78];
      *(void *)(a2 + 24) = result;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(inited + 56) = v6;
      *(void *)(inited + 64) = &protocol witness table for Expression<A>;
      *(void *)(inited + 32) = 0x2054494D494CLL;
      uint64_t v7 = MEMORY[0x263F8EE78];
      *(void *)(inited + 40) = 0xE600000000000000;
      *(void *)(inited + 48) = v7;
      sub_25E6C2900();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 96) = v6;
      *(void *)(inited + 104) = &protocol witness table for Expression<A>;
      *(void *)(inited + 72) = 0x2054455346464FLL;
      *(void *)(inited + 80) = 0xE700000000000000;
      *(void *)(inited + 88) = v7;
      sub_25E686E60(inited, (uint64_t *)a2);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      return swift_arrayDestroy();
    }
  }
  return result;
}

double sub_25E6B65FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v31 = v2;
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v22 = (uint64_t *)a1;
    uint64_t v30 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25E68B61C(0, v3, 0);
    uint64_t v4 = v2 + 32;
    uint64_t v5 = v30;
    long long v23 = xmmword_25E6C3210;
    do
    {
      sub_25E681F18(v4, (uint64_t)v24);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v23;
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
      *(void *)(inited + 32) = 0x4E4F494E55;
      *(void *)(inited + 56) = v7;
      *(void *)(inited + 64) = &protocol witness table for Expression<A>;
      *(void *)(inited + 40) = 0xE500000000000000;
      *(void *)(inited + 48) = MEMORY[0x263F8EE78];
      uint64_t v8 = v25;
      uint64_t v9 = v26;
      char v10 = __swift_project_boxed_opaque_existential_1(v24, v25);
      *(void *)(inited + 96) = v8;
      *(void *)(inited + 104) = *(void *)(v9 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
      sub_25E686E60(inited, v27);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayDestroy();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B61C(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v30;
      }
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1) {
        sub_25E68B61C((void *)(v12 > 1), v13 + 1, 1);
      }
      uint64_t v14 = v28;
      uint64_t v15 = v29;
      uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
      MEMORY[0x270FA5388](v16);
      uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      sub_25E6C0BA4(v13, (uint64_t)v18, &v30, v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      uint64_t v5 = v30;
      v4 += 40;
      --v3;
    }
    while (v3);
    sub_25E6C1EB8((uint64_t)&v31);
    sub_25E686E60(v5, v22);
    swift_release();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_25E6B690C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(void *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  long long v30;
  void v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void v38[21];
  void v39[22];

  uint64_t v6 = *(void (**)(void *__return_ptr))(a2 + 16);
  v6(v39);
  uint64_t v7 = v39[20];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v39);
  uint64_t v8 = *(void *)(v7 + 16);
  double result = swift_bridgeObjectRelease();
  if (v8)
  {
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)(v38, a1, a2);
    char v10 = v38[20];
    swift_bridgeObjectRetain();
    sub_25E6C0EF4(v38);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v29 = a3;
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_25E68B61C(0, v11, 0);
      uint64_t v28 = v10;
      unint64_t v12 = v10 + 32;
      unint64_t v13 = v37;
      uint64_t v30 = xmmword_25E6C3210;
      do
      {
        sub_25E681F18(v12, (uint64_t)v31);
        __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v30;
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
        *(void *)(inited + 32) = 0x4E4F494E55;
        *(void *)(inited + 56) = v15;
        *(void *)(inited + 64) = &protocol witness table for Expression<A>;
        *(void *)(inited + 40) = 0xE500000000000000;
        *(void *)(inited + 48) = MEMORY[0x263F8EE78];
        uint64_t v16 = v32;
        uint64_t v17 = v33;
        uint64_t v18 = __swift_project_boxed_opaque_existential_1(v31, v32);
        *(void *)(inited + 96) = v16;
        *(void *)(inited + 104) = *(void *)(v17 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_1, v18, v16);
        sub_25E686E60(inited, v34);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
        swift_arrayDestroy();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E68B61C(0, *(void *)(v13 + 16) + 1, 1);
          unint64_t v13 = v37;
        }
        uint64_t v21 = *(void *)(v13 + 16);
        uint64_t v20 = *(void *)(v13 + 24);
        if (v21 >= v20 >> 1) {
          sub_25E68B61C((void *)(v20 > 1), v21 + 1, 1);
        }
        uint64_t v22 = v35;
        long long v23 = v36;
        uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
        MEMORY[0x270FA5388](v24);
        uint64_t v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v27 + 16))(v26);
        sub_25E6C0BA4(v21, (uint64_t)v26, &v37, v22, v23);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        unint64_t v13 = v37;
        v12 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      a3 = v29;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v13 = MEMORY[0x263F8EE78];
    }
    sub_25E686E60(v13, (uint64_t *)a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t QueryType.alias(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(unsigned char *, void);
  void *v16;
  void *v17;
  unsigned char v19[32];
  void v20[21];
  void v21[22];

  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a5, v5);
  char v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 16);
  v10(v20, a3, a4);
  unint64_t v12 = v20[2];
  uint64_t v11 = v20[3];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v20);
  v10(v21, a3, a4);
  uint64_t v14 = v21[6];
  unint64_t v13 = v21[7];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v21);
  uint64_t v15 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 32))(v19, a3, a4);
  uint64_t v17 = v16;
  v16[2] = v12;
  void v16[3] = v11;
  swift_bridgeObjectRelease();
  v17[4] = a1;
  uint64_t v17[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v17[6] = v14;
  v17[7] = v13;
  swift_bridgeObjectRelease();
  return v15(v19, 0);
}

uint64_t QueryType.insert(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7016C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3230;
  sub_25E6C0C3C(a1, inited + 32);
  uint64_t v12 = inited;
  swift_bridgeObjectRetain();
  sub_25E686940(a2);
  LOBYTE(v12) = 5;
  sub_25E6B6EB4((unsigned __int8 *)&v12, inited, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6B6EB4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v46 = a3;
  uint64_t v47 = a5;
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  uint64_t v48 = a4;
  if (v8)
  {
    uint64_t v44 = v7;
    uint64_t v45 = v6;
    uint64_t v10 = a2 + 32;
    uint64_t v49 = &v63;
    uint64_t v43 = a2;
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    long long v51 = xmmword_25E6C3230;
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_25E6C0C3C(v10, (uint64_t)&v59);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v51;
      sub_25E681F18((uint64_t)&v59, inited + 32);
      unint64_t v14 = v12[2];
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (unint64_t v16 = v12[3] >> 1, v17 = v12, v16 <= v14))
      {
        uint64_t v17 = sub_25E680878(isUniquelyReferenced_nonNull_native, v14 + 1, 1, v12);
        unint64_t v16 = v17[3] >> 1;
      }
      if (v16 <= v17[2])
      {
        __break(1u);
LABEL_28:
        __break(1u);
        JUMPOUT(0x25E6B7578);
      }
      uint64_t v50 = v8;
      uint64_t v18 = (uint64_t)v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayInitWithCopy();
      uint64_t v19 = *(void *)(v18 + 16) + 1;
      uint64_t v52 = (void *)v18;
      *(void *)(v18 + 16) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = v51;
      sub_25E681F18((uint64_t)v49, v20 + 32);
      unint64_t v21 = v11[2];
      swift_bridgeObjectRetain();
      uint64_t v22 = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!v22 || (unint64_t v23 = v11[3] >> 1, v24 = v11, v23 <= v21))
      {
        uint64_t v24 = sub_25E680878(v22, v21 + 1, 1, v11);
        unint64_t v23 = v24[3] >> 1;
      }
      if (v23 <= v24[2]) {
        goto LABEL_28;
      }
      swift_arrayInitWithCopy();
      ++v24[2];
      swift_bridgeObjectRelease();
      sub_25E6C0C98((uint64_t)&v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 += 80;
      uint64_t v11 = v24;
      uint64_t v12 = v52;
      uint64_t v8 = v50 - 1;
    }
    while (v50 != 1);
    swift_bridgeObjectRelease();
    LODWORD(v7) = v44;
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v52 = (void *)MEMORY[0x263F8EE78];
    uint64_t v24 = (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t v25 = swift_initStackObject();
  *(_OWORD *)(v25 + 16) = xmmword_25E6C4170;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(v25 + 56) = v26;
  *(void *)(v25 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v25 + 32) = 0x545245534E49;
  *(void *)(v25 + 40) = 0xE600000000000000;
  *(void *)(v25 + 48) = v9;
  if (v7 == 5)
  {
    *(void *)(v25 + 104) = 0;
    *(_OWORD *)(v25 + 72) = 0u;
    *(_OWORD *)(v25 + 88) = 0u;
  }
  else
  {
    uint64_t v59 = 2118223;
    unint64_t v60 = 0xE300000000000000;
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    uint64_t v27 = v59;
    unint64_t v28 = v60;
    *(void *)(v25 + 96) = v26;
    *(void *)(v25 + 104) = &protocol witness table for Expression<A>;
    *(void *)(v25 + 72) = v27;
    *(void *)(v25 + 80) = v28;
    *(void *)(v25 + 88) = v9;
  }
  *(void *)(v25 + 136) = v26;
  *(void *)(v25 + 144) = &protocol witness table for Expression<A>;
  *(void *)(v25 + 112) = 1330925129;
  *(void *)(v25 + 120) = 0xE400000000000000;
  *(void *)(v25 + 128) = v9;
  sub_25E6B11EC(0, v46, (uint64_t *)(v25 + 152));
  *(void *)(v25 + 216) = v26;
  *(void *)(v25 + 224) = &protocol witness table for Expression<A>;
  sub_25E686E60((uint64_t)v52, &v59);
  sub_25E680770(&v59, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
  *(void *)(v25 + 256) = v26;
  *(void *)(v25 + 264) = &protocol witness table for Expression<A>;
  *(void *)(v25 + 232) = 0x5345554C4156;
  *(void *)(v25 + 240) = 0xE600000000000000;
  *(void *)(v25 + 248) = v9;
  *(void *)(v25 + 296) = v26;
  *(void *)(v25 + 304) = &protocol witness table for Expression<A>;
  sub_25E686E60((uint64_t)v24, &v59);
  sub_25E680770(&v59, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25E6B594C(v48, v25 + 312);
  v58[0] = (uint64_t)v9;
  for (uint64_t i = 32; i != 352; i += 40)
  {
    sub_25E6826BC(v25 + i, (uint64_t)&v59, &qword_26B38E1F0);
    sub_25E69639C((uint64_t)&v59, (uint64_t)&v53, &qword_26B38E1F0);
    if (v54)
    {
      sub_25E681E94(&v53, (uint64_t)&v56);
      sub_25E681E94((long long *)&v56, (uint64_t)&v53);
      uint64_t v30 = (void *)v58[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v30 = sub_25E680878(0, v30[2] + 1, 1, v30);
        v58[0] = (uint64_t)v30;
      }
      unint64_t v32 = v30[2];
      unint64_t v31 = v30[3];
      if (v32 >= v31 >> 1) {
        v58[0] = (uint64_t)sub_25E680878((void *)(v31 > 1), v32 + 1, 1, v30);
      }
      uint64_t v33 = v54;
      uint64_t v34 = v55;
      uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v54);
      MEMORY[0x270FA5388](v35);
      uint64_t v37 = (char *)&v43 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v38 + 16))(v37);
      sub_25E6811A8(v32, (uint64_t)v37, v58, v33, v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v53, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60(v58[0], &v59);
  swift_bridgeObjectRelease();
  uint64_t v39 = v61;
  uint64_t v40 = v62;
  __swift_project_boxed_opaque_existential_1(&v59, v61);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v40 + 8))(&v56, v39, v40);
  long long v41 = v47;
  *uint64_t v47 = v56;
  *(_OWORD *)(v41 + 1) = v57;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
}

uint64_t QueryType.insert(or:_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unsigned __int8 v6 = *a1;
  return sub_25E6B6EB4(&v6, a2, a3, a4, a5);
}

uint64_t sub_25E6B75B8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  void (*v44)(void *__return_ptr, void, void);
  long long v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t i;
  void *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _UNKNOWN **v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  void *v71;
  long long v72;
  long long v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  long long v77;
  uint64_t v78;
  uint64_t v79;
  _UNKNOWN **v80;
  char v81[8];
  void *v82;
  long long v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t vars8;

  int64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    char v67 = a3;
    long long v66 = a4;
    uint64_t v65 = a5;
    uint64_t v63 = *a1;
    uint64_t v7 = a2 + 32;
    uint64_t v6 = *(void *)(a2 + 32);
    int64_t v8 = *(void *)(v6 + 16);
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    unint64_t v69 = v5;
    if (v8)
    {
      *(void *)&long long v73 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25E68B61C(0, v8, 0);
      uint64_t v10 = v6 + 32;
      uint64_t v11 = v9;
      do
      {
        sub_25E6C0C3C(v10, (uint64_t)&v77);
        sub_25E681F18((uint64_t)&v77, (uint64_t)&v82);
        sub_25E6C0C98((uint64_t)&v77);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E68B61C(0, v11[2] + 1, 1);
          uint64_t v11 = (void *)v73;
        }
        unint64_t v13 = v11[2];
        unint64_t v12 = v11[3];
        if (v13 >= v12 >> 1) {
          sub_25E68B61C((void *)(v12 > 1), v13 + 1, 1);
        }
        uint64_t v14 = v84;
        uint64_t v15 = v85;
        uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v82, v84);
        MEMORY[0x270FA5388](v16);
        uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v19 + 16))(v18);
        sub_25E6C0BA4(v13, (uint64_t)v18, (uint64_t *)&v73, v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
        uint64_t v11 = (void *)v73;
        v10 += 80;
        --v8;
      }
      while (v8);
      uint64_t v64 = v73;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v64 = MEMORY[0x263F8EE78];
    }
    v82 = v9;
    sub_25E68B66C(0, v69, 0);
    int64_t v21 = v69;
    uint64_t v22 = 0;
    long long v72 = xmmword_25E6C3230;
    unint64_t v23 = &qword_26B38E0F0;
    unint64_t v68 = v7;
    do
    {
      if (v22 == v21)
      {
        __break(1u);
        JUMPOUT(0x25E6B80E0);
      }
      long long v71 = (void *)v22;
      uint64_t v24 = *(void *)(v7 + 8 * v22);
      uint64_t v25 = *(void *)(v24 + 16);
      if (v25)
      {
        uint64_t v26 = v24 + 32;
        long long v70 = v24;
        swift_bridgeObjectRetain();
        uint64_t v27 = (uint64_t)v9;
        while (1)
        {
          sub_25E6C0C3C(v26, (uint64_t)&v77);
          __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v72;
          uint64_t v9 = (void *)(inited + 32);
          sub_25E681F18((uint64_t)v81, inited + 32);
          uint64_t v29 = *(void **)(v27 + 16);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
          if (!isUniquelyReferenced_nonNull_native
            || (v31 = *(void *)(v27 + 24) >> 1, unint64_t v32 = (void *)v27, v31 <= (unint64_t)v29))
          {
            unint64_t v32 = sub_25E680878(isUniquelyReferenced_nonNull_native, (int64_t)v29 + 1, 1, (void *)v27);
            unint64_t v31 = v32[3] >> 1;
          }
          if (v31 <= v32[2]) {
            break;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
          swift_arrayInitWithCopy();
          ++v32[2];
          swift_bridgeObjectRelease();
          sub_25E6C0C98((uint64_t)&v77);
          swift_bridgeObjectRelease();
          v26 += 80;
          uint64_t v27 = (uint64_t)v32;
          if (!--v25)
          {
            swift_bridgeObjectRelease();
            uint64_t v9 = (void *)MEMORY[0x263F8EE78];
            uint64_t v7 = v68;
            goto LABEL_25;
          }
        }
        __break(1u);
        goto LABEL_34;
      }
      unint64_t v32 = v9;
LABEL_25:
      uint64_t v29 = v82;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E68B66C(0, v29[2] + 1, 1);
        uint64_t v29 = v82;
      }
      int64_t v21 = v69;
      uint64_t v33 = v71;
      unint64_t v35 = v29[2];
      unint64_t v34 = v29[3];
      if (v35 >= v34 >> 1)
      {
        sub_25E68B66C((void *)(v34 > 1), v35 + 1, 1);
        uint64_t v33 = v71;
        int64_t v21 = v69;
        uint64_t v29 = v82;
      }
      uint64_t v22 = (uint64_t)v33 + 1;
      v29[2] = v35 + 1;
      v29[v35 + 4] = v32;
    }
    while (v22 != v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_25E6C4170;
    uint64_t inited = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    unint64_t v32 = &protocol witness table for Expression<A>;
    *(void *)(v27 + 56) = inited;
    *(void *)(v27 + 64) = &protocol witness table for Expression<A>;
    *(void *)(v27 + 32) = 0x545245534E49;
    *(void *)(v27 + 40) = 0xE600000000000000;
    *(void *)(v27 + 48) = v9;
    if (v63 == 5)
    {
      *(void *)(v27 + 104) = 0;
      *(_OWORD *)(v27 + 72) = 0u;
      *(_OWORD *)(v27 + 88) = 0u;
      unint64_t v23 = v66;
      goto LABEL_35;
    }
    *(void *)&v77 = 2118223;
    *((void *)&v77 + 1) = 0xE300000000000000;
    unint64_t v23 = v66;
LABEL_34:
    sub_25E6C25A0();
    swift_bridgeObjectRelease();
    long long v36 = v77;
    *(void *)(v27 + 96) = inited;
    *(void *)(v27 + 104) = v32;
    *(_OWORD *)(v27 + 72) = v36;
    *(void *)(v27 + 88) = v9;
LABEL_35:
    uint64_t v37 = v67;
    *(void *)(v27 + 136) = inited;
    *(void *)(v27 + 144) = v32;
    *(void *)(v27 + 112) = 1330925129;
    *(void *)(v27 + 120) = 0xE400000000000000;
    *(void *)(v27 + 128) = v9;
    sub_25E6B11EC(0, v37, (uint64_t *)(v27 + 152));
    *(void *)(v27 + 216) = inited;
    *(void *)(v27 + 224) = v32;
    sub_25E686E60(v64, (uint64_t *)&v77);
    sub_25E680770(&v77, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
    swift_bridgeObjectRelease();
    *(void *)(v27 + 256) = inited;
    *(void *)(v27 + 264) = v32;
    *(void *)(v27 + 232) = 0x5345554C4156;
    *(void *)(v27 + 240) = 0xE600000000000000;
    unint64_t v68 = v27;
    *(void *)(v27 + 248) = v9;
    int64_t v38 = v29[2];
    if (v38)
    {
      long long v76 = v9;
      sub_25E68B61C(0, v38, 0);
      uint64_t v39 = 0;
      uint64_t v40 = v76;
      long long v71 = v29;
      long long v70 = inited;
      unint64_t v69 = v38;
      do
      {
        *(void *)&long long v72 = v40;
        uint64_t v41 = swift_bridgeObjectRetain();
        sub_25E686E60(v41, (uint64_t *)&v77);
        *(void *)&long long v73 = 0;
        *((void *)&v73 + 1) = 0xE000000000000000;
        sub_25E6C25A0();
        uint64_t v42 = v79;
        uint64_t v43 = v80;
        __swift_project_boxed_opaque_existential_1(&v77, v79);
        uint64_t v44 = (void (*)(void *__return_ptr, void, void))v43[1];
        v44(&v82, v42, v43);
        swift_bridgeObjectRelease();
        sub_25E6C25A0();
        swift_bridgeObjectRelease();
        sub_25E6C25A0();
        uint64_t v45 = v73;
        v44(&v82, v42, v43);
        uint64_t v40 = (void *)v72;
        uint64_t v46 = *((void *)&v83 + 1);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E68B61C(0, v40[2] + 1, 1);
          uint64_t v40 = v76;
        }
        uint64_t v48 = v40[2];
        uint64_t v47 = v40[3];
        if (v48 >= v47 >> 1)
        {
          sub_25E68B61C((void *)(v47 > 1), v48 + 1, 1);
          uint64_t v40 = v76;
        }
        ++v39;
        v77 = v45;
        uint64_t v79 = v70;
        uint64_t v80 = &protocol witness table for Expression<A>;
        uint64_t v78 = v46;
        v40[2] = v48 + 1;
        sub_25E681E94(&v77, (uint64_t)&v40[5 * v48 + 4]);
      }
      while (v69 != v39);
      swift_release();
      unint64_t v23 = v66;
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      swift_release();
      uint64_t v40 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v49 = v68;
    sub_25E686E60((uint64_t)v40, (uint64_t *)(v68 + 272));
    swift_bridgeObjectRelease();
    sub_25E6B594C((uint64_t)v23, v49 + 312);
    long long v76 = v9;
    for (uint64_t i = 32; i != 352; i += 40)
    {
      sub_25E6826BC(v49 + i, (uint64_t)&v77, &qword_26B38E1F0);
      sub_25E69639C((uint64_t)&v77, (uint64_t)&v73, &qword_26B38E1F0);
      if (v74)
      {
        sub_25E681E94(&v73, (uint64_t)&v82);
        sub_25E681E94((long long *)&v82, (uint64_t)&v73);
        long long v51 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          long long v51 = sub_25E680878(0, v51[2] + 1, 1, v51);
          long long v76 = v51;
        }
        long long v53 = v51[2];
        uint64_t v52 = v51[3];
        if (v53 >= v52 >> 1) {
          long long v76 = sub_25E680878((void *)(v52 > 1), v53 + 1, 1, v51);
        }
        uint64_t v54 = v74;
        uint64_t v55 = v75;
        uint64_t v56 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v73, v74);
        MEMORY[0x270FA5388](v56);
        uint64_t v58 = (char *)&v63 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v59 + 16))(v58);
        sub_25E6811A8(v53, (uint64_t)v58, (uint64_t *)&v76, v54, v55);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
      }
      else
      {
        sub_25E681F7C((uint64_t)&v73, &qword_26B38E1F0);
      }
    }
    swift_bridgeObjectRelease();
    sub_25E686E60((uint64_t)v76, (uint64_t *)&v77);
    swift_bridgeObjectRelease();
    unint64_t v60 = v79;
    uint64_t v61 = v80;
    __swift_project_boxed_opaque_existential_1(&v77, v79);
    ((void (*)(void **__return_ptr, uint64_t, _UNKNOWN **))v61[1])(&v82, v60, v61);
    uint64_t v62 = v65;
    *uint64_t v65 = v82;
    *(_OWORD *)(v62 + 1) = v83;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
  }
  else
  {
    return (unint64_t)QueryType.insert()();
  }
}

SwiftSQLite::Insert __swiftcall QueryType.insertMany(or:_:)(SwiftSQLite::OnConflict or, Swift::OpaquePointer _)
{
  uint64_t v4 = sub_25E6B8124((char *)or, (uint64_t)_._rawValue, v2, v3, (uint64_t (*)(char *))sub_25E6B75B8);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t QueryType.insertMany(or:_:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E6B8124(a1, a2, a3, a4, (uint64_t (*)(char *))sub_25E6B75B8);
}

uint64_t sub_25E6B8124(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  char v6 = *a1;
  return a5(&v6);
}

uint64_t OnConflict.rawValue.getter()
{
  uint64_t result = 0x4543414C504552;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4B4341424C4C4F52;
      break;
    case 2:
      uint64_t result = 0x54524F4241;
      break;
    case 3:
      uint64_t result = 1279869254;
      break;
    case 4:
      uint64_t result = 0x45524F4E4749;
      break;
    default:
      return result;
  }
  return result;
}

SwiftSQLite::Insert __swiftcall QueryType.insert()()
{
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = 0x4920545245534E49;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = 0xEB000000004F544ELL;
  *(void *)(inited + 48) = v6;
  sub_25E6B11EC(0, v2, (uint64_t *)(inited + 72));
  *(void *)(inited + 136) = v5;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  strcpy((char *)(inited + 112), "DEFAULT VALUES");
  *(unsigned char *)(inited + 127) = -18;
  *(void *)(inited + 128) = v6;
  sub_25E686E60(inited, v14);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 8))(&v12, v7, v8);
  *(void *)uint64_t v3 = v12;
  *(_OWORD *)(v3 + 8) = v13;
  uint64_t v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  result.bindings._rawValue = v11;
  result.template._object = v10;
  result.template._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t QueryType.insert(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31A0;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = 0x4920545245534E49;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(inited + 40) = 0xEB000000004F544ELL;
  *(void *)(inited + 48) = v8;
  sub_25E6B11EC(0, a2, (uint64_t *)(inited + 72));
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = *(void (**)(uint64_t))(*(void *)(v10 + 8) + 8);
  *(void *)(inited + 136) = v7;
  *(void *)(inited + 144) = &protocol witness table for Expression<A>;
  v11(v9);
  sub_25E686E60(inited, v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  uint64_t v12 = v18;
  uint64_t v13 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 8))(&v15, v12, v13);
  *(void *)a3 = v15;
  *(_OWORD *)(a3 + 8) = v16;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_25E6B8518(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  Swift::String v3 = Expressible.asSQL()();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  Swift::String v4 = Expressible.asSQL()();
  if (v3._countAndFlagsBits == v4._countAndFlagsBits && v3._object == v4._object)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 0;
  }
  else
  {
    char v6 = sub_25E6C2910();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v6 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_25E6B85F4(void *a1)
{
  return sub_25E6B8518(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_25E6B8614(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    char v7 = (uint64_t (*)(_OWORD *))result;
    unint64_t v8 = 0;
    uint64_t v9 = a3 + 32;
    uint64_t v23 = a3;
    uint64_t v15 = v6;
    while (v8 < *(void *)(v4 + 16))
    {
      sub_25E6C0C3C(v9, (uint64_t)v21);
      char v10 = v7(v21);
      if (v3)
      {
        sub_25E6C0C98((uint64_t)v21);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if (v10)
      {
        uint64_t v11 = v7;
        long long v18 = v21[2];
        long long v19 = v21[3];
        long long v20 = v21[4];
        long long v16 = v21[0];
        long long v17 = v21[1];
        SwiftSQLite::Insert result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          SwiftSQLite::Insert result = (uint64_t)sub_25E68B6CC(0, *(void *)(v5 + 16) + 1, 1);
        }
        uint64_t v5 = v22;
        unint64_t v13 = *(void *)(v22 + 16);
        unint64_t v12 = *(void *)(v22 + 24);
        if (v13 >= v12 >> 1)
        {
          SwiftSQLite::Insert result = (uint64_t)sub_25E68B6CC((char *)(v12 > 1), v13 + 1, 1);
          uint64_t v5 = v22;
        }
        *(void *)(v5 + 16) = v13 + 1;
        uint64_t v14 = (_OWORD *)(v5 + 80 * v13);
        v14[4] = v18;
        void v14[5] = v19;
        v14[6] = v20;
        v14[2] = v16;
        uint64_t v14[3] = v17;
        char v7 = v11;
        uint64_t v4 = v23;
        uint64_t v6 = v15;
      }
      else
      {
        SwiftSQLite::Insert result = sub_25E6C0C98((uint64_t)v21);
      }
      ++v8;
      v9 += 80;
      if (v6 == v8) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_25E6B87C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    uint64_t v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    char v7 = (uint64_t *)(a3 + 40);
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v15 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      char v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        SwiftSQLite::Insert result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = v8;
        if ((result & 1) == 0)
        {
          SwiftSQLite::Insert result = (uint64_t)sub_25E68B5FC(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v19;
        }
        unint64_t v13 = *(void *)(v8 + 16);
        unint64_t v12 = *(void *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          SwiftSQLite::Insert result = (uint64_t)sub_25E68B5FC((char *)(v12 > 1), v13 + 1, 1);
          uint64_t v8 = v19;
        }
        *(void *)(v8 + 16) = v13 + 1;
        uint64_t v14 = v8 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v9;
        uint64_t v4 = a3;
        uint64_t v5 = v15;
      }
      else
      {
        SwiftSQLite::Insert result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

void *QueryType.upsert(_:onConflictOf:set:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v50 = a6;
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = (void *)MEMORY[0x263F8EE78];
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  if (v6)
  {
    uint64_t v8 = a1 + 32;
    *(void *)&long long v53 = v70;
    v47[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    long long v56 = xmmword_25E6C3230;
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      sub_25E6C0C3C(v8, (uint64_t)&v66);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v56;
      sub_25E681F18((uint64_t)&v66, inited + 32);
      unint64_t v12 = v10[2];
      swift_bridgeObjectRetain();
      SwiftSQLite::Insert result = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!result || (v14 = v10[3] >> 1, uint64_t v15 = v10, v14 <= v12))
      {
        SwiftSQLite::Insert result = sub_25E680878(result, v12 + 1, 1, v10);
        uint64_t v15 = result;
        unint64_t v14 = result[3] >> 1;
      }
      if (v14 <= v15[2]) {
        break;
      }
      uint64_t v54 = (unsigned char *)v6;
      uint64_t v16 = (uint64_t)v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
      swift_arrayInitWithCopy();
      uint64_t v17 = *(void *)(v16 + 16) + 1;
      uint64_t v55 = v16;
      *(void *)(v16 + 16) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = v56;
      sub_25E681F18(v53, v18 + 32);
      unint64_t v19 = v9[2];
      swift_bridgeObjectRetain();
      SwiftSQLite::Insert result = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!result || (unint64_t v20 = v9[3] >> 1, v21 = (uint64_t)v9, v20 <= v19))
      {
        SwiftSQLite::Insert result = sub_25E680878(result, v19 + 1, 1, v9);
        uint64_t v21 = (uint64_t)result;
        unint64_t v20 = result[3] >> 1;
      }
      if (v20 <= *(void *)(v21 + 16)) {
        goto LABEL_34;
      }
      swift_arrayInitWithCopy();
      ++*(void *)(v21 + 16);
      swift_bridgeObjectRelease();
      sub_25E6C0C98((uint64_t)&v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += 80;
      uint64_t v9 = (void *)v21;
      uint64_t v10 = (void *)v55;
      uint64_t v6 = (uint64_t)(v54 - 1);
      if (v54 == (unsigned char *)1)
      {
        uint64_t v22 = v55;
        swift_bridgeObjectRelease();
        char v7 = (void *)MEMORY[0x263F8EE78];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v21 = MEMORY[0x263F8EE78];
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_25E6C4180;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
    *(void *)(v23 + 32) = 0x545245534E49;
    *(void *)(v23 + 40) = 0xE600000000000000;
    *(void *)(v23 + 48) = v7;
    *(void *)(v23 + 56) = v24;
    *(void *)(v23 + 96) = v24;
    *(void *)(v23 + 104) = &protocol witness table for Expression<A>;
    *(void *)(v23 + 64) = &protocol witness table for Expression<A>;
    *(void *)(v23 + 72) = 1330925129;
    *(void *)(v23 + 80) = 0xE400000000000000;
    *(void *)(v23 + 88) = v7;
    sub_25E6B11EC(0, v51, (uint64_t *)(v23 + 112));
    *(void *)(v23 + 176) = v24;
    *(void *)(v23 + 184) = &protocol witness table for Expression<A>;
    sub_25E686E60(v22, &v66);
    sub_25E680770(&v66, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    *(void *)(v23 + 216) = v24;
    *(void *)(v23 + 224) = &protocol witness table for Expression<A>;
    *(void *)(v23 + 192) = 0x5345554C4156;
    *(void *)(v23 + 200) = 0xE600000000000000;
    *(void *)(v23 + 208) = v7;
    *(void *)(v23 + 256) = v24;
    *(void *)(v23 + 264) = &protocol witness table for Expression<A>;
    sub_25E686E60(v21, &v66);
    sub_25E680770(&v66, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25E6B594C(v52, v23 + 272);
    *(void *)(v23 + 336) = v24;
    *(void *)(v23 + 344) = &protocol witness table for Expression<A>;
    *(void *)(v23 + 312) = 0x4C464E4F43204E4FLL;
    *(void *)(v23 + 320) = 0xEB00000000544349;
    *(void *)(v23 + 328) = v7;
    *(void *)(v23 + 376) = v24;
    *(void *)(v23 + 384) = &protocol witness table for Expression<A>;
    sub_25E680770(v48, 0, 0xE000000000000000);
    *(void *)(v23 + 416) = v24;
    *(void *)(v23 + 424) = &protocol witness table for Expression<A>;
    strcpy((char *)(v23 + 392), "DO UPDATE SET");
    *(_WORD *)(v23 + 406) = -4864;
    uint64_t v55 = v24;
    *(void *)(v23 + 408) = v7;
    int64_t v25 = *(void *)(v49 + 16);
    if (v25)
    {
      v65[0] = (uint64_t)v7;
      sub_25E68B61C(0, v25, 0);
      uint64_t v26 = v49 + 32;
      uint64_t v54 = v70;
      uint64_t v27 = (void *)v65[0];
      long long v53 = xmmword_25E6C3210;
      do
      {
        sub_25E6C0C3C(v26, (uint64_t)&v66);
        __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
        uint64_t v28 = swift_initStackObject();
        *(_OWORD *)(v28 + 16) = v53;
        sub_25E681F18((uint64_t)&v66, v28 + 32);
        sub_25E681F18((uint64_t)v54, v28 + 72);
        sub_25E686E60(v28, &v61);
        uint64_t v30 = v63;
        uint64_t v29 = v64;
        __swift_project_boxed_opaque_existential_1(&v61, v63);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(&v57, v30, v29);
        uint64_t v31 = v57;
        long long v56 = v58;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
        swift_arrayDestroy();
        sub_25E6C0C98((uint64_t)&v66);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E68B61C(0, v27[2] + 1, 1);
          uint64_t v27 = (void *)v65[0];
        }
        unint64_t v33 = v27[2];
        unint64_t v32 = v27[3];
        if (v33 >= v32 >> 1)
        {
          sub_25E68B61C((void *)(v32 > 1), v33 + 1, 1);
          uint64_t v27 = (void *)v65[0];
        }
        uint64_t v68 = v55;
        unint64_t v69 = &protocol witness table for Expression<A>;
        uint64_t v66 = v31;
        long long v67 = v56;
        long long v27[2] = v33 + 1;
        sub_25E681E94((long long *)&v66, (uint64_t)&v27[5 * v33 + 4]);
        v26 += 80;
        --v25;
      }
      while (v25);
      char v7 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v27 = v7;
    }
    sub_25E686E60((uint64_t)v27, (uint64_t *)(v23 + 432));
    swift_bridgeObjectRelease();
    v65[0] = (uint64_t)v7;
    for (uint64_t i = 32; i != 472; i += 40)
    {
      sub_25E6826BC(v23 + i, (uint64_t)&v66, &qword_26B38E1F0);
      sub_25E69639C((uint64_t)&v66, (uint64_t)&v57, &qword_26B38E1F0);
      if (v59)
      {
        sub_25E681E94((long long *)&v57, (uint64_t)&v61);
        sub_25E681E94((long long *)&v61, (uint64_t)&v57);
        unint64_t v35 = (void *)v65[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          unint64_t v35 = sub_25E680878(0, v35[2] + 1, 1, v35);
          v65[0] = (uint64_t)v35;
        }
        unint64_t v37 = v35[2];
        unint64_t v36 = v35[3];
        if (v37 >= v36 >> 1) {
          v65[0] = (uint64_t)sub_25E680878((void *)(v36 > 1), v37 + 1, 1, v35);
        }
        uint64_t v38 = v59;
        uint64_t v39 = v60;
        uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v59);
        MEMORY[0x270FA5388](v40);
        uint64_t v42 = (char *)v47 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v43 + 16))(v42);
        sub_25E6811A8(v37, (uint64_t)v42, v65, v38, v39);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
      }
      else
      {
        sub_25E681F7C((uint64_t)&v57, &qword_26B38E1F0);
      }
    }
    swift_bridgeObjectRelease();
    sub_25E686E60(v65[0], &v66);
    swift_bridgeObjectRelease();
    uint64_t v44 = v68;
    uint64_t v45 = v69;
    __swift_project_boxed_opaque_existential_1(&v66, v68);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v45[1])(&v61, v44, v45);
    uint64_t v46 = v50;
    *uint64_t v50 = v61;
    *(_OWORD *)(v46 + 1) = v62;
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  }
  return result;
}

SwiftSQLite::Delete __swiftcall QueryType.delete()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C31C0;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  *(void *)(inited + 32) = 0x46204554454C4544;
  *(void *)(inited + 40) = 0xEB000000004D4F52;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  *(void *)(inited + 48) = MEMORY[0x263F8EE78];
  *(void *)(inited + 56) = v7;
  sub_25E6B11EC(0, v4, (uint64_t *)(inited + 72));
  sub_25E6B594C(v3, inited + 112);
  sub_25E6B6068(v4, v3, inited + 152);
  sub_25E6B6414(v3, inited + 192);
  uint64_t v29 = v8;
  for (uint64_t i = 32; i != 232; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v30, &qword_26B38E1F0);
    sub_25E69639C((uint64_t)v30, (uint64_t)&v24, &qword_26B38E1F0);
    if (v25)
    {
      sub_25E681E94(&v24, (uint64_t)&v27);
      sub_25E681E94((long long *)&v27, (uint64_t)&v24);
      uint64_t v10 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v10 = sub_25E680878(0, v10[2] + 1, 1, v10);
        uint64_t v29 = v10;
      }
      unint64_t v12 = v10[2];
      unint64_t v11 = v10[3];
      if (v12 >= v11 >> 1) {
        uint64_t v29 = sub_25E680878((void *)(v11 > 1), v12 + 1, 1, v10);
      }
      uint64_t v13 = v25;
      uint64_t v14 = v26;
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v24, v25);
      MEMORY[0x270FA5388](v15);
      uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_25E6811A8(v12, (uint64_t)v17, (uint64_t *)&v29, v13, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v24, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v29, v30);
  swift_bridgeObjectRelease();
  uint64_t v19 = v31;
  uint64_t v20 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 8))(&v27, v19, v20);
  *(void *)uint64_t v5 = v27;
  *(_OWORD *)(v5 + 8) = v28;
  uint64_t v21 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  result.bindings._rawValue = v23;
  result.template._object = v22;
  result.template._uint64_t countAndFlagsBits = v21;
  return result;
}

uint64_t QueryType.exists.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v9)(uint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v13;
  long long v14;
  uint64_t v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = &protocol witness table for Expression<A>;
  strcpy((char *)(inited + 32), "SELECT EXISTS");
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(_WORD *)(inited + 46) = -4864;
  *(void *)(inited + 48) = v8;
  uint64_t v9 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a2 + 8) + 8);
  uint64_t v16 = v7;
  uint64_t v17 = &protocol witness table for Expression<A>;
  v9(v15, a1);
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  sub_25E680770(v15, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_25E686E60(inited, v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  uint64_t v10 = v16;
  unint64_t v11 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v13, v10, v11);
  *(void *)a3 = v13;
  *(_OWORD *)(a3 + 8) = v14;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t QueryType.namespace<A>(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = type metadata accessor for Expression();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C3210;
  sub_25E6B11EC(0, a2, (uint64_t *)(inited + 32));
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 104) = &protocol witness table for Expression<A>;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = v3;
  *(void *)(inited + 88) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E686E60(inited, v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E0F0);
  swift_arrayDestroy();
  uint64_t v8 = v19;
  uint64_t v9 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 8))(&v16, v8, v9);
  uint64_t v14 = v16;
  long long v15 = v17;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = sub_25E6867CC(&qword_26B38E0B0, &qword_26B38E1E8);
  ExpressionType.init<A>(_:)((uint64_t)&v14, v6, v10, WitnessTable, v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t QueryType.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  long long v4 = *(_OWORD *)(a1 + 8);
  return QueryType.namespace<A>(_:)(&v3, a2);
}

{
  uint64_t v4;
  long long v5;

  long long v4 = *(void *)a1;
  uint64_t v5 = *(_OWORD *)(a1 + 8);
  sub_25E6C2790();
  return QueryType.namespace<A>(_:)(&v4, a2);
}

uint64_t QueryType.subscript.getter(void (*a1)(void *__return_ptr, uint64_t *, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  memset(v5, 0, sizeof(v5));
  a1(v9, &v6, v5);
  uint64_t v6 = v9[0];
  uint64_t v7 = v9[1];
  uint64_t v8 = v9[2];
  QueryType.namespace<A>(_:)(&v6, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6B9900(void (*a1)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C4160;
  sub_25E6B4C30(a1, (uint64_t *)(inited + 32));
  sub_25E6B4F68(inited + 72);
  sub_25E6B5828(inited + 112);
  sub_25E6B5A8C(inited + 152);
  sub_25E6B65FC(inited + 192);
  sub_25E6B5F50(inited + 232);
  sub_25E6B61F0(inited + 272);
  uint64_t v20 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; i != 312; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v21, &qword_26B38E1F0);
    sub_25E69639C((uint64_t)v21, (uint64_t)&v16, &qword_26B38E1F0);
    if (v17)
    {
      sub_25E681E94(&v16, (uint64_t)v19);
      sub_25E681E94(v19, (uint64_t)&v16);
      long long v4 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        long long v4 = sub_25E680878(0, v4[2] + 1, 1, v4);
        uint64_t v20 = v4;
      }
      unint64_t v6 = v4[2];
      unint64_t v5 = v4[3];
      if (v6 >= v5 >> 1) {
        uint64_t v20 = sub_25E680878((void *)(v5 > 1), v6 + 1, 1, v4);
      }
      uint64_t v7 = v17;
      uint64_t v8 = v18;
      uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v16, v17);
      MEMORY[0x270FA5388](v9);
      unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v11);
      sub_25E6811A8(v6, (uint64_t)v11, (uint64_t *)&v20, v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v16, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v20, v21);
  swift_bridgeObjectRelease();
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t QueryType.expression.getter(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E6C4160;
  sub_25E6B4D9C(a1, a2, (uint64_t *)(inited + 32));
  sub_25E6B531C(a1, a2, inited + 72);
  sub_25E6B594C(a2, inited + 112);
  sub_25E6B5CE4(a2, inited + 152);
  sub_25E6B690C(a1, a2, inited + 192);
  sub_25E6B6068(a1, a2, inited + 232);
  sub_25E6B6414(a2, inited + 272);
  uint64_t v22 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; i != 312; i += 40)
  {
    sub_25E6826BC(inited + i, (uint64_t)v23, &qword_26B38E1F0);
    sub_25E69639C((uint64_t)v23, (uint64_t)&v18, &qword_26B38E1F0);
    if (v19)
    {
      sub_25E681E94(&v18, (uint64_t)v21);
      sub_25E681E94(v21, (uint64_t)&v18);
      unint64_t v6 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v6 = sub_25E680878(0, v6[2] + 1, 1, v6);
        uint64_t v22 = v6;
      }
      unint64_t v8 = v6[2];
      unint64_t v7 = v6[3];
      if (v8 >= v7 >> 1) {
        uint64_t v22 = sub_25E680878((void *)(v7 > 1), v8 + 1, 1, v6);
      }
      uint64_t v9 = v19;
      uint64_t v10 = v20;
      uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v18, v19);
      MEMORY[0x270FA5388](v11);
      uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v14 + 16))(v13);
      sub_25E6811A8(v8, (uint64_t)v13, (uint64_t *)&v22, v9, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    }
    else
    {
      sub_25E681F7C((uint64_t)&v18, &qword_26B38E1F0);
    }
  }
  swift_bridgeObjectRelease();
  sub_25E686E60((uint64_t)v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v15 = v24;
  uint64_t v16 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t static Table.identifier.getter()
{
  return 0x454C424154;
}

uint64_t (*Table.clauses.modify())()
{
  return nullsub_1;
}

uint64_t sub_25E6B9EC8()
{
  return 0x454C424154;
}

uint64_t (*sub_25E6B9EDC())()
{
  return nullsub_1;
}

uint64_t sub_25E6B9F00()
{
  return sub_25E6B9900((void (*)(uint64_t))sub_25E67660C);
}

uint64_t static View.identifier.getter()
{
  return 1464158550;
}

uint64_t (*View.clauses.modify())()
{
  return nullsub_1;
}

uint64_t sub_25E6B9FA4()
{
  return 1464158550;
}

uint64_t static VirtualTable.identifier.getter()
{
  return 0x204C415554524956;
}

void *VirtualTable.clauses.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[3];
  long long v5 = v1[5];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v7 = v1[5];
  long long v8 = v1[7];
  long long v22 = v1[6];
  long long v9 = v22;
  long long v23 = v8;
  long long v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  long long v11 = v1[3];
  long long v13 = *v1;
  long long v12 = v1[1];
  long long v18 = v1[2];
  long long v14 = v18;
  long long v19 = v11;
  long long v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  uint64_t v26 = *((void *)v1 + 20);
  *(void *)(a1 + 160) = *((void *)v1 + 20);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_25E6C0DC8(v17);
}

__n128 VirtualTable.clauses.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  uint64_t v14 = *(void *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  v13[4] = *(_OWORD *)(v1 + 64);
  void v13[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v13[2] = *(_OWORD *)(v1 + 32);
  void v13[3] = v7;
  sub_25E6C0EF4(v13);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(void *)(v1 + 160) = *(void *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  long long v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*VirtualTable.clauses.modify())()
{
  return nullsub_1;
}

double _s11SwiftSQLite5TableV_8databaseACSS_SSSgtcfC_0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25E6C3230;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(v10 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v10 + 32) = 42;
  *(void *)(v10 + 40) = 0xE100000000000000;
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)(v10 + 48) = MEMORY[0x263F8EE78];
  *(void *)(v10 + 56) = v11;
  *(unsigned char *)a5 = 0;
  *(void *)(a5 + 8) = v10;
  *(void *)(a5 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  *(void *)(a5 + 64) = v12;
  double result = 0.0;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 88) = 0u;
  *(_OWORD *)(a5 + 104) = 0u;
  *(void *)(a5 + 120) = 0;
  *(void *)(a5 + 128) = v12;
  *(void *)(a5 + 136) = 0;
  *(void *)(a5 + 144) = 0;
  *(_WORD *)(a5 + 152) = 256;
  *(void *)(a5 + 160) = v12;
  return result;
}

uint64_t sub_25E6BA1F4()
{
  return 0x204C415554524956;
}

void *sub_25E6BA218@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[3];
  long long v5 = v1[5];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v7 = v1[5];
  long long v8 = v1[7];
  long long v22 = v1[6];
  long long v9 = v22;
  long long v23 = v8;
  long long v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  long long v11 = v1[3];
  long long v13 = *v1;
  long long v12 = v1[1];
  long long v18 = v1[2];
  long long v14 = v18;
  long long v19 = v11;
  long long v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  uint64_t v26 = *((void *)v1 + 20);
  *(void *)(a1 + 160) = *((void *)v1 + 20);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_25E6C0DC8(v17);
}

__n128 sub_25E6BA2A0(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  uint64_t v14 = *(void *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  v13[4] = *(_OWORD *)(v1 + 64);
  void v13[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v13[2] = *(_OWORD *)(v1 + 32);
  void v13[3] = v7;
  sub_25E6C0EF4(v13);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(void *)(v1 + 160) = *(void *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  long long v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

void *ScalarQuery.clauses.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[7];
  long long v3 = v1[9];
  long long v24 = v1[8];
  long long v25 = v3;
  long long v4 = v1[3];
  long long v5 = v1[5];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v7 = v1[5];
  long long v8 = v1[7];
  long long v22 = v1[6];
  long long v9 = v22;
  long long v23 = v8;
  long long v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  long long v11 = v1[3];
  long long v13 = *v1;
  long long v12 = v1[1];
  long long v18 = v1[2];
  long long v14 = v18;
  long long v19 = v11;
  long long v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  uint64_t v26 = *((void *)v1 + 20);
  *(void *)(a1 + 160) = *((void *)v1 + 20);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_25E6C0DC8(v17);
}

__n128 ScalarQuery.clauses.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  uint64_t v14 = *(void *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  v13[4] = *(_OWORD *)(v1 + 64);
  void v13[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v13[2] = *(_OWORD *)(v1 + 32);
  void v13[3] = v7;
  sub_25E6C0EF4(v13);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(void *)(v1 + 160) = *(void *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  long long v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*ScalarQuery.clauses.modify())()
{
  return nullsub_1;
}

double ScalarQuery.init(_:database:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25E6C3230;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
  *(void *)(v10 + 64) = &protocol witness table for Expression<A>;
  *(void *)(v10 + 32) = 42;
  *(void *)(v10 + 40) = 0xE100000000000000;
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)(v10 + 48) = MEMORY[0x263F8EE78];
  *(void *)(v10 + 56) = v11;
  *(unsigned char *)a5 = 0;
  *(void *)(a5 + 8) = v10;
  *(void *)(a5 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  *(void *)(a5 + 64) = v12;
  double result = 0.0;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 88) = 0u;
  *(_OWORD *)(a5 + 104) = 0u;
  *(void *)(a5 + 120) = 0;
  *(void *)(a5 + 128) = v12;
  *(void *)(a5 + 136) = 0;
  *(void *)(a5 + 144) = 0;
  *(_WORD *)(a5 + 152) = 256;
  *(void *)(a5 + 160) = v12;
  return result;
}

void (*sub_25E6BA550(void *a1))(void *a1)
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ScalarQuery.clauses.modify();
  return sub_25E6BA5A8;
}

void sub_25E6BA5A8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_25E6BA5F4(uint64_t a1)
{
  return QueryType.expression.getter(a1, (uint64_t)&protocol witness table for ScalarQuery<A>);
}

uint64_t Select.template.getter()
{
  uint64_t v0 = sub_25E68D9E0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Select.template.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *long long v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Select.template.modify())()
{
  return nullsub_1;
}

uint64_t Select.bindings.getter()
{
  sub_25E68D9E8();
  return swift_bridgeObjectRetain();
}

uint64_t Select.bindings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Select.bindings.modify())()
{
  return nullsub_1;
}

uint64_t Select.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t (*Insert.template.modify())()
{
  return nullsub_1;
}

uint64_t (*Insert.bindings.modify())()
{
  return nullsub_1;
}

uint64_t (*Update.template.modify())()
{
  return nullsub_1;
}

uint64_t (*Update.bindings.modify())()
{
  return nullsub_1;
}

uint64_t Delete.template.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Delete.template.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *long long v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Delete.template.modify())()
{
  return nullsub_1;
}

uint64_t Delete.bindings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Delete.bindings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Delete.bindings.modify())()
{
  return nullsub_1;
}

SwiftSQLite::Delete __swiftcall Delete.init(_:_:)(Swift::String a1, Swift::OpaquePointer a2)
{
  *(Swift::String *)uint64_t v2 = a1;
  *(Swift::OpaquePointer *)(v2 + 16) = a2;
  result.template = a1;
  result.bindings = a2;
  return result;
}

uint64_t sub_25E6BA87C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25E6BA8AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6BA8B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

SwiftSQLite::Row_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RowIterator.failableNext()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = Statement.step()();
  if (!v6)
  {
    if (v4)
    {
      Statement.row.getter(v9);
      uint64_t v7 = sub_25E695184(v9[0], v9[1]);
      *uint64_t v2 = v3;
      v2[1] = v7;
      uint64_t v4 = swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v2 = 0;
      v2[1] = 0;
    }
  }
  result.value.values._rawValue = v5;
  result.value.columnNames._rawValue = (void *)v4;
  return result;
}

uint64_t RowIterator.map<A>(_:)(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  MEMORY[0x270FA5388](a1);
  long long v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v3;
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v64 = sub_25E6C2480();
  uint64_t v54 = v9;
  Swift::Bool v12 = Statement.step()();
  uint64_t v14 = v13;
  if (!v13)
  {
    v50[0] = a3;
    uint64_t v53 = a2;
    uint64_t v52 = a1;
    uint64_t v51 = v11;
    v50[1] = v8;
    while (1)
    {
      if (!v12) {
        return v64;
      }
      uint64_t v55 = v14;
      Statement.row.getter(v63);
      uint64_t v16 = (sqlite3_stmt *)v63[0];
      uint64_t v17 = v63[1];
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      long long v19 = (uint64_t *)(v18 + 16);
      uint64_t v65 = v18;
      swift_retain();
      swift_beginAccess();
      uint64_t v20 = *v19;
      if (*v19 < v17)
      {
        uint64_t v21 = 0;
        long long v22 = (void *)MEMORY[0x263F8EE78];
        uint64_t v23 = MEMORY[0x263F8EE78] + 32;
        while (2)
        {
          *long long v19 = v20 + 1;
          if (v20 < (uint64_t)0xFFFFFFFF80000000)
          {
            __break(1u);
          }
          else if (v20 <= 0x7FFFFFFF)
          {
            int v24 = sqlite3_column_type(v16, v20);
            switch(v24)
            {
              case 1:
                sqlite3_int64 v25 = sqlite3_column_int64(v16, v20);
                uint64_t v61 = &protocol witness table for Int64;
                *((void *)&v60 + 1) = MEMORY[0x263F8E5C0];
                *(void *)&long long v59 = v25;
                goto LABEL_24;
              case 2:
                double v28 = sqlite3_column_double(v16, v20);
                *((void *)&v60 + 1) = MEMORY[0x263F8D538];
                uint64_t v61 = &protocol witness table for Double;
                *(double *)&long long v59 = v28;
                goto LABEL_24;
              case 3:
                if (!sqlite3_column_text(v16, v20)) {
                  goto LABEL_52;
                }
                uint64_t v26 = sub_25E6C25C0();
                *((void *)&v60 + 1) = MEMORY[0x263F8D310];
                uint64_t v61 = &protocol witness table for String;
                *(void *)&long long v59 = v26;
                *((void *)&v59 + 1) = v27;
LABEL_24:
                sub_25E69639C((uint64_t)&v59, (uint64_t)v62, &qword_26B38E1F8);
                if (v21) {
                  goto LABEL_35;
                }
                unint64_t v35 = v22[3];
                if ((uint64_t)((v35 >> 1) + 0x4000000000000000) < 0) {
                  goto LABEL_50;
                }
                int64_t v36 = v35 & 0xFFFFFFFFFFFFFFFELL;
                if (v36 <= 1) {
                  uint64_t v37 = 1;
                }
                else {
                  uint64_t v37 = v36;
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E088);
                uint64_t v38 = (void *)swift_allocObject();
                uint64_t v39 = (uint64_t)(_swift_stdlib_malloc_size(v38) - 32) / 40;
                v38[2] = v37;
                v38[3] = 2 * v39;
                unint64_t v40 = (unint64_t)(v38 + 4);
                uint64_t v41 = v22[3] >> 1;
                if (v22[2])
                {
                  uint64_t v42 = v22 + 4;
                  if (v38 != v22 || v40 >= (unint64_t)v42 + 40 * v41) {
                    memmove(v38 + 4, v42, 40 * v41);
                  }
                  v22[2] = 0;
                }
                uint64_t v23 = v40 + 40 * v41;
                uint64_t v21 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
                swift_release();
                long long v22 = v38;
LABEL_35:
                BOOL v43 = __OFSUB__(v21--, 1);
                if (v43) {
                  goto LABEL_49;
                }
                sub_25E69639C((uint64_t)v62, v23, &qword_26B38E1F8);
                v23 += 40;
                uint64_t v20 = *v19;
                if (*v19 >= v17) {
                  goto LABEL_39;
                }
                continue;
              case 4:
                *((void *)&v60 + 1) = &type metadata for Blob;
                uint64_t v61 = &protocol witness table for Blob;
                uint64_t v29 = sqlite3_column_blob(v16, v20);
                if (v29)
                {
                  uint64_t v30 = v29;
                  int v31 = sqlite3_column_bytes(v16, v20);
                  if (v31)
                  {
                    size_t v32 = v31;
                    if (v31 <= 0)
                    {
                      unint64_t v33 = (void *)MEMORY[0x263F8EE78];
                    }
                    else
                    {
                      __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E098);
                      unint64_t v33 = (void *)swift_allocObject();
                      size_t v34 = _swift_stdlib_malloc_size(v33);
                      _OWORD v33[2] = v32;
                      _OWORD v33[3] = 2 * v34 - 64;
                    }
                    memcpy(v33 + 4, v30, v32);
                  }
                  else
                  {
                    unint64_t v33 = (void *)MEMORY[0x263F8EE78];
                  }
                  *(void *)&long long v59 = v33;
                }
                else
                {
                  *(void *)&long long v59 = MEMORY[0x263F8EE78];
                }
                goto LABEL_24;
              case 5:
                uint64_t v61 = 0;
                long long v59 = 0u;
                long long v60 = 0u;
                goto LABEL_24;
              default:
                goto LABEL_53;
            }
          }
          break;
        }
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        int v24 = swift_release();
        __break(1u);
LABEL_53:
        int v49 = v24;
        swift_release();
        unint64_t v57 = 0;
        unint64_t v58 = 0xE000000000000000;
        sub_25E6C27D0();
        swift_bridgeObjectRelease();
        unint64_t v57 = 0xD000000000000019;
        unint64_t v58 = 0x800000025E6C47F0;
        int v56 = v49;
        sub_25E6C2900();
        sub_25E6C25A0();
        swift_bridgeObjectRelease();
        sub_25E6C2880();
        __break(1u);
        JUMPOUT(0x25E6BAF34);
      }
      uint64_t v21 = 0;
      long long v22 = (void *)MEMORY[0x263F8EE78];
LABEL_39:
      swift_release_n();
      unint64_t v44 = v22[3];
      if (v44 >= 2)
      {
        unint64_t v45 = v44 >> 1;
        BOOL v43 = __OFSUB__(v45, v21);
        uint64_t v46 = v45 - v21;
        if (v43) {
          goto LABEL_51;
        }
        v22[2] = v46;
      }
      v62[0] = v51;
      v62[1] = v22;
      swift_bridgeObjectRetain();
      uint64_t v47 = v55;
      v52(v62);
      if (v47) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25E6C26C0();
      sub_25E6C26A0();
      Swift::Bool v12 = Statement.step()();
      uint64_t v14 = v48;
      if (v48) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6BAF48@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t result = Statement.step()();
  if (!v5)
  {
    if (result)
    {
      Statement.row.getter(v7);
      uint64_t v6 = sub_25E695184(v7[0], v7[1]);
      *a1 = v3;
      a1[1] = v6;
      return swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = 0;
      a1[1] = 0;
    }
  }
  return result;
}

uint64_t sub_25E6BAFBC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t result = Statement.step()();
  if (v5)
  {
    uint64_t result = MEMORY[0x2611E09A0](v5);
LABEL_7:
    *a1 = 0;
    a1[1] = 0;
    return result;
  }
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  Statement.row.getter(v7);
  uint64_t v6 = sub_25E695184(v7[0], v7[1]);
  *a1 = v3;
  a1[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t Connection.prepare(_:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v5 + 8) + 8))(v12, v6);
  uint64_t v7 = v12[2];
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v3);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = sub_25E696210(v7);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v10 = sub_25E6BB1D0(a1);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E140);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = sub_25E6C0FD8;
    *(void *)(result + 24) = v11;
  }
  return result;
}

uint64_t sub_25E6BB1D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = swift_allocObject();
  *(void *)(v4 + 16) = MEMORY[0x263F8EE80];
  v92 = (void *)(v4 + 16);
  v99 = a1;
  uint64_t v100 = v5;
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = (uint64_t *)(v5 + 16);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v141, v7, v8);
  uint64_t v9 = v141[1];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v141);
  uint64_t v93 = *(void *)(v9 + 16);
  if (!v93)
  {
    swift_bridgeObjectRelease();
LABEL_78:
    swift_beginAccess();
    uint64_t v66 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v66;
  }
  uint64_t v96 = v9 + 32;
  v91 = v6;
  uint64_t result = swift_beginAccess();
  unint64_t v11 = 0;
  Swift::Bool v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v94 = v9;
  v95 = (void *)v4;
LABEL_3:
  if (v11 < *(void *)(v9 + 16))
  {
    unint64_t v97 = v11;
    sub_25E681F18(v96 + 40 * v11, (uint64_t)v138);
    uint64_t v13 = v139;
    uint64_t v14 = v140;
    __swift_project_boxed_opaque_existential_1(v138, v139);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v136, v13, v14);
    long long v15 = v136[0];
    swift_bridgeObjectRelease();
    uint64_t v16 = HIBYTE(*((void *)&v15 + 1)) & 0xFLL;
    if ((*((void *)&v15 + 1) & 0x2000000000000000) == 0) {
      uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16)
    {
      swift_bridgeObjectRelease();
      v104 = v12;
      goto LABEL_31;
    }
    unint64_t v17 = 4 * v16;
    uint64_t v18 = v12;
    unint64_t v19 = 15;
    unint64_t v20 = 15;
    unint64_t v21 = 15;
    v104 = v18;
    unint64_t v101 = v17;
    uint64_t v102 = v2;
    while (sub_25E6C2600() != 46 || v23 != 0xE100000000000000)
    {
      char v24 = sub_25E6C2910();
      uint64_t result = swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_15;
      }
      uint64_t result = sub_25E6C2590();
      unint64_t v19 = result;
LABEL_10:
      if (v17 == v19 >> 14)
      {
        if (v17 == v20 >> 14)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v102;
          goto LABEL_31;
        }
        uint64_t v2 = v102;
        if (v17 < v21 >> 14) {
          goto LABEL_88;
        }
        uint64_t v34 = sub_25E6C2620();
        uint64_t v36 = v35;
        uint64_t v38 = v37;
        uint64_t v40 = v39;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v104 = sub_25E680E70(0, *((void *)v104 + 2) + 1, 1, v104);
        }
        unint64_t v42 = *((void *)v104 + 2);
        unint64_t v41 = *((void *)v104 + 3);
        if (v42 >= v41 >> 1) {
          v104 = sub_25E680E70((char *)(v41 > 1), v42 + 1, 1, v104);
        }
        *((void *)v104 + 2) = v42 + 1;
        BOOL v43 = &v104[32 * v42];
        *((void *)v43 + 4) = v34;
        *((void *)v43 + 5) = v36;
        *((void *)v43 + 6) = v38;
        *((void *)v43 + 7) = v40;
LABEL_31:
        uint64_t v44 = sub_25E6B1894((uint64_t)v104);
        uint64_t v103 = v2;
        uint64_t result = swift_bridgeObjectRelease();
        if (!*(void *)(v44 + 16)) {
          goto LABEL_86;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_25E6C0B90(v44);
          uint64_t v44 = result;
          uint64_t v45 = *(void *)(result + 16);
          if (v45) {
            goto LABEL_34;
          }
          goto LABEL_87;
        }
        uint64_t v45 = *(void *)(v44 + 16);
        if (!v45) {
          goto LABEL_87;
        }
LABEL_34:
        uint64_t v46 = v45 - 1;
        uint64_t v47 = v44 + 16 * v46;
        uint64_t v49 = *(void *)(v47 + 32);
        uint64_t v48 = *(void *)(v47 + 40);
        *(void *)(v44 + 16) = v46;
        *(void *)&v136[0] = v44;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E200);
        sub_25E6867CC((unint64_t *)&qword_26B38E208, &qword_26B38E200);
        uint64_t v50 = sub_25E6C24B0();
        unint64_t v52 = v51;
        swift_bridgeObjectRelease();
        if (v49 == 42 && v48 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        char v53 = sub_25E6C2910();
        swift_bridgeObjectRelease();
        if ((v53 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v85 = v139;
          uint64_t v86 = v140;
          __swift_project_boxed_opaque_existential_1(v138, v139);
          (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v86 + 8))(v136, v85, v86);
          long long v87 = v136[0];
          swift_bridgeObjectRelease();
          uint64_t v88 = *v91;
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v106 = *v92;
          void *v92 = 0x8000000000000000;
          sub_25E6A9668(v88, v87, *((uint64_t *)&v87 + 1), isUniquelyReferenced_nonNull_native);
          void *v92 = v106;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_endAccess();
          if (!__OFADD__(*v91, 1))
          {
            ++*v91;
            uint64_t v4 = (uint64_t)v95;
            goto LABEL_69;
          }
          goto LABEL_89;
        }
LABEL_38:
        sub_25E681F18((uint64_t)v99, (uint64_t)v133);
        __swift_instantiateConcreteTypeFromMangledName(qword_26B38E148);
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_25E6C3230;
        *(void *)(v54 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1E8);
        *(void *)(v54 + 64) = &protocol witness table for Expression<A>;
        *(void *)(v54 + 32) = 42;
        *(void *)(v54 + 40) = 0xE100000000000000;
        uint64_t v55 = MEMORY[0x263F8EE78];
        *(void *)(v54 + 48) = MEMORY[0x263F8EE78];
        uint64_t v56 = v134;
        uint64_t v57 = v135;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v133, v134);
        unint64_t v58 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v57 + 32))(&v122, v56, v57);
        *(unsigned char *)uint64_t v59 = 0;
        *(void *)(v59 + 8) = v54;
        swift_bridgeObjectRelease();
        v58(&v122, 0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E090);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_25E6C3230;
        sub_25E681F18((uint64_t)v133, v60 + 32);
        uint64_t v61 = v99[3];
        uint64_t v62 = v99[4];
        __swift_project_boxed_opaque_existential_1(v99, v61);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v62 + 16))(&v122, v61, v62);
        v136[8] = v130;
        v136[9] = v131;
        uint64_t v137 = v132;
        v136[4] = v126;
        v136[5] = v127;
        v136[6] = v128;
        v136[7] = v129;
        v136[0] = v122;
        v136[1] = v123;
        v136[2] = v124;
        v136[3] = v125;
        uint64_t v63 = v126;
        swift_bridgeObjectRetain();
        sub_25E6C0EF4(v136);
        int64_t v64 = *(void *)(v63 + 16);
        if (v64)
        {
          uint64_t v105 = v60;
          uint64_t v121 = v55;
          sub_25E68B6EC(0, v64, 0);
          uint64_t v65 = v63 + 32;
          uint64_t v66 = v121;
          do
          {
            sub_25E6826BC(v65, (uint64_t)&v106, &qword_26B38E048);
            LOBYTE(v117) = v106;
            sub_25E681F18((uint64_t)&v106 + 8, (uint64_t)v118);
            sub_25E681F18((uint64_t)&v109, (uint64_t)v119);
            sub_25E681E94(v118, (uint64_t)v120);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
            sub_25E681F7C((uint64_t)&v106, &qword_26B38E048);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_25E68B6EC(0, *(void *)(v66 + 16) + 1, 1);
              uint64_t v66 = v121;
            }
            unint64_t v68 = *(void *)(v66 + 16);
            unint64_t v67 = *(void *)(v66 + 24);
            if (v68 >= v67 >> 1)
            {
              sub_25E68B6EC((void *)(v67 > 1), v68 + 1, 1);
              uint64_t v66 = v121;
            }
            *(void *)(v66 + 16) = v68 + 1;
            sub_25E681E94(v120, v66 + 40 * v68 + 32);
            v65 += 88;
            --v64;
          }
          while (v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v60 = v105;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v66 = v55;
        }
        *(void *)&long long v122 = v60;
        sub_25E686A30(v66);
        uint64_t v69 = v122;
        uint64_t v70 = HIBYTE(v52) & 0xF;
        if ((v52 & 0x2000000000000000) == 0) {
          uint64_t v70 = v50 & 0xFFFFFFFFFFFFLL;
        }
        if (!v70)
        {
          swift_bridgeObjectRelease();
          uint64_t v79 = *(void *)(v69 + 16);
          if (!v79)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = (uint64_t)v95;
LABEL_72:
            uint64_t v9 = v94;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
            goto LABEL_73;
          }
          uint64_t v66 = v69 + 32;
          uint64_t v80 = v79 - 1;
          uint64_t v4 = (uint64_t)v95;
          while (1)
          {
            sub_25E681F18(v66, (uint64_t)&v117);
            uint64_t v81 = v99[3];
            uint64_t v82 = v99[4];
            __swift_project_boxed_opaque_existential_1(v99, v81);
            (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v82 + 16))(&v106, v81, v82);
            long long v130 = v114;
            long long v131 = v115;
            uint64_t v132 = v116;
            long long v126 = v110;
            long long v127 = v111;
            long long v128 = v112;
            long long v129 = v113;
            long long v122 = v106;
            long long v123 = v107;
            long long v124 = v108;
            long long v125 = v109;
            uint64_t v83 = v110;
            swift_bridgeObjectRetain();
            sub_25E6C0EF4(&v122);
            uint64_t v84 = *(void *)(v83 + 16);
            swift_bridgeObjectRelease();
            swift_retain();
            sub_25E6BC130(&v117, v98, v84 != 0, v95, v100);
            if (v2) {
              break;
            }
            swift_retain();
            swift_retain();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
            swift_release();
            swift_release();
            swift_release();
            if (!v80)
            {
              swift_bridgeObjectRelease();
              goto LABEL_72;
            }
            v66 += 40;
            --v80;
          }
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_81;
        }
        uint64_t v71 = *(void *)(v122 + 16);
        if (!v71)
        {
LABEL_79:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_25E6B0EA8();
          swift_allocError();
          *(void *)uint64_t v90 = v50;
          *(void *)(v90 + 8) = v52;
          *(void *)(v90 + 16) = 0;
          *(unsigned char *)(v90 + 24) = 0;
          swift_willThrow();
LABEL_81:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
          swift_release();
          swift_release();
          return v66;
        }
        uint64_t v66 = v122 + 32;
        while (1)
        {
          sub_25E681F18(v66, (uint64_t)&v122);
          uint64_t v72 = *((void *)&v123 + 1);
          __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
          sub_25E6B11EC(0, v72, (uint64_t *)&v106);
          uint64_t v73 = *((void *)&v107 + 1);
          uint64_t v74 = v108;
          __swift_project_boxed_opaque_existential_1(&v106, *((uint64_t *)&v107 + 1));
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v74 + 8))(&v117, v73, v74);
          uint64_t v76 = v117;
          uint64_t v75 = *(void *)&v118[0];
          swift_bridgeObjectRelease();
          if (v76 == v50 && v75 == v52) {
            break;
          }
          char v78 = sub_25E6C2910();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
          if (v78) {
            goto LABEL_67;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          v66 += 40;
          if (!--v71) {
            goto LABEL_79;
          }
        }
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
LABEL_67:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v66 = (uint64_t)v98;
        swift_retain();
        uint64_t v4 = (uint64_t)v95;
        sub_25E6BC130(&v122, v98, 1, v95, v100);
        uint64_t v2 = v103;
        if (v103)
        {
          swift_retain();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          goto LABEL_81;
        }
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
LABEL_69:
        uint64_t v9 = v94;
LABEL_73:
        Swift::Bool v12 = (char *)MEMORY[0x263F8EE78];
        unint64_t v11 = v97 + 1;
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
        if (v97 + 1 == v93)
        {
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
        goto LABEL_3;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
    if (v20 >> 14 != v19 >> 14)
    {
      if (v19 >> 14 < v20 >> 14)
      {
        __break(1u);
        goto LABEL_85;
      }
      uint64_t v25 = sub_25E6C2620();
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v104 = sub_25E680E70(0, *((void *)v104 + 2) + 1, 1, v104);
      }
      unint64_t v33 = *((void *)v104 + 2);
      unint64_t v32 = *((void *)v104 + 3);
      if (v33 >= v32 >> 1) {
        v104 = sub_25E680E70((char *)(v32 > 1), v33 + 1, 1, v104);
      }
      *((void *)v104 + 2) = v33 + 1;
      long long v22 = &v104[32 * v33];
      *((void *)v22 + 4) = v25;
      *((void *)v22 + 5) = v27;
      *((void *)v22 + 6) = v29;
      *((void *)v22 + 7) = v31;
      unint64_t v17 = v101;
    }
    uint64_t result = sub_25E6C2590();
    unint64_t v19 = result;
    unint64_t v20 = result;
    unint64_t v21 = result;
    goto LABEL_10;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
  return result;
}

uint64_t sub_25E6BBECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E138);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_25E6C1EE8;
  *(void *)(v7 + 24) = v6;
  *a3 = v7;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E6BBF64@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t result = Statement.step()();
  if (v5)
  {
    uint64_t result = MEMORY[0x2611E09A0](v5);
LABEL_7:
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  Statement.row.getter(v7);
  uint64_t v6 = sub_25E695184(v7[0], v7[1]);
  *a2 = a1;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t Connection.prepareRowIterator(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v7 + 8) + 8))(v12, v8);
  uint64_t v9 = v12[2];
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v4);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = sub_25E696210(v9);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_25E6BB1D0(a1);
    *a2 = v11;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_25E6BC130(void *a1, void *a2, int a3, void *a4, uint64_t a5)
{
  uint64_t v73 = a2;
  uint64_t v70 = a5;
  uint64_t v71 = a4;
  LODWORD(v69) = a3;
  uint64_t v5 = a1;
  v85[21] = *MEMORY[0x263EF8340];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v8 = v5[3];
  uint64_t v7 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v83, v8, v7);
  uint64_t v9 = v83[3];
  uint64_t v72 = (void *)v83[2];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v83);
  uint64_t v10 = v5[3];
  uint64_t v11 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v84, v10, v11);
  uint64_t v12 = v84[6];
  uint64_t v13 = v84[7];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v84);
  uint64_t v14 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40);
  uint64_t v81 = DynamicType;
  uint64_t v82 = v7;
  __swift_allocate_boxed_opaque_existential_1(v80);
  v14(v72, v9, v12, v13, DynamicType, v7);
  uint64_t v15 = v5[3];
  uint64_t v16 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v15);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 16))(v85, v15, v16);
  LOBYTE(v11) = v85[0];
  uint64_t v17 = v85[1];
  swift_bridgeObjectRetain();
  sub_25E6C0EF4(v85);
  uint64_t v18 = v81;
  uint64_t v19 = v82;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v80, v81);
  unint64_t v20 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 32))(&v77, v18, v19);
  *(unsigned char *)uint64_t v21 = v11;
  *(void *)(v21 + 8) = v17;
  swift_bridgeObjectRelease();
  v20(&v77, 0);
  uint64_t v22 = v81;
  uint64_t v23 = v82;
  char v24 = __swift_project_boxed_opaque_existential_1(v80, v81);
  uint64_t v25 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v27);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v23 + 8) + 8))(&v77, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
  uint64_t v28 = v79;
  type metadata accessor for Statement();
  swift_allocObject();
  uint64_t v29 = (uint64_t)v73;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v30 = v74;
  sub_25E692708(v29);
  uint64_t v31 = v30;
  if (v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  }
  sub_25E696210(v28);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v33 = Statement.columnNames.getter();
  swift_release();
  int64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    uint64_t v73 = v5;
    uint64_t v74 = 0;
    uint64_t v76 = MEMORY[0x263F8EE78];
    sub_25E68B5FC(0, v34, 0);
    uint64_t v35 = v76;
    uint64_t v72 = (void *)v33;
    uint64_t v36 = (uint64_t *)(v33 + 40);
    do
    {
      uint64_t v37 = *(v36 - 1);
      uint64_t v38 = *v36;
      swift_bridgeObjectRetain();
      uint64_t v39 = v37;
      uint64_t v40 = v74;
      sub_25E681960(0, 0xE000000000000000, v39, v38, 34, 0xE100000000000000);
      uint64_t v74 = v40;
      uint64_t v77 = 0;
      unint64_t v78 = 0xE000000000000000;
      sub_25E6C24A0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C24A0();
      swift_bridgeObjectRelease();
      uint64_t v41 = v77;
      unint64_t v42 = v78;
      uint64_t v76 = v35;
      unint64_t v43 = *(void *)(v35 + 16);
      unint64_t v44 = *(void *)(v35 + 24);
      if (v43 >= v44 >> 1)
      {
        sub_25E68B5FC((char *)(v44 > 1), v43 + 1, 1);
        uint64_t v35 = v76;
      }
      v36 += 2;
      *(void *)(v35 + 16) = v43 + 1;
      uint64_t v45 = v35 + 16 * v43;
      *(void *)(v45 + 32) = v41;
      *(void *)(v45 + 40) = v42;
      --v34;
    }
    while (v34);
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v5 = v73;
    uint64_t v31 = v74;
    if ((v69 & 1) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x263F8EE78];
    if ((v69 & 1) == 0) {
      goto LABEL_10;
    }
  }
  MEMORY[0x270FA5388](v46);
  *(&v69 - 2) = (uint64_t)v5;
  uint64_t v35 = sub_25E6B1994((void (*)(void *__return_ptr, void *))sub_25E6C1F28, (uint64_t)(&v69 - 4), v35);
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v74 = v31;
  uint64_t v47 = *(void **)(v35 + 16);
  uint64_t v69 = v35;
  if (!v47)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  }
  uint64_t v48 = v71 + 2;
  uint64_t v49 = (void *)(v70 + 16);
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v50 = (uint64_t *)(v35 + 40);
  uint64_t v71 = v48;
  uint64_t v72 = v49;
  while (1)
  {
    uint64_t v73 = v47;
    uint64_t v52 = *(v50 - 1);
    uint64_t v51 = *v50;
    uint64_t v53 = *v49;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = (void *)*v48;
    uint64_t v55 = v75;
    *uint64_t v48 = 0x8000000000000000;
    unint64_t v57 = sub_25E6A8B4C(v52, v51);
    uint64_t v58 = v55[2];
    BOOL v59 = (v56 & 1) == 0;
    uint64_t v60 = v58 + v59;
    if (__OFADD__(v58, v59))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
    char v61 = v56;
    if (v55[3] < v60) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      int64_t v64 = v75;
      if ((v56 & 1) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_25E6BFE18();
      int64_t v64 = v75;
      if ((v61 & 1) == 0)
      {
LABEL_21:
        v64[(v57 >> 6) + 8] |= 1 << v57;
        uint64_t v65 = (uint64_t *)(v64[6] + 16 * v57);
        *uint64_t v65 = v52;
        v65[1] = v51;
        *(void *)(v64[7] + 8 * v57) = v53;
        uint64_t v66 = v64[2];
        BOOL v67 = __OFADD__(v66, 1);
        uint64_t v68 = v66 + 1;
        if (v67) {
          goto LABEL_30;
        }
        v64[2] = v68;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      }
    }
LABEL_19:
    *(void *)(v64[7] + 8 * v57) = v53;
LABEL_23:
    uint64_t v48 = v71;
    *uint64_t v71 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v49 = v72;
    if (__OFADD__(*v72, 1)) {
      goto LABEL_29;
    }
    v50 += 2;
    ++*v72;
    uint64_t v47 = (void *)((char *)v73 - 1);
    if (v73 == (void *)1) {
      goto LABEL_25;
    }
  }
  sub_25E6BF5F8(v60, isUniquelyReferenced_nonNull_native);
  unint64_t v62 = sub_25E6A8B4C(v52, v51);
  if ((v61 & 1) == (v63 & 1))
  {
    unint64_t v57 = v62;
    int64_t v64 = v75;
    if ((v61 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t result = sub_25E6C2990();
  __break(1u);
  return result;
}

uint64_t sub_25E6BC88C@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_25E6B11EC(0, v3, v11);
  uint64_t v4 = v12;
  uint64_t v5 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v10, v4, v5);
  uint64_t v6 = v10[0];
  uint64_t v7 = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_25E6C25A0();
  uint64_t result = sub_25E6C25A0();
  uint64_t v9 = v15;
  *a2 = v14;
  a2[1] = v9;
  return result;
}

uint64_t Connection.scalar<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  long long v7 = *(_OWORD *)(a1 + 144);
  v18[8] = *(_OWORD *)(a1 + 128);
  v18[9] = v7;
  uint64_t v19 = *(void *)(a1 + 160);
  long long v8 = *(_OWORD *)(a1 + 80);
  v18[4] = *(_OWORD *)(a1 + 64);
  uint64_t v18[5] = v8;
  long long v9 = *(_OWORD *)(a1 + 112);
  v18[6] = *(_OWORD *)(a1 + 96);
  v18[7] = v9;
  long long v10 = *(_OWORD *)(a1 + 16);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  void v18[2] = *(_OWORD *)(a1 + 32);
  uint64_t v18[3] = v11;
  uint64_t v12 = type metadata accessor for ScalarQuery();
  QueryType.expression.getter(v12, (uint64_t)&protocol witness table for ScalarQuery<A>);
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v3);
  if (v4) {
    goto LABEL_4;
  }
  uint64_t v13 = sub_25E696210(v20);
  swift_beginAccess();
  uint64_t v14 = *(sqlite3_stmt **)(v13 + 16);
  swift_retain();
  sqlite3_reset(v14);
  Statement.step()();
  if (v15)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(&v17);
  Cursor.subscript.getter(0, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_25E6878CC((uint64_t)v18, a2, a3);
  return sub_25E681F7C((uint64_t)v18, &qword_26B38E1F8);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  sqlite3_stmt *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14[6];
  long long v15;
  uint64_t v16;

  uint64_t v16 = *MEMORY[0x263EF8340];
  void v14[5] = *(void *)a1;
  uint64_t v15 = *(_OWORD *)(a1 + 8);
  long long v7 = type metadata accessor for Select();
  ExpressionType.expression.getter(v7, (uint64_t)&protocol witness table for Select<A>, v14);
  long long v8 = v14[2];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v3);
  if (v4) {
    goto LABEL_4;
  }
  long long v9 = sub_25E696210(v8);
  swift_beginAccess();
  long long v10 = *(sqlite3_stmt **)(v9 + 16);
  swift_retain();
  sqlite3_reset(v10);
  Statement.step()();
  if (v11)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(&v13);
  Cursor.subscript.getter(0, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_25E6878CC((uint64_t)v14, a2, a3);
  return sub_25E681F7C((uint64_t)v14, &qword_26B38E1F8);
}

uint64_t Connection.scalar<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v42 = a4;
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v41 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = sub_25E6C2790();
  uint64_t v39 = *(void *)(v43 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v43);
  long long v11 = (char *)&v36 - v10;
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v36 - v12;
  long long v14 = *(_OWORD *)(a1 + 144);
  v48[8] = *(_OWORD *)(a1 + 128);
  v48[9] = v14;
  uint64_t v49 = *(void *)(a1 + 160);
  long long v15 = *(_OWORD *)(a1 + 80);
  v48[4] = *(_OWORD *)(a1 + 64);
  uint64_t v48[5] = v15;
  long long v16 = *(_OWORD *)(a1 + 112);
  v48[6] = *(_OWORD *)(a1 + 96);
  v48[7] = v16;
  long long v17 = *(_OWORD *)(a1 + 16);
  v48[0] = *(_OWORD *)a1;
  v48[1] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  v48[2] = *(_OWORD *)(a1 + 32);
  uint64_t v48[3] = v18;
  sub_25E6C2790();
  uint64_t v19 = type metadata accessor for ScalarQuery();
  QueryType.expression.getter(v19, (uint64_t)&protocol witness table for ScalarQuery<A>);
  uint64_t v20 = v50;
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v44;
  sub_25E692708(v5);
  if (v21) {
    goto LABEL_4;
  }
  uint64_t v37 = v13;
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v22 = v43;
  uint64_t v44 = a2;
  uint64_t v23 = sub_25E696210(v20);
  swift_beginAccess();
  char v24 = *(sqlite3_stmt **)(v23 + 16);
  swift_retain();
  sqlite3_reset(v24);
  Statement.step()();
  if (v25)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(v47);
  uint64_t v45 = v47[0];
  uint64_t v46 = v47[1];
  Cursor.subscript.getter(0, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  uint64_t v27 = v11;
  uint64_t v28 = v38;
  char v29 = swift_dynamicCast();
  uint64_t v30 = v40;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
  if (v29)
  {
    v31(v27, 0, 1, v28);
    unint64_t v32 = v37;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v37, v27, v28);
    uint64_t v33 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 48))(v32, v44, v41);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
    uint64_t v34 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
  else
  {
    v31(v27, 1, 1, v28);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v22);
    uint64_t v35 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v42, 1, 1, v35);
  }
}

{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  sqlite3_stmt *v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void v41[2];
  uint64_t v42[6];
  long long v43;
  uint64_t v44;

  uint64_t v37 = a4;
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v36 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v8 = sub_25E6C2790();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v30 - v10;
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v30 - v12;
  v42[5] = *(void *)a1;
  uint64_t v43 = *(_OWORD *)(a1 + 8);
  sub_25E6C2790();
  long long v14 = type metadata accessor for Select();
  ExpressionType.expression.getter(v14, (uint64_t)&protocol witness table for Select<A>, v42);
  long long v15 = v42[2];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  long long v16 = v38;
  sub_25E692708(v4);
  if (v16) {
    goto LABEL_4;
  }
  uint64_t v31 = v13;
  uint64_t v33 = a2;
  uint64_t v38 = v11;
  unint64_t v32 = v8;
  long long v17 = sub_25E696210(v15);
  swift_beginAccess();
  long long v18 = *(sqlite3_stmt **)(v17 + 16);
  swift_retain();
  sqlite3_reset(v18);
  Statement.step()();
  if (v19)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(v41);
  uint64_t v39 = v41[0];
  uint64_t v40 = v41[1];
  Cursor.subscript.getter(0, (uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
  uint64_t v21 = v38;
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t v23 = swift_dynamicCast();
  char v24 = v35;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  if (v23)
  {
    v25(v21, 0, 1, v22);
    uint64_t v26 = v31;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v21, v22);
    uint64_t v27 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 48))(v26, v33, v36);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
    uint64_t v28 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  }
  else
  {
    v25(v21, 1, 1, v22);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v32);
    char v29 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v37, 1, 1, v29);
  }
}

uint64_t Connection.pluck(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2;
  v25[4] = *MEMORY[0x263EF8340];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v22, v9, v10);
  sub_25E6C0EF4(v22);
  if (v24) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v22[18];
  }
  char v12 = v24 | v23;
  uint64_t v21[3] = v7;
  v21[4] = v8;
  __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void))(*(void *)(v7 - 8) + 16))();
  uint64_t v13 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(v25, v7, v8);
  *(void *)(v14 + 136) = 1;
  *(void *)(v14 + 144) = v11;
  *(unsigned char *)(v14 + 152) = v12 & 1;
  *(unsigned char *)(v14 + 153) = 0;
  v13(v25, 0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v8 + 8) + 8))(v25, v7);
  uint64_t v15 = v25[2];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E692708(v4);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    sub_25E696210(v15);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = sub_25E6BB1D0(v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    Swift::Bool v18 = Statement.step()();
    if (v19)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      if (v18)
      {
        Statement.row.getter(v25);
        uint64_t v20 = sub_25E695184(v25[0], v25[1]);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = 0;
        uint64_t v20 = 0;
      }
      uint64_t result = swift_release();
      *a2 = v17;
      a2[1] = v20;
    }
  }
  return result;
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.run(_:)(SwiftSQLite::Insert a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = *(void *)(a1.template._countAndFlagsBits + 16);
  sub_25E696400();
  uint64_t v6 = qword_26B38E1E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  sub_25E6C2740();
  uint64_t v7 = sub_25E6A57E4();
  if ((v13 & 1) != 0 || v12 != v7)
  {
    id inited = *(id *)(v1 + 88);
    sub_25E6C2770();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v3) {
      return v11;
    }
    return (Swift::Int64)inited;
  }
  type metadata accessor for Statement();
  id inited = (id)swift_initStackObject();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_retain();
  sub_25E692708(v9);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (Swift::Int64)inited;
  }
  Statement.run(_:)(v5);
  swift_release();
  swift_release();
  swift_beginAccess();
  Swift::Int64 result = *(void *)(v4 + 16);
  if (result)
  {
    id inited = (id)sqlite3_last_insert_rowid((sqlite3 *)result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (Swift::Int64)inited;
  }
  __break(1u);
  return result;
}

sqlite3 *sub_25E6BDBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, sqlite3 **a3@<X8>)
{
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  Swift::Int64 result = sub_25E692708(a1);
  if (!v3)
  {
    Statement.run(_:)(a2);
    swift_release();
    swift_release();
    swift_beginAccess();
    Swift::Int64 result = *(sqlite3 **)(a1 + 16);
    if (result)
    {
      Swift::Int64 result = (sqlite3 *)sqlite3_last_insert_rowid(result);
      *a3 = result;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.run(_:)(SwiftSQLite::Update a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1.template._countAndFlagsBits + 16);
  sub_25E696400();
  uint64_t v5 = qword_26B38E1E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  sub_25E6C2740();
  uint64_t v6 = sub_25E6A57E4();
  if ((v13 & 1) != 0 || v12 != v6)
  {
    id v9 = *(id *)(v1 + 88);
    sub_25E6C2770();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v3) {
      return v11;
    }
  }
  else
  {
    type metadata accessor for Statement();
    swift_initStackObject();
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_retain();
    sub_25E692708(v7);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      Statement.run(_:)(v4);
      swift_release();
      swift_release();
      swift_beginAccess();
      Swift::Int result = *(void *)(v1 + 16);
      if (result)
      {
        int v10 = sqlite3_changes((sqlite3 *)result);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.run(_:)(SwiftSQLite::Delete a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1.template._countAndFlagsBits + 16);
  sub_25E696400();
  uint64_t v5 = qword_26B38E1E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  sub_25E6C2740();
  uint64_t v6 = sub_25E6A57E4();
  if ((v13 & 1) != 0 || v12 != v6)
  {
    id v9 = *(id *)(v1 + 88);
    sub_25E6C2770();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v3) {
      return v11;
    }
  }
  else
  {
    type metadata accessor for Statement();
    swift_initStackObject();
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_retain();
    sub_25E692708(v7);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      Statement.run(_:)(v4);
      swift_release();
      swift_release();
      swift_beginAccess();
      Swift::Int result = *(void *)(v1 + 16);
      if (result)
      {
        int v10 = sqlite3_changes((sqlite3 *)result);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

sqlite3 *sub_25E6BE0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, void *a3@<X8>)
{
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  Swift::Int result = sub_25E692708(a1);
  if (!v3)
  {
    Statement.run(_:)(a2);
    swift_release();
    swift_release();
    swift_beginAccess();
    Swift::Int result = *(sqlite3 **)(a1 + 16);
    if (result)
    {
      Swift::Int result = (sqlite3 *)sqlite3_changes(result);
      *a3 = (int)result;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25E6BE218@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v29 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v27 = (char *)&v27 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_25E6C2790();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = *(void *)(v10 - 8);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v19 = (char *)&v27 - v18;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > a1)
  {
    sub_25E6826BC(a2 + 40 * a1 + 32, (uint64_t)v30, &qword_26B38E1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E1F8);
    int v20 = swift_dynamicCast();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    if (v20)
    {
      v21(v15, 0, 1, v10);
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, v10);
      (*(void (**)(char *, uint64_t, uint64_t))(a4 + 48))(v19, a3, a4);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v10);
      uint64_t v22 = v29;
      int v23 = swift_dynamicCast();
      char v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
      if (v23)
      {
        uint64_t v25 = v22;
        uint64_t v26 = 0;
        return v24(v25, v26, 1, a3);
      }
      uint64_t v25 = v22;
    }
    else
    {
      v21(v15, 1, 1, v10);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      char v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
      uint64_t v25 = v29;
    }
    uint64_t v26 = 1;
    return v24(v25, v26, 1, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E6BE570()
{
  swift_bridgeObjectRetain();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  char v0 = sub_25E6C25E0();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t Row.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25E6BE640(a1, a2, a3, (uint64_t (*)(uint64_t *))Row.get<A>(_:));
}

{
  return sub_25E6BE640(a1, a2, a3, (uint64_t (*)(uint64_t *))Row.get<A>(_:));
}

uint64_t sub_25E6BE640(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  long long v5 = *v4;
  uint64_t v7 = *a1;
  long long v8 = *(_OWORD *)(a1 + 1);
  long long v9 = v5;
  return a4(&v7);
}

SwiftSQLite::JoinType_optional __swiftcall JoinType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25E6C28C0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_25E6BE718(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25E6B1D54(*a1, *a2);
}

uint64_t sub_25E6BE724()
{
  return sub_25E6C2A20();
}

uint64_t sub_25E6BE7C4()
{
  sub_25E6C2570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6BE850()
{
  return sub_25E6C2A20();
}

SwiftSQLite::JoinType_optional sub_25E6BE8EC(Swift::String *a1)
{
  return JoinType.init(rawValue:)(*a1);
}

void sub_25E6BE8F8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x52454E4E49;
  if (v2 != 1)
  {
    uint64_t v5 = 0x54554F205446454CLL;
    unint64_t v4 = 0xEA00000000005245;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x53534F5243;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

SwiftSQLite::OnConflict_optional __swiftcall OnConflict.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_25E6C28C0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t sub_25E6BE9B0(unsigned __int8 *a1, char *a2)
{
  return sub_25E6B204C(*a1, *a2);
}

uint64_t sub_25E6BE9BC()
{
  return sub_25E6C2A20();
}

uint64_t sub_25E6BEAA4()
{
  sub_25E6C2570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E6BEB74()
{
  return sub_25E6C2A20();
}

SwiftSQLite::OnConflict_optional sub_25E6BEC58(Swift::String *a1)
{
  return OnConflict.init(rawValue:)(*a1);
}

void sub_25E6BEC64(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x4543414C504552;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x4B4341424C4C4F52;
      goto LABEL_3;
    case 2:
      *a1 = 0x54524F4241;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1279869254;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x45524F4E4749;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_25E6BED10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A701790);
  uint64_t result = sub_25E6C28A0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    long long v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v34) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v34);
                }
                else {
                  *long long v9 = v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(v5 + 56);
      uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v31 = *(void *)(v29 + v28);
      if ((a2 & 1) == 0) {
        _Block_copy(*(const void **)(v29 + v28));
      }
      uint64_t result = sub_25E6C29F0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v30;
      *(void *)(*(void *)(v7 + 56) + v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25E6BEFC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A701990);
  char v36 = a2;
  uint64_t v6 = sub_25E6C28A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_25E6C2A00();
    sub_25E6C2570();
    uint64_t result = sub_25E6C2A20();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25E6BF2E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A701988);
  char v36 = a2;
  uint64_t v6 = sub_25E6C28A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(const void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      _Block_copy(v32);
    }
    sub_25E6C2A00();
    sub_25E6C2570();
    uint64_t result = sub_25E6C2A20();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25E6BF5F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E218);
  char v37 = a2;
  uint64_t v6 = sub_25E6C28A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_25E6C2A00();
    sub_25E6C2570();
    uint64_t result = sub_25E6C2A20();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_25E6BF904()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A701790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E6C2890();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(const void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = _Block_copy(v17);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25E6BFAA8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A701990);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E6C2890();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25E6BFC60()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A701988);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E6C2890();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(const void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = _Block_copy(v20);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25E6BFE18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B38E218);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E6C2890();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_25E6BFFC8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_25E6C0010(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_25E6C0058(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25E6C0B7C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_25E6C00C4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_25E6C00C4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25E6C28F0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_25E6C076C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  v98 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    v104 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_117:
      uint64_t result = v10;
      uint64_t v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_25E6C083C((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_25E6C0B68(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          uint64_t v96 = (void *)(v93 + 32 + 16 * v92);
          *uint64_t v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v100 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_25E6C2680();
    *(void *)(result + 16) = v6;
    uint64_t v100 = result;
    v104 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v102 = v3;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    int64_t v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    unint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_25E6C2910();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_25E6C2910();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      uint64_t v20 = v18 + 1;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        uint64_t v25 = v18;
        uint64_t v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_25E6C0A6C(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v38 = *(void *)(v10 + 16);
    unint64_t v37 = *(void *)(v10 + 24);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_25E6C0A6C((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v39 = v10 + 32;
    uint64_t v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    uint64_t *v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      uint64_t v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v46 = v39 + 16 * v11;
          uint64_t v47 = *(void *)(v46 - 64);
          uint64_t v48 = *(void *)(v46 - 56);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(void *)(v46 - 48);
          uint64_t v50 = *(void *)(v46 - 40);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          uint64_t v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = (uint64_t *)(v39 + 16 * v41);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *(void *)(v10 + 32);
            uint64_t v71 = *(void *)(v10 + 40);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *(void *)(v10 + 32);
          uint64_t v42 = *(void *)(v10 + 40);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        BOOL v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        uint64_t v65 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        uint64_t v83 = (uint64_t *)(v39 + 16 * v80);
        uint64_t v84 = *v83;
        uint64_t v85 = v39;
        unint64_t v86 = v41;
        long long v87 = (void *)(v39 + 16 * v41);
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_25E6C083C((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *(void *)(v82 + 16)) {
          goto LABEL_132;
        }
        *uint64_t v83 = v84;
        *(void *)(v85 + 16 * v80 + 8) = v88;
        unint64_t v90 = *(void *)(v82 + 16);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        uint64_t v39 = v85;
        *(void *)(v82 + 16) = v90 - 1;
        uint64_t v9 = v89;
        uint64_t v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v102;
    if (v8 >= v102)
    {
      uint64_t v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      uint64_t v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        uint64_t v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        uint64_t v34 = v12;
        int64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_25E6C2910();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)int64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      uint64_t v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_25E6C076C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_25E6C2910(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25E6C083C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v18 = v17 + 16;
      uint64_t v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_25E6C2910() & 1) == 0)
      {
        uint64_t v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_25E6C2910() & 1) == 0) {
        break;
      }
      uint64_t v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    uint64_t v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

char *sub_25E6C0A6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A701980);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E6C0B68(uint64_t a1)
{
  return sub_25E6C0A6C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_25E6C0B7C(uint64_t a1)
{
  return sub_25E68B71C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_25E6C0B90(uint64_t a1)
{
  return sub_25E6809C4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_25E6C0BA4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_25E681E94(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_25E6C0C3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25E6C0C98(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E6C0CEC()
{
  return sub_25E6BE570() & 1;
}

uint64_t type metadata accessor for ScalarQuery()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E6C0D2C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E6C0D70(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_25E6C0D2C(a2, a3);
  }
  return result;
}

void *sub_25E6C0DC8(void *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E681ED4(v2, v3);
  sub_25E6C0E9C(v4, v5, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25E6C0E9C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_25E681ED4(a2, a3);
  }
  return result;
}

void *sub_25E6C0EF4(void *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25E6C0D2C(v2, v3);
  sub_25E6C0D70(v4, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E6C0FC4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E6C0FD8@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E6BBECC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t type metadata accessor for Select()
{
  return __swift_instantiateGenericMetadata();
}

sqlite3 *sub_25E6C0FF8@<X0>(sqlite3 **a1@<X8>)
{
  return sub_25E6BDBBC(*(void *)(v1 + 16), *(void *)(v1 + 40), a1);
}

sqlite3 *sub_25E6C1018@<X0>(void *a1@<X8>)
{
  return sub_25E6BE0FC(*(void *)(v1 + 16), *(void *)(v1 + 40), a1);
}

unint64_t sub_25E6C1038(uint64_t a1)
{
  unint64_t result = sub_25E6C1060();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25E6C1060()
{
  unint64_t result = qword_26A7018E0;
  if (!qword_26A7018E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7018E0);
  }
  return result;
}

unint64_t sub_25E6C10B8()
{
  unint64_t result = qword_26A7018E8;
  if (!qword_26A7018E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7018E8);
  }
  return result;
}

unint64_t sub_25E6C1110()
{
  unint64_t result = qword_26A7018F0;
  if (!qword_26A7018F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7018F0);
  }
  return result;
}

uint64_t dispatch thunk of QueryType.clauses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QueryType.clauses.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of QueryType.clauses.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of QueryType.init(_:database:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of static SchemaType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

ValueMetadata *type metadata accessor for Table()
{
  return &type metadata for Table;
}

uint64_t _s11SwiftSQLite12QueryClausesVwca_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = (_OWORD *)(a1 + 72);
  long long v5 = (_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v6)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25E681F7C(a1 + 72, &qword_26B38E0C0);
      uint64_t v7 = *(void *)(a2 + 88);
      _OWORD *v4 = *v5;
      *(void *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *v5;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    _OWORD *v4 = v8;
  }
  long long v9 = (long long *)(a1 + 96);
  int64_t v11 = (long long *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
    if (v10)
    {
      *(void *)(a1 + 96) = v10;
      uint64_t v14 = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      if (!v14)
      {
        long long v15 = *(_OWORD *)(a2 + 104);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = v15;
        goto LABEL_23;
      }
LABEL_18:
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
    long long v17 = *v11;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_22:
    *long long v9 = v17;
    goto LABEL_23;
  }
  if (!v10)
  {
    sub_25E681F7C(a1 + 96, qword_26A7018F8);
    long long v16 = *(_OWORD *)(a2 + 112);
    *long long v9 = *v11;
    *(_OWORD *)(a1 + 112) = v16;
    goto LABEL_23;
  }
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v9 = (long long *)(a1 + 104);
  long long v12 = (long long *)(a2 + 104);
  uint64_t v13 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
    if (v13) {
      goto LABEL_18;
    }
    long long v17 = *v12;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    goto LABEL_22;
  }
  if (v13)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25E681F7C(a1 + 104, &qword_26B38E0C0);
    uint64_t v18 = *(void *)(a2 + 120);
    *long long v9 = *v12;
    *(void *)(a1 + 120) = v18;
  }
LABEL_23:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v19 = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v19;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11SwiftSQLite12QueryClausesVwta_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    uint64_t v7 = *(void *)(a2 + 80);
    if (v7)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v7;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_25E681F7C(a1 + 72, &qword_26B38E0C0);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 96);
  if (!*(void *)(a1 + 96))
  {
LABEL_12:
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    goto LABEL_15;
  }
  if (!v8)
  {
    sub_25E681F7C(a1 + 96, qword_26A7018F8);
    goto LABEL_12;
  }
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 112))
  {
LABEL_14:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)(a2 + 112);
  if (!v9)
  {
    sub_25E681F7C(a1 + 104, &qword_26B38E0C0);
    goto LABEL_14;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for View()
{
  return &type metadata for View;
}

ValueMetadata *type metadata accessor for VirtualTable()
{
  return &type metadata for VirtualTable;
}

ValueMetadata *type metadata accessor for Insert()
{
  return &type metadata for Insert;
}

ValueMetadata *type metadata accessor for Update()
{
  return &type metadata for Update;
}

ValueMetadata *type metadata accessor for Delete()
{
  return &type metadata for Delete;
}

uint64_t destroy for RowIterator()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s11SwiftSQLite11RowIteratorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RowIterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RowIterator(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_25E6C191C(a1, a2, a3, MEMORY[0x263F8EED8]);
}

ValueMetadata *type metadata accessor for RowIterator()
{
  return &type metadata for RowIterator;
}

uint64_t destroy for Row()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s11SwiftSQLite3RowVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Row(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Row(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_25E6C191C(a1, a2, a3, MEMORY[0x263F8EEA0]);
}

void *sub_25E6C191C(void *a1, _OWORD *a2, uint64_t a3, void (*a4)(void))
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11SwiftSQLite3RowVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E6C19A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Row()
{
  return &type metadata for Row;
}

unsigned char *storeEnumTagSinglePayload for JoinType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E6C1AC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JoinType()
{
  return &type metadata for JoinType;
}

unsigned char *storeEnumTagSinglePayload for OnConflict(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E6C1BC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnConflict()
{
  return &type metadata for OnConflict;
}

uint64_t _s11SwiftSQLite12QueryClausesVwxx_0(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[10])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    if (a1[14])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s11SwiftSQLite12QueryClausesVwcp_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  uint64_t v9 = *(void *)(a2 + 96);
  if (v9)
  {
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
    }
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11SwiftSQLite12QueryClausesVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E6C1E40(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryClauses()
{
  return &type metadata for QueryClauses;
}

uint64_t sub_25E6C1EB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E6C1EE8@<X0>(void *a1@<X8>)
{
  return sub_25E6BBF64(*(void *)(v1 + 24), a1);
}

uint64_t sub_25E6C1EF0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E6C1F28@<X0>(void *a1@<X8>)
{
  return sub_25E6BC88C(*(void **)(v1 + 16), a1);
}

sqlite3 *sub_25E6C1F60@<X0>(void *a1@<X8>)
{
  return sub_25E6C1018(a1);
}

uint64_t Collation.expression.getter@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 8);
  if (v3)
  {
    if (v3 == 1)
    {
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x455341434F4ELL;
    }
    else if (v3 == 2)
    {
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x4D49525452;
    }
    else
    {
      uint64_t v6 = *(void *)v1;
      sub_25E681EAC(*(void *)v1, *(void *)(v1 + 8));
      sub_25E681960(0, 0xE000000000000000, v6, v3, 34, 0xE100000000000000);
      sub_25E6C24A0();
      sub_25E6C25A0();
      swift_bridgeObjectRelease();
      sub_25E6C24A0();
      uint64_t result = sub_25E681EC0(v6, v3);
      uint64_t v5 = 0;
      unint64_t v4 = 0xE000000000000000;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v5 = 0x5952414E4942;
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = MEMORY[0x263F8EE78];
  return result;
}

uint64_t Collation.description.getter()
{
  uint64_t v1 = v0[1];
  switch(v1)
  {
    case 0:
      return 0x5952414E4942;
    case 1:
      return 0x455341434F4ELL;
    case 2:
      return 0x4D49525452;
  }
  sub_25E681960(0, 0xE000000000000000, *v0, v1, 34, 0xE100000000000000);
  sub_25E6C24A0();
  sub_25E6C25A0();
  swift_bridgeObjectRelease();
  sub_25E6C24A0();
  return 0;
}

uint64_t getEnumTagSinglePayload for Collation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Collation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Collation()
{
  return &type metadata for Collation;
}

uint64_t sub_25E6C22D0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_25E6C22E0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_25E6C22F0()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_25E6C2300()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_25E6C2310()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_25E6C2320()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_25E6C2330()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_25E6C2340()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_25E6C2350()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_25E6C2360()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_25E6C2370()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_25E6C2380()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_25E6C2390()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_25E6C23A0()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_25E6C23B0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_25E6C23C0()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t _s10Foundation4UUIDV11SwiftSQLiteE13datatypeValueSSvg_0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_25E6C23E0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_25E6C23F0()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_25E6C2400()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_25E6C2410()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_25E6C2420()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_25E6C2430()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_25E6C2440()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_25E6C2450()
{
  return MEMORY[0x270FA0968]();
}

uint64_t sub_25E6C2460()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_25E6C2470()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_25E6C2480()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_25E6C2490()
{
  return MEMORY[0x270F9D220]();
}

uint64_t sub_25E6C24A0()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_25E6C24B0()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_25E6C24C0()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_25E6C24D0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_25E6C24E0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_25E6C24F0()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_25E6C2500()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_25E6C2510()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_25E6C2520()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_25E6C2530()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_25E6C2540()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_25E6C2550()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_25E6C2560()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_25E6C2570()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_25E6C2580()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_25E6C2590()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_25E6C25A0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_25E6C25B0()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_25E6C25C0()
{
  return MEMORY[0x270F9D7C8]();
}

uint64_t sub_25E6C25D0()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_25E6C25E0()
{
  return MEMORY[0x270F9D880]();
}

uint64_t sub_25E6C25F0()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_25E6C2600()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_25E6C2610()
{
  return MEMORY[0x270F9D8D8]();
}

uint64_t sub_25E6C2620()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_25E6C2630()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_25E6C2640()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_25E6C2650()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_25E6C2660()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_25E6C2670()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_25E6C2680()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_25E6C2690()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_25E6C26A0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_25E6C26B0()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_25E6C26C0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_25E6C26D0()
{
  return MEMORY[0x270F9DDF0]();
}

uint64_t sub_25E6C26E0()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_25E6C26F0()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_25E6C2700()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_25E6C2710()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_25E6C2720()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_25E6C2730()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_25E6C2740()
{
  return MEMORY[0x270FA0CB0]();
}

uint64_t sub_25E6C2750()
{
  return MEMORY[0x270FA0CC0]();
}

uint64_t sub_25E6C2760()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_25E6C2770()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_25E6C2780()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_25E6C2790()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_25E6C27A0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_25E6C27B0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_25E6C27C0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_25E6C27D0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_25E6C27E0()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_25E6C27F0()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_25E6C2800()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_25E6C2810()
{
  return MEMORY[0x270F9EAA0]();
}

uint64_t sub_25E6C2820()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_25E6C2830()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_25E6C2840()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_25E6C2850()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_25E6C2860()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_25E6C2870()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_25E6C2880()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_25E6C2890()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_25E6C28A0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_25E6C28B0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_25E6C28C0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_25E6C28D0()
{
  return MEMORY[0x270F9F380]();
}

uint64_t sub_25E6C28E0()
{
  return MEMORY[0x270F9F4B0]();
}

uint64_t sub_25E6C28F0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_25E6C2900()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_25E6C2910()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_25E6C2920()
{
  return MEMORY[0x270F9F960]();
}

uint64_t sub_25E6C2930()
{
  return MEMORY[0x270F9F968]();
}

uint64_t sub_25E6C2940()
{
  return MEMORY[0x270F9F988]();
}

uint64_t sub_25E6C2950()
{
  return MEMORY[0x270F9F9B0]();
}

uint64_t sub_25E6C2960()
{
  return MEMORY[0x270F9F9B8]();
}

uint64_t sub_25E6C2970()
{
  return MEMORY[0x270F9F9D8]();
}

uint64_t sub_25E6C2980()
{
  return MEMORY[0x270F9FA00]();
}

uint64_t sub_25E6C2990()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_25E6C29A0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_25E6C29B0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_25E6C29C0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_25E6C29D0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_25E6C29E0()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_25E6C29F0()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_25E6C2A00()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_25E6C2A10()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_25E6C2A20()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_25E6C2A30()
{
  return MEMORY[0x270FA0090]();
}

uint64_t sub_25E6C2A40()
{
  return MEMORY[0x270FA0098]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B490](a1, *(void *)&a2, a3, *(void *)&n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x270F9B4A0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x270F9B4B0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x270F9B4B8](a1, *(void *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B4C0](a1);
}

int sqlite3_bind_parameter_index(sqlite3_stmt *a1, const char *zName)
{
  return MEMORY[0x270F9B4C8](a1, zName);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B4E0](a1, *(void *)&a2, a3, *(void *)&a4, a5);
}

int sqlite3_busy_handler(sqlite3 *a1, int (__cdecl *a2)(void *, int), void *a3)
{
  return MEMORY[0x270F9B530](a1, a2, a3);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x270F9B538](a1, *(void *)&ms);
}

int sqlite3_changes(sqlite3 *a1)
{
  return MEMORY[0x270F9B540](a1);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B550](a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x270F9B558](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x270F9B568](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B570](a1, *(void *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B580](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  MEMORY[0x270F9B590](a1, *(void *)&iCol);
  return result;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5A0](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x270F9B5A8](a1, *(void *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B5C0](a1, *(void *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5D0](a1, *(void *)&iCol);
}

void *__cdecl sqlite3_commit_hook(sqlite3 *a1, int (__cdecl *a2)(void *), void *a3)
{
  return (void *)MEMORY[0x270F9B5E0](a1, a2, a3);
}

int sqlite3_create_collation_v2(sqlite3 *a1, const char *zName, int eTextRep, void *pArg, int (__cdecl *xCompare)(void *, int, const void *, int, const void *), void (__cdecl *xDestroy)(void *))
{
  return MEMORY[0x270F9B5F8](a1, zName, *(void *)&eTextRep, pArg, xCompare, xDestroy);
}

int sqlite3_create_function_v2(sqlite3 *db, const char *zFunctionName, int nArg, int eTextRep, void *pApp, void (__cdecl *xFunc)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xStep)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xFinal)(sqlite3_context *), void (__cdecl *xDestroy)(void *))
{
  return MEMORY[0x270F9B608](db, zFunctionName, *(void *)&nArg, *(void *)&eTextRep, pApp, xFunc, xStep, xFinal);
}

const char *__cdecl sqlite3_db_filename(sqlite3 *db, const char *zDbName)
{
  return (const char *)MEMORY[0x270F9B620](db, zDbName);
}

int sqlite3_db_readonly(sqlite3 *db, const char *zDbName)
{
  return MEMORY[0x270F9B630](db, zDbName);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x270F9B658](a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x270F9B668](a1, sql, callback, a4, errmsg);
}

char *__cdecl sqlite3_expanded_sql(sqlite3_stmt *pStmt)
{
  return (char *)MEMORY[0x270F9B670](pStmt);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B690](pStmt);
}

void sqlite3_free(void *a1)
{
}

void sqlite3_interrupt(sqlite3 *a1)
{
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x270F9B6D0](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x270F9B710](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x270F9B720](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B730](pStmt);
}

void sqlite3_result_blob(sqlite3_context *a1, const void *a2, int a3, void (__cdecl *a4)(void *))
{
}

void sqlite3_result_double(sqlite3_context *a1, double a2)
{
}

void sqlite3_result_int64(sqlite3_context *a1, sqlite3_int64 a2)
{
}

void sqlite3_result_null(sqlite3_context *a1)
{
}

void sqlite3_result_text(sqlite3_context *a1, const char *a2, int a3, void (__cdecl *a4)(void *))
{
}

void *__cdecl sqlite3_rollback_hook(sqlite3 *a1, void (__cdecl *a2)(void *), void *a3)
{
  return (void *)MEMORY[0x270F9B7A8](a1, a2, a3);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x270F9B7F8](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B800](a1);
}

int sqlite3_trace_v2(sqlite3 *a1, unsigned int uMask, int (__cdecl *xCallback)(unsigned int, void *, void *, void *), void *pCtx)
{
  return MEMORY[0x270F9B840](a1, *(void *)&uMask, xCallback, pCtx);
}

void *__cdecl sqlite3_update_hook(sqlite3 *a1, void (__cdecl *a2)(void *, int, const char *, const char *, sqlite3_int64), void *a3)
{
  return (void *)MEMORY[0x270F9B850](a1, a2, a3);
}

void *__cdecl sqlite3_user_data(sqlite3_context *a1)
{
  return (void *)MEMORY[0x270F9B868](a1);
}

const void *__cdecl sqlite3_value_blob(sqlite3_value *a1)
{
  return (const void *)MEMORY[0x270F9B870](a1);
}

int sqlite3_value_bytes(sqlite3_value *a1)
{
  return MEMORY[0x270F9B878](a1);
}

double sqlite3_value_double(sqlite3_value *a1)
{
  MEMORY[0x270F9B888](a1);
  return result;
}

sqlite3_int64 sqlite3_value_int64(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8A8](a1);
}

const unsigned __int8 *__cdecl sqlite3_value_text(sqlite3_value *a1)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B8C0](a1);
}

int sqlite3_value_type(sqlite3_value *a1)
{
  return MEMORY[0x270F9B8D0](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}